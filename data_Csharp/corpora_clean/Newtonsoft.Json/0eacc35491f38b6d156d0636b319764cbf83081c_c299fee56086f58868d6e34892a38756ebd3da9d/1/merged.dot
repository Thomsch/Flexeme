digraph  {
m0_6 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="CollectionUtils.cs"];
m0_7 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="CollectionUtils.cs"];
m0_8 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="CollectionUtils.cs"];
m0_9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="CollectionUtils.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Example()", span="48-48", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Example()", file="CollectionUtils.cs"];
m0_1 [label="Person person = new Person\r\n            {\r\n                FirstName = ''Sarah'',\r\n                LastName = ''Security''\r\n            }", span="51-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Example()", file="CollectionUtils.cs"];
m0_2 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="57-60", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Example()", file="CollectionUtils.cs"];
m0_3 [label="Console.WriteLine(json)", span="62-62", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Example()", file="CollectionUtils.cs"];
m0_4 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Example()", span="48-48", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Example()", file="CollectionUtils.cs"];
m0_5 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver.Person.Person()", file="CollectionUtils.cs"];
m1_6 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="DefaultContractResolver.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.SerializeXmlNode()", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.SerializeXmlNode()", file="DefaultContractResolver.cs"];
m1_1 [label="string xml = @''<?xml version='1.0' standalone='no'?>\r\n            <root>\r\n              <person id='1'>\r\n              <name>Alan</name>\r\n              <url>http://www.google.com</url>\r\n              </person>\r\n              <person id='2'>\r\n              <name>Louis</name>\r\n              <url>http://www.yahoo.com</url>\r\n              </person>\r\n            </root>''", span="61-71", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.SerializeXmlNode()", file="DefaultContractResolver.cs"];
m1_2 [label="XmlDocument doc = new XmlDocument()", span="73-73", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.SerializeXmlNode()", file="DefaultContractResolver.cs"];
m1_3 [label="doc.LoadXml(xml)", span="74-74", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.SerializeXmlNode()", file="DefaultContractResolver.cs"];
m1_4 [label="string jsonText = JsonConvert.SerializeXmlNode(doc)", span="76-76", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.SerializeXmlNode()", file="DefaultContractResolver.cs"];
m1_5 [label="Exit Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.SerializeXmlNode()", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.SerializeXmlNode()", file="DefaultContractResolver.cs"];
m1_8 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="DefaultContractResolver.cs"];
m1_9 [label="Entry Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.DeserializeXmlNode()", span="100-100", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.DeserializeXmlNode()", file="DefaultContractResolver.cs"];
m1_10 [label="string json = @''{\r\n              '?xml': {\r\n                '@version': '1.0',\r\n                '@standalone': 'no'\r\n              },\r\n              'root': {\r\n                'person': [\r\n                  {\r\n                    '@id': '1',\r\n                    'name': 'Alan',\r\n                    'url': 'http://www.google.com'\r\n                  },\r\n                  {\r\n                    '@id': '2',\r\n                    'name': 'Louis',\r\n                    'url': 'http://www.yahoo.com'\r\n                  }\r\n                ]\r\n              }\r\n            }''", span="103-122", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.DeserializeXmlNode()", file="DefaultContractResolver.cs"];
m1_11 [label="XmlDocument doc = (XmlDocument)JsonConvert.DeserializeXmlNode(json)", span="124-124", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.DeserializeXmlNode()", file="DefaultContractResolver.cs"];
m1_12 [label="Exit Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.DeserializeXmlNode()", span="100-100", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.DeserializeXmlNode()", file="DefaultContractResolver.cs"];
m1_14 [label="Entry Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", span="139-139", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_15 [label="string xml = @''<person id='1'>\r\n			  <name>Alan</name>\r\n			  <url>http://www.google.com</url>\r\n			  <role>Admin1</role>\r\n			</person>''", span="142-146", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_16 [label="XmlDocument doc = new XmlDocument()", span="148-148", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_17 [label="doc.LoadXml(xml)", span="149-149", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_18 [label="string json = JsonConvert.SerializeXmlNode(doc)", span="151-151", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_19 [label="xml = @''<person xmlns:json='http://james.newtonking.com/projects/json' id='1'>\r\n			  <name>Alan</name>\r\n			  <url>http://www.google.com</url>\r\n			  <role json:Array='true'>Admin</role>\r\n			</person>''", span="161-165", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_20 [label="doc = new XmlDocument()", span="167-167", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_21 [label="doc.LoadXml(xml)", span="168-168", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_22 [label="json = JsonConvert.SerializeXmlNode(doc)", span="170-170", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_23 [label="Exit Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", span="139-139", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="DefaultContractResolver.cs"];
m1_13 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="1014-1014", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="DefaultContractResolver.cs"];
m1_7 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="DefaultContractResolver.cs"];
m2_40 [label="Entry System.Collections.Generic.IList<T>.AddDistinct<T>(T)", span="264-264", cluster="System.Collections.Generic.IList<T>.AddDistinct<T>(T)", file="DynamicTests.cs"];
m2_34 [label="Entry Newtonsoft.Json.Utilities.MathUtils.Max(int?, int?)", span="63-63", cluster="Newtonsoft.Json.Utilities.MathUtils.Max(int?, int?)", file="DynamicTests.cs"];
m2_5 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", span="62-62", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", file="DynamicTests.cs"];
m2_6 [label="JsonSchemaModel model = new JsonSchemaModel()", span="64-64", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", file="DynamicTests.cs"];
m2_7 [label=schemata, span="66-66", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", file="DynamicTests.cs"];
m2_8 [label="Combine(model, schema)", span="68-68", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", file="DynamicTests.cs"];
m2_9 [label="return model;", span="71-71", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", file="DynamicTests.cs"];
m2_10 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", span="62-62", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", file="DynamicTests.cs"];
m2_39 [label="Entry System.Collections.Generic.IList<T>.AddRangeDistinct<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="296-296", cluster="System.Collections.Generic.IList<T>.AddRangeDistinct<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="DynamicTests.cs"];
m2_11 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", span="74-74", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_12 [label="model.Required = model.Required || (schema.Required ?? false)", span="77-77", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_13 [label="model.Type = model.Type & (schema.Type ?? JsonSchemaType.Any)", span="78-78", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_14 [label="model.MinimumLength = MathUtils.Max(model.MinimumLength, schema.MinimumLength)", span="80-80", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_15 [label="model.MaximumLength = MathUtils.Min(model.MaximumLength, schema.MaximumLength)", span="81-81", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_16 [label="model.DivisibleBy = MathUtils.Max(model.DivisibleBy, schema.DivisibleBy)", span="84-84", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_17 [label="model.Minimum = MathUtils.Max(model.Minimum, schema.Minimum)", span="86-86", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_18 [label="model.Maximum = MathUtils.Max(model.Maximum, schema.Maximum)", span="87-87", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_19 [label="model.ExclusiveMinimum = model.ExclusiveMinimum || (schema.ExclusiveMinimum ?? false)", span="88-88", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_20 [label="model.ExclusiveMaximum = model.ExclusiveMaximum || (schema.ExclusiveMaximum ?? false)", span="89-89", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_21 [label="model.MinimumItems = MathUtils.Max(model.MinimumItems, schema.MinimumItems)", span="91-91", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_22 [label="model.MaximumItems = MathUtils.Min(model.MaximumItems, schema.MaximumItems)", span="92-92", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_23 [label="model.AllowAdditionalProperties = model.AllowAdditionalProperties && schema.AllowAdditionalProperties", span="93-93", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_24 [label="schema.Enum != null", span="94-94", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_25 [label="model.Enum == null", span="96-96", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_26 [label="model.Enum = new List<JToken>()", span="97-97", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_27 [label="model.Enum.AddRangeDistinct(schema.Enum, new JTokenEqualityComparer())", span="99-99", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_28 [label="model.Disallow = model.Disallow | (schema.Disallow ?? JsonSchemaType.None)", span="101-101", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_29 [label="schema.Pattern != null", span="103-103", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_30 [label="model.Patterns == null", span="105-105", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_31 [label="model.Patterns = new List<string>()", span="106-106", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_32 [label="model.Patterns.AddDistinct(schema.Pattern)", span="108-108", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_33 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", span="74-74", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Combine(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchema)", file="DynamicTests.cs"];
m2_36 [label="Entry Newtonsoft.Json.Utilities.MathUtils.Max(double?, double?)", span="73-73", cluster="Newtonsoft.Json.Utilities.MathUtils.Max(double?, double?)", file="DynamicTests.cs"];
m2_0 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModel.JsonSchemaModel()", span="55-55", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.JsonSchemaModel()", file="DynamicTests.cs"];
m2_1 [label="Type = JsonSchemaType.Any", span="57-57", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.JsonSchemaModel()", file="DynamicTests.cs"];
m2_2 [label="AllowAdditionalProperties = true", span="58-58", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.JsonSchemaModel()", file="DynamicTests.cs"];
m2_3 [label="Required = false", span="59-59", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.JsonSchemaModel()", file="DynamicTests.cs"];
m2_4 [label="Exit Newtonsoft.Json.Schema.JsonSchemaModel.JsonSchemaModel()", span="55-55", cluster="Newtonsoft.Json.Schema.JsonSchemaModel.JsonSchemaModel()", file="DynamicTests.cs"];
m2_37 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DynamicTests.cs"];
m2_35 [label="Entry Newtonsoft.Json.Utilities.MathUtils.Min(int?, int?)", span="53-53", cluster="Newtonsoft.Json.Utilities.MathUtils.Min(int?, int?)", file="DynamicTests.cs"];
m2_38 [label="Entry Newtonsoft.Json.Linq.JTokenEqualityComparer.JTokenEqualityComparer()", span="10-10", cluster="Newtonsoft.Json.Linq.JTokenEqualityComparer.JTokenEqualityComparer()", file="DynamicTests.cs"];
m2_41 [label="Newtonsoft.Json.Schema.JsonSchemaModel", span="", file="DynamicTests.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", span="34-34", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="FSharpUtils.cs"];
m3_1 [label="List<string> videogames = new List<string>\r\n            {\r\n                ''Starcraft'',\r\n                ''Halo'',\r\n                ''Legend of Zelda''\r\n            }", span="37-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="FSharpUtils.cs"];
m3_2 [label="string json = JsonConvert.SerializeObject(videogames)", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="FSharpUtils.cs"];
m3_3 [label="Console.WriteLine(json)", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="FSharpUtils.cs"];
m3_4 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", span="34-34", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="FSharpUtils.cs"];
m3_5 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="FSharpUtils.cs"];
m3_6 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="FSharpUtils.cs"];
m3_7 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="FSharpUtils.cs"];
m4_25 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="ImmutableCollectionsUtils.cs"];
m4_36 [label="Entry Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", span="131-131", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_37 [label="underlyingType.IsGenericType()", span="133-133", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_38 [label="string name = underlyingType.GetGenericTypeDefinition().FullName", span="135-135", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_46 [label="createdType = createdTypeDefinition.MakeGenericType(keyItemType, valueItemType)", span="151-151", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_47 [label="parameterizedCreator = mb.MakeGenericMethod(keyItemType, valueItemType)", span="152-152", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", color=red, community=0, file="ImmutableCollectionsUtils.cs"];
m4_49 [label="createdType = null", span="159-159", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_39 [label="ImmutableCollectionTypeInfo definition = DictionaryContractImmutableCollectionDefinitions.FirstOrDefault(d => d.ContractTypeName == name)", span="136-136", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_40 [label="definition != null", span="137-137", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_41 [label="Type createdTypeDefinition = Type.GetType(definition.CreatedTypeName + '', System.Collections.Immutable'')", span="139-139", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_42 [label="Type builderTypeDefinition = Type.GetType(definition.BuilderTypeName + '', System.Collections.Immutable'')", span="140-140", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_43 [label="createdTypeDefinition != null && builderTypeDefinition != null", span="141-141", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_44 [label="MethodInfo mb = builderTypeDefinition.GetMethods().FirstOrDefault(m =>\r\n                        {\r\n                            ParameterInfo[] parameters = m.GetParameters();\r\n\r\n                            return m.Name == ''CreateRange'' && parameters.Length == 1 && parameters[0].ParameterType.IsGenericType() && parameters[0].ParameterType.GetGenericTypeDefinition() == typeof(IEnumerable<>);\r\n                        })", span="143-148", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_45 [label="mb != null", span="149-149", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_48 [label="return true;", span="153-153", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_50 [label="parameterizedCreator = null", span="160-160", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_51 [label="return false;", span="161-161", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_52 [label="Exit Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", span="131-131", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_5 [label="Entry Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", span="103-103", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_6 [label="underlyingType.IsGenericType()", span="105-105", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_7 [label="string name = underlyingType.GetGenericTypeDefinition().FullName", span="107-107", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_15 [label="createdType = createdTypeDefinition.MakeGenericType(collectionItemType)", span="118-118", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_16 [label="parameterizedCreator = mb.MakeGenericMethod(collectionItemType)", span="119-119", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", color=red, community=0, file="ImmutableCollectionsUtils.cs"];
m4_18 [label="createdType = null", span="126-126", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_8 [label="ImmutableCollectionTypeInfo definition = ArrayContractImmutableCollectionDefinitions.FirstOrDefault(d => d.ContractTypeName == name)", span="108-108", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_9 [label="definition != null", span="109-109", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_10 [label="Type createdTypeDefinition = Type.GetType(definition.CreatedTypeName + '', System.Collections.Immutable'')", span="111-111", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_11 [label="Type builderTypeDefinition = Type.GetType(definition.BuilderTypeName + '', System.Collections.Immutable'')", span="112-112", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_12 [label="createdTypeDefinition != null && builderTypeDefinition != null", span="113-113", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_13 [label="MethodInfo mb = builderTypeDefinition.GetMethods().FirstOrDefault(m => m.Name == ''CreateRange'' && m.GetParameters().Length == 1)", span="115-115", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_14 [label="mb != null", span="116-116", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_17 [label="return true;", span="120-120", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_19 [label="parameterizedCreator = null", span="127-127", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_20 [label="return false;", span="128-128", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_21 [label="Exit Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", span="103-103", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="ImmutableCollectionsUtils.cs"];
m4_26 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="ImmutableCollectionsUtils.cs"];
m4_0 [label="Entry Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo.ImmutableCollectionTypeInfo(string, string, string)", span="39-39", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo.ImmutableCollectionTypeInfo(string, string, string)", file="ImmutableCollectionsUtils.cs"];
m4_1 [label="ContractTypeName = contractTypeName", span="41-41", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo.ImmutableCollectionTypeInfo(string, string, string)", file="ImmutableCollectionsUtils.cs"];
m4_2 [label="CreatedTypeName = createdTypeName", span="42-42", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo.ImmutableCollectionTypeInfo(string, string, string)", file="ImmutableCollectionsUtils.cs"];
m4_3 [label="BuilderTypeName = builderTypeName", span="43-43", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo.ImmutableCollectionTypeInfo(string, string, string)", file="ImmutableCollectionsUtils.cs"];
m4_4 [label="Exit Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo.ImmutableCollectionTypeInfo(string, string, string)", span="39-39", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo.ImmutableCollectionTypeInfo(string, string, string)", file="ImmutableCollectionsUtils.cs"];
m4_56 [label="Entry lambda expression", span="143-148", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_30 [label="d.ContractTypeName == name", span="108-108", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_29 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_32 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_31 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_33 [label="m.Name == ''CreateRange'' && m.GetParameters().Length == 1", span="115-115", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_34 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_54 [label="d.ContractTypeName == name", span="136-136", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_53 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_55 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_57 [label="ParameterInfo[] parameters = m.GetParameters()", span="145-145", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_58 [label="return m.Name == ''CreateRange'' && parameters.Length == 1 && parameters[0].ParameterType.IsGenericType() && parameters[0].ParameterType.GetGenericTypeDefinition() == typeof(IEnumerable<>);", span="147-147", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_59 [label="Exit lambda expression", span="143-148", cluster="lambda expression", file="ImmutableCollectionsUtils.cs"];
m4_27 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="ImmutableCollectionsUtils.cs"];
m4_35 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="ImmutableCollectionsUtils.cs"];
m4_24 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="ImmutableCollectionsUtils.cs"];
m4_22 [label="Entry System.Type.IsGenericType()", span="125-125", cluster="System.Type.IsGenericType()", file="ImmutableCollectionsUtils.cs"];
m4_23 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="ImmutableCollectionsUtils.cs"];
m4_28 [label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0", cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", file="ImmutableCollectionsUtils.cs"];
m4_60 [label="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo", span="", file="ImmutableCollectionsUtils.cs"];
m4_61 [label=name, span="", file="ImmutableCollectionsUtils.cs"];
m4_62 [label=name, span="", file="ImmutableCollectionsUtils.cs"];
m5_105 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", span="212-212", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_106 [label="JObject o = new JObject()", span="214-214", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_107 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="215-215", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_108 [label="Assert.AreEqual(1, o.Children().Count())", span="216-216", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_109 [label="JProperty p = (JProperty)o.Children().ElementAt(0)", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_110 [label="((ICollection<KeyValuePair<string, JToken>>)o).Clear()", span="220-220", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_111 [label="Assert.AreEqual(0, o.Children().Count())", span="221-221", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_112 [label="Assert.AreEqual(null, p.Parent)", span="223-223", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_113 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", span="212-212", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m5_733 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", span="1224-1224", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", file="JObjectTests.cs"];
m5_734 [label="IList<JToken> l = new JObject()", span="1226-1226", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", file="JObjectTests.cs"];
m5_735 [label="Assert.IsFalse(l.IsReadOnly)", span="1227-1227", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", file="JObjectTests.cs"];
m5_736 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", span="1224-1224", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", file="JObjectTests.cs"];
m5_141 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", span="262-262", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_142 [label="JObject o = new JObject()", span="264-264", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_143 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="265-265", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_144 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="266-266", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_145 [label="o.Add(''PropertyNameValue3'', new JValue(3))", span="267-267", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_146 [label="Assert.AreEqual(3, o.Children().Count())", span="268-268", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_148 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(a, 1)", span="272-272", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_147 [label="KeyValuePair<string, JToken>[] a = new KeyValuePair<string, JToken>[5]", span="270-270", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_149 [label="Assert.AreEqual(default(KeyValuePair<string, JToken>), a[0])", span="274-274", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_150 [label="Assert.AreEqual(''PropertyNameValue'', a[1].Key)", span="276-276", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_151 [label="Assert.AreEqual(1, (int)a[1].Value)", span="277-277", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_152 [label="Assert.AreEqual(''PropertyNameValue2'', a[2].Key)", span="279-279", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_153 [label="Assert.AreEqual(2, (int)a[2].Value)", span="280-280", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_154 [label="Assert.AreEqual(''PropertyNameValue3'', a[3].Key)", span="282-282", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_155 [label="Assert.AreEqual(3, (int)a[3].Value)", span="283-283", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_156 [label="Assert.AreEqual(default(KeyValuePair<string, JToken>), a[4])", span="285-285", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_157 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", span="262-262", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m5_1063 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JObjectTests.cs"];
m5_1158 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="JObjectTests.cs"];
m5_1085 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JObjectTests.cs"];
m5_1007 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", span="1713-1713", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1008 [label="JObject o = JObject.Parse(''{'prop1':12,'prop2':'hi!','prop3':null,'prop4':[1,2,3]}'')", span="1715-1715", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1009 [label="ICustomTypeDescriptor descriptor = o", span="1717-1717", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1016 [label="Assert.AreEqual(false, prop1.CanResetValue(o))", span="1726-1726", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1017 [label="Assert.AreEqual(false, prop1.ShouldSerializeValue(o))", span="1727-1727", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1022 [label="Assert.AreEqual(false, prop2.CanResetValue(o))", span="1733-1733", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1023 [label="Assert.AreEqual(false, prop2.ShouldSerializeValue(o))", span="1734-1734", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1028 [label="Assert.AreEqual(false, prop3.CanResetValue(o))", span="1740-1740", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1029 [label="Assert.AreEqual(false, prop3.ShouldSerializeValue(o))", span="1741-1741", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1034 [label="Assert.AreEqual(false, prop4.CanResetValue(o))", span="1747-1747", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1035 [label="Assert.AreEqual(false, prop4.ShouldSerializeValue(o))", span="1748-1748", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1010 [label="PropertyDescriptorCollection properties = descriptor.GetProperties()", span="1719-1719", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1011 [label="Assert.AreEqual(4, properties.Count)", span="1720-1720", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1012 [label="PropertyDescriptor prop1 = properties[0]", span="1722-1722", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1018 [label="PropertyDescriptor prop2 = properties[1]", span="1729-1729", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1024 [label="PropertyDescriptor prop3 = properties[2]", span="1736-1736", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1030 [label="PropertyDescriptor prop4 = properties[3]", span="1743-1743", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1013 [label="Assert.AreEqual(''prop1'', prop1.Name)", span="1723-1723", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1014 [label="Assert.AreEqual(typeof(object), prop1.PropertyType)", span="1724-1724", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1015 [label="Assert.AreEqual(typeof(JObject), prop1.ComponentType)", span="1725-1725", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1019 [label="Assert.AreEqual(''prop2'', prop2.Name)", span="1730-1730", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1020 [label="Assert.AreEqual(typeof(object), prop2.PropertyType)", span="1731-1731", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1021 [label="Assert.AreEqual(typeof(JObject), prop2.ComponentType)", span="1732-1732", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1025 [label="Assert.AreEqual(''prop3'', prop3.Name)", span="1737-1737", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1026 [label="Assert.AreEqual(typeof(object), prop3.PropertyType)", span="1738-1738", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1027 [label="Assert.AreEqual(typeof(JObject), prop3.ComponentType)", span="1739-1739", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1031 [label="Assert.AreEqual(''prop4'', prop4.Name)", span="1744-1744", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1032 [label="Assert.AreEqual(typeof(object), prop4.PropertyType)", span="1745-1745", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1033 [label="Assert.AreEqual(typeof(JObject), prop4.ComponentType)", span="1746-1746", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_1036 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", span="1713-1713", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m5_781 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", span="1306-1306", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", file="JObjectTests.cs"];
m5_782 [label="IBindingList l = new JObject()", span="1308-1308", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", file="JObjectTests.cs"];
m5_783 [label="Assert.AreEqual(true, l.AllowNew)", span="1309-1309", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", file="JObjectTests.cs"];
m5_784 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", span="1306-1306", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", file="JObjectTests.cs"];
m5_862 [label="Entry System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", span="0-0", cluster="System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", file="JObjectTests.cs"];
m5_1168 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JObjectTests.cs"];
m5_166 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", span="302-302", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", file="JObjectTests.cs"];
m5_167 [label="ExceptionAssert.Throws<ArgumentOutOfRangeException>(\r\n                @''arrayIndex is less than 0.\r\nParameter name: arrayIndex'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], -1);\r\n                })", span="304-311", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", file="JObjectTests.cs"];
m5_168 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", span="302-302", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", file="JObjectTests.cs"];
m5_279 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", span="485-485", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_280 [label="JObject o = new JObject()", span="487-487", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_281 [label="o.Add(''PropertyNameValue1'', new JValue(1))", span="488-488", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_282 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="489-489", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_283 [label="JToken t = o", span="491-491", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_284 [label="int i = 1", span="493-493", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_285 [label=t, span="494-494", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_286 [label="Assert.AreEqual(''PropertyNameValue'' + i, property.Name)", span="496-496", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_287 [label="Assert.AreEqual(i, (int)property.Value)", span="497-497", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_288 [label="i++", span="499-499", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_289 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", span="485-485", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m5_576 [label="Entry System.Collections.IList.Insert(int, object)", span="0-0", cluster="System.Collections.IList.Insert(int, object)", file="JObjectTests.cs"];
m5_863 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JObjectTests.cs"];
m5_225 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JObjectTests.cs"];
m5_641 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", span="1078-1078", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m5_642 [label="JProperty p = new JProperty(''Test'', 1)", span="1080-1080", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m5_643 [label="IList<JToken> l = new JObject(p)", span="1081-1081", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m5_644 [label="Assert.AreEqual(1, l.Count)", span="1083-1083", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m5_645 [label="l.Clear()", span="1085-1085", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m5_646 [label="Assert.AreEqual(0, l.Count)", span="1087-1087", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m5_647 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", span="1078-1078", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m5_246 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JObjectTests.cs"];
m5_694 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", span="1166-1166", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_695 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1168-1168", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_696 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1169-1169", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_697 [label="IList<JToken> l = new JObject(p1, p2)", span="1170-1170", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_701 [label="Assert.IsTrue(l.Remove(p1))", span="1178-1178", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_703 [label="Assert.IsFalse(l.Contains(p1))", span="1180-1180", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_704 [label="Assert.IsTrue(l.Contains(p2))", span="1181-1181", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_705 [label="Assert.IsTrue(l.Remove(p2))", span="1183-1183", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_707 [label="Assert.IsFalse(l.Contains(p2))", span="1185-1185", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_708 [label="Assert.AreEqual(null, p2.Parent)", span="1186-1186", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_698 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1172-1172", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_699 [label="Assert.IsFalse(l.Remove(p3))", span="1175-1175", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_700 [label="Assert.AreEqual(2, l.Count)", span="1176-1176", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_702 [label="Assert.AreEqual(1, l.Count)", span="1179-1179", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_706 [label="Assert.AreEqual(0, l.Count)", span="1184-1184", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_709 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", span="1166-1166", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m5_1150 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JObjectTests.cs"];
m5_920 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m5_921 [label="string json = @''{\r\n  ''''name'''': ''''Address: 435 North Mulford Road Rockford, IL 61107'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [ {\r\n    ''''id'''': ''''p1'''',\r\n    ''''address'''': ''''435 N Mulford Rd, Rockford, IL 61107, USA'''',\r\n    ''''AddressDetails'''': {\r\n   ''''Accuracy'''' : 8,\r\n   ''''Country'''' : {\r\n      ''''AdministrativeArea'''' : {\r\n         ''''AdministrativeAreaName'''' : ''''IL'''',\r\n         ''''SubAdministrativeArea'''' : {\r\n            ''''Locality'''' : {\r\n               ''''LocalityName'''' : ''''Rockford'''',\r\n               ''''PostalCode'''' : {\r\n                  ''''PostalCodeNumber'''' : ''''61107''''\r\n               },\r\n               ''''Thoroughfare'''' : {\r\n                  ''''ThoroughfareName'''' : ''''435 N Mulford Rd''''\r\n               }\r\n            },\r\n            ''''SubAdministrativeAreaName'''' : ''''Winnebago''''\r\n         }\r\n      },\r\n      ''''CountryName'''' : ''''USA'''',\r\n      ''''CountryNameCode'''' : ''''US''''\r\n   }\r\n},\r\n    ''''ExtendedData'''': {\r\n      ''''LatLonBox'''': {\r\n        ''''north'''': 42.2753076,\r\n        ''''south'''': 42.2690124,\r\n        ''''east'''': -88.9964645,\r\n        ''''west'''': -89.0027597\r\n      }\r\n    },\r\n    ''''Point'''': {\r\n      ''''coordinates'''': [ -88.9995886, 42.2721596, 0 ]\r\n    }\r\n  } ]\r\n}''", span="1508-1551", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m5_922 [label="JObject o = JObject.Parse(json)", span="1553-1553", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m5_923 [label="string searchAddress = (string)o[''Placemark''][0][''AddressDetails''][''Country''][''AdministrativeArea''][''SubAdministrativeArea''][''Locality''][''Thoroughfare''][''ThoroughfareName'']", span="1555-1555", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m5_924 [label="Assert.AreEqual(''435 N Mulford Rd'', searchAddress)", span="1556-1556", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m5_925 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m5_133 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", span="251-251", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m5_134 [label="JObject o = new JObject()", span="253-253", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m5_135 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="254-254", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m5_136 [label="Assert.AreEqual(1, o.Children().Count())", span="255-255", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m5_137 [label="bool contains = ((IDictionary<string, JToken>)o).ContainsKey(''PropertyNameValue'')", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m5_138 [label="Assert.AreEqual(true, contains)", span="258-258", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m5_139 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", span="251-251", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m5_757 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", span="1264-1264", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", file="JObjectTests.cs"];
m5_758 [label="IBindingList l = new JObject()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", file="JObjectTests.cs"];
m5_759 [label="Assert.AreEqual(ListSortDirection.Ascending, l.SortDirection)", span="1267-1267", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", file="JObjectTests.cs"];
m5_760 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", span="1264-1264", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", file="JObjectTests.cs"];
m5_710 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", span="1190-1190", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_711 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1192-1192", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_712 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1193-1193", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_713 [label="IList<JToken> l = new JObject(p1, p2)", span="1194-1194", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_715 [label="l.Remove(p1)", span="1199-1199", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_717 [label="l.Remove(p2)", span="1202-1202", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_714 [label="l.RemoveAt(0)", span="1197-1197", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_716 [label="Assert.AreEqual(1, l.Count)", span="1200-1200", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_718 [label="Assert.AreEqual(0, l.Count)", span="1203-1203", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_719 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", span="1190-1190", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m5_265 [label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="311-311", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JObjectTests.cs"];
m5_333 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shortie.Shortie()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Shortie.Shortie()", file="JObjectTests.cs"];
m5_564 [label="Entry System.Collections.IList.RemoveAt(int)", span="0-0", cluster="System.Collections.IList.RemoveAt(int)", file="JObjectTests.cs"];
m5_801 [label="Entry System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", span="0-0", cluster="System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", file="JObjectTests.cs"];
m5_41 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_42 [label="JObject o = new JObject()", span="123-123", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_43 [label="o[''PropertyNameValue''] = new JValue(1)", span="124-124", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_44 [label="Assert.AreEqual(1, o.Children().Count())", span="125-125", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_46 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="128-128", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_48 [label="o[''PropertyNameValue''] = new JValue(2)", span="131-131", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_49 [label="Assert.AreEqual(1, o.Children().Count())", span="132-132", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_50 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_52 [label="o[''PropertyNameValue''] = null", span="137-137", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_53 [label="Assert.AreEqual(1, o.Children().Count())", span="138-138", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_54 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="140-140", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_45 [label="JToken t", span="127-127", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_47 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue(1), t))", span="129-129", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_51 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue(2), t))", span="135-135", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_55 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue((object)null), t))", span="141-141", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", color=red, community=0, file="JObjectTests.cs"];
m5_56 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m5_358 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JObjectTests.cs"];
m5_23 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", span="103-103", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_24 [label="JObject o = new JObject()", span="105-105", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_25 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_26 [label="Assert.AreEqual(1, o.Children().Count())", span="107-107", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_28 [label="Assert.AreEqual(false, o.TryGetValue(''sdf'', out t))", span="110-110", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_30 [label="Assert.AreEqual(false, o.TryGetValue(null, out t))", span="113-113", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_32 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="116-116", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_27 [label="JToken t", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_29 [label="Assert.AreEqual(null, t)", span="111-111", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_31 [label="Assert.AreEqual(null, t)", span="114-114", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_33 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue(1), t))", span="117-117", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_34 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", span="103-103", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m5_115 [label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()", file="JObjectTests.cs"];
m5_383 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JObjectTests.cs"];
m5_577 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", span="976-976", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", file="JObjectTests.cs"];
m5_578 [label="IList l = new JObject()", span="978-978", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", file="JObjectTests.cs"];
m5_579 [label="Assert.IsFalse(l.IsReadOnly)", span="979-979", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", file="JObjectTests.cs"];
m5_580 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", span="976-976", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", file="JObjectTests.cs"];
m5_684 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", span="1150-1150", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", file="JObjectTests.cs"];
m5_685 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add property Test2 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList<JToken> l = new JObject(p1, p2);\r\n\r\n                    JProperty p3 = new JProperty(''Test2'', ''II'');\r\n\r\n                    l.Add(p3);\r\n                })", span="1152-1162", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", file="JObjectTests.cs"];
m5_686 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", span="1150-1150", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", file="JObjectTests.cs"];
m5_472 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JObjectTests.cs"];
m5_1039 [label="Entry System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(object)", file="JObjectTests.cs"];
m5_1057 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JObjectTests.cs"];
m5_581 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", span="983-983", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", file="JObjectTests.cs"];
m5_582 [label="IList l = new JObject()", span="985-985", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", file="JObjectTests.cs"];
m5_583 [label="Assert.IsFalse(l.IsFixedSize)", span="986-986", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", file="JObjectTests.cs"];
m5_584 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", span="983-983", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", file="JObjectTests.cs"];
m5_199 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JObjectTests.cs"];
m5_238 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JObjectTests.cs"];
m5_1040 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", span="1753-1753", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", file="JObjectTests.cs"];
m5_1041 [label="JObject o = JObject.Parse(''{ /* A Comment */ }'')", span="1755-1755", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", file="JObjectTests.cs"];
m5_1042 [label="Assert.AreEqual(0, o.Count)", span="1756-1756", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", file="JObjectTests.cs"];
m5_1043 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", span="1753-1753", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", file="JObjectTests.cs"];
m5_810 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", span="1352-1352", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", file="JObjectTests.cs"];
m5_811 [label="IBindingList l = new JObject()", span="1354-1354", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", file="JObjectTests.cs"];
m5_812 [label="l.RemoveIndex(null)", span="1356-1356", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", file="JObjectTests.cs"];
m5_813 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", span="1352-1352", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", file="JObjectTests.cs"];
m5_605 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", span="1023-1023", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", file="JObjectTests.cs"];
m5_606 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                @''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    l[0] = new JValue(true);\r\n                })", span="1025-1034", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", file="JObjectTests.cs"];
m5_607 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", span="1023-1023", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", file="JObjectTests.cs"];
m5_765 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", span="1278-1278", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", file="JObjectTests.cs"];
m5_766 [label="IBindingList l = new JObject()", span="1280-1280", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", file="JObjectTests.cs"];
m5_767 [label="Assert.AreEqual(true, l.SupportsChangeNotification)", span="1281-1281", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", file="JObjectTests.cs"];
m5_768 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", span="1278-1278", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", file="JObjectTests.cs"];
m5_648 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", span="1091-1091", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_649 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1093-1093", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_650 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1094-1094", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_651 [label="IList<JToken> l = new JObject(p1, p2)", span="1095-1095", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_654 [label="Assert.AreEqual(p1, a[0])", span="1101-1101", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_655 [label="Assert.AreEqual(p2, a[1])", span="1102-1102", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_652 [label="JToken[] a = new JToken[l.Count]", span="1097-1097", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_653 [label="l.CopyTo(a, 0)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_656 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", span="1091-1091", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m5_945 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", span="1597-1597", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_946 [label="DBNull dbNull = DBNull.Value", span="1599-1599", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_947 [label="JValue v = new JValue(dbNull)", span="1600-1600", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_948 [label="Assert.AreEqual(DBNull.Value, v.Value)", span="1601-1601", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_949 [label="Assert.AreEqual(JTokenType.Null, v.Type)", span="1602-1602", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_951 [label="o[''title''] = v", span="1605-1605", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_950 [label="JObject o = new JObject()", span="1604-1604", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_952 [label="string output = o.ToString()", span="1607-1607", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_953 [label="Assert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1609-1611", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_954 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", span="1597-1597", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m5_1169 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JObjectTests.cs"];
m5_36 [label="Entry Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="443-443", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m5_12 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JObjectTests.cs"];
m5_253 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="690-690", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JObjectTests.cs"];
m5_994 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", span="1688-1688", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", file="JObjectTests.cs"];
m5_995 [label="ExceptionAssert.Throws<JsonReaderException>(''Unexpected end of content while loading JObject. Path 'short.error.code', line 6, position 15.'',\r\n                () =>\r\n                {\r\n                    string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0'';\r\n\r\n                    JsonReader reader = new JsonTextReader(new StringReader(jsonText));\r\n                    reader.Read();\r\n                    reader.Read();\r\n                    reader.Read();\r\n                    reader.Read();\r\n                    reader.Read();\r\n\r\n                    JToken.ReadFrom(reader);\r\n                })", span="1690-1708", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", file="JObjectTests.cs"];
m5_996 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", span="1688-1688", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", file="JObjectTests.cs"];
m5_90 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", span="188-188", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m5_91 [label="JObject o = new JObject()", span="190-190", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m5_92 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="192-192", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m5_93 [label="Assert.AreEqual(1, (int)o[''PropertyNameValue''])", span="193-193", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m5_94 [label="o.Add(''PropertyNameValue1'', null)", span="195-195", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m5_95 [label="Assert.AreEqual(null, ((JValue)o[''PropertyNameValue1'']).Value)", span="196-196", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m5_96 [label="Assert.AreEqual(2, o.Children().Count())", span="198-198", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m5_97 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", span="188-188", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m5_38 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JObjectTests.cs"];
m5_1087 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", span="1858-1858", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1088 [label="JObject o = JObject.Parse(@''{}'')", span="1860-1860", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1089 [label="IList<JToken> l1 = o.ToList<JToken>()", span="1861-1861", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1091 [label="IList<KeyValuePair<string, JToken>> l2 = o.ToList<KeyValuePair<string, JToken>>()", span="1864-1864", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1090 [label="Assert.AreEqual(0, l1.Count)", span="1862-1862", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1092 [label="Assert.AreEqual(0, l2.Count)", span="1865-1865", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1093 [label="o = JObject.Parse(@''{'hi':null}'')", span="1867-1867", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1094 [label="l1 = o.ToList<JToken>()", span="1869-1869", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1096 [label="l2 = o.ToList<KeyValuePair<string, JToken>>()", span="1872-1872", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1095 [label="Assert.AreEqual(1, l1.Count)", span="1870-1870", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1097 [label="Assert.AreEqual(1, l2.Count)", span="1873-1873", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_1098 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", span="1858-1858", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m5_855 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", span="1416-1416", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m5_856 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1418-1418", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m5_857 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1419-1419", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m5_858 [label="ITypedList l = new JObject(p1, p2)", span="1420-1420", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m5_859 [label="PropertyDescriptorCollection propertyDescriptors = l.GetItemProperties(null)", span="1422-1422", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m5_860 [label="Assert.IsNull(propertyDescriptors)", span="1423-1423", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m5_861 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", span="1416-1416", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m5_132 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JObjectTests.cs"];
m5_386 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", span="707-707", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_387 [label="object changing = null", span="709-709", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_388 [label="object changed = null", span="710-710", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_389 [label="int changingCount = 0", span="711-711", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_390 [label="int changedCount = 0", span="712-712", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_392 [label="o.PropertyChanging += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changing = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changingCount++;\r\n            }", span="715-720", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_391 [label="JObject o = new JObject()", span="714-714", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_393 [label="o.PropertyChanged += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changedCount++;\r\n            }", span="721-726", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_394 [label="o[''StringValue''] = ''value1''", span="728-728", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_397 [label="Assert.AreEqual(''value1'', (string)o[''StringValue''])", span="731-731", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_400 [label="o[''StringValue''] = ''value1''", span="735-735", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_403 [label="o[''StringValue''] = ''value2''", span="739-739", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_406 [label="Assert.AreEqual(''value2'', (string)o[''StringValue''])", span="742-742", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_409 [label="o[''StringValue''] = null", span="746-746", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_412 [label="Assert.AreEqual(null, (string)o[''StringValue''])", span="749-749", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_415 [label="o[''NullValue''] = null", span="753-753", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_418 [label="Assert.AreEqual(new JValue((object)null), o[''NullValue''])", span="756-756", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", color=red, community=0, file="JObjectTests.cs"];
m5_421 [label="o[''NullValue''] = null", span="760-760", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_395 [label="Assert.AreEqual(null, changing)", span="729-729", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_396 [label="Assert.AreEqual(''value1'', changed)", span="730-730", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_398 [label="Assert.AreEqual(1, changingCount)", span="732-732", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_399 [label="Assert.AreEqual(1, changedCount)", span="733-733", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_401 [label="Assert.AreEqual(1, changingCount)", span="736-736", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_402 [label="Assert.AreEqual(1, changedCount)", span="737-737", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_404 [label="Assert.AreEqual(''value1'', changing)", span="740-740", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_405 [label="Assert.AreEqual(''value2'', changed)", span="741-741", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_407 [label="Assert.AreEqual(2, changingCount)", span="743-743", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_408 [label="Assert.AreEqual(2, changedCount)", span="744-744", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_410 [label="Assert.AreEqual(''value2'', changing)", span="747-747", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_411 [label="Assert.AreEqual(null, changed)", span="748-748", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_413 [label="Assert.AreEqual(3, changingCount)", span="750-750", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_414 [label="Assert.AreEqual(3, changedCount)", span="751-751", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_416 [label="Assert.AreEqual(null, changing)", span="754-754", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_417 [label="Assert.AreEqual(null, changed)", span="755-755", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_419 [label="Assert.AreEqual(4, changingCount)", span="757-757", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_420 [label="Assert.AreEqual(4, changedCount)", span="758-758", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_422 [label="Assert.AreEqual(4, changingCount)", span="761-761", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_423 [label="Assert.AreEqual(4, changedCount)", span="762-762", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_424 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", span="707-707", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m5_793 [label="Entry System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)", span="0-0", cluster="System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)", file="JObjectTests.cs"];
m5_5 [label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="1860-1860", cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JObjectTests.cs"];
m5_247 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", span="434-434", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m5_248 [label="string json = @''[new Date(1207285200000)]''", span="436-436", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m5_249 [label="JArray a = (JArray)JsonConvert.DeserializeObject(json)", span="438-438", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m5_250 [label="JValue v = (JValue)a[0]", span="439-439", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m5_251 [label="Assert.AreEqual(DateTimeUtils.ConvertJavaScriptTicksToDateTime(1207285200000), (DateTime)v)", span="441-441", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m5_252 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", span="434-434", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m5_67 [label="Entry Newtonsoft.Json.Linq.JObject.Remove(string)", span="464-464", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObjectTests.cs"];
m5_1100 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", span="1877-1877", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_1101 [label="Assert.IsTrue(JToken.DeepEquals(new JObject(), new JObject()))", span="1879-1879", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_1102 [label="JObject a = new JObject()", span="1881-1881", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_1103 [label="JObject b = new JObject()", span="1882-1882", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_1106 [label="Assert.IsTrue(JToken.DeepEquals(a, b))", span="1887-1887", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_1107 [label="Assert.IsTrue(JToken.DeepEquals(b, a))", span="1888-1888", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_1104 [label="b.Add(''hi'', ''bye'')", span="1884-1884", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_1105 [label="b.Remove(''hi'')", span="1885-1885", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_1108 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", span="1877-1877", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m5_173 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", span="315-315", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="JObjectTests.cs"];
m5_174 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                @''arrayIndex is equal to or greater than the length of array.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], 1);\r\n                })", span="317-323", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="JObjectTests.cs"];
m5_175 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", span="315-315", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="JObjectTests.cs"];
m5_675 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", span="1135-1135", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", file="JObjectTests.cs"];
m5_676 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList<JToken> l = new JObject(p1, p2);\r\n\r\n                    // string is implicitly converted to JValue\r\n                    l.Add(''Bad!'');\r\n                })", span="1137-1146", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", file="JObjectTests.cs"];
m5_677 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", span="1135-1135", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", file="JObjectTests.cs"];
m5_732 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="JObjectTests.cs"];
m5_933 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m5_934 [label="object key = ''TestKey''", span="1573-1573", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m5_935 [label="JObject o = new JObject()", span="1575-1575", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m5_936 [label="o[key] = new JValue(3)", span="1576-1576", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m5_937 [label="Assert.AreEqual(3, (int)o[key])", span="1578-1578", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m5_938 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m5_785 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", span="1313-1313", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", file="JObjectTests.cs"];
m5_786 [label="IBindingList l = new JObject()", span="1315-1315", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", file="JObjectTests.cs"];
m5_787 [label="Assert.AreEqual(true, l.AllowRemove)", span="1316-1316", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", file="JObjectTests.cs"];
m5_788 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", span="1313-1313", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", file="JObjectTests.cs"];
m5_226 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JObjectTests.cs"];
m5_80 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JObjectTests.cs"];
m5_382 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="196-196", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JObjectTests.cs"];
m5_13 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="173-173", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JObjectTests.cs"];
m5_290 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", span="504-504", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_291 [label="JObject o = new JObject()", span="506-506", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_292 [label="o.Add(''PropertyNameValue1'', new JValue(1))", span="507-507", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_293 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="508-508", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_295 [label=o, span="511-511", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_294 [label="int i = 1", span="510-510", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_296 [label="Assert.AreEqual(''PropertyNameValue'' + i, pair.Key)", span="513-513", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_297 [label="Assert.AreEqual(i, (int)pair.Value)", span="514-514", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_298 [label="i++", span="516-516", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_299 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", span="504-504", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m5_769 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", span="1285-1285", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", file="JObjectTests.cs"];
m5_770 [label="IBindingList l = new JObject()", span="1287-1287", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", file="JObjectTests.cs"];
m5_771 [label="Assert.AreEqual(false, l.SupportsSearching)", span="1288-1288", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", file="JObjectTests.cs"];
m5_772 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", span="1285-1285", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", file="JObjectTests.cs"];
m5_809 [label="Entry System.ComponentModel.IBindingList.RemoveSort()", span="0-0", cluster="System.ComponentModel.IBindingList.RemoveSort()", file="JObjectTests.cs"];
m5_1155 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1959-1959", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1156 [label="throw new NotSupportedException(''This custom converter only supportes serialization and not deserialization.'');", span="1961-1961", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1157 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1959-1959", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_499 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", span="856-856", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_500 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="858-858", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_501 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="859-859", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_502 [label="IList l = new JObject(p1, p2)", span="860-860", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_503 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="862-862", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_504 [label="l.Add(p3)", span="864-864", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_505 [label="Assert.AreEqual(3, l.Count)", span="866-866", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_506 [label="Assert.AreEqual(p3, l[2])", span="867-867", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_507 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", span="856-856", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m5_1141 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="431-431", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m5_993 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="413-413", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JObjectTests.cs"];
m5_622 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", span="1048-1048", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m5_623 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1050-1050", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m5_624 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1051-1051", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m5_625 [label="IList l = new JObject(p1, p2)", span="1052-1052", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m5_626 [label="Assert.IsFalse(l.IsSynchronized)", span="1054-1054", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m5_627 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", span="1048-1048", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m5_848 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", span="1406-1406", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m5_849 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1408-1408", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m5_850 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1409-1409", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m5_851 [label="ITypedList l = new JObject(p1, p2)", span="1410-1410", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m5_852 [label="Assert.AreEqual(string.Empty, l.GetListName(null))", span="1412-1412", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m5_853 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", span="1406-1406", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m5_565 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", span="959-959", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_566 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="961-961", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_567 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="962-962", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_568 [label="IList l = new JObject(p1, p2)", span="963-963", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_572 [label="Assert.AreEqual(p1, l[0])", span="970-970", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_574 [label="Assert.AreEqual(p2, l[2])", span="972-972", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_569 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="965-965", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_570 [label="l.Insert(1, p3)", span="967-967", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_571 [label="Assert.AreEqual(l, p3.Parent)", span="968-968", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_573 [label="Assert.AreEqual(p3, l[1])", span="971-971", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_575 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", span="959-959", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m5_1171 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.FooJsonConverter()", span="1941-1941", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.FooJsonConverter()", file="JObjectTests.cs"];
m5_114 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JObjectTests.cs"];
m5_761 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", span="1271-1271", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", file="JObjectTests.cs"];
m5_762 [label="IBindingList l = new JObject()", span="1273-1273", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", file="JObjectTests.cs"];
m5_763 [label="Assert.AreEqual(null, l.SortProperty)", span="1274-1274", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", file="JObjectTests.cs"];
m5_764 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", span="1271-1271", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", file="JObjectTests.cs"];
m5_990 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JObjectTests.cs"];
m5_1050 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1666-1666", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JObjectTests.cs"];
m5_68 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", span="159-159", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_69 [label="JValue v = new JValue(1)", span="161-161", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_70 [label="JObject o = new JObject()", span="162-162", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_71 [label="o.Add(''PropertyNameValue'', v)", span="163-163", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_76 [label="Assert.AreEqual(true, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', v)))", span="169-169", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_72 [label="Assert.AreEqual(1, o.Children().Count())", span="164-164", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_73 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue1'', new JValue(1))))", span="166-166", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_74 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(2))))", span="167-167", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_75 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1))))", span="168-168", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_77 [label="Assert.AreEqual(0, o.Children().Count())", span="171-171", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_78 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", span="159-159", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m5_159 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", span="289-289", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", file="JObjectTests.cs"];
m5_160 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                @''Value cannot be null.\r\nParameter name: array'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(null, 0);\r\n                })", span="291-298", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", file="JObjectTests.cs"];
m5_161 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", span="289-289", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", file="JObjectTests.cs"];
m5_1142 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1943-1943", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1143 [label="var token = JToken.FromObject(value, new JsonSerializer\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="1945-1948", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1147 [label="o.WriteTo(writer)", span="1953-1953", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1148 [label="token.WriteTo(writer)", span="1956-1956", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1144 [label="token.Type == JTokenType.Object", span="1949-1949", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1145 [label="var o = (JObject)token", span="1951-1951", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1146 [label="o.AddFirst(new JProperty(''foo'', ''bar''))", span="1952-1952", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1149 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1943-1943", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_1052 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", span="1769-1769", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m5_1053 [label="JValue v = (JValue)JToken.FromObject(new Uri(''http://www.stuff.co.nz''))", span="1771-1771", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m5_1054 [label="Assert.AreEqual(v.Value, new Uri(''http://www.stuff.co.nz''))", span="1772-1772", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m5_1055 [label="Assert.AreEqual(''http://www.stuff.co.nz/'', v.ToString())", span="1774-1774", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m5_1056 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", span="1769-1769", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m5_926 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", span="1560-1560", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", file="JObjectTests.cs"];
m5_927 [label="ExceptionAssert.Throws<ArgumentException>(''Set JObject values with invalid key value: 0. Object property name expected.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    o[0] = new JValue(3);\r\n                })", span="1562-1567", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", file="JObjectTests.cs"];
m5_928 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", span="1560-1560", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", file="JObjectTests.cs"];
m5_822 [label="Entry System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", span="0-0", cluster="System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", file="JObjectTests.cs"];
m5_35 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JObjectTests.cs"];
m5_594 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", span="1005-1005", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", file="JObjectTests.cs"];
m5_595 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add property Test3 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    JProperty p3 = new JProperty(''Test3'', ''III'');\r\n\r\n                    l[0] = p3;\r\n                    l[1] = p3;\r\n                })", span="1007-1019", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", file="JObjectTests.cs"];
m5_596 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", span="1005-1005", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", file="JObjectTests.cs"];
m5_1172 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JObjectTests.cs"];
m5_385 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="195-195", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JObjectTests.cs"];
m5_1084 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="186-186", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JObjectTests.cs"];
m5_814 [label="Entry System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)", span="0-0", cluster="System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)", file="JObjectTests.cs"];
m5_57 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JObjectTests.cs"];
m5_1049 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JObjectTests.cs"];
m5_321 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", span="567-567", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_322 [label="string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''original'''':''''http://www.foo.com/'''',\r\n    ''''short'''':''''krehqk'''',\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0,\r\n      ''''msg'''':''''No action taken''''\r\n    }\r\n  }\r\n}''", span="569-580", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_323 [label="JObject json = JObject.Parse(jsonText)", span="582-582", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_324 [label="Shortie shortie = new Shortie\r\n            {\r\n                Original = (string)json[''short''][''original''],\r\n                Short = (string)json[''short''][''short''],\r\n                Error = new ShortieException\r\n                {\r\n                    Code = (int)json[''short''][''error''][''code''],\r\n                    ErrorMessage = (string)json[''short''][''error''][''msg'']\r\n                }\r\n            }", span="584-593", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_325 [label="Console.WriteLine(shortie.Original)", span="595-595", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_326 [label="Console.WriteLine(shortie.Error.ErrorMessage)", span="598-598", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_327 [label="Assert.AreEqual(''http://www.foo.com/'', shortie.Original)", span="601-601", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_328 [label="Assert.AreEqual(''krehqk'', shortie.Short)", span="602-602", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_329 [label="Assert.AreEqual(null, shortie.Shortened)", span="603-603", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_330 [label="Assert.AreEqual(0, shortie.Error.Code)", span="604-604", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_331 [label="Assert.AreEqual(''No action taken'', shortie.Error.ErrorMessage)", span="605-605", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_332 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", span="567-567", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m5_489 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", span="841-841", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_490 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="843-843", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_491 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="844-844", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_492 [label="IList l = new JObject(p1, p2)", span="845-845", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_495 [label="Assert.AreEqual(p1, a[0])", span="851-851", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_496 [label="Assert.AreEqual(p2, a[1])", span="852-852", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_493 [label="object[] a = new object[l.Count]", span="847-847", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_494 [label="l.CopyTo(a, 0)", span="849-849", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_497 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", span="841-841", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m5_224 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365", cluster="Newtonsoft.Json.JsonReader.Read()", file="JObjectTests.cs"];
m5_15 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="402-402", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JObjectTests.cs"];
m5_190 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", span="343-343", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m5_191 [label="PersonRaw raw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="345-350", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m5_192 [label="JObject o = JObject.FromObject(raw)", span="352-352", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m5_193 [label="Assert.AreEqual(''FirstNameValue'', (string)o[''first_name''])", span="354-354", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m5_194 [label="Assert.AreEqual(JTokenType.Raw, ((JValue)o[''RawContent'']).Type)", span="355-355", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m5_195 [label="Assert.AreEqual(''[1,2,3,4,5]'', (string)o[''RawContent''])", span="356-356", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m5_196 [label="Assert.AreEqual(''LastNameValue'', (string)o[''last_name''])", span="357-357", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m5_197 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", span="343-343", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m5_81 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", span="175-175", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="JObjectTests.cs"];
m5_82 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add property PropertyNameValue to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    o.Add(''PropertyNameValue'', null);\r\n                    o.Add(''PropertyNameValue'', null);\r\n                })", span="177-184", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="JObjectTests.cs"];
m5_83 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", span="175-175", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="JObjectTests.cs"];
m5_237 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JObjectTests.cs"];
m5_201 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", span="361-361", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_202 [label="PersonRaw raw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="363-368", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_203 [label="JObject o = JObject.FromObject(raw)", span="370-370", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_204 [label="JsonReader reader = new JTokenReader(o)", span="372-372", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_205 [label="Assert.IsTrue(reader.Read())", span="374-374", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_206 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="375-375", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_207 [label="Assert.IsTrue(reader.Read())", span="377-377", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_208 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="378-378", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_209 [label="Assert.IsTrue(reader.Read())", span="380-380", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_210 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="381-381", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_211 [label="Assert.IsTrue(reader.Read())", span="383-383", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_212 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="384-384", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_213 [label="Assert.IsTrue(reader.Read())", span="386-386", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_214 [label="Assert.AreEqual(JsonToken.Raw, reader.TokenType)", span="387-387", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_215 [label="Assert.IsTrue(reader.Read())", span="389-389", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_216 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="390-390", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_217 [label="Assert.IsTrue(reader.Read())", span="392-392", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_218 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="393-393", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_219 [label="Assert.IsTrue(reader.Read())", span="395-395", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_220 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="396-396", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_221 [label="Assert.IsFalse(reader.Read())", span="398-398", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_222 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", span="361-361", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m5_7 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", span="79-79", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m5_8 [label="var o = new JObject()", span="81-81", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m5_9 [label="o.Add(new JProperty(''novalue''))", span="82-82", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m5_10 [label="Assert.AreEqual(@''{\r\n  ''''novalue'''': null\r\n}'', o.ToString())", span="84-86", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m5_11 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", span="79-79", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m5_1064 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", span="1787-1787", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", file="JObjectTests.cs"];
m5_1065 [label="ExceptionAssert.Throws<JsonReaderException>(''Additional text encountered after finished reading JSON content: ,. Path '', line 10, position 2.'',\r\n                () =>\r\n                {\r\n                    string json = @''{\r\n''''Name'''': ''''Apple'''',\r\n''''Expiry'''': new Date(1230422400000),\r\n''''Price'''': 3.99,\r\n''''Sizes'''': [\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]\r\n}, 987987'';\r\n\r\n                    JObject o = JObject.Parse(json);\r\n                })", span="1789-1804", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", file="JObjectTests.cs"];
m5_1066 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", span="1787-1787", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", file="JObjectTests.cs"];
m5_1116 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="399-399", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObjectTests.cs"];
m5_310 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JObjectTests.cs"];
m5_200 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="343-343", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JObjectTests.cs"];
m5_892 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", span="1467-1467", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_893 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1469-1469", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_894 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1470-1470", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_895 [label="JObject o = new JObject(p1, p2)", span="1471-1471", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_896 [label="NotifyCollectionChangedAction? changedType = null", span="1473-1473", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_898 [label="o._collectionChanged += (s, a) =>\r\n            {\r\n                changedType = a.Action;\r\n                index = a.NewStartingIndex;\r\n            }", span="1476-1480", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_900 [label="o.Add(p3)", span="1484-1484", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_903 [label="Assert.AreEqual(p3, ((IList<JToken>)o)[index.Value])", span="1487-1487", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_905 [label="((IList<JToken>)o)[index.Value] = p4", span="1491-1491", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_908 [label="Assert.AreEqual(p4, ((IList<JToken>)o)[index.Value])", span="1494-1494", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_909 [label="Assert.IsFalse(((IList<JToken>)o).Contains(p3))", span="1495-1495", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_910 [label="Assert.IsTrue(((IList<JToken>)o).Contains(p4))", span="1496-1496", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_911 [label="o[''Test1''] = 2", span="1498-1498", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_914 [label="Assert.AreEqual(2, (int)o[''Test1''])", span="1501-1501", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_897 [label="int? index = null", span="1474-1474", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_899 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1482-1482", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_901 [label="Assert.AreEqual(changedType, NotifyCollectionChangedAction.Add)", span="1485-1485", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_902 [label="Assert.AreEqual(index, 2)", span="1486-1486", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_904 [label="JProperty p4 = new JProperty(''Test4'', ''IV'')", span="1489-1489", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_906 [label="Assert.AreEqual(changedType, NotifyCollectionChangedAction.Replace)", span="1492-1492", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_907 [label="Assert.AreEqual(index, 2)", span="1493-1493", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_912 [label="Assert.AreEqual(changedType, NotifyCollectionChangedAction.Replace)", span="1499-1499", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_913 [label="Assert.AreEqual(index, 0)", span="1500-1500", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_915 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", span="1467-1467", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m5_180 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", span="327-327", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="JObjectTests.cs"];
m5_181 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                @''The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    o.Add(''PropertyNameValue'', new JValue(1));\r\n                    o.Add(''PropertyNameValue2'', new JValue(2));\r\n                    o.Add(''PropertyNameValue3'', new JValue(3));\r\n\r\n                    ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[3], 1);\r\n                })", span="329-339", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="JObjectTests.cs"];
m5_182 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", span="327-327", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="JObjectTests.cs"];
m5_473 [label="Entry System.Collections.IList.Contains(object)", span="0-0", cluster="System.Collections.IList.Contains(object)", file="JObjectTests.cs"];
m5_789 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", span="1320-1320", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", file="JObjectTests.cs"];
m5_790 [label="IBindingList l = new JObject()", span="1322-1322", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", file="JObjectTests.cs"];
m5_791 [label="l.AddIndex(null)", span="1324-1324", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", file="JObjectTests.cs"];
m5_792 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", span="1320-1320", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", file="JObjectTests.cs"];
m5_320 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JObjectTests.cs"];
m5_834 [label="Entry System.ComponentModel.IBindingList.AddNew()", span="0-0", cluster="System.ComponentModel.IBindingList.AddNew()", file="JObjectTests.cs"];
m5_518 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", span="886-886", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="JObjectTests.cs"];
m5_519 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Argument is not a JToken.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    l.Add(''Bad!'');\r\n                })", span="888-897", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="JObjectTests.cs"];
m5_520 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", span="886-886", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="JObjectTests.cs"];
m5_963 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", span="1634-1634", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", file="JObjectTests.cs"];
m5_964 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Object to String.'',\r\n                () =>\r\n                {\r\n                    string json = @''{\r\n  ''''responseData'''': {}, \r\n  ''''responseDetails'''': null, \r\n  ''''responseStatus'''': 200\r\n}'';\r\n\r\n                    JObject o = JObject.Parse(json);\r\n\r\n                    string name = (string)o.Property(''responseData'');\r\n                })", span="1636-1648", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", file="JObjectTests.cs"];
m5_965 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", span="1634-1634", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", file="JObjectTests.cs"];
m5_6 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JObjectTests.cs"];
m5_474 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", span="818-818", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m5_475 [label="JProperty p = new JProperty(''Test'', 1)", span="820-820", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m5_476 [label="IList l = new JObject(p)", span="821-821", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m5_477 [label="Assert.AreEqual(0, l.IndexOf(p))", span="823-823", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m5_478 [label="Assert.AreEqual(-1, l.IndexOf(new JProperty(''Test'', 1)))", span="824-824", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m5_479 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", span="818-818", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m5_640 [label="Entry System.Collections.Generic.IList<T>.IndexOf(T)", span="0-0", cluster="System.Collections.Generic.IList<T>.IndexOf(T)", file="JObjectTests.cs"];
m5_359 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JObjectTests.cs"];
m5_773 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", span="1292-1292", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", file="JObjectTests.cs"];
m5_774 [label="IBindingList l = new JObject()", span="1294-1294", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", file="JObjectTests.cs"];
m5_775 [label="Assert.AreEqual(false, l.SupportsSorting)", span="1295-1295", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", file="JObjectTests.cs"];
m5_776 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", span="1292-1292", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", file="JObjectTests.cs"];
m5_621 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JObjectTests.cs"];
m5_140 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JObjectTests.cs"];
m5_802 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", span="1340-1340", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", file="JObjectTests.cs"];
m5_803 [label="ExceptionAssert.Throws<NotSupportedException>(\r\n                ''Specified method is not supported.'',\r\n                () =>\r\n                {\r\n                    IBindingList l = new JObject();\r\n                    l.RemoveSort();\r\n                })", span="1342-1348", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", file="JObjectTests.cs"];
m5_804 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", span="1340-1340", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", file="JObjectTests.cs"];
m5_104 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JObjectTests.cs"];
m5_553 [label="Entry System.Collections.IList.Remove(object)", span="0-0", cluster="System.Collections.IList.Remove(object)", file="JObjectTests.cs"];
m5_39 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="480-480", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m5_527 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", span="901-901", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="JObjectTests.cs"];
m5_528 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add property Test2 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    JProperty p3 = new JProperty(''Test2'', ''II'');\r\n\r\n                    l.Add(p3);\r\n                })", span="903-914", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="JObjectTests.cs"];
m5_529 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", span="901-901", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="JObjectTests.cs"];
m5_614 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JObjectTests.cs"];
m5_1140 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string)", span="386-386", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="JObjectTests.cs"];
m5_0 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="JObjectTests.cs"];
m5_1 [label="string json = @''{ /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="62-71", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="JObjectTests.cs"];
m5_2 [label="JToken o = JToken.Parse(json)", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="JObjectTests.cs"];
m5_3 [label="Assert.AreEqual(''Apple'', (string) o[''Name''])", span="75-75", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="JObjectTests.cs"];
m5_4 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="JObjectTests.cs"];
m5_227 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", span="402-402", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_228 [label="PersonRaw raw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="404-409", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_229 [label="JObject o = JObject.FromObject(raw)", span="411-411", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_230 [label="JsonReader reader = new JTokenReader(o)", span="413-413", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_231 [label="JsonSerializer serializer = new JsonSerializer()", span="414-414", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_232 [label="raw = (PersonRaw)serializer.Deserialize(reader, typeof(PersonRaw))", span="415-415", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_233 [label="Assert.AreEqual(''FirstNameValue'', raw.FirstName)", span="417-417", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_234 [label="Assert.AreEqual(''LastNameValue'', raw.LastName)", span="418-418", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_235 [label="Assert.AreEqual(''[1,2,3,4,5]'', raw.RawContent.Value)", span="419-419", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_236 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", span="402-402", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m5_300 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", span="521-521", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_301 [label="string s = null", span="523-523", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_302 [label="JValue v = new JValue(s)", span="524-524", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_303 [label="Assert.AreEqual(null, v.Value)", span="525-525", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_304 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="526-526", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_306 [label="o[''title''] = v", span="529-529", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_305 [label="JObject o = new JObject()", span="528-528", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_307 [label="string output = o.ToString()", span="531-531", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_308 [label="Assert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="533-535", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_309 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", span="521-521", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m5_335 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", span="609-609", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m5_336 [label="JObject o = new JObject()", span="611-611", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m5_337 [label="o[''rc''] = new JValue(200)", span="612-612", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m5_338 [label="o[''m''] = new JValue('''')", span="613-613", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m5_339 [label="o[''o''] = new JValue(@''<div class='s1'>\r\n    <div class='avatar'>                    \r\n        <a href='asdf'>asdf</a><br />\r\n        <strong>0</strong>\r\n    </div>\r\n    <div class='sl'>\r\n        <p>\r\n            444444444\r\n        </p>\r\n    </div>\r\n    <div class='clear'>\r\n    </div>                        \r\n</div>'')", span="614-626", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m5_340 [label="Assert.AreEqual(@''{\r\n  ''''rc'''': 200,\r\n  ''''m'''': '''''''',\r\n  ''''o'''': ''''<div class='s1'>\r\n    <div class='avatar'>                    \r\n        <a href='asdf'>asdf</a><br />\r\n        <strong>0</strong>\r\n    </div>\r\n    <div class='sl'>\r\n        <p>\r\n            444444444\r\n        </p>\r\n    </div>\r\n    <div class='clear'>\r\n    </div>                        \r\n</div>''''\r\n}'', o.ToString())", span="628-632", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m5_341 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", span="609-609", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m5_720 [label="Entry System.Collections.Generic.IList<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.IList<T>.RemoveAt(int)", file="JObjectTests.cs"];
m5_1117 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", span="1910-1910", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1118 [label="JObject a = new JObject()", span="1912-1912", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1119 [label="a[''Name''] = ''Name!''", span="1913-1913", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1120 [label="a[''name''] = ''name!''", span="1914-1914", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1121 [label="a[''title''] = ''Title!''", span="1915-1915", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1122 [label="Assert.AreEqual(null, a.GetValue(''NAME'', StringComparison.Ordinal))", span="1917-1917", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1123 [label="Assert.AreEqual(null, a.GetValue(''NAME''))", span="1918-1918", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1124 [label="Assert.AreEqual(null, a.GetValue(''TITLE''))", span="1919-1919", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1125 [label="Assert.AreEqual(''Name!'', (string)a.GetValue(''NAME'', StringComparison.OrdinalIgnoreCase))", span="1920-1920", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1126 [label="Assert.AreEqual(''name!'', (string)a.GetValue(''name'', StringComparison.Ordinal))", span="1921-1921", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1127 [label="Assert.AreEqual(null, a.GetValue(null, StringComparison.Ordinal))", span="1922-1922", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1128 [label="Assert.AreEqual(null, a.GetValue(null))", span="1923-1923", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1130 [label="Assert.IsFalse(a.TryGetValue(''NAME'', StringComparison.Ordinal, out v))", span="1926-1926", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1132 [label="Assert.IsFalse(a.TryGetValue(''NAME'', out v))", span="1929-1929", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1133 [label="Assert.IsFalse(a.TryGetValue(''TITLE'', out v))", span="1930-1930", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1134 [label="Assert.IsTrue(a.TryGetValue(''NAME'', StringComparison.OrdinalIgnoreCase, out v))", span="1932-1932", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1136 [label="Assert.IsTrue(a.TryGetValue(''name'', StringComparison.Ordinal, out v))", span="1935-1935", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1138 [label="Assert.IsFalse(a.TryGetValue(null, StringComparison.Ordinal, out v))", span="1938-1938", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1129 [label="JToken v", span="1925-1925", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1131 [label="Assert.AreEqual(null, v)", span="1927-1927", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1135 [label="Assert.AreEqual(''Name!'', (string)v)", span="1933-1933", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1137 [label="Assert.AreEqual(''name!'', (string)v)", span="1936-1936", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_1139 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", span="1910-1910", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m5_37 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="249-249", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JObjectTests.cs"];
m5_864 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", span="1427-1427", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_865 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1429-1429", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_866 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1430-1430", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_867 [label="JObject o = new JObject(p1, p2)", span="1431-1431", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_868 [label="ListChangedType? changedType = null", span="1433-1433", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_870 [label="o.ListChanged += (s, a) =>\r\n            {\r\n                changedType = a.ListChangedType;\r\n                index = a.NewIndex;\r\n            }", span="1436-1440", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_872 [label="o.Add(p3)", span="1444-1444", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_875 [label="Assert.AreEqual(p3, ((IList<JToken>)o)[index.Value])", span="1447-1447", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_877 [label="((IList<JToken>)o)[index.Value] = p4", span="1451-1451", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_880 [label="Assert.AreEqual(p4, ((IList<JToken>)o)[index.Value])", span="1454-1454", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_881 [label="Assert.IsFalse(((IList<JToken>)o).Contains(p3))", span="1455-1455", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_882 [label="Assert.IsTrue(((IList<JToken>)o).Contains(p4))", span="1456-1456", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_883 [label="o[''Test1''] = 2", span="1458-1458", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_886 [label="Assert.AreEqual(2, (int)o[''Test1''])", span="1461-1461", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_869 [label="int? index = null", span="1434-1434", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_871 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1442-1442", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_873 [label="Assert.AreEqual(changedType, ListChangedType.ItemAdded)", span="1445-1445", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_874 [label="Assert.AreEqual(index, 2)", span="1446-1446", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_876 [label="JProperty p4 = new JProperty(''Test4'', ''IV'')", span="1449-1449", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_878 [label="Assert.AreEqual(changedType, ListChangedType.ItemChanged)", span="1452-1452", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_879 [label="Assert.AreEqual(index, 2)", span="1453-1453", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_884 [label="Assert.AreEqual(changedType, ListChangedType.ItemChanged)", span="1459-1459", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_885 [label="Assert.AreEqual(index, 0)", span="1460-1460", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_887 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", span="1427-1427", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m5_1067 [label="Entry lambda expression", span="1790-1804", cluster="lambda expression", file="JObjectTests.cs"];
m5_85 [label="Entry lambda expression", span="179-184", cluster="lambda expression", file="JObjectTests.cs"];
m5_86 [label="JObject o = new JObject()", span="181-181", cluster="lambda expression", file="JObjectTests.cs"];
m5_87 [label="o.Add(''PropertyNameValue'', null)", span="182-182", cluster="lambda expression", file="JObjectTests.cs"];
m5_88 [label="o.Add(''PropertyNameValue'', null)", span="183-183", cluster="lambda expression", file="JObjectTests.cs"];
m5_89 [label="Exit lambda expression", span="179-184", cluster="lambda expression", file="JObjectTests.cs"];
m5_162 [label="Entry lambda expression", span="294-298", cluster="lambda expression", file="JObjectTests.cs"];
m5_163 [label="JObject o = new JObject()", span="296-296", cluster="lambda expression", file="JObjectTests.cs"];
m5_164 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(null, 0)", span="297-297", cluster="lambda expression", file="JObjectTests.cs"];
m5_165 [label="Exit lambda expression", span="294-298", cluster="lambda expression", file="JObjectTests.cs"];
m5_169 [label="Entry lambda expression", span="307-311", cluster="lambda expression", file="JObjectTests.cs"];
m5_170 [label="JObject o = new JObject()", span="309-309", cluster="lambda expression", file="JObjectTests.cs"];
m5_171 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], -1)", span="310-310", cluster="lambda expression", file="JObjectTests.cs"];
m5_172 [label="Exit lambda expression", span="307-311", cluster="lambda expression", file="JObjectTests.cs"];
m5_176 [label="Entry lambda expression", span="319-323", cluster="lambda expression", file="JObjectTests.cs"];
m5_177 [label="JObject o = new JObject()", span="321-321", cluster="lambda expression", file="JObjectTests.cs"];
m5_178 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], 1)", span="322-322", cluster="lambda expression", file="JObjectTests.cs"];
m5_179 [label="Exit lambda expression", span="319-323", cluster="lambda expression", file="JObjectTests.cs"];
m5_183 [label="Entry lambda expression", span="331-339", cluster="lambda expression", file="JObjectTests.cs"];
m5_184 [label="JObject o = new JObject()", span="333-333", cluster="lambda expression", file="JObjectTests.cs"];
m5_185 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="334-334", cluster="lambda expression", file="JObjectTests.cs"];
m5_186 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="335-335", cluster="lambda expression", file="JObjectTests.cs"];
m5_187 [label="o.Add(''PropertyNameValue3'', new JValue(3))", span="336-336", cluster="lambda expression", file="JObjectTests.cs"];
m5_188 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[3], 1)", span="338-338", cluster="lambda expression", file="JObjectTests.cs"];
m5_189 [label="Exit lambda expression", span="331-339", cluster="lambda expression", file="JObjectTests.cs"];
m5_242 [label="Entry lambda expression", span="426-430", cluster="lambda expression", file="JObjectTests.cs"];
m5_243 [label="string json = @''[''''prop'''']''", span="428-428", cluster="lambda expression", file="JObjectTests.cs"];
m5_244 [label="JObject.Parse(json)", span="429-429", cluster="lambda expression", file="JObjectTests.cs"];
m5_245 [label="Exit lambda expression", span="426-430", cluster="lambda expression", file="JObjectTests.cs"];
m5_269 [label="Entry lambda expression", span="463-466", cluster="lambda expression", file="JObjectTests.cs"];
m5_270 [label="JObject.Parse(@''{\r\n    ''''name'''': ''''James'''',\r\n    ]!#$THIS IS: BAD JSON![{}}}}]\r\n  }'')", span="463-466", cluster="lambda expression", file="JObjectTests.cs"];
m5_271 [label="Exit lambda expression", span="463-466", cluster="lambda expression", file="JObjectTests.cs"];
m5_426 [label="JObject s = (JObject)sender", span="717-717", cluster="lambda expression", file="JObjectTests.cs"];
m5_427 [label="changing = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="718-718", cluster="lambda expression", file="JObjectTests.cs"];
m5_428 [label="changingCount++", span="719-719", cluster="lambda expression", file="JObjectTests.cs"];
m5_431 [label="JObject s = (JObject)sender", span="723-723", cluster="lambda expression", file="JObjectTests.cs"];
m5_432 [label="changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="724-724", cluster="lambda expression", file="JObjectTests.cs"];
m5_433 [label="changedCount++", span="725-725", cluster="lambda expression", file="JObjectTests.cs"];
m5_425 [label="Entry lambda expression", span="715-720", cluster="lambda expression", file="JObjectTests.cs"];
m5_429 [label="Exit lambda expression", span="715-720", cluster="lambda expression", file="JObjectTests.cs"];
m5_430 [label="Entry lambda expression", span="721-726", cluster="lambda expression", file="JObjectTests.cs"];
m5_434 [label="Exit lambda expression", span="721-726", cluster="lambda expression", file="JObjectTests.cs"];
m5_462 [label="JObject s = (JObject)sender", span="775-775", cluster="lambda expression", file="JObjectTests.cs"];
m5_463 [label="changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="776-776", cluster="lambda expression", file="JObjectTests.cs"];
m5_464 [label="changedCount++", span="777-777", cluster="lambda expression", file="JObjectTests.cs"];
m5_461 [label="Entry lambda expression", span="773-778", cluster="lambda expression", file="JObjectTests.cs"];
m5_465 [label="Exit lambda expression", span="773-778", cluster="lambda expression", file="JObjectTests.cs"];
m5_512 [label="Entry lambda expression", span="875-882", cluster="lambda expression", file="JObjectTests.cs"];
m5_513 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="877-877", cluster="lambda expression", file="JObjectTests.cs"];
m5_514 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="878-878", cluster="lambda expression", file="JObjectTests.cs"];
m5_515 [label="IList l = new JObject(p1, p2)", span="879-879", cluster="lambda expression", file="JObjectTests.cs"];
m5_516 [label="l.Add(new JValue(''Bad!''))", span="881-881", cluster="lambda expression", file="JObjectTests.cs"];
m5_517 [label="Exit lambda expression", span="875-882", cluster="lambda expression", file="JObjectTests.cs"];
m5_521 [label="Entry lambda expression", span="890-897", cluster="lambda expression", file="JObjectTests.cs"];
m5_522 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="892-892", cluster="lambda expression", file="JObjectTests.cs"];
m5_523 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="893-893", cluster="lambda expression", file="JObjectTests.cs"];
m5_524 [label="IList l = new JObject(p1, p2)", span="894-894", cluster="lambda expression", file="JObjectTests.cs"];
m5_525 [label="l.Add(''Bad!'')", span="896-896", cluster="lambda expression", file="JObjectTests.cs"];
m5_526 [label="Exit lambda expression", span="890-897", cluster="lambda expression", file="JObjectTests.cs"];
m5_530 [label="Entry lambda expression", span="905-914", cluster="lambda expression", file="JObjectTests.cs"];
m5_531 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="907-907", cluster="lambda expression", file="JObjectTests.cs"];
m5_532 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="908-908", cluster="lambda expression", file="JObjectTests.cs"];
m5_533 [label="IList l = new JObject(p1, p2)", span="909-909", cluster="lambda expression", file="JObjectTests.cs"];
m5_534 [label="JProperty p3 = new JProperty(''Test2'', ''II'')", span="911-911", cluster="lambda expression", file="JObjectTests.cs"];
m5_535 [label="l.Add(p3)", span="913-913", cluster="lambda expression", file="JObjectTests.cs"];
m5_536 [label="Exit lambda expression", span="905-914", cluster="lambda expression", file="JObjectTests.cs"];
m5_597 [label="Entry lambda expression", span="1009-1019", cluster="lambda expression", file="JObjectTests.cs"];
m5_598 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1011-1011", cluster="lambda expression", file="JObjectTests.cs"];
m5_599 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1012-1012", cluster="lambda expression", file="JObjectTests.cs"];
m5_600 [label="IList l = new JObject(p1, p2)", span="1013-1013", cluster="lambda expression", file="JObjectTests.cs"];
m5_601 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1015-1015", cluster="lambda expression", file="JObjectTests.cs"];
m5_602 [label="l[0] = p3", span="1017-1017", cluster="lambda expression", file="JObjectTests.cs"];
m5_603 [label="l[1] = p3", span="1018-1018", cluster="lambda expression", file="JObjectTests.cs"];
m5_604 [label="Exit lambda expression", span="1009-1019", cluster="lambda expression", file="JObjectTests.cs"];
m5_608 [label="Entry lambda expression", span="1027-1034", cluster="lambda expression", file="JObjectTests.cs"];
m5_609 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1029-1029", cluster="lambda expression", file="JObjectTests.cs"];
m5_610 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1030-1030", cluster="lambda expression", file="JObjectTests.cs"];
m5_611 [label="IList l = new JObject(p1, p2)", span="1031-1031", cluster="lambda expression", file="JObjectTests.cs"];
m5_612 [label="l[0] = new JValue(true)", span="1033-1033", cluster="lambda expression", file="JObjectTests.cs"];
m5_613 [label="Exit lambda expression", span="1027-1034", cluster="lambda expression", file="JObjectTests.cs"];
m5_669 [label="Entry lambda expression", span="1124-1131", cluster="lambda expression", file="JObjectTests.cs"];
m5_670 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1126-1126", cluster="lambda expression", file="JObjectTests.cs"];
m5_671 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1127-1127", cluster="lambda expression", file="JObjectTests.cs"];
m5_672 [label="IList<JToken> l = new JObject(p1, p2)", span="1128-1128", cluster="lambda expression", file="JObjectTests.cs"];
m5_673 [label="l.Add(new JValue(''Bad!''))", span="1130-1130", cluster="lambda expression", file="JObjectTests.cs"];
m5_674 [label="Exit lambda expression", span="1124-1131", cluster="lambda expression", file="JObjectTests.cs"];
m5_678 [label="Entry lambda expression", span="1138-1146", cluster="lambda expression", file="JObjectTests.cs"];
m5_679 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1140-1140", cluster="lambda expression", file="JObjectTests.cs"];
m5_680 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1141-1141", cluster="lambda expression", file="JObjectTests.cs"];
m5_681 [label="IList<JToken> l = new JObject(p1, p2)", span="1142-1142", cluster="lambda expression", file="JObjectTests.cs"];
m5_682 [label="l.Add(''Bad!'')", span="1145-1145", cluster="lambda expression", file="JObjectTests.cs"];
m5_683 [label="Exit lambda expression", span="1138-1146", cluster="lambda expression", file="JObjectTests.cs"];
m5_687 [label="Entry lambda expression", span="1153-1162", cluster="lambda expression", file="JObjectTests.cs"];
m5_688 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1155-1155", cluster="lambda expression", file="JObjectTests.cs"];
m5_689 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1156-1156", cluster="lambda expression", file="JObjectTests.cs"];
m5_690 [label="IList<JToken> l = new JObject(p1, p2)", span="1157-1157", cluster="lambda expression", file="JObjectTests.cs"];
m5_691 [label="JProperty p3 = new JProperty(''Test2'', ''II'')", span="1159-1159", cluster="lambda expression", file="JObjectTests.cs"];
m5_692 [label="l.Add(p3)", span="1161-1161", cluster="lambda expression", file="JObjectTests.cs"];
m5_693 [label="Exit lambda expression", span="1153-1162", cluster="lambda expression", file="JObjectTests.cs"];
m5_749 [label="Entry lambda expression", span="1249-1259", cluster="lambda expression", file="JObjectTests.cs"];
m5_750 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1251-1251", cluster="lambda expression", file="JObjectTests.cs"];
m5_751 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1252-1252", cluster="lambda expression", file="JObjectTests.cs"];
m5_752 [label="IList<JToken> l = new JObject(p1, p2)", span="1253-1253", cluster="lambda expression", file="JObjectTests.cs"];
m5_753 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1255-1255", cluster="lambda expression", file="JObjectTests.cs"];
m5_754 [label="l[0] = p3", span="1257-1257", cluster="lambda expression", file="JObjectTests.cs"];
m5_755 [label="l[1] = p3", span="1258-1258", cluster="lambda expression", file="JObjectTests.cs"];
m5_756 [label="Exit lambda expression", span="1249-1259", cluster="lambda expression", file="JObjectTests.cs"];
m5_797 [label="Entry lambda expression", span="1332-1336", cluster="lambda expression", file="JObjectTests.cs"];
m5_798 [label="IBindingList l = new JObject()", span="1334-1334", cluster="lambda expression", file="JObjectTests.cs"];
m5_799 [label="l.ApplySort(null, ListSortDirection.Ascending)", span="1335-1335", cluster="lambda expression", file="JObjectTests.cs"];
m5_800 [label="Exit lambda expression", span="1332-1336", cluster="lambda expression", file="JObjectTests.cs"];
m5_805 [label="Entry lambda expression", span="1344-1348", cluster="lambda expression", file="JObjectTests.cs"];
m5_806 [label="IBindingList l = new JObject()", span="1346-1346", cluster="lambda expression", file="JObjectTests.cs"];
m5_807 [label="l.RemoveSort()", span="1347-1347", cluster="lambda expression", file="JObjectTests.cs"];
m5_808 [label="Exit lambda expression", span="1344-1348", cluster="lambda expression", file="JObjectTests.cs"];
m5_818 [label="Entry lambda expression", span="1364-1368", cluster="lambda expression", file="JObjectTests.cs"];
m5_819 [label="IBindingList l = new JObject()", span="1366-1366", cluster="lambda expression", file="JObjectTests.cs"];
m5_820 [label="l.Find(null, null)", span="1367-1367", cluster="lambda expression", file="JObjectTests.cs"];
m5_821 [label="Exit lambda expression", span="1364-1368", cluster="lambda expression", file="JObjectTests.cs"];
m5_830 [label="Entry lambda expression", span="1383-1387", cluster="lambda expression", file="JObjectTests.cs"];
m5_831 [label="IBindingList l = new JObject()", span="1385-1385", cluster="lambda expression", file="JObjectTests.cs"];
m5_832 [label="l.AddNew()", span="1386-1386", cluster="lambda expression", file="JObjectTests.cs"];
m5_833 [label="Exit lambda expression", span="1383-1387", cluster="lambda expression", file="JObjectTests.cs"];
m5_846 [label="e.NewObject = new JProperty(''Property!'')", span="1394-1394", cluster="lambda expression", file="JObjectTests.cs"];
m5_845 [label="Entry lambda expression", span="1394-1394", cluster="lambda expression", file="JObjectTests.cs"];
m5_847 [label="Exit lambda expression", span="1394-1394", cluster="lambda expression", file="JObjectTests.cs"];
m5_889 [label="changedType = a.ListChangedType", span="1438-1438", cluster="lambda expression", file="JObjectTests.cs"];
m5_890 [label="index = a.NewIndex", span="1439-1439", cluster="lambda expression", file="JObjectTests.cs"];
m5_888 [label="Entry lambda expression", span="1436-1440", cluster="lambda expression", file="JObjectTests.cs"];
m5_891 [label="Exit lambda expression", span="1436-1440", cluster="lambda expression", file="JObjectTests.cs"];
m5_917 [label="changedType = a.Action", span="1478-1478", cluster="lambda expression", file="JObjectTests.cs"];
m5_918 [label="index = a.NewStartingIndex", span="1479-1479", cluster="lambda expression", file="JObjectTests.cs"];
m5_916 [label="Entry lambda expression", span="1476-1480", cluster="lambda expression", file="JObjectTests.cs"];
m5_919 [label="Exit lambda expression", span="1476-1480", cluster="lambda expression", file="JObjectTests.cs"];
m5_929 [label="Entry lambda expression", span="1563-1567", cluster="lambda expression", file="JObjectTests.cs"];
m5_930 [label="JObject o = new JObject()", span="1565-1565", cluster="lambda expression", file="JObjectTests.cs"];
m5_931 [label="o[0] = new JValue(3)", span="1566-1566", cluster="lambda expression", file="JObjectTests.cs"];
m5_932 [label="Exit lambda expression", span="1563-1567", cluster="lambda expression", file="JObjectTests.cs"];
m5_958 [label="Entry lambda expression", span="1619-1630", cluster="lambda expression", file="JObjectTests.cs"];
m5_959 [label="string json = @''{\r\n  ''''responseData'''': {}, \r\n  ''''responseDetails'''': null, \r\n  ''''responseStatus'''': 200\r\n}''", span="1621-1625", cluster="lambda expression", file="JObjectTests.cs"];
m5_960 [label="JObject o = JObject.Parse(json)", span="1627-1627", cluster="lambda expression", file="JObjectTests.cs"];
m5_961 [label="string name = (string)o[''responseData'']", span="1629-1629", cluster="lambda expression", file="JObjectTests.cs"];
m5_962 [label="Exit lambda expression", span="1619-1630", cluster="lambda expression", file="JObjectTests.cs"];
m5_966 [label="Entry lambda expression", span="1637-1648", cluster="lambda expression", file="JObjectTests.cs"];
m5_967 [label="string json = @''{\r\n  ''''responseData'''': {}, \r\n  ''''responseDetails'''': null, \r\n  ''''responseStatus'''': 200\r\n}''", span="1639-1643", cluster="lambda expression", file="JObjectTests.cs"];
m5_968 [label="JObject o = JObject.Parse(json)", span="1645-1645", cluster="lambda expression", file="JObjectTests.cs"];
m5_969 [label="string name = (string)o.Property(''responseData'')", span="1647-1647", cluster="lambda expression", file="JObjectTests.cs"];
m5_970 [label="Exit lambda expression", span="1637-1648", cluster="lambda expression", file="JObjectTests.cs"];
m5_975 [label="Entry lambda expression", span="1655-1655", cluster="lambda expression", file="JObjectTests.cs"];
m5_976 [label="JObject.Parse(''{ foo:'')", span="1655-1655", cluster="lambda expression", file="JObjectTests.cs"];
m5_977 [label="Exit lambda expression", span="1655-1655", cluster="lambda expression", file="JObjectTests.cs"];
m5_997 [label="Entry lambda expression", span="1691-1708", cluster="lambda expression", file="JObjectTests.cs"];
m5_998 [label="string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0''", span="1693-1698", cluster="lambda expression", file="JObjectTests.cs"];
m5_999 [label="JsonReader reader = new JsonTextReader(new StringReader(jsonText))", span="1700-1700", cluster="lambda expression", file="JObjectTests.cs"];
m5_1000 [label="reader.Read()", span="1701-1701", cluster="lambda expression", file="JObjectTests.cs"];
m5_1001 [label="reader.Read()", span="1702-1702", cluster="lambda expression", file="JObjectTests.cs"];
m5_1002 [label="reader.Read()", span="1703-1703", cluster="lambda expression", file="JObjectTests.cs"];
m5_1003 [label="reader.Read()", span="1704-1704", cluster="lambda expression", file="JObjectTests.cs"];
m5_1004 [label="reader.Read()", span="1705-1705", cluster="lambda expression", file="JObjectTests.cs"];
m5_1005 [label="JToken.ReadFrom(reader)", span="1707-1707", cluster="lambda expression", file="JObjectTests.cs"];
m5_1006 [label="Exit lambda expression", span="1691-1708", cluster="lambda expression", file="JObjectTests.cs"];
m5_1068 [label="string json = @''{\r\n''''Name'''': ''''Apple'''',\r\n''''Expiry'''': new Date(1230422400000),\r\n''''Price'''': 3.99,\r\n''''Sizes'''': [\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]\r\n}, 987987''", span="1792-1801", cluster="lambda expression", file="JObjectTests.cs"];
m5_1069 [label="JObject o = JObject.Parse(json)", span="1803-1803", cluster="lambda expression", file="JObjectTests.cs"];
m5_1070 [label="Exit lambda expression", span="1790-1804", cluster="lambda expression", file="JObjectTests.cs"];
m5_466 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", span="808-808", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m5_467 [label="JProperty p = new JProperty(''Test'', 1)", span="810-810", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m5_468 [label="IList l = new JObject(p)", span="811-811", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m5_469 [label="Assert.IsTrue(l.Contains(p))", span="813-813", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m5_470 [label="Assert.IsFalse(l.Contains(new JProperty(''Test'', 1)))", span="814-814", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m5_471 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", span="808-808", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m5_939 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", span="1582-1582", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m5_940 [label="string json = @''{\r\n        ''''Name'''': ''''Name1'''',\r\n        ''''Name'''': ''''Name2''''\r\n      }''", span="1584-1587", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m5_941 [label="JObject o = JObject.Parse(json)", span="1589-1589", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m5_942 [label="string value = (string)o[''Name'']", span="1590-1590", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m5_943 [label="Assert.AreEqual(''Name2'', value)", span="1592-1592", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m5_944 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", span="1582-1582", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m5_992 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1827-1827", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JObjectTests.cs"];
m5_1109 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", span="1892-1892", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m5_1110 [label="JObject o = JObject.Parse(@''{\r\n        'name': 'Lower',\r\n        'NAME': 'Upper'\r\n      }'')", span="1894-1897", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m5_1111 [label="string exactMatch = (string)o.GetValue(''NAME'', StringComparison.OrdinalIgnoreCase)", span="1899-1899", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m5_1112 [label="string ignoreCase = (string)o.GetValue(''Name'', StringComparison.OrdinalIgnoreCase)", span="1902-1902", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m5_1113 [label="Assert.AreEqual(''Upper'', exactMatch)", span="1905-1905", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m5_1114 [label="Assert.AreEqual(''Lower'', ignoreCase)", span="1906-1906", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m5_1115 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", span="1892-1892", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m5_721 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", span="1207-1207", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_722 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1209-1209", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_723 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1210-1210", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_724 [label="IList<JToken> l = new JObject(p1, p2)", span="1211-1211", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_728 [label="Assert.AreEqual(p1, l[0])", span="1218-1218", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_730 [label="Assert.AreEqual(p2, l[2])", span="1220-1220", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_725 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1213-1213", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_726 [label="l.Insert(1, p3)", span="1215-1215", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_727 [label="Assert.AreEqual(l, p3.Parent)", span="1216-1216", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_729 [label="Assert.AreEqual(p3, l[1])", span="1219-1219", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_731 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", span="1207-1207", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m5_978 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", span="1659-1659", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_979 [label="string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0,\r\n      ''''msg'''':''''No action taken''''\r\n    }\r\n  }\r\n}''", span="1661-1670", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_980 [label="JsonReader reader = new JsonTextReader(new StringReader(jsonText))", span="1672-1672", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_981 [label="reader.Read()", span="1673-1673", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_982 [label="reader.Read()", span="1674-1674", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_983 [label="reader.Read()", span="1675-1675", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_984 [label="reader.Read()", span="1676-1676", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_985 [label="reader.Read()", span="1677-1677", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_986 [label="JObject o = (JObject)JToken.ReadFrom(reader)", span="1679-1679", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_987 [label="Assert.IsNotNull(o)", span="1680-1680", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_988 [label="Assert.AreEqual(@''{\r\n  ''''code'''': 0,\r\n  ''''msg'''': ''''No action taken''''\r\n}'', o.ToString(Formatting.Indented))", span="1681-1684", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_989 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", span="1659-1659", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m5_1086 [label="Entry Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="118-118", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m5_815 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", span="1360-1360", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", file="JObjectTests.cs"];
m5_816 [label="ExceptionAssert.Throws<NotSupportedException>(\r\n                ''Specified method is not supported.'',\r\n                () =>\r\n                {\r\n                    IBindingList l = new JObject();\r\n                    l.Find(null, null);\r\n                })", span="1362-1368", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", file="JObjectTests.cs"];
m5_817 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", span="1360-1360", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", file="JObjectTests.cs"];
m5_1099 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JObjectTests.cs"];
m5_272 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", span="470-470", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m5_273 [label="JObject o = new JObject()", span="472-472", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m5_274 [label="o[''val1''] = new JRaw(''1'')", span="473-473", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m5_275 [label="o[''val2''] = new JRaw(''1'')", span="474-474", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m5_276 [label="string json = o.ToString()", span="476-476", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m5_277 [label="Assert.AreEqual(@''{\r\n  ''''val1'''': 1,\r\n  ''''val2'''': 1\r\n}'', json)", span="478-481", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m5_278 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", span="470-470", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m5_1058 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", span="1778-1778", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m5_1059 [label="JValue v = (JValue)JToken.FromObject(new Guid(''9065ACF3-C820-467D-BE50-8D4664BEAF35''))", span="1780-1780", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m5_1060 [label="Assert.AreEqual(v.Value, new Guid(''9065ACF3-C820-467D-BE50-8D4664BEAF35''))", span="1781-1781", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m5_1061 [label="Assert.AreEqual(''9065acf3-c820-467d-be50-8d4664beaf35'', v.ToString())", span="1783-1783", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m5_1062 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", span="1778-1778", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m5_498 [label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0", cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JObjectTests.cs"];
m5_98 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", span="202-202", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m5_99 [label="JObject o = new JObject()", span="204-204", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m5_100 [label="((ICollection<KeyValuePair<string, JToken>>)o).Add(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1)))", span="205-205", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m5_101 [label="Assert.AreEqual(1, (int)o[''PropertyNameValue''])", span="207-207", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m5_102 [label="Assert.AreEqual(1, o.Children().Count())", span="208-208", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m5_103 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", span="202-202", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m5_666 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", span="1121-1121", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", file="JObjectTests.cs"];
m5_667 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList<JToken> l = new JObject(p1, p2);\r\n\r\n                    l.Add(new JValue(''Bad!''));\r\n                })", span="1123-1131", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", file="JObjectTests.cs"];
m5_668 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", span="1121-1121", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", file="JObjectTests.cs"];
m5_58 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_59 [label="JObject o = new JObject()", span="147-147", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_60 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="148-148", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_61 [label="Assert.AreEqual(1, o.Children().Count())", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_62 [label="Assert.AreEqual(false, o.Remove(''sdf''))", span="151-151", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_63 [label="Assert.AreEqual(false, o.Remove(null))", span="152-152", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_64 [label="Assert.AreEqual(true, o.Remove(''PropertyNameValue''))", span="153-153", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_65 [label="Assert.AreEqual(0, o.Children().Count())", span="155-155", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_66 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m5_158 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JObjectTests.cs"];
m5_991 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JObjectTests.cs"];
m5_509 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", span="871-871", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="JObjectTests.cs"];
m5_510 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    l.Add(new JValue(''Bad!''));\r\n                })", span="873-882", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="JObjectTests.cs"];
m5_511 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", span="871-871", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="JObjectTests.cs"];
m5_615 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", span="1038-1038", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m5_616 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1040-1040", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m5_617 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1041-1041", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m5_618 [label="IList l = new JObject(p1, p2)", span="1042-1042", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m5_619 [label="Assert.IsNotNull(l.SyncRoot)", span="1044-1044", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m5_620 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", span="1038-1038", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m5_84 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JObjectTests.cs"];
m5_384 [label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="381-381", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m5_481 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", span="828-828", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m5_482 [label="JProperty p = new JProperty(''Test'', 1)", span="830-830", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m5_483 [label="IList l = new JObject(p)", span="831-831", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m5_484 [label="Assert.AreEqual(1, l.Count)", span="833-833", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m5_485 [label="l.Clear()", span="835-835", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m5_486 [label="Assert.AreEqual(0, l.Count)", span="837-837", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m5_487 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", span="828-828", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m5_537 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", span="918-918", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_538 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="920-920", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_539 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="921-921", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_540 [label="IList l = new JObject(p1, p2)", span="922-922", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_544 [label="l.Remove(p1)", span="930-930", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_546 [label="Assert.IsFalse(l.Contains(p1))", span="932-932", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_547 [label="Assert.IsTrue(l.Contains(p2))", span="933-933", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_548 [label="l.Remove(p2)", span="935-935", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_550 [label="Assert.IsFalse(l.Contains(p2))", span="937-937", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_551 [label="Assert.AreEqual(null, p2.Parent)", span="938-938", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_541 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="924-924", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_542 [label="l.Remove(p3)", span="927-927", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_543 [label="Assert.AreEqual(2, l.Count)", span="928-928", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_545 [label="Assert.AreEqual(1, l.Count)", span="931-931", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_549 [label="Assert.AreEqual(0, l.Count)", span="936-936", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_552 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", span="918-918", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m5_223 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="44-44", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m5_634 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", span="1068-1068", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m5_635 [label="JProperty p = new JProperty(''Test'', 1)", span="1070-1070", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m5_636 [label="IList<JToken> l = new JObject(p)", span="1071-1071", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m5_637 [label="Assert.AreEqual(0, l.IndexOf(p))", span="1073-1073", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m5_638 [label="Assert.AreEqual(-1, l.IndexOf(new JProperty(''Test'', 1)))", span="1074-1074", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m5_639 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", span="1068-1068", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m5_554 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", span="942-942", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_555 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="944-944", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_556 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="945-945", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_557 [label="IList l = new JObject(p1, p2)", span="946-946", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_559 [label="l.Remove(p1)", span="951-951", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_561 [label="l.Remove(p2)", span="954-954", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_558 [label="l.RemoveAt(0)", span="949-949", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_560 [label="Assert.AreEqual(1, l.Count)", span="952-952", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_562 [label="Assert.AreEqual(0, l.Count)", span="955-955", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_563 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", span="942-942", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m5_971 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="205-205", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObjectTests.cs"];
m5_1170 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JObjectTests.cs"];
m5_835 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", span="1391-1391", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_836 [label="JObject o = new JObject()", span="1393-1393", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_837 [label="o._addingNew += (s, e) => e.NewObject = new JProperty(''Property!'')", span="1394-1394", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_838 [label="IBindingList l = o", span="1396-1396", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_843 [label="Assert.AreEqual(o, p.Parent)", span="1402-1402", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_839 [label="object newObject = l.AddNew()", span="1397-1397", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_840 [label="Assert.IsNotNull(newObject)", span="1398-1398", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_841 [label="JProperty p = (JProperty)newObject", span="1400-1400", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_842 [label="Assert.AreEqual(''Property!'', p.Name)", span="1401-1401", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_844 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", span="1391-1391", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m5_334 [label="Entry Newtonsoft.Json.Tests.TestObjects.ShortieException.ShortieException()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ShortieException.ShortieException()", file="JObjectTests.cs"];
m5_737 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", span="1231-1231", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_738 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1233-1233", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_739 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1234-1234", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_740 [label="IList<JToken> l = new JObject(p1, p2)", span="1235-1235", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_744 [label="Assert.AreEqual(p2, l[1])", span="1242-1242", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_741 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1237-1237", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_742 [label="l[0] = p3", span="1239-1239", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_743 [label="Assert.AreEqual(p3, l[0])", span="1241-1241", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_745 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", span="1231-1231", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m5_746 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", span="1246-1246", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", file="JObjectTests.cs"];
m5_747 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add property Test3 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList<JToken> l = new JObject(p1, p2);\r\n\r\n                    JProperty p3 = new JProperty(''Test3'', ''III'');\r\n\r\n                    l[0] = p3;\r\n                    l[1] = p3;\r\n                })", span="1248-1259", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", file="JObjectTests.cs"];
m5_748 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", span="1246-1246", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", file="JObjectTests.cs"];
m5_794 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", span="1328-1328", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", file="JObjectTests.cs"];
m5_795 [label="ExceptionAssert.Throws<NotSupportedException>(\r\n                ''Specified method is not supported.'',\r\n                () =>\r\n                {\r\n                    IBindingList l = new JObject();\r\n                    l.ApplySort(null, ListSortDirection.Ascending);\r\n                })", span="1330-1336", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", file="JObjectTests.cs"];
m5_796 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", span="1328-1328", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", file="JObjectTests.cs"];
m5_1044 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", span="1760-1760", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m5_1045 [label="JValue v = (JValue)JToken.FromObject(TimeSpan.FromDays(1))", span="1762-1762", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m5_1046 [label="Assert.AreEqual(v.Value, TimeSpan.FromDays(1))", span="1763-1763", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m5_1047 [label="Assert.AreEqual(''1.00:00:00'', v.ToString())", span="1765-1765", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m5_1048 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", span="1760-1760", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m5_1071 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", span="1808-1808", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1072 [label="JObject o1 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''integer'', 1),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''array'', new JArray(1, 2)))", span="1810-1815", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1073 [label="Assert.IsTrue(o1.DeepEquals(o1))", span="1817-1817", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1075 [label="Assert.IsTrue(o1.DeepEquals(o2))", span="1826-1826", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1077 [label="Assert.IsFalse(o1.DeepEquals(o3))", span="1835-1835", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1079 [label="Assert.IsFalse(o1.DeepEquals(o4))", span="1844-1844", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1081 [label="Assert.IsFalse(o1.DeepEquals(o5))", span="1852-1852", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1082 [label="Assert.IsFalse(o1.DeepEquals(null))", span="1854-1854", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1074 [label="JObject o2 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''integer'', 1),\r\n                new JProperty(''array'', new JArray(1, 2)))", span="1819-1824", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1076 [label="JObject o3 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''integer'', 2),\r\n                new JProperty(''array'', new JArray(1, 2)))", span="1828-1833", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1078 [label="JObject o4 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''integer'', 1),\r\n                new JProperty(''array'', new JArray(2, 1)))", span="1837-1842", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1080 [label="JObject o5 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''integer'', 1))", span="1846-1850", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_1083 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", span="1808-1808", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m5_480 [label="Entry System.Collections.IList.IndexOf(object)", span="0-0", cluster="System.Collections.IList.IndexOf(object)", file="JObjectTests.cs"];
m5_854 [label="Entry System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", span="0-0", cluster="System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", file="JObjectTests.cs"];
m5_16 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m5_17 [label="var o = new JObject()", span="92-92", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m5_18 [label="var d = (IDictionary<string, JToken>)o", span="93-93", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m5_20 [label="o[''value''] = true", span="97-97", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m5_19 [label="Assert.AreEqual(0, d.Keys.Count)", span="95-95", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m5_21 [label="Assert.AreEqual(1, d.Keys.Count)", span="99-99", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m5_22 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m5_1162 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", span="1976-1976", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m5_1163 [label="var p = new Person\r\n            {\r\n                Name = ''Daniel Wertheim'',\r\n            }", span="1978-1981", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m5_1164 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new FooJsonConverter() },\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            }", span="1983-1987", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m5_1165 [label="var json = JsonConvert.SerializeObject(p, settings)", span="1989-1989", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m5_1166 [label="Assert.AreEqual(@''{''''foo'''':''''bar'''',''''name'''':''''Daniel Wertheim'''',''''birthDate'''':''''0001-01-01T00:00:00'''',''''lastModified'''':''''0001-01-01T00:00:00''''}'', json)", span="1991-1991", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m5_1167 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", span="1976-1976", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m5_311 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", span="539-539", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_312 [label="string json = @''{\r\n        ''''Name'''': ''''Apple'''',\r\n        ''''Expiry'''': new Date(1230422400000),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': [\r\n          ''''Small'''',\r\n          ''''Medium'''',\r\n          ''''Large''''\r\n        ]\r\n      }''", span="541-550", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_313 [label="JObject o = JObject.Parse(json)", span="552-552", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_314 [label="string name = (string)o[''Name'']", span="554-554", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_315 [label="JArray sizes = (JArray)o[''Sizes'']", span="557-557", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_317 [label="Console.WriteLine(name)", span="562-562", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_316 [label="string smallest = (string)sizes[0]", span="559-559", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_318 [label="Console.WriteLine(smallest)", span="563-563", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_319 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", span="539-539", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m5_488 [label="Entry System.Collections.IList.Clear()", span="0-0", cluster="System.Collections.IList.Clear()", file="JObjectTests.cs"];
m5_585 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", span="990-990", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_586 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="992-992", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_587 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="993-993", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_588 [label="IList l = new JObject(p1, p2)", span="994-994", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_592 [label="Assert.AreEqual(p2, l[1])", span="1001-1001", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_589 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="996-996", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_590 [label="l[0] = p3", span="998-998", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_591 [label="Assert.AreEqual(p3, l[0])", span="1000-1000", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_593 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", span="990-990", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m5_777 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", span="1299-1299", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", file="JObjectTests.cs"];
m5_778 [label="IBindingList l = new JObject()", span="1301-1301", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", file="JObjectTests.cs"];
m5_779 [label="Assert.AreEqual(true, l.AllowEdit)", span="1302-1302", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", file="JObjectTests.cs"];
m5_780 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", span="1299-1299", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", file="JObjectTests.cs"];
m5_628 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", span="1058-1058", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m5_629 [label="JProperty p = new JProperty(''Test'', 1)", span="1060-1060", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m5_630 [label="IList<JToken> l = new JObject(p)", span="1061-1061", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m5_631 [label="Assert.IsTrue(l.Contains(p))", span="1063-1063", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m5_632 [label="Assert.IsFalse(l.Contains(new JProperty(''Test'', 1)))", span="1064-1064", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m5_633 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", span="1058-1058", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m5_79 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JObjectTests.cs"];
m5_116 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", span="227-227", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_117 [label="JValue v = new JValue(1)", span="229-229", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_118 [label="JObject o = new JObject()", span="230-230", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_119 [label="o.Add(''PropertyNameValue'', v)", span="231-231", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_123 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', v))", span="237-237", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_120 [label="Assert.AreEqual(1, o.Children().Count())", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_121 [label="bool contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1)))", span="234-234", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_125 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(2)))", span="240-240", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_127 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue1'', new JValue(1)))", span="243-243", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_129 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(default(KeyValuePair<string, JToken>))", span="246-246", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_122 [label="Assert.AreEqual(false, contains)", span="235-235", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_124 [label="Assert.AreEqual(true, contains)", span="238-238", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_126 [label="Assert.AreEqual(false, contains)", span="241-241", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_128 [label="Assert.AreEqual(false, contains)", span="244-244", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_130 [label="Assert.AreEqual(false, contains)", span="247-247", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_131 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", span="227-227", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m5_266 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", span="459-459", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="JObjectTests.cs"];
m5_267 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Invalid property identifier character: ]. Path 'name', line 3, position 5.'',\r\n                () => { JObject.Parse(@''{\r\n    ''''name'''': ''''James'''',\r\n    ]!#$THIS IS: BAD JSON![{}}}}]\r\n  }''); })", span="461-466", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="JObjectTests.cs"];
m5_268 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", span="459-459", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="JObjectTests.cs"];
m5_198 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JObjectTests.cs"];
m5_342 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", span="636-636", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_343 [label="JObject moss = new JObject()", span="638-638", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_344 [label="moss[''FirstName''] = new JValue(''Maurice'')", span="639-639", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_345 [label="moss[''LastName''] = new JValue(''Moss'')", span="640-640", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_346 [label="moss[''BirthDate''] = new JValue(new DateTime(1977, 12, 30))", span="641-641", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_347 [label="moss[''Department''] = new JValue(''IT'')", span="642-642", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_348 [label="moss[''JobTitle''] = new JValue(''Support'')", span="643-643", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_349 [label="Console.WriteLine(moss.ToString())", span="645-645", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_350 [label="JObject jen = new JObject()", span="655-655", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_351 [label="jen[''FirstName''] = ''Jen''", span="656-656", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_352 [label="jen[''LastName''] = ''Barber''", span="657-657", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_353 [label="jen[''BirthDate''] = new DateTime(1978, 3, 15)", span="658-658", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_354 [label="jen[''Department''] = ''IT''", span="659-659", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_355 [label="jen[''JobTitle''] = ''Manager''", span="660-660", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_356 [label="Console.WriteLine(jen.ToString())", span="662-662", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_357 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", span="636-636", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m5_1151 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="1677-1677", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m5_360 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", span="673-673", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_361 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="675-675", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_362 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="676-676", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_363 [label="JObject o = new JObject(p1, p2)", span="678-678", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_365 [label="Assert.AreEqual(p1, l[0])", span="680-680", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_368 [label="p1.Replace(p3)", span="685-685", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_369 [label="Assert.AreEqual(null, p1.Parent)", span="686-686", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_366 [label="Assert.AreEqual(p2, l[1])", span="681-681", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_372 [label="Assert.AreEqual(p2, l[1])", span="690-690", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_376 [label="p2.Replace(p4)", span="697-697", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_377 [label="Assert.AreEqual(null, p2.Parent)", span="698-698", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_364 [label="IList l = o", span="679-679", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_374 [label="Assert.AreEqual(2, o.Properties().Count())", span="693-693", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_370 [label="Assert.AreEqual(l, p3.Parent)", span="687-687", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_371 [label="Assert.AreEqual(p3, l[0])", span="689-689", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_373 [label="Assert.AreEqual(2, l.Count)", span="692-692", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_378 [label="Assert.AreEqual(l, p4.Parent)", span="699-699", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_379 [label="Assert.AreEqual(p3, l[0])", span="701-701", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_380 [label="Assert.AreEqual(p4, l[1])", span="702-702", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_367 [label="JProperty p3 = new JProperty(''Test1'', ''III'')", span="683-683", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_375 [label="JProperty p4 = new JProperty(''Test4'', ''IV'')", span="695-695", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_381 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", span="673-673", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m5_657 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", span="1106-1106", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_658 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1108-1108", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_659 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1109-1109", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_660 [label="IList<JToken> l = new JObject(p1, p2)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_661 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1112-1112", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_662 [label="l.Add(p3)", span="1114-1114", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_663 [label="Assert.AreEqual(3, l.Count)", span="1116-1116", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_664 [label="Assert.AreEqual(p3, l[2])", span="1117-1117", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_665 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", span="1106-1106", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m5_1038 [label="Entry System.ComponentModel.PropertyDescriptor.CanResetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.CanResetValue(object)", file="JObjectTests.cs"];
m5_239 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", span="423-423", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="JObjectTests.cs"];
m5_240 [label="ExceptionAssert.Throws<JsonReaderException>(''Error reading JObject from JsonReader. Current JsonReader item is not an object: StartArray. Path '', line 1, position 1.'',\r\n                () =>\r\n                {\r\n                    string json = @''[''''prop'''']'';\r\n                    JObject.Parse(json);\r\n                })", span="425-430", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="JObjectTests.cs"];
m5_241 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", span="423-423", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="JObjectTests.cs"];
m5_14 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="550-550", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JObjectTests.cs"];
m5_1037 [label="Entry System.ComponentModel.ICustomTypeDescriptor.GetProperties()", span="0-0", cluster="System.ComponentModel.ICustomTypeDescriptor.GetProperties()", file="JObjectTests.cs"];
m5_1159 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", span="1969-1969", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", file="JObjectTests.cs"];
m5_1160 [label="return true;", span="1971-1971", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", file="JObjectTests.cs"];
m5_1161 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", span="1969-1969", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", file="JObjectTests.cs"];
m5_972 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", span="1652-1652", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", file="JObjectTests.cs"];
m5_973 [label="ExceptionAssert.Throws<Exception>(''Unexpected end of content while loading JObject. Path 'foo', line 1, position 6.'',\r\n                () => { JObject.Parse(''{ foo:''); })", span="1654-1655", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", file="JObjectTests.cs"];
m5_974 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", span="1652-1652", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", file="JObjectTests.cs"];
m5_827 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", span="1379-1379", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", file="JObjectTests.cs"];
m5_828 [label="ExceptionAssert.Throws<JsonException>(\r\n                ''Could not determine new value to add to 'Newtonsoft.Json.Linq.JObject'.'',\r\n                () =>\r\n                {\r\n                    IBindingList l = new JObject();\r\n                    l.AddNew();\r\n                })", span="1381-1387", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", file="JObjectTests.cs"];
m5_829 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", span="1379-1379", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", file="JObjectTests.cs"];
m5_1152 [label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="564-564", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JObjectTests.cs"];
m5_1154 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="394-394", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObjectTests.cs"];
m5_1153 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="369-369", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObjectTests.cs"];
m5_823 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", span="1372-1372", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", file="JObjectTests.cs"];
m5_824 [label="IBindingList l = new JObject()", span="1374-1374", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", file="JObjectTests.cs"];
m5_825 [label="Assert.AreEqual(false, l.IsSorted)", span="1375-1375", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", file="JObjectTests.cs"];
m5_826 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", span="1372-1372", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", file="JObjectTests.cs"];
m5_955 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", span="1616-1616", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", file="JObjectTests.cs"];
m5_956 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Object to String.'',\r\n                () =>\r\n                {\r\n                    string json = @''{\r\n  ''''responseData'''': {}, \r\n  ''''responseDetails'''': null, \r\n  ''''responseStatus'''': 200\r\n}'';\r\n\r\n                    JObject o = JObject.Parse(json);\r\n\r\n                    string name = (string)o[''responseData''];\r\n                })", span="1618-1630", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", file="JObjectTests.cs"];
m5_957 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", span="1616-1616", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", file="JObjectTests.cs"];
m5_1051 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="773-773", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JObjectTests.cs"];
m5_254 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JObjectTests.cs"];
m5_255 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", span="445-445", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_256 [label="string json = @''{''''foo'''':true}''", span="447-447", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_257 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="448-448", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_258 [label="bool? value = o.Value<bool?>(''foo'')", span="449-449", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_259 [label="Assert.AreEqual(true, value)", span="450-450", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_260 [label="json = @''{''''foo'''':null}''", span="452-452", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_261 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="453-453", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_262 [label="value = o.Value<bool?>(''foo'')", span="454-454", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_263 [label="Assert.AreEqual(null, value)", span="455-455", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_264 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", span="445-445", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m5_508 [label="Entry System.Collections.IList.Add(object)", span="0-0", cluster="System.Collections.IList.Add(object)", file="JObjectTests.cs"];
m5_435 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", span="767-767", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_436 [label="object changed = null", span="769-769", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_437 [label="int changedCount = 0", span="770-770", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_438 [label="JObject o = new JObject()", span="772-772", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_439 [label="o.PropertyChanged += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changedCount++;\r\n            }", span="773-778", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_440 [label="o[''StringValue''] = ''value1''", span="780-780", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_442 [label="Assert.AreEqual(''value1'', (string)o[''StringValue''])", span="782-782", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_444 [label="o[''StringValue''] = ''value1''", span="785-785", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_446 [label="o[''StringValue''] = ''value2''", span="788-788", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_448 [label="Assert.AreEqual(''value2'', (string)o[''StringValue''])", span="790-790", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_450 [label="o[''StringValue''] = null", span="793-793", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_452 [label="Assert.AreEqual(null, (string)o[''StringValue''])", span="795-795", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_454 [label="o[''NullValue''] = null", span="798-798", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_456 [label="Assert.AreEqual(new JValue((object)null), o[''NullValue''])", span="800-800", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", color=red, community=0, file="JObjectTests.cs"];
m5_458 [label="o[''NullValue''] = null", span="803-803", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_441 [label="Assert.AreEqual(''value1'', changed)", span="781-781", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_443 [label="Assert.AreEqual(1, changedCount)", span="783-783", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_445 [label="Assert.AreEqual(1, changedCount)", span="786-786", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_447 [label="Assert.AreEqual(''value2'', changed)", span="789-789", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_449 [label="Assert.AreEqual(2, changedCount)", span="791-791", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_451 [label="Assert.AreEqual(null, changed)", span="794-794", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_453 [label="Assert.AreEqual(3, changedCount)", span="796-796", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_455 [label="Assert.AreEqual(null, changed)", span="799-799", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_457 [label="Assert.AreEqual(4, changedCount)", span="801-801", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_459 [label="Assert.AreEqual(4, changedCount)", span="804-804", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_460 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", span="767-767", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m5_40 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m5_1173 [label=changingCount, span="", file="JObjectTests.cs"];
m5_1174 [label=changedCount, span="", file="JObjectTests.cs"];
m5_1175 [label=changedCount, span="", file="JObjectTests.cs"];
m6_5 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Account.Account()", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Account.Account()", file="JProperty.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", file="JProperty.cs"];
m6_1 [label="Account account = new Account\r\n            {\r\n                FullName = ''Joe User'',\r\n                EmailAddress = ''joe@example.com'',\r\n                PasswordHash = ''VHdlZXQgJ1F1aWNrc2lsdmVyJyB0byBASmFtZXNOSw==''\r\n            }", span="48-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", file="JProperty.cs"];
m6_2 [label="string json = JsonConvert.SerializeObject(account)", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", file="JProperty.cs"];
m6_3 [label="Console.WriteLine(json)", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", file="JProperty.cs"];
m6_4 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore.Example()", file="JProperty.cs"];
m6_7 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JProperty.cs"];
m6_6 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JProperty.cs"];
m8_97 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="JsonArrayContract.cs"];
m8_82 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="247-247", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonArrayContract.cs"];
m8_69 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonArrayContract.cs"];
m8_84 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_85 [label="_genericWrapperCreator == null", span="213-213", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_93 [label="return (IWrappedCollection)_genericWrapperCreator(null, list);", span="229-229", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_86 [label="_genericWrapperType = typeof(CollectionWrapper<>).MakeGenericType(CollectionItemType)", span="215-215", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_87 [label="Type constructorArgument", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_88 [label="ReflectionUtils.InheritsGenericDefinition(_genericCollectionDefinitionType, typeof(List<>))\r\n                    || _genericCollectionDefinitionType.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="219-220", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_89 [label="constructorArgument = typeof(ICollection<>).MakeGenericType(CollectionItemType)", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_90 [label="constructorArgument = _genericCollectionDefinitionType", span="223-223", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_91 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { constructorArgument })", span="225-225", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_92 [label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(genericWrapperConstructor)", span="226-226", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_94 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_73 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="JsonArrayContract.cs"];
m8_98 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="232-232", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_99 [label="_genericTemporaryCollectionCreator == null", span="234-234", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_100 [label="Type collectionItemType = (IsMultidimensionalArray) ? typeof(object) : CollectionItemType", span="237-237", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_103 [label="return (IList)_genericTemporaryCollectionCreator();", span="242-242", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_101 [label="Type temporaryListType = typeof(List<>).MakeGenericType(collectionItemType)", span="238-238", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_102 [label="_genericTemporaryCollectionCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryListType)", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_104 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="232-232", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_77 [label="Entry System.Type.Assembly()", span="152-152", cluster="System.Type.Assembly()", file="JsonArrayContract.cs"];
m8_105 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="65-65", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonArrayContract.cs"];
m8_74 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumableCollectionConstructor(System.Type, System.Type)", span="104-104", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumableCollectionConstructor(System.Type, System.Type)", file="JsonArrayContract.cs"];
m8_80 [label="Entry System.Type.IsGenericType()", span="125-125", cluster="System.Type.IsGenericType()", file="JsonArrayContract.cs"];
m8_96 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="JsonArrayContract.cs"];
m8_95 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonArrayContract.cs"];
m8_79 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", span="103-103", cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", file="JsonArrayContract.cs"];
m8_71 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonArrayContract.cs"];
m8_78 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", span="57-57", cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JsonArrayContract.cs"];
m8_83 [label="Entry Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", span="103-103", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out System.Reflection.MethodBase)", file="JsonArrayContract.cs"];
m8_70 [label="Entry System.Type.GetArrayRank()", span="0-0", cluster="System.Type.GetArrayRank()", file="JsonArrayContract.cs"];
m8_72 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="276-276", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonArrayContract.cs"];
m8_75 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="316-316", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonArrayContract.cs"];
m8_76 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="261-261", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonArrayContract.cs"];
m8_68 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="360-360", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonArrayContract.cs"];
m8_81 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="JsonArrayContract.cs"];
m8_106 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonArrayContract.cs"];
m8_0 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_1 [label="ContractType = JsonContractType.Array", span="78-78", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_11 [label="typeof(IList).IsAssignableFrom(underlyingType)", span="93-93", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_12 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="95-95", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_14 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(underlyingType)", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_15 [label="underlyingType == typeof(IList)", span="100-100", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_18 [label="ParametrizedConstructor = CollectionUtils.ResolveEnumableCollectionConstructor(underlyingType, CollectionItemType)", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_19 [label="IsReadOnlyOrFixedSize = ReflectionUtils.InheritsGenericDefinition(underlyingType, typeof(ReadOnlyCollection<>))", span="106-106", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_21 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="109-109", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_23 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(ICollection<>))\r\n                    || ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IList<>))", span="113-114", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_25 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(ISet<>))", span="118-118", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_27 [label="ParametrizedConstructor = CollectionUtils.ResolveEnumableCollectionConstructor(underlyingType, CollectionItemType)", span="122-122", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_30 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IReadOnlyCollection<>), out tempCollectionType)", span="127-127", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_31 [label="CollectionItemType = underlyingType.GetGenericArguments()[0]", span="129-129", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_32 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IReadOnlyCollection<>))\r\n                    || ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IReadOnlyList<>))", span="131-132", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_38 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IEnumerable<>), out tempCollectionType)", span="141-141", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_42 [label="ParametrizedConstructor = CollectionUtils.ResolveEnumableCollectionConstructor(underlyingType, CollectionItemType)", span="148-148", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_43 [label="ParametrizedConstructor == null && underlyingType.Name == FSharpUtils.FSharpListTypeName", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_44 [label="FSharpUtils.EnsureInitialized(underlyingType.Assembly())", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_46 [label="underlyingType.IsGenericType() && underlyingType.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="158-158", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_62 [label="ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(underlyingType, CollectionItemType, out immutableCreatedType, out immutableParameterizedCreator)", span="201-201", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_2 [label="IsArray = CreatedType.IsArray", span="79-79", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_3 [label="bool canDeserialize", span="81-81", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_4 [label="Type tempCollectionType", span="83-83", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_5 [label=IsArray, span="84-84", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_6 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="86-86", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_7 [label="IsReadOnlyOrFixedSize = true", span="87-87", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_8 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="88-88", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_9 [label="canDeserialize = true", span="90-90", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_10 [label="IsMultidimensionalArray = (IsArray && UnderlyingType.GetArrayRank() > 1)", span="91-91", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_57 [label="CanDeserialize = canDeserialize", span="182-182", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_13 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="96-96", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_16 [label="CreatedType = typeof(List<object>)", span="101-101", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_17 [label="CollectionItemType != null", span="103-103", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_20 [label="canDeserialize = true", span="107-107", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_22 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_24 [label="CreatedType = typeof(List<>).MakeGenericType(CollectionItemType)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_26 [label="CreatedType = typeof(HashSet<>).MakeGenericType(CollectionItemType)", span="119-119", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_28 [label="canDeserialize = true", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_29 [label="ShouldCreateWrapper = true", span="124-124", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_33 [label="CreatedType = typeof(ReadOnlyCollection<>).MakeGenericType(CollectionItemType)", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_34 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_35 [label="ParametrizedConstructor = CollectionUtils.ResolveEnumableCollectionConstructor(CreatedType, CollectionItemType)", span="136-136", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_36 [label="IsReadOnlyOrFixedSize = true", span="137-137", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_37 [label="canDeserialize = (ParametrizedConstructor != null)", span="138-138", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_39 [label="CollectionItemType = tempCollectionType.GetGenericArguments()[0]", span="143-143", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_55 [label="canDeserialize = false", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_47 [label="_genericCollectionDefinitionType = tempCollectionType", span="160-160", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_40 [label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IEnumerable<>))", span="145-145", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_41 [label="CreatedType = typeof(List<>).MakeGenericType(CollectionItemType)", span="146-146", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_45 [label="ParametrizedConstructor = FSharpUtils.CreateSeq(CollectionItemType)", span="154-154", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_51 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="168-168", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_48 [label="IsReadOnlyOrFixedSize = false", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_49 [label="ShouldCreateWrapper = false", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_50 [label="canDeserialize = true", span="164-164", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_52 [label="IsReadOnlyOrFixedSize = true", span="170-170", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_53 [label="ShouldCreateWrapper = true", span="171-171", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_54 [label="canDeserialize = (ParametrizedConstructor != null)", span="172-172", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_56 [label="ShouldCreateWrapper = true", span="179-179", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_58 [label="CollectionItemType != null", span="184-184", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_59 [label="_isCollectionItemTypeNullableType = ReflectionUtils.IsNullableType(CollectionItemType)", span="185-185", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_60 [label="Type immutableCreatedType", span="199-199", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_61 [label="MethodBase immutableParameterizedCreator", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", color=red, community=0, file="JsonArrayContract.cs"];
m8_63 [label="CreatedType = immutableCreatedType", span="203-203", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_64 [label="ParametrizedConstructor = immutableParameterizedCreator", span="204-204", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_65 [label="IsReadOnlyOrFixedSize = true", span="205-205", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_66 [label="CanDeserialize = true", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_67 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_107 [label="Newtonsoft.Json.Serialization.JsonArrayContract", span="", file="JsonArrayContract.cs"];
m9_7 [label="Entry Unk.CreateComment", span="", cluster="Unk.CreateComment", file="JsonDictionaryContract.cs"];
m9_512 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonDictionaryContract.cs"];
m9_175 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="121-121", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", file="JsonDictionaryContract.cs"];
m9_595 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1647-1647", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_605 [label="reader.TokenType == JsonToken.String", span="1649-1649", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_606 [label="return reader.Value?.ToString();", span="1651-1651", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_607 [label="reader.TokenType == JsonToken.Integer", span="1653-1653", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_608 [label="reader.Value is BigInteger", span="1656-1656", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_609 [label="return ((BigInteger)reader.Value).ToString(CultureInfo.InvariantCulture);", span="1658-1658", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_610 [label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1662-1662", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_611 [label="reader.TokenType == JsonToken.Float", span="1664-1664", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_612 [label="reader.Value is decimal", span="1666-1666", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_613 [label="return XmlConvert.ToString((decimal)reader.Value);", span="1668-1668", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_614 [label="reader.Value is float", span="1670-1670", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_615 [label="return XmlConvert.ToString((float)reader.Value);", span="1672-1672", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_616 [label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1675-1675", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_617 [label="reader.TokenType == JsonToken.Boolean", span="1677-1677", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_618 [label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1679-1679", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_619 [label="reader.TokenType == JsonToken.Date", span="1681-1681", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_620 [label="reader.Value is DateTimeOffset", span="1684-1684", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_621 [label="return XmlConvert.ToString((DateTimeOffset)reader.Value);", span="1686-1686", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_622 [label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1690-1690", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_624 [label="reader.TokenType == JsonToken.Null", span="1697-1697", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_626 [label="throw JsonSerializationException.Create(reader, ''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1703-1703", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_623 [label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1692-1692", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_625 [label="return null;", span="1699-1699", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_627 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1647-1647", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JsonDictionaryContract.cs"];
m9_34 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="88-88", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="JsonDictionaryContract.cs"];
m9_35 [label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="90-90", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="JsonDictionaryContract.cs"];
m9_36 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="88-88", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="JsonDictionaryContract.cs"];
m9_538 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JsonDictionaryContract.cs"];
m9_134 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="502-502", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="JsonDictionaryContract.cs"];
m9_135 [label="return new XObjectWrapper(new XComment(text));", span="504-504", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="JsonDictionaryContract.cs"];
m9_136 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="502-502", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="JsonDictionaryContract.cs"];
m9_96 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="352-352", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="JsonDictionaryContract.cs"];
m9_97 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="352-352", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="JsonDictionaryContract.cs"];
m9_110 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="359-359", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="JsonDictionaryContract.cs"];
m9_111 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="359-359", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="JsonDictionaryContract.cs"];
m9_536 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonDictionaryContract.cs"];
m9_157 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="532-532", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JsonDictionaryContract.cs"];
m9_158 [label="return new XDocumentTypeWrapper(new XDocumentType(name, publicId, systemId, internalSubset));", span="534-534", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JsonDictionaryContract.cs"];
m9_159 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="532-532", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JsonDictionaryContract.cs"];
m9_798 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="JsonDictionaryContract.cs"];
m9_201 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="726-726", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_202 [label="XDocument document = node as XDocument", span="728-728", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_205 [label="XElement element = node as XElement", span="734-734", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_208 [label="XContainer container = node as XContainer", span="740-740", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_211 [label="XProcessingInstruction pi = node as XProcessingInstruction", span="746-746", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_214 [label="XText text = node as XText", span="752-752", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_217 [label="XComment comment = node as XComment", span="758-758", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_220 [label="XAttribute attribute = node as XAttribute", span="764-764", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_223 [label="XDocumentType type = node as XDocumentType", span="770-770", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_226 [label="return new XObjectWrapper(node);", span="776-776", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_203 [label="document != null", span="729-729", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_204 [label="return new XDocumentWrapper(document);", span="731-731", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_206 [label="element != null", span="735-735", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_207 [label="return new XElementWrapper(element);", span="737-737", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_209 [label="container != null", span="741-741", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_210 [label="return new XContainerWrapper(container);", span="743-743", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_212 [label="pi != null", span="747-747", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_213 [label="return new XProcessingInstructionWrapper(pi);", span="749-749", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_215 [label="text != null", span="753-753", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_216 [label="return new XTextWrapper(text);", span="755-755", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_218 [label="comment != null", span="759-759", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_219 [label="return new XCommentWrapper(comment);", span="761-761", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_221 [label="attribute != null", span="765-765", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_222 [label="return new XAttributeWrapper(attribute);", span="767-767", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_224 [label="type != null", span="771-771", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_225 [label="return new XDocumentTypeWrapper(type);", span="773-773", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_227 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="726-726", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="JsonDictionaryContract.cs"];
m9_171 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="547-547", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_172 [label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="549-549", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_173 [label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceUri)));", span="550-550", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_174 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="547-547", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_513 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1538-1538", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_541 [label="string.IsNullOrEmpty(propertyName)", span="1540-1540", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_542 [label="throw JsonSerializationException.Create(reader, ''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1542-1542", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_543 [label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1545-1545", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_544 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1547-1547", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_545 [label="propertyName.StartsWith('@')", span="1549-1549", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_546 [label="string attributeName = propertyName.Substring(1)", span="1551-1551", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_548 [label="AddAttribute(reader, document, currentNode, propertyName, attributeName, manager, attributePrefix)", span="1554-1554", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_550 [label="propertyName.StartsWith('$')", span="1558-1558", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_551 [label=propertyName, span="1560-1560", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_553 [label="propertyName = propertyName.Substring(1)", span="1563-1563", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_554 [label="elementPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1564-1564", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_555 [label="CreateElement(reader, document, currentNode, propertyName, manager, elementPrefix, attributeNameValues)", span="1565-1565", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_562 [label="string attributePrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1572-1572", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_563 [label="AddAttribute(reader, document, currentNode, propertyName, attributeName, manager, attributePrefix)", span="1573-1573", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_565 [label="CreateElement(reader, document, currentNode, propertyName, manager, elementPrefix, attributeNameValues)", span="1578-1578", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_547 [label="string attributePrefix = MiscellaneousUtils.GetPrefix(attributeName)", span="1552-1552", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_549 [label="return;", span="1555-1555", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_552 [label="JsonTypeReflector.ArrayValuesPropertyName", span="1562-1562", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_557 [label="JsonTypeReflector.IdPropertyName", span="1567-1567", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_561 [label="string attributeName = propertyName.Substring(1)", span="1571-1571", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_556 [label="return;", span="1566-1566", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_558 [label="JsonTypeReflector.RefPropertyName", span="1568-1568", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_559 [label="JsonTypeReflector.TypePropertyName", span="1569-1569", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_560 [label="JsonTypeReflector.ValuePropertyName", span="1570-1570", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_564 [label="return;", span="1574-1574", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_566 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1538-1538", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_51 [label="Entry Unk.CreateAttribute", span="", cluster="Unk.CreateAttribute", file="JsonDictionaryContract.cs"];
m9_118 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="363-363", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_119 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="363-363", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_160 [label="Entry XDocumentType.cstr", span="", cluster="XDocumentType.cstr", file="JsonDictionaryContract.cs"];
m9_247 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="950-950", cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_248 [label="IXmlNode result = base.AppendChild(newChild)", span="952-952", cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_249 [label="_attributes = null", span="953-953", cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_250 [label="return result;", span="954-954", cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_251 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="950-950", cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_180 [label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="852-852", cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="JsonDictionaryContract.cs"];
m9_240 [label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="852-852", cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="JsonDictionaryContract.cs"];
m9_339 [label="Entry JsonSerializationException.cstr", span="", cluster="JsonSerializationException.cstr", file="JsonDictionaryContract.cs"];
m9_150 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="522-522", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_151 [label="return new XObjectWrapper(new XText(text));", span="524-524", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_152 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="522-522", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_75 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="231-231", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="JsonDictionaryContract.cs"];
m9_76 [label="_node = node", span="233-233", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="JsonDictionaryContract.cs"];
m9_77 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="231-231", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="JsonDictionaryContract.cs"];
m9_57 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="JsonDictionaryContract.cs"];
m9_58 [label="_element = element", span="140-140", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="JsonDictionaryContract.cs"];
m9_59 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="JsonDictionaryContract.cs"];
m9_348 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1176-1176", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_349 [label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="1179-1179", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_351 [label="i < node.ChildNodes.Count", span="1181-1181", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_352 [label="IXmlNode childNode = node.ChildNodes[i]", span="1183-1183", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_353 [label="string nodeName = GetPropertyName(childNode, manager)", span="1184-1184", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_367 [label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="1214-1214", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_369 [label=writePropertyName, span="1220-1220", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_370 [label="writer.WritePropertyName(elementNames)", span="1222-1222", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_371 [label="writer.WriteStartArray()", span="1225-1225", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_374 [label="SerializeNode(writer, groupedNodes[i], manager, false)", span="1229-1229", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_376 [label="writer.WriteEndArray()", span="1232-1232", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_350 [label="int i = 0", span="1181-1181", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_355 [label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="1187-1187", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_357 [label="nodesGroupedByName.Add(nodeName, nodes)", span="1190-1190", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_360 [label=nodesGroupedByName, span="1198-1198", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_359 [label="i++", span="1181-1181", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_358 [label="nodes.Add(childNode)", span="1193-1193", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_354 [label="List<IXmlNode> nodes", span="1186-1186", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_356 [label="nodes = new List<IXmlNode>()", span="1189-1189", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_361 [label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="1200-1200", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_362 [label="bool writeArray", span="1201-1201", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_363 [label="groupedNodes.Count == 1", span="1203-1203", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_364 [label="writeArray = IsArray(groupedNodes[0])", span="1205-1205", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_368 [label="string elementNames = nodeNameGroup.Key", span="1218-1218", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_373 [label="i < groupedNodes.Count", span="1227-1227", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_365 [label="writeArray = true", span="1209-1209", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_366 [label="!writeArray", span="1212-1212", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_372 [label="int i = 0", span="1227-1227", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_375 [label="i++", span="1227-1227", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_377 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1176-1176", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_11 [label="Entry Unk.CreateTextNode", span="", cluster="Unk.CreateTextNode", file="JsonDictionaryContract.cs"];
m9_78 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="270-270", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_79 [label="node.NodeType", span="272-272", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_81 [label="return new XmlElementWrapper((XmlElement)node);", span="275-275", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_83 [label="return new XmlDeclarationWrapper((XmlDeclaration)node);", span="277-277", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_85 [label="return new XmlDocumentTypeWrapper((XmlDocumentType)node);", span="279-279", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_86 [label="return new XmlNodeWrapper(node);", span="281-281", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_80 [label="XmlNodeType.Element", span="274-274", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_82 [label="XmlNodeType.XmlDeclaration", span="276-276", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_84 [label="XmlNodeType.DocumentType", span="278-278", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_87 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="270-270", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="JsonDictionaryContract.cs"];
m9_571 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="JsonDictionaryContract.cs"];
m9_69 [label="Entry Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="165-165", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="JsonDictionaryContract.cs"];
m9_70 [label="_declaration = declaration", span="168-168", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="JsonDictionaryContract.cs"];
m9_71 [label="Exit Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="165-165", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="JsonDictionaryContract.cs"];
m9_64 [label="Entry Unk.SetAttributeNode", span="", cluster="Unk.SetAttributeNode", file="JsonDictionaryContract.cs"];
m9_98 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="353-353", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="JsonDictionaryContract.cs"];
m9_99 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="353-353", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="JsonDictionaryContract.cs"];
m9_186 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="577-577", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_187 [label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="579-579", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_191 [label="return base.AppendChild(newChild);", span="587-587", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_188 [label="declarationWrapper != null", span="580-580", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_189 [label="Document.Declaration = declarationWrapper.Declaration", span="582-582", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_190 [label="return declarationWrapper;", span="583-583", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_192 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="577-577", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_632 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JsonDictionaryContract.cs"];
m9_24 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="78-78", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="JsonDictionaryContract.cs"];
m9_25 [label="return new XmlDeclarationWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="80-80", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="JsonDictionaryContract.cs"];
m9_26 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="78-78", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="JsonDictionaryContract.cs"];
m9_182 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="558-558", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_183 [label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="560-560", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_184 [label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceUri), value));", span="561-561", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_185 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="558-558", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_233 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JsonDictionaryContract.cs"];
m9_467 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="54-54", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JsonDictionaryContract.cs"];
m9_142 [label="Entry XText.cstr", span="", cluster="XText.cstr", file="JsonDictionaryContract.cs"];
m9_539 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1911-1911", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_732 [label="string name = null", span="1913-1913", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_736 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1917-1917", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_737 [label="reader.Value.ToString()", span="1919-1919", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_739 [label="reader.Read()", span="1922-1922", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_740 [label="name = reader.Value.ToString()", span="1923-1923", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_742 [label="reader.Read()", span="1926-1926", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_743 [label="publicId = reader.Value.ToString()", span="1927-1927", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_745 [label="reader.Read()", span="1930-1930", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_746 [label="systemId = reader.Value.ToString()", span="1931-1931", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_748 [label="reader.Read()", span="1934-1934", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_749 [label="internalSubset = reader.Value.ToString()", span="1935-1935", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_750 [label="throw JsonSerializationException.Create(reader, ''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1938-1938", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_751 [label="IXmlNode documentType = document.CreateXmlDocumentType(name, publicId, systemId, internalSubset)", span="1942-1942", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_752 [label="currentNode.AppendChild(documentType)", span="1943-1943", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_733 [label="string publicId = null", span="1914-1914", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_734 [label="string systemId = null", span="1915-1915", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_735 [label="string internalSubset = null", span="1916-1916", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_738 [label="''@name''", span="1921-1921", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_741 [label="''@public''", span="1925-1925", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_744 [label="''@system''", span="1929-1929", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_747 [label="''@internalSubset''", span="1933-1933", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_753 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1911-1911", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_570 [label="Entry string.StartsWith(char)", span="278-278", cluster="string.StartsWith(char)", file="JsonDictionaryContract.cs"];
m9_629 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonDictionaryContract.cs"];
m9_593 [label="Entry Unk.EncodeName", span="", cluster="Unk.EncodeName", file="JsonDictionaryContract.cs"];
m9_60 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_61 [label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="145-145", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_62 [label="_element.SetAttributeNode((XmlAttribute)xmlAttributeWrapper.WrappedNode)", span="147-147", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_63 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_108 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="358-358", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="JsonDictionaryContract.cs"];
m9_109 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="358-358", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="JsonDictionaryContract.cs"];
m9_301 [label="Entry Unk.AddNamespace", span="", cluster="Unk.AddNamespace", file="JsonDictionaryContract.cs"];
m9_537 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1873-1873", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_711 [label="propertyName == DeclarationName", span="1875-1875", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_715 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1880-1880", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_716 [label="reader.Value.ToString()", span="1882-1882", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_718 [label="reader.Read()", span="1885-1885", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_719 [label="version = reader.Value.ToString()", span="1886-1886", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_721 [label="reader.Read()", span="1889-1889", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_722 [label="encoding = reader.Value.ToString()", span="1890-1890", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_724 [label="reader.Read()", span="1893-1893", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_725 [label="standalone = reader.Value.ToString()", span="1894-1894", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_726 [label="throw JsonSerializationException.Create(reader, ''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1897-1897", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_727 [label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1901-1901", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_728 [label="currentNode.AppendChild(declaration)", span="1902-1902", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_729 [label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1906-1906", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_730 [label="currentNode.AppendChild(instruction)", span="1907-1907", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_712 [label="string version = null", span="1877-1877", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_713 [label="string encoding = null", span="1878-1878", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_714 [label="string standalone = null", span="1879-1879", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_717 [label="''@version''", span="1884-1884", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_720 [label="''@encoding''", span="1888-1888", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_723 [label="''@standalone''", span="1892-1892", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_731 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1873-1873", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JsonDictionaryContract.cs"];
m9_236 [label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="834-834", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_237 [label="throw new InvalidOperationException();", span="836-836", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_238 [label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="834-834", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_8 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="58-58", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="JsonDictionaryContract.cs"];
m9_9 [label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="60-60", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="JsonDictionaryContract.cs"];
m9_10 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="58-58", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="JsonDictionaryContract.cs"];
m9_19 [label="Entry Unk.CreateWhitespace", span="", cluster="Unk.CreateWhitespace", file="JsonDictionaryContract.cs"];
m9_0 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="47-47", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="JsonDictionaryContract.cs"];
m9_1 [label="_document = document", span="50-50", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="JsonDictionaryContract.cs"];
m9_2 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="47-47", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="JsonDictionaryContract.cs"];
m9_569 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="112-112", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="JsonDictionaryContract.cs"];
m9_28 [label="Entry Unk.CreateXmlDeclaration", span="", cluster="Unk.CreateXmlDeclaration", file="JsonDictionaryContract.cs"];
m9_630 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonDictionaryContract.cs"];
m9_114 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="361-361", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_115 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="361-361", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_146 [label="Entry XCData.cstr", span="", cluster="XCData.cstr", file="JsonDictionaryContract.cs"];
m9_380 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonDictionaryContract.cs"];
m9_153 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="527-527", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="JsonDictionaryContract.cs"];
m9_154 [label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="529-529", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="JsonDictionaryContract.cs"];
m9_155 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="527-527", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="JsonDictionaryContract.cs"];
m9_281 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonDictionaryContract.cs"];
m9_799 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="JsonDictionaryContract.cs"];
m9_3 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="53-53", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="JsonDictionaryContract.cs"];
m9_4 [label="return new XmlNodeWrapper(_document.CreateComment(data));", span="55-55", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="JsonDictionaryContract.cs"];
m9_5 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="53-53", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="JsonDictionaryContract.cs"];
m9_510 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonDictionaryContract.cs"];
m9_20 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="73-73", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_21 [label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="75-75", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_22 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="73-73", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_6 [label="Entry XmlNodeWrapper.cstr", span="", cluster="XmlNodeWrapper.cstr", file="JsonDictionaryContract.cs"];
m9_517 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1495-1495", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_518 [label=propertyName, span="1497-1497", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_520 [label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1500-1500", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_522 [label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1503-1503", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_524 [label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1506-1506", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_526 [label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1509-1509", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_527 [label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1513-1513", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_528 [label="CreateInstruction(reader, document, currentNode, propertyName)", span="1515-1515", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_529 [label="string.Equals(propertyName, ''!DOCTYPE'', StringComparison.OrdinalIgnoreCase)", span="1517-1517", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_530 [label="CreateDocumentType(reader, document, currentNode)", span="1519-1519", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_531 [label="reader.TokenType == JsonToken.StartArray", span="1523-1523", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_532 [label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1526-1526", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_534 [label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1532-1532", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_519 [label=TextName, span="1499-1499", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_521 [label=CDataName, span="1502-1502", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_523 [label=WhitespaceName, span="1505-1505", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_525 [label=SignificantWhitespaceName, span="1508-1508", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_533 [label="return;", span="1527-1527", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_535 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1495-1495", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_631 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonDictionaryContract.cs"];
m9_196 [label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="631-631", cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="JsonDictionaryContract.cs"];
m9_197 [label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="631-631", cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="JsonDictionaryContract.cs"];
m9_347 [label="Entry Unk.ToBoolean", span="", cluster="Unk.ToBoolean", file="JsonDictionaryContract.cs"];
m9_95 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild", file="JsonDictionaryContract.cs"];
m9_633 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="61-61", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonDictionaryContract.cs"];
m9_169 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="896-896", cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="JsonDictionaryContract.cs"];
m9_241 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="896-896", cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="JsonDictionaryContract.cs"];
m9_302 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1101-1101", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_303 [label="string prefix = (node.NamespaceUri == null || (node.LocalName == ''xmlns'' && node.NamespaceUri == ''http://www.w3.org/2000/xmlns/''))\r\n                ? null\r\n                : manager.LookupPrefix(node.NamespaceUri)", span="1103-1105", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_305 [label="return prefix + '':'' + XmlConvert.DecodeName(node.LocalName);", span="1109-1109", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_306 [label="return XmlConvert.DecodeName(node.LocalName);", span="1113-1113", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_304 [label="!string.IsNullOrEmpty(prefix)", span="1107-1107", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_307 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1101-1101", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_280 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonDictionaryContract.cs"];
m9_129 [label="Entry Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="443-443", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="JsonDictionaryContract.cs"];
m9_130 [label="_documentType = documentType", span="446-446", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="JsonDictionaryContract.cs"];
m9_131 [label="Exit Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="443-443", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="JsonDictionaryContract.cs"];
m9_468 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="878-878", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonDictionaryContract.cs"];
m9_252 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="973-973", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="JsonDictionaryContract.cs"];
m9_253 [label="return Element.GetPrefixOfNamespace(namespaceUri);", span="975-975", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="JsonDictionaryContract.cs"];
m9_254 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="973-973", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="JsonDictionaryContract.cs"];
m9_299 [label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0", cluster="System.Collections.Generic.List<T>.Reverse()", file="JsonDictionaryContract.cs"];
m9_104 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="356-356", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_105 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="356-356", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_567 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonDictionaryContract.cs"];
m9_193 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="779-779", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_229 [label="Container.Add(newChild.WrappedNode)", span="781-781", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_231 [label="return newChild;", span="784-784", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_230 [label="_childNodes = null", span="782-782", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_232 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="779-779", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_604 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonDictionaryContract.cs"];
m9_340 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1160-1160", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_341 [label="node.Attributes != null", span="1162-1162", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_342 [label="node.Attributes", span="1164-1164", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_345 [label="return false;", span="1173-1173", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_343 [label="attribute.LocalName == ''Array'' && attribute.NamespaceUri == JsonNamespaceUri", span="1166-1166", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_344 [label="return XmlConvert.ToBoolean(attribute.Value);", span="1168-1168", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_346 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1160-1160", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_72 [label="Entry Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="JsonDictionaryContract.cs"];
m9_73 [label="_documentType = documentType", span="196-196", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="JsonDictionaryContract.cs"];
m9_74 [label="Exit Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="JsonDictionaryContract.cs"];
m9_161 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="537-537", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="JsonDictionaryContract.cs"];
m9_162 [label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="539-539", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="JsonDictionaryContract.cs"];
m9_163 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="537-537", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="JsonDictionaryContract.cs"];
m9_23 [label="Entry Unk.CreateSignificantWhitespace", span="", cluster="Unk.CreateSignificantWhitespace", file="JsonDictionaryContract.cs"];
m9_41 [label="Entry XmlElementWrapper.cstr", span="", cluster="XmlElementWrapper.cstr", file="JsonDictionaryContract.cs"];
m9_311 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1117-1117", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_312 [label="node.NodeType", span="1119-1119", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_314 [label="node.NamespaceUri == JsonNamespaceUri", span="1122-1122", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_315 [label="return ''$'' + node.LocalName;", span="1124-1124", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_316 [label="return ''@'' + ResolveFullName(node, manager);", span="1128-1128", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_322 [label="node.NamespaceUri == JsonNamespaceUri", span="1135-1135", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_323 [label="return ''$'' + node.LocalName;", span="1137-1137", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_324 [label="return ResolveFullName(node, manager);", span="1141-1141", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_326 [label="return ''?'' + ResolveFullName(node, manager);", span="1144-1144", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_328 [label="return ''!'' + ResolveFullName(node, manager);", span="1146-1146", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_337 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="1156-1156", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_313 [label="XmlNodeType.Attribute", span="1121-1121", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_317 [label="XmlNodeType.CDATA", span="1130-1130", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_319 [label="XmlNodeType.Comment", span="1132-1132", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_321 [label="XmlNodeType.Element", span="1134-1134", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_325 [label="XmlNodeType.ProcessingInstruction", span="1143-1143", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_327 [label="XmlNodeType.DocumentType", span="1145-1145", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_329 [label="XmlNodeType.XmlDeclaration", span="1147-1147", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_331 [label="XmlNodeType.SignificantWhitespace", span="1149-1149", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_333 [label="XmlNodeType.Text", span="1151-1151", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_335 [label="XmlNodeType.Whitespace", span="1153-1153", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_318 [label="return CDataName;", span="1131-1131", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_320 [label="return CommentName;", span="1133-1133", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_330 [label="return DeclarationName;", span="1148-1148", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_332 [label="return SignificantWhitespaceName;", span="1150-1150", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_334 [label="return TextName;", span="1152-1152", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_336 [label="return WhitespaceName;", span="1154-1154", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_338 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1117-1117", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_514 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonDictionaryContract.cs"];
m9_166 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="542-542", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="JsonDictionaryContract.cs"];
m9_167 [label="return new XElementWrapper(new XElement(elementName));", span="544-544", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="JsonDictionaryContract.cs"];
m9_168 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="542-542", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="JsonDictionaryContract.cs"];
m9_310 [label="Entry Unk.DecodeName", span="", cluster="Unk.DecodeName", file="JsonDictionaryContract.cs"];
m9_165 [label="Entry XProcessingInstruction.cstr", span="", cluster="XProcessingInstruction.cstr", file="JsonDictionaryContract.cs"];
m9_476 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1419-1419", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_477 [label="reader.TokenType == JsonToken.Null", span="1421-1421", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_482 [label="typeof(XObject).IsAssignableFrom(objectType)", span="1431-1431", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_483 [label="objectType != typeof(XDocument) && objectType != typeof(XElement)", span="1433-1433", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_488 [label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1444-1444", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_489 [label="objectType != typeof(XmlDocument)", span="1446-1446", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_496 [label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1462-1462", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_497 [label="reader.TokenType != JsonToken.StartObject", span="1465-1465", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_500 [label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1474-1474", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_501 [label="reader.Read()", span="1478-1478", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_502 [label="DeserializeNode(reader, document, manager, rootNode)", span="1479-1479", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_503 [label="objectType == typeof(XElement)", span="1483-1483", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_478 [label="return null;", span="1423-1423", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_479 [label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1426-1426", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_480 [label="IXmlDocument document = null", span="1427-1427", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_481 [label="IXmlNode rootNode = null", span="1428-1428", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_495 [label="document == null || rootNode == null", span="1460-1460", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_504 [label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1485-1485", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_507 [label="return document.WrappedNode;", span="1492-1492", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_484 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1435-1435", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_485 [label="XDocument d = new XDocument()", span="1438-1438", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_486 [label="document = new XDocumentWrapper(d)", span="1439-1439", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_487 [label="rootNode = document", span="1440-1440", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_490 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1448-1448", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_491 [label="XmlDocument d = new XmlDocument()", span="1451-1451", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_492 [label="d.XmlResolver = null", span="1453-1453", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_493 [label="document = new XmlDocumentWrapper(d)", span="1455-1455", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_494 [label="rootNode = document", span="1456-1456", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_498 [label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1467-1467", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_499 [label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1470-1470", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_505 [label="element.Remove()", span="1486-1486", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_506 [label="return element;", span="1488-1488", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_508 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1419-1419", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_596 [label="Entry Unk.RemoveNamespace", span="", cluster="Unk.RemoveNamespace", file="JsonDictionaryContract.cs"];
m9_143 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="512-512", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="JsonDictionaryContract.cs"];
m9_144 [label="return new XObjectWrapper(new XCData(data));", span="514-514", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="JsonDictionaryContract.cs"];
m9_145 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="512-512", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="JsonDictionaryContract.cs"];
m9_469 [label="Entry Unk.PopScope", span="", cluster="Unk.PopScope", file="JsonDictionaryContract.cs"];
m9_266 [label="Entry XmlNamespaceManager.cstr", span="", cluster="XmlNamespaceManager.cstr", file="JsonDictionaryContract.cs"];
m9_298 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonDictionaryContract.cs"];
m9_573 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", span="1581-1581", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_574 [label="IXmlElement element = CreateElement(elementName, document, elementPrefix, manager)", span="1583-1583", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_575 [label="currentNode.AppendChild(element)", span="1585-1585", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_576 [label=attributeNameValues, span="1588-1588", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_579 [label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                    ? document.CreateAttribute(encodedName, manager.LookupNamespace(attributePrefix) ?? string.Empty, nameValue.Value)\r\n                    : document.CreateAttribute(encodedName, nameValue.Value)", span="1593-1595", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_581 [label="reader.TokenType == JsonToken.String\r\n                || reader.TokenType == JsonToken.Integer\r\n                || reader.TokenType == JsonToken.Float\r\n                || reader.TokenType == JsonToken.Boolean\r\n                || reader.TokenType == JsonToken.Date", span="1600-1604", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_582 [label="string text = ConvertTokenToXmlValue(reader)", span="1606-1606", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_584 [label="element.AppendChild(document.CreateTextNode(text))", span="1609-1609", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_585 [label="reader.TokenType == JsonToken.Null", span="1612-1612", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_586 [label="reader.TokenType != JsonToken.EndObject", span="1619-1619", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_587 [label="manager.PushScope()", span="1621-1621", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_588 [label="DeserializeNode(reader, document, manager, element)", span="1622-1622", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_589 [label="manager.PopScope()", span="1623-1623", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_590 [label="manager.RemoveNamespace(string.Empty, manager.DefaultNamespace)", span="1626-1626", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_580 [label="element.SetAttributeNode(attribute)", span="1597-1597", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_577 [label="string encodedName = XmlConvert.EncodeName(nameValue.Key)", span="1590-1590", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_578 [label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1591-1591", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_583 [label="text != null", span="1607-1607", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_591 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", span="1581-1581", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JsonDictionaryContract.cs"];
m9_470 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1421-1421", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonDictionaryContract.cs"];
m9_177 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="553-553", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_178 [label="return new XAttributeWrapper(new XAttribute(name, value));", span="555-555", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_179 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="553-553", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_466 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="916-916", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonDictionaryContract.cs"];
m9_378 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonDictionaryContract.cs"];
m9_540 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1707-1707", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_634 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1709-1709", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_635 [label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1711-1711", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_636 [label="currentNode.AppendChild(nestedArrayElement)", span="1713-1713", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_638 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1716-1716", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_639 [label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1718-1718", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_642 [label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1724-1724", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_646 [label="element != null && element.LocalName == propertyName", span="1732-1732", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_647 [label="AddJsonArrayAttribute(element, document)", span="1734-1734", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_644 [label="nestedArrayElement.ChildNodes", span="1729-1729", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_637 [label="int count = 0", span="1715-1715", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_640 [label="count++", span="1719-1719", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_643 [label="count == 1 && WriteArrayAttribute", span="1727-1727", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_641 [label=WriteArrayAttribute, span="1722-1722", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_645 [label="IXmlElement element = childNode as IXmlElement", span="1731-1731", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_648 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1707-1707", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_126 [label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="410-410", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="JsonDictionaryContract.cs"];
m9_127 [label="Declaration = declaration", span="413-413", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="JsonDictionaryContract.cs"];
m9_128 [label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="410-410", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="JsonDictionaryContract.cs"];
m9_381 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonDictionaryContract.cs"];
m9_120 [label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="385-385", cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_121 [label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="385-385", cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_137 [label="Entry XObjectWrapper.cstr", span="", cluster="XObjectWrapper.cstr", file="JsonDictionaryContract.cs"];
m9_164 [label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="663-663", cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="JsonDictionaryContract.cs"];
m9_198 [label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="663-663", cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="JsonDictionaryContract.cs"];
m9_147 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="517-517", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_148 [label="return new XObjectWrapper(new XText(text));", span="519-519", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_149 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="517-517", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_628 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonDictionaryContract.cs"];
m9_708 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="2025-2025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_788 [label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="2027-2027", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_789 [label="attributeName.Length == 5", span="2029-2029", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_792 [label="attributeName[5] == ':'", span="2034-2034", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_793 [label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="2036-2036", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_795 [label="prefix = null", span="2040-2040", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_790 [label="prefix = string.Empty", span="2031-2031", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_791 [label="return true;", span="2032-2032", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_794 [label="return true;", span="2037-2037", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_796 [label="return false;", span="2041-2041", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_797 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="2025-2025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JsonDictionaryContract.cs"];
m9_12 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="63-63", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="JsonDictionaryContract.cs"];
m9_13 [label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="65-65", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="JsonDictionaryContract.cs"];
m9_14 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="63-63", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="JsonDictionaryContract.cs"];
m9_181 [label="Entry XAttribute.cstr", span="", cluster="XAttribute.cstr", file="JsonDictionaryContract.cs"];
m9_383 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="429-429", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonDictionaryContract.cs"];
m9_194 [label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="599-599", cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="JsonDictionaryContract.cs"];
m9_195 [label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="599-599", cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="JsonDictionaryContract.cs"];
m9_106 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="357-357", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="JsonDictionaryContract.cs"];
m9_107 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="357-357", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="JsonDictionaryContract.cs"];
m9_112 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="360-360", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="JsonDictionaryContract.cs"];
m9_113 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="360-360", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="JsonDictionaryContract.cs"];
m9_228 [label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="793-793", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="JsonDictionaryContract.cs"];
m9_234 [label="_xmlObject = xmlObject", span="795-795", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="JsonDictionaryContract.cs"];
m9_235 [label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="793-793", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="JsonDictionaryContract.cs"];
m9_465 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", span="2044-2044", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JsonDictionaryContract.cs"];
m9_800 [label=c, span="2046-2046", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JsonDictionaryContract.cs"];
m9_801 [label="xmlNode.NamespaceUri != JsonNamespaceUri", span="2048-2048", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JsonDictionaryContract.cs"];
m9_803 [label="return false;", span="2054-2054", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JsonDictionaryContract.cs"];
m9_802 [label="return true;", span="2050-2050", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JsonDictionaryContract.cs"];
m9_804 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", span="2044-2044", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JsonDictionaryContract.cs"];
m9_805 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="2065-2065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs"];
m9_806 [label="typeof(XObject).IsAssignableFrom(valueType)", span="2068-2068", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs"];
m9_808 [label="typeof(XmlNode).IsAssignableFrom(valueType)", span="2074-2074", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs"];
m9_807 [label="return true;", span="2070-2070", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs"];
m9_809 [label="return true;", span="2076-2076", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs"];
m9_810 [label="return false;", span="2080-2080", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs"];
m9_811 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="2065-2065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs"];
m9_52 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="111-111", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_53 [label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceUri))", span="113-113", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_54 [label="attribute.Value = value", span="114-114", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_55 [label="return attribute;", span="116-116", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_56 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="111-111", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="JsonDictionaryContract.cs"];
m9_509 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonDictionaryContract.cs"];
m9_139 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="507-507", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="JsonDictionaryContract.cs"];
m9_140 [label="return new XObjectWrapper(new XText(text));", span="509-509", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="JsonDictionaryContract.cs"];
m9_141 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="507-507", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="JsonDictionaryContract.cs"];
m9_649 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1741-1741", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JsonDictionaryContract.cs"];
m9_650 [label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1743-1743", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JsonDictionaryContract.cs"];
m9_651 [label="element is XElementWrapper", span="1747-1747", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JsonDictionaryContract.cs"];
m9_652 [label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1749-1749", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JsonDictionaryContract.cs"];
m9_653 [label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1751-1751", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JsonDictionaryContract.cs"];
m9_654 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1741-1741", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JsonDictionaryContract.cs"];
m9_511 [label="Entry XDocument.cstr", span="", cluster="XDocument.cstr", file="JsonDictionaryContract.cs"];
m9_309 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonDictionaryContract.cs"];
m9_132 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="482-482", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="JsonDictionaryContract.cs"];
m9_133 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="482-482", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="JsonDictionaryContract.cs"];
m9_124 [label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="398-398", cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_125 [label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="398-398", cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_43 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="98-98", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_44 [label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceUri));", span="100-100", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_45 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="98-98", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="JsonDictionaryContract.cs"];
m9_29 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="83-83", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JsonDictionaryContract.cs"];
m9_30 [label="return new XmlDocumentTypeWrapper(_document.CreateDocumentType(name, publicId, systemId, null));", span="85-85", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JsonDictionaryContract.cs"];
m9_31 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="83-83", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JsonDictionaryContract.cs"];
m9_42 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement", file="JsonDictionaryContract.cs"];
m9_122 [label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="386-386", cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="JsonDictionaryContract.cs"];
m9_123 [label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="386-386", cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="JsonDictionaryContract.cs"];
m9_269 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="405-405", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonDictionaryContract.cs"];
m9_379 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonDictionaryContract.cs"];
m9_572 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", span="1630-1630", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JsonDictionaryContract.cs"];
m9_597 [label="currentNode.NodeType == XmlNodeType.Document", span="1632-1632", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JsonDictionaryContract.cs"];
m9_598 [label="throw JsonSerializationException.Create(reader, ''JSON root object has property '{0}' that will be converted to an attribute. A root object cannot have any attribute properties. Consider specifying a DeserializeRootElementName.''.FormatWith(CultureInfo.InvariantCulture, propertyName));", span="1634-1634", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JsonDictionaryContract.cs"];
m9_599 [label="string encodedName = XmlConvert.EncodeName(attributeName)", span="1637-1637", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JsonDictionaryContract.cs"];
m9_600 [label="string attributeValue = reader.Value.ToString()", span="1638-1638", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JsonDictionaryContract.cs"];
m9_601 [label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                ? document.CreateAttribute(encodedName, manager.LookupNamespace(attributePrefix), attributeValue)\r\n                : document.CreateAttribute(encodedName, attributeValue)", span="1640-1642", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JsonDictionaryContract.cs"];
m9_602 [label="((IXmlElement)currentNode).SetAttributeNode(attribute)", span="1644-1644", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JsonDictionaryContract.cs"];
m9_603 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", span="1630-1630", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JsonDictionaryContract.cs"];
m9_710 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonDictionaryContract.cs"];
m9_239 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JsonDictionaryContract.cs"];
m9_297 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonDictionaryContract.cs"];
m9_33 [label="Entry Unk.CreateDocumentType", span="", cluster="Unk.CreateDocumentType", file="JsonDictionaryContract.cs"];
m9_27 [label="Entry XmlDeclarationWrapper.cstr", span="", cluster="XmlDeclarationWrapper.cstr", file="JsonDictionaryContract.cs"];
m9_709 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonDictionaryContract.cs"];
m9_32 [label="Entry XmlDocumentTypeWrapper.cstr", span="", cluster="XmlDocumentTypeWrapper.cstr", file="JsonDictionaryContract.cs"];
m9_100 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="354-354", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="JsonDictionaryContract.cs"];
m9_101 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="354-354", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="JsonDictionaryContract.cs"];
m9_199 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="689-689", cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="JsonDictionaryContract.cs"];
m9_200 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="689-689", cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="JsonDictionaryContract.cs"];
m9_382 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="421-421", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonDictionaryContract.cs"];
m9_65 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="JsonDictionaryContract.cs"];
m9_66 [label="return _element.GetPrefixOfNamespace(namespaceUri);", span="152-152", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="JsonDictionaryContract.cs"];
m9_67 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="JsonDictionaryContract.cs"];
m9_255 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1025-1025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_256 [label="IXmlNode node = WrapXml(value)", span="1027-1027", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_260 [label="writer.WriteStartObject()", span="1034-1034", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_261 [label="SerializeNode(writer, node, manager, !OmitRootObject)", span="1037-1037", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_263 [label="writer.WriteEndObject()", span="1041-1041", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_257 [label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1029-1029", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_258 [label="PushParentNamespaces(node, manager)", span="1030-1030", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_259 [label="!OmitRootObject", span="1032-1032", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_262 [label="!OmitRootObject", span="1039-1039", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_264 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1025-1025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs"];
m9_156 [label="Entry XDeclaration.cstr", span="", cluster="XDeclaration.cstr", file="JsonDictionaryContract.cs"];
m9_170 [label="Entry XElement.cstr", span="", cluster="XElement.cstr", file="JsonDictionaryContract.cs"];
m9_38 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="93-93", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="JsonDictionaryContract.cs"];
m9_39 [label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="95-95", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="JsonDictionaryContract.cs"];
m9_40 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="93-93", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="JsonDictionaryContract.cs"];
m9_242 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="901-901", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_243 [label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="903-903", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_244 [label="Element.Add(wrapper.WrappedNode)", span="904-904", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_245 [label="_attributes = null", span="905-905", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_246 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="901-901", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_267 [label="Entry NameTable.cstr", span="", cluster="NameTable.cstr", file="JsonDictionaryContract.cs"];
m9_138 [label="Entry XComment.cstr", span="", cluster="XComment.cstr", file="JsonDictionaryContract.cs"];
m9_15 [label="Entry Unk.CreateCDataSection", span="", cluster="Unk.CreateCDataSection", file="JsonDictionaryContract.cs"];
m9_265 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="1045-1045", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_272 [label="XObject xObject = value as XObject", span="1048-1048", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_275 [label="XmlNode node = value as XmlNode", span="1055-1055", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_278 [label="throw new ArgumentException(''Value must be an XML object.'', nameof(value));", span="1062-1062", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_273 [label="xObject != null", span="1049-1049", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_274 [label="return XContainerWrapper.WrapNode(xObject);", span="1051-1051", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_276 [label="node != null", span="1056-1056", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_277 [label="return XmlNodeWrapper.WrapNode(node);", span="1058-1058", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_279 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="1045-1045", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JsonDictionaryContract.cs"];
m9_16 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="68-68", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_17 [label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="70-70", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_18 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="68-68", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_37 [label="Entry Unk.CreateProcessingInstruction", span="", cluster="Unk.CreateProcessingInstruction", file="JsonDictionaryContract.cs"];
m9_271 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonDictionaryContract.cs"];
m9_46 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="103-103", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_47 [label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="105-105", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_48 [label="attribute.Value = value", span="106-106", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_49 [label="return attribute;", span="108-108", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_50 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="103-103", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_102 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="355-355", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_103 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="355-355", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="JsonDictionaryContract.cs"];
m9_116 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="362-362", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_117 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="362-362", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="JsonDictionaryContract.cs"];
m9_176 [label="Entry Unk.Get", span="", cluster="Unk.Get", file="JsonDictionaryContract.cs"];
m9_592 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1946-1946", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_754 [label="string encodeName = XmlConvert.EncodeName(elementName)", span="1948-1948", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_755 [label="string ns = string.IsNullOrEmpty(elementPrefix) ? manager.DefaultNamespace : manager.LookupNamespace(elementPrefix)", span="1949-1949", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_756 [label="IXmlElement element = (!string.IsNullOrEmpty(ns)) ? document.CreateElement(encodeName, ns) : document.CreateElement(encodeName)", span="1951-1951", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_757 [label="return element;", span="1953-1953", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_758 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1946-1946", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_68 [label="Entry Unk.GetPrefixOfNamespace", span="", cluster="Unk.GetPrefixOfNamespace", file="JsonDictionaryContract.cs"];
m9_516 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="JsonDictionaryContract.cs"];
m9_88 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="331-331", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_89 [label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper)newChild", span="333-333", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_93 [label="return newChild;", span="338-338", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_90 [label="_node.AppendChild(xmlNodeWrapper._node)", span="334-334", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_91 [label="_childNodes = null", span="335-335", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_92 [label="_attributes = null", span="336-336", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_94 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="331-331", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_464 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", span="1397-1397", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_471 [label="node.ChildNodes", span="1399-1399", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_472 [label="childNode.LocalName != node.LocalName", span="1401-1401", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_474 [label="return true;", span="1406-1406", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_473 [label="return false;", span="1403-1403", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_475 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", span="1397-1397", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_270 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1237-1237", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_384 [label="node.NodeType", span="1239-1239", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_387 [label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="1243-1243", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_389 [label="IsArray(node) && AllSameName(node) && node.ChildNodes.Count > 0", span="1246-1246", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_390 [label="SerializeGroupedNodes(writer, node, manager, false)", span="1248-1248", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_391 [label="manager.PushScope()", span="1252-1252", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_392 [label="node.Attributes", span="1254-1254", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_396 [label="manager.AddNamespace(namespacePrefix, namespaceUri)", span="1263-1263", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_397 [label=writePropertyName, span="1267-1267", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_398 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1269-1269", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_399 [label="!ValueAttributes(node.Attributes) && node.ChildNodes.Count == 1\r\n                            && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="1272-1273", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_400 [label="writer.WriteValue(node.ChildNodes[0].Value)", span="1276-1276", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_401 [label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="1278-1278", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_402 [label="IXmlElement element = (IXmlElement)node", span="1280-1280", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_404 [label="writer.WriteNull()", span="1285-1285", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_405 [label="writer.WriteValue(string.Empty)", span="1289-1289", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_406 [label="writer.WriteStartObject()", span="1294-1294", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_408 [label="i < node.Attributes.Count", span="1296-1296", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_409 [label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1298-1298", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_411 [label="SerializeGroupedNodes(writer, node, manager, true)", span="1301-1301", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_412 [label="writer.WriteEndObject()", span="1303-1303", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_413 [label="manager.PopScope()", span="1306-1306", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_415 [label=writePropertyName, span="1311-1311", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_416 [label="writer.WriteComment(node.Value)", span="1313-1313", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_423 [label="node.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1322-1322", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_425 [label="node.NamespaceUri == JsonNamespaceUri", span="1327-1327", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_426 [label="node.LocalName == ''Array''", span="1329-1329", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_428 [label=writePropertyName, span="1335-1335", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_429 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1337-1337", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_430 [label="writer.WriteValue(node.Value)", span="1339-1339", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_432 [label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1342-1342", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_433 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1343-1343", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_434 [label="writer.WriteStartObject()", span="1344-1344", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_436 [label="writer.WritePropertyName(''@version'')", span="1348-1348", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_437 [label="writer.WriteValue(declaration.Version)", span="1349-1349", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_439 [label="writer.WritePropertyName(''@encoding'')", span="1353-1353", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_440 [label="writer.WriteValue(declaration.Encoding)", span="1354-1354", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_442 [label="writer.WritePropertyName(''@standalone'')", span="1358-1358", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_443 [label="writer.WriteValue(declaration.Standalone)", span="1359-1359", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_444 [label="writer.WriteEndObject()", span="1362-1362", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_446 [label="IXmlDocumentType documentType = (IXmlDocumentType)node", span="1365-1365", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_447 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1366-1366", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_448 [label="writer.WriteStartObject()", span="1367-1367", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_450 [label="writer.WritePropertyName(''@name'')", span="1371-1371", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_451 [label="writer.WriteValue(documentType.Name)", span="1372-1372", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_453 [label="writer.WritePropertyName(''@public'')", span="1376-1376", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_454 [label="writer.WriteValue(documentType.Public)", span="1377-1377", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_456 [label="writer.WritePropertyName(''@system'')", span="1381-1381", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_457 [label="writer.WriteValue(documentType.System)", span="1382-1382", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_459 [label="writer.WritePropertyName(''@internalSubset'')", span="1386-1386", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_460 [label="writer.WriteValue(documentType.InternalSubset)", span="1387-1387", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_461 [label="writer.WriteEndObject()", span="1390-1390", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_462 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1393-1393", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_385 [label="XmlNodeType.Document", span="1241-1241", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_388 [label="XmlNodeType.Element", span="1245-1245", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_414 [label="XmlNodeType.Comment", span="1310-1310", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_417 [label="XmlNodeType.Attribute", span="1316-1316", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_431 [label="XmlNodeType.XmlDeclaration", span="1341-1341", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_445 [label="XmlNodeType.DocumentType", span="1364-1364", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_386 [label="XmlNodeType.DocumentFragment", span="1242-1242", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_393 [label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="1256-1256", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_394 [label="string namespacePrefix = (attribute.LocalName != ''xmlns'')\r\n                                    ? XmlConvert.DecodeName(attribute.LocalName)\r\n                                    : string.Empty", span="1258-1260", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_395 [label="string namespaceUri = attribute.Value", span="1261-1261", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_403 [label="element.IsEmpty", span="1283-1283", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_407 [label="int i = 0", span="1296-1296", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_410 [label="i++", span="1296-1296", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_418 [label="XmlNodeType.Text", span="1317-1317", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_419 [label="XmlNodeType.CDATA", span="1318-1318", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_420 [label="XmlNodeType.ProcessingInstruction", span="1319-1319", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_421 [label="XmlNodeType.Whitespace", span="1320-1320", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_422 [label="XmlNodeType.SignificantWhitespace", span="1321-1321", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_424 [label="return;", span="1324-1324", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_427 [label="return;", span="1331-1331", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_435 [label="!string.IsNullOrEmpty(declaration.Version)", span="1346-1346", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_438 [label="!string.IsNullOrEmpty(declaration.Encoding)", span="1351-1351", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_441 [label="!string.IsNullOrEmpty(declaration.Standalone)", span="1356-1356", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_449 [label="!string.IsNullOrEmpty(documentType.Name)", span="1369-1369", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_452 [label="!string.IsNullOrEmpty(documentType.Public)", span="1374-1374", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_455 [label="!string.IsNullOrEmpty(documentType.System)", span="1379-1379", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_458 [label="!string.IsNullOrEmpty(documentType.InternalSubset)", span="1384-1384", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_463 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1237-1237", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JsonDictionaryContract.cs"];
m9_268 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1065-1065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_282 [label="List<IXmlNode> parentElements = null", span="1067-1067", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_283 [label="IXmlNode parent = node", span="1069-1069", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_292 [label="manager.PushScope()", span="1089-1089", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_295 [label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="1094-1094", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_286 [label="parentElements == null", span="1074-1074", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_288 [label="parentElements.Add(parent)", span="1079-1079", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_289 [label="parentElements != null", span="1083-1083", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_290 [label="parentElements.Reverse()", span="1085-1085", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_291 [label=parentElements, span="1087-1087", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_284 [label="(parent = parent.ParentNode) != null", span="1070-1070", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_285 [label="parent.NodeType == XmlNodeType.Element", span="1072-1072", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_287 [label="parentElements = new List<IXmlNode>()", span="1076-1076", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_293 [label="parentElement.Attributes", span="1090-1090", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_294 [label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="1092-1092", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_296 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1065-1065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_594 [label="Entry Unk.LookupNamespace", span="", cluster="Unk.LookupNamespace", file="JsonDictionaryContract.cs"];
m9_568 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1757-1757", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_655 [label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1759-1759", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_658 [label="reader.TokenType != JsonToken.String\r\n                && reader.TokenType != JsonToken.Null\r\n                && reader.TokenType != JsonToken.Boolean\r\n                && reader.TokenType != JsonToken.Integer\r\n                && reader.TokenType != JsonToken.Float\r\n                && reader.TokenType != JsonToken.Date\r\n                && reader.TokenType != JsonToken.StartConstructor", span="1764-1770", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_659 [label="!finishedAttributes && !finishedElement && reader.Read()", span="1773-1773", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_660 [label="reader.TokenType", span="1775-1775", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_662 [label="string attributeName = reader.Value.ToString()", span="1778-1778", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_669 [label="reader.Read()", span="1789-1789", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_670 [label="attributeValue = ConvertTokenToXmlValue(reader)", span="1790-1790", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_674 [label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1796-1796", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_682 [label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1809-1809", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_685 [label="manager.LookupNamespace(''json'' + i) != null", span="1814-1814", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_689 [label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1821-1821", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_693 [label="reader.Read()", span="1832-1832", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_694 [label="!JsonTokenUtils.IsPrimitiveToken(reader.TokenType)", span="1834-1834", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_695 [label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken: '' + reader.TokenType);", span="1836-1836", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_696 [label="attributeValue = reader.Value?.ToString()", span="1839-1839", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_705 [label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken: '' + reader.TokenType);", span="1865-1865", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_656 [label="bool finishedAttributes = false", span="1760-1760", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_671 [label="attributeNameValues.Add(attributeName, attributeValue)", span="1791-1791", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_688 [label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1820-1820", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_697 [label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1840-1840", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_706 [label="return attributeNameValues;", span="1870-1870", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_657 [label="bool finishedElement = false", span="1761-1761", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_661 [label="JsonToken.PropertyName", span="1777-1777", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_701 [label="JsonToken.EndObject", span="1858-1858", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_703 [label="JsonToken.Comment", span="1861-1861", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_663 [label="!string.IsNullOrEmpty(attributeName)", span="1780-1780", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_664 [label="char firstChar = attributeName[0]", span="1782-1782", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_668 [label="attributeName = attributeName.Substring(1)", span="1788-1788", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_700 [label="finishedAttributes = true", span="1854-1854", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_665 [label="string attributeValue", span="1783-1783", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_666 [label=firstChar, span="1785-1785", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_667 [label="'@'", span="1787-1787", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_675 [label="'$'", span="1799-1799", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_699 [label="finishedAttributes = true", span="1848-1848", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_673 [label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1794-1794", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_676 [label=attributeName, span="1800-1800", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_690 [label="attributeName == JsonTypeReflector.ArrayValuesPropertyName", span="1825-1825", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_692 [label="attributeName = attributeName.Substring(1)", span="1831-1831", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_672 [label="string namespacePrefix", span="1793-1793", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_677 [label="JsonTypeReflector.ArrayValuesPropertyName", span="1802-1802", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_698 [label="finishedAttributes = true", span="1843-1843", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_678 [label="JsonTypeReflector.IdPropertyName", span="1803-1803", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_679 [label="JsonTypeReflector.RefPropertyName", span="1804-1804", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_680 [label="JsonTypeReflector.TypePropertyName", span="1805-1805", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_681 [label="JsonTypeReflector.ValuePropertyName", span="1806-1806", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_683 [label="jsonPrefix == null", span="1810-1810", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_684 [label="int? i = null", span="1813-1813", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_686 [label="i = i.GetValueOrDefault() + 1", span="1816-1816", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_687 [label="jsonPrefix = ''json'' + i", span="1818-1818", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_691 [label="finishedAttributes = true", span="1827-1827", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_702 [label="finishedElement = true", span="1859-1859", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_704 [label="finishedElement = true", span="1862-1862", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_707 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1757-1757", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JsonDictionaryContract.cs"];
m9_308 [label="Entry Unk.LookupPrefix", span="", cluster="Unk.LookupPrefix", file="JsonDictionaryContract.cs"];
m9_515 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1956-1956", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_759 [label="reader.TokenType", span="1960-1960", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_761 [label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1963-1963", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_762 [label="throw JsonSerializationException.Create(reader, ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifying a DeserializeRootElementName.'');", span="1965-1965", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_763 [label="string propertyName = reader.Value.ToString()", span="1968-1968", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_764 [label="reader.Read()", span="1969-1969", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_765 [label="reader.TokenType == JsonToken.StartArray", span="1971-1971", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_767 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1974-1974", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_768 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1976-1976", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_771 [label="currentNode.ChildNodes", span="1982-1982", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_774 [label="AddJsonArrayAttribute(element, document)", span="1987-1987", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_775 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1995-1995", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_777 [label="string constructorName = reader.Value.ToString()", span="1999-1999", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_778 [label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="2001-2001", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_779 [label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="2003-2003", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_781 [label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="2007-2007", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_785 [label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="2013-2013", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_786 [label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="2015-2015", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_760 [label="JsonToken.PropertyName", span="1962-1962", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_776 [label="JsonToken.StartConstructor", span="1998-1998", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_780 [label="JsonToken.Comment", span="2006-2006", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_782 [label="JsonToken.EndObject", span="2009-2009", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_773 [label="element != null && element.LocalName == propertyName", span="1985-1985", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_766 [label="int count = 0", span="1973-1973", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_769 [label="count++", span="1977-1977", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_770 [label="count == 1 && WriteArrayAttribute", span="1980-1980", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_772 [label="IXmlElement element = childNode as IXmlElement", span="1984-1984", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_783 [label="JsonToken.EndArray", span="2010-2010", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_784 [label="return;", span="2011-2011", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_787 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1956-1956", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JsonDictionaryContract.cs"];
m9_300 [label="Entry Unk.PushScope", span="", cluster="Unk.PushScope", file="JsonDictionaryContract.cs"];
m9_812 [label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span="", file="JsonDictionaryContract.cs"];
m9_813 [label="Newtonsoft.Json.Converters.XmlElementWrapper", span="", file="JsonDictionaryContract.cs"];
m9_814 [label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span="", file="JsonDictionaryContract.cs"];
m9_815 [label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", span="", file="JsonDictionaryContract.cs"];
m9_816 [label="Newtonsoft.Json.Converters.XmlNodeWrapper", span="", file="JsonDictionaryContract.cs"];
m9_817 [label="Newtonsoft.Json.Converters.XDeclarationWrapper", span="", file="JsonDictionaryContract.cs"];
m9_818 [label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", span="", file="JsonDictionaryContract.cs"];
m9_819 [label="Newtonsoft.Json.Converters.XDocumentWrapper", span="", file="JsonDictionaryContract.cs"];
m9_820 [label="Newtonsoft.Json.Converters.XContainerWrapper", span="", file="JsonDictionaryContract.cs"];
m9_821 [label="Newtonsoft.Json.Converters.XObjectWrapper", span="", file="JsonDictionaryContract.cs"];
m9_822 [label="Newtonsoft.Json.Converters.XElementWrapper", span="", file="JsonDictionaryContract.cs"];
m9_823 [label="Newtonsoft.Json.Converters.XmlNodeConverter", span="", file="JsonDictionaryContract.cs"];
m10_243 [label="jsonWriter.Culture = previousCulture", span="881-881", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_244 [label="Exit Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", span="803-803", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_245 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", span="17-17", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="JsonSerializer.cs"];
m10_246 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="55-55", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializer.cs"];
m10_228 [label="traceJsonWriter != null", span="864-864", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_47 [label="settings._specialPropertyHandling != null", span="535-535", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", color=red, community=0];
m10_111 [label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="327-327", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonSerializer.cs"];
m10_112 [label="JavaScriptUtils.WriteEscapedJavaScriptString(_writer, value, _quoteChar, true, GetCharEscapeFlags(), StringEscapeHandling)", span="329-329", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonSerializer.cs"];
m10_113 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="322-322", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonSerializer.cs"];
m10_115 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="336-336", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSerializer.cs"];
m10_114 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="820-820", cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs"];
m10_116 [label="InternalWriteValue(JsonToken.Integer)", span="338-338", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSerializer.cs"];
m10_21 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="475-475", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_22 [label="JsonSerializer serializer = Create()", span="477-477", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_23 [label="settings != null", span="479-479", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_24 [label="ApplySerializerSettings(serializer, settings)", span="480-480", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_157 [label="reader.DateFormatString = _dateFormatString", span="719-719", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_158 [label="TraceJsonReader traceJsonReader = (TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose)\r\n                ? new TraceJsonReader(reader)\r\n                : null", span="722-724", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_159 [label="JsonSerializerInternalReader serializerReader = new JsonSerializerInternalReader(this)", span="726-726", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_160 [label="object value = serializerReader.Deserialize(traceJsonReader ?? reader, objectType, CheckAdditionalContent)", span="727-727", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_107 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializer.cs"];
m10_179 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Integer)", span="476-476", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonSerializer.cs"];
m10_178 [label="InternalWriteValue(JsonToken.Integer)", span="475-475", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonSerializer.cs"];
m10_269 [label="Entry Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", span="917-917", cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs"];
m10_270 [label="EventHandler<ErrorEventArgs> error = Error", span="919-919", cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs"];
m10_272 [label="error(this, e)", span="921-921", cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs"];
m10_271 [label="error != null", span="920-920", cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs"];
m10_273 [label="Exit Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", span="917-917", cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs"];
m10_176 [label="Exit Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="675-675", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_172 [label="reader.MaxDepth = previousMaxDepth", span="742-742", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_173 [label=_dateFormatStringSet, span="743-743", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_174 [label="reader.DateFormatString = previousDateFormatString", span="744-744", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_175 [label="return value;", span="746-746", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_139 [label="_dateTimeZoneHandling != null && reader.DateTimeZoneHandling != _dateTimeZoneHandling", span="688-688", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_19 [label="return new JsonSerializer();", span="463-463", cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonSerializer.cs"];
m10_124 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="646-646", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializer.cs"];
m10_125 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="357-357", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonSerializer.cs"];
m10_126 [label="InternalWriteValue(JsonToken.Integer)", span="359-359", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonSerializer.cs"];
m10_150 [label="int? previousMaxDepth = null", span="708-708", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_25 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="351-351", cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonSerializer.cs"];
m10_26 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="JsonSerializer.cs"];
m10_258 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="897-897", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_259 [label="converters != null", span="903-903", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_261 [label="i < converters.Count", span="905-905", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_262 [label="JsonConverter converter = converters[i]", span="907-907", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_263 [label="converter.CanConvert(objectType)", span="909-909", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_260 [label="int i = 0", span="905-905", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_266 [label="return null;", span="914-914", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_265 [label="i++", span="905-905", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_264 [label="return converter;", span="910-910", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_267 [label="Exit Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="897-897", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs"];
m10_57 [label="settings._objectCreationHandling != null", span="545-545", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_58 [label="serializer.ObjectCreationHandling = settings.ObjectCreationHandling", span="546-546", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_60 [label="serializer.NullValueHandling = settings.NullValueHandling", span="548-548", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_61 [label="settings._defaultValueHandling != null", span="549-549", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_62 [label="serializer.DefaultValueHandling = settings.DefaultValueHandling", span="550-550", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_63 [label="settings._constructorHandling != null", span="551-551", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_64 [label="serializer.ConstructorHandling = settings.ConstructorHandling", span="552-552", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_65 [label="settings._context != null", span="553-553", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_66 [label="serializer.Context = settings.Context", span="554-554", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_59 [label="settings._nullValueHandling != null", span="547-547", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_67 [label="settings._checkAdditionalContent != null", span="555-555", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_120 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="634-634", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs"];
m10_121 [label="return Deserialize(reader, null);", span="636-636", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs"];
m10_122 [label="Exit Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="634-634", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs"];
m10_123 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_102 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JsonSerializer.cs"];
m10_181 [label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25", cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonSerializer.cs"];
m10_140 [label="previousDateTimeZoneHandling = reader.DateTimeZoneHandling", span="690-690", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_142 [label="DateParseHandling? previousDateParseHandling = null", span="694-694", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_143 [label="_dateParseHandling != null && reader.DateParseHandling != _dateParseHandling", span="695-695", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_144 [label="previousDateParseHandling = reader.DateParseHandling", span="697-697", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_141 [label="reader.DateTimeZoneHandling = _dateTimeZoneHandling.Value", span="691-691", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_145 [label="reader.DateParseHandling = _dateParseHandling.Value", span="698-698", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_247 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1411-1411", cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonSerializer.cs"];
m10_248 [label="Newtonsoft.Json.JsonTextWriter", span="", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.GetJson()", file="JsonSerializer.cs"];
m10_274 [label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0", cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="JsonSerializer.cs"];
m10_162 [label="TraceWriter.Trace(TraceLevel.Verbose, ''Deserialized JSON: '' + Environment.NewLine + traceJsonReader.GetJson(), null)", span="730-730", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_164 [label="reader.Culture = previousCulture", span="734-734", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", color=green, community=0, file="JsonSerializer.cs"];
m10_163 [label="previousCulture != null", span="733-733", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_165 [label="previousDateTimeZoneHandling != null", span="735-735", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_97 [label="serializer._culture = settings._culture", span="592-592", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_210 [label="_floatFormatHandling != null && jsonWriter.FloatFormatHandling != _floatFormatHandling", span="830-830", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_48 [label="serializer.SpecialPropertyHandling = settings.SpecialPropertyHandling", span="536-536", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", color=red, community=0];
m10_49 [label="settings._typeNameAssemblyFormat != null", span="537-537", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_50 [label="serializer.TypeNameAssemblyFormat = settings.TypeNameAssemblyFormat", span="538-538", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_51 [label="settings._preserveReferencesHandling != null", span="539-539", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_52 [label="serializer.PreserveReferencesHandling = settings.PreserveReferencesHandling", span="540-540", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_117 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Integer)", span="339-339", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSerializer.cs"];
m10_108 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="615-615", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs"];
m10_109 [label="PopulateInternal(reader, target)", span="617-617", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs"];
m10_110 [label="Exit Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="615-615", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs"];
m10_82 [label="serializer._dateFormatHandling = settings._dateFormatHandling", span="575-575", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_180 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="473-473", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonSerializer.cs"];
m10_130 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="368-368", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonSerializer.cs"];
m10_131 [label="InternalWriteValue(JsonToken.Integer)", span="370-370", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonSerializer.cs"];
m10_212 [label="jsonWriter.FloatFormatHandling = _floatFormatHandling.Value", span="833-833", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_213 [label="StringEscapeHandling? previousStringEscapeHandling = null", span="836-836", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_214 [label="_stringEscapeHandling != null && jsonWriter.StringEscapeHandling != _stringEscapeHandling", span="837-837", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_215 [label="previousStringEscapeHandling = jsonWriter.StringEscapeHandling", span="839-839", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_216 [label="jsonWriter.StringEscapeHandling = _stringEscapeHandling.Value", span="840-840", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_217 [label="CultureInfo previousCulture = null", span="843-843", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_191 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", span="787-787", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_254 [label="Entry Newtonsoft.Json.Serialization.DefaultReferenceResolver.DefaultReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.DefaultReferenceResolver()", file="JsonSerializer.cs"];
m10_200 [label="jsonWriter.Formatting = _formatting.Value", span="812-812", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_236 [label="previousFloatFormatHandling != null", span="874-874", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_237 [label="jsonWriter.FloatFormatHandling = previousFloatFormatHandling.Value", span="875-875", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_238 [label="previousStringEscapeHandling != null", span="876-876", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_239 [label="jsonWriter.StringEscapeHandling = previousStringEscapeHandling.Value", span="877-877", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_240 [label=_dateFormatStringSet, span="878-878", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_241 [label="jsonWriter.DateFormatString = previousDateFormatString", span="879-879", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_132 [label="Entry Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="675-675", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_133 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="677-677", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_34 [label="_writer.Write(name)", span="174-174", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonSerializer.cs"];
m10_35 [label="_writer.Write(''('')", span="175-175", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonSerializer.cs"];
m10_36 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="169-169", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonSerializer.cs"];
m10_37 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="182-182", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs"];
m10_38 [label=token, span="184-184", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs"];
m10_39 [label="JsonToken.EndObject", span="186-186", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs"];
m10_187 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="494-494", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializer.cs"];
m10_188 [label="InternalWriteValue(JsonToken.Float)", span="496-496", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializer.cs"];
m10_189 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Float)", span="497-497", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializer.cs"];
m10_103 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="311-311", cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonSerializer.cs"];
m10_211 [label="previousFloatFormatHandling = jsonWriter.FloatFormatHandling", span="832-832", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_13 [label="_context = JsonSerializerSettings.DefaultContext", span="446-446", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs"];
m10_192 [label="Serialize(new JsonTextWriter(textWriter), value, objectType)", span="789-789", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_193 [label="Exit Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", span="787-787", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_194 [label="SerializeInternal(jsonWriter, value, null)", span="800-800", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs"];
m10_195 [label="Exit Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="798-798", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs"];
m10_196 [label="ValidationUtils.ArgumentNotNull(jsonWriter, ''jsonWriter'')", span="805-805", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_197 [label="Formatting? previousFormatting = null", span="808-808", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_198 [label="_formatting != null && jsonWriter.Formatting != _formatting", span="809-809", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_129 [label="Exit Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="658-658", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs"];
m10_9 [label="_preserveReferencesHandling = JsonSerializerSettings.DefaultPreserveReferencesHandling", span="442-442", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs"];
m10_268 [label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="63-63", cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonSerializer.cs"];
m10_104 [label="InternalWriteRaw()", span="313-313", cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonSerializer.cs"];
m10_105 [label="_writer.Write(json)", span="315-315", cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonSerializer.cs"];
m10_106 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="311-311", cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonSerializer.cs"];
m10_151 [label="_maxDepthSet && reader.MaxDepth != _maxDepth", span="709-709", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_153 [label="reader.MaxDepth = _maxDepth", span="712-712", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_154 [label="string previousDateFormatString = null", span="715-715", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_155 [label="_dateFormatStringSet && reader.DateFormatString != _dateFormatString", span="716-716", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_152 [label="previousMaxDepth = reader.MaxDepth", span="711-711", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_156 [label="previousDateFormatString = reader.DateFormatString", span="718-718", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_146 [label="FloatParseHandling? previousFloatParseHandling = null", span="701-701", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_147 [label="_floatParseHandling != null && reader.FloatParseHandling != _floatParseHandling", span="702-702", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_148 [label="previousFloatParseHandling = reader.FloatParseHandling", span="704-704", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_149 [label="reader.FloatParseHandling = _floatParseHandling.Value", span="705-705", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_18 [label="Exit Newtonsoft.Json.JsonTextWriter.Close()", span="133-133", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonSerializer.cs"];
m10_20 [label="Entry System.IO.TextWriter.Close()", span="0-0", cluster="System.IO.TextWriter.Close()", file="JsonSerializer.cs"];
m10_135 [label="_culture != null && !_culture.Equals(reader.Culture)", span="681-681", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_136 [label="previousCulture = reader.Culture", span="683-683", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_137 [label="reader.Culture = _culture", span="684-684", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_138 [label="DateTimeZoneHandling? previousDateTimeZoneHandling = null", span="687-687", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_134 [label="CultureInfo previousCulture = null", span="680-680", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_74 [label="serializer.ReferenceResolver = settings.ReferenceResolver", span="564-564", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_80 [label="serializer._formatting = settings._formatting", span="573-573", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", color=green, community=0, file="JsonSerializer.cs"];
m10_76 [label="serializer.TraceWriter = settings.TraceWriter", span="566-566", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_78 [label="serializer.Binder = settings.Binder", span="568-568", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_79 [label="settings._formatting != null", span="572-572", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", color=green, community=0, file="JsonSerializer.cs"];
m10_77 [label="settings.Binder != null", span="567-567", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_75 [label="settings.TraceWriter != null", span="565-565", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_81 [label="settings._dateFormatHandling != null", span="574-574", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_0 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="110-110", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_1 [label="textWriter == null", span="112-112", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_2 [label="throw new ArgumentNullException(''textWriter'');", span="113-113", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_229 [label="TraceWriter.Trace(TraceLevel.Verbose, ''Serialized JSON: '' + Environment.NewLine + traceJsonWriter.GetJson(), null)", span="865-865", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_231 [label="jsonWriter.Formatting = previousFormatting.Value", span="869-869", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_232 [label="previousDateFormatHandling != null", span="870-870", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_233 [label="jsonWriter.DateFormatHandling = previousDateFormatHandling.Value", span="871-871", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_230 [label="previousFormatting != null", span="868-868", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_234 [label="previousDateTimeZoneHandling != null", span="872-872", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_223 [label="previousDateFormatString = jsonWriter.DateFormatString", span="853-853", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_224 [label="jsonWriter.DateFormatString = _dateFormatString", span="854-854", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_225 [label="TraceJsonWriter traceJsonWriter = (TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose)\r\n                ? new TraceJsonWriter(jsonWriter)\r\n                : null", span="857-859", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_226 [label="JsonSerializerInternalWriter serializerWriter = new JsonSerializerInternalWriter(this)", span="861-861", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_227 [label="serializerWriter.Serialize(traceJsonWriter ?? jsonWriter, value, objectType)", span="862-862", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_40 [label="!CollectionUtils.IsNullOrEmpty(settings.Converters)", span="522-522", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_42 [label="i < settings.Converters.Count", span="526-526", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_44 [label="i++", span="526-526", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_45 [label="settings._typeNameHandling != null", span="533-533", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_41 [label="int i = 0", span="526-526", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_43 [label="serializer.Converters.Insert(i, settings.Converters[i])", span="528-528", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_46 [label="serializer.TypeNameHandling = settings.TypeNameHandling", span="534-534", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_127 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Integer)", span="360-360", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonSerializer.cs"];
m10_128 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="357-357", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonSerializer.cs"];
m10_182 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="484-484", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonSerializer.cs"];
m10_183 [label="InternalWriteValue(JsonToken.Integer)", span="486-486", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonSerializer.cs"];
m10_184 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Integer)", span="487-487", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonSerializer.cs"];
m10_56 [label="serializer.MissingMemberHandling = settings.MissingMemberHandling", span="544-544", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_166 [label="reader.DateTimeZoneHandling = previousDateTimeZoneHandling.Value", span="736-736", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_93 [label="serializer._floatParseHandling = settings._floatParseHandling", span="588-588", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_94 [label="settings._stringEscapeHandling != null", span="589-589", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_95 [label="serializer._stringEscapeHandling = settings._stringEscapeHandling", span="590-590", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_96 [label="settings._culture != null", span="591-591", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_14 [label="_binder = DefaultSerializationBinder.Instance", span="447-447", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs"];
m10_15 [label="_culture = JsonSerializerSettings.DefaultCulture", span="449-449", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs"];
m10_16 [label="_contractResolver = DefaultContractResolver.Instance", span="450-450", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs"];
m10_17 [label="Exit Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs"];
m10_255 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="892-892", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializer.cs"];
m10_256 [label="return GetMatchingConverter(_converters, type);", span="894-894", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializer.cs"];
m10_257 [label="Exit Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="892-892", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializer.cs"];
m10_31 [label="return Create(defaultSettings);", span="499-499", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonSerializer.cs"];
m10_32 [label="Exit Newtonsoft.Json.JsonSerializer.CreateDefault()", span="493-493", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonSerializer.cs"];
m10_33 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonSerializer.cs"];
m10_219 [label="previousCulture = jsonWriter.Culture", span="846-846", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_220 [label="jsonWriter.Culture = _culture", span="847-847", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_221 [label="string previousDateFormatString = null", span="850-850", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_222 [label="_dateFormatStringSet && jsonWriter.DateFormatString != _dateFormatString", span="851-851", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_118 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="64-64", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializer.cs"];
m10_186 [label="Entry Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="507-507", cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonSerializer.cs"];
m10_185 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_3 [label="_writer = textWriter", span="115-115", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_4 [label="_quoteChar = ''''", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_5 [label="_quoteName = true", span="117-117", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_6 [label="_indentChar = ' '", span="118-118", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_7 [label="_indentation = 2", span="119-119", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_8 [label="Exit Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="110-110", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs"];
m10_10 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="125-125", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializer.cs"];
m10_11 [label="_writer.Flush()", span="127-127", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializer.cs"];
m10_12 [label="Exit Newtonsoft.Json.JsonTextWriter.Flush()", span="125-125", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", color=red, community=0, file="JsonSerializer.cs"];
m10_28 [label="InternalWriteStart(JsonToken.StartArray, JsonContainerType.Array)", span="160-160", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSerializer.cs"];
m10_29 [label="_writer.Write(''['')", span="162-162", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSerializer.cs"];
m10_30 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="158-158", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSerializer.cs"];
m10_190 [label="Entry Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", span="803-803", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_235 [label="jsonWriter.DateTimeZoneHandling = previousDateTimeZoneHandling.Value", span="873-873", cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs"];
m10_53 [label="settings._referenceLoopHandling != null", span="541-541", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_119 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs"];
m10_55 [label="settings._missingMemberHandling != null", span="543-543", cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs"];
m10_27 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="158-158", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSerializer.cs"];
m10_54 [label="Entry Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", span="235-235", cluster="Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", file="JsonSerializer.cs"];
m10_68 [label="StringEscapeHandling == StringEscapeHandling.EscapeHtml", span="237-237", cluster="Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", file="JsonSerializer.cs"];
m10_69 [label="return JavaScriptUtils.HtmlCharEscapeFlags;", span="238-238", cluster="Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", file="JsonSerializer.cs"];
m10_70 [label="_quoteChar == ''''", span="240-240", cluster="Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", file="JsonSerializer.cs"];
m10_71 [label="return JavaScriptUtils.DoubleQuoteCharEscapeFlags;", span="241-241", cluster="Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", file="JsonSerializer.cs"];
m10_72 [label="return JavaScriptUtils.SingleQuoteCharEscapeFlags;", span="243-243", cluster="Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", file="JsonSerializer.cs"];
m10_73 [label="Exit Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", span="235-235", cluster="Newtonsoft.Json.JsonTextWriter.GetCharEscapeFlags()", file="JsonSerializer.cs"];
m10_83 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JsonSerializer.cs"];
m10_84 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="270-270", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonSerializer.cs"];
m10_85 [label="_writer.Write(',')", span="272-272", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonSerializer.cs", color=green, community=0];
m10_86 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="270-270", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonSerializer.cs"];
m10_87 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="278-278", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonSerializer.cs"];
m10_88 [label="_writer.Write(' ')", span="280-280", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonSerializer.cs"];
m10_89 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="278-278", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonSerializer.cs"];
m10_90 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="283-283", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs"];
m10_91 [label="_writer.Write(value)", span="285-285", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs"];
m10_92 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="283-283", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs"];
m10_98 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="301-301", cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonSerializer.cs"];
m10_99 [label="InternalWriteUndefined()", span="303-303", cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonSerializer.cs"];
m10_100 [label="WriteValueInternal(JsonConvert.Undefined, JsonToken.Undefined)", span="304-304", cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonSerializer.cs"];
m10_101 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="301-301", cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonSerializer.cs"];
m10_177 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="473-473", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonSerializer.cs"];
m10_171 [label=_maxDepthSet, span="741-741", cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs"];
m10_199 [label="Entry Newtonsoft.Json.JsonConvert.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="119-119", cluster="Newtonsoft.Json.JsonConvert.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSerializer.cs"];
m10_202 [label="value == null", span="519-519", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_203 [label="WriteNull()", span="521-521", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_204 [label="InternalWriteValue(JsonToken.Bytes)", span="525-525", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_206 [label="Base64Encoder.Encode(value, 0, value.Length)", span="527-527", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_207 [label="Base64Encoder.Flush()", span="528-528", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_208 [label="_writer.Write(_quoteChar)", span="529-529", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_218 [label="Entry Newtonsoft.Json.JsonConvert.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="169-169", cluster="Newtonsoft.Json.JsonConvert.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSerializer.cs"];
m10_201 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="517-517", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_205 [label="_writer.Write(_quoteChar)", span="526-526", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_209 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="517-517", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs"];
m10_242 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1397-1397", cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="JsonSerializer.cs"];
m10_168 [label="InternalWriteValue(JsonToken.Integer)", span="455-455", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonSerializer.cs"];
m10_170 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="453-453", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonSerializer.cs"];
m10_167 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="453-453", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonSerializer.cs"];
m10_169 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Integer)", span="456-456", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonSerializer.cs"];
m10_161 [label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="346-346", cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonSerializer.cs"];
m10_249 [label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="884-884", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs"];
m10_250 [label="_referenceResolver == null", span="886-886", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs"];
m10_251 [label="_referenceResolver = new DefaultReferenceResolver()", span="887-887", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs"];
m10_252 [label="return _referenceResolver;", span="889-889", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs"];
m10_253 [label="Exit Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="884-884", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs"];
m10_275 [label="Newtonsoft.Json.JsonSerializer", span="", file="JsonSerializer.cs"];
m11_16 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="230-230", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerProxy.cs"];
m11_17 [label="_serializerReader != null", span="232-232", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerProxy.cs"];
m11_18 [label="return _serializerReader.Deserialize(reader, objectType, false);", span="233-233", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerProxy.cs"];
m11_19 [label="return _serializer.Deserialize(reader, objectType);", span="235-235", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerProxy.cs"];
m11_20 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerProxy.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="230-230", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerProxy.cs"];
m11_10 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerProxy.cs"];
m11_36 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="798-798", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerProxy.cs"];
m11_23 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.PopulateInternal(Newtonsoft.Json.JsonReader, object)", span="238-238", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerProxy.cs"];
m11_24 [label="_serializerReader != null", span="240-240", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerProxy.cs"];
m11_25 [label="_serializerReader.Populate(reader, target)", span="241-241", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerProxy.cs"];
m11_26 [label="_serializer.Populate(reader, target)", span="243-243", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerProxy.cs"];
m11_27 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerProxy.PopulateInternal(Newtonsoft.Json.JsonReader, object)", span="238-238", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerProxy.cs"];
m11_29 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="615-615", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerProxy.cs"];
m11_22 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerProxy.cs"];
m11_35 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="60-60", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerProxy.cs"];
m11_21 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerProxy.cs"];
m11_30 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", span="246-246", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerProxy.cs"];
m11_31 [label="_serializerWriter != null", span="248-248", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerProxy.cs"];
m11_32 [label="_serializerWriter.Serialize(jsonWriter, value, rootType)", span="249-249", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerProxy.cs"];
m11_33 [label="_serializer.Serialize(jsonWriter, value)", span="251-251", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerProxy.cs"];
m11_34 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerProxy.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", span="246-246", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerProxy.cs"];
m11_0 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", file="JsonSerializerProxy.cs"];
m11_1 [label="_serializerReader != null", span="208-208", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", file="JsonSerializerProxy.cs"];
m11_2 [label="return _serializerReader;", span="209-209", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", file="JsonSerializerProxy.cs"];
m11_3 [label="return _serializerWriter;", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", file="JsonSerializerProxy.cs"];
m11_4 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", file="JsonSerializerProxy.cs"];
m11_5 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerProxy.cs"];
m11_6 [label="ValidationUtils.ArgumentNotNull(serializerReader, ''serializerReader'')", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerProxy.cs"];
m11_7 [label="_serializerReader = serializerReader", span="218-218", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerProxy.cs"];
m11_8 [label="_serializer = serializerReader.Serializer", span="219-219", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerProxy.cs"];
m11_9 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerProxy.cs"];
m11_11 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="222-222", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="JsonSerializerProxy.cs"];
m11_12 [label="ValidationUtils.ArgumentNotNull(serializerWriter, ''serializerWriter'')", span="224-224", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="JsonSerializerProxy.cs"];
m11_13 [label="_serializerWriter = serializerWriter", span="226-226", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="JsonSerializerProxy.cs"];
m11_14 [label="_serializer = serializerWriter.Serializer", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="JsonSerializerProxy.cs"];
m11_15 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="222-222", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="JsonSerializerProxy.cs"];
m11_28 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerProxy.cs"];
m11_37 [label="Newtonsoft.Json.Serialization.JsonSerializerProxy", span="", file="JsonSerializerProxy.cs"];
m12_5 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_0 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="350-350", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_1 [label="DefaultContext = new StreamingContext()", span="352-352", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_2 [label="DefaultCulture = CultureInfo.InvariantCulture", span="353-353", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_3 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="350-350", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_6 [label="Converters = new List<JsonConverter>()", span="361-361", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_7 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_4 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext()", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext()", file="JsonSerializerSettings.cs"];
m12_8 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerSettings.cs"];
m12_9 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSerializerSettings.cs"];
m13_1898 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonSerializerTest.cs"];
m13_1020 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs"];
m13_3332 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonSerializerTest.cs"];
m13_1650 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="3641-3641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1651 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="3643-3643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1652 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="3641-3641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_276 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_277 [label="string s = null", span="553-553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_278 [label="var v = new JValue(s)", span="554-554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_279 [label="var o = JObject.FromObject(new { title = v })", span="555-555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_280 [label="JObject oo = new JObject\r\n            {\r\n                {''title'', v}\r\n            }", span="557-560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_282 [label="Assert.AreEqual(null, v.Value)", span="564-564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_283 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="565-565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_281 [label="string output = o.ToString()", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_284 [label="Assert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="567-569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_1608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="3492-3492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs"];
m13_309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="581-581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonSerializerTest.cs"];
m13_1183 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2475-2475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1184 [label="_name = name", span="2477-2477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1185 [label="Age = age", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1186 [label="Rank = rank", span="2479-2479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1187 [label="Title = title", span="2480-2480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1188 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2475-2475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_683 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs"];
m13_2843 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs"];
m13_1899 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonSerializerTest.cs"];
m13_362 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="646-646", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs"];
m13_123 [label="Entry System.Globalization.CultureInfo.ToString()", span="0-0", cluster="System.Globalization.CultureInfo.ToString()", file="JsonSerializerTest.cs"];
m13_1742 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs"];
m13_354 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="475-475", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_1917 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="798-798", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonSerializerTest.cs"];
m13_3322 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonSerializerTest.cs"];
m13_317 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_318 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_319 [label="var json = JsonConvert.SerializeObject(original)", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_320 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_321 [label="Assert.AreEqual(expectedJson, json)", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_322 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_823 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs"];
m13_1270 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="2709-2709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1271 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="2711-2711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1272 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="2713-2713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1273 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="2715-2715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1274 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="2716-2716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1275 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="2717-2717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1276 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="2709-2709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_446 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs"];
m13_770 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="1595-1595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_771 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="1597-1597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_772 [label="string json = JsonConvert.SerializeObject(date)", span="1599-1599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_773 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="1600-1600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_774 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="1595-1595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_3426 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="7863-7863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3427 [label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="7865-7865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", color=green, community=0];
m13_3428 [label="DateTime dt = new DateTime(2000, 12, 22)", span="7867-7867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", color=green, community=0];
m13_3430 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="7869-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", color=green, community=0];
m13_3433 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="7879-7879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", color=green, community=0];
m13_3429 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="7868-7868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", color=green, community=0];
m13_3432 [label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="7877-7877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", color=green, community=0];
m13_3431 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="7875-7875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", color=green, community=0];
m13_3434 [label="Assert.AreEqual(dt, dt1)", span="7881-7881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", color=green, community=0];
m13_445 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs"];
m13_124 [label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonSerializerTest.cs"];
m13_482 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs"];
m13_1577 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3415-3415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m13_1578 [label=initial, span="3417-3417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m13_1579 [label="Add(pair.Key, pair.Value)", span="3419-3419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m13_1580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3415-3415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m13_1954 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4328-4328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m13_1955 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'',\r\n                () =>\r\n                {\r\n                    //Additional text found in JSON string after finishing deserializing object.\r\n                    //Test 1\r\n                    var reference = new Dictionary<string, object>();\r\n                    reference.Add(''$ref'', 1);\r\n                    reference.Add(''$id'', 1);\r\n\r\n                    var child = new Dictionary<string, object>();\r\n                    child.Add(''_id'', 2);\r\n                    child.Add(''Name'', ''Isabell'');\r\n                    child.Add(''Father'', reference);\r\n\r\n                    var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                    JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n                })", span="4330-4347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m13_1956 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4328-4328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m13_414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs"];
m13_672 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="742-742", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs"];
m13_1408 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="182-182", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs"];
m13_864 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="1752-1752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_865 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1754-1754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_866 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1755-1755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_870 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1765-1765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_871 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_867 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="1757-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_868 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1761-1761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_869 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1763-1763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_872 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="1752-1752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1312 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2780-2780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1313 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="2782-2782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1314 [label="Assert.AreEqual(3, l.Count)", span="2783-2783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1315 [label="Assert.AreEqual(3.3m, l[0])", span="2785-2785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1316 [label="Assert.AreEqual(null, l[1])", span="2786-2786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1317 [label="Assert.AreEqual(1.1m, l[2])", span="2787-2787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1318 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2780-2780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_2576 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5870-5870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2577 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="5872-5872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2578 [label="string json = JsonConvert.SerializeObject(d1)", span="5874-5874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2580 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5878-5878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2581 [label="Assert.AreEqual(d1[0], d2[0])", span="5879-5879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2579 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5876-5876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2582 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5870-5870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_1250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="2641-2641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_1251 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="2643-2646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_1252 [label="string json = JsonConvert.SerializeObject(value)", span="2648-2648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_1253 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="2650-2650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_1254 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="2641-2641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_2101 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4646-4646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m13_2102 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="4648-4648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m13_2103 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4649-4649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m13_2104 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4646-4646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m13_1021 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1022 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2058-2058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1023 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2060-2060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1031 [label="Assert.AreEqual(json, after)", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1024 [label="Assert.AreEqual(''Before!'', aa.Before)", span="2062-2062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1025 [label="Assert.AreEqual(''After!'', aa.After)", span="2063-2063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1026 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2064-2064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1027 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2065-2065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1028 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2066-2066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1029 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2067-2067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1030 [label="string after = JsonConvert.SerializeObject(aa)", span="2069-2069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1032 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2750-2750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m13_1293 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="2752-2752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m13_1294 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'',\r\n                () => { JsonConvert.DeserializeObject<TestObjects.Event>(json); })", span="2754-2756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m13_1295 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2750-2750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m13_2814 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6365-6365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs"];
m13_55 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="JsonSerializerTest.cs"];
m13_2692 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonSerializerTest.cs"];
m13_889 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs"];
m13_1248 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs"];
m13_1743 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs"];
m13_2175 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="4777-4777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs"];
m13_571 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="341-341", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs"];
m13_2297 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5129-5129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2298 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5131-5136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2299 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5138-5138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2300 [label="Assert.AreEqual(40, p.Age)", span="5139-5139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2301 [label="Assert.AreEqual(44.4, p.Height)", span="5140-5140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2302 [label="Assert.AreEqual(4m, p.Price)", span="5141-5141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2303 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5129-5129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_1968 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1969 [label="var reference = new Dictionary<string, object>()", span="4353-4353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1970 [label="reference.Add(''$ref'', null)", span="4354-4354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1971 [label="reference.Add(''$id'', null)", span="4355-4355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1972 [label="reference.Add(''blah'', ''blah!'')", span="4356-4356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1976 [label="child.Add(''Father'', reference)", span="4361-4361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1973 [label="var child = new Dictionary<string, object>()", span="4358-4358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1974 [label="child.Add(''_id'', 2)", span="4359-4359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1975 [label="child.Add(''Name'', ''Isabell'')", span="4360-4360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1977 [label="string json = JsonConvert.SerializeObject(child)", span="4363-4363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1978 [label="Console.WriteLine(json)", span="4365-4365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1979 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4367-4367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1980 [label="Assert.AreEqual(3, result.Count)", span="4369-4369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1981 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="4370-4370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1982 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="4371-4371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1983 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_690 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1449-1449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m13_691 [label="string json = JsonConvert.SerializeObject(null)", span="1451-1451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m13_692 [label="Assert.AreEqual(''null'', json)", span="1452-1452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m13_693 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1449-1449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m13_3393 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="7798-7798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3394 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="7800-7800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3395 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="7801-7801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3396 [label="Assert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="7802-7805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3397 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="7798-7798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_2799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6307-6307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2800 [label="Product product = new Product()", span="6309-6309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2801 [label="product.Name = ''Apple''", span="6310-6310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2802 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6311-6311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2803 [label="product.Price = 3.99M", span="6312-6312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2804 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6313-6313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2805 [label="string json = JsonConvert.SerializeObject(product)", span="6315-6315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2806 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6323-6328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2807 [label="Assert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6329-6338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2808 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6346-6346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2809 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6348-6353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2810 [label="Assert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6355-6362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_2811 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6307-6307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_1012 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2043-2043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1013 [label="JaggedArray aa = new JaggedArray()", span="2045-2045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1014 [label="aa.Before = ''Before!''", span="2046-2046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1015 [label="aa.After = ''After!''", span="2047-2047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1016 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2048-2048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1017 [label="string json = JsonConvert.SerializeObject(aa)", span="2050-2050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1018 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2052-2052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1019 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2043-2043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_2008 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4433-4433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2009 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4435-4435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2010 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4437-4437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2011 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4438-4438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2012 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4440-4440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2013 [label="Assert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4442-4445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2014 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4447-4448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2015 [label="Assert.AreEqual(2, newDictionary.Count)", span="4450-4450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2016 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4433-4433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_288 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs"];
m13_2527 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m13_890 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs"];
m13_1562 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3388-3388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1563 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3390-3390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1564 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3392-3392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1565 [label="Assert.AreEqual(3, dic.Count)", span="3394-3394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1566 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="3395-3395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1567 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="3396-3396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1568 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1569 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3388-3388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2537 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5802-5802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2538 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="5804-5804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2539 [label="Uri uri = new Uri(input)", span="5805-5805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2540 [label="string json = JsonConvert.SerializeObject(uri)", span="5806-5806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2542 [label="Assert.AreEqual(uri, output)", span="5809-5809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2541 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5807-5807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2543 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5802-5802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_769 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JsonSerializerTest.cs"];
m13_1658 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="3651-3651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m13_1659 [label="return _innerDictionary.TryGetValue(key, out value);", span="3653-3653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m13_1660 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="3651-3651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m13_2450 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5594-5594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m13_2451 [label="return _readonlyString;", span="5596-5596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m13_2452 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5594-5594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m13_1746 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs"];
m13_2590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2591 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="5898-5898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2592 [label="string json = JsonConvert.SerializeObject(d1)", span="5900-5900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2594 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5904-5904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2595 [label="Assert.AreEqual(d1[0], d2[0])", span="5905-5905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2593 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="5902-5902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2596 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_1535 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3299-3299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_1536 [label="_dict1.Add(item.Key, item)", span="3301-3301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_1537 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3299-3299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_3176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7284-7284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3177 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="7286-7286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3178 [label="string json = JsonConvert.SerializeObject(tuple)", span="7287-7287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3179 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="7288-7288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3180 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="7290-7290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3181 [label="Assert.AreEqual(500, tuple2.Item1)", span="7291-7291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3182 [label="Assert.AreEqual(20, tuple2.Item2)", span="7292-7292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7284-7284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_2827 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6380-6380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_2828 [label="return objectType == typeof(Color);", span="6382-6382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_2829 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6380-6380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_2131 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs"];
m13_353 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_2250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5004-5004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2251 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5006-5006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2252 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5007-5007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2253 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5004-5004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_3135 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7126-7126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m13_3136 [label="IgnoreSerializableAttribute = false", span="7128-7128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m13_3137 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7126-7126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m13_1255 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="196-196", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs"];
m13_2141 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4732-4732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2142 [label="string json = ''{Amount:123456789876543.21}''", span="4734-4734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2143 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4735-4735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2144 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="4736-4736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2146 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="4740-4740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2145 [label="JsonSerializer serializer = new JsonSerializer()", span="4738-4738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2147 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="4741-4741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2148 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4732-4732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2074 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4597-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2075 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="4599-4602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2076 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="4604-4604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2077 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="4606-4606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2078 [label="reader.DateParseHandling = DateParseHandling.None", span="4607-4607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2080 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="4611-4611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2079 [label="JsonSerializer serializer = new JsonSerializer()", span="4609-4609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2081 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4613-4613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2082 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4614-4614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2083 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4597-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5263-5263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_2341 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5265-5265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_2342 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5266-5266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_2343 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5263-5263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_383 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_384 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="824-830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_385 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="832-832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_386 [label="baseWith.Virtual = ''Virtual2!''", span="833-833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_387 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_388 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="835-835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_389 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="837-837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_390 [label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="839-846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_391 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_2176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="4765-4765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs"];
m13_3210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7358-7358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3211 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="7360-7360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3212 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="7362-7362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3214 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'',\r\n                () => JsonConvert.DeserializeObject<IList<long>>(json))", span="7366-7368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3213 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="7364-7364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3215 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7358-7358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="576-576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonSerializerTest.cs"];
m13_187 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_188 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_189 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_190 [label="serializerProxy.Binder = customBinder", span="425-425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_191 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="426-426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_192 [label="serializerProxy.CheckAdditionalContent = true", span="428-428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_193 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_194 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_195 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_196 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_197 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_199 [label="serializerProxy.ContractResolver = resolver", span="440-440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_200 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_201 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="443-443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_202 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_203 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_204 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_205 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="449-449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_206 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_207 [label="serializerProxy.DateFormatString = ''yyyy''", span="452-452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_208 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="453-453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_209 [label="serializerProxy.DateParseHandling = DateParseHandling.None", span="455-455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_210 [label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_211 [label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_212 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_213 [label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="461-461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_214 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_215 [label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="464-464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_216 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="465-465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_217 [label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="467-467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_218 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_219 [label="serializerProxy.Formatting = Formatting.Indented", span="470-470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_220 [label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_221 [label="serializerProxy.MaxDepth = 9001", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_222 [label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="474-474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_223 [label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_224 [label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_225 [label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="479-479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_226 [label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="480-480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_227 [label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="482-482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_228 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="483-483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_229 [label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_230 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_231 [label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="488-488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_232 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_234 [label="serializerProxy.ReferenceResolver = referenceResolver", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_235 [label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="493-493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_236 [label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_237 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="496-496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_239 [label="serializerProxy.TraceWriter = traceWriter", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_240 [label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="500-500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_241 [label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="503-503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_242 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="504-504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_243 [label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="507-507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_244 [label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_198 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_233 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="491-491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_238 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="498-498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_245 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_2615 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="5949-5949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2616 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="5951-5956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2617 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5958-5958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2618 [label="Assert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="5960-5964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2619 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="5949-5949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_739 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs"];
m13_2635 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonSerializerTest.cs"];
m13_2314 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5161-5161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_2315 [label="MultiIndexSuper e = new MultiIndexSuper()", span="5163-5163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_2316 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5165-5165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_2317 [label="Assert.AreEqual(@''{}'', json)", span="5167-5167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_2318 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5161-5161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_1611 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3549-3549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1612 [label="dictionary == null", span="3551-3551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1614 [label=dictionary, span="3556-3556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1613 [label="throw new ArgumentNullException(''dictionary'');", span="3553-3553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1615 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="3558-3558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3549-3549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_2419 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5508-5508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m13_2420 [label="throw new NotImplementedException();", span="5510-5510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m13_2421 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5508-5508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m13_981 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1967-1967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_982 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1969-1974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_983 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1976-1976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_984 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="1978-1978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_985 [label="Assert.AreEqual(null, c.MiddleName)", span="1979-1979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_986 [label="Assert.AreEqual(null, c.LastName)", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1967-1967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_2924 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6561-6561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2925 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="6563-6567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2926 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6569-6569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2927 [label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="6571-6574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2928 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="6576-6576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2929 [label="Assert.AreEqual(2, dic2.Count)", span="6578-6578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2930 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6579-6579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2931 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2932 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6561-6561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_2822 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonSerializerTest.cs"];
m13_3077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="6950-6950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m13_3078 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="6952-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m13_3079 [label="Assert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="6958-6961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m13_3080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="6950-6950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m13_1934 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4295-4295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1935 [label="throw new NotImplementedException();", span="4297-4297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1936 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4295-4295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1471 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs"];
m13_3057 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs"];
m13_996 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JsonSerializerTest.cs"];
m13_2994 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonSerializerTest.cs"];
m13_1347 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2842-2842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m13_1348 [label="string json = @''[]''", span="2844-2844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m13_1349 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); })", span="2846-2850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m13_1350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2842-2842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m13_831 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs"];
m13_404 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="789-789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonSerializerTest.cs"];
m13_1627 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs"];
m13_1675 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3699-3699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_1676 [label="_stringValue = stringValue", span="3701-3701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_1677 [label="_intValue = intValue", span="3702-3702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_1678 [label="_dateTimeOffsetValue = dateTimeOffset", span="3703-3703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_1679 [label="_personValue = personValue", span="3704-3704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_1680 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="3705-3705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_1681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3699-3699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_311 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="627-627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_312 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="628-628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_313 [label="Assert.IsNotNull(deserialized.foo)", span="629-629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_314 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="630-630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_448 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="195-195", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs"];
m13_1618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="3593-3593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1619 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="3595-3595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1620 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="3593-3593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1995 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4401-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_1996 [label="string json = @''{'value':9.9}''", span="4403-4403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_1997 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="4405-4409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_1998 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="4411-4411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_1999 [label="Assert.AreEqual(9.9m, dic[''value''])", span="4412-4412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_2000 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4401-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_2133 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4718-4718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m13_2134 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="4720-4720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m13_2135 [label="Assert.AreEqual(123456789876543.21m, d)", span="4721-4721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m13_2136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4718-4718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m13_2366 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5335-5335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonSerializerTest.cs"];
m13_768 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_1870 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4178-4178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1871 [label="XNodeTestObject testObject = new XNodeTestObject()", span="4180-4180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1872 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="4181-4181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1873 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="4182-4182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1874 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4184-4184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1878 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="4200-4200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1879 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="4201-4201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1875 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="4185-4196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1876 [label="Assert.AreEqual(expected, json)", span="4197-4197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1877 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="4199-4199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1880 [label="Assert.IsNull(newTestObject.Element.Parent)", span="4203-4203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_1881 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4178-4178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_529 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1095-1095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_530 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_531 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_532 [label="Assert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1100-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_533 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_1624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="3603-3603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m13_1625 [label="_innerDictionary.Clear()", span="3605-3605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m13_1626 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="3603-3603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m13_323 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="586-586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonSerializerTest.cs"];
m13_519 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_2319 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5170-5170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs"];
m13_2359 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs"];
m13_891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_892 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="1807-1807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_893 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="1808-1808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_894 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="1809-1809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_895 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="1811-1811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_896 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="1812-1812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_897 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_898 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_899 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="1817-1817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_900 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1409 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2951-2951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m13_1410 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                    {\r\n                        ContractResolver = new DefaultContractResolver\r\n                        {\r\n#if !(NETFX_CORE || PORTABLE || PORTABLE40)\r\n                            IgnoreSerializableAttribute = true\r\n#endif\r\n                        }\r\n                    });\r\n                })", span="2953-2966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m13_1411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2951-2951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m13_2182 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="4820-4820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs"];
m13_2183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="4820-4820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs"];
m13_1812 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4145-4145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1859 [label="BB_field1 = g", span="4148-4148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1860 [label="BB_field2 = g", span="4149-4149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1861 [label="BB_property1 = g", span="4150-4150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1862 [label="BB_property2 = g", span="4151-4151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1863 [label="BB_property3 = g", span="4152-4152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1864 [label="BB_property4 = g", span="4153-4153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1865 [label="BB_property5 = g", span="4154-4154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1866 [label="BB_property6 = g", span="4155-4155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1867 [label="BB_property7 = g", span="4156-4156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1868 [label="BB_property8 = g", span="4157-4157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_1869 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4145-4145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_371 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m13_372 [label="var strings = dictionaryKey.Split(' ')", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m13_373 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="700-700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m13_374 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m13_2844 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6422-6422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2845 [label="MemoryStream ms = new MemoryStream()", span="6424-6424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2846 [label="BsonWriter writer = new BsonWriter(ms)", span="6425-6425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2850 [label="byte[] data = ms.ToArray()", span="6430-6430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2847 [label="writer.WriteStartArray()", span="6426-6426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2848 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6427-6427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2849 [label="writer.WriteEndArray()", span="6428-6428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2851 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="6431-6434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2852 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6436-6436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2853 [label="JValue v = (JValue)a[0]", span="6437-6437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2855 [label="Console.WriteLine(a.ToString())", span="6439-6439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2854 [label="Console.WriteLine(v.Value.GetType())", span="6438-6438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6422-6422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_915 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1840-1840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_916 [label="string json", span="1842-1842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_917 [label="json = JsonConvert.SerializeObject((int?)null)", span="1844-1844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_918 [label="Assert.AreEqual(''null'', json)", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_919 [label="json = JsonConvert.SerializeObject((int?)1)", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_920 [label="Assert.AreEqual(''1'', json)", span="1848-1848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_921 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1840-1840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_1256 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="2654-2654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1257 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="2656-2664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1258 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="2666-2666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1259 [label="Assert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="2668-2680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1260 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="2654-2654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_2037 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs"];
m13_1554 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="3293-3293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs"];
m13_2165 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="JsonSerializerTest.cs"];
m13_2331 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5231-5231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m13_2332 [label="B = 2", span="5233-5233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m13_2333 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5231-5231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m13_1710 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs"];
m13_1751 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3837-3837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1752 [label="Person person = new Person()", span="3839-3839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1753 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3840-3840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1754 [label="person.LastModified = person.BirthDate", span="3841-3841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1755 [label="person.Department = ''Department!''", span="3842-3842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1756 [label="person.Name = ''Name!''", span="3843-3843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1760 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3853-3853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1757 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3845-3845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1758 [label="string dateTimeOffsetText", span="3846-3846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1766 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3884-3884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1759 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="3848-3848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1762 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3856-3879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1761 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3855-3855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1763 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3881-3881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1764 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="3882-3882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1765 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3883-3883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1767 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3885-3885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1768 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1769 [label="Assert.AreEqual(null, o2._nullableInt)", span="3887-3887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_1770 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3837-3837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2597 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="5909-5909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2598 [label="Bb b = new Bb()", span="5911-5911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2599 [label="b.no = true", span="5912-5912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2600 [label="Aa a = b", span="5913-5913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2602 [label="string json = JsonConvert.SerializeObject(b)", span="5916-5916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2601 [label="a.no = int.MaxValue", span="5914-5914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2603 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="5918-5918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2604 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="5920-5920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2605 [label="Assert.AreEqual(true, b2.no)", span="5922-5922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2606 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="5909-5909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_972 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1941-1941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_973 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="1943-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_974 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1951-1951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_975 [label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="1953-1958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_976 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_977 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1962-1962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_978 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1963-1963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_979 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1941-1941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_443 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonSerializerTest.cs"];
m13_2380 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5413-5413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m13_2381 [label="Title = title", span="5415-5415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m13_2382 [label="Categories = new List<string>()", span="5416-5416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m13_2383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5413-5413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m13_914 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs"];
m13_2234 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4966-4966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m13_2235 [label="Value = val", span="4968-4968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m13_2236 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4966-4966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m13_2528 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="133-133", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs"];
m13_2858 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs"];
m13_37 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="136-136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_1581 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3459-3459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1582 [label="B value = new B()", span="3461-3461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1583 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="3462-3462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1584 [label="Assert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="3464-3469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1585 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3459-3459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2373-2373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m13_1149 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="2375-2375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m13_1150 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'',\r\n                () =>\r\n                {\r\n                    JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                    o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                    JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n                })", span="2377-2385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m13_1151 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2373-2373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m13_2296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", span="5103-5103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs"];
m13_988 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1984-1984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_989 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1988-1993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_990 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1995-1995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_991 [label="Assert.Fail()", span="1996-1996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_992 [label=JsonSerializationException, span="1998-1998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_993 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2000-2000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_994 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1984-1984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1908 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="4260-4260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs"];
m13_3154 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7210-7210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_3155 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7212-7216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_3156 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ'')\r\n            })", span="7218-7222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_3157 [label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7224-7227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_3158 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7210-7210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_1933 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonSerializerTest.cs"];
m13_1621 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="3598-3598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m13_1622 [label="_innerDictionary.Add(key, value)", span="3600-3600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m13_1623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="3598-3598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m13_356 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m13_368 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m13_369 [label="return _name + '' '' + _number;", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m13_370 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m13_1661 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs"];
m13_1457 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1458 [label="Foo f = new Foo()", span="3065-3065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1459 [label="f.Bars.Add(new Bar { Id = 0 })", span="3066-3066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1460 [label="f.Bars.Add(new Bar { Id = 1 })", span="3067-3067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1461 [label="f.Bars.Add(new Bar { Id = 2 })", span="3068-3068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1462 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3070-3070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1463 [label="Assert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3071-3077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1464 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3079-3079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1465 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3080-3080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1466 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3081-3081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1467 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3082-3082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1468 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3083-3083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1469 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1717 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3731-3731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1718 [label="info.AddValue(''stringValue'', _stringValue)", span="3733-3733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1719 [label="info.AddValue(''intValue'', _intValue)", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1720 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="3735-3735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1721 [label="info.AddValue(''personValue'', _personValue)", span="3736-3736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1722 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="3737-3737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1723 [label="info.AddValue(''nullableInt'', null)", span="3738-3738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1724 [label="info.AddValue(''booleanValue'', _booleanValue)", span="3740-3740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1725 [label="info.AddValue(''byteValue'', _byteValue)", span="3741-3741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1726 [label="info.AddValue(''charValue'', _charValue)", span="3742-3742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1727 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="3743-3743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1728 [label="info.AddValue(''decimalValue'', _decimalValue)", span="3744-3744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1729 [label="info.AddValue(''shortValue'', _shortValue)", span="3745-3745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1730 [label="info.AddValue(''longValue'', _longValue)", span="3746-3746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1731 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="3747-3747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1732 [label="info.AddValue(''floatValue'', _floatValue)", span="3748-3748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1733 [label="info.AddValue(''ushortValue'', _ushortValue)", span="3749-3749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1734 [label="info.AddValue(''uintValue'', _uintValue)", span="3750-3750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1735 [label="info.AddValue(''ulongValue'', _ulongValue)", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1736 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3731-3731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5690-5690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m13_2475 [label="Exceptions = new List<Exception>()", span="5692-5692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m13_2476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5690-5690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m13_957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1919-1919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_958 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="1921-1921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_959 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="1922-1922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_961 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="1925-1925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_960 [label="string json = JsonConvert.SerializeObject(typeClass)", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_962 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1927-1927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_963 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="1928-1928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_964 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="1930-1930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_965 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="1931-1931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_967 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="1934-1934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_966 [label="json = JsonConvert.SerializeObject(typeClass)", span="1933-1933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_968 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1936-1936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_969 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="1937-1937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_970 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1919-1919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_2861 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerTest.cs"];
m13_3381 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="7770-7770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3382 [label="throw new InvalidCastException();", span="7772-7772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="7770-7770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3164 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7251-7251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3165 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7253-7257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3166 [label="StringWriter sw = new StringWriter()", span="7259-7259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3169 [label="serializer.Serialize(jsonWriter, dates)", span="7268-7268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3167 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7260-7260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3173 [label="string json = sw.ToString()", span="7274-7274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3168 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ''),\r\n                Formatting = Formatting.Indented\r\n            })", span="7262-7267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3170 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="7270-7270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3171 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7271-7271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3172 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7272-7272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3174 [label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7276-7279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3175 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7251-7251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_1326 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2803-2803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m13_1327 [label="string json = @''[]''", span="2805-2805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m13_1328 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n                () => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); })", span="2807-2811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m13_1329 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2803-2803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m13_633 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs"];
m13_117 [label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36", cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonSerializerTest.cs"];
m13_2400 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5456-5456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2401 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5458-5458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2402 [label="c1.Categories.Add(''one'', 1)", span="5459-5459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2403 [label="c1.Categories.Add(''two'', 2)", span="5460-5460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2404 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5462-5462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2407 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5472-5472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2408 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5473-5473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2405 [label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5463-5469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2406 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5471-5471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2409 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="5474-5474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2410 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="5475-5475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5456-5456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_125 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonSerializerTest.cs"];
m13_361 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs"];
m13_1813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4008-4008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1814 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4010-4020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1815 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4022-4022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1816 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4023-4023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1817 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4024-4024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1818 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4025-4025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1819 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4026-4026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1820 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4027-4027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1821 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4028-4028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1822 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4029-4029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1823 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4031-4051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1824 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4053-4053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1825 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4054-4054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1826 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1827 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4056-4056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1828 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4057-4057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1829 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4058-4058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1830 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4059-4059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1831 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4060-4060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1832 [label="Assert.AreEqual(4, myB.BB_field1)", span="4062-4062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1833 [label="Assert.AreEqual(4, myB.BB_field2)", span="4063-4063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1834 [label="Assert.AreEqual(3, myB.BB_property1)", span="4064-4064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1835 [label="Assert.AreEqual(3, myB.BB_property2)", span="4065-4065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1836 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4066-4066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1837 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4067-4067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1838 [label="Assert.AreEqual(0, myB.BB_property5)", span="4068-4068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1839 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4069-4069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1840 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4070-4070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1841 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4071-4071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1842 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4008-4008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2177 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="4803-4803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs"];
m13_2178 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="4803-4803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs"];
m13_257 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="528-528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_258 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="530-530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_259 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_260 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_261 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="528-528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_274 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs"];
m13_2813 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs"];
m13_3369 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="7750-7750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3370 [label="return Value;", span="7752-7752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="7750-7750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1078 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2211-2211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1079 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="2213-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1080 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="2220-2220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1081 [label="Assert.IsNotNull(o)", span="2221-2221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1082 [label="Assert.AreEqual(''firstName'', o.firstName)", span="2223-2223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1083 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="2224-2224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1084 [label="Assert.AreEqual(''LastName'', o.LastName)", span="2225-2225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1085 [label="Assert.AreEqual(''lastName'', o.lastName)", span="2226-2226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1086 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2211-2211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_882 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs"];
m13_714 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="1484-1484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_715 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="1486-1486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_716 [label="JsonSerializer s = new JsonSerializer()", span="1488-1488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_718 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_717 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1489-1489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_719 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_720 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_721 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="1484-1484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1128 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2332-2332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1129 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2334-2334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1130 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="2335-2335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1131 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="2336-2336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1132 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="2337-2337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1133 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="2338-2338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1134 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2340-2340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1136 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="2351-2351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1135 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="2342-2349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1137 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="2353-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1138 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2332-2332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1745 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs"];
m13_832 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m13_360 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonSerializerTest.cs"];
m13_634 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m13_28 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonSerializerTest.cs"];
m13_659 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="1392-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_660 [label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="1394-1402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_661 [label="string json = JsonConvert.SerializeObject(anonymous)", span="1404-1404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_663 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_662 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_664 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="1408-1408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_665 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="1409-1409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_666 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="1410-1410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_667 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_668 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="1412-1412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_669 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_670 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_671 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="1392-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1988 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4390-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_1989 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_1990 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="4394-4394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_1991 [label="Assert.AreEqual(''First'', cc.First)", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_1992 [label="Assert.AreEqual(2, cc.Second)", span="4396-4396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_1993 [label="Assert.AreEqual(null, cc.Ignored)", span="4397-4397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_1994 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4390-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_3044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6888-6888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3045 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="6890-6890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3046 [label="Assert.AreEqual(1, uris.Count)", span="6891-6891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3047 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="6892-6892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3048 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="6894-6894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3049 [label="Assert.IsNotNull(uri)", span="6895-6895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3050 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="6897-6897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3051 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="6898-6898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3052 [label="Assert.AreEqual(i1, i2)", span="6899-6899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3053 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="6901-6901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3054 [label="Assert.IsNotNull(uri)", span="6902-6902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3055 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="6903-6903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3056 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6888-6888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3282 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonSerializerTest.cs"];
m13_2477 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5698-5698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2478 [label="ClassWithException classWithException = new ClassWithException()", span="5700-5700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2479 [label="throw new Exception(''Test Exception'');", span="5703-5703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2481 [label="classWithException.Exceptions.Add(ex)", span="5707-5707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2482 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="5709-5709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2485 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="5713-5713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2480 [label=Exception, span="5705-5705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2483 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5710-5710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2484 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5711-5711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2486 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5715-5715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2487 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5716-5716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2488 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5698-5698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2468 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5668-5668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_2469 [label="DerivedType d = new DerivedType()", span="5670-5670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_2470 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="5671-5671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_2471 [label="Assert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="5673-5682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_2472 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5668-5668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_3184 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonSerializerTest.cs"];
m13_2995 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs"];
m13_1909 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="4283-4283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs"];
m13_2061 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="4534-4534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs"];
m13_1886 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1887 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="4211-4211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1888 [label="XmlDocument document = new XmlDocument()", span="4212-4212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1890 [label="testObject.Document = document", span="4214-4214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1891 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4216-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1895 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="4225-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1889 [label="document.LoadXml(''<root>hehe, root</root>'')", span="4213-4213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1892 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="4217-4221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1893 [label="Assert.AreEqual(expected, json)", span="4222-4222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1894 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="4224-4224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1896 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_1640 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="3623-3623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_1641 [label="return _innerDictionary.GetEnumerator();", span="3625-3625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_1642 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="3623-3623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2971 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6677-6677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2972 [label="var json = Serialize(obj)", span="6680-6680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2973 [label="return Deserialize<T>(json);", span="6681-6681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2974 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6677-6677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4783-4783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2167 [label="VectorParent obj = new VectorParent()", span="4785-4785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2168 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="4786-4786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2169 [label="string str = JsonConvert.SerializeObject(obj)", span="4788-4788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2170 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="4790-4790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2171 [label="Assert.AreEqual(1, obj.Position.X)", span="4792-4792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2172 [label="Assert.AreEqual(2, obj.Position.Y)", span="4793-4793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2173 [label="Assert.AreEqual(3, obj.Position.Z)", span="4794-4794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2174 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4783-4783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_1192 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2505-2505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1193 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="2507-2507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1194 [label="c.NotIncluded = ''Hi''", span="2508-2508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1195 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2509-2509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1196 [label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="2511-2516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1197 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="2518-2518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1198 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="2519-2519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1199 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2505-2505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_2724 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6176-6176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2725 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'',\r\n                () => { JsonConvert.DeserializeObject<double>(''''); })", span="6178-6180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6176-6176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m13_782 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs"];
m13_2776 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs"];
m13_2442 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5573-5573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2443 [label="_privateString = privateString", span="5575-5575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2444 [label="_readonlyString = readonlyString", span="5576-5576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2445 [label="_internalString = internalString", span="5577-5577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2446 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5573-5573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2350 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5280-5280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs"];
m13_3138 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7158-7158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3139 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7160-7160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3140 [label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="7162-7162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3141 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7164-7164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3142 [label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="7166-7166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3143 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3144 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7169-7169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3145 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7158-7158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_760 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs"];
m13_376 [label="Entry System.Convert.ToInt32(string)", span="0-0", cluster="System.Convert.ToInt32(string)", file="JsonSerializerTest.cs"];
m13_2290 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", span="5066-5066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs"];
m13_816 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="1672-1672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_817 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="1674-1674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_818 [label="string json = JsonConvert.SerializeObject(c1)", span="1676-1676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_819 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="1677-1677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_820 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="1679-1679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_821 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="1681-1681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_822 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="1672-1672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_265 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonSerializerTest.cs"];
m13_465 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs"];
m13_1140 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2361-2361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1141 [label="string json = ''{}''", span="2363-2363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1142 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="2365-2365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1143 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1144 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="2367-2367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1145 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="2368-2368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1146 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1147 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2361-2361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_2777 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m13_2798 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs"];
m13_2975 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6684-6684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2977 [label="var stringWriter = new StringWriter()", span="6687-6687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2980 [label="serializer.Serialize(stringWriter, obj)", span="6693-6693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2978 [label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6688-6688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2981 [label="return stringWriter.ToString();", span="6695-6695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2979 [label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="6689-6692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2982 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6684-6684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2229 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="4931-4931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs"];
m13_2665 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6049-6049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2666 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="6051-6059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2667 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6061-6061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2668 [label="Assert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6063-6073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2669 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6075-6075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2670 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6077-6077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2671 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6078-6078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2672 [label="byte[] bytes = (byte[])actual.Payload", span="6079-6079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2673 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6080-6080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_2674 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6049-6049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_20 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_21 [label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="166-171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_22 [label="var json = JsonConvert.SerializeObject(input)", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_24 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="176-176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_25 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="177-177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_26 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="178-178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_23 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="174-174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_27 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_3011 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6811-6811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3012 [label="string json = ''{one:1}{}''", span="6813-6813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3013 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="6815-6815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3015 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6817-6817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3020 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'',\r\n                () => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); })", span="6824-6826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3014 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="6816-6816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3018 [label="settings.CheckAdditionalContent = true", span="6822-6822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3019 [label="s = JsonSerializer.Create(settings)", span="6823-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3016 [label="Assert.IsNotNull(o)", span="6819-6819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3017 [label="Assert.AreEqual(1, o[''one''])", span="6820-6820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3021 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6811-6811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1803 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3975-3975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1804 [label="AA myA = new AA(2)", span="3977-3977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1805 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="3978-3978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1806 [label="Assert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="3979-3985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1807 [label="BB myB = new BB(3, 4)", span="3987-3987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1808 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="3988-3988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1809 [label="Assert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="3989-4003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_1810 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3975-3975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_3267 [label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="45-45", cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs"];
m13_3363 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="7740-7740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3364 [label="throw new InvalidCastException();", span="7742-7742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3365 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="7740-7740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_527 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonSerializerTest.cs"];
m13_308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonSerializerTest.cs"];
m13_2412 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_2219 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="4919-4919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m13_2220 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="4921-4927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m13_2221 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="4919-4919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m13_2736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m13_2737 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'',\r\n                () => { JsonConvert.DeserializeObject<int>(''''); })", span="6194-6196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m13_2738 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m13_1033 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2075-2075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m13_1034 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2077-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m13_1035 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2114-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m13_1036 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2075-2075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m13_2413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5498-5498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m13_2414 [label="throw new NotImplementedException();", span="5500-5500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m13_2415 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5498-5498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m13_1523 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3263-3263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1524 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="3265-3265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1525 [label="Assert.IsNotNull(d)", span="3267-3267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1526 [label="Assert.IsNotNull(d.Dictionary)", span="3268-3268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1527 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="3269-3269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1528 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="3270-3270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1529 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="3271-3271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1530 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="3272-3272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1531 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="3273-3273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1532 [label="Assert.AreEqual(1, d.List.Count)", span="3274-3274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1533 [label="Assert.AreEqual(''existing'', d.List[0])", span="3275-3275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1534 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3263-3263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1750 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs"];
m13_491 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs"];
m13_1354 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2855-2855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m13_1355 [label="string json = @''[]''", span="2857-2857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m13_1356 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n                @''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); })", span="2859-2861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m13_1357 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2855-2855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m13_2230 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs"];
m13_2857 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m13_17 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="157-157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs"];
m13_18 [label="Message = message", span="159-159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs"];
m13_19 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="157-157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs"];
m13_467 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="977-977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_468 [label="Product product = new Product()", span="979-979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_469 [label="product.Name = ''Apple''", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_470 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_471 [label="product.Price = 3.99M", span="983-983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_472 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="984-984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_473 [label="string output = JsonConvert.SerializeObject(product)", span="986-986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_474 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_475 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_476 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="1001-1001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_477 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1002-1002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_478 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_479 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_480 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_481 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="977-977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_3336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="7694-7694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3337 [label="conversionType == typeof(object)", span="7696-7696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3339 [label="conversionType == typeof(int)", span="7700-7700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3341 [label="conversionType == typeof(long)", span="7704-7704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3343 [label="conversionType == typeof(string)", span="7708-7708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3338 [label="return this;", span="7698-7698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3340 [label="return (int)Value;", span="7702-7702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3342 [label="return (long)Value;", span="7706-7706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3344 [label="return Value.ToString(CultureInfo.InvariantCulture);", span="7710-7710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3345 [label="throw new InvalidCastException();", span="7712-7712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3346 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="7694-7694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2110 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4679-4679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2111 [label="dynamic expando = new ExpandoObject()", span="4681-4681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2112 [label="expando.Int = 1", span="4682-4682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2113 [label="expando.Decimal = 99.9d", span="4683-4683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2114 [label="expando.Complex = new ExpandoObject()", span="4684-4684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2115 [label="expando.Complex.String = ''I am a string''", span="4685-4685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2116 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="4686-4686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2117 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="4688-4688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2121 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="4701-4701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2123 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="4704-4704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2127 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="4710-4710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2129 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="4713-4713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2118 [label="Assert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="4689-4696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2119 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="4698-4698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2120 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="4700-4700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2122 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="4703-4703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2124 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="4706-4706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2125 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="4707-4707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2126 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="4709-4709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2128 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="4712-4712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2130 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4679-4679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_3351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="7720-7720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3352 [label="throw new InvalidCastException();", span="7722-7722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3353 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="7720-7720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_929 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs"];
m13_1397 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2923-2923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_1398 [label="string json = @''{''''Name'''':''''''''}''", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_1399 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="2927-2927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_1400 [label="Assert.AreEqual('''', p.Name)", span="2928-2928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_1401 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2923-2923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_3010 [label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs"];
m13_3399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="7685-7685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonSerializerTest.cs"];
m13_3032 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6868-6868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m13_3033 [label="ExceptionAssert.Throws<JsonException>(\r\n                ''Additional text found in JSON string after finishing deserializing object.'',\r\n                () =>\r\n                {\r\n                    string json = ''[{},1]'';\r\n\r\n                    JsonSerializer serializer = new JsonSerializer();\r\n                    serializer.CheckAdditionalContent = true;\r\n\r\n                    var reader = new JsonTextReader(new StringReader(json));\r\n                    reader.Read();\r\n                    reader.Read();\r\n\r\n                    serializer.Deserialize(reader, typeof(MyType));\r\n                })", span="6870-6884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m13_3034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6868-6868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m13_1605 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs"];
m13_2970 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs"];
m13_1445 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3036-3036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1446 [label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="3038-3044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1447 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3046-3046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1451 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3056-3056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1448 [label="Console.WriteLine(json)", span="3047-3047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1449 [label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3048-3053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1450 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1452 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3057-3057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1453 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3058-3058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1454 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3059-3059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1455 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3036-3036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_2643 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6005-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m13_2644 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'',\r\n                () =>\r\n                {\r\n                    string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                    JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n                })", span="6007-6017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m13_2645 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6005-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m13_833 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="774-774", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m13_1702 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs"];
m13_2218 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="4851-4851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs"];
m13_3321 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="83-83", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonSerializerTest.cs"];
m13_1631 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs"];
m13_1714 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs"];
m13_3009 [label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs"];
m13_613 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs"];
m13_615 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m13_616 [label="string json = @''[''''vvv\jvvv'''']''", span="1312-1312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m13_617 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'',\r\n                () => { JsonConvert.DeserializeObject<List<string>>(json); })", span="1314-1316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m13_618 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m13_1704 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs"];
m13_844 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs"];
m13_2699 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonSerializerTest.cs"];
m13_1109 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2292-2292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1110 [label="SubKlass i = new SubKlass(''my subprop'')", span="2294-2294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1111 [label="i.SuperProp = ''overrided superprop''", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1112 [label="string json = JsonConvert.SerializeObject(i)", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1113 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2298-2298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1114 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="2300-2300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1115 [label="string newJson = JsonConvert.SerializeObject(ii)", span="2302-2302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1116 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2303-2303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1117 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2292-2292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2951 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6634-6634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_2952 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="6636-6640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_2953 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="6642-6645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_2954 [label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="6647-6650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_2955 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6652-6652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_2956 [label="Assert.AreEqual(2, dic2.Count)", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_2957 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6655-6655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_2958 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6656-6656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_2959 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6634-6634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_302 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="616-616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_303 [label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="618-618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_304 [label="var json = JsonConvert.SerializeObject(original)", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_305 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="620-620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_306 [label="Assert.AreEqual(expectedJson, json)", span="621-621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_307 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="616-616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_642 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs"];
m13_2490 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5721-5721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2491 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="5723-5723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2492 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5724-5724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2495 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5735-5735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2496 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5736-5736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2497 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5737-5737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2498 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5738-5738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2499 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2493 [label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="5726-5732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2494 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2500 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5721-5721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_3292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="7584-7584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3293 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="7586-7601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3294 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="7603-7608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3295 [label="Assert.AreEqual(2, people.Count)", span="7610-7610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3296 [label="PersonReference john = people[0]", span="7612-7612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3297 [label="PersonReference jane = people[1]", span="7613-7613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3298 [label="Assert.AreEqual(john, jane.Spouse)", span="7615-7615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3299 [label="Assert.AreEqual(jane, john.Spouse)", span="7616-7616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3300 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="7584-7584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_1333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2816-2816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m13_1334 [label="string json = @''[]''", span="2818-2818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m13_1335 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n                () => { JsonConvert.DeserializeObject<Exception>(json); })", span="2820-2824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m13_1336 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2816-2816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m13_540 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs"];
m13_3108 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7048-7048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3109 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7050-7053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3110 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7055-7055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3111 [label="Assert.AreEqual(1, l[0])", span="7057-7057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3112 [label="Assert.AreEqual(null, l[1])", span="7058-7058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3113 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7048-7048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_2254 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="5015-5015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m13_2255 [label="Constructor = ''NonPublic''", span="5017-5017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m13_2256 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="5015-5015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m13_1375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1376 [label="string json = @''{}''", span="2887-2887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1377 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2891-2891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1378 [label="Assert.Fail()", span="2892-2892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1379 [label=JsonSerializationException, span="2894-2894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1380 [label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\nPath ''''))", span="2896-2898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1381 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_126 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_127 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="330-330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_128 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="332-332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_129 [label="settings.Binder = customBinder", span="333-333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_130 [label="Assert.AreEqual(customBinder, settings.Binder)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_131 [label="settings.CheckAdditionalContent = true", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_132 [label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="337-337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_133 [label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="339-339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_134 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="340-340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_135 [label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_136 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="344-344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_138 [label="settings.ContractResolver = resolver", span="348-348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_139 [label="Assert.AreEqual(resolver, settings.ContractResolver)", span="349-349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_140 [label="settings.Converters.Add(new StringEnumConverter())", span="351-351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_141 [label="Assert.AreEqual(1, settings.Converters.Count)", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_142 [label="settings.Culture = new CultureInfo(''en-nz'')", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_143 [label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="355-355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_144 [label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="357-357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_145 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_146 [label="settings.DateFormatString = ''yyyy''", span="360-360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_147 [label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="361-361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_148 [label="settings.DateParseHandling = DateParseHandling.None", span="363-363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_149 [label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="364-364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_150 [label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="366-366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_151 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="367-367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_152 [label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="369-369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_153 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_154 [label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="372-372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_155 [label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="373-373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_156 [label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_157 [label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_158 [label="settings.Formatting = Formatting.Indented", span="378-378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_159 [label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_160 [label="settings.MaxDepth = 9001", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_161 [label="Assert.AreEqual(9001, settings.MaxDepth)", span="382-382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_162 [label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="384-384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_163 [label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_164 [label="settings.NullValueHandling = NullValueHandling.Ignore", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_165 [label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_166 [label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="390-390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_167 [label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_168 [label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_169 [label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_170 [label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_171 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_173 [label="settings.ReferenceResolver = referenceResolver", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_174 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="401-401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_175 [label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="403-403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_176 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="404-404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_178 [label="settings.TraceWriter = traceWriter", span="407-407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_179 [label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_180 [label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_181 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="412-412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_182 [label="settings.TypeNameHandling = TypeNameHandling.All", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_183 [label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_137 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_172 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="399-399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_177 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="406-406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_184 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m13_365 [label="_name = name", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m13_366 [label="_number = number", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m13_367 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m13_2187 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4831-4831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2188 [label="var derived = new Derived(''meh'', ''woo'')", span="4833-4833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2189 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="4835-4839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2190 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="4841-4841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2191 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="4843-4843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2192 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="4845-4845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2193 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="4846-4846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2194 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4831-4831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_1361 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2865-2865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m13_1362 [label="string json = @''new Constructor(123)''", span="2867-2867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m13_1363 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'',\r\n                () => { JsonConvert.DeserializeObject<Person>(json); })", span="2869-2871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m13_1364 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2865-2865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m13_1715 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs"];
m13_29 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_30 [label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="184-189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_31 [label="var json = JsonConvert.SerializeObject(input)", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_33 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="194-194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_34 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="195-195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_35 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_32 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_36 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_901 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs"];
m13_2162 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="4771-4771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m13_2163 [label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="4773-4773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m13_2164 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="4771-4771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m13_355 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs"];
m13_3357 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="7730-7730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3358 [label="throw new InvalidCastException();", span="7732-7732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="7730-7730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3082 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="6969-6969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m13_3083 [label="m_Item1 = item1", span="6971-6971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m13_3084 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="6969-6969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m13_2441 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="5493-5493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs"];
m13_2396 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5448-5448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m13_2397 [label="Title = title", span="5450-5450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m13_2398 [label="Categories = new Dictionary<string, int>()", span="5451-5451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m13_2399 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5448-5448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m13_3153 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="7172-7172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs"];
m13_2154 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4753-4753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2155 [label="string json = ''{'Value':123456789876543.21}''", span="4755-4755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2156 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4756-4756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2157 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="4757-4757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2159 [label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="4761-4761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2158 [label="JsonSerializer serializer = new JsonSerializer()", span="4759-4759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2160 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="4762-4762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2161 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4753-4753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2447 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5580-5580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m13_2448 [label="_readonlyString = ''default!''", span="5582-5582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m13_2449 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5580-5580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m13_359 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs"];
m13_1708 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs"];
m13_590 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs"];
m13_790 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="1631-1631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_791 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="1633-1633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_792 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="1635-1635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_795 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_793 [label="Assert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="1636-1638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_794 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="1640-1640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="1631-1631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_273 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonSerializerTest.cs"];
m13_3114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7063-7063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3115 [label="var tuple = new MyTuple<int>(500)", span="7065-7065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3116 [label="var json = JsonConvert.SerializeObject(tuple)", span="7066-7066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3117 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7067-7067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3119 [label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="7071-7071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3118 [label="MyTuple<int> obj = null", span="7069-7069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3120 [label="doStuff()", span="7074-7074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3121 [label="Assert.AreEqual(500, obj.Item1)", span="7075-7075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7063-7063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_1682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3708-3708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1683 [label="_stringValue = info.GetString(''stringValue'')", span="3710-3710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1684 [label="_intValue = info.GetInt32(''intValue'')", span="3711-3711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1685 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="3712-3712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1686 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="3713-3713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1687 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="3714-3714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1688 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="3715-3715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1689 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="3717-3717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1690 [label="_byteValue = info.GetByte(''byteValue'')", span="3718-3718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1691 [label="_charValue = info.GetChar(''charValue'')", span="3719-3719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1692 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="3720-3720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1693 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="3721-3721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1694 [label="_shortValue = info.GetInt16(''shortValue'')", span="3722-3722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1695 [label="_longValue = info.GetInt64(''longValue'')", span="3723-3723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1696 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="3724-3724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1697 [label="_floatValue = info.GetSingle(''floatValue'')", span="3725-3725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1698 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="3726-3726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1699 [label="_uintValue = info.GetUInt32(''uintValue'')", span="3727-3727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1700 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="3728-3728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1701 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3708-3708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_248 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="513-513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_249 [label="Ratio ratio = new Ratio(2, 1)", span="515-515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_250 [label="string json = JsonConvert.SerializeObject(ratio)", span="516-516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_253 [label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_251 [label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="518-518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_252 [label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="520-520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_254 [label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="523-523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_255 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="513-513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_2676 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6084-6084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_2677 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6086-6086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_2678 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6087-6087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_2679 [label="Assert.AreEqual('''', dict[''k1''])", span="6089-6089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_2680 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="6090-6090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_2681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6084-6084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_2425 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5528-5528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m13_2426 [label="throw new NotImplementedException();", span="5530-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m13_2427 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5528-5528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m13_2960 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m13_2961 [label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="6662-6662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m13_2962 [label="Assert.AreEqual('''', s)", span="6663-6663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m13_2963 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m13_759 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs"];
m13_3072 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="6938-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_3073 [label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="6940-6943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_3074 [label="Assert.AreEqual(123, result.Key)", span="6945-6945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_3075 [label="Assert.AreEqual(''test value'', result.Value)", span="6946-6946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_3076 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="6938-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_1609 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="3545-3545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs"];
m13_1610 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="3545-3545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs"];
m13_2513 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs"];
m13_484 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1027-1027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_485 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1029-1029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_486 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_487 [label="Assert.AreEqual(''Orange'', p.Name)", span="1033-1033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_488 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="1034-1034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_489 [label="Assert.AreEqual(3.99m, p.Price)", span="1035-1035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_490 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1027-1027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_1048 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2129-2129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m13_1049 [label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="2131-2137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m13_1050 [label="return person;", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m13_1051 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2129-2129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m13_289 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="402-402", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs"];
m13_546 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs"];
m13_3290 [label="Entry Size.cstr", span="", cluster="Size.cstr", file="JsonSerializerTest.cs"];
m13_1102 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2276-2276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1103 [label="string json = ''{ 'testProperty1': 'value' }''", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1104 [label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="2281-2281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1105 [label="Assert.Fail()", span="2283-2283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1106 [label=JsonSerializationException, span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1107 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="2287-2287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1108 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2276-2276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_2561 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="798-798", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs"];
m13_46 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="141-141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonSerializerTest.cs"];
m13_1005 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2025-2025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1006 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2029-2031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1007 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2033-2033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1008 [label="Assert.Fail()", span="2034-2034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1009 [label=JsonSerializationException, span="2036-2036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1010 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="2038-2038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1011 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2025-2025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_2243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="4991-4991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m13_2244 [label="Constructor = ''NonPublic''", span="4993-4993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m13_2245 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="4991-4991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m13_997 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2005-2005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_998 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'',\r\n                () =>\r\n                {\r\n                    RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                    {\r\n                        FirstName = null,\r\n                        BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                        LastName = null,\r\n                        MiddleName = null\r\n                    };\r\n\r\n                    string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n                    Console.WriteLine(json);\r\n                })", span="2007-2021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2005-2005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_3065 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="6918-6918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_3066 [label="return true;", span="6920-6920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_3067 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="6918-6918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_286 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs"];
m13_2198 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4867-4867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2199 [label="info.AddValue(''Name'', _name)", span="4869-4869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2200 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4867-4867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_3387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="7780-7780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3388 [label="throw new InvalidCastException();", span="7782-7782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3389 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="7780-7780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1435 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_1906 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="4248-4248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs"];
m13_364 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs"];
m13_3123 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="JsonSerializerTest.cs"];
m13_3347 [label="Entry System.InvalidCastException.InvalidCastException()", span="0-0", cluster="System.InvalidCastException.InvalidCastException()", file="JsonSerializerTest.cs"];
m13_2790 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6292-6292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_2791 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6294-6294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_2792 [label="person.Name = ''John Doe''", span="6295-6295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_2793 [label="person.Age = 25", span="6296-6296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_2794 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6298-6298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_2796 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6301-6301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_2795 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6299-6299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_2797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6292-6292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_1222 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2580-2580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1223 [label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="2582-2591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1224 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="2593-2593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1225 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2595-2595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1226 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="2596-2596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1227 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2597-2597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1228 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1229 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2599-2599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1230 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1231 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2580-2580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_457 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_458 [label="Store store = new Store()", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_459 [label="string jsonText = JsonConvert.SerializeObject(store)", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_461 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_462 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_460 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_463 [label="Console.WriteLine(jsonText)", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_1884 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonSerializerTest.cs"];
m13_3202 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="7341-7341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m13_3203 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="7341-7341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m13_2989 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6713-6713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_2990 [label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="6715-6725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_2991 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6727-6727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_2992 [label="Assert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="6738-6752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_2993 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6713-6713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_2275 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5058-5058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2276 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5060-5060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2277 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5061-5061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2278 [label="Assert.AreEqual(''value!'', c.Value)", span="5062-5062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2279 [label="Assert.AreEqual(1, c.Age)", span="5063-5063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2280 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5058-5058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_723 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1499-1499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_724 [label="ClassWithArray wibble = new ClassWithArray()", span="1501-1501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_725 [label="wibble.Foo = ''hello''", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_726 [label="wibble.Bar.Add(1)", span="1503-1503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_727 [label="wibble.Bar.Add(2)", span="1504-1504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_728 [label="wibble.Bar.Add(3)", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_729 [label="string json = JsonConvert.SerializeObject(wibble)", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_730 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1508-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_731 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_732 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_733 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="1512-1512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_734 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="1513-1513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_735 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="1514-1514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_736 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="1515-1515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_737 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="1516-1516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_738 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1499-1499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1771 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3891-3891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1772 [label="Person person = new Person()", span="3893-3893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1773 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3894-3894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1774 [label="person.LastModified = person.BirthDate", span="3895-3895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1775 [label="person.Department = ''Department!''", span="3896-3896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1776 [label="person.Name = ''Name!''", span="3897-3897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1780 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3907-3907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1777 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3899-3899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1778 [label="string dateTimeOffsetText", span="3900-3900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1786 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3941-3941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1779 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="3902-3902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1782 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3913-3936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1781 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="3909-3912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1783 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3938-3938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1784 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="3939-3939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1785 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3940-3940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1787 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3942-3942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1788 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="3943-3943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1789 [label="Assert.AreEqual(null, o2._nullableInt)", span="3944-3944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_1790 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3891-3891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_3148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7183-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3149 [label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="7185-7192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3150 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="7194-7197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3151 [label="Assert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="7199-7206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3152 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7183-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_873 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="1770-1770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_874 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1772-1772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_875 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_879 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1780-1780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_880 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1781-1781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_876 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_877 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1776-1776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_878 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="1778-1778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_881 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="1770-1770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_2657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6035-6035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_2658 [label="string json = @''{''''Id'''':null}''", span="6037-6037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_2659 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6038-6038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_2660 [label="Assert.AreEqual(null, c.Id)", span="6040-6040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_2661 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6042-6042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_2662 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6043-6043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_2663 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6045-6045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_2664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6035-6035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_1118 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs"];
m13_2525 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs"];
m13_1262 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="2684-2684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1263 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="2686-2698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1264 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="2700-2700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1265 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="2702-2702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1266 [label="Assert.AreEqual(2, content.Children.Count)", span="2703-2703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1267 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="2704-2704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1268 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="2705-2705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1269 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="2684-2684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_449 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs"];
m13_441 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs"];
m13_3216 [label="Entry lambda expression", span="7368-7368", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_451 [label="Entry lambda expression", span="942-942", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_454 [label="Entry lambda expression", span="945-945", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_452 [label="p.Name", span="942-942", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_453 [label="Exit lambda expression", span="942-942", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_455 [label="p.Name", span="945-945", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_456 [label="Exit lambda expression", span="945-945", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_587 [label="Entry lambda expression", span="1270-1270", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_588 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="1270-1270", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_589 [label="Exit lambda expression", span="1270-1270", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_620 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="1316-1316", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_619 [label="Entry lambda expression", span="1316-1316", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_621 [label="Exit lambda expression", span="1316-1316", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_905 [label="Entry lambda expression", span="1825-1829", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_906 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="1827-1827", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_907 [label="JsonConvert.SerializeObject(c)", span="1828-1828", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_908 [label="Exit lambda expression", span="1825-1829", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1000 [label="Entry lambda expression", span="2009-2021", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1001 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                    {\r\n                        FirstName = null,\r\n                        BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                        LastName = null,\r\n                        MiddleName = null\r\n                    }", span="2011-2017", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1002 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2019-2019", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1003 [label="Console.WriteLine(json)", span="2020-2020", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1004 [label="Exit lambda expression", span="2009-2021", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1046 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="2126-2126", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1045 [label="Entry lambda expression", span="2126-2126", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1047 [label="Exit lambda expression", span="2126-2126", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1152 [label="Entry lambda expression", span="2379-2385", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1153 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2381-2381", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1154 [label="o.ReferenceLoopHandlingErrorProperty = o", span="2382-2382", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1155 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="2384-2384", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1156 [label="Exit lambda expression", span="2379-2385", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1297 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="2756-2756", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1296 [label="Entry lambda expression", span="2756-2756", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1298 [label="Exit lambda expression", span="2756-2756", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1324 [label="JsonConvert.DeserializeObject<Person>(json)", span="2799-2799", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1323 [label="Entry lambda expression", span="2799-2799", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1325 [label="Exit lambda expression", span="2799-2799", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1331 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2811-2811", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1330 [label="Entry lambda expression", span="2811-2811", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1332 [label="Exit lambda expression", span="2811-2811", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1338 [label="JsonConvert.DeserializeObject<Exception>(json)", span="2824-2824", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1337 [label="Entry lambda expression", span="2824-2824", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1339 [label="Exit lambda expression", span="2824-2824", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1345 [label="JsonConvert.DeserializeObject<double>(json)", span="2837-2837", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1344 [label="Entry lambda expression", span="2837-2837", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1346 [label="Exit lambda expression", span="2837-2837", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1352 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="2850-2850", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1351 [label="Entry lambda expression", span="2850-2850", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1353 [label="Exit lambda expression", span="2850-2850", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1359 [label="JsonConvert.DeserializeObject<JObject>(json)", span="2861-2861", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1358 [label="Entry lambda expression", span="2861-2861", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1360 [label="Exit lambda expression", span="2861-2861", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1366 [label="JsonConvert.DeserializeObject<Person>(json)", span="2871-2871", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1365 [label="Entry lambda expression", span="2871-2871", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1367 [label="Exit lambda expression", span="2871-2871", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1373 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2881-2881", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1372 [label="Entry lambda expression", span="2881-2881", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1374 [label="Exit lambda expression", span="2881-2881", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1387 [label="JsonConvert.PopulateObject(json, new Person())", span="2909-2909", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1386 [label="Entry lambda expression", span="2909-2909", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1388 [label="Exit lambda expression", span="2909-2909", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1395 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="2919-2919", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1394 [label="Entry lambda expression", span="2919-2919", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1396 [label="Exit lambda expression", span="2919-2919", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1405 [label="Entry lambda expression", span="2936-2947", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1406 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                    {\r\n                        ContractResolver = new DefaultContractResolver\r\n                        {\r\n#if !(NETFX_CORE || PORTABLE || PORTABLE40)\r\n                            IgnoreSerializableAttribute = true\r\n#endif\r\n                        }\r\n                    })", span="2938-2946", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1407 [label="Exit lambda expression", span="2936-2947", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1412 [label="Entry lambda expression", span="2955-2966", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1413 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                    {\r\n                        ContractResolver = new DefaultContractResolver\r\n                        {\r\n#if !(NETFX_CORE || PORTABLE || PORTABLE40)\r\n                            IgnoreSerializableAttribute = true\r\n#endif\r\n                        }\r\n                    })", span="2957-2965", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1414 [label="Exit lambda expression", span="2955-2966", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1418 [label="Entry lambda expression", span="2974-2985", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1419 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                    {\r\n                        ContractResolver = new DefaultContractResolver\r\n                        {\r\n#if !(NETFX_CORE || PORTABLE || PORTABLE40)\r\n                            IgnoreSerializableAttribute = true\r\n#endif\r\n                        }\r\n                    })", span="2976-2984", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1420 [label="Exit lambda expression", span="2974-2985", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1424 [label="Entry lambda expression", span="2993-3004", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1425 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                    {\r\n                        ContractResolver = new DefaultContractResolver\r\n                        {\r\n#if !(NETFX_CORE || PORTABLE || PORTABLE40)\r\n                            IgnoreSerializableAttribute = true\r\n#endif\r\n                        }\r\n                    })", span="2995-3003", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1426 [label="Exit lambda expression", span="2993-3004", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1538 [label="Entry lambda expression", span="3312-3312", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1539 [label="x.Id == id", span="3312-3312", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1540 [label="Exit lambda expression", span="3312-3312", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1575 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    SpecialPropertyHandling = SpecialPropertyHandling.Default\r\n                })", span="3406-3410", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m13_1574 [label="Entry lambda expression", span="3406-3410", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1576 [label="Exit lambda expression", span="3406-3410", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1952 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4324-4324", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1951 [label="Entry lambda expression", span="4324-4324", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1953 [label="Exit lambda expression", span="4324-4324", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1957 [label="Entry lambda expression", span="4332-4347", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1958 [label="var reference = new Dictionary<string, object>()", span="4336-4336", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1959 [label="reference.Add(''$ref'', 1)", span="4337-4337", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1960 [label="reference.Add(''$id'', 1)", span="4338-4338", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1964 [label="child.Add(''Father'', reference)", span="4343-4343", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1961 [label="var child = new Dictionary<string, object>()", span="4340-4340", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1962 [label="child.Add(''_id'', 2)", span="4341-4341", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1963 [label="child.Add(''Name'', ''Isabell'')", span="4342-4342", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1965 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4345-4345", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1966 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4346-4346", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1967 [label="Exit lambda expression", span="4332-4347", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2064 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="4558-4558", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2063 [label="Entry lambda expression", span="4558-4558", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2065 [label="Exit lambda expression", span="4558-4558", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2307 [label="Entry lambda expression", span="5149-5149", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2308 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5149-5149", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2309 [label="Exit lambda expression", span="5149-5149", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2613 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="5937-5937", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2612 [label="Entry lambda expression", span="5937-5937", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2614 [label="Exit lambda expression", span="5937-5937", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2627 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="5978-5978", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2626 [label="Entry lambda expression", span="5978-5978", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2628 [label="Exit lambda expression", span="5978-5978", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2646 [label="Entry lambda expression", span="6009-6017", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2647 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6011-6014", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2648 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6016-6016", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2649 [label="Exit lambda expression", span="6009-6017", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2653 [label="Entry lambda expression", span="6025-6031", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2654 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6027-6028", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2655 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6030-6030", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2656 [label="Exit lambda expression", span="6025-6031", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2727 [label="Entry lambda expression", span="6180-6180", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2728 [label="JsonConvert.DeserializeObject<double>('''')", span="6180-6180", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2729 [label="Exit lambda expression", span="6180-6180", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2733 [label="Entry lambda expression", span="6188-6188", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2734 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6188-6188", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2735 [label="Exit lambda expression", span="6188-6188", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2739 [label="Entry lambda expression", span="6196-6196", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2740 [label="JsonConvert.DeserializeObject<int>('''')", span="6196-6196", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2741 [label="Exit lambda expression", span="6196-6196", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2749 [label="Entry lambda expression", span="6212-6212", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2750 [label="JsonConvert.DeserializeObject<double>(null)", span="6212-6212", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2751 [label="Exit lambda expression", span="6212-6212", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2755 [label="Entry lambda expression", span="6221-6221", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2756 [label="JsonConvert.DeserializeObject(null)", span="6221-6221", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2757 [label="Exit lambda expression", span="6221-6221", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2877 [label="errors.Add(e.ErrorContext.Error.Message)", span="6450-6450", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2878 [label="e.ErrorContext.Handled = true", span="6451-6451", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2876 [label="Entry lambda expression", span="6448-6452", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2879 [label="Exit lambda expression", span="6448-6452", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2892 [label="errors.Add(e.ErrorContext.Error.Message)", span="6475-6475", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2893 [label="e.ErrorContext.Handled = true", span="6476-6476", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2891 [label="Entry lambda expression", span="6473-6477", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2894 [label="Exit lambda expression", span="6473-6477", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2907 [label="errors.Add(e.ErrorContext.Error.Message)", span="6498-6498", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2908 [label="e.ErrorContext.Handled = true", span="6499-6499", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2906 [label="Entry lambda expression", span="6496-6500", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2909 [label="Exit lambda expression", span="6496-6500", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3023 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6826-6826", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3022 [label="Entry lambda expression", span="6826-6826", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3024 [label="Exit lambda expression", span="6826-6826", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3035 [label="Entry lambda expression", span="6872-6884", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3036 [label="string json = ''[{},1]''", span="6874-6874", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3037 [label="JsonSerializer serializer = new JsonSerializer()", span="6876-6876", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3039 [label="var reader = new JsonTextReader(new StringReader(json))", span="6879-6879", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3038 [label="serializer.CheckAdditionalContent = true", span="6877-6877", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3042 [label="serializer.Deserialize(reader, typeof(MyType))", span="6883-6883", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3040 [label="reader.Read()", span="6880-6880", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3041 [label="reader.Read()", span="6881-6881", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3043 [label="Exit lambda expression", span="6872-6884", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3125 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7071-7071", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3124 [label="Entry lambda expression", span="7071-7071", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3126 [label="Exit lambda expression", span="7071-7071", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3199 [label="Entry lambda expression", span="7335-7335", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3200 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="7335-7335", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3201 [label="Exit lambda expression", span="7335-7335", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3207 [label="Entry lambda expression", span="7352-7352", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3208 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="7352-7352", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3209 [label="Exit lambda expression", span="7352-7352", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3217 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="7368-7368", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3218 [label="Exit lambda expression", span="7368-7368", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_442 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonSerializerTest.cs"];
m13_3088 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="6997-6997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3089 [label="string json", span="6999-6999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3090 [label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="7000-7000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3091 [label="json = JsonConvert.SerializeObject(d)", span="7002-7002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3092 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7005-7005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3093 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="7008-7008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3094 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7011-7011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3095 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="6997-6997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3400 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="7810-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3401 [label="string originalUri = ''https://test.com?m=a%2bb''", span="7812-7812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3402 [label="Uri uriWithPlus = new Uri(originalUri)", span="7814-7814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3405 [label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3403 [label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="7816-7816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3404 [label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="7818-7818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3406 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="7810-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_883 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_884 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="1787-1787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_885 [label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="1789-1793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_886 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1795-1795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_887 [label="Console.WriteLine(json)", span="1797-1797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_3204 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="7348-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m13_3205 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'',\r\n                () => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''))", span="7350-7352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m13_3206 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="7348-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m13_120 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerTest.cs"];
m13_56 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs"];
m13_1415 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2970-2970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m13_1416 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                    {\r\n                        ContractResolver = new DefaultContractResolver\r\n                        {\r\n#if !(NETFX_CORE || PORTABLE || PORTABLE40)\r\n                            IgnoreSerializableAttribute = true\r\n#endif\r\n                        }\r\n                    });\r\n                })", span="2972-2985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m13_1417 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2970-2970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m13_1795 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3961-3961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_1796 [label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="3963-3965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_1797 [label="Assert.AreEqual(2, kvPairs.Count)", span="3967-3967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_1798 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="3968-3968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_1799 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="3969-3969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_1800 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="3970-3970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_1801 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="3971-3971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_1802 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3961-3961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_1493 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3136-3136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1494 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3138-3188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1495 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="3190-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1496 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="3193-3193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1497 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="3196-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1498 [label=results, span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1500 [label="searchResults.Add(searchResult)", span="3200-3200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1501 [label="Assert.AreEqual(2, searchResults.Count)", span="3211-3211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1502 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="3212-3212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1503 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="3213-3213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1499 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="3199-3199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1504 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3136-3136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_332 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_333 [label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="658-658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_334 [label="var i = 0", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_336 [label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_342 [label="jsonSerializer.Serialize(streamWriter, dictStore)", span="668-668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_335 [label="i < 800", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_337 [label="i++", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_338 [label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="663-663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_339 [label="var jsonSerializer = JsonSerializer.Create(settings)", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_340 [label="var ms = new MemoryStream()", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_346 [label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_341 [label="var streamWriter = new StreamWriter(ms)", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_344 [label="ms.Seek(0, SeekOrigin.Begin)", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_343 [label="streamWriter.Flush()", span="669-669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_345 [label="var stopWatch = Stopwatch.StartNew()", span="673-673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_347 [label="stopWatch.Stop()", span="675-675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_348 [label="Console.WriteLine(''Time elapsed: '' + stopWatch.ElapsedMilliseconds)", span="677-677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_349 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_1639 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs"];
m13_1037 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2118-2118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1038 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2120-2120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1039 [label="testClass.co = new Co()", span="2121-2121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1040 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2122-2122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1041 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'',\r\n                () => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); })", span="2124-2126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1042 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2118-2118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_3068 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="6931-6931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m13_3069 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="6933-6933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m13_3070 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="6934-6934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m13_3071 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="6931-6931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m13_3366 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="7745-7745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3367 [label="return (short)Value;", span="7747-7747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3368 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="7745-7745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_275 [label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0", cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs"];
m13_2746 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m13_2747 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                @''Value cannot be null.\r\nParameter name: value'',\r\n                () => { JsonConvert.DeserializeObject<double>(null); })", span="6209-6212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m13_2748 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m13_1470 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs"];
m13_1479 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3101-3101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1480 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3103-3103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1481 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3104-3104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1482 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3105-3105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1483 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3107-3107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1484 [label="Assert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="3109-3112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1485 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3101-3101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_247 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="64-64", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1749 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs"];
m13_784 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="1616-1616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_785 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="1618-1618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_786 [label="Assert.AreEqual(@''1'', json)", span="1619-1619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_787 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="1621-1621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_788 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="1622-1622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_789 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="1616-1616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_2708 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6146-6146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2709 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6148-6148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2710 [label="Assert.IsNull(v)", span="6149-6149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2711 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="6151-6151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2712 [label="Assert.IsNull(v)", span="6152-6152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2713 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="6154-6154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2714 [label="Assert.IsNull(v)", span="6155-6155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2715 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6157-6157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2716 [label="Assert.IsNull(v)", span="6158-6158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2717 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6160-6160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2718 [label="Assert.IsNull(v)", span="6161-6161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2719 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6163-6163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2720 [label="Assert.IsNull(v)", span="6164-6164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2721 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6166-6166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2722 [label="Assert.IsNull(v)", span="6167-6167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_2723 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6146-6146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_1444 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs"];
m13_3238 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7431-7431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3239 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="7433-7439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3240 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="7441-7441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3241 [label="Assert.IsNull(c2.MyNullableBool)", span="7442-7442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3242 [label="Assert.IsNull(c2.MyNullableInteger)", span="7443-7443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3243 [label="Assert.IsNull(c2.MyNullableDateTime)", span="7444-7444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3244 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="7445-7445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3245 [label="Assert.IsNull(c2.MyNullableDecimal)", span="7446-7446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3246 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7431-7431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_2629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="5983-5983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2630 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="5985-5985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2631 [label="string json = JsonConvert.SerializeObject(widget)", span="5987-5987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2632 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="5989-5989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2633 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="5983-5983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_751 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_752 [label="Stack<object> s = new Stack<object>()", span="1573-1573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_753 [label="s.Push(1)", span="1574-1574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_754 [label="s.Push(2)", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_755 [label="s.Push(3)", span="1576-1576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_756 [label="string json = JsonConvert.SerializeObject(s)", span="1578-1578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_757 [label="Assert.AreEqual(''[3,2,1]'', json)", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_758 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_622 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1320-1320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_623 [label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="1322-1330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_624 [label="MemoryStream ms = new MemoryStream()", span="1332-1332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_626 [label="s.WriteObject(ms, testDates)", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_630 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1340-1340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_625 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="1333-1333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_627 [label="ms.Seek(0, SeekOrigin.Begin)", span="1335-1335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_628 [label="StreamReader sr = new StreamReader(ms)", span="1336-1336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_629 [label="string expected = sr.ReadToEnd()", span="1338-1338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_631 [label="Assert.AreEqual(expected, result)", span="1341-1341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_632 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1320-1320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_980 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m13_1190 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m13_1191 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m13_2544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5813-5813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2545 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="5815-5815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2546 [label="JsonSerializer serializer = new JsonSerializer()", span="5817-5817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2551 [label="serializer.Serialize(bsonWriter, test)", span="5824-5824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2547 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="5818-5818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2556 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="5834-5834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2548 [label="byte[] objectBytes", span="5820-5820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2549 [label="MemoryStream bsonStream = new MemoryStream()", span="5821-5821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2550 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="5822-5822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2553 [label="objectBytes = bsonStream.ToArray()", span="5827-5827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2552 [label="bsonWriter.Flush()", span="5825-5825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2554 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="5830-5830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2555 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="5831-5831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2557 [label="Assert.AreEqual(''Test'', newObject.Name)", span="5836-5836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2558 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="5837-5837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2559 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5813-5813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_601 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonSerializerTest.cs"];
m13_1044 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs"];
m13_1882 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="4162-4162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs"];
m13_1628 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="3608-3608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1629 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="3610-3610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1630 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="3608-3608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1118-1118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_542 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="1120-1120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_543 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="1122-1122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_544 [label="Assert.AreEqual(c.Field, ''Field'')", span="1124-1124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_545 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1118-1118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_8 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs"];
m13_1555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="3286-3286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs"];
m13_2864 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6443-6443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2865 [label="string json = ''{}''", span="6445-6445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2866 [label="IList<string> errors = new List<string>()", span="6446-6446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2868 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="6454-6457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2867 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6448-6452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2870 [label="Assert.AreEqual(4, errors.Count)", span="6460-6460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2871 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="6461-6461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2872 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="6462-6462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2873 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="6463-6463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2874 [label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="6464-6464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2869 [label="Assert.IsNotNull(o)", span="6459-6459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_2875 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6443-6443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3323 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="119-119", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonSerializerTest.cs"];
m13_15 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonSerializerTest.cs"];
m13_16 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonSerializerTest.cs"];
m13_2431 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="5538-5538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2432 [label="throw new NotImplementedException();", span="5540-5540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2433 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="5538-5538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2700 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs"];
m13_2812 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs"];
m13_3398 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="7791-7791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonSerializerTest.cs"];
m13_937 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="773-773", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs"];
m13_1062 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs"];
m13_392 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs"];
m13_854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="1731-1731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_855 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1733-1733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_856 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1734-1734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_857 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="1736-1739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_858 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1740-1740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_859 [label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="1742-1745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_860 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="1747-1747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_861 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="1748-1748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_862 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="1731-1731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_3219 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7373-7373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3220 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="7375-7379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3221 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="7381-7381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3225 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="7386-7386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3222 [label="Assert.AreEqual(float.NaN, floats[0])", span="7382-7382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3223 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="7383-7383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3224 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="7384-7384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3226 [label="Assert.AreEqual(float.NaN, doubles[0])", span="7387-7387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3227 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="7388-7388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3228 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="7389-7389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3229 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7373-7373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_1654 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="3646-3646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m13_1655 [label="return _innerDictionary.Remove(key);", span="3648-3648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m13_1656 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="3646-3646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m13_450 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m13_2291 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_2292 [label="ComplexItem i = new ComplexItem()", span="5111-5111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_2293 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5113-5113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_2294 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5115-5117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_2295 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_358 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="JsonSerializerTest.cs"];
m13_1340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2829-2829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m13_1341 [label="string json = @''[]''", span="2831-2831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m13_1342 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n                () => { JsonConvert.DeserializeObject<double>(json); })", span="2833-2837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m13_1343 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2829-2829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m13_2778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6266-6266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2779 [label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6268-6274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2780 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6276-6276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2781 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6277-6277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2782 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6278-6278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2783 [label="Assert.AreEqual(''Post'', c.PostField)", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2784 [label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6281-6283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2785 [label="Assert.AreEqual(null, c2.DateTimeField)", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2786 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6286-6286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2787 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6287-6287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2788 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6288-6288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2789 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6266-6266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_554 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs"];
m13_1919 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4272-4272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1920 [label="throw new NotImplementedException();", span="4274-4274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1921 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4272-4272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="3503-3503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs"];
m13_1885 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonSerializerTest.cs"];
m13_2675 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonSerializerTest.cs"];
m13_834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_835 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_836 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1701-1701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_840 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1708-1708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_841 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_837 [label="string json = JsonConvert.SerializeObject(m1)", span="1703-1703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_838 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1704-1704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_839 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1706-1706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_842 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_3390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="7785-7785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3391 [label="throw new InvalidCastException();", span="7787-7787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="7785-7785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1632 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="3613-3613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m13_1633 [label="return _innerDictionary.ContainsKey(key);", span="3615-3615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m13_1634 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="3613-3613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m13_122 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs"];
m13_1910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4262-4262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1911 [label="Pos p = (Pos)value", span="4264-4264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1913 [label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="4267-4267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1914 [label="writer.WriteNull()", span="4269-4269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1912 [label="p != null", span="4266-4266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1915 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4262-4262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_256 [label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonSerializerTest.cs"];
m13_2620 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="5941-5941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs"];
m13_2826 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs"];
m13_119 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs"];
m13_2621 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1497-1497", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs"];
m13_2983 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="196-196", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="JsonSerializerTest.cs"];
m13_1319 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2791-2791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1320 [label="string json = @''[]''", span="2793-2793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1321 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n                () => { JsonConvert.DeserializeObject<Person>(json); })", span="2795-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1322 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2791-2791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_2062 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs"];
m13_0 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="104-104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_1 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="106-106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_2 [label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="108-108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_3 [label="Assert.AreEqual(true, childClass.IsTransient)", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_4 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="104-104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_2880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6468-6468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2881 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="6470-6470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2882 [label="IList<string> errors = new List<string>()", span="6471-6471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2884 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="6479-6482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2883 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6473-6477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2886 [label="Assert.AreEqual(3, errors.Count)", span="6485-6485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2887 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="6486-6486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2888 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="6487-6487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2889 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="6488-6488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2885 [label="Assert.IsNotNull(o)", span="6484-6484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_2890 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6468-6468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_635 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs"];
m13_1738 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs"];
m13_2964 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6668-6668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_2965 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="6670-6670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_2966 [label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="6671-6671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_2967 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="6673-6673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_2968 [label="Assert.AreEqual(0, objDeserialized.Age)", span="6674-6674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_2969 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6668-6668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_1307 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs"];
m13_1519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3249-3249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m13_1520 [label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="3251-3254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m13_1521 [label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="3255-3258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m13_1522 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3249-3249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m13_2281 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5072-5072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2282 [label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="5074-5077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2283 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5079-5079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2284 [label="Assert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5081-5087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2285 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5089-5089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2286 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5091-5091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2287 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5092-5092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2288 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5093-5093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2289 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5072-5072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_1791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="3953-3953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_1792 [label="Key = k", span="3955-3955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_1793 [label="Value = v", span="3956-3956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_1794 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="3953-3953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_2636 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="5993-5993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2637 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="5995-5995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2638 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="5997-5997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2639 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="5999-5999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2640 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6000-6000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2641 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6001-6001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2642 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="5993-5993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2607 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonSerializerTest.cs"];
m13_2529 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs"];
m13_845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="1713-1713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_846 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1715-1715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_847 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1716-1716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_851 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1726-1726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_852 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1727-1727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_848 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="1718-1721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_849 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1722-1722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_850 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1724-1724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_853 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="1713-1713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_2701 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_2702 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6136-6136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_2703 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6137-6137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_2705 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6140-6140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_2704 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6139-6139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_2706 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6142-6142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_2707 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_2007 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="4417-4417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs"];
m13_447 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs"];
m13_393 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="934-934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_425 [label="MemoryStream ms = new MemoryStream()", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_426 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="937-937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_427 [label="s.WriteObject(ms, o)", span="938-938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_431 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_433 [label="Console.WriteLine(''Results for '' + o.GetType().Name)", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_428 [label="var data = ms.ToArray()", span="940-940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_429 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="941-941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_430 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="942-942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_434 [label="Console.WriteLine(''DataContractJsonSerializer: '' + dataContractJson)", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_436 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_437 [label=dataContractJson, span="952-952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_432 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="945-945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_435 [label="Console.WriteLine(''JsonDotNetSerializer      : '' + jsonNetJson)", span="949-949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_438 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_439 [label="return jsonNetJson.ToString();", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_440 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="934-934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_2895 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2896 [label="IList<string> errors = new List<string>()", span="6494-6494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2897 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6496-6500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2900 [label="Assert.AreEqual(3, errors.Count)", span="6513-6513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2901 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="6514-6514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2902 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="6515-6515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2903 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="6516-6516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2898 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="6502-6506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2899 [label="Assert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="6508-6511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_2904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_694 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1456-1456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_695 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="1458-1458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_696 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1459-1459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_697 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1460-1460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_698 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_699 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1463-1463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_700 [label="Assert.AreEqual(1, wibble.Bar[1])", span="1464-1464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_701 [label="Assert.AreEqual(2, wibble.Bar[2])", span="1465-1465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_702 [label="Assert.AreEqual(3, wibble.Bar[3])", span="1466-1466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_703 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1456-1456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_2054 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs"];
m13_363 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonSerializerTest.cs"];
m13_909 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs"];
m13_2246 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="4996-4996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2247 [label="Value = value", span="4998-4998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2248 [label="Constructor = ''Public Paramatized''", span="4999-4999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2249 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="4996-4996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_1747 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs"];
m13_3134 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs"];
m13_5 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonSerializerTest.cs"];
m13_185 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs"];
m13_1707 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs"];
m13_650 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1376-1376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_651 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="1378-1378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_652 [label="values.Add(-5, 6)", span="1379-1379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_653 [label="values.Add(int.MinValue, int.MaxValue)", span="1380-1380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_654 [label="string json = JsonConvert.SerializeObject(values)", span="1382-1382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_657 [label="CollectionAssert.AreEqual(values, newValues)", span="1388-1388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_655 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="1384-1384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_656 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="1386-1386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_658 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1376-1376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="4300-4300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_1938 [label="return objectType.IsAssignableFrom(typeof(PosDouble));", span="4302-4302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_1939 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="4300-4300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_2038 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs"];
m13_3000 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="6756-6756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs"];
m13_3301 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="7621-7621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3302 [label="var consoleWriter = new ConsoleWriter()", span="7623-7623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3303 [label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="7626-7630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3304 [label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="7636-7636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3309 [label="dict2.Add(consoleWriter, ''Console'')", span="7647-7647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3315 [label="dict3.Add(''Console'', consoleWriter)", span="7662-7662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3306 [label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="7639-7639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3310 [label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="7649-7649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3312 [label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="7654-7654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3316 [label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="7664-7664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3318 [label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="7669-7669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3305 [label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="7637-7637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3307 [label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="7640-7640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3308 [label="var dict2 = new Dictionary<IMyInterface, string>()", span="7646-7646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3311 [label="Assert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="7650-7652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3313 [label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="7655-7655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3314 [label="var dict3 = new Dictionary<string, IMyInterface>()", span="7661-7661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3317 [label="Assert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="7665-7667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3319 [label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="7670-7670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3320 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="7621-7621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_1505 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3217-3217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1506 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="3219-3219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1507 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="3220-3220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1513 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="3228-3228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1508 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3222-3222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1509 [label="wagePerson.Department = ''McDees''", span="3223-3223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1510 [label="wagePerson.HourlyWage = 12.50m", span="3224-3224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1511 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3225-3225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1512 [label="wagePerson.Name = ''Jim Bob''", span="3226-3226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1516 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="3241-3241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1514 [label="Assert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="3229-3238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1515 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="3240-3240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1517 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3217-3217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1076 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1821-1821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m13_903 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'',\r\n                () =>\r\n                {\r\n                    IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                    JsonConvert.SerializeObject(c);\r\n                })", span="1823-1829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m13_904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1821-1821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m13_1570 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m13_1571 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="3403-3403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m13_1572 [label="ExceptionAssert.Throws<JsonSerializationException>(''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'',\r\n                () => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    SpecialPropertyHandling = SpecialPropertyHandling.Default\r\n                }))", span="3405-3410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_1573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m13_561 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_562 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="1229-1238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_563 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="1240-1240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_564 [label="Assert.AreEqual(4, o.Children().Count())", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_565 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="1243-1243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_566 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="1244-1244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_567 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="1245-1245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_568 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_3146 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="704-704", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_47 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_48 [label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="220-225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_49 [label="var json = JsonConvert.SerializeObject(input)", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_51 [label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="230-230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_52 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_53 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_50 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_54 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_1657 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs"];
m13_1119 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2307-2307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1120 [label="SubKlass i = new SubKlass(''my subprop'')", span="2309-2309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1121 [label="i.SuperProp = ''overrided superprop''", span="2310-2310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1122 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2312-2315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1123 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2317-2317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1124 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2319-2322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1125 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2324-2327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1126 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2328-2328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2307-2307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1711 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs"];
m13_3096 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7017-7017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3097 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7019-7021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3098 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7023-7023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3099 [label="BigInteger nineQuindecillion = l[0]", span="7025-7025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3100 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7028-7028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3101 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7017-7017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_2758 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6225-6225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_2759 [label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6227-6228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_2760 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6230-6230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_2761 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6231-6231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_2762 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6225-6225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_2905 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs"];
m13_57 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_58 [label="JsonSerializer serializer = new JsonSerializer()", span="238-238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_59 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_60 [label="serializer.Binder = customBinder", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_61 [label="Assert.AreEqual(customBinder, serializer.Binder)", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_62 [label="serializer.CheckAdditionalContent = true", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_63 [label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_64 [label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="247-247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_65 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_66 [label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_67 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_69 [label="serializer.ContractResolver = resolver", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_70 [label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_71 [label="serializer.Converters.Add(new StringEnumConverter())", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_72 [label="Assert.AreEqual(1, serializer.Converters.Count)", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_73 [label="serializer.Culture = new CultureInfo(''en-nz'')", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_74 [label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="263-263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_75 [label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="265-265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_76 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="266-266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_77 [label="serializer.DateFormatString = ''yyyy''", span="268-268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_78 [label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="269-269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_79 [label="serializer.DateParseHandling = DateParseHandling.None", span="271-271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_80 [label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_81 [label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="274-274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_82 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_83 [label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_84 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_85 [label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_86 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_87 [label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_88 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_89 [label="serializer.Formatting = Formatting.Indented", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_90 [label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_91 [label="serializer.MaxDepth = 9001", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_92 [label="Assert.AreEqual(9001, serializer.MaxDepth)", span="290-290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_93 [label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_94 [label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="293-293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_95 [label="serializer.NullValueHandling = NullValueHandling.Ignore", span="295-295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_96 [label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="296-296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_97 [label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="298-298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_98 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="299-299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_99 [label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_100 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_101 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="304-304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_102 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="305-305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_104 [label="serializer.ReferenceResolver = referenceResolver", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_105 [label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="309-309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_106 [label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_107 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="312-312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_109 [label="serializer.TraceWriter = traceWriter", span="315-315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_110 [label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="316-316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_111 [label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_112 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="320-320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_113 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_114 [label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="324-324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_68 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="255-255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_103 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="307-307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_108 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="314-314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_115 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_1737 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs"];
m13_2222 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4938-4938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2223 [label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="4940-4944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2224 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="4946-4946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2227 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="4951-4951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2225 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="4948-4948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2226 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="4950-4950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2228 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4938-4938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2195 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4855-4855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2196 [label="_name = info.GetString(''Name'')", span="4857-4857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2197 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4855-4855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1486 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3116-3116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1487 [label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="3120-3124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1488 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3126-3126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1489 [label="Assert.Fail()", span="3127-3127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1490 [label=JsonSerializationException, span="3129-3129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1491 [label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path 'Newtonsoft.Json.Tests.TestObjects.Person'''))", span="3131-3131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1492 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3116-3116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_3159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7231-7231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_3160 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7233-7237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_3161 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="7239-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_3162 [label="Assert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="7244-7247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_3163 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7231-7231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_2261 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5029-5029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2262 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5031-5031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2263 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5032-5032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2264 [label="Assert.AreEqual(''value!'', c.Value)", span="5033-5033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2265 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5029-5029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_3360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="7735-7735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3361 [label="throw new InvalidCastException();", span="7737-7737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3362 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="7735-7735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1274-1274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_592 [label="string json = @''[''''PRE\u003cPOST'''']''", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_593 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_594 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1279-1279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_595 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1281-1281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_597 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1284-1284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_596 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1283-1283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_598 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1274-1274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_689 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonSerializerTest.cs"];
m13_3333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="7689-7689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m13_3334 [label="return TypeCode.Object;", span="7691-7691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m13_3335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="7689-7689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m13_1713 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs"];
m13_1918 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerTest.cs"];
m13_2374 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5392-5392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2375 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="5394-5398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2376 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5400-5400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2377 [label="Assert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5402-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2378 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5392-5392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_3058 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3059 [label="writer.WriteValue(''X'')", span="6910-6910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3060 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2053 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs"];
m13_377 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_378 [label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="729-734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_379 [label="string result = JsonConvert.SerializeObject(cc)", span="736-736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_380 [label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_381 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_492 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1039-1039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_493 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="1041-1041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_494 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_495 [label="testDictionary[''date''] = dateValue", span="1043-1043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_504 [label="Assert.AreEqual(dateValue, deserializedDate)", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_496 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="1045-1045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_499 [label="serializer.WriteObject(ms, testDictionary)", span="1050-1050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_497 [label="MemoryStream ms = new MemoryStream()", span="1048-1048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_502 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="1056-1056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_498 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="1049-1049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_500 [label="byte[] data = ms.ToArray()", span="1052-1052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_501 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="1053-1053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_503 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="1057-1057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1039-1039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_1643 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2422 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5513-5513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m13_2423 [label="throw new NotImplementedException();", span="5515-5515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m13_2424 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5513-5513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m13_521 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="162-162", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerTest.cs"];
m13_520 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonSerializerTest.cs"];
m13_1662 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_1663 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="3658-3658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_1664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_636 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_1703 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs"];
m13_1207 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2543-2543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1208 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="2545-2562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1209 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="2564-2565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1210 [label="Assert.AreEqual(''Name!'', c.Name)", span="2567-2567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1211 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="2568-2568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1212 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2569-2569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1213 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="2570-2570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1214 [label="Assert.AreEqual(4, c.Collection.Count)", span="2571-2571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1215 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="2572-2572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1216 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="2573-2573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1217 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="2574-2574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1218 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="2575-2575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1219 [label="Assert.IsNotNull(c.Random)", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1220 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2543-2543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1739 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs"];
m13_922 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1852-1852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_923 [label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="1854-1859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_924 [label="string json", span="1861-1861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_925 [label="json = JsonConvert.SerializeObject(personRaw)", span="1863-1863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_926 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="1864-1864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_927 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1852-1852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_614 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonSerializerTest.cs"];
m13_3085 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="6985-6985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m13_3086 [label="m_Item1 = item1", span="6987-6987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m13_3087 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="6985-6985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m13_415 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="908-908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_416 [label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="910-916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_417 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_418 [label="baseWith.Virtual = ''Virtual2!''", span="919-919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_419 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_420 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="921-921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_421 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_422 [label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="925-931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="908-908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_1927 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4285-4285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1928 [label="PosDouble p = (PosDouble)value", span="4287-4287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1930 [label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="4290-4290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1931 [label="writer.WriteNull()", span="4292-4292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1929 [label="p != null", span="4289-4289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1932 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4285-4285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1636 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="3618-3618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m13_1637 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="3620-3620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m13_1638 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="3618-3618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m13_1139 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_3001 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6772-6772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3002 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="6774-6780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3003 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="6788-6788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3004 [label="Assert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6789-6792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3005 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="6794-6800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3006 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="6802-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3007 [label="Assert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6803-6806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3008 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6772-6772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_405 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="878-878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_406 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="880-886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_407 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_408 [label="baseWith.Virtual = ''Virtual2!''", span="889-889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_409 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="890-890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_410 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="891-891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_411 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="893-893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_412 [label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="895-904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_413 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="878-878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_2001 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4421-4421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m13_2002 [label="return Value;", span="4423-4423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m13_2003 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4421-4421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m13_2087 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4618-4618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m13_2088 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="4620-4620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m13_2089 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4621-4621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m13_2090 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4618-4618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m13_2320 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5197-5197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2321 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5199-5208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2322 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5210-5210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2323 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5212-5212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2324 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5213-5213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2325 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5214-5214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2326 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5197-5197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_1846 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="4097-4097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs"];
m13_1847 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="4097-4097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs"];
m13_1287 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2740-2740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_1288 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="2742-2742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_1289 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="2744-2744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_1290 [label="Assert.AreEqual(null, c.DateTimeField)", span="2745-2745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_1291 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2740-2740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_287 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="343-343", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs"];
m13_2526 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1641-1641", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs"];
m13_3194 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="7325-7325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs"];
m13_3195 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="7325-7325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs"];
m13_121 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_3061 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerTest.cs"];
m13_637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1345-1345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_638 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="1347-1353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_639 [label="string result = JsonConvert.SerializeObject(testDates)", span="1355-1355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_640 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_641 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1345-1345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_350 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs"];
m13_2730 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2731 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'',\r\n                () => { JsonConvert.DeserializeObject<StringComparison>(''''); })", span="6186-6188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2732 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2976 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6698-6698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_2984 [label="var jsonReader = new Newtonsoft.Json.JsonTextReader(new StringReader(json))", span="6701-6701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_2985 [label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6702-6702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_2987 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="6708-6708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_2986 [label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="6703-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_2988 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6698-6698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_7 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m13_2682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6094-6094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2683 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="6096-6100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2684 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6102-6102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2685 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6104-6104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2686 [label="Assert.AreEqual(null, e.NullableEnum)", span="6106-6106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2687 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="6108-6112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2688 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6114-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2689 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6116-6116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2690 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6118-6118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2691 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6094-6094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_2232 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="4962-4962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs"];
m13_2233 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="4962-4962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs"];
m13_645 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1360-1360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_646 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="1362-1368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_647 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1370-1370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_648 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="1371-1371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_649 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1360-1360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2564 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs"];
m13_3325 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="7675-7675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3326 [label="ParticipantEntity product = new ParticipantEntity()", span="7677-7677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3327 [label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="7678-7678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3328 [label="string json = JsonConvert.SerializeObject(product)", span="7679-7679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3329 [label="Console.WriteLine(json)", span="7680-7680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3330 [label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="7681-7681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3331 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="7675-7675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_1845 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m13_316 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSerializerTest.cs"];
m13_761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="1583-1583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_762 [label="var obj = new { Formatting = ''test'' }", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_763 [label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1587-1587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_764 [label="string indented = JsonConvert.SerializeObject(obj, settings)", span="1588-1588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_765 [label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="1590-1590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_766 [label="Assert.AreNotEqual(indented, none)", span="1591-1591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_767 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="1583-1583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_2860 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs"];
m13_3263 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7481-7481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m13_3264 [label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="7483-7490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m13_3265 [label="Assert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="7492-7499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m13_3266 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7481-7481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m13_186 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_582 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs"];
m13_2650 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m13_2651 [label="ExceptionAssert.Throws<JsonException>(\r\n                null,\r\n                () =>\r\n                {\r\n                    string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                    JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n                })", span="6023-6031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m13_2652 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m13_2304 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5145-5145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2305 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'',\r\n                () => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); })", span="5147-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2306 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5145-5145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_1666 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="3663-3663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1667 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="3665-3665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1668 [label="modelStateDictionary.Add(''key'', ''value'')", span="3666-3666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1669 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="3668-3668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1670 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="3670-3670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1671 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="3672-3672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1672 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1673 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="3674-3674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1674 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="3663-3663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_1926 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs"];
m13_1844 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="475-475", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs"];
m13_2862 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1827-1827", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m13_3062 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6913-6913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3063 [label="return ''X'';", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3064 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6913-6913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="1625-1625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs"];
m13_2351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5306-5306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2352 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5308-5312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2353 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5314-5314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2355 [label="serializer.WriteObject(ms, cc)", span="5317-5317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2354 [label="MemoryStream ms = new MemoryStream()", span="5316-5316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2356 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5319-5319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2357 [label="Console.WriteLine(xml)", span="5321-5321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2358 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5306-5306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2360 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs"];
m13_797 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs"];
m13_2361 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5348-5348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_2362 [label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5350-5354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_2363 [label="string result = JsonConvert.SerializeObject(cc)", span="5356-5356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_2364 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5357-5357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_2365 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5348-5348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_3435 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3440 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="7900-7900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3439 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="7898-7898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3436 [label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="7891-7891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3441 [label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="7902-7902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3438 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="7893-7896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3437 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="7892-7892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3442 [label="Assert.AreEqual(dt, dt1)", span="7904-7904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3443 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="7906-7910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3444 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="7911-7911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3445 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="7913-7913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_263 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="152-152", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs"];
m13_1427 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3008-3008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1428 [label="List<String> strings = new List<String>()", span="3010-3010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1429 [label="strings.Add(''str_1'')", span="3012-3012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1430 [label="strings.Add(''str_2'')", span="3013-3013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1431 [label="strings.Add(''str_3'')", span="3014-3014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1432 [label="string json = JsonConvert.SerializeObject(strings)", span="3016-3016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1433 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3017-3017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1434 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3008-3008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1436 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3021-3021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1437 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3023-3023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1438 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3024-3024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1439 [label="Assert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3025-3028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1440 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3030-3030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1441 [label="Assert.AreEqual(''String!'', c2.A)", span="3031-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1442 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="3032-3032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1443 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3021-3021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_722 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs"];
m13_2693 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6122-6122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_2694 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6124-6124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_2695 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6126-6126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_2696 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6128-6128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_2697 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6130-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_2698 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6122-6122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_2910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6520-6520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2911 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="6522-6531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2912 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="6533-6533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2913 [label="Assert.IsNotNull(c2)", span="6535-6535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2914 [label="Assert.AreEqual(2, c2.Data.Count)", span="6536-6536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2915 [label="Assert.AreEqual(''one'', c2.Data[0])", span="6537-6537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2916 [label="Assert.AreEqual(''two'', c2.Data[1])", span="6538-6538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2917 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6520-6520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2863 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="JsonSerializerTest.cs"];
m13_2763 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6236-6236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2764 [label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6238-6244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2765 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6246-6246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2766 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6247-6247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2767 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6248-6248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2768 [label="Assert.AreEqual(''Post'', c.PostField)", span="6249-6249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2769 [label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6251-6257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2770 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6259-6259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2771 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6260-6260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2772 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6261-6261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2773 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6262-6262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2774 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6236-6236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2085 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs"];
m13_799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="1645-1645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_800 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="1647-1647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_801 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="1649-1649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_802 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="1651-1651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_803 [label="Assert.AreEqual(0, c.IgnoredField)", span="1653-1653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_804 [label="Assert.AreEqual(99, c.Field)", span="1654-1654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_805 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="1645-1645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_2434 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2435 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="5547-5552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2436 [label="Assert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5554-5557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2437 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="5559-5563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2438 [label="Assert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5565-5568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2327 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5219-5219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m13_2328 [label="this.A = A", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m13_2329 [label="B = 2", span="5222-5222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m13_2330 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5219-5219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m13_2257 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="5021-5021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2258 [label="Value = value", span="5023-5023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2259 [label="Constructor = ''Public Paramatized''", span="5024-5024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2260 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="5021-5021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_1382 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2903-2903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1383 [label="string json = @''[]''", span="2905-2905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1384 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'',\r\n                () => { JsonConvert.PopulateObject(json, new Person()); })", span="2907-2909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1385 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2903-2903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1741 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs"];
m13_2942 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6611-6611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_2943 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="6613-6617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_2944 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6619-6619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_2945 [label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="6621-6624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_2946 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6626-6626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_2947 [label="Assert.AreEqual(2, dic2.Count)", span="6628-6628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_2948 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6629-6629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_2949 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6630-6630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_2950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6611-6611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_1277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1278 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="2723-2723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1279 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2725-2725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1280 [label="Console.WriteLine(values.Count)", span="2727-2727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1281 [label="Console.WriteLine(values[''key1''])", span="2730-2730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1282 [label="Assert.AreEqual(2, values.Count)", span="2733-2733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1283 [label="Assert.AreEqual(''value1'', values[''key1''])", span="2734-2734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1284 [label="Assert.AreEqual(''value2'', values[''key2''])", span="2735-2735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3324-3324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m13_1542 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="3326-3326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m13_1543 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3324-3324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m13_2524 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs"];
m13_3407 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3408 [label="DateTime dt = new DateTime(2000, 12, 22)", span="7826-7826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3409 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="7827-7827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3411 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="7833-7833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3414 [label="Assert.AreEqual(dt, dt1)", span="7839-7839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3419 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="7849-7849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3410 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="7828-7831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3415 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="7841-7844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3420 [label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="7851-7854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3413 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="7837-7837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3412 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="7835-7835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3416 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="7845-7845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3417 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="7847-7847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3418 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="7848-7848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3421 [label="v = (JValue)JToken.ReadFrom(reader)", span="7855-7855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3422 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="7857-7857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3423 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7858-7858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3424 [label="Assert.AreEqual(''abc'', v.Value)", span="7859-7859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3425 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_2149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4745-4745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_2150 [label="string json = ''[123456789876543.21]''", span="4747-4747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_2151 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="4748-4748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_2152 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="4749-4749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_2153 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4745-4745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_1308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2772-2772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m13_1309 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="2774-2774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m13_1310 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="2776-2776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m13_1311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2772-2772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m13_1518 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs"];
m13_824 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="1685-1685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_825 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="1687-1687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_826 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="1689-1689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_827 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="1690-1690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_828 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_829 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="1694-1694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="1685-1685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_3127 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7108-7108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3128 [label="var tuple = Tuple.Create(500)", span="7110-7110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3129 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7111-7114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3130 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7115-7115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3131 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7117-7120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3132 [label="Assert.AreEqual(500, obj.Item1)", span="7121-7121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3133 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7108-7108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_1748 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs"];
m13_938 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_939 [label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="1883-1892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_940 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="1894-1894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_941 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="1896-1896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_942 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="1898-1898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_943 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="1900-1900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_944 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="1901-1901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_945 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="1902-1902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_946 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="1903-1903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_947 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="1904-1904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_948 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="1905-1905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_949 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="1906-1906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_806 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs"];
m13_1421 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2989-2989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m13_1422 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                    {\r\n                        ContractResolver = new DefaultContractResolver\r\n                        {\r\n#if !(NETFX_CORE || PORTABLE || PORTABLE40)\r\n                            IgnoreSerializableAttribute = true\r\n#endif\r\n                        }\r\n                    });\r\n                })", span="2991-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m13_1423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2989-2989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m13_2453 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5601-5601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2454 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="5603-5603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2455 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5605-5605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2456 [label="Assert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="5606-5610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2457 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="5612-5612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2458 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="5613-5613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2459 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5601-5601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_3185 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7302-7302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3186 [label="StringWriter sw = new StringWriter()", span="7304-7304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3187 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7305-7305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3191 [label="string json = sw.ToString()", span="7316-7316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3188 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="7307-7311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3189 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="7312-7312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3190 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="7314-7314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3192 [label="Assert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="7318-7320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7302-7302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_1744 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs"];
m13_2109 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="4659-4659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs"];
m13_1368 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2875-2875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m13_1369 [label="string json = @''[new Constructor(123)]''", span="2877-2877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m13_1370 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'',\r\n                () => { JsonConvert.DeserializeObject<List<Person>>(json); })", span="2879-2881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m13_1371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2875-2875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m13_1456 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs"];
m13_2775 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m13_266 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="538-538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_267 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="540-540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_268 [label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="542-542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_269 [label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_270 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="546-546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_271 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="547-547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_272 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="538-538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_1168 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2442-2442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1169 [label="OptInClass optInClass = new OptInClass()", span="2444-2444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1170 [label="optInClass.Age = 26", span="2445-2445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1171 [label="optInClass.Name = ''James NK''", span="2446-2446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1172 [label="optInClass.NotIncluded = ''Poor me :(''", span="2447-2447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1173 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="2449-2449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1174 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="2451-2454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1175 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="2456-2460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1176 [label="Assert.AreEqual(26, newOptInClass.Age)", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1177 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="2462-2462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1178 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="2463-2463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2442-2442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_600 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs"];
m13_1054 [label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="2144-2148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1053 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2142-2142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1055 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="2150-2150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1056 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="2153-2153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1057 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="2156-2156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1058 [label="Console.WriteLine(defaultJson)", span="2159-2159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1059 [label="Console.WriteLine(isoJson)", span="2160-2160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1060 [label="Console.WriteLine(javascriptJson)", span="2161-2161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1061 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2142-2142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_750 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs"];
m13_506 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_507 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="1065-1065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_508 [label="executorObject.serverClassName = ''BanSubs''", span="1066-1066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_509 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_510 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="1068-1068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_511 [label="string output = JsonConvert.SerializeObject(executorObject)", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_513 [label="Assert.AreNotSame(executorObject, executorObject2)", span="1074-1074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_512 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="1072-1072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_514 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="1075-1075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_515 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="1076-1076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_516 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_517 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1078-1078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_518 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_1709 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs"];
m13_2440 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs"];
m13_297 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_298 [label="var json = @''{''''foo'''':''''value''''}''", span="610-610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_299 [label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_300 [label="Assert.AreEqual(''value'', deserialized.foo)", span="612-612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_301 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_444 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs"];
m13_2501 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs"];
m13_2815 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6367-6367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2816 [label="Color color = (Color)value", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2818 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6372-6372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2817 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6370-6370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2819 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6367-6367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="7775-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3385 [label="throw new InvalidCastException();", span="7777-7777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3386 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="7775-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1716 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs"];
m13_2066 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4572-4572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2067 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="4574-4577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2068 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="4579-4579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2069 [label="Assert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="4581-4583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2070 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="4585-4585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2071 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="4587-4587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2072 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4572-4572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_466 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="715-715", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs"];
m13_1090 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2243-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1091 [label="string json = ''{ 'testProperty1': 'value' }''", span="2245-2245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1092 [label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="2247-2250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1095 [label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="2254-2257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1093 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2251-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1094 [label="Assert.AreEqual(21, c.TestProperty2)", span="2252-2252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1096 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2258-2258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1097 [label="Assert.AreEqual(21, c.TestProperty2)", span="2259-2259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1098 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2243-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1052 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs"];
m13_1897 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="4170-4170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs"];
m13_3291 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerTest.cs"];
m13_2231 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="128-128", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m13_2310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5153-5153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2311 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5155-5155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2312 [label="Assert.IsNull(dateTime)", span="5157-5157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2313 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5153-5153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2996 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="6763-6763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m13_2997 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m13_2998 [label="Assert.AreEqual(@''{}'', json)", span="6766-6766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m13_2999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="6763-6763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m13_2583 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5883-5883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2584 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="5885-5885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2585 [label="string json = JsonConvert.SerializeObject(d1)", span="5887-5887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2587 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5891-5891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2588 [label="Assert.AreEqual(d1[0], d2[0])", span="5892-5892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2586 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="5889-5889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5883-5883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3196 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7331-7331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m13_3197 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'',\r\n                () => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''))", span="7333-7335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m13_3198 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7331-7331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m13_246 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerTest.cs"];
m13_1712 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs"];
m13_3102 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7033-7033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3103 [label="string json = @''[\r\n        900\r\n      ]''", span="7035-7037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3104 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7039-7039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3105 [label="int i = l[0]", span="7041-7041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3106 [label="Assert.AreEqual(900, i)", span="7044-7044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3107 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7033-7033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_290 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="599-599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_291 [label="var original = new Foo1 { foo = ''value'' }", span="601-601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_292 [label="var json = JsonConvert.SerializeObject(original)", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_293 [label="var expectedJson = @''{''''foo'''':''''value''''}''", span="603-603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_294 [label="Assert.AreEqual(expectedJson, json)", span="604-604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_295 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="599-599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_2091 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4625-4625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2092 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="4627-4630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2093 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="4632-4632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2094 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="4634-4634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2095 [label="JsonSerializer serializer = new JsonSerializer()", span="4636-4636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2097 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="4639-4639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2096 [label="serializer.DateParseHandling = DateParseHandling.None", span="4637-4637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2098 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2099 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4642-4642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2100 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4625-4625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_118 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonSerializerTest.cs"];
m13_930 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1868-1868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_931 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="1870-1870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_932 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="1872-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_933 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_934 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="1875-1875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_935 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="1876-1876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_936 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1868-1868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1635 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs"];
m13_1811 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4101-4101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1848 [label="AA_field1 = f", span="4103-4103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1849 [label="AA_field2 = f", span="4104-4104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1850 [label="AA_property1 = f", span="4105-4105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1851 [label="AA_property2 = f", span="4106-4106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1852 [label="AA_property3 = f", span="4107-4107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1853 [label="AA_property4 = f", span="4108-4108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1854 [label="AA_property5 = f", span="4109-4109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1855 [label="AA_property6 = f", span="4110-4110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_1856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4101-4101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2132 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonSerializerTest.cs"];
m13_2017 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4454-4454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2018 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4456-4456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2019 [label="Assert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4458-4462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2020 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4454-4454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2918 [label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_807 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="1658-1658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_808 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="1660-1660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_809 [label="string json = JsonConvert.SerializeObject(c)", span="1662-1662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_810 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="1664-1664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_811 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="1666-1666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_812 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_813 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="1668-1668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_814 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="1658-1658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_1286 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="JsonSerializerTest.cs"];
m13_2055 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4540-4540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2056 [label="string classRef = typeof(StringDictionary).FullName", span="4542-4542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2057 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="4544-4552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2059 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'',\r\n                () => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); })", span="4556-4558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2058 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="4554-4554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2060 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4540-4540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_775 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="1604-1604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_776 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="1606-1606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_777 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="1608-1608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_780 [label="Assert.AreEqual(guid, c.GuidField)", span="1612-1612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_778 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="1609-1609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_779 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="1611-1611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_781 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="1604-1604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_2179 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4807-4807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m13_2180 [label="IDoWork = doWork", span="4810-4810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m13_2181 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4807-4807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m13_2634 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonSerializerTest.cs"];
m13_2373 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5341-5341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs"];
m13_2752 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6216-6216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m13_2753 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                @''Value cannot be null.\r\nParameter name: value'',\r\n                () => { JsonConvert.DeserializeObject(null); })", span="6218-6221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m13_2754 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6216-6216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m13_685 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1442-1442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m13_686 [label="string json = JsonConvert.SerializeObject(new object())", span="1444-1444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m13_687 [label="Assert.AreEqual(''{}'', json)", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m13_688 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1442-1442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m13_1180 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs"];
m13_1883 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonSerializerTest.cs"];
m13_843 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m13_2004 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4426-4426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m13_2005 [label="return new DictionaryKey() { Value = value };", span="4428-4428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m13_2006 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4426-4426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m13_2345 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5287-5287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2346 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5289-5293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2347 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5295-5295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2348 [label="Console.WriteLine(result)", span="5302-5302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2349 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5287-5287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2344 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="5250-5250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_1087 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="2231-2231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs"];
m13_1088 [label="TestProperty1 = testProperty1", span="2233-2233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs"];
m13_1089 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="2231-2231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs"];
m13_2266 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="5042-5042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2267 [label="Value = value", span="5044-5044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2268 [label="Constructor = ''Public Paramatized 1''", span="5045-5045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2269 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="5042-5042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m13_2562 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs"];
m13_1261 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs"];
m13_1607 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs"];
m13_1843 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m13_2859 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs"];
m13_740 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1520-1520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_741 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="1522-1522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_742 [label="string expected = null", span="1524-1524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_744 [label="Assert.AreEqual(expected, json)", span="1560-1560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_745 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="1562-1562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_743 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="1526-1541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_746 [label="Assert.AreEqual(''string'', c.String)", span="1563-1563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_747 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="1564-1564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_748 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="1566-1566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_749 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1520-1520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_2042 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4517-4517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2043 [label="JsonSerializer serializer1 = new JsonSerializer()", span="4519-4519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2044 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="4520-4520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2045 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="4521-4521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2048 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="4527-4527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2046 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="4523-4523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2047 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4525-4525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2049 [label="Assert.AreEqual(2, z.Length)", span="4528-4528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2050 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="4529-4529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2051 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="4530-4530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2052 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4517-4517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_1232 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="2604-2604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1233 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="2606-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1234 [label="JObject o = JObject.Parse(json)", span="2618-2618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1235 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="2620-2620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1236 [label="Assert.IsNotNull(s)", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1237 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="2623-2623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1238 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="2624-2624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1239 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="2625-2625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1240 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="2604-2604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_2565 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5843-5843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2566 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="5845-5845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2567 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="5849-5849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2568 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="5851-5851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2569 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="5852-5852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2570 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="5854-5854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2571 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="5856-5856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2572 [label="Assert.AreEqual(1.5m, c.Quantity)", span="5858-5858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2573 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="5859-5859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2574 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5843-5843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_1063 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2164-2164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1064 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1065 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="2167-2172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1066 [label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="2173-2176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1067 [label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="2177-2180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1068 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2182-2182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1072 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="2205-2205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1073 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="2206-2206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1074 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="2207-2207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1069 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="2184-2200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1070 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="2202-2202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1071 [label="Assert.IsNotNull(deserializedObject)", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1075 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2164-2164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_2530 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5791-5791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2531 [label="string input = ''http://test.com/%22foo+bar%22''", span="5793-5793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2532 [label="Uri uri = new Uri(input)", span="5794-5794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2533 [label="string json = JsonConvert.SerializeObject(uri)", span="5795-5795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2535 [label="Assert.AreEqual(uri, output)", span="5798-5798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2534 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5796-5796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2536 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5791-5791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_3372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="7755-7755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3373 [label="return (long)Value;", span="7757-7757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3374 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="7755-7755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1907 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="4254-4254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs"];
m13_1157 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2389-2389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1158 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="2391-2407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1159 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="2409-2409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1161 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="2412-2412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1160 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="2410-2410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1162 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="2413-2413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1163 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="2414-2414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1164 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="2415-2415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1165 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="2416-2416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1166 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="2417-2417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1167 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2389-2389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_2201 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="4895-4895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2202 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="4897-4897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2203 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="4898-4898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2204 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="4899-4899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2208 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="4906-4906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2205 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="4901-4901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2206 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="4902-4902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2207 [label="barWithNull.Foo2 = null", span="4903-4903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2212 [label="s = JsonConvert.SerializeObject(barWithNull)", span="4912-4912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2209 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="4907-4907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2210 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="4908-4908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2211 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="4909-4909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2213 [label="deserialized = deserialize(s)", span="4913-4913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2214 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="4914-4914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2215 [label="Assert.AreEqual(deserialized.Foo2, null)", span="4915-4915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2216 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="4895-4895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_971 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs"];
m13_3283 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="7568-7568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3284 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="7570-7572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3285 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="7574-7574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3286 [label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="7576-7576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3287 [label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="7578-7578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3288 [label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="7579-7579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3289 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="7568-7568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_952 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_953 [label="string json = @''{''''Height'''':1}''", span="1912-1912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_954 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1914-1914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_955 [label="Assert.AreEqual(1, c.Height)", span="1915-1915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_956 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_262 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="690-690", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs"];
m13_570 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs"];
m13_2237 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="4976-4976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2238 [label="var data = new DecimalTest(decimal.MinValue)", span="4978-4978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2239 [label="var json = JsonConvert.SerializeObject(data)", span="4979-4979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2240 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { SpecialPropertyHandling = SpecialPropertyHandling.Default })", span="4980-4980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_2241 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="4982-4982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="4976-4976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_1900 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_1901 [label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="4232-4236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_1902 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="4238-4238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_1903 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="4239-4239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_1904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_2428 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="5533-5533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2429 [label="throw new NotImplementedException();", span="5535-5535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2430 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="5533-5533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_1617 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs"];
m13_2514 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5772-5772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2515 [label="object o = new { p = 1 }", span="5775-5775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2516 [label="var json = JObject.FromObject(o)", span="5777-5777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2517 [label="var sw = new StringWriter()", span="5779-5779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2519 [label="jw.WriteToken(json.CreateReader())", span="5782-5782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2518 [label="var jw = new JsonTextWriter(sw)", span="5780-5780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2521 [label="string result = sw.ToString()", span="5785-5785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2520 [label="jw.Flush()", span="5783-5783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2522 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="5786-5786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2523 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5772-5772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2820 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs"];
m13_1905 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="4242-4242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs"];
m13_1077 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs"];
m13_2039 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4510-4510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m13_2040 [label="Prop1 = new byte[0]", span="4512-4512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m13_2041 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4510-4510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m13_2270 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="5049-5049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m13_2271 [label="Value = value", span="5051-5051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m13_2272 [label="Age = age", span="5052-5052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m13_2273 [label="Constructor = ''Public Paramatized 2''", span="5053-5053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m13_2274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="5049-5049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m13_1181 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1182 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1705 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs"];
m13_382 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="717-717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs"];
m13_1653 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs"];
m13_1644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3628-3628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1645 [label="dictionary == null", span="3630-3630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1647 [label=dictionary, span="3635-3635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1646 [label="return;", span="3632-3632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1648 [label="this[entry.Key] = entry.Value", span="3637-3637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1649 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3628-3628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_2105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4668-4668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m13_2106 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="4670-4670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m13_2107 [label="Assert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="4672-4674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m13_2108 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4668-4668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m13_1389 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="911-911", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs"];
m13_704 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_705 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="1472-1472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_706 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1473-1473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_707 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1474-1474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_708 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_709 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1477-1477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_710 [label="Assert.AreEqual(1, wibble.Bar[1])", span="1478-1478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_711 [label="Assert.AreEqual(2, wibble.Bar[2])", span="1479-1479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_712 [label="Assert.AreEqual(3, wibble.Bar[3])", span="1480-1480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_713 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_547 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_548 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="1130-1130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_549 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_550 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="1134-1134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_551 [label="Assert.AreEqual(0, c.IgnoredField)", span="1136-1136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_552 [label="Assert.AreEqual(99, c.Field)", span="1137-1137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_553 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_1249 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonSerializerTest.cs"];
m13_2021 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4466-4466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2022 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="4468-4472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2023 [label="Assert.AreEqual(3, d.Length)", span="4474-4474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2024 [label="Assert.AreEqual(2.4, d[0])", span="4475-4475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2025 [label="Assert.AreEqual(4.3, d[1])", span="4476-4476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2026 [label="Assert.AreEqual(null, d[2])", span="4477-4477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2027 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4466-4466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_324 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="643-643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_325 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_326 [label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_327 [label="Assert.IsNotNull(deserialized.foo2)", span="647-647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_328 [label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="648-648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_329 [label="Assert.IsNotNull(deserialized.foo)", span="649-649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_330 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="650-650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_331 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="643-643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_602 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_603 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_604 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_605 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_607 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_608 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1300-1300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_606 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_611 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="1305-1305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_610 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1303-1303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_609 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1302-1302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_612 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_2073 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="4563-4563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs"];
m13_1221 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs"];
m13_2086 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="658-658", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m13_2217 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="4874-4874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs"];
m13_3378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="7765-7765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3379 [label="throw new InvalidCastException();", span="7767-7767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3380 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="7765-7765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_995 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonSerializerTest.cs"];
m13_583 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_584 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'',\r\n                () => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); })", span="1268-1270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_585 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_815 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs"];
m13_357 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="755-755", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs"];
m13_783 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs"];
m13_2823 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6375-6375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2824 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6377-6377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2825 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6375-6375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_394 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="850-850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_395 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="852-858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_396 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="860-860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_397 [label="baseWith.Virtual = ''Virtual2!''", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_398 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="862-862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_399 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_400 [label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_401 [label="Console.WriteLine(json)", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_402 [label="Assert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="869-874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_403 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="850-850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_863 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_2560 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs"];
m13_3447 [label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="7915-7915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3446 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="7914-7914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3448 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2184 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="4824-4824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m13_2185 [label="IDontWork = dontWork", span="4826-4826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m13_2186 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="4824-4824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m13_2502 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5743-5743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2503 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="5745-5752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2504 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5753-5753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2507 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5764-5764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2508 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5765-5765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2509 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5766-5766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2510 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5767-5767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2511 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5768-5768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2505 [label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="5755-5761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2506 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5763-5763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2512 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5743-5743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_1857 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="4141-4141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs"];
m13_1858 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="4141-4141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs"];
m13_1984 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="4382-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m13_1985 [label="First = first", span="4384-4384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m13_1986 [label="Second = second", span="4385-4385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m13_1987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="4382-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m13_1706 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs"];
m13_352 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2416 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5503-5503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m13_2417 [label="throw new NotImplementedException();", span="5505-5505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m13_2418 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5503-5503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m13_2384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5421-5421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2385 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5423-5423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2386 [label="c1.Categories.Add(''one'')", span="5424-5424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2387 [label="c1.Categories.Add(''two'')", span="5425-5425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2388 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5427-5427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2391 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5437-5437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2392 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5438-5438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2389 [label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5428-5434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2390 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5436-5436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2393 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="5439-5439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2394 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="5440-5440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2395 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5421-5421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_116 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs"];
m13_2489 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JsonSerializerTest.cs"];
m13_1200 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2524-2524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1201 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="2526-2531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1202 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="2533-2535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1203 [label="Assert.AreEqual(''Name!'', c.Name)", span="2537-2537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1204 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="2538-2538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1205 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2539-2539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1206 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2524-2524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1299 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2760-2760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1300 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="2762-2762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1301 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="2764-2764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1302 [label="JArray a = (JArray)setOnly.GetValue()", span="2765-2765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1303 [label="Assert.AreEqual(5, a.Count)", span="2766-2766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1304 [label="Assert.AreEqual(1, (int)a[0])", span="2767-2767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1305 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="2768-2768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1306 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2760-2760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1916 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JsonSerializerTest.cs"];
m13_3273 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="7518-7518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3274 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="7520-7524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3275 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="7526-7530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3276 [label="john.Spouse = jane", span="7532-7532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3277 [label="jane.Spouse = john", span="7533-7533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3278 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="7535-7539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3279 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="7541-7546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3280 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="7548-7563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3281 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="7518-7518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_1587 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3479-3479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_1588 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="3481-3481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_1589 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="3482-3482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_1590 [label="Assert.AreEqual(123L, item.Value)", span="3484-3484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_1591 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3479-3479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_3255 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m13_1390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2913-2913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1391 [label="string json = @''{}''", span="2915-2915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1392 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'',\r\n                () => { JsonConvert.PopulateObject(json, new List<Person>()); })", span="2917-2919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1393 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2913-2913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_2575 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs"];
m13_375 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="JsonSerializerTest.cs"];
m13_3147 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="7715-7715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3349 [label="throw new InvalidCastException();", span="7717-7717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="7715-7715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1592 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="3512-3512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1593 [label="Exception ex = new Exception(''Blah blah blah'')", span="3514-3514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1594 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="3516-3516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1598 [label="c.ExceptionProperty = ex", span="3520-3520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1595 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="3517-3517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1596 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="3518-3518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1597 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="3519-3519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1601 [label="serializer.WriteObject(ms, c)", span="3526-3526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1599 [label="MemoryStream ms = new MemoryStream()", span="3522-3522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1600 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="3523-3525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1602 [label="byte[] jsonBytes = ms.ToArray()", span="3528-3528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1603 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="3529-3529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1604 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="3512-3512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_3256 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7469-7469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3257 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="7471-7471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3258 [label="var settings = new JsonSerializerSettings()", span="7472-7472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3260 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="7474-7474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3259 [label="var serialiser = JsonSerializer.Create(settings)", span="7473-7473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3261 [label="Assert.AreEqual(1234567890.123456m, d)", span="7476-7476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3262 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7469-7469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_483 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs"];
m13_2473 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs"];
m13_522 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1083-1083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_523 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1085-1085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_524 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1087-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_525 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1089-1089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_526 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1083-1083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_1472 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3087-3087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1473 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3089-3089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1474 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3090-3090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1475 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3091-3091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1476 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3093-3093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1477 [label="Assert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3094-3097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1478 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3087-3087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_2137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4725-4725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m13_2138 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="4727-4727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m13_2139 [label="Assert.AreEqual(123456789876543.21m, d)", span="4728-4728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m13_2140 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4725-4725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m13_1922 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs"];
m13_1099 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="2264-2264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs"];
m13_1100 [label="TestProperty1 = testProperty1", span="2266-2266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs"];
m13_1101 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="2264-2264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs"];
m13_1740 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs"];
m13_643 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m13_2028 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4482-4482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2029 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="4484-4489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2030 [label="Assert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4491-4495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2031 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4497-4497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2032 [label="Assert.AreEqual(3, d.Count)", span="4499-4499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2033 [label="Assert.IsTrue(d.Contains(''One''))", span="4500-4500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2034 [label="Assert.IsTrue(d.Contains(''2''))", span="4501-4501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2035 [label="Assert.IsTrue(d.Contains(''III''))", span="4502-4502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2036 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4482-4482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_684 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="762-762", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_569 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="249-249", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs"];
m13_1241 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="2629-2629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1242 [label="Uri uri = new Uri(''http://codeplex.com'')", span="2631-2631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1243 [label="string json = JsonConvert.SerializeObject(uri)", span="2632-2632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1244 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="2634-2634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1246 [label="Assert.AreEqual(uri, newUri)", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1245 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1247 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="2629-2629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1940 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4307-4307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1941 [label="var reference = new Dictionary<string, object>()", span="4311-4311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1942 [label="reference.Add(''$ref'', ''Persons'')", span="4312-4312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1943 [label="reference.Add(''$id'', 1)", span="4313-4313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1947 [label="child.Add(''Father'', reference)", span="4318-4318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1944 [label="var child = new Dictionary<string, object>()", span="4315-4315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1945 [label="child.Add(''_id'', 2)", span="4316-4316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1946 [label="child.Add(''Name'', ''Isabell'')", span="4317-4317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1948 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4320-4320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1949 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'',\r\n                () => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); })", span="4322-4324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_1950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4307-4307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2919 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6542-6542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2920 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="6544-6552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2921 [label="string json = JsonConvert.SerializeObject(c)", span="6554-6554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2922 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="6556-6556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2923 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6542-6542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_14 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonSerializerTest.cs"];
m13_2608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="5926-5926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m13_2609 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="5928-5933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m13_2610 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'',\r\n                () => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); })", span="5935-5937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m13_2611 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="5926-5926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m13_3354 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="7725-7725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3355 [label="throw new InvalidCastException();", span="7727-7727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3356 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="7725-7725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_264 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonSerializerTest.cs"];
m13_951 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs"];
m13_1043 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs"];
m13_586 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerTest.cs"];
m13_3247 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7452-7452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3248 [label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="7454-7454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3249 [label="string json = JsonConvert.SerializeObject(s1)", span="7456-7456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3251 [label="Assert.AreEqual(s1.Count, s2.Count)", span="7460-7460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3252 [label=s1, span="7461-7461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3250 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="7458-7458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3253 [label="Assert.IsTrue(s2.Contains(s))", span="7463-7463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3254 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7452-7452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_1586 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="3441-3441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs"];
m13_644 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs"];
m13_555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1141-1141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_556 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="1143-1220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_557 [label="object o = JsonConvert.DeserializeObject(json)", span="1221-1221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_558 [label="string s = string.Empty", span="1222-1222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_559 [label="s += s", span="1223-1223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_560 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1141-1141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_1923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="4277-4277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_1924 [label="return objectType.IsAssignableFrom(typeof(Pos));", span="4279-4279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_1925 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="4277-4277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m13_3375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="7760-7760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3376 [label="throw new InvalidCastException();", span="7762-7762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3377 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="7760-7760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2084 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="4590-4590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs"];
m13_2821 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="JsonSerializerTest.cs"];
m13_1556 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3378-3378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1557 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="3380-3380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1558 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="3381-3381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1559 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="3383-3383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1560 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="3384-3384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1561 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3378-3378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_3230 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7393-7393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3231 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="7395-7403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3232 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="7405-7405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3234 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="7409-7412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3233 [label="Console.WriteLine(expected)", span="7407-7407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3235 [label="Console.WriteLine(expected)", span="7414-7414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3236 [label="Assert.AreEqual(expected, actual)", span="7416-7416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3237 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7393-7393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_2933 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6584-6584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2934 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="6586-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2935 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="6592-6595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2936 [label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="6597-6600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2937 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="6602-6602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2938 [label="Assert.AreEqual(2, dic2.Count)", span="6604-6604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2939 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6605-6605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2940 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6606-6606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6584-6584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2379 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="5382-5382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs"];
m13_2563 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="634-634", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m13_2830 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="6393-6393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2831 [label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="6395-6395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2832 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="6397-6397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2838 [label="values.Add(foo)", span="6408-6408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2839 [label="Assert.AreEqual(2, values.Count)", span="6411-6411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2840 [label="Assert.AreEqual(''bar'', values[0].Name)", span="6412-6412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2841 [label="Assert.AreEqual(''baz'', values[1].Name)", span="6413-6413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2833 [label="reader.SupportMultipleContent = true", span="6398-6398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2835 [label="!reader.Read()", span="6402-6402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2837 [label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="6406-6406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2834 [label=true, span="6400-6400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2836 [label="JsonSerializer serializer = new JsonSerializer()", span="6405-6405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2842 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="6393-6393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_534 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1107-1107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_535 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_536 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_537 [label="Assert.AreEqual(c.Field, ''Field'')", span="1113-1113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_538 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="1114-1114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_539 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1107-1107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_673 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_674 [label="DateTime d = new DateTime(2000, 1, 1)", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_675 [label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="1422-1426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_681 [label="Assert.AreEqual(d, anonymous.DateValue)", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_676 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1428-1428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_678 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="1434-1434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_680 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_677 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="1429-1432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_679 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="1435-1435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_682 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_2334 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5241-5241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2335 [label="string json = @''{A:''''Test''''}''", span="5243-5243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2336 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5245-5245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2337 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5246-5246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2338 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5247-5247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2339 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5241-5241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="814-814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs"];
m13_3025 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6831-6831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3026 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="6833-6857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3027 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="6859-6859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3028 [label="Assert.IsNotNull(exception)", span="6860-6860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3029 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="6861-6861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3030 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="6863-6863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3031 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6831-6831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3081 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_38 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="200-200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_39 [label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="202-207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_40 [label="var json = JsonConvert.SerializeObject(input)", span="209-209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_42 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="212-212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_43 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="213-213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_44 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="214-214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_41 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_45 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="200-200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_928 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs"];
m13_1544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3341-3341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1545 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="3343-3343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1546 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="3345-3345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1547 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="3346-3346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1548 [label="g.MyProperty = ''some value''", span="3348-3348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1549 [label="string json = g.ToJson()", span="3350-3350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1550 [label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="3352-3366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1551 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="3368-3368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1552 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="3369-3369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1553 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3341-3341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_6 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs"];
m13_910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m13_911 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="1835-1835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m13_912 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="1836-1836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m13_913 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m13_3268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="7505-7505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_3269 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="7507-7507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_3270 [label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="7509-7509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_3271 [label="Assert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="7511-7513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_3272 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="7505-7505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_9 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_10 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="125-125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_11 [label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="127-127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_12 [label="Assert.AreEqual(true, childClass.IsTransient)", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_13 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_1402 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2932-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m13_1403 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                    {\r\n                        ContractResolver = new DefaultContractResolver\r\n                        {\r\n#if !(NETFX_CORE || PORTABLE || PORTABLE40)\r\n                            IgnoreSerializableAttribute = true\r\n#endif\r\n                        }\r\n                    });\r\n                })", span="2934-2947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m13_1404 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2932-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m13_1665 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1249-1249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_573 [label="JsonPropertyClass test = new JsonPropertyClass()", span="1251-1251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_574 [label="test.Pie = ''Delicious''", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_575 [label="test.SweetCakesCount = int.MaxValue", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_576 [label="string jsonText = JsonConvert.SerializeObject(test)", span="1255-1255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_579 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="1261-1261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_580 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="1262-1262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_577 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="1257-1257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_578 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_581 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1249-1249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_2742 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6200-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2743 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6202-6202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2744 [label="Assert.IsNull(b)", span="6203-6203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2745 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6200-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2367 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5361-5361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2368 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5363-5367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2369 [label="string result = JsonConvert.SerializeObject(cc)", span="5369-5369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2370 [label="Console.WriteLine(result)", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2371 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5371-5371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5361-5361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2622 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="5968-5968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2623 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="5970-5974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2624 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'',\r\n                () => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json))", span="5976-5978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2625 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="5968-5968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m13_599 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs"];
m13_3324 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonSerializerTest.cs"];
m13_2460 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5623-5623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2461 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="5625-5625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2462 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="5627-5627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2463 [label="Assert.AreEqual(3, r.Departures.Count())", span="5628-5628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2464 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="5629-5629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2465 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="5630-5630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2466 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="5631-5631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2467 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5623-5623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_3449 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse", span="", file="JsonSerializerTest.cs"];
m13_3450 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span="", file="JsonSerializerTest.cs"];
m13_3451 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonSerializerTest.cs"];
m13_3452 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3453 [label=strFromTest, span="", file="JsonSerializerTest.cs"];
m13_3454 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass", span="", file="JsonSerializerTest.cs"];
m13_3455 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass", span="", file="JsonSerializerTest.cs"];
m13_3456 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonSerializerTest.cs"];
m13_3457 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3458 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3459 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3460 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3461 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3462 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3463 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3464 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3465 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3466 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3467 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3468 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonSerializerTest.cs"];
m13_3469 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonSerializerTest.cs"];
m13_3470 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3471 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonSerializerTest.cs"];
m13_3472 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonSerializerTest.cs"];
m13_3473 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonSerializerTest.cs"];
m13_3474 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span="", file="JsonSerializerTest.cs"];
m13_3475 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonSerializerTest.cs"];
m13_3476 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonSerializerTest.cs"];
m13_3477 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3478 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span="", file="JsonSerializerTest.cs"];
m13_3479 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span="", file="JsonSerializerTest.cs"];
m13_3480 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span="", file="JsonSerializerTest.cs"];
m13_3481 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3482 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span="", file="JsonSerializerTest.cs"];
m13_3483 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonSerializerTest.cs"];
m13_3484 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span="", file="JsonSerializerTest.cs"];
m13_3485 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonSerializerTest.cs"];
m13_3486 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonSerializerTest.cs"];
m13_3487 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", span="", file="JsonSerializerTest.cs"];
m13_3488 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", span="", file="JsonSerializerTest.cs"];
m13_3489 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", span="", file="JsonSerializerTest.cs"];
m13_3490 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", span="", file="JsonSerializerTest.cs"];
m13_3491 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span="", file="JsonSerializerTest.cs"];
m13_3492 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span="", file="JsonSerializerTest.cs"];
m13_3493 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="JsonSerializerTest.cs"];
m13_3494 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="JsonSerializerTest.cs"];
m13_3495 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="JsonSerializerTest.cs"];
m13_3496 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="JsonSerializerTest.cs"];
m13_3497 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3498 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3499 [label=errors, span="", file="JsonSerializerTest.cs"];
m13_3500 [label=errors, span="", file="JsonSerializerTest.cs"];
m13_3501 [label=errors, span="", file="JsonSerializerTest.cs"];
m13_3502 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3503 [label=s, span="", file="JsonSerializerTest.cs"];
m13_3504 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="JsonSerializerTest.cs"];
m13_3505 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span="", file="JsonSerializerTest.cs"];
m13_3506 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3507 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="JsonSerializerTest.cs"];
m13_3508 [label=json, span="", file="JsonSerializerTest.cs"];
m13_3509 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span="", file="JsonSerializerTest.cs"];
m14_293 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", span="837-837", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_294 [label="value == null", span="839-839", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_296 [label="JValue v = EnsureValue(value)", span="842-842", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_298 [label="throw new ArgumentException(''Can not convert {0} to Byte.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="844-844", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_295 [label="return null;", span="840-840", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_297 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="843-843", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_299 [label="v.Value is BigInteger", span="847-847", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_300 [label="return (byte?)(BigInteger)v.Value;", span="848-848", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_301 [label="return (v.Value != null) ? (byte?)Convert.ToByte(v.Value, CultureInfo.InvariantCulture) : null;", span="851-851", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_302 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", span="837-837", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_98 [label="Entry Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", span="439-439", cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_99 [label="ValidationUtils.ArgumentNotNull(token, ''token'')", span="441-441", cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_100 [label="token is JProperty", span="443-443", cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_101 [label="token = ((JProperty)token).Value", span="444-444", cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_102 [label="return token.Type.ToString();", span="446-446", cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_103 [label="Exit Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", span="439-439", cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_187 [label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JToken.cs"];
m14_784 [label="throw JsonReaderException.Create(reader, ''Error reading JToken from JsonReader. Unexpected token: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1871-1871", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_785 [label="lineInfo == null || !lineInfo.HasLineInfo()", span="1889-1889", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs"];
m14_787 [label="SetLineInfo(lineInfo.LineNumber, lineInfo.LinePosition)", span="1892-1892", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs"];
m14_786 [label="return;", span="1890-1890", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs"];
m14_788 [label="Exit Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", span="1887-1887", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs"];
m14_263 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", span="770-770", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_264 [label="value == null", span="772-772", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_266 [label="JValue v = EnsureValue(value)", span="775-775", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_268 [label="throw new ArgumentException(''Can not convert {0} to Int32.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="777-777", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_265 [label="return null;", span="773-773", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_267 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="776-776", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_269 [label="v.Value is BigInteger", span="780-780", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_270 [label="return (int?)(BigInteger)v.Value;", span="781-781", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_271 [label="return (v.Value != null) ? (int?)Convert.ToInt32(v.Value, CultureInfo.InvariantCulture) : null;", span="784-784", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_272 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", span="770-770", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_245 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", span="731-731", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_246 [label="JValue v = EnsureValue(value)", span="733-733", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_248 [label="throw new ArgumentException(''Can not convert {0} to Byte.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="735-735", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_247 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="734-734", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_249 [label="v.Value is BigInteger", span="738-738", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_250 [label="return (byte)(BigInteger)v.Value;", span="739-739", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_251 [label="return Convert.ToByte(v.Value, CultureInfo.InvariantCulture);", span="742-742", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_252 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", span="731-731", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_89 [label="Entry Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", span="426-426", cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_90 [label="value == null", span="428-428", cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_92 [label="value is JProperty", span="431-431", cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_93 [label="value = ((JProperty)value).Value", span="432-432", cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_94 [label="JValue v = value as JValue", span="434-434", cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_91 [label="throw new ArgumentNullException(''value'');", span="429-429", cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_95 [label="return v;", span="436-436", cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_96 [label="Exit Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", span="426-426", cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_446 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JToken.cs"];
m14_781 [label="v = new JValue(null, JTokenType.Undefined)", span="1867-1867", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_782 [label="v.SetLineInfo(lineInfo)", span="1868-1868", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_783 [label="return v;", span="1869-1869", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_790 [label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", span="1895-1895", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", file="JToken.cs"];
m14_791 [label="_lineNumber = lineNumber", span="1897-1897", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", file="JToken.cs"];
m14_792 [label="_linePosition = linePosition", span="1898-1898", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", file="JToken.cs"];
m14_793 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JToken.cs"];
m14_574 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", span="1491-1491", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", file="JToken.cs"];
m14_575 [label="return new JValue(value);", span="1493-1493", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", file="JToken.cs"];
m14_576 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", span="1491-1491", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", file="JToken.cs"];
m14_602 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", span="1574-1574", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", file="JToken.cs"];
m14_603 [label="return new JValue(value);", span="1576-1576", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", file="JToken.cs"];
m14_604 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", span="1574-1574", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", file="JToken.cs"];
m14_2 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="128-128", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_3 [label="Exit Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="128-128", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_227 [label="Entry System.Convert.ToInt16(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt16(object, System.IFormatProvider)", file="JToken.cs"];
m14_402 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JToken.cs"];
m14_620 [label="Entry Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", span="1620-1620", cluster="Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", file="JToken.cs"];
m14_621 [label="return ((IEnumerable<JToken>)this).GetEnumerator();", span="1622-1622", cluster="Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", file="JToken.cs"];
m14_622 [label="Exit Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", span="1620-1620", cluster="Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", file="JToken.cs"];
m14_739 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="1797-1797", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_740 [label="return (T)ToObject(typeof(T), jsonSerializer);", span="1799-1799", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_741 [label="Exit Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="1797-1797", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_812 [label="Entry Newtonsoft.Json.Linq.JToken.SelectTokens(string)", span="1959-1959", cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", file="JToken.cs"];
m14_813 [label="return SelectTokens(path, false);", span="1961-1961", cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", file="JToken.cs"];
m14_814 [label="Exit Newtonsoft.Json.Linq.JToken.SelectTokens(string)", span="1959-1959", cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", file="JToken.cs"];
m14_548 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", span="1408-1408", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", file="JToken.cs"];
m14_549 [label="return new JValue(value);", span="1410-1410", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", file="JToken.cs"];
m14_550 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", span="1408-1408", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", file="JToken.cs"];
m14_770 [label="v.SetLineInfo(lineInfo)", span="1856-1856", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_303 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", span="860-860", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_304 [label="value == null", span="862-862", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_306 [label="JValue v = EnsureValue(value)", span="865-865", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_308 [label="throw new ArgumentException(''Can not convert {0} to SByte.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="867-867", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_305 [label="return null;", span="863-863", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_307 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="866-866", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_309 [label="v.Value is BigInteger", span="870-870", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_310 [label="return (sbyte?)(BigInteger)v.Value;", span="871-871", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_311 [label="return (v.Value != null) ? (sbyte?)Convert.ToByte(v.Value, CultureInfo.InvariantCulture) : null;", span="874-874", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_312 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", span="860-860", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_44 [label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="311-311", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JToken.cs"];
m14_45 [label="JToken token = this[key]", span="313-313", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JToken.cs"];
m14_46 [label="return token == null ? default(T) : Extensions.Convert<JToken, T>(token);", span="316-316", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JToken.cs"];
m14_47 [label="Exit Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="311-311", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JToken.cs"];
m14_62 [label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="369-369", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs"];
m14_63 [label="_parent == null", span="371-371", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs"];
m14_64 [label="throw new InvalidOperationException(''The parent is missing.'');", span="372-372", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs"];
m14_65 [label="_parent.RemoveItem(this)", span="374-374", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs"];
m14_66 [label="Exit Newtonsoft.Json.Linq.JToken.Remove()", span="369-369", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs"];
m14_73 [label="Entry Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="490-490", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_524 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", span="1324-1324", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", file="JToken.cs"];
m14_525 [label="return new JValue(value);", span="1326-1326", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", file="JToken.cs"];
m14_526 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", span="1324-1324", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", file="JToken.cs"];
m14_527 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", span="1334-1334", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", file="JToken.cs"];
m14_528 [label="return new JValue(value);", span="1336-1336", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", file="JToken.cs"];
m14_529 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", span="1334-1334", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", file="JToken.cs"];
m14_321 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", span="901-901", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_322 [label="value == null", span="903-903", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_324 [label="JValue v = EnsureValue(value)", span="906-906", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_326 [label="throw new ArgumentException(''Can not convert {0} to Int64.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="908-908", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_323 [label="return null;", span="904-904", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_325 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="907-907", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_327 [label="v.Value is BigInteger", span="911-911", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_328 [label="return (long?)(BigInteger)v.Value;", span="912-912", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_329 [label="return (v.Value != null) ? (long?)Convert.ToInt64(v.Value, CultureInfo.InvariantCulture) : null;", span="915-915", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_330 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", span="901-901", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_119 [label="Entry System.Convert.ToBoolean(int)", span="0-0", cluster="System.Convert.ToBoolean(int)", file="JToken.cs"];
m14_571 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", span="1480-1480", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", file="JToken.cs"];
m14_572 [label="return new JValue(value);", span="1482-1482", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", file="JToken.cs"];
m14_573 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", span="1480-1480", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", file="JToken.cs"];
m14_815 [label="Entry Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", span="1972-1972", cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", file="JToken.cs"];
m14_816 [label="JPath p = new JPath(path)", span="1974-1974", cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", file="JToken.cs"];
m14_817 [label="return p.Evaluate(this, errorWhenNoMatch);", span="1975-1975", cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", file="JToken.cs"];
m14_818 [label="Exit Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", span="1972-1972", cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", file="JToken.cs"];
m14_121 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", span="480-480", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_122 [label="JValue v = EnsureValue(value)", span="482-482", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_124 [label="throw new ArgumentException(''Can not convert {0} to DateTimeOffset.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="484-484", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_123 [label="v == null || !ValidateToken(v, DateTimeTypes, false)", span="483-483", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_125 [label="v.Value is DateTimeOffset", span="486-486", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_126 [label="return (DateTimeOffset)v.Value;", span="487-487", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_127 [label="v.Value is string", span="488-488", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_128 [label="return DateTimeOffset.Parse((string)v.Value, CultureInfo.InvariantCulture);", span="489-489", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_129 [label="return new DateTimeOffset(Convert.ToDateTime(v.Value, CultureInfo.InvariantCulture));", span="490-490", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_130 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", span="480-480", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_737 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JToken.cs"];
m14_557 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JToken.cs"];
m14_88 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JToken.cs"];
m14_616 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JToken.cs"];
m14_609 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JToken.cs"];
m14_371 [label="Entry System.Convert.ToUInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToUInt64(object, System.IFormatProvider)", file="JToken.cs"];
m14_413 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", span="1095-1095", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_414 [label="JValue v = EnsureValue(value)", span="1097-1097", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_416 [label="throw new ArgumentException(''Can not convert {0} to UInt64.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1099-1099", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_415 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="1098-1098", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_417 [label="v.Value is BigInteger", span="1102-1102", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_418 [label="return (ulong)(BigInteger)v.Value;", span="1103-1103", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_419 [label="return Convert.ToUInt64(v.Value, CultureInfo.InvariantCulture);", span="1106-1106", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_420 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", span="1095-1095", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_104 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JToken.cs"];
m14_584 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", span="1522-1522", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", file="JToken.cs"];
m14_585 [label="return new JValue(value);", span="1524-1524", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", file="JToken.cs"];
m14_586 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", span="1522-1522", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", file="JToken.cs"];
m14_624 [label="Entry Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", span="1625-1625", cluster="Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", file="JToken.cs"];
m14_625 [label="return Children().GetEnumerator();", span="1627-1627", cluster="Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", file="JToken.cs"];
m14_626 [label="Exit Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", span="1625-1625", cluster="Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", file="JToken.cs"];
m14_486 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JToken.cs"];
m14_771 [label="return v;", span="1857-1857", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_49 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="341-341", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JToken.cs"];
m14_50 [label="return JEnumerable<JToken>.Empty;", span="343-343", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JToken.cs"];
m14_51 [label="Exit Newtonsoft.Json.Linq.JToken.Children()", span="341-341", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JToken.cs"];
m14_133 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JToken.cs"];
m14_0 [label="Entry Newtonsoft.Json.Linq.JToken.CloneToken()", span="127-127", cluster="Newtonsoft.Json.Linq.JToken.CloneToken()", file="JToken.cs"];
m14_1 [label="Exit Newtonsoft.Json.Linq.JToken.CloneToken()", span="127-127", cluster="Newtonsoft.Json.Linq.JToken.CloneToken()", file="JToken.cs"];
m14_747 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JToken.cs"];
m14_380 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", span="1029-1029", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_381 [label="JValue v = EnsureValue(value)", span="1031-1031", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_383 [label="throw new ArgumentException(''Can not convert {0} to Single.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1033-1033", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_382 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="1032-1032", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_384 [label="v.Value is BigInteger", span="1036-1036", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_385 [label="return (float)(BigInteger)v.Value;", span="1037-1037", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_386 [label="return Convert.ToSingle(v.Value, CultureInfo.InvariantCulture);", span="1040-1040", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_387 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", span="1029-1029", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_109 [label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0", cluster="System.Array.IndexOf<T>(T[], T)", file="JToken.cs"];
m14_273 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", span="792-792", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_274 [label="value == null", span="794-794", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_276 [label="JValue v = EnsureValue(value)", span="797-797", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_278 [label="throw new ArgumentException(''Can not convert {0} to Int16.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="799-799", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_275 [label="return null;", span="795-795", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_277 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="798-798", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_279 [label="v.Value is BigInteger", span="802-802", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_280 [label="return (short?)(BigInteger)v.Value;", span="803-803", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_281 [label="return (v.Value != null) ? (short?)Convert.ToInt16(v.Value, CultureInfo.InvariantCulture) : null;", span="806-806", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_282 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", span="792-792", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_509 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="JToken.cs"];
m14_24 [label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="260-260", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs"];
m14_25 [label="JToken parent = Parent", span="262-262", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs"];
m14_27 [label="yield return parent;", span="264-264", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs"];
m14_26 [label="parent != null", span="262-262", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs"];
m14_28 [label="parent = parent.Parent", span="262-262", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs"];
m14_29 [label="Exit Newtonsoft.Json.Linq.JToken.Ancestors()", span="260-260", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs"];
m14_539 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", span="1376-1376", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", file="JToken.cs"];
m14_540 [label="return new JValue(value);", span="1378-1378", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", file="JToken.cs"];
m14_541 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", span="1376-1376", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", file="JToken.cs"];
m14_445 [label="Entry System.Guid.Guid(byte[])", span="0-0", cluster="System.Guid.Guid(byte[])", file="JToken.cs"];
m14_152 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JToken.cs"];
m14_510 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", span="1282-1282", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", file="JToken.cs"];
m14_511 [label="return new JValue(value);", span="1284-1284", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", file="JToken.cs"];
m14_512 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", span="1282-1282", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", file="JToken.cs"];
m14_350 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", span="965-965", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_351 [label="value == null", span="967-967", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_353 [label="JValue v = EnsureValue(value)", span="970-970", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_355 [label="throw new ArgumentException(''Can not convert {0} to UInt32.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="972-972", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_352 [label="return null;", span="968-968", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_354 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="971-971", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_356 [label="v.Value is BigInteger", span="975-975", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_357 [label="return (uint?)(BigInteger)v.Value;", span="976-976", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_358 [label="return (v.Value != null) ? (uint?)Convert.ToUInt32(v.Value, CultureInfo.InvariantCulture) : null;", span="979-979", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_359 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", span="965-965", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_595 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", span="1554-1554", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", file="JToken.cs"];
m14_596 [label="return new JValue(value);", span="1556-1556", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", file="JToken.cs"];
m14_597 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", span="1554-1554", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", file="JToken.cs"];
m14_237 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", span="712-712", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_238 [label="JValue v = EnsureValue(value)", span="714-714", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_240 [label="throw new ArgumentException(''Can not convert {0} to Char.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="716-716", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_239 [label="v == null || !ValidateToken(v, CharTypes, false)", span="715-715", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_241 [label="v.Value is BigInteger", span="719-719", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_242 [label="return (char)(BigInteger)v.Value;", span="720-720", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_243 [label="return Convert.ToChar(v.Value, CultureInfo.InvariantCulture);", span="723-723", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_244 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", span="712-712", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_767 [label="JsonToken.Boolean", span="1853-1853", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_283 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", span="815-815", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_284 [label="value == null", span="817-817", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_286 [label="JValue v = EnsureValue(value)", span="820-820", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_288 [label="throw new ArgumentException(''Can not convert {0} to UInt16.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="822-822", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_285 [label="return null;", span="818-818", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_287 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="821-821", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_289 [label="v.Value is BigInteger", span="825-825", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_290 [label="return (ushort?)(BigInteger)v.Value;", span="826-826", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_291 [label="return (v.Value != null) ? (ushort?)Convert.ToUInt16(v.Value, CultureInfo.InvariantCulture) : null;", span="829-829", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_292 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", span="815-815", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_56 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JToken.cs"];
m14_360 [label="Entry System.Convert.ToUInt32(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToUInt32(object, System.IFormatProvider)", file="JToken.cs"];
m14_86 [label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JToken.cs"];
m14_466 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", span="1195-1195", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_467 [label="value == null", span="1197-1197", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_469 [label="JValue v = EnsureValue(value)", span="1200-1200", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_471 [label="throw new ArgumentException(''Can not convert {0} to TimeSpan.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1202-1202", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_468 [label="return null;", span="1198-1198", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_470 [label="v == null || !ValidateToken(v, TimeSpanTypes, true)", span="1201-1201", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_472 [label="v.Value == null", span="1204-1204", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_474 [label="return (v.Value is TimeSpan) ? (TimeSpan)v.Value : ConvertUtils.ParseTimeSpan(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1207-1207", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_473 [label="return null;", span="1205-1205", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_475 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", span="1195-1195", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_219 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", span="672-672", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_220 [label="JValue v = EnsureValue(value)", span="674-674", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_222 [label="throw new ArgumentException(''Can not convert {0} to Int16.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="676-676", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_221 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="675-675", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_223 [label="v.Value is BigInteger", span="679-679", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_224 [label="return (short)(BigInteger)v.Value;", span="680-680", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_225 [label="return Convert.ToInt16(v.Value, CultureInfo.InvariantCulture);", span="683-683", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_226 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", span="672-672", cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_435 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JToken.cs"];
m14_610 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", span="1594-1594", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", file="JToken.cs"];
m14_611 [label="return new JValue(value);", span="1596-1596", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", file="JToken.cs"];
m14_612 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", span="1594-1594", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", file="JToken.cs"];
m14_97 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JToken.cs"];
m14_188 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", span="609-609", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_189 [label="value == null", span="611-611", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_191 [label="JValue v = EnsureValue(value)", span="614-614", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_193 [label="throw new ArgumentException(''Can not convert {0} to Double.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="616-616", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_190 [label="return null;", span="612-612", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_192 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="615-615", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_194 [label="v.Value is BigInteger", span="619-619", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_195 [label="return (double?)(BigInteger)v.Value;", span="620-620", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_196 [label="return (v.Value != null) ? (double?)Convert.ToDouble(v.Value, CultureInfo.InvariantCulture) : null;", span="623-623", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_197 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", span="609-609", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_598 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="98-98", cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JToken.cs"];
m14_772 [label="JsonToken.Comment", span="1858-1858", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_773 [label="v = JValue.CreateComment(reader.Value.ToString())", span="1859-1859", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_774 [label="v.SetLineInfo(lineInfo)", span="1860-1860", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_775 [label="return v;", span="1861-1861", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_776 [label="JsonToken.Null", span="1862-1862", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_777 [label="v = new JValue(null, JTokenType.Null)", span="1863-1863", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_778 [label="v.SetLineInfo(lineInfo)", span="1864-1864", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_132 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JToken.cs"];
m14_177 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", span="587-587", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_178 [label="value == null", span="589-589", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_180 [label="JValue v = EnsureValue(value)", span="592-592", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_182 [label="throw new ArgumentException(''Can not convert {0} to Decimal.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="594-594", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_179 [label="return null;", span="590-590", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_181 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="593-593", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_183 [label="v.Value is BigInteger", span="597-597", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_184 [label="return (decimal?)(BigInteger)v.Value;", span="598-598", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_185 [label="return (v.Value != null) ? (decimal?)Convert.ToDecimal(v.Value, CultureInfo.InvariantCulture) : null;", span="601-601", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_186 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", span="587-587", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_198 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JToken.cs"];
m14_447 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", span="1158-1158", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_448 [label="value == null", span="1160-1160", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_450 [label="JValue v = EnsureValue(value)", span="1163-1163", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_452 [label="throw new ArgumentException(''Can not convert {0} to Guid.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1165-1165", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_449 [label="return null;", span="1161-1161", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_451 [label="v == null || !ValidateToken(v, GuidTypes, true)", span="1164-1164", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_453 [label="v.Value == null", span="1167-1167", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_455 [label="v.Value is byte[]", span="1170-1170", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_456 [label="return new Guid((byte[])v.Value);", span="1171-1171", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_457 [label="return (v.Value is Guid) ? (Guid)v.Value : new Guid(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1173-1173", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_454 [label="return null;", span="1168-1168", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_458 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", span="1158-1158", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_823 [label="Entry Newtonsoft.Json.Utilities.DynamicProxy<T>.DynamicProxy()", span="35-35", cluster="Newtonsoft.Json.Utilities.DynamicProxy<T>.DynamicProxy()", file="JToken.cs"];
m14_67 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="403-403", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_144 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", span="521-521", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_145 [label="JValue v = EnsureValue(value)", span="523-523", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_147 [label="throw new ArgumentException(''Can not convert {0} to Int64.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="525-525", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_146 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="524-524", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_148 [label="v.Value is BigInteger", span="528-528", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_149 [label="return (long)(BigInteger)v.Value;", span="529-529", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_150 [label="return Convert.ToInt64(v.Value, CultureInfo.InvariantCulture);", span="532-532", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_151 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", span="521-521", cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_545 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", span="1398-1398", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", file="JToken.cs"];
m14_546 [label="return new JValue(value);", span="1400-1400", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", file="JToken.cs"];
m14_547 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", span="1398-1398", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", file="JToken.cs"];
m14_613 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", span="1604-1604", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", file="JToken.cs"];
m14_614 [label="return new JValue(value);", span="1606-1606", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", file="JToken.cs"];
m14_615 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", span="1604-1604", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", file="JToken.cs"];
m14_436 [label="Entry Unk.ToByteArray", span="", cluster="Unk.ToByteArray", file="JToken.cs"];
m14_822 [label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="40-40", cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="JToken.cs"];
m14_120 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JToken.cs"];
m14_587 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116", cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JToken.cs"];
m14_79 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="413-413", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_80 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="415-415", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_82 [label="jw.Formatting = formatting", span="418-418", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_83 [label="WriteTo(jw, converters)", span="420-420", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_81 [label="JsonTextWriter jw = new JsonTextWriter(sw)", span="417-417", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_84 [label="return sw.ToString();", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_85 [label="Exit Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="413-413", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_7 [label="Entry Newtonsoft.Json.Linq.JToken.JToken()", span="226-226", cluster="Newtonsoft.Json.Linq.JToken.JToken()", file="JToken.cs"];
m14_8 [label="Exit Newtonsoft.Json.Linq.JToken.JToken()", span="226-226", cluster="Newtonsoft.Json.Linq.JToken.JToken()", file="JToken.cs"];
m14_236 [label="Entry System.Convert.ToUInt16(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToUInt16(object, System.IFormatProvider)", file="JToken.cs"];
m14_592 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", span="1543-1543", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", file="JToken.cs"];
m14_593 [label="return new JValue(value);", span="1545-1545", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", file="JToken.cs"];
m14_594 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", span="1543-1543", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", file="JToken.cs"];
m14_218 [label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JToken.cs"];
m14_342 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", span="945-945", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_343 [label="JValue v = EnsureValue(value)", span="947-947", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_345 [label="throw new ArgumentException(''Can not convert {0} to Decimal.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="949-949", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_344 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="948-948", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_346 [label="v.Value is BigInteger", span="952-952", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_347 [label="return (decimal)(BigInteger)v.Value;", span="953-953", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_348 [label="return Convert.ToDecimal(v.Value, CultureInfo.InvariantCulture);", span="956-956", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_349 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", span="945-945", cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_163 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", span="563-563", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_164 [label="value == null", span="565-565", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_166 [label="JValue v = EnsureValue(value)", span="568-568", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_168 [label="throw new ArgumentException(''Can not convert {0} to DateTimeOffset.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="570-570", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_165 [label="return null;", span="566-566", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_167 [label="v == null || !ValidateToken(v, DateTimeTypes, true)", span="569-569", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_169 [label="v.Value == null", span="572-572", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_171 [label="v.Value is DateTimeOffset", span="574-574", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_172 [label="return (DateTimeOffset?)v.Value;", span="575-575", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_173 [label="v.Value is string", span="576-576", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_174 [label="return DateTimeOffset.Parse((string)v.Value, CultureInfo.InvariantCulture);", span="577-577", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_175 [label="return new DateTimeOffset(Convert.ToDateTime(v.Value, CultureInfo.InvariantCulture));", span="578-578", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_170 [label="return null;", span="573-573", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_176 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", span="563-563", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_262 [label="Entry System.Convert.ToSByte(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToSByte(object, System.IFormatProvider)", file="JToken.cs"];
m14_779 [label="return v;", span="1865-1865", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_809 [label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", span="40-40", cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="JToken.cs"];
m14_421 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", span="1114-1114", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_422 [label="value == null", span="1116-1116", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_424 [label="JValue v = EnsureValue(value)", span="1119-1119", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_426 [label="throw new ArgumentException(''Can not convert {0} to byte array.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1121-1121", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_433 [label="throw new ArgumentException(''Can not convert {0} to byte array.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1133-1133", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_423 [label="return null;", span="1117-1117", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_425 [label="v == null || !ValidateToken(v, BytesTypes, false)", span="1120-1120", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_427 [label="v.Value is string", span="1123-1123", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_428 [label="return Convert.FromBase64String(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1124-1124", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_429 [label="v.Value is BigInteger", span="1126-1126", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_430 [label="return ((BigInteger)v.Value).ToByteArray();", span="1127-1127", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_431 [label="v.Value is byte[]", span="1130-1130", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_432 [label="return (byte[])v.Value;", span="1131-1131", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_434 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", span="1114-1114", cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_645 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1666-1666", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JToken.cs"];
m14_646 [label="return FromObjectInternal(o, JsonSerializer.CreateDefault());", span="1668-1668", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JToken.cs"];
m14_647 [label="Exit Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1666-1666", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JToken.cs"];
m14_824 [label="Entry Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", span="1998-1998", cluster="Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs"];
m14_825 [label="return GetMetaObject(parameter);", span="2000-2000", cluster="Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs"];
m14_826 [label="Exit Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", span="1998-1998", cluster="Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs"];
m14_110 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", span="460-460", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_111 [label="JValue v = EnsureValue(value)", span="462-462", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_113 [label="throw new ArgumentException(''Can not convert {0} to Boolean.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="464-464", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_112 [label="v == null || !ValidateToken(v, BooleanTypes, false)", span="463-463", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_114 [label="v.Value is BigInteger", span="467-467", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_115 [label="return Convert.ToBoolean((int)(BigInteger)v.Value);", span="468-468", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_116 [label="return Convert.ToBoolean(v.Value, CultureInfo.InvariantCulture);", span="471-471", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_117 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", span="460-460", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_405 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", span="1075-1075", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_406 [label="JValue v = EnsureValue(value)", span="1077-1077", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_408 [label="throw new ArgumentException(''Can not convert {0} to UInt32.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1079-1079", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_407 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="1078-1078", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_409 [label="v.Value is BigInteger", span="1082-1082", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_410 [label="return (uint)(BigInteger)v.Value;", span="1083-1083", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_411 [label="return Convert.ToUInt32(v.Value, CultureInfo.InvariantCulture);", span="1086-1086", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_412 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", span="1075-1075", cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_634 [label="Entry Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1646-1646", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_635 [label="ValidationUtils.ArgumentNotNull(o, ''o'')", span="1648-1648", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_636 [label="ValidationUtils.ArgumentNotNull(jsonSerializer, ''jsonSerializer'')", span="1649-1649", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_639 [label="jsonSerializer.Serialize(jsonWriter, o)", span="1654-1654", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_637 [label="JToken token", span="1651-1651", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_638 [label="JTokenWriter jsonWriter = new JTokenWriter()", span="1652-1652", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_640 [label="token = jsonWriter.Token", span="1655-1655", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_641 [label="return token;", span="1658-1658", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_642 [label="Exit Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1646-1646", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_606 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", span="1584-1584", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", file="JToken.cs"];
m14_607 [label="return new JValue(value);", span="1586-1586", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", file="JToken.cs"];
m14_608 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", span="1584-1584", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", file="JToken.cs"];
m14_459 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", span="1181-1181", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_460 [label="JValue v = EnsureValue(value)", span="1183-1183", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_462 [label="throw new ArgumentException(''Can not convert {0} to TimeSpan.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1185-1185", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_461 [label="v == null || !ValidateToken(v, TimeSpanTypes, false)", span="1184-1184", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_463 [label="return (v.Value is TimeSpan) ? (TimeSpan)v.Value : ConvertUtils.ParseTimeSpan(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1187-1187", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_464 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", span="1181-1181", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_61 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JToken.cs"];
m14_513 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JToken.cs"];
m14_18 [label="Entry Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="247-247", cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs"];
m14_19 [label="_parent == null", span="249-249", cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs"];
m14_22 [label="_parent.AddInternal(index, content, false)", span="253-253", cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs"];
m14_20 [label="throw new InvalidOperationException(''The parent is missing.'');", span="250-250", cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs"];
m14_21 [label="int index = _parent.IndexOfItem(this)", span="252-252", cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs"];
m14_23 [label="Exit Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="247-247", cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs"];
m14_131 [label="Entry System.DateTimeOffset.Parse(string, System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.Parse(string, System.IFormatProvider)", file="JToken.cs"];
m14_564 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", span="1458-1458", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", file="JToken.cs"];
m14_565 [label="return new JValue(value);", span="1460-1460", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", file="JToken.cs"];
m14_566 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", span="1458-1458", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", file="JToken.cs"];
m14_652 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1687-1687", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JToken.cs"];
m14_653 [label="return (T)ToObject(typeof(T));", span="1689-1689", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JToken.cs"];
m14_654 [label="Exit Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1687-1687", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JToken.cs"];
m14_437 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", span="1141-1141", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_438 [label="JValue v = EnsureValue(value)", span="1143-1143", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_440 [label="throw new ArgumentException(''Can not convert {0} to Guid.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1145-1145", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_439 [label="v == null || !ValidateToken(v, GuidTypes, false)", span="1144-1144", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_441 [label="v.Value is byte[]", span="1147-1147", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_442 [label="return new Guid((byte[])v.Value);", span="1148-1148", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_443 [label="return (v.Value is Guid) ? (Guid)v.Value : new Guid(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1150-1150", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_444 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", span="1141-1141", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_517 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JToken.cs"];
m14_493 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="299-299", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JToken.cs"];
m14_599 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", span="1564-1564", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", file="JToken.cs"];
m14_600 [label="return new JValue(value);", span="1566-1566", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", file="JToken.cs"];
m14_601 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", span="1564-1564", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", file="JToken.cs"];
m14_210 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", span="653-653", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_211 [label="JValue v = EnsureValue(value)", span="655-655", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_213 [label="throw new ArgumentException(''Can not convert {0} to Int32.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="657-657", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_212 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="656-656", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_214 [label="v.Value is BigInteger", span="660-660", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_215 [label="return (int)(BigInteger)v.Value;", span="661-661", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_216 [label="return Convert.ToInt32(v.Value, CultureInfo.InvariantCulture);", span="664-664", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_217 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", span="653-653", cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_765 [label="JsonToken.Float", span="1851-1851", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_542 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", span="1387-1387", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", file="JToken.cs"];
m14_543 [label="return new JValue(value);", span="1389-1389", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", file="JToken.cs"];
m14_544 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", span="1387-1387", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", file="JToken.cs"];
m14_76 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="402-402", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JToken.cs"];
m14_77 [label="return ToString(Formatting.Indented);", span="404-404", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JToken.cs"];
m14_78 [label="Exit Newtonsoft.Json.Linq.JToken.ToString()", span="402-402", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JToken.cs"];
m14_797 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1923-1923", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JToken.cs"];
m14_798 [label="return SelectToken(path, false);", span="1925-1925", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JToken.cs"];
m14_799 [label="Exit Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1923-1923", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JToken.cs"];
m14_644 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="798-798", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JToken.cs"];
m14_16 [label="Entry Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="327-327", cluster="Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_655 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1697-1697", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_656 [label="JsonConvert.DefaultSettings == null", span="1699-1699", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_657 [label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(objectType)", span="1701-1701", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_735 [label="return ToObject(objectType, JsonSerializer.CreateDefault());", span="1788-1788", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_658 [label=typeCode, span="1703-1703", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_659 [label="PrimitiveTypeCode.BooleanNullable", span="1705-1705", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_661 [label="PrimitiveTypeCode.Boolean", span="1707-1707", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_663 [label="PrimitiveTypeCode.CharNullable", span="1709-1709", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_665 [label="PrimitiveTypeCode.Char", span="1711-1711", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_667 [label="PrimitiveTypeCode.SByte", span="1713-1713", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_669 [label="PrimitiveTypeCode.SByteNullable", span="1715-1715", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_671 [label="PrimitiveTypeCode.ByteNullable", span="1717-1717", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_673 [label="PrimitiveTypeCode.Byte", span="1719-1719", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_675 [label="PrimitiveTypeCode.Int16Nullable", span="1721-1721", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_677 [label="PrimitiveTypeCode.Int16", span="1723-1723", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_679 [label="PrimitiveTypeCode.UInt16Nullable", span="1725-1725", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_681 [label="PrimitiveTypeCode.UInt16", span="1727-1727", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_683 [label="PrimitiveTypeCode.Int32Nullable", span="1729-1729", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_685 [label="PrimitiveTypeCode.Int32", span="1731-1731", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_687 [label="PrimitiveTypeCode.UInt32Nullable", span="1733-1733", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_689 [label="PrimitiveTypeCode.UInt32", span="1735-1735", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_691 [label="PrimitiveTypeCode.Int64Nullable", span="1737-1737", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_693 [label="PrimitiveTypeCode.Int64", span="1739-1739", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_695 [label="PrimitiveTypeCode.UInt64Nullable", span="1741-1741", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_697 [label="PrimitiveTypeCode.UInt64", span="1743-1743", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_699 [label="PrimitiveTypeCode.SingleNullable", span="1745-1745", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_701 [label="PrimitiveTypeCode.Single", span="1747-1747", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_703 [label="PrimitiveTypeCode.DoubleNullable", span="1749-1749", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_705 [label="PrimitiveTypeCode.Double", span="1751-1751", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_707 [label="PrimitiveTypeCode.DecimalNullable", span="1753-1753", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_709 [label="PrimitiveTypeCode.Decimal", span="1755-1755", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_711 [label="PrimitiveTypeCode.DateTimeNullable", span="1757-1757", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_713 [label="PrimitiveTypeCode.DateTime", span="1759-1759", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_715 [label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1762-1762", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_717 [label="PrimitiveTypeCode.DateTimeOffset", span="1764-1764", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_719 [label="PrimitiveTypeCode.String", span="1767-1767", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_721 [label="PrimitiveTypeCode.GuidNullable", span="1769-1769", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_723 [label="PrimitiveTypeCode.Guid", span="1771-1771", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_725 [label="PrimitiveTypeCode.Uri", span="1773-1773", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_727 [label="PrimitiveTypeCode.TimeSpanNullable", span="1775-1775", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_729 [label="PrimitiveTypeCode.TimeSpan", span="1777-1777", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_731 [label="PrimitiveTypeCode.BigIntegerNullable", span="1780-1780", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_733 [label="PrimitiveTypeCode.BigInteger", span="1782-1782", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_660 [label="return (bool?)this;", span="1706-1706", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_662 [label="return (bool)this;", span="1708-1708", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_664 [label="return (char?)this;", span="1710-1710", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_666 [label="return (char)this;", span="1712-1712", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_668 [label="return (sbyte?)this;", span="1714-1714", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_670 [label="return (sbyte)this;", span="1716-1716", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_672 [label="return (byte?)this;", span="1718-1718", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_674 [label="return (byte)this;", span="1720-1720", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_676 [label="return (short?)this;", span="1722-1722", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_678 [label="return (short)this;", span="1724-1724", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_680 [label="return (ushort?)this;", span="1726-1726", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_682 [label="return (ushort)this;", span="1728-1728", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_684 [label="return (int?)this;", span="1730-1730", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_686 [label="return (int)this;", span="1732-1732", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_688 [label="return (uint?)this;", span="1734-1734", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_690 [label="return (uint)this;", span="1736-1736", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_692 [label="return (long?)this;", span="1738-1738", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_694 [label="return (long)this;", span="1740-1740", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_696 [label="return (ulong?)this;", span="1742-1742", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_698 [label="return (ulong)this;", span="1744-1744", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_700 [label="return (float?)this;", span="1746-1746", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_702 [label="return (float)this;", span="1748-1748", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_704 [label="return (double?)this;", span="1750-1750", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_706 [label="return (double)this;", span="1752-1752", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_708 [label="return (decimal?)this;", span="1754-1754", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_710 [label="return (decimal)this;", span="1756-1756", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_712 [label="return (DateTime?)this;", span="1758-1758", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_714 [label="return (DateTime)this;", span="1760-1760", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_716 [label="return (DateTimeOffset?)this;", span="1763-1763", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_718 [label="return (DateTimeOffset)this;", span="1765-1765", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_720 [label="return (string)this;", span="1768-1768", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_722 [label="return (Guid?)this;", span="1770-1770", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_724 [label="return (Guid)this;", span="1772-1772", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_726 [label="return (Uri)this;", span="1774-1774", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_728 [label="return (TimeSpan?)this;", span="1776-1776", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_730 [label="return (TimeSpan)this;", span="1778-1778", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_732 [label="return ToBigIntegerNullable(this);", span="1781-1781", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_734 [label="return ToBigInteger(this);", span="1783-1783", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_736 [label="Exit Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1697-1697", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs"];
m14_118 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JToken.cs"];
m14_648 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="493-493", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JToken.cs"];
m14_628 [label="Entry Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", span="1630-1630", cluster="Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", file="JToken.cs"];
m14_629 [label="Exit Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", span="1630-1630", cluster="Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", file="JToken.cs"];
m14_738 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="1808-1808", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_742 [label="ValidationUtils.ArgumentNotNull(jsonSerializer, ''jsonSerializer'')", span="1810-1810", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_744 [label="return jsonSerializer.Deserialize(jsonReader, objectType);", span="1814-1814", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_743 [label="JTokenReader jsonReader = new JTokenReader(this)", span="1812-1812", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_745 [label="Exit Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="1808-1808", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_591 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JToken.cs"];
m14_630 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1641-1641", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JToken.cs"];
m14_631 [label="return new JTokenReader(this, Path);", span="1643-1643", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JToken.cs"];
m14_632 [label="Exit Newtonsoft.Json.Linq.JToken.CreateReader()", span="1641-1641", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JToken.cs"];
m14_536 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", span="1366-1366", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", file="JToken.cs"];
m14_537 [label="return new JValue(value);", span="1368-1368", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", file="JToken.cs"];
m14_538 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", span="1366-1366", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", file="JToken.cs"];
m14_502 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", span="1260-1260", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", file="JToken.cs"];
m14_503 [label="return new JValue(value);", span="1262-1262", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", file="JToken.cs"];
m14_504 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", span="1260-1260", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", file="JToken.cs"];
m14_568 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", span="1469-1469", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", file="JToken.cs"];
m14_569 [label="return new JValue(value);", span="1471-1471", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", file="JToken.cs"];
m14_570 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", span="1469-1469", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", file="JToken.cs"];
m14_153 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", span="540-540", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_154 [label="value == null", span="542-542", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_156 [label="JValue v = EnsureValue(value)", span="545-545", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_158 [label="throw new ArgumentException(''Can not convert {0} to DateTime.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="547-547", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_155 [label="return null;", span="543-543", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_157 [label="v == null || !ValidateToken(v, DateTimeTypes, true)", span="546-546", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_159 [label="v.Value is DateTimeOffset", span="550-550", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_160 [label="return ((DateTimeOffset)v.Value).DateTime;", span="551-551", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_161 [label="return (v.Value != null) ? (DateTime?)Convert.ToDateTime(v.Value, CultureInfo.InvariantCulture) : null;", span="554-554", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_162 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", span="540-540", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_605 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JToken.cs"];
m14_819 [label="Entry Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", span="1986-1986", cluster="Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs"];
m14_820 [label="return new DynamicProxyMetaObject<JToken>(parameter, this, new DynamicProxy<JToken>(), true);", span="1988-1988", cluster="Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs"];
m14_821 [label="Exit Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", span="1986-1986", cluster="Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs"];
m14_403 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JToken.cs"];
m14_521 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", span="1314-1314", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", file="JToken.cs"];
m14_522 [label="return new JValue(value);", span="1316-1316", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", file="JToken.cs"];
m14_523 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", span="1314-1314", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", file="JToken.cs"];
m14_487 [label="Entry Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", span="1231-1231", cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_488 [label="JValue v = EnsureValue(value)", span="1233-1233", cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_490 [label="throw new ArgumentException(''Can not convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1235-1235", cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_489 [label="v == null || !ValidateToken(v, BigIntegerTypes, false)", span="1234-1234", cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_491 [label="return ConvertUtils.ToBigInteger(v.Value);", span="1237-1237", cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_492 [label="Exit Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", span="1231-1231", cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_38 [label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="287-287", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs"];
m14_39 [label="JToken o = Parent.First", span="289-289", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs"];
m14_41 [label="yield return o;", span="291-291", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs"];
m14_40 [label="o != this", span="289-289", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs"];
m14_42 [label="o = o.Next", span="289-289", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs"];
m14_43 [label="Exit Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="287-287", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs"];
m14_533 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", span="1355-1355", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", file="JToken.cs"];
m14_534 [label="return new JValue(value);", span="1357-1357", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", file="JToken.cs"];
m14_535 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", span="1355-1355", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", file="JToken.cs"];
m14_530 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", span="1344-1344", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", file="JToken.cs"];
m14_531 [label="return new JValue(value);", span="1346-1346", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", file="JToken.cs"];
m14_532 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", span="1344-1344", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", file="JToken.cs"];
m14_388 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", span="1048-1048", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_389 [label="value == null", span="1050-1050", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_391 [label="JValue v = EnsureValue(value)", span="1053-1053", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_393 [label="throw new ArgumentException(''Can not convert {0} to String.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1055-1055", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_390 [label="return null;", span="1051-1051", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_392 [label="v == null || !ValidateToken(v, StringTypes, true)", span="1054-1054", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_394 [label="v.Value == null", span="1057-1057", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_396 [label="v.Value is byte[]", span="1059-1059", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_397 [label="return Convert.ToBase64String((byte[])v.Value);", span="1060-1060", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_398 [label="v.Value is BigInteger", span="1062-1062", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_399 [label="return ((BigInteger)v.Value).ToString(CultureInfo.InvariantCulture);", span="1063-1063", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_400 [label="return Convert.ToString(v.Value, CultureInfo.InvariantCulture);", span="1066-1066", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_395 [label="return null;", span="1058-1058", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_401 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", span="1048-1048", cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_768 [label="JsonToken.Bytes", span="1854-1854", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_505 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JToken.cs"];
m14_372 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", span="1010-1010", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_373 [label="JValue v = EnsureValue(value)", span="1012-1012", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_375 [label="throw new ArgumentException(''Can not convert {0} to Double.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1014-1014", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_374 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="1013-1013", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_376 [label="v.Value is BigInteger", span="1017-1017", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_377 [label="return (double)(BigInteger)v.Value;", span="1018-1018", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_378 [label="return Convert.ToDouble(v.Value, CultureInfo.InvariantCulture);", span="1021-1021", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_379 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", span="1010-1010", cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_827 [label="Entry Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", span="2005-2005", cluster="Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", file="JToken.cs"];
m14_828 [label="return DeepClone();", span="2007-2007", cluster="Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", file="JToken.cs"];
m14_829 [label="Exit Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", span="2005-2005", cluster="Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", file="JToken.cs"];
m14_57 [label="Entry Newtonsoft.Json.Linq.JToken.Values<T>()", span="361-361", cluster="Newtonsoft.Json.Linq.JToken.Values<T>()", file="JToken.cs"];
m14_58 [label="throw new InvalidOperationException(''Cannot access child value on {0}.''.FormatWith(CultureInfo.InvariantCulture, GetType()));", span="363-363", cluster="Newtonsoft.Json.Linq.JToken.Values<T>()", file="JToken.cs"];
m14_59 [label="Exit Newtonsoft.Json.Linq.JToken.Values<T>()", span="361-361", cluster="Newtonsoft.Json.Linq.JToken.Values<T>()", file="JToken.cs"];
m14_87 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JToken.cs"];
m14_361 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", span="988-988", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_362 [label="value == null", span="990-990", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_364 [label="JValue v = EnsureValue(value)", span="993-993", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_366 [label="throw new ArgumentException(''Can not convert {0} to UInt64.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="995-995", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_363 [label="return null;", span="991-991", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_365 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="994-994", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_367 [label="v.Value is BigInteger", span="998-998", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_368 [label="return (ulong?)(BigInteger)v.Value;", span="999-999", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_369 [label="return (v.Value != null) ? (ulong?)Convert.ToUInt64(v.Value, CultureInfo.InvariantCulture) : null;", span="1002-1002", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_370 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", span="988-988", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_766 [label="JsonToken.Date", span="1852-1852", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", color=green, community=0];
m14_199 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", span="631-631", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_200 [label="value == null", span="633-633", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_202 [label="JValue v = EnsureValue(value)", span="636-636", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_204 [label="throw new ArgumentException(''Can not convert {0} to Char.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="638-638", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_201 [label="return null;", span="634-634", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_203 [label="v == null || !ValidateToken(v, CharTypes, true)", span="637-637", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_205 [label="v.Value is BigInteger", span="641-641", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_206 [label="return (char?)(BigInteger)v.Value;", span="642-642", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_207 [label="return (v.Value != null) ? (char?)Convert.ToChar(v.Value, CultureInfo.InvariantCulture) : null;", span="645-645", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_208 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", span="631-631", cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_60 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JToken.cs"];
m14_633 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="52-52", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JToken.cs"];
m14_748 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1827-1827", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs"];
m14_749 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="1829-1829", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs"];
m14_750 [label="reader.TokenType == JsonToken.None", span="1831-1831", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs"];
m14_751 [label="!reader.Read()", span="1833-1833", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs"];
m14_752 [label="throw JsonReaderException.Create(reader, ''Error reading JToken from JsonReader.'');", span="1834-1834", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs"];
m14_753 [label="IJsonLineInfo lineInfo = reader as IJsonLineInfo", span="1837-1837", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_754 [label="reader.TokenType", span="1839-1839", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_755 [label="JsonToken.StartObject", span="1841-1841", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_756 [label="return JObject.Load(reader);", span="1842-1842", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_757 [label="JsonToken.StartArray", span="1843-1843", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_758 [label="return JArray.Load(reader);", span="1844-1844", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_759 [label="JsonToken.StartConstructor", span="1845-1845", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_760 [label="return JConstructor.Load(reader);", span="1846-1846", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_761 [label="JsonToken.PropertyName", span="1847-1847", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_762 [label="return JProperty.Load(reader);", span="1848-1848", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_763 [label="JsonToken.String", span="1849-1849", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_780 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", color=green, community=0, file="JToken.cs"];
m14_769 [label="Entry Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", span="233-233", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_764 [label="Exit Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1827-1827", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JToken.cs"];
m14_580 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", span="1512-1512", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", file="JToken.cs"];
m14_581 [label="return new JValue(value);", span="1514-1514", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", file="JToken.cs"];
m14_582 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", span="1512-1512", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", file="JToken.cs"];
m14_561 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", span="1448-1448", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", file="JToken.cs"];
m14_562 [label="return new JValue(value);", span="1450-1450", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", file="JToken.cs"];
m14_563 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", span="1448-1448", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", file="JToken.cs"];
m14_506 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", span="1271-1271", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", file="JToken.cs"];
m14_507 [label="return new JValue(value);", span="1273-1273", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", file="JToken.cs"];
m14_508 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", span="1271-1271", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", file="JToken.cs"];
m14_623 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JToken.cs"];
m14_331 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", span="923-923", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_332 [label="value == null", span="925-925", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_334 [label="JValue v = EnsureValue(value)", span="928-928", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_336 [label="throw new ArgumentException(''Can not convert {0} to Single.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="930-930", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_333 [label="return null;", span="926-926", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_335 [label="v == null || !ValidateToken(v, NumberTypes, true)", span="929-929", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_337 [label="v.Value is BigInteger", span="933-933", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_338 [label="return (float?)(BigInteger)v.Value;", span="934-934", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_339 [label="return (v.Value != null) ? (float?)Convert.ToSingle(v.Value, CultureInfo.InvariantCulture) : null;", span="937-937", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_340 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", span="923-923", cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_48 [label="Entry Newtonsoft.Json.Linq.Extensions.Convert<T, U>(T)", span="247-247", cluster="Newtonsoft.Json.Linq.Extensions.Convert<T, U>(T)", file="JToken.cs"];
m14_558 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", span="1438-1438", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", file="JToken.cs"];
m14_559 [label="return new JValue(value);", span="1440-1440", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", file="JToken.cs"];
m14_560 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", span="1438-1438", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", file="JToken.cs"];
m14_68 [label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="381-381", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_69 [label="_parent == null", span="383-383", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_71 [label="_parent.ReplaceItem(this, value)", span="386-386", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_70 [label="throw new InvalidOperationException(''The parent is missing.'');", span="384-384", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_72 [label="Exit Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="381-381", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_617 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", span="1614-1614", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", file="JToken.cs"];
m14_618 [label="return new JValue(value);", span="1616-1616", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", file="JToken.cs"];
m14_619 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", span="1614-1614", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", file="JToken.cs"];
m14_811 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JToken.cs"];
m14_746 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="44-44", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_518 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", span="1303-1303", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", file="JToken.cs"];
m14_519 [label="return new JValue(value);", span="1305-1305", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", file="JToken.cs"];
m14_520 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", span="1303-1303", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", file="JToken.cs"];
m14_830 [label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2015-2015", cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JToken.cs"];
m14_831 [label="return CloneToken();", span="2017-2017", cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JToken.cs"];
m14_832 [label="Exit Newtonsoft.Json.Linq.JToken.DeepClone()", span="2015-2015", cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JToken.cs"];
m14_105 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="JToken.cs"];
m14_476 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", span="1215-1215", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_477 [label="value == null", span="1217-1217", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_479 [label="JValue v = EnsureValue(value)", span="1220-1220", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_481 [label="throw new ArgumentException(''Can not convert {0} to Uri.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1222-1222", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_478 [label="return null;", span="1218-1218", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_480 [label="v == null || !ValidateToken(v, UriTypes, true)", span="1221-1221", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_482 [label="v.Value == null", span="1224-1224", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_484 [label="return (v.Value is Uri) ? (Uri)v.Value : new Uri(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1227-1227", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_483 [label="return null;", span="1225-1225", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_485 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", span="1215-1215", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_494 [label="Entry Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", span="1240-1240", cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_495 [label="JValue v = EnsureValue(value)", span="1242-1242", cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_497 [label="throw new ArgumentException(''Can not convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1244-1244", cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_496 [label="v == null || !ValidateToken(v, BigIntegerTypes, true)", span="1243-1243", cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_498 [label="v.Value == null", span="1246-1246", cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_500 [label="return ConvertUtils.ToBigInteger(v.Value);", span="1249-1249", cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_499 [label="return null;", span="1247-1247", cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_501 [label="Exit Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", span="1240-1240", cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_577 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", span="1502-1502", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", file="JToken.cs"];
m14_578 [label="return new JValue(value);", span="1504-1504", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", file="JToken.cs"];
m14_579 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", span="1502-1502", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", file="JToken.cs"];
m14_17 [label="Entry Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", span="569-569", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="JToken.cs"];
m14_551 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", span="1418-1418", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", file="JToken.cs"];
m14_552 [label="return new JValue(value);", span="1420-1420", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", file="JToken.cs"];
m14_553 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", span="1418-1418", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", file="JToken.cs"];
m14_404 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JToken.cs"];
m14_627 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", span="66-66", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", file="JToken.cs"];
m14_106 [label="Entry Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", span="449-449", cluster="Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", file="JToken.cs"];
m14_107 [label="return (Array.IndexOf(validTypes, o.Type) != -1) || (nullable && (o.Type == JTokenType.Null || o.Type == JTokenType.Undefined));", span="451-451", cluster="Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", file="JToken.cs"];
m14_108 [label="Exit Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", span="449-449", cluster="Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", file="JToken.cs"];
m14_810 [label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", span="664-664", cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JToken.cs"];
m14_795 [label="return (_lineNumber != null && _linePosition != null);", span="1903-1903", cluster="Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JToken.cs"];
m14_794 [label="Entry Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="1901-1901", cluster="Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JToken.cs"];
m14_15 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JToken.cs"];
m14_52 [label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="351-351", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JToken.cs"];
m14_53 [label="return new JEnumerable<T>(Children().OfType<T>());", span="353-353", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JToken.cs"];
m14_54 [label="Exit Newtonsoft.Json.Linq.JToken.Children<T>()", span="351-351", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JToken.cs"];
m14_789 [label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38", cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JToken.cs"];
m14_341 [label="Entry System.Convert.ToSingle(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToSingle(object, System.IFormatProvider)", file="JToken.cs"];
m14_649 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="1677-1677", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_650 [label="return FromObjectInternal(o, jsonSerializer);", span="1679-1679", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_651 [label="Exit Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="1677-1677", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m14_554 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", span="1428-1428", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", file="JToken.cs"];
m14_555 [label="return new JValue(value);", span="1430-1430", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", file="JToken.cs"];
m14_556 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", span="1428-1428", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", file="JToken.cs"];
m14_796 [label="Exit Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="1901-1901", cluster="Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JToken.cs"];
m14_209 [label="Entry System.Convert.ToChar(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToChar(object, System.IFormatProvider)", file="JToken.cs"];
m14_55 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", span="53-53", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", file="JToken.cs"];
m14_134 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", span="499-499", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_135 [label="value == null", span="501-501", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_137 [label="JValue v = EnsureValue(value)", span="504-504", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_139 [label="throw new ArgumentException(''Can not convert {0} to Boolean.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="506-506", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_136 [label="return null;", span="502-502", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_138 [label="v == null || !ValidateToken(v, BooleanTypes, true)", span="505-505", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_140 [label="v.Value is BigInteger", span="509-509", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_141 [label="return Convert.ToBoolean((int)(BigInteger)v.Value);", span="510-510", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_142 [label="return (v.Value != null) ? (bool?)Convert.ToBoolean(v.Value, CultureInfo.InvariantCulture) : null;", span="513-513", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_143 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", span="499-499", cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_465 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="232-232", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="JToken.cs"];
m14_30 [label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="272-272", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs"];
m14_31 [label="Parent == null", span="274-274", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs"];
m14_32 [label="yield break;", span="275-275", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs"];
m14_35 [label="yield return o;", span="279-279", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs"];
m14_33 [label="JToken o = Next", span="277-277", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs"];
m14_34 [label="o != null", span="277-277", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs"];
m14_36 [label="o = o.Next", span="277-277", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs"];
m14_37 [label="Exit Newtonsoft.Json.Linq.JToken.AfterSelf()", span="272-272", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs"];
m14_74 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="394-394", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_75 [label="Exit Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="394-394", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs"];
m14_253 [label="Entry System.Convert.ToByte(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToByte(object, System.IFormatProvider)", file="JToken.cs"];
m14_643 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JToken.cs"];
m14_228 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", span="692-692", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_229 [label="JValue v = EnsureValue(value)", span="694-694", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_231 [label="throw new ArgumentException(''Can not convert {0} to UInt16.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="696-696", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_230 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="695-695", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_232 [label="v.Value is BigInteger", span="699-699", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_233 [label="return (ushort)(BigInteger)v.Value;", span="700-700", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_234 [label="return Convert.ToUInt16(v.Value, CultureInfo.InvariantCulture);", span="703-703", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_235 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", span="692-692", cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_254 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", span="751-751", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_255 [label="JValue v = EnsureValue(value)", span="753-753", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_257 [label="throw new ArgumentException(''Can not convert {0} to SByte.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="755-755", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_256 [label="v == null || !ValidateToken(v, NumberTypes, false)", span="754-754", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_258 [label="v.Value is BigInteger", span="758-758", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_259 [label="return (sbyte)(BigInteger)v.Value;", span="759-759", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_260 [label="return Convert.ToSByte(v.Value, CultureInfo.InvariantCulture);", span="762-762", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_261 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", span="751-751", cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_514 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", span="1292-1292", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", file="JToken.cs"];
m14_515 [label="return new JValue(value);", span="1294-1294", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", file="JToken.cs"];
m14_516 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", span="1292-1292", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", file="JToken.cs"];
m14_800 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", span="1936-1936", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_801 [label="JPath p = new JPath(path)", span="1938-1938", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_803 [label="p.Evaluate(this, errorWhenNoMatch)", span="1941-1941", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_802 [label="JToken token = null", span="1940-1940", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_804 [label="token != null", span="1943-1943", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_807 [label="return token;", span="1949-1949", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_806 [label="token = t", span="1946-1946", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_805 [label="throw new JsonException(''Path returned multiple tokens.'');", span="1944-1944", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_808 [label="Exit Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", span="1936-1936", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs"];
m14_567 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JToken.cs"];
m14_9 [label="Entry Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="234-234", cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs"];
m14_10 [label="_parent == null", span="236-236", cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs"];
m14_13 [label="_parent.AddInternal(index + 1, content, false)", span="240-240", cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs"];
m14_11 [label="throw new InvalidOperationException(''The parent is missing.'');", span="237-237", cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs"];
m14_12 [label="int index = _parent.IndexOfItem(this)", span="239-239", cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs"];
m14_14 [label="Exit Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="234-234", cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs"];
m14_313 [label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", span="882-882", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_314 [label="JValue v = EnsureValue(value)", span="884-884", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_316 [label="throw new ArgumentException(''Can not convert {0} to DateTime.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="886-886", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_315 [label="v == null || !ValidateToken(v, DateTimeTypes, false)", span="885-885", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_317 [label="v.Value is DateTimeOffset", span="889-889", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_318 [label="return ((DateTimeOffset)v.Value).DateTime;", span="890-890", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_319 [label="return Convert.ToDateTime(v.Value, CultureInfo.InvariantCulture);", span="893-893", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_320 [label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", span="882-882", cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_583 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JToken.cs"];
m14_588 [label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", span="1532-1532", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", file="JToken.cs"];
m14_589 [label="return new JValue(value);", span="1534-1534", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", file="JToken.cs"];
m14_590 [label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", span="1532-1532", cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", file="JToken.cs"];
m14_4 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_5 [label="return (t1 == t2 || (t1 != null && t2 != null && t1.DeepEquals(t2)));", span="152-152", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_6 [label="Exit Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JToken.cs"];
m14_833 [label="Newtonsoft.Json.Linq.JToken", span="", file="JToken.cs"];
m15_614 [label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="270-270", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="JTokenTests.cs"];
m15_260 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JTokenTests.cs"];
m15_741 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="922-922", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m15_742 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3),\r\n                    new JObject(\r\n                        new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n                        new JProperty(''Second'', 1),\r\n                        new JProperty(''Third'', null),\r\n                        new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n                        new JProperty(''Fifth'', double.PositiveInfinity),\r\n                        new JProperty(''Sixth'', double.NaN)\r\n                        )\r\n                    )", span="924-938", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m15_743 [label="JArray a2 = (JArray)a.DeepClone()", span="940-940", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m15_745 [label="Assert.IsTrue(a.DeepEquals(a2))", span="944-944", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m15_744 [label="Console.WriteLine(a2.ToString(Formatting.Indented))", span="942-942", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m15_746 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="922-922", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JTokenTests.cs"];
m15_44 [label="Entry Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", span="1882-1882", cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", file="JTokenTests.cs"];
m15_342 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JTokenTests.cs"];
m15_70 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JTokenTests.cs"];
m15_701 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JTokenTests.cs"];
m15_257 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JTokenTests.cs"];
m15_93 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JTokenTests.cs"];
m15_661 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="620-620", cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="JTokenTests.cs"];
m15_264 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JTokenTests.cs"];
m15_630 [label="Entry Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="602-602", cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="JTokenTests.cs"];
m15_36 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JTokenTests.cs"];
m15_768 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="998-998", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs"];
m15_769 [label="ExceptionAssert.Throws<JsonReaderException>(''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'',\r\n                () =>\r\n                {\r\n                    string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],'';\r\n\r\n                    JToken.Parse(json);\r\n                })", span="1000-1010", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs"];
m15_770 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="998-998", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JTokenTests.cs"];
m15_721 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="888-888", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_722 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="890-896", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_723 [label="a[1].AddBeforeSelf(''pie'')", span="898-898", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_724 [label="Assert.AreEqual(5, (int)a[0])", span="900-900", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_725 [label="Assert.AreEqual(''pie'', (string)a[1])", span="901-901", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_726 [label="Assert.AreEqual(a, a[1].Parent)", span="902-902", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_727 [label="Assert.AreEqual(a[2], a[1].Next)", span="903-903", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_728 [label="Assert.AreEqual(5, a.Count())", span="904-904", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_729 [label="a[0].AddBeforeSelf(''firstpie'')", span="906-906", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_730 [label="Assert.AreEqual(''firstpie'', (string)a[0])", span="908-908", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_731 [label="Assert.AreEqual(5, (int)a[1])", span="909-909", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_732 [label="Assert.AreEqual(''pie'', (string)a[2])", span="910-910", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_733 [label="Assert.AreEqual(a, a[0].Parent)", span="911-911", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_734 [label="Assert.AreEqual(a[1], a[0].Next)", span="912-912", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_735 [label="Assert.AreEqual(6, a.Count())", span="913-913", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_736 [label="a.Last.AddBeforeSelf(''secondlastpie'')", span="915-915", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_737 [label="Assert.AreEqual(''secondlastpie'', (string)a[5])", span="917-917", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_738 [label="Assert.AreEqual(7, a.Count())", span="918-918", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_739 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="888-888", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JTokenTests.cs"];
m15_775 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", span="1014-1014", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_776 [label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new JArray(1, 2, 3)),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', new JObject(new JProperty(''Test1'', new JArray(1, new JObject(new JProperty(''Test1'', 1)), 3)))),\r\n                    new JProperty(''Test4'', new JConstructor(''Date'', new JArray(1, 2, 3)))\r\n                    )", span="1016-1022", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_777 [label="JToken t = o.SelectToken(''Test1[0]'')", span="1024-1024", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_779 [label="t = o.SelectToken(''Test2'')", span="1027-1027", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_781 [label="t = o.SelectToken('''')", span="1030-1030", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_783 [label="t = o.SelectToken(''Test4[0][0]'')", span="1033-1033", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_785 [label="t = o.SelectToken(''Test4[0]'')", span="1036-1036", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_789 [label="t = o.SelectToken(''Test3.Test1[1].Test1'')", span="1042-1042", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_778 [label="Assert.AreEqual(''Test1[0]'', t.Path)", span="1025-1025", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_780 [label="Assert.AreEqual(''Test2'', t.Path)", span="1028-1028", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_782 [label="Assert.AreEqual('''', t.Path)", span="1031-1031", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_784 [label="Assert.AreEqual(''Test4[0][0]'', t.Path)", span="1034-1034", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_786 [label="Assert.AreEqual(''Test4[0]'', t.Path)", span="1037-1037", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_787 [label="t = t.DeepClone()", span="1039-1039", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_788 [label="Assert.AreEqual('''', t.Path)", span="1040-1040", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_790 [label="Assert.AreEqual(''Test3.Test1[1].Test1'', t.Path)", span="1043-1043", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_791 [label="JArray a = new JArray(1)", span="1045-1045", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_792 [label="Assert.AreEqual('''', a.Path)", span="1046-1046", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_793 [label="Assert.AreEqual(''[0]'', a[0].Path)", span="1048-1048", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_794 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", span="1014-1014", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Path()", file="JTokenTests.cs"];
m15_671 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="291-291", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m15_751 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="949-949", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m15_752 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3),\r\n                    new JObject(\r\n                        new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n                        new JProperty(''Second'', 1),\r\n                        new JProperty(''Third'', null),\r\n                        new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n                        new JProperty(''Fifth'', double.PositiveInfinity),\r\n                        new JProperty(''Sixth'', double.NaN)\r\n                        )\r\n                    )", span="951-965", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m15_753 [label="ICloneable c = a", span="967-967", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m15_755 [label="Assert.IsTrue(a.DeepEquals(a2))", span="971-971", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m15_754 [label="JArray a2 = (JArray)c.Clone()", span="969-969", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m15_756 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="949-949", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JTokenTests.cs"];
m15_572 [label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="369-369", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JTokenTests.cs"];
m15_652 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="763-763", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_653 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="765-771", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_654 [label="JToken first = a.First", span="773-773", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_656 [label="a.RemoveAll()", span="776-776", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_657 [label="Assert.AreEqual(0, a.Count())", span="777-777", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_655 [label="Assert.AreEqual(5, (int)first)", span="774-774", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_658 [label="Assert.IsNull(first.Parent)", span="779-779", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_659 [label="Assert.IsNull(first.Next)", span="780-780", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_660 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="763-763", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenTests.cs"];
m15_662 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="784-784", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs"];
m15_663 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add Newtonsoft.Json.Linq.JProperty to Newtonsoft.Json.Linq.JArray.'',\r\n                () =>\r\n                {\r\n                    JArray a = new JArray();\r\n                    a.Add(new JProperty(''PropertyName''));\r\n                })", span="786-791", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs"];
m15_664 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="784-784", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JTokenTests.cs"];
m15_112 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenTests.cs"];
m15_113 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1, 2, 3),\r\n                    new JArray(1, 2, 3),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="220-226", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenTests.cs"];
m15_114 [label="Assert.AreEqual(5, (int)a[1].Previous)", span="228-228", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenTests.cs"];
m15_115 [label="Assert.AreEqual(2, a[2].BeforeSelf().Count())", span="229-229", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenTests.cs"];
m15_116 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenTests.cs"];
m15_267 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JTokenTests.cs"];
m15_747 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", span="100-100", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", file="JTokenTests.cs"];
m15_268 [label="Entry JValue.cstr", span="", cluster="JValue.cstr", file="JTokenTests.cs"];
m15_72 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JTokenTests.cs"];
m15_74 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JTokenTests.cs"];
m15_259 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JTokenTests.cs"];
m15_445 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", span="449-449", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_446 [label="Assert.AreEqual((BigInteger)1, (new JValue(1).ToObject(typeof(BigInteger))))", span="452-452", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_447 [label="Assert.AreEqual((BigInteger)1, (new JValue(1).ToObject(typeof(BigInteger?))))", span="453-453", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_448 [label="Assert.AreEqual((BigInteger?)null, (new JValue((object)null).ToObject(typeof(BigInteger?))))", span="454-454", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", color=green, community=0, file="JTokenTests.cs"];
m15_449 [label="Assert.AreEqual((ushort)1, (new JValue(1).ToObject(typeof(ushort))))", span="456-456", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_450 [label="Assert.AreEqual((ushort)1, (new JValue(1).ToObject(typeof(ushort?))))", span="457-457", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_451 [label="Assert.AreEqual((uint)1L, (new JValue(1).ToObject(typeof(uint))))", span="458-458", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_452 [label="Assert.AreEqual((uint)1L, (new JValue(1).ToObject(typeof(uint?))))", span="459-459", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_453 [label="Assert.AreEqual((ulong)1L, (new JValue(1).ToObject(typeof(ulong))))", span="460-460", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_454 [label="Assert.AreEqual((ulong)1L, (new JValue(1).ToObject(typeof(ulong?))))", span="461-461", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_455 [label="Assert.AreEqual((sbyte)1L, (new JValue(1).ToObject(typeof(sbyte))))", span="462-462", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_456 [label="Assert.AreEqual((sbyte)1L, (new JValue(1).ToObject(typeof(sbyte?))))", span="463-463", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_457 [label="Assert.AreEqual((byte)1L, (new JValue(1).ToObject(typeof(byte))))", span="464-464", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_458 [label="Assert.AreEqual((byte)1L, (new JValue(1).ToObject(typeof(byte?))))", span="465-465", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_459 [label="Assert.AreEqual((short)1L, (new JValue(1).ToObject(typeof(short))))", span="466-466", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_460 [label="Assert.AreEqual((short)1L, (new JValue(1).ToObject(typeof(short?))))", span="467-467", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_461 [label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int))))", span="468-468", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_462 [label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int?))))", span="469-469", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_463 [label="Assert.AreEqual(1L, (new JValue(1).ToObject(typeof(long))))", span="470-470", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_464 [label="Assert.AreEqual(1L, (new JValue(1).ToObject(typeof(long?))))", span="471-471", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_465 [label="Assert.AreEqual((float)1, (new JValue(1.0).ToObject(typeof(float))))", span="472-472", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_466 [label="Assert.AreEqual((float)1, (new JValue(1.0).ToObject(typeof(float?))))", span="473-473", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_467 [label="Assert.AreEqual((double)1, (new JValue(1.0).ToObject(typeof(double))))", span="474-474", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_468 [label="Assert.AreEqual((double)1, (new JValue(1.0).ToObject(typeof(double?))))", span="475-475", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_469 [label="Assert.AreEqual(1m, (new JValue(1).ToObject(typeof(decimal))))", span="476-476", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_470 [label="Assert.AreEqual(1m, (new JValue(1).ToObject(typeof(decimal?))))", span="477-477", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_471 [label="Assert.AreEqual(true, (new JValue(true).ToObject(typeof(bool))))", span="478-478", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_472 [label="Assert.AreEqual(true, (new JValue(true).ToObject(typeof(bool?))))", span="479-479", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_473 [label="Assert.AreEqual('b', (new JValue('b').ToObject(typeof(char))))", span="480-480", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_474 [label="Assert.AreEqual('b', (new JValue('b').ToObject(typeof(char?))))", span="481-481", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_475 [label="Assert.AreEqual(TimeSpan.MaxValue, (new JValue(TimeSpan.MaxValue).ToObject(typeof(TimeSpan))))", span="482-482", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_476 [label="Assert.AreEqual(TimeSpan.MaxValue, (new JValue(TimeSpan.MaxValue).ToObject(typeof(TimeSpan?))))", span="483-483", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_477 [label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime))))", span="484-484", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_478 [label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime?))))", span="485-485", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_479 [label="Assert.AreEqual(DateTimeOffset.MaxValue, (new JValue(DateTimeOffset.MaxValue).ToObject(typeof(DateTimeOffset))))", span="487-487", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_480 [label="Assert.AreEqual(DateTimeOffset.MaxValue, (new JValue(DateTimeOffset.MaxValue).ToObject(typeof(DateTimeOffset?))))", span="488-488", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_481 [label="Assert.AreEqual(''b'', (new JValue(''b'').ToObject(typeof(string))))", span="490-490", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_482 [label="Assert.AreEqual(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C''), (new JValue(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C'')).ToObject(typeof(Guid))))", span="491-491", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_483 [label="Assert.AreEqual(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C''), (new JValue(new Guid(''A34B2080-B5F0-488E-834D-45D44ECB9E5C'')).ToObject(typeof(Guid?))))", span="492-492", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_484 [label="Assert.AreEqual(new Uri(''http://www.google.com/''), (new JValue(new Uri(''http://www.google.com/'')).ToObject(typeof(Uri))))", span="493-493", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_485 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", span="449-449", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JTokenTests.cs"];
m15_258 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JTokenTests.cs"];
m15_544 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="564-564", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m15_545 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="566-572", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m15_546 [label="Assert.AreEqual(a, a.Root)", span="574-574", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m15_547 [label="Assert.AreEqual(a, a[0].Root)", span="575-575", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m15_548 [label="Assert.AreEqual(a, ((JArray)a[2])[0].Root)", span="576-576", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m15_549 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="564-564", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenTests.cs"];
m15_262 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JTokenTests.cs"];
m15_636 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JTokenTests.cs"];
m15_80 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="341-341", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JTokenTests.cs"];
m15_709 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="864-864", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_710 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="866-872", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_711 [label="a[1].AddAfterSelf(''pie'')", span="874-874", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_712 [label="Assert.AreEqual(5, (int)a[0])", span="876-876", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_713 [label="Assert.AreEqual(1, a[1].Count())", span="877-877", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_714 [label="Assert.AreEqual(''pie'', (string)a[2])", span="878-878", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_715 [label="Assert.AreEqual(5, a.Count())", span="879-879", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_716 [label="a[4].AddAfterSelf(''lastpie'')", span="881-881", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_717 [label="Assert.AreEqual(''lastpie'', (string)a[5])", span="883-883", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_718 [label="Assert.AreEqual(''lastpie'', (string)a.Last)", span="884-884", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_719 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="864-864", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JTokenTests.cs"];
m15_249 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="JTokenTests.cs"];
m15_603 [label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="260-260", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JTokenTests.cs"];
m15_591 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="656-656", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs"];
m15_592 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="658-664", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs"];
m15_593 [label="Assert.IsTrue(a.HasValues)", span="666-666", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs"];
m15_594 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="656-656", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenTests.cs"];
m15_679 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JTokenTests.cs"];
m15_81 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JTokenTests.cs"];
m15_79 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JTokenTests.cs"];
m15_254 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="98-98", cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JTokenTests.cs"];
m15_49 [label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="1860-1860", cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JTokenTests.cs"];
m15_33 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="113-113", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="JTokenTests.cs"];
m15_543 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JTokenTests.cs"];
m15_0 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", span="55-55", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_1 [label="JObject o = (JObject)JToken.ReadFrom(new JsonTextReader(new StringReader(''{'pie':true}'')))", span="57-57", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_2 [label="Assert.AreEqual(true, (bool)o[''pie''])", span="58-58", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_3 [label="JArray a = (JArray)JToken.ReadFrom(new JsonTextReader(new StringReader(''[1,2,3]'')))", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_4 [label="Assert.AreEqual(1, (int)a[0])", span="61-61", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_5 [label="Assert.AreEqual(2, (int)a[1])", span="62-62", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_6 [label="Assert.AreEqual(3, (int)a[2])", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_7 [label="JsonReader reader = new JsonTextReader(new StringReader(''{'pie':true}''))", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_8 [label="reader.Read()", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_9 [label="reader.Read()", span="67-67", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_10 [label="JProperty p = (JProperty)JToken.ReadFrom(reader)", span="69-69", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_11 [label="Assert.AreEqual(''pie'', p.Name)", span="70-70", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_12 [label="Assert.AreEqual(true, (bool)p.Value)", span="71-71", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_13 [label="JConstructor c = (JConstructor)JToken.ReadFrom(new JsonTextReader(new StringReader(''new Date(1)'')))", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_14 [label="Assert.AreEqual(''Date'', c.Name)", span="74-74", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_15 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(1), c.Values().ElementAt(0)))", span="75-75", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_16 [label="JValue v", span="77-77", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_17 [label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''''''stringvalue'''''')))", span="79-79", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_18 [label="Assert.AreEqual(''stringvalue'', (string)v)", span="80-80", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_19 [label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''1'')))", span="82-82", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_20 [label="Assert.AreEqual(1, (int)v)", span="83-83", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_21 [label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''1.1'')))", span="85-85", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_22 [label="Assert.AreEqual(1.1, (double)v)", span="86-86", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_23 [label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''''''1970-01-01T00:00:00+12:31''''''))\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="89-92", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_24 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="93-93", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_25 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, new TimeSpan(12, 31, 0)), v.Value)", span="94-94", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_26 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", span="55-55", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenTests.cs"];
m15_750 [label="Entry Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="95-95", cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m15_637 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="736-736", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_638 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="738-744", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_639 [label="a.AddFirst(''First'')", span="746-746", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_640 [label="Assert.AreEqual(''First'', (string)a[0])", span="748-748", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_641 [label="Assert.AreEqual(a, a[0].Parent)", span="749-749", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_642 [label="Assert.AreEqual(a[1], a[0].Next)", span="750-750", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_643 [label="Assert.AreEqual(5, a.Count())", span="751-751", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_644 [label="a.AddFirst(''NewFirst'')", span="753-753", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_645 [label="Assert.AreEqual(''NewFirst'', (string)a[0])", span="754-754", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_646 [label="Assert.AreEqual(a, a[0].Parent)", span="755-755", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_647 [label="Assert.AreEqual(a[1], a[0].Next)", span="756-756", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_648 [label="Assert.AreEqual(6, a.Count())", span="757-757", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_649 [label="Assert.AreEqual(a[0], a[0].Next.Previous)", span="759-759", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_650 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="736-736", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenTests.cs"];
m15_75 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="196-196", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JTokenTests.cs"];
m15_271 [label="Entry Unk.ToByteArray", span="", cluster="Unk.ToByteArray", file="JTokenTests.cs"];
m15_670 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="173-173", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JTokenTests.cs"];
m15_50 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="113-113", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_51 [label="JArray v = new JArray(new JConstructor(''TestConstructor''), new JValue(new DateTime(2000, 12, 20)))", span="115-115", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_52 [label="Assert.AreEqual(null, v.Parent)", span="117-117", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_53 [label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', v),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="119-125", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_54 [label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="127-127", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_55 [label="JProperty p = new JProperty(''NewProperty'', v)", span="129-129", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_56 [label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="132-132", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_57 [label="Assert.AreNotSame(p.Value, v)", span="135-135", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_58 [label="Assert.AreEqual((DateTime)((JValue)p.Value[1]).Value, (DateTime)((JValue)v[1]).Value)", span="137-137", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_59 [label="Assert.AreEqual(v, o[''Test1''])", span="139-139", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_60 [label="Assert.AreEqual(null, o.Parent)", span="141-141", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_61 [label="JProperty o1 = new JProperty(''O1'', o)", span="142-142", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_62 [label="Assert.AreEqual(o, o1.Value)", span="143-143", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_63 [label="Assert.AreNotEqual(null, o.Parent)", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_64 [label="JProperty o2 = new JProperty(''O2'', o)", span="146-146", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_65 [label="Assert.AreNotSame(o1.Value, o2.Value)", span="148-148", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_66 [label="Assert.AreEqual(o1.Value.Children().Count(), o2.Value.Children().Count())", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_67 [label="Assert.AreEqual(false, JToken.DeepEquals(o1, o2))", span="150-150", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_68 [label="Assert.AreEqual(true, JToken.DeepEquals(o1.Value, o2.Value))", span="151-151", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_69 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="113-113", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenTests.cs"];
m15_253 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116", cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JTokenTests.cs"];
m15_604 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="688-688", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_605 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="690-696", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_606 [label="List<JToken> descendants = a.Descendants().ToList()", span="698-698", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_607 [label="Assert.AreEqual(10, descendants.Count())", span="699-699", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_608 [label="Assert.AreEqual(5, (int)descendants[0])", span="700-700", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_609 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 4]))", span="701-701", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_610 [label="Assert.AreEqual(1, (int)descendants[descendants.Count - 3])", span="702-702", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_611 [label="Assert.AreEqual(2, (int)descendants[descendants.Count - 2])", span="703-703", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_612 [label="Assert.AreEqual(3, (int)descendants[descendants.Count - 1])", span="704-704", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_613 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="688-688", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenTests.cs"];
m15_702 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="413-413", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JTokenTests.cs"];
m15_34 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JTokenTests.cs"];
m15_615 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="708-708", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_616 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="710-716", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_617 [label="JsonWriter writer = a.CreateWriter()", span="718-718", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_619 [label="Assert.AreEqual(4, a.Count())", span="720-720", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_621 [label="Assert.AreEqual(5, a.Count())", span="723-723", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_622 [label="Assert.AreEqual(''String'', (string)a[4])", span="724-724", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_627 [label="Assert.AreEqual(6, a.Count())", span="731-731", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_628 [label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''Property'', ''PropertyValue'')), a[5]))", span="732-732", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_618 [label="Assert.IsNotNull(writer)", span="719-719", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_620 [label="writer.WriteValue(''String'')", span="722-722", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_623 [label="writer.WriteStartObject()", span="726-726", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_624 [label="writer.WritePropertyName(''Property'')", span="727-727", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_625 [label="writer.WriteValue(''PropertyValue'')", span="728-728", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_626 [label="writer.WriteEnd()", span="729-729", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_629 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="708-708", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenTests.cs"];
m15_758 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="976-976", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_759 [label="JArray a =\r\n                new JArray(\r\n                    double.NaN,\r\n                    double.PositiveInfinity,\r\n                    double.NegativeInfinity\r\n                    )", span="978-983", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_760 [label="JArray a2 = (JArray)a.DeepClone()", span="985-985", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_761 [label="Assert.IsTrue(a.DeepEquals(a2))", span="987-987", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_762 [label="double d = 1 + 0.1 + 0.1 + 0.1", span="989-989", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_763 [label="JValue v1 = new JValue(d)", span="991-991", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_764 [label="JValue v2 = new JValue(1.3)", span="992-992", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_765 [label="Assert.IsTrue(v1.DeepEquals(v2))", span="994-994", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_766 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="976-976", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JTokenTests.cs"];
m15_27 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JTokenTests.cs"];
m15_488 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="497-497", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_489 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000, 12, 20)), (JValue)new DateTime(2000, 12, 20)))", span="499-499", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_490 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)), (JValue)new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="501-501", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_491 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTimeOffset?)null), (JValue)(DateTimeOffset?)null))", span="502-502", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_492 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new BigInteger(1)), new JValue(new BigInteger(1))))", span="507-507", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_493 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((BigInteger?)null), new JValue((BigInteger?)null)))", span="508-508", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_494 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="510-510", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_495 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="511-511", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_496 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)(bool?)true))", span="512-512", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_497 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((bool?)null), (JValue)(bool?)null))", span="513-513", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_498 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(10), (JValue)10))", span="514-514", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_499 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((long?)null), (JValue)(long?)null))", span="515-515", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_500 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="516-516", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_501 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(long.MaxValue), (JValue)long.MaxValue))", span="517-517", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_502 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((int?)null), (JValue)(int?)null))", span="518-518", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_503 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((short?)null), (JValue)(short?)null))", span="519-519", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_504 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((double?)null), (JValue)(double?)null))", span="520-520", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_505 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((uint?)null), (JValue)(uint?)null))", span="521-521", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_506 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((decimal?)null), (JValue)(decimal?)null))", span="522-522", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_507 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((ulong?)null), (JValue)(ulong?)null))", span="523-523", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_508 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte?)null), (JValue)(sbyte?)null))", span="524-524", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_509 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte)1), (JValue)(sbyte)1))", span="525-525", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_510 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((byte?)null), (JValue)(byte?)null))", span="526-526", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_511 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((byte)1), (JValue)(byte)1))", span="527-527", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_512 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((ushort?)null), (JValue)(ushort?)null))", span="528-528", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_513 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(short.MaxValue), (JValue)short.MaxValue))", span="529-529", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_514 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(ushort.MaxValue), (JValue)ushort.MaxValue))", span="530-530", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_515 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(11.1f), (JValue)11.1f))", span="531-531", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_516 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MinValue), (JValue)float.MinValue))", span="532-532", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_517 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MinValue), (JValue)double.MinValue))", span="533-533", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_518 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(uint.MaxValue), (JValue)uint.MaxValue))", span="534-534", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_519 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MaxValue), (JValue)ulong.MaxValue))", span="535-535", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_520 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MinValue), (JValue)ulong.MinValue))", span="536-536", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_521 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((string)null), (JValue)(string)null))", span="537-537", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_522 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="538-538", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_523 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)decimal.MaxValue))", span="539-539", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_524 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)(decimal?)decimal.MaxValue))", span="540-540", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_525 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MinValue), (JValue)decimal.MinValue))", span="541-541", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_526 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MaxValue), (JValue)(float?)float.MaxValue))", span="542-542", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_527 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MaxValue), (JValue)(double?)double.MaxValue))", span="543-543", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_528 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((object)null), (JValue)(double?)null))", span="544-544", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", color=green, community=0, file="JTokenTests.cs"];
m15_529 [label="Assert.IsFalse(JToken.DeepEquals(new JValue(true), (JValue)(bool?)null))", span="546-546", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_530 [label="Assert.IsFalse(JToken.DeepEquals(new JValue((object)null), (JValue)(object)null))", span="547-547", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", color=green, community=0, file="JTokenTests.cs"];
m15_531 [label="byte[] emptyData = new byte[0]", span="549-549", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_532 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(emptyData), (JValue)emptyData))", span="550-550", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_533 [label="Assert.IsFalse(JToken.DeepEquals(new JValue(emptyData), (JValue)new byte[1]))", span="551-551", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_534 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(Encoding.UTF8.GetBytes(''Hi'')), (JValue)Encoding.UTF8.GetBytes(''Hi'')))", span="552-552", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_535 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)TimeSpan.FromMinutes(1)))", span="554-554", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_536 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((object)null), (JValue)(TimeSpan?)null))", span="555-555", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", color=green, community=0, file="JTokenTests.cs"];
m15_537 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)(TimeSpan?)TimeSpan.FromMinutes(1)))", span="556-556", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_538 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')), (JValue)new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="557-557", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_539 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(new Uri(''http://www.google.com'')), (JValue)new Uri(''http://www.google.com'')))", span="558-558", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_540 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((object)null), (JValue)(Uri)null))", span="559-559", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", color=green, community=0, file="JTokenTests.cs"];
m15_541 [label="Assert.IsTrue(JToken.DeepEquals(new JValue((object)null), (JValue)(Guid?)null))", span="560-560", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", color=green, community=0, file="JTokenTests.cs"];
m15_542 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="497-497", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JTokenTests.cs"];
m15_110 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="90-90", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JTokenTests.cs"];
m15_681 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="807-807", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_682 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="809-815", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_683 [label="a[0].Replace(new JValue(int.MaxValue))", span="817-817", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_684 [label="Assert.AreEqual(int.MaxValue, (int)a[0])", span="818-818", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_685 [label="Assert.AreEqual(4, a.Count())", span="819-819", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_686 [label="a[1][0].Replace(new JValue(''Test''))", span="821-821", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_687 [label="Assert.AreEqual(''Test'', (string)a[1][0])", span="822-822", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_688 [label="a[2].Replace(new JValue(int.MaxValue))", span="824-824", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_689 [label="Assert.AreEqual(int.MaxValue, (int)a[2])", span="825-825", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_690 [label="Assert.AreEqual(4, a.Count())", span="826-826", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_691 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue, new JArray(''Test''), int.MaxValue, new JArray(1, 2, 3)), a))", span="828-828", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_692 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="807-807", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenTests.cs"];
m15_78 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JTokenTests.cs"];
m15_32 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JTokenTests.cs"];
m15_740 [label="Entry Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="247-247", cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JTokenTests.cs"];
m15_317 [label="Entry Unk.>", span="", cluster="Unk.>", file="JTokenTests.cs"];
m15_71 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="110-110", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JTokenTests.cs"];
m15_272 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="386-386", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_273 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Boolean to DateTime.'', () => { var i = (DateTime)new JValue(true); })", span="388-388", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_274 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Integer to DateTime.'', () => { var i = (DateTime)new JValue(1); })", span="389-389", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_275 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Float to DateTime.'', () => { var i = (DateTime)new JValue(1.1); })", span="390-390", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_276 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Float to DateTime.'', () => { var i = (DateTime)new JValue(1.1m); })", span="391-391", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_277 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert TimeSpan to DateTime.'', () => { var i = (DateTime)new JValue(TimeSpan.Zero); })", span="392-392", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_278 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Uri to DateTime.'', () => { var i = (DateTime)new JValue(new Uri(''http://www.google.com'')); })", span="393-393", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_279 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Null to DateTime.'', () => { var i = (DateTime)new JValue((object)null); })", span="394-394", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JTokenTests.cs"];
m15_280 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Guid to DateTime.'', () => { var i = (DateTime)new JValue(Guid.NewGuid()); })", span="395-395", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_281 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Boolean to Uri.'', () => { var i = (Uri)new JValue(true); })", span="397-397", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_282 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Integer to Uri.'', () => { var i = (Uri)new JValue(1); })", span="398-398", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_283 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Float to Uri.'', () => { var i = (Uri)new JValue(1.1); })", span="399-399", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_284 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Float to Uri.'', () => { var i = (Uri)new JValue(1.1m); })", span="400-400", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_285 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert TimeSpan to Uri.'', () => { var i = (Uri)new JValue(TimeSpan.Zero); })", span="401-401", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_286 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Guid to Uri.'', () => { var i = (Uri)new JValue(Guid.NewGuid()); })", span="402-402", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_287 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Date to Uri.'', () => { var i = (Uri)new JValue(DateTime.Now); })", span="403-403", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_288 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Date to Uri.'', () => { var i = (Uri)new JValue(DateTimeOffset.Now); })", span="405-405", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_289 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Boolean to TimeSpan.'', () => { var i = (TimeSpan)new JValue(true); })", span="408-408", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_290 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Integer to TimeSpan.'', () => { var i = (TimeSpan)new JValue(1); })", span="409-409", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_291 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Float to TimeSpan.'', () => { var i = (TimeSpan)new JValue(1.1); })", span="410-410", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_292 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Float to TimeSpan.'', () => { var i = (TimeSpan)new JValue(1.1m); })", span="411-411", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_293 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Null to TimeSpan.'', () => { var i = (TimeSpan)new JValue((object)null); })", span="412-412", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JTokenTests.cs"];
m15_294 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Guid to TimeSpan.'', () => { var i = (TimeSpan)new JValue(Guid.NewGuid()); })", span="413-413", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_295 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Date to TimeSpan.'', () => { var i = (TimeSpan)new JValue(DateTime.Now); })", span="414-414", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_296 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Date to TimeSpan.'', () => { var i = (TimeSpan)new JValue(DateTimeOffset.Now); })", span="416-416", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_297 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Uri to TimeSpan.'', () => { var i = (TimeSpan)new JValue(new Uri(''http://www.google.com'')); })", span="418-418", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_298 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Boolean to Guid.'', () => { var i = (Guid)new JValue(true); })", span="420-420", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_299 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Integer to Guid.'', () => { var i = (Guid)new JValue(1); })", span="421-421", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_300 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Float to Guid.'', () => { var i = (Guid)new JValue(1.1); })", span="422-422", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_301 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Float to Guid.'', () => { var i = (Guid)new JValue(1.1m); })", span="423-423", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_302 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Null to Guid.'', () => { var i = (Guid)new JValue((object)null); })", span="424-424", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JTokenTests.cs"];
m15_303 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Date to Guid.'', () => { var i = (Guid)new JValue(DateTime.Now); })", span="425-425", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_304 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Date to Guid.'', () => { var i = (Guid)new JValue(DateTimeOffset.Now); })", span="427-427", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_305 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert TimeSpan to Guid.'', () => { var i = (Guid)new JValue(TimeSpan.FromMinutes(1)); })", span="429-429", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_306 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Uri to Guid.'', () => { var i = (Guid)new JValue(new Uri(''http://www.google.com'')); })", span="430-430", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_307 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Boolean to DateTimeOffset.'', () => { var i = (DateTimeOffset)new JValue(true); })", span="433-433", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_308 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Boolean to Uri.'', () => { var i = (Uri)new JValue(true); })", span="435-435", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_309 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Uri to BigInteger.'', () => { var i = (new JValue(new Uri(''http://www.google.com''))).ToObject<BigInteger>(); })", span="438-438", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_310 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Null to BigInteger.'', () => { var i = (new JValue((object)null)).ToObject<BigInteger>(); })", span="439-439", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JTokenTests.cs"];
m15_311 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Guid to BigInteger.'', () => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>(); })", span="440-440", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_312 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Guid to BigInteger.'', () => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>(); })", span="441-441", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_313 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Date to SByte.'', () => { var i = (sbyte?)new JValue(DateTime.Now); })", span="444-444", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_314 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Date to SByte.'', () => { var i = (sbyte)new JValue(DateTime.Now); })", span="445-445", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_315 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="386-386", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JTokenTests.cs"];
m15_269 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1687-1687", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JTokenTests.cs"];
m15_76 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="186-186", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JTokenTests.cs"];
m15_250 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JTokenTests.cs"];
m15_635 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JTokenTests.cs"];
m15_39 [label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JTokenTests.cs"];
m15_31 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365", cluster="Newtonsoft.Json.JsonReader.Read()", file="JTokenTests.cs"];
m15_704 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="851-851", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m15_705 [label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="853-856", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m15_706 [label="string json = a.ToString(Formatting.None, new IsoDateTimeConverter())", span="858-858", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m15_707 [label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="860-860", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m15_708 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="851-851", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JTokenTests.cs"];
m15_82 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="155-155", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_83 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="157-163", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_84 [label="JToken next = a[0].Next", span="165-165", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_85 [label="Assert.AreEqual(6, (int)next)", span="166-166", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_86 [label="next = next.Next", span="168-168", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_87 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), next))", span="169-169", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_88 [label="next = next.Next", span="171-171", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_89 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), next))", span="172-172", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_90 [label="next = next.Next", span="174-174", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_91 [label="Assert.IsNull(next)", span="175-175", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_92 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="155-155", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenTests.cs"];
m15_795 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1923-1923", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JTokenTests.cs"];
m15_486 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1697-1697", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JTokenTests.cs"];
m15_94 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="179-179", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_95 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="181-187", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_96 [label="JToken previous = a[3].Previous", span="189-189", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_97 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), previous))", span="190-190", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_98 [label="previous = previous.Previous", span="192-192", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_99 [label="Assert.AreEqual(6, (int)previous)", span="193-193", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_100 [label="previous = previous.Previous", span="195-195", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_101 [label="Assert.AreEqual(5, (int)previous)", span="196-196", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_102 [label="previous = previous.Previous", span="198-198", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_103 [label="Assert.IsNull(previous)", span="199-199", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_104 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="179-179", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenTests.cs"];
m15_255 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JTokenTests.cs"];
m15_749 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JTokenTests.cs"];
m15_632 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenTests.cs"];
m15_694 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="832-832", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m15_695 [label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="834-837", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m15_696 [label="string json = a.ToString(Formatting.Indented, new IsoDateTimeConverter())", span="839-839", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m15_698 [label="json = JsonConvert.SerializeObject(a, new IsoDateTimeConverter())", span="845-845", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m15_697 [label="Assert.AreEqual(@''[\r\n  ''''2009-02-15T00:00:00Z''''\r\n]'', json)", span="841-843", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m15_699 [label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="847-847", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m15_700 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="832-832", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JTokenTests.cs"];
m15_30 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JTokenTests.cs"];
m15_261 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JTokenTests.cs"];
m15_634 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenTests.cs"];
m15_105 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="203-203", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenTests.cs"];
m15_106 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="205-211", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenTests.cs"];
m15_107 [label="Assert.AreEqual(4, a.Count())", span="213-213", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenTests.cs"];
m15_108 [label="Assert.AreEqual(3, a.Children<JArray>().Count())", span="214-214", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenTests.cs"];
m15_109 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="203-203", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenTests.cs"];
m15_265 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JTokenTests.cs"];
m15_73 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JTokenTests.cs"];
m15_117 [label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="287-287", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JTokenTests.cs"];
m15_631 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JTokenTests.cs"];
m15_251 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JTokenTests.cs"];
m15_247 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JTokenTests.cs"];
m15_38 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JTokenTests.cs"];
m15_37 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JTokenTests.cs"];
m15_771 [label="Entry lambda expression", span="1001-1010", cluster="lambda expression", file="JTokenTests.cs"];
m15_318 [label="Entry lambda expression", span="388-388", cluster="lambda expression", file="JTokenTests.cs"];
m15_321 [label="Entry lambda expression", span="389-389", cluster="lambda expression", file="JTokenTests.cs"];
m15_324 [label="Entry lambda expression", span="390-390", cluster="lambda expression", file="JTokenTests.cs"];
m15_327 [label="Entry lambda expression", span="391-391", cluster="lambda expression", file="JTokenTests.cs"];
m15_330 [label="Entry lambda expression", span="392-392", cluster="lambda expression", file="JTokenTests.cs"];
m15_333 [label="Entry lambda expression", span="393-393", cluster="lambda expression", file="JTokenTests.cs"];
m15_336 [label="Entry lambda expression", span="394-394", cluster="lambda expression", file="JTokenTests.cs"];
m15_339 [label="Entry lambda expression", span="395-395", cluster="lambda expression", file="JTokenTests.cs"];
m15_343 [label="Entry lambda expression", span="397-397", cluster="lambda expression", file="JTokenTests.cs"];
m15_346 [label="Entry lambda expression", span="398-398", cluster="lambda expression", file="JTokenTests.cs"];
m15_349 [label="Entry lambda expression", span="399-399", cluster="lambda expression", file="JTokenTests.cs"];
m15_352 [label="Entry lambda expression", span="400-400", cluster="lambda expression", file="JTokenTests.cs"];
m15_355 [label="Entry lambda expression", span="401-401", cluster="lambda expression", file="JTokenTests.cs"];
m15_358 [label="Entry lambda expression", span="402-402", cluster="lambda expression", file="JTokenTests.cs"];
m15_361 [label="Entry lambda expression", span="403-403", cluster="lambda expression", file="JTokenTests.cs"];
m15_364 [label="Entry lambda expression", span="405-405", cluster="lambda expression", file="JTokenTests.cs"];
m15_367 [label="Entry lambda expression", span="408-408", cluster="lambda expression", file="JTokenTests.cs"];
m15_370 [label="Entry lambda expression", span="409-409", cluster="lambda expression", file="JTokenTests.cs"];
m15_373 [label="Entry lambda expression", span="410-410", cluster="lambda expression", file="JTokenTests.cs"];
m15_376 [label="Entry lambda expression", span="411-411", cluster="lambda expression", file="JTokenTests.cs"];
m15_379 [label="Entry lambda expression", span="412-412", cluster="lambda expression", file="JTokenTests.cs"];
m15_382 [label="Entry lambda expression", span="413-413", cluster="lambda expression", file="JTokenTests.cs"];
m15_385 [label="Entry lambda expression", span="414-414", cluster="lambda expression", file="JTokenTests.cs"];
m15_388 [label="Entry lambda expression", span="416-416", cluster="lambda expression", file="JTokenTests.cs"];
m15_391 [label="Entry lambda expression", span="418-418", cluster="lambda expression", file="JTokenTests.cs"];
m15_394 [label="Entry lambda expression", span="420-420", cluster="lambda expression", file="JTokenTests.cs"];
m15_397 [label="Entry lambda expression", span="421-421", cluster="lambda expression", file="JTokenTests.cs"];
m15_400 [label="Entry lambda expression", span="422-422", cluster="lambda expression", file="JTokenTests.cs"];
m15_403 [label="Entry lambda expression", span="423-423", cluster="lambda expression", file="JTokenTests.cs"];
m15_406 [label="Entry lambda expression", span="424-424", cluster="lambda expression", file="JTokenTests.cs"];
m15_409 [label="Entry lambda expression", span="425-425", cluster="lambda expression", file="JTokenTests.cs"];
m15_412 [label="Entry lambda expression", span="427-427", cluster="lambda expression", file="JTokenTests.cs"];
m15_415 [label="Entry lambda expression", span="429-429", cluster="lambda expression", file="JTokenTests.cs"];
m15_418 [label="Entry lambda expression", span="430-430", cluster="lambda expression", file="JTokenTests.cs"];
m15_421 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="JTokenTests.cs"];
m15_424 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="JTokenTests.cs"];
m15_427 [label="Entry lambda expression", span="438-438", cluster="lambda expression", file="JTokenTests.cs"];
m15_430 [label="Entry lambda expression", span="439-439", cluster="lambda expression", file="JTokenTests.cs"];
m15_433 [label="Entry lambda expression", span="440-440", cluster="lambda expression", file="JTokenTests.cs"];
m15_436 [label="Entry lambda expression", span="441-441", cluster="lambda expression", file="JTokenTests.cs"];
m15_439 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="JTokenTests.cs"];
m15_442 [label="Entry lambda expression", span="445-445", cluster="lambda expression", file="JTokenTests.cs"];
m15_319 [label="var i = (DateTime)new JValue(true)", span="388-388", cluster="lambda expression", file="JTokenTests.cs"];
m15_320 [label="Exit lambda expression", span="388-388", cluster="lambda expression", file="JTokenTests.cs"];
m15_322 [label="var i = (DateTime)new JValue(1)", span="389-389", cluster="lambda expression", file="JTokenTests.cs"];
m15_323 [label="Exit lambda expression", span="389-389", cluster="lambda expression", file="JTokenTests.cs"];
m15_325 [label="var i = (DateTime)new JValue(1.1)", span="390-390", cluster="lambda expression", file="JTokenTests.cs"];
m15_326 [label="Exit lambda expression", span="390-390", cluster="lambda expression", file="JTokenTests.cs"];
m15_328 [label="var i = (DateTime)new JValue(1.1m)", span="391-391", cluster="lambda expression", file="JTokenTests.cs"];
m15_329 [label="Exit lambda expression", span="391-391", cluster="lambda expression", file="JTokenTests.cs"];
m15_331 [label="var i = (DateTime)new JValue(TimeSpan.Zero)", span="392-392", cluster="lambda expression", file="JTokenTests.cs"];
m15_332 [label="Exit lambda expression", span="392-392", cluster="lambda expression", file="JTokenTests.cs"];
m15_334 [label="var i = (DateTime)new JValue(new Uri(''http://www.google.com''))", span="393-393", cluster="lambda expression", file="JTokenTests.cs"];
m15_335 [label="Exit lambda expression", span="393-393", cluster="lambda expression", file="JTokenTests.cs"];
m15_337 [label="var i = (DateTime)new JValue((object)null)", span="394-394", cluster="lambda expression", color=green, community=0, file="JTokenTests.cs"];
m15_338 [label="Exit lambda expression", span="394-394", cluster="lambda expression", file="JTokenTests.cs"];
m15_340 [label="var i = (DateTime)new JValue(Guid.NewGuid())", span="395-395", cluster="lambda expression", file="JTokenTests.cs"];
m15_341 [label="Exit lambda expression", span="395-395", cluster="lambda expression", file="JTokenTests.cs"];
m15_344 [label="var i = (Uri)new JValue(true)", span="397-397", cluster="lambda expression", file="JTokenTests.cs"];
m15_345 [label="Exit lambda expression", span="397-397", cluster="lambda expression", file="JTokenTests.cs"];
m15_347 [label="var i = (Uri)new JValue(1)", span="398-398", cluster="lambda expression", file="JTokenTests.cs"];
m15_348 [label="Exit lambda expression", span="398-398", cluster="lambda expression", file="JTokenTests.cs"];
m15_350 [label="var i = (Uri)new JValue(1.1)", span="399-399", cluster="lambda expression", file="JTokenTests.cs"];
m15_351 [label="Exit lambda expression", span="399-399", cluster="lambda expression", file="JTokenTests.cs"];
m15_353 [label="var i = (Uri)new JValue(1.1m)", span="400-400", cluster="lambda expression", file="JTokenTests.cs"];
m15_354 [label="Exit lambda expression", span="400-400", cluster="lambda expression", file="JTokenTests.cs"];
m15_356 [label="var i = (Uri)new JValue(TimeSpan.Zero)", span="401-401", cluster="lambda expression", file="JTokenTests.cs"];
m15_357 [label="Exit lambda expression", span="401-401", cluster="lambda expression", file="JTokenTests.cs"];
m15_359 [label="var i = (Uri)new JValue(Guid.NewGuid())", span="402-402", cluster="lambda expression", file="JTokenTests.cs"];
m15_360 [label="Exit lambda expression", span="402-402", cluster="lambda expression", file="JTokenTests.cs"];
m15_362 [label="var i = (Uri)new JValue(DateTime.Now)", span="403-403", cluster="lambda expression", file="JTokenTests.cs"];
m15_363 [label="Exit lambda expression", span="403-403", cluster="lambda expression", file="JTokenTests.cs"];
m15_365 [label="var i = (Uri)new JValue(DateTimeOffset.Now)", span="405-405", cluster="lambda expression", file="JTokenTests.cs"];
m15_366 [label="Exit lambda expression", span="405-405", cluster="lambda expression", file="JTokenTests.cs"];
m15_368 [label="var i = (TimeSpan)new JValue(true)", span="408-408", cluster="lambda expression", file="JTokenTests.cs"];
m15_369 [label="Exit lambda expression", span="408-408", cluster="lambda expression", file="JTokenTests.cs"];
m15_371 [label="var i = (TimeSpan)new JValue(1)", span="409-409", cluster="lambda expression", file="JTokenTests.cs"];
m15_372 [label="Exit lambda expression", span="409-409", cluster="lambda expression", file="JTokenTests.cs"];
m15_374 [label="var i = (TimeSpan)new JValue(1.1)", span="410-410", cluster="lambda expression", file="JTokenTests.cs"];
m15_375 [label="Exit lambda expression", span="410-410", cluster="lambda expression", file="JTokenTests.cs"];
m15_377 [label="var i = (TimeSpan)new JValue(1.1m)", span="411-411", cluster="lambda expression", file="JTokenTests.cs"];
m15_378 [label="Exit lambda expression", span="411-411", cluster="lambda expression", file="JTokenTests.cs"];
m15_380 [label="var i = (TimeSpan)new JValue((object)null)", span="412-412", cluster="lambda expression", color=green, community=0, file="JTokenTests.cs"];
m15_381 [label="Exit lambda expression", span="412-412", cluster="lambda expression", file="JTokenTests.cs"];
m15_383 [label="var i = (TimeSpan)new JValue(Guid.NewGuid())", span="413-413", cluster="lambda expression", file="JTokenTests.cs"];
m15_384 [label="Exit lambda expression", span="413-413", cluster="lambda expression", file="JTokenTests.cs"];
m15_386 [label="var i = (TimeSpan)new JValue(DateTime.Now)", span="414-414", cluster="lambda expression", file="JTokenTests.cs"];
m15_387 [label="Exit lambda expression", span="414-414", cluster="lambda expression", file="JTokenTests.cs"];
m15_389 [label="var i = (TimeSpan)new JValue(DateTimeOffset.Now)", span="416-416", cluster="lambda expression", file="JTokenTests.cs"];
m15_390 [label="Exit lambda expression", span="416-416", cluster="lambda expression", file="JTokenTests.cs"];
m15_392 [label="var i = (TimeSpan)new JValue(new Uri(''http://www.google.com''))", span="418-418", cluster="lambda expression", file="JTokenTests.cs"];
m15_393 [label="Exit lambda expression", span="418-418", cluster="lambda expression", file="JTokenTests.cs"];
m15_395 [label="var i = (Guid)new JValue(true)", span="420-420", cluster="lambda expression", file="JTokenTests.cs"];
m15_396 [label="Exit lambda expression", span="420-420", cluster="lambda expression", file="JTokenTests.cs"];
m15_398 [label="var i = (Guid)new JValue(1)", span="421-421", cluster="lambda expression", file="JTokenTests.cs"];
m15_399 [label="Exit lambda expression", span="421-421", cluster="lambda expression", file="JTokenTests.cs"];
m15_401 [label="var i = (Guid)new JValue(1.1)", span="422-422", cluster="lambda expression", file="JTokenTests.cs"];
m15_402 [label="Exit lambda expression", span="422-422", cluster="lambda expression", file="JTokenTests.cs"];
m15_404 [label="var i = (Guid)new JValue(1.1m)", span="423-423", cluster="lambda expression", file="JTokenTests.cs"];
m15_405 [label="Exit lambda expression", span="423-423", cluster="lambda expression", file="JTokenTests.cs"];
m15_407 [label="var i = (Guid)new JValue((object)null)", span="424-424", cluster="lambda expression", color=green, community=0, file="JTokenTests.cs"];
m15_408 [label="Exit lambda expression", span="424-424", cluster="lambda expression", file="JTokenTests.cs"];
m15_410 [label="var i = (Guid)new JValue(DateTime.Now)", span="425-425", cluster="lambda expression", file="JTokenTests.cs"];
m15_411 [label="Exit lambda expression", span="425-425", cluster="lambda expression", file="JTokenTests.cs"];
m15_413 [label="var i = (Guid)new JValue(DateTimeOffset.Now)", span="427-427", cluster="lambda expression", file="JTokenTests.cs"];
m15_414 [label="Exit lambda expression", span="427-427", cluster="lambda expression", file="JTokenTests.cs"];
m15_416 [label="var i = (Guid)new JValue(TimeSpan.FromMinutes(1))", span="429-429", cluster="lambda expression", file="JTokenTests.cs"];
m15_417 [label="Exit lambda expression", span="429-429", cluster="lambda expression", file="JTokenTests.cs"];
m15_419 [label="var i = (Guid)new JValue(new Uri(''http://www.google.com''))", span="430-430", cluster="lambda expression", file="JTokenTests.cs"];
m15_420 [label="Exit lambda expression", span="430-430", cluster="lambda expression", file="JTokenTests.cs"];
m15_422 [label="var i = (DateTimeOffset)new JValue(true)", span="433-433", cluster="lambda expression", file="JTokenTests.cs"];
m15_423 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="JTokenTests.cs"];
m15_425 [label="var i = (Uri)new JValue(true)", span="435-435", cluster="lambda expression", file="JTokenTests.cs"];
m15_426 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="JTokenTests.cs"];
m15_428 [label="var i = (new JValue(new Uri(''http://www.google.com''))).ToObject<BigInteger>()", span="438-438", cluster="lambda expression", file="JTokenTests.cs"];
m15_429 [label="Exit lambda expression", span="438-438", cluster="lambda expression", file="JTokenTests.cs"];
m15_431 [label="var i = (new JValue((object)null)).ToObject<BigInteger>()", span="439-439", cluster="lambda expression", color=green, community=0, file="JTokenTests.cs"];
m15_432 [label="Exit lambda expression", span="439-439", cluster="lambda expression", file="JTokenTests.cs"];
m15_434 [label="var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>()", span="440-440", cluster="lambda expression", file="JTokenTests.cs"];
m15_435 [label="Exit lambda expression", span="440-440", cluster="lambda expression", file="JTokenTests.cs"];
m15_437 [label="var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>()", span="441-441", cluster="lambda expression", file="JTokenTests.cs"];
m15_438 [label="Exit lambda expression", span="441-441", cluster="lambda expression", file="JTokenTests.cs"];
m15_440 [label="var i = (sbyte?)new JValue(DateTime.Now)", span="444-444", cluster="lambda expression", file="JTokenTests.cs"];
m15_441 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="JTokenTests.cs"];
m15_443 [label="var i = (sbyte)new JValue(DateTime.Now)", span="445-445", cluster="lambda expression", file="JTokenTests.cs"];
m15_444 [label="Exit lambda expression", span="445-445", cluster="lambda expression", file="JTokenTests.cs"];
m15_665 [label="Entry lambda expression", span="787-791", cluster="lambda expression", file="JTokenTests.cs"];
m15_666 [label="JArray a = new JArray()", span="789-789", cluster="lambda expression", file="JTokenTests.cs"];
m15_667 [label="a.Add(new JProperty(''PropertyName''))", span="790-790", cluster="lambda expression", file="JTokenTests.cs"];
m15_668 [label="Exit lambda expression", span="787-791", cluster="lambda expression", file="JTokenTests.cs"];
m15_675 [label="Entry lambda expression", span="799-803", cluster="lambda expression", file="JTokenTests.cs"];
m15_676 [label="JObject o = new JObject()", span="801-801", cluster="lambda expression", file="JTokenTests.cs"];
m15_677 [label="o.Add(5)", span="802-802", cluster="lambda expression", file="JTokenTests.cs"];
m15_678 [label="Exit lambda expression", span="799-803", cluster="lambda expression", file="JTokenTests.cs"];
m15_772 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="1003-1007", cluster="lambda expression", file="JTokenTests.cs"];
m15_773 [label="JToken.Parse(json)", span="1009-1009", cluster="lambda expression", file="JTokenTests.cs"];
m15_774 [label="Exit lambda expression", span="1001-1010", cluster="lambda expression", file="JTokenTests.cs"];
m15_29 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1827-1827", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JTokenTests.cs"];
m15_669 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="64-64", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JTokenTests.cs"];
m15_582 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JTokenTests.cs"];
m15_633 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JTokenTests.cs"];
m15_550 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="580-580", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_551 [label="JToken t", span="582-582", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_552 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="583-589", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_553 [label="a[0].Remove()", span="591-591", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_554 [label="Assert.AreEqual(6, (int)a[0])", span="593-593", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_555 [label="a[1].Remove()", span="595-595", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_556 [label="Assert.AreEqual(6, (int)a[0])", span="597-597", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_557 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), a[1]))", span="598-598", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_558 [label="Assert.AreEqual(2, a.Count())", span="599-599", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_559 [label="t = a[1]", span="601-601", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_561 [label="Assert.AreEqual(6, (int)a[0])", span="603-603", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_565 [label="t = a[0]", span="608-608", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_567 [label="Assert.AreEqual(0, a.Count())", span="610-610", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_560 [label="t.Remove()", span="602-602", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_562 [label="Assert.IsNull(t.Next)", span="604-604", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_563 [label="Assert.IsNull(t.Previous)", span="605-605", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_564 [label="Assert.IsNull(t.Parent)", span="606-606", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_566 [label="t.Remove()", span="609-609", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_568 [label="Assert.IsNull(t.Next)", span="612-612", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_569 [label="Assert.IsNull(t.Previous)", span="613-613", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_570 [label="Assert.IsNull(t.Parent)", span="614-614", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_571 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="580-580", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenTests.cs"];
m15_487 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JTokenTests.cs"];
m15_28 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JTokenTests.cs"];
m15_316 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JTokenTests.cs"];
m15_583 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="637-637", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m15_584 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="639-645", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m15_585 [label="JToken t = a[2]", span="647-647", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m15_586 [label="List<JToken> beforeTokens = t.BeforeSelf().ToList()", span="648-648", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m15_587 [label="Assert.AreEqual(2, beforeTokens.Count)", span="650-650", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m15_588 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(5), beforeTokens[0]))", span="651-651", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m15_589 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1), beforeTokens[1]))", span="652-652", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m15_590 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="637-637", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenTests.cs"];
m15_693 [label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="381-381", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m15_77 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="205-205", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JTokenTests.cs"];
m15_748 [label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2015-2015", cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JTokenTests.cs"];
m15_270 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JTokenTests.cs"];
m15_111 [label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="351-351", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JTokenTests.cs"];
m15_573 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="618-618", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m15_574 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="620-626", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m15_575 [label="JToken t = a[1]", span="628-628", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m15_576 [label="List<JToken> afterTokens = t.AfterSelf().ToList()", span="629-629", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m15_577 [label="Assert.AreEqual(2, afterTokens.Count)", span="631-631", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m15_578 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2), afterTokens[0]))", span="632-632", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m15_579 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), afterTokens[1]))", span="633-633", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m15_580 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="618-618", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenTests.cs"];
m15_595 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="670-670", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m15_596 [label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="672-678", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m15_597 [label="JToken t = a[1][0]", span="680-680", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m15_600 [label="Assert.AreEqual(a[1], ancestors[0])", span="683-683", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m15_601 [label="Assert.AreEqual(a, ancestors[1])", span="684-684", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m15_598 [label="List<JToken> ancestors = t.Ancestors().ToList()", span="681-681", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m15_599 [label="Assert.AreEqual(2, ancestors.Count())", span="682-682", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m15_602 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="670-670", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenTests.cs"];
m15_45 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs"];
m15_46 [label="JObject o = (JObject)JToken.Parse(''{'pie':true}'')", span="108-108", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs"];
m15_47 [label="Assert.AreEqual(true, (bool)o[''pie''])", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs"];
m15_48 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JTokenTests.cs"];
m15_266 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="JTokenTests.cs"];
m15_680 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="550-550", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JTokenTests.cs"];
m15_767 [label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m15_703 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JTokenTests.cs"];
m15_757 [label="Entry System.ICloneable.Clone()", span="0-0", cluster="System.ICloneable.Clone()", file="JTokenTests.cs"];
m15_118 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="234-234", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_119 [label="Assert.AreEqual(1L, (long)(new JValue(1)))", span="236-236", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_120 [label="Assert.AreEqual(2L, (long)new JArray(1, 2, 3)[1])", span="237-237", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_121 [label="Assert.AreEqual(new DateTime(2000, 12, 20), (DateTime)new JValue(new DateTime(2000, 12, 20)))", span="239-239", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_122 [label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 0, 0, 0, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTime(2000, 12, 20, 0, 0, 0, DateTimeKind.Utc)))", span="241-241", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_123 [label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="242-242", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_124 [label="Assert.AreEqual(null, (DateTimeOffset?)new JValue((DateTimeOffset?)null))", span="243-243", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_125 [label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="244-244", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_126 [label="Assert.AreEqual(true, (bool)new JValue(true))", span="246-246", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_127 [label="Assert.AreEqual(true, (bool?)new JValue(true))", span="247-247", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_128 [label="Assert.AreEqual(null, (bool?)((JValue)null))", span="248-248", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_129 [label="Assert.AreEqual(null, (bool?)new JValue((object)null))", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", color=green, community=0, file="JTokenTests.cs"];
m15_130 [label="Assert.AreEqual(10, (long)new JValue(10))", span="250-250", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_131 [label="Assert.AreEqual(null, (long?)new JValue((long?)null))", span="251-251", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_132 [label="Assert.AreEqual(null, (long?)(JValue)null)", span="252-252", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_133 [label="Assert.AreEqual(null, (int?)new JValue((int?)null))", span="253-253", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_134 [label="Assert.AreEqual(null, (int?)(JValue)null)", span="254-254", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_135 [label="Assert.AreEqual(null, (DateTime?)new JValue((DateTime?)null))", span="255-255", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_136 [label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="256-256", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_137 [label="Assert.AreEqual(null, (short?)new JValue((short?)null))", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_138 [label="Assert.AreEqual(null, (short?)(JValue)null)", span="258-258", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_139 [label="Assert.AreEqual(null, (float?)new JValue((float?)null))", span="259-259", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_140 [label="Assert.AreEqual(null, (float?)(JValue)null)", span="260-260", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_141 [label="Assert.AreEqual(null, (double?)new JValue((double?)null))", span="261-261", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_142 [label="Assert.AreEqual(null, (double?)(JValue)null)", span="262-262", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_143 [label="Assert.AreEqual(null, (decimal?)new JValue((decimal?)null))", span="263-263", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_144 [label="Assert.AreEqual(null, (decimal?)(JValue)null)", span="264-264", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_145 [label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="265-265", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_146 [label="Assert.AreEqual(null, (uint?)(JValue)null)", span="266-266", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_147 [label="Assert.AreEqual(null, (sbyte?)new JValue((sbyte?)null))", span="267-267", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_148 [label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="268-268", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_149 [label="Assert.AreEqual(null, (byte?)new JValue((byte?)null))", span="269-269", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_150 [label="Assert.AreEqual(null, (byte?)(JValue)null)", span="270-270", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_151 [label="Assert.AreEqual(null, (ulong?)new JValue((ulong?)null))", span="271-271", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_152 [label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="272-272", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_153 [label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="273-273", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_154 [label="Assert.AreEqual(null, (uint?)(JValue)null)", span="274-274", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_155 [label="Assert.AreEqual(11.1f, (float)new JValue(11.1))", span="275-275", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_156 [label="Assert.AreEqual(float.MinValue, (float)new JValue(float.MinValue))", span="276-276", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_157 [label="Assert.AreEqual(1.1, (double)new JValue(1.1))", span="277-277", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_158 [label="Assert.AreEqual(uint.MaxValue, (uint)new JValue(uint.MaxValue))", span="278-278", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_159 [label="Assert.AreEqual(ulong.MaxValue, (ulong)new JValue(ulong.MaxValue))", span="279-279", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_160 [label="Assert.AreEqual(ulong.MaxValue, (ulong)new JProperty(''Test'', new JValue(ulong.MaxValue)))", span="280-280", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_161 [label="Assert.AreEqual(null, (string)new JValue((string)null))", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_162 [label="Assert.AreEqual(5m, (decimal)(new JValue(5L)))", span="282-282", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_163 [label="Assert.AreEqual(5m, (decimal?)(new JValue(5L)))", span="283-283", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_164 [label="Assert.AreEqual(5f, (float)(new JValue(5L)))", span="284-284", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_165 [label="Assert.AreEqual(5f, (float)(new JValue(5m)))", span="285-285", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_166 [label="Assert.AreEqual(5f, (float?)(new JValue(5m)))", span="286-286", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_167 [label="Assert.AreEqual(5, (byte)(new JValue(5)))", span="287-287", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_168 [label="Assert.AreEqual(null, (sbyte?)new JValue((object)null))", span="289-289", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", color=green, community=0, file="JTokenTests.cs"];
m15_169 [label="Assert.AreEqual(''1'', (string)(new JValue(1)))", span="291-291", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_170 [label="Assert.AreEqual(''1'', (string)(new JValue(1.0)))", span="292-292", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_171 [label="Assert.AreEqual(''1.0'', (string)(new JValue(1.0m)))", span="293-293", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_172 [label="Assert.AreEqual(''True'', (string)(new JValue(true)))", span="294-294", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_173 [label="Assert.AreEqual(null, (string)(new JValue((object)null)))", span="295-295", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", color=green, community=0, file="JTokenTests.cs"];
m15_174 [label="Assert.AreEqual(null, (string)(JValue)null)", span="296-296", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_175 [label="Assert.AreEqual(''12/12/2000 12:12:12'', (string)(new JValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))))", span="297-297", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_176 [label="Assert.AreEqual(''12/12/2000 12:12:12 +00:00'', (string)(new JValue(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero))))", span="299-299", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_177 [label="Assert.AreEqual(true, (bool)(new JValue(1)))", span="301-301", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_178 [label="Assert.AreEqual(true, (bool)(new JValue(1.0)))", span="302-302", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_179 [label="Assert.AreEqual(true, (bool)(new JValue(''true'')))", span="303-303", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_180 [label="Assert.AreEqual(true, (bool)(new JValue(true)))", span="304-304", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_181 [label="Assert.AreEqual(1, (int)(new JValue(1)))", span="305-305", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_182 [label="Assert.AreEqual(1, (int)(new JValue(1.0)))", span="306-306", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_183 [label="Assert.AreEqual(1, (int)(new JValue(''1'')))", span="307-307", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_184 [label="Assert.AreEqual(1, (int)(new JValue(true)))", span="308-308", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_185 [label="Assert.AreEqual(1m, (decimal)(new JValue(1)))", span="309-309", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_186 [label="Assert.AreEqual(1m, (decimal)(new JValue(1.0)))", span="310-310", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_187 [label="Assert.AreEqual(1m, (decimal)(new JValue(''1'')))", span="311-311", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_188 [label="Assert.AreEqual(1m, (decimal)(new JValue(true)))", span="312-312", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_189 [label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(TimeSpan.FromMinutes(1))))", span="313-313", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_190 [label="Assert.AreEqual(''00:01:00'', (string)(new JValue(TimeSpan.FromMinutes(1))))", span="314-314", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_191 [label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(''00:01:00'')))", span="315-315", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_192 [label="Assert.AreEqual(''46efe013-b56a-4e83-99e4-4dce7678a5bc'', (string)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="316-316", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_193 [label="Assert.AreEqual(''http://www.google.com/'', (string)(new JValue(new Uri(''http://www.google.com''))))", span="317-317", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_194 [label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="318-318", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_195 [label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="319-319", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_196 [label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(''http://www.google.com'')))", span="320-320", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_197 [label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(new Uri(''http://www.google.com''))))", span="321-321", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_198 [label="Assert.AreEqual(null, (Uri)(new JValue((object)null)))", span="322-322", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", color=green, community=0, file="JTokenTests.cs"];
m15_199 [label="Assert.AreEqual(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')), (string)(new JValue(Encoding.UTF8.GetBytes(''hi''))))", span="323-323", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_200 [label="CollectionAssert.AreEquivalent((byte[])Encoding.UTF8.GetBytes(''hi''), (byte[])(new JValue(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')))))", span="324-324", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_201 [label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="325-325", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_202 [label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid?)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="326-326", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_203 [label="Assert.AreEqual((sbyte?)1, (sbyte?)(new JValue((short?)1)))", span="327-327", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_204 [label="Assert.AreEqual(null, (Uri)(JValue)null)", span="329-329", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_205 [label="Assert.AreEqual(null, (int?)(JValue)null)", span="330-330", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_206 [label="Assert.AreEqual(null, (uint?)(JValue)null)", span="331-331", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_207 [label="Assert.AreEqual(null, (Guid?)(JValue)null)", span="332-332", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_208 [label="Assert.AreEqual(null, (TimeSpan?)(JValue)null)", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_209 [label="Assert.AreEqual(null, (byte[])(JValue)null)", span="334-334", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_210 [label="Assert.AreEqual(null, (bool?)(JValue)null)", span="335-335", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_211 [label="Assert.AreEqual(null, (char?)(JValue)null)", span="336-336", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_212 [label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="337-337", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_213 [label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="339-339", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_214 [label="Assert.AreEqual(null, (short?)(JValue)null)", span="341-341", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_215 [label="Assert.AreEqual(null, (ushort?)(JValue)null)", span="342-342", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_216 [label="Assert.AreEqual(null, (byte?)(JValue)null)", span="343-343", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_217 [label="Assert.AreEqual(null, (byte?)(JValue)null)", span="344-344", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_218 [label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="345-345", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_219 [label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="346-346", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_220 [label="Assert.AreEqual(null, (long?)(JValue)null)", span="347-347", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_221 [label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="348-348", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_222 [label="Assert.AreEqual(null, (double?)(JValue)null)", span="349-349", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_223 [label="Assert.AreEqual(null, (float?)(JValue)null)", span="350-350", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_224 [label="byte[] data = new byte[0]", span="352-352", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_225 [label="Assert.AreEqual(data, (byte[])(new JValue(data)))", span="353-353", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_226 [label="Assert.AreEqual(5, (int)(new JValue(StringComparison.OrdinalIgnoreCase)))", span="355-355", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_227 [label="string bigIntegerText = ''1234567899999999999999999999999999999999999999999999999999999999999990''", span="358-358", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_228 [label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(BigInteger.Parse(bigIntegerText))).Value)", span="360-360", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_229 [label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(bigIntegerText)).ToObject<BigInteger>())", span="362-362", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_237 [label="byte[] intData = BigInteger.Parse(bigIntegerText).ToByteArray()", span="371-371", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_238 [label="Assert.AreEqual(BigInteger.Parse(bigIntegerText), (new JValue(intData)).ToObject<BigInteger>())", span="372-372", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_230 [label="Assert.AreEqual(new BigInteger(long.MaxValue), (new JValue(long.MaxValue)).ToObject<BigInteger>())", span="363-363", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_231 [label="Assert.AreEqual(new BigInteger(4.5d), (new JValue((4.5d))).ToObject<BigInteger>())", span="364-364", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_232 [label="Assert.AreEqual(new BigInteger(4.5f), (new JValue((4.5f))).ToObject<BigInteger>())", span="365-365", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_233 [label="Assert.AreEqual(new BigInteger(byte.MaxValue), (new JValue(byte.MaxValue)).ToObject<BigInteger>())", span="366-366", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_234 [label="Assert.AreEqual(new BigInteger(123), (new JValue(123)).ToObject<BigInteger>())", span="367-367", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_235 [label="Assert.AreEqual(new BigInteger(123), (new JValue(123)).ToObject<BigInteger?>())", span="368-368", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_236 [label="Assert.AreEqual(null, (new JValue((object)null)).ToObject<BigInteger?>())", span="369-369", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", color=green, community=0, file="JTokenTests.cs"];
m15_239 [label="Assert.AreEqual(4.0d, (double)(new JValue(new BigInteger(4.5d))))", span="374-374", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_240 [label="Assert.AreEqual(true, (bool)(new JValue(new BigInteger(1))))", span="375-375", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_241 [label="Assert.AreEqual(long.MaxValue, (long)(new JValue(new BigInteger(long.MaxValue))))", span="376-376", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_242 [label="Assert.AreEqual(long.MaxValue, (long)(new JValue(new BigInteger(new byte[] { 255, 255, 255, 255, 255, 255, 255, 127 }))))", span="377-377", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_243 [label="Assert.AreEqual(''9223372036854775807'', (string)(new JValue(new BigInteger(long.MaxValue))))", span="378-378", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_244 [label="intData = (byte[])(new JValue(new BigInteger(long.MaxValue)))", span="380-380", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_245 [label="CollectionAssert.AreEqual(new byte[] { 255, 255, 255, 255, 255, 255, 255, 127 }, intData)", span="381-381", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_246 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="234-234", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenTests.cs"];
m15_248 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenTests.cs"];
m15_581 [label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="272-272", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JTokenTests.cs"];
m15_651 [label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="564-564", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JTokenTests.cs"];
m15_40 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="99-99", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs"];
m15_41 [label="JObject o = (JObject)JToken.Load(new JsonTextReader(new StringReader(''{'pie':true}'')))", span="101-101", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs"];
m15_42 [label="Assert.AreEqual(true, (bool)o[''pie''])", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs"];
m15_43 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="99-99", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JTokenTests.cs"];
m15_256 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JTokenTests.cs"];
m15_263 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JTokenTests.cs"];
m15_672 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="795-795", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs"];
m15_673 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    o.Add(5);\r\n                })", span="797-803", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs"];
m15_674 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="795-795", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JTokenTests.cs"];
m15_720 [label="Entry Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="234-234", cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JTokenTests.cs"];
m15_252 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JTokenTests.cs"];
m15_35 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JTokenTests.cs"];
m16_19 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JTokenWriter.cs"];
m16_43 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="110-110", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JTokenWriter.cs"];
m16_56 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JTokenWriter.cs"];
m16_130 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", span="317-317", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", file="JTokenWriter.cs"];
m16_131 [label="base.WriteValue(value)", span="319-319", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", file="JTokenWriter.cs"];
m16_132 [label="AddValue(value, JsonToken.Boolean)", span="320-320", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", file="JTokenWriter.cs"];
m16_133 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", span="317-317", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", file="JTokenWriter.cs"];
m16_8 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.Flush()", span="81-81", cluster="Newtonsoft.Json.Linq.JTokenWriter.Flush()", file="JTokenWriter.cs"];
m16_9 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.Flush()", span="81-81", cluster="Newtonsoft.Json.Linq.JTokenWriter.Flush()", file="JTokenWriter.cs"];
m16_95 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="245-245", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JTokenWriter.cs"];
m16_96 [label="base.WriteValue(value)", span="247-247", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JTokenWriter.cs"];
m16_97 [label="AddValue(value, JsonToken.String)", span="248-248", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JTokenWriter.cs"];
m16_98 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="245-245", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JTokenWriter.cs"];
m16_125 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", span="307-307", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", file="JTokenWriter.cs"];
m16_126 [label="base.WriteValue(value)", span="309-309", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", file="JTokenWriter.cs"];
m16_127 [label="AddValue(value, JsonToken.Float)", span="310-310", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", file="JTokenWriter.cs"];
m16_128 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", span="307-307", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", file="JTokenWriter.cs"];
m16_145 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", span="348-348", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriter.cs"];
m16_146 [label="base.WriteValue(value)", span="350-350", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriter.cs"];
m16_148 [label="s = value.ToString(CultureInfo.InvariantCulture)", span="353-353", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriter.cs"];
m16_147 [label="string s = null", span="351-351", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriter.cs"];
m16_149 [label="AddValue(s, JsonToken.String)", span="357-357", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriter.cs"];
m16_150 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", span="348-348", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriter.cs"];
m16_27 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.RemoveParent()", span="113-113", cluster="Newtonsoft.Json.Linq.JTokenWriter.RemoveParent()", file="JTokenWriter.cs"];
m16_28 [label="_parent = _parent.Parent", span="115-115", cluster="Newtonsoft.Json.Linq.JTokenWriter.RemoveParent()", file="JTokenWriter.cs"];
m16_29 [label="_parent != null && _parent.Type == JTokenType.Property", span="117-117", cluster="Newtonsoft.Json.Linq.JTokenWriter.RemoveParent()", file="JTokenWriter.cs"];
m16_30 [label="_parent = _parent.Parent", span="118-118", cluster="Newtonsoft.Json.Linq.JTokenWriter.RemoveParent()", file="JTokenWriter.cs"];
m16_31 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.RemoveParent()", span="113-113", cluster="Newtonsoft.Json.Linq.JTokenWriter.RemoveParent()", file="JTokenWriter.cs"];
m16_135 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(short)", span="327-327", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(short)", file="JTokenWriter.cs"];
m16_136 [label="base.WriteValue(value)", span="329-329", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(short)", file="JTokenWriter.cs"];
m16_137 [label="AddValue(value, JsonToken.Integer)", span="330-330", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(short)", file="JTokenWriter.cs"];
m16_138 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(short)", span="327-327", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(short)", file="JTokenWriter.cs"];
m16_120 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(float)", span="297-297", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(float)", file="JTokenWriter.cs"];
m16_121 [label="base.WriteValue(value)", span="299-299", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(float)", file="JTokenWriter.cs"];
m16_122 [label="AddValue(value, JsonToken.Float)", span="300-300", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(float)", file="JTokenWriter.cs"];
m16_123 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(float)", span="297-297", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(float)", file="JTokenWriter.cs"];
m16_83 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", span="225-225", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", file="JTokenWriter.cs"];
m16_84 [label="base.WriteRaw(json)", span="227-227", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", file="JTokenWriter.cs"];
m16_85 [label="AddValue(new JRaw(json), JsonToken.Raw)", span="228-228", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", file="JTokenWriter.cs"];
m16_86 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", span="225-225", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", file="JTokenWriter.cs"];
m16_13 [label="Entry Newtonsoft.Json.JsonWriter.Close()", span="349-349", cluster="Newtonsoft.Json.JsonWriter.Close()", file="JTokenWriter.cs"];
m16_36 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JTokenWriter.cs"];
m16_185 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.TimeSpan)", span="428-428", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs"];
m16_186 [label="base.WriteValue(value)", span="430-430", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs"];
m16_187 [label="AddValue(value, JsonToken.String)", span="431-431", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs"];
m16_188 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.TimeSpan)", span="428-428", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs"];
m16_151 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="903-903", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JTokenWriter.cs"];
m16_179 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="950-950", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs"];
m16_199 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1200-1200", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JTokenWriter.cs"];
m16_195 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Uri)", span="448-448", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Uri)", file="JTokenWriter.cs"];
m16_196 [label="base.WriteValue(value)", span="450-450", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Uri)", file="JTokenWriter.cs"];
m16_197 [label="AddValue(value, JsonToken.String)", span="451-451", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Uri)", file="JTokenWriter.cs"];
m16_198 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Uri)", span="448-448", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Uri)", file="JTokenWriter.cs"];
m16_100 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", span="255-255", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="JTokenWriter.cs"];
m16_101 [label="base.WriteValue(value)", span="257-257", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="JTokenWriter.cs"];
m16_102 [label="AddValue(value, JsonToken.Integer)", span="258-258", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="JTokenWriter.cs"];
m16_103 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", span="255-255", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="JTokenWriter.cs"];
m16_167 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JTokenWriter.cs"];
m16_194 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", span="960-960", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="JTokenWriter.cs"];
m16_14 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="96-96", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JTokenWriter.cs"];
m16_15 [label="base.WriteStartObject()", span="98-98", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JTokenWriter.cs"];
m16_16 [label="AddParent(new JObject())", span="100-100", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JTokenWriter.cs"];
m16_17 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="96-96", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JTokenWriter.cs"];
m16_65 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(object)", span="188-188", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(object)", file="JTokenWriter.cs"];
m16_66 [label="value is BigInteger", span="191-191", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(object)", file="JTokenWriter.cs"];
m16_68 [label="AddValue(value, JsonToken.Integer)", span="194-194", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(object)", file="JTokenWriter.cs"];
m16_69 [label="base.WriteValue(value)", span="199-199", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(object)", file="JTokenWriter.cs"];
m16_67 [label="InternalWriteValue(JsonToken.Integer)", span="193-193", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(object)", file="JTokenWriter.cs"];
m16_70 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(object)", span="188-188", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(object)", file="JTokenWriter.cs"];
m16_47 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="155-155", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JTokenWriter.cs"];
m16_48 [label="base.WritePropertyName(name)", span="157-157", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JTokenWriter.cs"];
m16_49 [label="AddParent(new JProperty(name))", span="159-159", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JTokenWriter.cs"];
m16_50 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="155-155", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JTokenWriter.cs"];
m16_89 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", span="235-235", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", file="JTokenWriter.cs"];
m16_90 [label="base.WriteComment(text)", span="237-237", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", file="JTokenWriter.cs"];
m16_91 [label="AddValue(JValue.CreateComment(text), JsonToken.Comment)", span="238-238", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", file="JTokenWriter.cs"];
m16_92 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", span="235-235", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", file="JTokenWriter.cs"];
m16_124 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="857-857", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JTokenWriter.cs"];
m16_162 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="922-922", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JTokenWriter.cs"];
m16_10 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.Close()", span="88-88", cluster="Newtonsoft.Json.Linq.JTokenWriter.Close()", file="JTokenWriter.cs"];
m16_11 [label="base.Close()", span="90-90", cluster="Newtonsoft.Json.Linq.JTokenWriter.Close()", file="JTokenWriter.cs"];
m16_12 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.Close()", span="88-88", cluster="Newtonsoft.Json.Linq.JTokenWriter.Close()", file="JTokenWriter.cs"];
m16_0 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", span="63-63", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_1 [label="ValidationUtils.ArgumentNotNull(container, ''container'')", span="65-65", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_2 [label="_token = container", span="67-67", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_3 [label="_parent = container", span="68-68", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_4 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", span="63-63", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_71 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1502-1502", cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_44 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="146-146", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_45 [label="RemoveParent()", span="148-148", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_46 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="146-146", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_42 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="390-390", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JTokenWriter.cs"];
m16_52 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="173-173", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JTokenWriter.cs"];
m16_82 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="780-780", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JTokenWriter.cs"];
m16_93 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1237-1237", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JTokenWriter.cs"];
m16_94 [label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="528-528", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JTokenWriter.cs"];
m16_99 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenWriter.cs"];
m16_110 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(long)", span="276-276", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(long)", file="JTokenWriter.cs"];
m16_111 [label="base.WriteValue(value)", span="278-278", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(long)", file="JTokenWriter.cs"];
m16_112 [label="AddValue(value, JsonToken.Integer)", span="279-279", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(long)", file="JTokenWriter.cs"];
m16_113 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(long)", span="276-276", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(long)", file="JTokenWriter.cs"];
m16_158 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(sbyte)", span="375-375", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(sbyte)", file="JTokenWriter.cs"];
m16_159 [label="base.WriteValue(value)", span="377-377", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(sbyte)", file="JTokenWriter.cs"];
m16_160 [label="AddValue(value, JsonToken.Integer)", span="378-378", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(sbyte)", file="JTokenWriter.cs"];
m16_161 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(sbyte)", span="375-375", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(sbyte)", file="JTokenWriter.cs"];
m16_184 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1188-1188", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JTokenWriter.cs"];
m16_26 [label="Entry Newtonsoft.Json.Linq.JContainer.AddAndSkipParentCheck(Newtonsoft.Json.Linq.JToken)", span="555-555", cluster="Newtonsoft.Json.Linq.JContainer.AddAndSkipParentCheck(Newtonsoft.Json.Linq.JToken)", file="JTokenWriter.cs"];
m16_105 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(uint)", span="266-266", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(uint)", file="JTokenWriter.cs"];
m16_106 [label="base.WriteValue(value)", span="268-268", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(uint)", file="JTokenWriter.cs"];
m16_107 [label="AddValue(value, JsonToken.Integer)", span="269-269", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(uint)", file="JTokenWriter.cs"];
m16_108 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(uint)", span="266-266", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(uint)", file="JTokenWriter.cs"];
m16_51 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenWriter.cs"];
m16_115 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ulong)", span="287-287", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ulong)", file="JTokenWriter.cs"];
m16_116 [label="base.WriteValue(value)", span="289-289", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ulong)", file="JTokenWriter.cs"];
m16_117 [label="AddValue(value, JsonToken.Integer)", span="290-290", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ulong)", file="JTokenWriter.cs"];
m16_118 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ulong)", span="287-287", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ulong)", file="JTokenWriter.cs"];
m16_173 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="940-940", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs"];
m16_139 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short)", span="884-884", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JTokenWriter.cs"];
m16_153 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte)", span="364-364", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte)", file="JTokenWriter.cs"];
m16_154 [label="base.WriteValue(value)", span="366-366", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte)", file="JTokenWriter.cs"];
m16_155 [label="AddValue(value, JsonToken.Integer)", span="367-367", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte)", file="JTokenWriter.cs"];
m16_156 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte)", span="364-364", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte)", file="JTokenWriter.cs"];
m16_144 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="894-894", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JTokenWriter.cs"];
m16_189 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", span="969-969", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs"];
m16_78 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", span="215-215", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", file="JTokenWriter.cs"];
m16_79 [label="base.WriteUndefined()", span="217-217", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", file="JTokenWriter.cs"];
m16_80 [label="AddValue(null, JsonToken.Undefined)", span="218-218", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", file="JTokenWriter.cs"];
m16_81 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", span="215-215", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", file="JTokenWriter.cs"];
m16_129 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="866-866", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JTokenWriter.cs"];
m16_64 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="550-550", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JTokenWriter.cs"];
m16_72 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1213-1213", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JTokenWriter.cs"];
m16_38 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor(string)", span="135-135", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor(string)", file="JTokenWriter.cs"];
m16_39 [label="base.WriteStartConstructor(name)", span="137-137", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor(string)", file="JTokenWriter.cs"];
m16_40 [label="AddParent(new JConstructor(name))", span="139-139", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor(string)", file="JTokenWriter.cs"];
m16_41 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor(string)", span="135-135", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor(string)", file="JTokenWriter.cs"];
m16_73 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", span="206-206", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", file="JTokenWriter.cs"];
m16_74 [label="base.WriteNull()", span="208-208", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", file="JTokenWriter.cs"];
m16_75 [label="AddValue(null, JsonToken.Null)", span="209-209", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", file="JTokenWriter.cs"];
m16_76 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", span="206-206", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", file="JTokenWriter.cs"];
m16_168 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", span="395-395", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs"];
m16_169 [label="base.WriteValue(value)", span="397-397", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs"];
m16_170 [label="value = DateTimeUtils.EnsureDateTime(value, DateTimeZoneHandling)", span="398-398", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs"];
m16_171 [label="AddValue(value, JsonToken.Date)", span="399-399", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs"];
m16_172 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", span="395-395", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs"];
m16_57 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", span="167-167", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_58 [label="_parent != null", span="169-169", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_59 [label="_parent.Add(value)", span="171-171", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_62 [label="_value = value ?? new JValue((object)null)", span="178-178", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", color=red, community=0, file="JTokenWriter.cs"];
m16_60 [label="_parent.Type == JTokenType.Property", span="173-173", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_61 [label="_parent = _parent.Parent", span="174-174", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_63 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", span="167-167", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_77 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JTokenWriter.cs"];
m16_163 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", span="385-385", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", file="JTokenWriter.cs"];
m16_164 [label="base.WriteValue(value)", span="387-387", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", file="JTokenWriter.cs"];
m16_165 [label="AddValue(value, JsonToken.Float)", span="388-388", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", file="JTokenWriter.cs"];
m16_166 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", span="385-385", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", file="JTokenWriter.cs"];
m16_5 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JTokenWriter.cs"];
m16_6 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JTokenWriter.cs"];
m16_7 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JTokenWriter.cs"];
m16_180 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", span="418-418", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", file="JTokenWriter.cs"];
m16_181 [label="base.WriteValue(value)", span="420-420", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", file="JTokenWriter.cs"];
m16_182 [label="AddValue(value, JsonToken.Bytes)", span="421-421", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", file="JTokenWriter.cs"];
m16_183 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", span="418-418", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", file="JTokenWriter.cs"];
m16_190 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Guid)", span="438-438", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Guid)", file="JTokenWriter.cs"];
m16_191 [label="base.WriteValue(value)", span="440-440", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Guid)", file="JTokenWriter.cs"];
m16_192 [label="AddValue(value, JsonToken.String)", span="441-441", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Guid)", file="JTokenWriter.cs"];
m16_193 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Guid)", span="438-438", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Guid)", file="JTokenWriter.cs"];
m16_87 [label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="789-789", cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JTokenWriter.cs"];
m16_175 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)", span="407-407", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs"];
m16_176 [label="base.WriteValue(value)", span="409-409", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs"];
m16_177 [label="AddValue(value, JsonToken.Date)", span="410-410", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs"];
m16_178 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)", span="407-407", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs"];
m16_152 [label="Entry char.ToString(System.IFormatProvider)", span="0-0", cluster="char.ToString(System.IFormatProvider)", file="JTokenWriter.cs"];
m16_88 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JTokenWriter.cs"];
m16_157 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="912-912", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JTokenWriter.cs"];
m16_53 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", span="162-162", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_54 [label="AddValue(new JValue(value), token)", span="164-164", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_55 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", span="162-162", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs"];
m16_37 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="64-64", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JTokenWriter.cs"];
m16_140 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ushort)", span="338-338", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ushort)", file="JTokenWriter.cs"];
m16_141 [label="base.WriteValue(value)", span="340-340", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ushort)", file="JTokenWriter.cs"];
m16_142 [label="AddValue(value, JsonToken.Integer)", span="341-341", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ushort)", file="JTokenWriter.cs"];
m16_143 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ushort)", span="338-338", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(ushort)", file="JTokenWriter.cs"];
m16_114 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="838-838", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JTokenWriter.cs"];
m16_104 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="819-819", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JTokenWriter.cs"];
m16_119 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="848-848", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JTokenWriter.cs"];
m16_109 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="829-829", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JTokenWriter.cs"];
m16_20 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", span="103-103", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_21 [label="_parent == null", span="105-105", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_22 [label="_token = container", span="106-106", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_23 [label="_parent.AddAndSkipParentCheck(container)", span="108-108", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_24 [label="_parent = container", span="110-110", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_25 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", span="103-103", cluster="Newtonsoft.Json.Linq.JTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="JTokenWriter.cs"];
m16_134 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JTokenWriter.cs"];
m16_32 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="124-124", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JTokenWriter.cs"];
m16_33 [label="base.WriteStartArray()", span="126-126", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JTokenWriter.cs"];
m16_34 [label="AddParent(new JArray())", span="128-128", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JTokenWriter.cs"];
m16_35 [label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="124-124", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JTokenWriter.cs"];
m16_18 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JTokenWriter.cs"];
m16_174 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JTokenWriter.cs"];
m16_200 [label="Newtonsoft.Json.Linq.JTokenWriter", span="", file="JTokenWriter.cs"];
m17_7 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JValue.cs"];
m17_59 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="JValue.cs"];
m17_512 [label="Entry System.Type.GetTypeCode(System.Type)", span="0-0", cluster="System.Type.GetTypeCode(System.Type)", file="JValue.cs"];
m17_142 [label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JValue.cs"];
m17_457 [label="writer.WriteValue(documentType.System)", span="1382-1382", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_458 [label="!string.IsNullOrEmpty(documentType.InternalSubset)", span="1384-1384", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_459 [label="writer.WritePropertyName(''@internalSubset'')", span="1386-1386", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_461 [label="writer.WriteEndObject()", span="1390-1390", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_464 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", span="1397-1397", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_467 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JValue.cs"];
m17_470 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1421-1421", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JValue.cs"];
m17_473 [label="return false;", span="1403-1403", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_476 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1419-1419", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_486 [label="document = new XDocumentWrapper(d)", span="1439-1439", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_460 [label="writer.WriteValue(documentType.InternalSubset)", span="1387-1387", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_463 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1237-1237", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_466 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="916-916", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JValue.cs"];
m17_469 [label="Entry Unk.PopScope", span="", cluster="Unk.PopScope", file="JValue.cs"];
m17_472 [label="childNode.LocalName != node.LocalName", span="1401-1401", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_475 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", span="1397-1397", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_478 [label="return null;", span="1423-1423", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_462 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1393-1393", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_465 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", span="2044-2044", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JValue.cs"];
m17_468 [label="return true;", span="874-874", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs"];
m17_471 [label="node.ChildNodes", span="1399-1399", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_474 [label="return true;", span="1406-1406", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_477 [label="reader.TokenType == JsonToken.Null", span="1421-1421", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_479 [label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1426-1426", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_480 [label="IXmlDocument document = null", span="1427-1427", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_481 [label="IXmlNode rootNode = null", span="1428-1428", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_482 [label="typeof(XObject).IsAssignableFrom(objectType)", span="1431-1431", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_483 [label="objectType != typeof(XDocument) && objectType != typeof(XElement)", span="1433-1433", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_484 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1435-1435", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_485 [label="XDocument d = new XDocument()", span="1438-1438", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_487 [label="rootNode = document", span="1440-1440", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_489 [label="objectType != typeof(XmlDocument)", span="1446-1446", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_488 [label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1444-1444", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_490 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1448-1448", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_491 [label="XmlDocument d = new XmlDocument()", span="1451-1451", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_534 [label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1532-1532", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_535 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1495-1495", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_536 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JValue.cs"];
m17_175 [label="objA == null || objB == null", span="385-385", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_516 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="JValue.cs"];
m17_517 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1495-1495", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_518 [label=propertyName, span="1497-1497", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_595 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1647-1647", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_605 [label="reader.TokenType == JsonToken.String", span="1649-1649", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_606 [label="return (reader.Value != null) ? reader.Value.ToString() : null;", span="1651-1651", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_607 [label="reader.TokenType == JsonToken.Integer", span="1653-1653", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_608 [label="reader.Value is BigInteger", span="1656-1656", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_609 [label="return ((BigInteger)reader.Value).ToString(CultureInfo.InvariantCulture);", span="1658-1658", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_610 [label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1662-1662", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_611 [label="reader.TokenType == JsonToken.Float", span="1664-1664", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_612 [label="reader.Value is decimal", span="1666-1666", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_613 [label="return XmlConvert.ToString((decimal)reader.Value);", span="1668-1668", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_614 [label="reader.Value is float", span="1670-1670", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_615 [label="return XmlConvert.ToString((float)reader.Value);", span="1672-1672", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_616 [label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1675-1675", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_617 [label="reader.TokenType == JsonToken.Boolean", span="1677-1677", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_618 [label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1679-1679", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_619 [label="reader.TokenType == JsonToken.Date", span="1681-1681", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_620 [label="reader.Value is DateTimeOffset", span="1684-1684", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_621 [label="return XmlConvert.ToString((DateTimeOffset)reader.Value);", span="1686-1686", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_622 [label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1690-1690", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_624 [label="reader.TokenType == JsonToken.Null", span="1697-1697", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_626 [label="throw JsonSerializationException.Create(reader, ''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1703-1703", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_623 [label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1692-1692", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_625 [label="return null;", span="1699-1699", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_627 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1647-1647", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="JValue.cs"];
m17_34 [label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs"];
m17_35 [label="JValue other = node as JValue", span="197-197", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs"];
m17_36 [label="other == null", span="198-198", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs"];
m17_538 [label="return (long)this;", span="1002-1002", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs"];
m17_276 [label="node != null", span="1056-1056", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_277 [label="return XmlNodeWrapper.WrapNode(node);", span="1058-1058", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_278 [label="throw new ArgumentException(''Value must be an XML object.'', nameof(value));", span="1062-1062", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_156 [label="Entry System.Guid.CompareTo(System.Guid)", span="0-0", cluster="System.Guid.CompareTo(System.Guid)", file="JValue.cs"];
m17_379 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JValue.cs"];
m17_384 [label="node.NodeType", span="1239-1239", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_375 [label="i++", span="1227-1227", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_96 [label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="283-283", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_97 [label="return b1.CompareTo(b2);", span="285-285", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_540 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1707-1707", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_541 [label="string.IsNullOrEmpty(propertyName)", span="1540-1540", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_542 [label="throw JsonSerializationException.Create(reader, ''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1542-1542", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_110 [label="date2 = new DateTimeOffset(Convert.ToDateTime(objB, CultureInfo.InvariantCulture))", span="312-312", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_111 [label="return date1.CompareTo(date2);", span="314-314", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_386 [label="XmlNodeType.DocumentFragment", span="1242-1242", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_503 [label="objectType == typeof(XElement)", span="1483-1483", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_504 [label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1485-1485", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_505 [label="element.Remove()", span="1486-1486", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_506 [label="return element;", span="1488-1488", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_507 [label="return document.WrappedNode;", span="1492-1492", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_508 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1419-1419", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_509 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JValue.cs"];
m17_510 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JValue.cs"];
m17_511 [label="Entry XDocument.cstr", span="", cluster="XDocument.cstr", file="JValue.cs"];
m17_4 [label="return new XmlNodeWrapper(_document.CreateComment(data));", span="55-55", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="JValue.cs"];
m17_5 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="53-53", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="JValue.cs"];
m17_269 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="405-405", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JValue.cs"];
m17_157 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JValue.cs"];
m17_158 [label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0", cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="JValue.cs"];
m17_159 [label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="JValue.cs"];
m17_798 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="JValue.cs"];
m17_201 [label="decimal d1 = Convert.ToDecimal(objA, CultureInfo.InvariantCulture)", span="426-426", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_207 [label="return true;", span="434-434", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_222 [label="result = null", span="453-453", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_205 [label="ExpressionType.AddAssign", span="432-432", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_206 [label="result = d1 + d2", span="433-433", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_220 [label="objA is float || objB is float || objA is double || objB is double", span="449-449", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_221 [label="objA == null || objB == null", span="451-451", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_203 [label=operation, span="429-429", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_208 [label="ExpressionType.Subtract", span="435-435", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_226 [label=operation, span="460-460", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_204 [label="ExpressionType.Add", span="431-431", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_210 [label="result = d1 - d2", span="437-437", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_213 [label="ExpressionType.MultiplyAssign", span="440-440", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_216 [label="ExpressionType.Divide", span="443-443", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_219 [label="return true;", span="446-446", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_225 [label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="458-458", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_218 [label="result = d1 / d2", span="445-445", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_223 [label="return true;", span="454-454", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_202 [label="decimal d2 = Convert.ToDecimal(objB, CultureInfo.InvariantCulture)", span="427-427", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_211 [label="return true;", span="438-438", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_214 [label="result = d1 * d2", span="441-441", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_217 [label="ExpressionType.DivideAssign", span="444-444", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_209 [label="ExpressionType.SubtractAssign", span="436-436", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_224 [label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="457-457", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_212 [label="ExpressionType.Multiply", span="439-439", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_215 [label="return true;", span="442-442", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_227 [label="ExpressionType.Add", span="462-462", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_171 [label="operation == ExpressionType.Add || operation == ExpressionType.AddAssign", span="375-375", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_172 [label="result = ((objA != null) ? objA.ToString() : null) + ((objB != null) ? objB.ToString() : null)", span="377-377", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", color=green, community=0, file="JValue.cs"];
m17_173 [label="return true;", span="378-378", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", color=green, community=0, file="JValue.cs"];
m17_174 [label="objA is BigInteger || objB is BigInteger", span="383-383", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_513 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="960-960", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs"];
m17_543 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1010-1010", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs"];
m17_555 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1030-1030", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs"];
m17_565 [label="CreateElement(reader, document, currentNode, propertyName, manager, elementPrefix, attributeNameValues)", span="1578-1578", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_544 [label="return (float)this;", span="1012-1012", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs"];
m17_545 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1010-1010", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs"];
m17_546 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1015-1015", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs"];
m17_548 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1015-1015", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs"];
m17_550 [label="return (decimal)this;", span="1022-1022", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs"];
m17_551 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1020-1020", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs"];
m17_553 [label="return (DateTime)this;", span="1027-1027", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs"];
m17_554 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1025-1025", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs"];
m17_562 [label="string attributePrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1572-1572", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_563 [label="AddAttribute(reader, document, currentNode, propertyName, attributeName, manager, attributePrefix)", span="1573-1573", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_556 [label="return ToObject(conversionType);", span="1032-1032", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs"];
m17_549 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1020-1020", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs"];
m17_564 [label="return;", span="1574-1574", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_547 [label="return (double)this;", span="1017-1017", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs"];
m17_552 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1025-1025", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs"];
m17_557 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1030-1030", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs"];
m17_561 [label="string attributeName = propertyName.Substring(1)", span="1571-1571", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_558 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1697-1697", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JValue.cs"];
m17_560 [label="JsonTypeReflector.ValuePropertyName", span="1570-1570", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_559 [label="Newtonsoft.Json.Linq.JValue", span="", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_566 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1538-1538", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="JValue.cs"];
m17_51 [label="double d = Convert.ToDouble(i2, CultureInfo.InvariantCulture)", span="234-234", cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs"];
m17_118 [label="return -1;", span="324-324", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_119 [label="bytes2 == null", span="325-325", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_143 [label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="358-358", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs"];
m17_162 [label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="539-539", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="JValue.cs"];
m17_163 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="537-537", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="JValue.cs"];
m17_164 [label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="663-663", cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="JValue.cs"];
m17_166 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="542-542", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="JValue.cs"];
m17_165 [label="Entry XProcessingInstruction.cstr", span="", cluster="XProcessingInstruction.cstr", file="JValue.cs"];
m17_167 [label="return new XElementWrapper(new XElement(elementName));", span="544-544", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="JValue.cs", color=green, community=0];
m17_160 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JValue.cs"];
m17_247 [label="long l1 = Convert.ToInt64(objA, CultureInfo.InvariantCulture)", span="489-489", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_248 [label="long l2 = Convert.ToInt64(objB, CultureInfo.InvariantCulture)", span="490-490", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_249 [label=operation, span="492-492", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_250 [label="ExpressionType.Add", span="494-494", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_251 [label="ExpressionType.AddAssign", span="495-495", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_180 [label=operation, span="396-396", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_240 [label="ExpressionType.DivideAssign", span="475-475", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_339 [label="return;", span="658-658", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_18 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="68-68", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="JValue.cs"];
m17_19 [label="Entry Unk.CreateWhitespace", span="", cluster="Unk.CreateWhitespace", file="JValue.cs"];
m17_26 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="78-78", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="JValue.cs"];
m17_27 [label="Entry XmlDeclarationWrapper.cstr", span="", cluster="XmlDeclarationWrapper.cstr", file="JValue.cs"];
m17_75 [label="objB is BigInteger", span="257-257", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_76 [label="return -CompareBigInteger((BigInteger)objB, objA);", span="258-258", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_77 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="260-260", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_348 [label="_value is double", span="670-670", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_353 [label="return;", span="676-676", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_364 [label="return;", span="690-690", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_367 [label="return;", span="693-693", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_374 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="701-701", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_352 [label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="675-675", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_354 [label="JTokenType.String", span="677-677", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_355 [label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="678-678", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_357 [label="JTokenType.Boolean", span="680-680", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_361 [label="_value is DateTimeOffset", span="685-685", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_363 [label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="689-689", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_366 [label="writer.WriteValue((byte[])_value)", span="692-692", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_360 [label="JTokenType.Date", span="683-683", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_373 [label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="633-633", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_372 [label="return;", span="698-698", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_349 [label="writer.WriteValue((double)_value)", span="671-671", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_351 [label="writer.WriteValue((float)_value)", span="673-673", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_369 [label="JTokenType.Uri", span="695-695", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_370 [label="JTokenType.TimeSpan", span="696-696", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_371 [label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="697-697", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_376 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="493-493", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JValue.cs"];
m17_350 [label="_value is float", span="672-672", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_358 [label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="681-681", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_356 [label="return;", span="679-679", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_362 [label="writer.WriteValue((DateTimeOffset)_value)", span="686-686", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_368 [label="JTokenType.Guid", span="694-694", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_365 [label="JTokenType.Bytes", span="691-691", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_359 [label="return;", span="682-682", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_377 [label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_30 [label="return new XmlDocumentTypeWrapper(_document.CreateDocumentType(name, publicId, systemId, null));", span="85-85", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JValue.cs"];
m17_31 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="83-83", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JValue.cs"];
m17_57 [label="Entry System.Math.Truncate(decimal)", span="0-0", cluster="System.Math.Truncate(decimal)", file="JValue.cs"];
m17_58 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="JValue.cs"];
m17_145 [label="Entry long.CompareTo(long)", span="0-0", cluster="long.CompareTo(long)", file="JValue.cs"];
m17_11 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JValue.cs"];
m17_78 [label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="261-261", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_79 [label="objA is float || objB is float || objA is double || objB is double", span="262-262", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_81 [label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="265-265", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_83 [label="objA is BigInteger", span="268-268", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_85 [label="objB is BigInteger", span="270-270", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_86 [label="return -CompareBigInteger((BigInteger)objB, objA);", span="271-271", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_80 [label="return CompareFloat(objA, objB);", span="263-263", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_82 [label="JTokenType.Float", span="266-266", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_84 [label="return CompareBigInteger((BigInteger)objA, objB);", span="269-269", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_87 [label="return CompareFloat(objA, objB);", span="273-273", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_571 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="JValue.cs"];
m17_69 [label="objA == null && objB != null", span="248-248", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_70 [label="return -1;", span="249-249", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_71 [label=valueType, span="251-251", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_98 [label="JTokenType.Date", span="286-286", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_99 [label="objA is DateTime", span="288-288", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_400 [label="writer.WriteValue(node.ChildNodes[0].Value)", span="1276-1276", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_401 [label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="1278-1278", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_403 [label="element.IsEmpty", span="1283-1283", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_402 [label="IXmlElement element = (IXmlElement)node", span="1280-1280", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_404 [label="writer.WriteNull()", span="1285-1285", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_64 [label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="242-242", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_186 [label="ExpressionType.SubtractAssign", span="403-403", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_191 [label="result = i1 * i2", span="408-408", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_188 [label="return true;", span="405-405", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_189 [label="ExpressionType.Multiply", span="406-406", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_187 [label="result = i1 - i2", span="404-404", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_190 [label="ExpressionType.MultiplyAssign", span="407-407", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_192 [label="return true;", span="409-409", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_632 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JValue.cs"];
m17_150 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JValue.cs"];
m17_24 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValue.cs"];
m17_25 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValue.cs"];
m17_182 [label="ExpressionType.AddAssign", span="399-399", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_183 [label="result = i1 + i2", span="400-400", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", color=green, community=0, file="JValue.cs"];
m17_184 [label="return true;", span="401-401", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_185 [label="ExpressionType.Subtract", span="402-402", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_61 [label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="145-145", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_20 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="73-73", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="JValue.cs"];
m17_21 [label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="75-75", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="JValue.cs"];
m17_383 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="429-429", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JValue.cs"];
m17_233 [label="result = d1 - d2", span="468-468", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_531 [label="reader.TokenType == JsonToken.StartArray", span="1523-1523", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_532 [label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1526-1526", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_533 [label="return;", span="1527-1527", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_279 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="1045-1045", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_280 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JValue.cs"];
m17_282 [label="List<IXmlNode> parentElements = null", span="1067-1067", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_284 [label="(parent = parent.ParentNode) != null", span="1070-1070", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_285 [label="parent.NodeType == XmlNodeType.Element", span="1072-1072", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_286 [label="parentElements == null", span="1074-1074", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_288 [label="parentElements.Add(parent)", span="1079-1079", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_290 [label="parentElements.Reverse()", span="1085-1085", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_292 [label="manager.PushScope()", span="1089-1089", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_294 [label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="1092-1092", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_296 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1065-1065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_298 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JValue.cs"];
m17_300 [label="Entry Unk.PushScope", span="", cluster="Unk.PushScope", file="JValue.cs"];
m17_302 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1101-1101", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_304 [label="!string.IsNullOrEmpty(prefix)", span="1107-1107", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_306 [label="return XmlConvert.DecodeName(node.LocalName);", span="1113-1113", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_308 [label="Entry Unk.LookupPrefix", span="", cluster="Unk.LookupPrefix", file="JValue.cs"];
m17_281 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JValue.cs"];
m17_283 [label="IXmlNode parent = node", span="1069-1069", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_287 [label="parentElements = new List<IXmlNode>()", span="1076-1076", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_289 [label="parentElements != null", span="1083-1083", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_291 [label=parentElements, span="1087-1087", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_293 [label="parentElement.Attributes", span="1090-1090", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_295 [label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="1094-1094", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_297 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JValue.cs"];
m17_299 [label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0", cluster="System.Collections.Generic.List<T>.Reverse()", file="JValue.cs"];
m17_301 [label="Entry Unk.AddNamespace", span="", cluster="Unk.AddNamespace", file="JValue.cs"];
m17_303 [label="string prefix = (node.NamespaceUri == null || (node.LocalName == ''xmlns'' && node.NamespaceUri == ''http://www.w3.org/2000/xmlns/''))\r\n                ? null\r\n                : manager.LookupPrefix(node.NamespaceUri)", span="1103-1105", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_305 [label="return prefix + '':'' + XmlConvert.DecodeName(node.LocalName);", span="1109-1109", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_307 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1101-1101", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_309 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JValue.cs"];
m17_539 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1000-1000", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs"];
m17_736 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1917-1917", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_739 [label="reader.Read()", span="1922-1922", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_742 [label="reader.Read()", span="1926-1926", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_745 [label="reader.Read()", span="1930-1930", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_748 [label="reader.Read()", span="1934-1934", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_732 [label="string name = null", span="1913-1913", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_737 [label="reader.Value.ToString()", span="1919-1919", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_740 [label="name = reader.Value.ToString()", span="1923-1923", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_743 [label="publicId = reader.Value.ToString()", span="1927-1927", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_746 [label="systemId = reader.Value.ToString()", span="1931-1931", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_749 [label="internalSubset = reader.Value.ToString()", span="1935-1935", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_750 [label="throw JsonSerializationException.Create(reader, ''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1938-1938", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_751 [label="IXmlNode documentType = document.CreateXmlDocumentType(name, publicId, systemId, internalSubset)", span="1942-1942", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_752 [label="currentNode.AppendChild(documentType)", span="1943-1943", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_735 [label="string internalSubset = null", span="1916-1916", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_738 [label="''@name''", span="1921-1921", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_741 [label="''@public''", span="1925-1925", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_744 [label="''@system''", span="1929-1929", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_747 [label="''@internalSubset''", span="1933-1933", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_733 [label="string publicId = null", span="1914-1914", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_734 [label="string systemId = null", span="1915-1915", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_753 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1911-1911", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_65 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="JValue.cs"];
m17_67 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="JValue.cs"];
m17_73 [label="_documentType = documentType", span="196-196", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="JValue.cs"];
m17_74 [label="Exit Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="JValue.cs"];
m17_91 [label="_childNodes = null", span="335-335", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_92 [label="_attributes = null", span="336-336", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_95 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild", file="JValue.cs"];
m17_100 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="354-354", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="JValue.cs"];
m17_102 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="355-355", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="JValue.cs"];
m17_103 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="355-355", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="JValue.cs"];
m17_104 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="356-356", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="JValue.cs"];
m17_106 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="357-357", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="JValue.cs"];
m17_108 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="358-358", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="JValue.cs"];
m17_109 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="358-358", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="JValue.cs"];
m17_113 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="360-360", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="JValue.cs"];
m17_115 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="361-361", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="JValue.cs"];
m17_116 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="362-362", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="JValue.cs"];
m17_123 [label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="386-386", cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="JValue.cs"];
m17_125 [label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="398-398", cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_126 [label="Guid guid2 = (Guid)objB", span="334-334", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_129 [label="Entry Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="443-443", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="JValue.cs"];
m17_131 [label="Exit Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="443-443", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="JValue.cs"];
m17_132 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="482-482", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="JValue.cs"];
m17_135 [label="!(objB is TimeSpan)", span="346-346", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_137 [label="TimeSpan ts1 = (TimeSpan)objA", span="349-349", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_138 [label="TimeSpan ts2 = (TimeSpan)objB", span="350-350", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_140 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''valueType'', valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="354-354", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_66 [label="return _element.GetPrefixOfNamespace(namespaceUri);", span="152-152", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="JValue.cs"];
m17_68 [label="Entry Unk.GetPrefixOfNamespace", span="", cluster="Unk.GetPrefixOfNamespace", file="JValue.cs"];
m17_72 [label="Entry Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="JValue.cs"];
m17_88 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="331-331", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_94 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="331-331", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_112 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="360-360", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="JValue.cs"];
m17_122 [label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="386-386", cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="JValue.cs"];
m17_128 [label="JTokenType.Uri", span="337-337", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_134 [label="JTokenType.TimeSpan", span="345-345", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_89 [label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper)newChild", span="333-333", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_90 [label="_node.AppendChild(xmlNodeWrapper._node)", span="334-334", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_93 [label="return newChild;", span="338-338", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_101 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="354-354", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="JValue.cs"];
m17_105 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="356-356", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="JValue.cs"];
m17_107 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="357-357", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="JValue.cs"];
m17_114 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="361-361", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="JValue.cs"];
m17_117 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="362-362", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="JValue.cs"];
m17_121 [label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="385-385", cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_120 [label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="385-385", cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_124 [label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="398-398", cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_127 [label="return guid1.CompareTo(guid2);", span="336-336", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_130 [label="_documentType = documentType", span="446-446", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="JValue.cs"];
m17_133 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="482-482", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="JValue.cs"];
m17_136 [label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="347-347", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_139 [label="return ts1.CompareTo(ts2);", span="352-352", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_141 [label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="242-242", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs"];
m17_438 [label="!string.IsNullOrEmpty(declaration.Encoding)", span="1351-1351", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_629 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JValue.cs"];
m17_144 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JValue.cs"];
m17_570 [label="Entry string.StartsWith(char)", span="278-278", cluster="string.StartsWith(char)", file="JValue.cs"];
m17_593 [label="Entry Unk.EncodeName", span="", cluster="Unk.EncodeName", file="JValue.cs"];
m17_60 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JValue.cs"];
m17_62 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)", file="JValue.cs"];
m17_63 [label="Entry double.CompareTo(double)", span="0-0", cluster="double.CompareTo(double)", file="JValue.cs"];
m17_427 [label="return;", span="1331-1331", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_431 [label="XmlNodeType.XmlDeclaration", span="1341-1341", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_435 [label="!string.IsNullOrEmpty(declaration.Version)", span="1346-1346", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_432 [label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1342-1342", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_433 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1343-1343", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_434 [label="writer.WriteStartObject()", span="1344-1344", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_436 [label="writer.WritePropertyName(''@version'')", span="1348-1348", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_437 [label="writer.WriteValue(declaration.Version)", span="1349-1349", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_537 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1000-1000", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs"];
m17_715 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1880-1880", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_718 [label="reader.Read()", span="1885-1885", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_721 [label="reader.Read()", span="1889-1889", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_724 [label="reader.Read()", span="1893-1893", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_711 [label="propertyName == DeclarationName", span="1875-1875", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_716 [label="reader.Value.ToString()", span="1882-1882", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_719 [label="version = reader.Value.ToString()", span="1886-1886", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_722 [label="encoding = reader.Value.ToString()", span="1890-1890", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_725 [label="standalone = reader.Value.ToString()", span="1894-1894", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_726 [label="throw JsonSerializationException.Create(reader, ''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1897-1897", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_727 [label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1901-1901", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_728 [label="currentNode.AppendChild(declaration)", span="1902-1902", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_729 [label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1906-1906", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_730 [label="currentNode.AppendChild(instruction)", span="1907-1907", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_714 [label="string standalone = null", span="1879-1879", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_717 [label="''@version''", span="1884-1884", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_720 [label="''@encoding''", span="1888-1888", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_723 [label="''@standalone''", span="1892-1892", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_712 [label="string version = null", span="1877-1877", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_713 [label="string encoding = null", span="1878-1878", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_731 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1873-1873", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="JValue.cs"];
m17_8 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JValue.cs"];
m17_9 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JValue.cs"];
m17_10 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JValue.cs"];
m17_12 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="63-63", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="JValue.cs"];
m17_13 [label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="65-65", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="JValue.cs"];
m17_310 [label="Entry Unk.DecodeName", span="", cluster="Unk.DecodeName", file="JValue.cs"];
m17_312 [label="node.NodeType", span="1119-1119", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_314 [label="node.NamespaceUri == JsonNamespaceUri", span="1122-1122", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_318 [label="return CDataName;", span="1131-1131", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_313 [label="XmlNodeType.Attribute", span="1121-1121", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_315 [label="return ''$'' + node.LocalName;", span="1124-1124", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_319 [label="XmlNodeType.Comment", span="1132-1132", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_316 [label="return ''@'' + ResolveFullName(node, manager);", span="1128-1128", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_317 [label="XmlNodeType.CDATA", span="1130-1130", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_320 [label="return CommentName;", span="1133-1133", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_389 [label="IsArray(node) && AllSameName(node) && node.ChildNodes.Count > 0", span="1246-1246", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_0 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs"];
m17_1 [label="_value = value", span="53-53", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs"];
m17_2 [label="_valueType = type", span="54-54", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs"];
m17_569 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="112-112", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="JValue.cs"];
m17_152 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JValue.cs"];
m17_630 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JValue.cs"];
m17_414 [label="XmlNodeType.Comment", span="1310-1310", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_415 [label=writePropertyName, span="1311-1311", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_416 [label="writer.WriteComment(node.Value)", span="1313-1313", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_417 [label="XmlNodeType.Attribute", span="1316-1316", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_418 [label="XmlNodeType.Text", span="1317-1317", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_28 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JValue.cs"];
m17_155 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="78-78", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JValue.cs"];
m17_380 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JValue.cs"];
m17_151 [label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0", cluster="System.DateTime.CompareTo(System.DateTime)", file="JValue.cs"];
m17_799 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="JValue.cs"];
m17_42 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement", file="JValue.cs"];
m17_398 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1269-1269", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_399 [label="!ValueAttributes(node.Attributes) && node.ChildNodes.Count == 1\r\n                            && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="1272-1273", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_439 [label="writer.WritePropertyName(''@encoding'')", span="1353-1353", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_440 [label="writer.WriteValue(declaration.Encoding)", span="1354-1354", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_441 [label="!string.IsNullOrEmpty(declaration.Standalone)", span="1356-1356", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_3 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs"];
m17_442 [label="writer.WritePropertyName(''@standalone'')", span="1358-1358", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_16 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="68-68", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="JValue.cs"];
m17_17 [label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="70-70", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="JValue.cs"];
m17_631 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JValue.cs"];
m17_148 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JValue.cs"];
m17_528 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="985-985", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs"];
m17_530 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="985-985", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs"];
m17_527 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="980-980", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs"];
m17_529 [label="return (ushort)this;", span="987-987", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs"];
m17_520 [label="return (sbyte)this;", span="972-972", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs"];
m17_522 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="975-975", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs"];
m17_524 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="975-975", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs"];
m17_526 [label="return (short)this;", span="982-982", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs"];
m17_519 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="970-970", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs"];
m17_521 [label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="970-970", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs"];
m17_523 [label="return (byte)this;", span="977-977", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs"];
m17_525 [label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="980-980", cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs"];
m17_22 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValue.cs"];
m17_6 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JValue.cs"];
m17_196 [label="return true;", span="413-413", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_197 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="418-418", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_347 [label="writer.WriteValue((decimal)_value)", span="669-669", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_633 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="61-61", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JValue.cs"];
m17_149 [label="Entry bool.CompareTo(bool)", span="0-0", cluster="bool.CompareTo(bool)", file="JValue.cs"];
m17_169 [label="Entry Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="371-371", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_241 [label="result = d1 / d2", span="476-476", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_382 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="421-421", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JValue.cs"];
m17_252 [label="result = l1 + l2", span="496-496", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_253 [label="return true;", span="497-497", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_254 [label="ExpressionType.Subtract", span="498-498", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_56 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="111-111", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="JValue.cs"];
m17_567 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JValue.cs"];
m17_388 [label="XmlNodeType.Element", span="1245-1245", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_604 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JValue.cs"];
m17_193 [label="ExpressionType.Divide", span="410-410", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_229 [label="result = d1 + d2", span="464-464", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_231 [label="ExpressionType.Subtract", span="466-466", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_230 [label="return true;", span="465-465", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_232 [label="ExpressionType.SubtractAssign", span="467-467", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_340 [label="JTokenType.Integer", span="659-659", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_341 [label="_value is BigInteger", span="661-661", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_342 [label="writer.WriteValue((BigInteger)_value)", span="662-662", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_345 [label="JTokenType.Float", span="667-667", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_344 [label="return;", span="666-666", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_343 [label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="665-665", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_346 [label="_value is decimal", span="668-668", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_514 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JValue.cs"];
m17_515 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1956-1956", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_443 [label="writer.WriteValue(declaration.Standalone)", span="1359-1359", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_161 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="63-63", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JValue.cs"];
m17_32 [label="Entry XmlDocumentTypeWrapper.cstr", span="", cluster="XmlDocumentTypeWrapper.cstr", file="JValue.cs"];
m17_33 [label="Entry Unk.CreateDocumentType", span="", cluster="Unk.CreateDocumentType", file="JValue.cs"];
m17_23 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValue.cs"];
m17_170 [label="Entry XElement.cstr", span="", cluster="XElement.cstr", file="JValue.cs"];
m17_178 [label="return new XAttributeWrapper(new XAttribute(name, value));", span="555-555", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="JValue.cs", color=green, community=0];
m17_179 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="553-553", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="JValue.cs"];
m17_198 [label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="663-663", cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="JValue.cs"];
m17_243 [label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="903-903", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_244 [label="Element.Add(wrapper.WrappedNode)", span="904-904", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_176 [label="Entry Unk.Get", span="", cluster="Unk.Get", file="JValue.cs"];
m17_177 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="553-553", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="JValue.cs"];
m17_195 [label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="599-599", cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="JValue.cs"];
m17_181 [label="Entry XAttribute.cstr", span="", cluster="XAttribute.cstr", file="JValue.cs"];
m17_194 [label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="599-599", cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="JValue.cs"];
m17_199 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="689-689", cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="JValue.cs"];
m17_200 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="689-689", cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="JValue.cs"];
m17_237 [label="result = d1 * d2", span="472-472", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_235 [label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="793-793", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="JValue.cs"];
m17_239 [label="ExpressionType.Divide", span="474-474", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_228 [label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="793-793", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="JValue.cs"];
m17_234 [label="_xmlObject = xmlObject", span="795-795", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="JValue.cs"];
m17_236 [label="ExpressionType.MultiplyAssign", span="471-471", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_238 [label="return true;", span="473-473", cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs"];
m17_242 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="901-901", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_266 [label="Entry XmlNamespaceManager.cstr", span="", cluster="XmlNamespaceManager.cstr", file="JValue.cs"];
m17_245 [label="_attributes = null", span="905-905", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_246 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="901-901", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_256 [label="IXmlNode node = WrapXml(value)", span="1027-1027", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_260 [label="writer.WriteStartObject()", span="1034-1034", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_264 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1025-1025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_258 [label="PushParentNamespaces(node, manager)", span="1030-1030", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_262 [label="!OmitRootObject", span="1039-1039", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_255 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1025-1025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_257 [label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1029-1029", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_259 [label="!OmitRootObject", span="1032-1032", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_261 [label="SerializeNode(writer, node, manager, !OmitRootObject)", span="1037-1037", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_263 [label="writer.WriteEndObject()", span="1041-1041", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs"];
m17_265 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="1045-1045", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_267 [label="Entry NameTable.cstr", span="", cluster="NameTable.cstr", file="JValue.cs"];
m17_268 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1065-1065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_41 [label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs"];
m17_55 [label="return attribute;", span="116-116", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="JValue.cs"];
m17_311 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JValue.cs"];
m17_324 [label="matchingConverter != null && matchingConverter.CanWrite", span="638-638", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_326 [label="return;", span="641-641", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_328 [label="JTokenType.Comment", span="647-647", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_322 [label="converters != null && converters.Length > 0 && _value != null", span="635-635", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_325 [label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="640-640", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_327 [label=_valueType, span="645-645", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_323 [label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="637-637", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_337 [label="JTokenType.Undefined", span="656-656", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_330 [label="return;", span="649-649", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_332 [label="writer.WriteRawValue((_value != null) ? _value.ToString() : null)", span="651-651", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_334 [label="JTokenType.Null", span="653-653", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_336 [label="return;", span="655-655", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_321 [label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="633-633", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_329 [label="writer.WriteComment((_value != null) ? _value.ToString() : null)", span="648-648", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_331 [label="JTokenType.Raw", span="650-650", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_333 [label="return;", span="652-652", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_335 [label="writer.WriteNull()", span="654-654", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_338 [label="writer.WriteUndefined()", span="657-657", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs"];
m17_413 [label="manager.PopScope()", span="1306-1306", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_168 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JValue.cs"];
m17_495 [label="object otherValue = (obj is JValue) ? ((JValue)obj).Value : obj", span="911-911", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs"];
m17_500 [label="return 1;", span="937-937", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs"];
m17_502 [label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="934-934", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs"];
m17_493 [label="obj == null", span="908-908", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs"];
m17_494 [label="return 1;", span="909-909", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs"];
m17_496 [label="return Compare(_valueType, _value, otherValue);", span="913-913", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs"];
m17_497 [label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="906-906", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs"];
m17_499 [label="obj == null", span="936-936", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs"];
m17_501 [label="return Compare(_valueType, _value, obj._value);", span="939-939", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs"];
m17_492 [label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="906-906", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs"];
m17_498 [label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="934-934", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs"];
m17_596 [label="Entry Unk.RemoveNamespace", span="", cluster="Unk.RemoveNamespace", file="JValue.cs"];
m17_154 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JValue.cs"];
m17_270 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1237-1237", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_271 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JValue.cs"];
m17_272 [label="XObject xObject = value as XObject", span="1048-1048", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_444 [label="writer.WriteEndObject()", span="1362-1362", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_445 [label="XmlNodeType.DocumentType", span="1364-1364", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_446 [label="IXmlDocumentType documentType = (IXmlDocumentType)node", span="1365-1365", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_448 [label="writer.WriteStartObject()", span="1367-1367", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_451 [label="writer.WriteValue(documentType.Name)", span="1372-1372", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_452 [label="!string.IsNullOrEmpty(documentType.Public)", span="1374-1374", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_447 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1366-1366", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_449 [label="!string.IsNullOrEmpty(documentType.Name)", span="1369-1369", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_450 [label="writer.WritePropertyName(''@name'')", span="1371-1371", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_453 [label="writer.WritePropertyName(''@public'')", span="1376-1376", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_454 [label="writer.WriteValue(documentType.Public)", span="1377-1377", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_573 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", span="1581-1581", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_574 [label="IXmlElement element = CreateElement(elementName, document, elementPrefix, manager)", span="1583-1583", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_582 [label="string text = ConvertTokenToXmlValue(reader)", span="1606-1606", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_588 [label="DeserializeNode(reader, document, manager, element)", span="1622-1622", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_575 [label="currentNode.AppendChild(element)", span="1585-1585", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_580 [label="element.SetAttributeNode(attribute)", span="1597-1597", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_584 [label="element.AppendChild(document.CreateTextNode(text))", span="1609-1609", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_581 [label="reader.TokenType == JsonToken.String\r\n                || reader.TokenType == JsonToken.Integer\r\n                || reader.TokenType == JsonToken.Float\r\n                || reader.TokenType == JsonToken.Boolean\r\n                || reader.TokenType == JsonToken.Date", span="1600-1604", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_583 [label="text != null", span="1607-1607", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_587 [label="manager.PushScope()", span="1621-1621", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_589 [label="manager.PopScope()", span="1623-1623", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_579 [label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                    ? document.CreateAttribute(encodedName, manager.LookupNamespace(attributePrefix) ?? string.Empty, nameValue.Value)\r\n                    : document.CreateAttribute(encodedName, nameValue.Value)", span="1593-1595", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_576 [label=attributeNameValues, span="1588-1588", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_585 [label="reader.TokenType == JsonToken.Null", span="1612-1612", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_586 [label="reader.TokenType != JsonToken.EndObject", span="1619-1619", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_590 [label="manager.RemoveNamespace(string.Empty, manager.DefaultNamespace)", span="1626-1626", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_577 [label="string encodedName = XmlConvert.EncodeName(nameValue.Key)", span="1590-1590", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_578 [label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1591-1591", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_591 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", span="1581-1581", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="JValue.cs"];
m17_378 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JValue.cs"];
m17_381 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JValue.cs"];
m17_387 [label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="1243-1243", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_635 [label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1711-1711", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_639 [label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1718-1718", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_641 [label=WriteArrayAttribute, span="1722-1722", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_642 [label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1724-1724", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_643 [label="count == 1 && WriteArrayAttribute", span="1727-1727", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_647 [label="AddJsonArrayAttribute(element, document)", span="1734-1734", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_634 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1709-1709", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_636 [label="currentNode.AppendChild(nestedArrayElement)", span="1713-1713", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_644 [label="nestedArrayElement.ChildNodes", span="1729-1729", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_638 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1716-1716", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_640 [label="count++", span="1719-1719", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_637 [label="int count = 0", span="1715-1715", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_646 [label="element != null && element.LocalName == propertyName", span="1732-1732", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_645 [label="IXmlElement element = childNode as IXmlElement", span="1731-1731", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_648 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1707-1707", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="JValue.cs"];
m17_391 [label="manager.PushScope()", span="1252-1252", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_29 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="83-83", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="JValue.cs"];
m17_390 [label="SerializeGroupedNodes(writer, node, manager, false)", span="1248-1248", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_424 [label="return;", span="1324-1324", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_425 [label="node.NamespaceUri == JsonNamespaceUri", span="1327-1327", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_426 [label="node.LocalName == ''Array''", span="1329-1329", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_628 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JValue.cs"];
m17_708 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="2025-2025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_788 [label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="2027-2027", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_789 [label="attributeName.Length == 5", span="2029-2029", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_792 [label="attributeName[5] == ':'", span="2034-2034", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_793 [label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="2036-2036", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_795 [label="prefix = null", span="2040-2040", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_791 [label="return true;", span="2032-2032", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_794 [label="return true;", span="2037-2037", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_796 [label="return false;", span="2041-2041", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_790 [label="prefix = string.Empty", span="2031-2031", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_797 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="2025-2025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="JValue.cs"];
m17_14 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JValue.cs"];
m17_455 [label="!string.IsNullOrEmpty(documentType.System)", span="1379-1379", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_800 [label=c, span="2046-2046", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JValue.cs"];
m17_803 [label="return false;", span="2054-2054", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JValue.cs"];
m17_802 [label="return true;", span="2050-2050", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JValue.cs"];
m17_801 [label="xmlNode.NamespaceUri != JsonNamespaceUri", span="2048-2048", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JValue.cs"];
m17_804 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", span="2044-2044", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="JValue.cs"];
m17_805 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="2065-2065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JValue.cs"];
m17_806 [label="typeof(XObject).IsAssignableFrom(valueType)", span="2068-2068", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JValue.cs"];
m17_808 [label="typeof(XmlNode).IsAssignableFrom(valueType)", span="2074-2074", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JValue.cs"];
m17_807 [label="return true;", span="2070-2070", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JValue.cs"];
m17_809 [label="return true;", span="2076-2076", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JValue.cs"];
m17_810 [label="return false;", span="2080-2080", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JValue.cs"];
m17_811 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="2065-2065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="JValue.cs"];
m17_52 [label="return (0d).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="235-235", cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs"];
m17_53 [label="return result;", span="238-238", cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs"];
m17_54 [label="Exit Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="218-218", cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs"];
m17_649 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1741-1741", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JValue.cs"];
m17_650 [label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1743-1743", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JValue.cs"];
m17_651 [label="element is XElementWrapper", span="1747-1747", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JValue.cs"];
m17_652 [label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1749-1749", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JValue.cs"];
m17_653 [label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1751-1751", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JValue.cs"];
m17_654 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1741-1741", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="JValue.cs"];
m17_43 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="98-98", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="JValue.cs"];
m17_44 [label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceUri));", span="100-100", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="JValue.cs"];
m17_47 [label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="105-105", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JValue.cs"];
m17_48 [label="attribute.Value = value", span="106-106", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JValue.cs"];
m17_50 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="103-103", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JValue.cs"];
m17_45 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="98-98", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="JValue.cs"];
m17_46 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="103-103", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JValue.cs"];
m17_49 [label="return attribute;", span="108-108", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="JValue.cs"];
m17_397 [label=writePropertyName, span="1267-1267", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_572 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", span="1630-1630", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JValue.cs"];
m17_601 [label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                ? document.CreateAttribute(encodedName, manager.LookupNamespace(attributePrefix), attributeValue)\r\n                : document.CreateAttribute(encodedName, attributeValue)", span="1640-1642", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JValue.cs"];
m17_599 [label="string encodedName = XmlConvert.EncodeName(attributeName)", span="1637-1637", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JValue.cs"];
m17_600 [label="string attributeValue = reader.Value.ToString()", span="1638-1638", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JValue.cs"];
m17_602 [label="((IXmlElement)currentNode).SetAttributeNode(attribute)", span="1644-1644", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JValue.cs"];
m17_598 [label="throw JsonSerializationException.Create(reader, ''JSON root object has property '{0}' that will be converted to an attribute. A root object cannot have any attribute properties. Consider specifying a DeserializeRootElementName.''.FormatWith(CultureInfo.InvariantCulture, propertyName));", span="1634-1634", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JValue.cs"];
m17_597 [label="currentNode.NodeType == XmlNodeType.Document", span="1632-1632", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JValue.cs"];
m17_603 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", span="1630-1630", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="JValue.cs"];
m17_710 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JValue.cs"];
m17_147 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="JValue.cs"];
m17_709 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="JValue.cs"];
m17_146 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JValue.cs"];
m17_396 [label="manager.AddNamespace(namespacePrefix, namespaceUri)", span="1263-1263", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_38 [label="other == this", span="200-200", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs"];
m17_39 [label="return true;", span="201-201", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs"];
m17_40 [label="return ValuesEquals(this, other);", span="203-203", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs"];
m17_15 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JValue.cs"];
m17_273 [label="xObject != null", span="1049-1049", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_274 [label="return XContainerWrapper.WrapNode(xObject);", span="1051-1051", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_275 [label="XmlNode node = value as XmlNode", span="1055-1055", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="JValue.cs"];
m17_37 [label="return false;", span="199-199", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs"];
m17_428 [label=writePropertyName, span="1335-1335", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_429 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1337-1337", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_430 [label="writer.WriteValue(node.Value)", span="1339-1339", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_392 [label="node.Attributes", span="1254-1254", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_393 [label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="1256-1256", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_394 [label="string namespacePrefix = (attribute.LocalName != ''xmlns'')\r\n                                    ? XmlConvert.DecodeName(attribute.LocalName)\r\n                                    : string.Empty", span="1258-1260", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_395 [label="string namespaceUri = attribute.Value", span="1261-1261", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_592 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1946-1946", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JValue.cs"];
m17_755 [label="string ns = string.IsNullOrEmpty(elementPrefix) ? manager.DefaultNamespace : manager.LookupNamespace(elementPrefix)", span="1949-1949", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JValue.cs"];
m17_756 [label="IXmlElement element = (!string.IsNullOrEmpty(ns)) ? document.CreateElement(encodeName, ns) : document.CreateElement(encodeName)", span="1951-1951", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JValue.cs"];
m17_754 [label="string encodeName = XmlConvert.EncodeName(elementName)", span="1948-1948", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JValue.cs"];
m17_757 [label="return element;", span="1953-1953", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JValue.cs"];
m17_758 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1946-1946", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="JValue.cs"];
m17_385 [label="XmlNodeType.Document", span="1241-1241", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_153 [label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0", cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="JValue.cs"];
m17_405 [label="writer.WriteValue(string.Empty)", span="1289-1289", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_406 [label="writer.WriteStartObject()", span="1294-1294", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_408 [label="i < node.Attributes.Count", span="1296-1296", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_411 [label="SerializeGroupedNodes(writer, node, manager, true)", span="1301-1301", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_407 [label="int i = 0", span="1296-1296", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_409 [label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1298-1298", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_410 [label="i++", span="1296-1296", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_412 [label="writer.WriteEndObject()", span="1303-1303", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="JValue.cs"];
m17_423 [label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="773-773", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs"];
m17_456 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="356-356", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JValue.cs"];
m17_422 [label="return _value.ToString();", span="778-778", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs"];
m17_421 [label="return string.Empty;", span="776-776", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs"];
m17_419 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="773-773", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs"];
m17_420 [label="_value == null", span="775-775", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs"];
m17_594 [label="Entry Unk.LookupNamespace", span="", cluster="Unk.LookupNamespace", file="JValue.cs"];
m17_568 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1757-1757", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_670 [label="attributeValue = ConvertTokenToXmlValue(reader)", span="1790-1790", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_673 [label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1794-1794", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_669 [label="reader.Read()", span="1789-1789", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_671 [label="attributeNameValues.Add(attributeName, attributeValue)", span="1791-1791", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_674 [label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1796-1796", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_668 [label="attributeName = attributeName.Substring(1)", span="1788-1788", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_672 [label="string namespacePrefix", span="1793-1793", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_659 [label="!finishedAttributes && !finishedElement && reader.Read()", span="1773-1773", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_663 [label="!string.IsNullOrEmpty(attributeName)", span="1780-1780", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_693 [label="reader.Read()", span="1832-1832", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_655 [label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1759-1759", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_658 [label="reader.TokenType != JsonToken.String\r\n                && reader.TokenType != JsonToken.Null\r\n                && reader.TokenType != JsonToken.Boolean\r\n                && reader.TokenType != JsonToken.Integer\r\n                && reader.TokenType != JsonToken.Float\r\n                && reader.TokenType != JsonToken.Date\r\n                && reader.TokenType != JsonToken.StartConstructor", span="1764-1770", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_660 [label="reader.TokenType", span="1775-1775", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_662 [label="string attributeName = reader.Value.ToString()", span="1778-1778", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_682 [label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1809-1809", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_685 [label="manager.LookupNamespace(''json'' + i) != null", span="1814-1814", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_689 [label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1821-1821", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_694 [label="!JsonTokenUtils.IsPrimitiveToken(reader.TokenType)", span="1834-1834", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_695 [label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken: '' + reader.TokenType);", span="1836-1836", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_696 [label="attributeValue = (reader.Value != null) ? reader.Value.ToString() : null", span="1839-1839", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_705 [label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken: '' + reader.TokenType);", span="1865-1865", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_667 [label="'@'", span="1787-1787", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_676 [label=attributeName, span="1800-1800", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_690 [label="attributeName == JsonTypeReflector.ArrayValuesPropertyName", span="1825-1825", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_692 [label="attributeName = attributeName.Substring(1)", span="1831-1831", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_656 [label="bool finishedAttributes = false", span="1760-1760", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_697 [label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1840-1840", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_657 [label="bool finishedElement = false", span="1761-1761", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_700 [label="finishedAttributes = true", span="1854-1854", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_699 [label="finishedAttributes = true", span="1848-1848", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_698 [label="finishedAttributes = true", span="1843-1843", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_691 [label="finishedAttributes = true", span="1827-1827", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_702 [label="finishedElement = true", span="1859-1859", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_704 [label="finishedElement = true", span="1862-1862", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_706 [label="return attributeNameValues;", span="1870-1870", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_664 [label="char firstChar = attributeName[0]", span="1782-1782", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_688 [label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1820-1820", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_661 [label="JsonToken.PropertyName", span="1777-1777", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_701 [label="JsonToken.EndObject", span="1858-1858", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_703 [label="JsonToken.Comment", span="1861-1861", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_681 [label="JsonTypeReflector.ValuePropertyName", span="1806-1806", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_683 [label="jsonPrefix == null", span="1810-1810", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_684 [label="int? i = null", span="1813-1813", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_686 [label="i = i.GetValueOrDefault() + 1", span="1816-1816", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_687 [label="jsonPrefix = ''json'' + i", span="1818-1818", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_666 [label=firstChar, span="1785-1785", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_675 [label="'$'", span="1799-1799", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_677 [label="JsonTypeReflector.ArrayValuesPropertyName", span="1802-1802", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_665 [label="string attributeValue", span="1783-1783", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_680 [label="JsonTypeReflector.TypePropertyName", span="1805-1805", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_678 [label="JsonTypeReflector.IdPropertyName", span="1803-1803", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_679 [label="JsonTypeReflector.RefPropertyName", span="1804-1804", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_707 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1757-1757", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="JValue.cs"];
m17_768 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1976-1976", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_770 [label="count == 1 && WriteArrayAttribute", span="1980-1980", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_774 [label="AddJsonArrayAttribute(element, document)", span="1987-1987", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_775 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1995-1995", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_779 [label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="2003-2003", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_786 [label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="2015-2015", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_759 [label="reader.TokenType", span="1960-1960", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_761 [label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1963-1963", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_762 [label="throw JsonSerializationException.Create(reader, ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifying a DeserializeRootElementName.'');", span="1965-1965", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_763 [label="string propertyName = reader.Value.ToString()", span="1968-1968", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_764 [label="reader.Read()", span="1969-1969", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_765 [label="reader.TokenType == JsonToken.StartArray", span="1971-1971", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_767 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1974-1974", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_771 [label="currentNode.ChildNodes", span="1982-1982", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_777 [label="string constructorName = reader.Value.ToString()", span="1999-1999", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_778 [label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="2001-2001", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_781 [label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="2007-2007", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_785 [label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="2013-2013", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_769 [label="count++", span="1977-1977", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_766 [label="int count = 0", span="1973-1973", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_773 [label="element != null && element.LocalName == propertyName", span="1985-1985", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_772 [label="IXmlElement element = childNode as IXmlElement", span="1984-1984", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_784 [label="return;", span="2011-2011", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_760 [label="JsonToken.PropertyName", span="1962-1962", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_776 [label="JsonToken.StartConstructor", span="1998-1998", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_780 [label="JsonToken.Comment", span="2006-2006", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_782 [label="JsonToken.EndObject", span="2009-2009", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_783 [label="JsonToken.EndArray", span="2010-2010", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_787 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1956-1956", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="JValue.cs"];
m17_821 [label="Newtonsoft.Json.Converters.XObjectWrapper", span="", file="JValue.cs"];
m17_818 [label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", span="", file="JValue.cs"];
m17_823 [label="Newtonsoft.Json.Converters.XmlNodeConverter", span="", file="JValue.cs"];
m17_812 [label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span="", file="JValue.cs"];
m17_813 [label="Newtonsoft.Json.Converters.XmlElementWrapper", span="", file="JValue.cs"];
m17_814 [label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span="", file="JValue.cs"];
m17_815 [label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", span="", file="JValue.cs"];
m17_816 [label="Newtonsoft.Json.Converters.XmlNodeWrapper", span="", file="JValue.cs"];
m17_822 [label="Newtonsoft.Json.Converters.XElementWrapper", span="", file="JValue.cs"];
m17_820 [label="Newtonsoft.Json.Converters.XContainerWrapper", span="", file="JValue.cs"];
m17_819 [label="Newtonsoft.Json.Converters.XDocumentWrapper", span="", file="JValue.cs"];
m18_32 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JValueCast.cs"];
m18_30 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="JValueCast.cs"];
m18_26 [label="Entry System.Console.WriteLine(decimal)", span="0-0", cluster="System.Console.WriteLine(decimal)", file="JValueCast.cs"];
m18_28 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JValueCast.cs"];
m18_22 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValueCast.cs"];
m18_25 [label="Entry System.Console.WriteLine(bool)", span="0-0", cluster="System.Console.WriteLine(bool)", file="JValueCast.cs"];
m18_31 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JValueCast.cs"];
m18_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_1 [label="JValue v1 = new JValue(''1'')", span="13-13", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_2 [label="int i = (int)v1", span="14-14", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_3 [label="Console.WriteLine(i)", span="16-16", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_4 [label="JValue v2 = new JValue(true)", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_5 [label="bool b = (bool)v2", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_6 [label="Console.WriteLine(b)", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_7 [label="JValue v3 = new JValue(''19.95'')", span="25-25", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_8 [label="decimal d = (decimal)v3", span="26-26", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_9 [label="Console.WriteLine(d)", span="28-28", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_10 [label="JValue v4 = new JValue(new DateTime(2013, 1, 21))", span="31-31", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_11 [label="string s = (string)v4", span="32-32", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_12 [label="Console.WriteLine(s)", span="34-34", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_13 [label="JValue v5 = new JValue(''http://www.bing.com'')", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_14 [label="Uri u = (Uri)v5", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_15 [label="Console.WriteLine(u)", span="40-40", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_16 [label="JValue v6 = new JValue((object)null)", span="43-43", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", color=red, community=0, file="JValueCast.cs"];
m18_17 [label="u = (Uri)v6", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_19 [label="DateTime? dt = (DateTime?)v6", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_18 [label="Console.WriteLine((u != null) ? u.ToString() : ''{null}'')", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_20 [label="Console.WriteLine((dt != null) ? dt.ToString() : ''{null}'')", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_21 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast.Example()", file="JValueCast.cs"];
m18_27 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JValueCast.cs"];
m18_23 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="JValueCast.cs"];
m18_33 [label="Entry System.Nullable<T>.ToString()", span="0-0", cluster="System.Nullable<T>.ToString()", file="JValueCast.cs"];
m18_29 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JValueCast.cs"];
m18_24 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValueCast.cs"];
m19_20 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="JValueTests.cs"];
m19_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="JValueTests.cs"];
m19_1 [label="List<StringComparison> stringComparisons = new List<StringComparison>\r\n            {\r\n                StringComparison.CurrentCulture,\r\n                StringComparison.InvariantCulture\r\n            }", span="38-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", color=green, community=0, file="JValueTests.cs"];
m19_2 [label="string jsonWithoutConverter = JsonConvert.SerializeObject(stringComparisons)", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", color=green, community=0, file="JValueTests.cs"];
m19_3 [label="Console.WriteLine(jsonWithoutConverter)", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", color=green, community=0, file="JValueTests.cs"];
m19_4 [label="string jsonWithConverter = JsonConvert.SerializeObject(stringComparisons, new StringEnumConverter())", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", color=green, community=0, file="JValueTests.cs"];
m19_5 [label="Console.WriteLine(jsonWithConverter)", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", color=green, community=0, file="JValueTests.cs"];
m19_6 [label="List<StringComparison> newStringComparsions = JsonConvert.DeserializeObject<List<StringComparison>>(\r\n                jsonWithConverter,\r\n                new StringEnumConverter())", span="54-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", color=green, community=0, file="JValueTests.cs"];
m19_7 [label="Console.WriteLine(string.Join('', '', newStringComparsions.Select(c => c.ToString())))", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="JValueTests.cs"];
m19_16 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="JValueTests.cs"];
m19_14 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JValueTests.cs"];
m19_15 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JValueTests.cs"];
m19_8 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="JValueTests.cs"];
m19_10 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JValueTests.cs"];
m19_17 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="JValueTests.cs"];
m19_18 [label="c.ToString()", span="58-58", cluster="lambda expression", file="JValueTests.cs"];
m19_19 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="JValueTests.cs"];
m19_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JValueTests.cs"];
m19_13 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JValueTests.cs"];
m19_11 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JValueTests.cs"];
m19_12 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="59-59", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JValueTests.cs"];
m22_119 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="SerializationErrorHandlingTests.cs"];
m22_121 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="SerializationErrorHandlingTests.cs"];
m22_12 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.TryGetValue(string, out object)", span="72-72", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.TryGetValue(string, out object)", file="SerializationErrorHandlingTests.cs"];
m22_13 [label="return _inner.TryGetValue(key, out value);", span="74-74", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.TryGetValue(string, out object)", file="SerializationErrorHandlingTests.cs"];
m22_14 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.TryGetValue(string, out object)", span="72-72", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.TryGetValue(string, out object)", file="SerializationErrorHandlingTests.cs"];
m22_202 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="SerializationErrorHandlingTests.cs"];
m22_249 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoSetter.DocNoSetter(Newtonsoft.Json.Linq.JObject)", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoSetter.DocNoSetter(Newtonsoft.Json.Linq.JObject)", file="SerializationErrorHandlingTests.cs"];
m22_250 [label="_content = content", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoSetter.DocNoSetter(Newtonsoft.Json.Linq.JObject)", file="SerializationErrorHandlingTests.cs"];
m22_251 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoSetter.DocNoSetter(Newtonsoft.Json.Linq.JObject)", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoSetter.DocNoSetter(Newtonsoft.Json.Linq.JObject)", file="SerializationErrorHandlingTests.cs"];
m22_218 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", span="392-392", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", file="SerializationErrorHandlingTests.cs"];
m22_11 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="SerializationErrorHandlingTests.cs"];
m22_3 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SerializationErrorHandlingTests.cs"];
m22_8 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(string)", span="67-67", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(string)", file="SerializationErrorHandlingTests.cs"];
m22_9 [label="return _inner.Remove(key);", span="69-69", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(string)", file="SerializationErrorHandlingTests.cs"];
m22_10 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(string)", span="67-67", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(string)", file="SerializationErrorHandlingTests.cs"];
m22_15 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SerializationErrorHandlingTests.cs"];
m22_23 [label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()", file="SerializationErrorHandlingTests.cs"];
m22_64 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", span="174-174", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="SerializationErrorHandlingTests.cs"];
m22_65 [label="Name = name", span="176-176", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="SerializationErrorHandlingTests.cs"];
m22_66 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", span="174-174", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="SerializationErrorHandlingTests.cs"];
m22_139 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="SerializationErrorHandlingTests.cs"];
m22_142 [label="Assert.AreEqual(''John Smith'', account.DisplayName)", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="SerializationErrorHandlingTests.cs"];
m22_143 [label="Assert.AreEqual(''contoso'', account.Domain)", span="451-451", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="SerializationErrorHandlingTests.cs"];
m22_144 [label="Assert.AreEqual(''johns'', account.UserName)", span="452-452", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="SerializationErrorHandlingTests.cs"];
m22_141 [label="DirectoryAccount account = JsonConvert.DeserializeObject<DirectoryAccount>(json)", span="448-448", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="SerializationErrorHandlingTests.cs"];
m22_140 [label="string json = @''{'DisplayName':'John Smith', 'SAMAccountName':'contoso\\johns'}''", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="SerializationErrorHandlingTests.cs"];
m22_145 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="SerializationErrorHandlingTests.cs"];
m22_225 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="SerializationErrorHandlingTests.cs"];
m22_227 [label="Assert.AreEqual(null, c.ExtensionData1)", span="712-712", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="SerializationErrorHandlingTests.cs"];
m22_228 [label="Assert.AreEqual(2, c.ExtensionData2.Count)", span="713-713", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="SerializationErrorHandlingTests.cs"];
m22_229 [label="Assert.AreEqual(1, (int)((JArray)c.ExtensionData2[''first''])[0])", span="714-714", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="SerializationErrorHandlingTests.cs"];
m22_230 [label="Assert.AreEqual(2, (int)((JArray)c.ExtensionData2[''second''])[0])", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="SerializationErrorHandlingTests.cs"];
m22_226 [label="var c = JsonConvert.DeserializeObject<MultipleExtensionDataAttributesTestClass>(''{'first':[1],'second':[2]}'')", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="SerializationErrorHandlingTests.cs"];
m22_231 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="SerializationErrorHandlingTests.cs"];
m22_256 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="SerializationErrorHandlingTests.cs"];
m22_176 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", span="546-546", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_181 [label="Assert.AreEqual(''1'', (string)bizzaroC2[''$ref''])", span="566-566", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_179 [label="Assert.AreEqual(''Name!'', c2.Name)", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_180 [label="JObject bizzaroC2 = (JObject)c2.ExtensionData[''Self'']", span="564-564", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_178 [label="var c2 = JsonConvert.DeserializeObject<PublicJTokenExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", span="557-560", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_177 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", span="548-555", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_182 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", span="546-546", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_122 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", span="345-345", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_125 [label="Assert.AreEqual(''Actually set!'', c.Name)", span="361-361", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_126 [label="Assert.AreEqual(4, c.Ints.Count)", span="362-362", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_127 [label="Assert.AreEqual(''Readonly'', (string)c.ExtensionData[''Readonly''])", span="364-364", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_128 [label="Assert.AreEqual(''Wrong name!'', (string)c.ExtensionData[''CustomName''])", span="365-365", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_129 [label="Assert.AreEqual(true, (bool)c.ExtensionData[''GetPrivate''])", span="366-366", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_130 [label="Assert.AreEqual(true, (bool)c.ExtensionData[''GetOnly''])", span="367-367", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_131 [label="Assert.AreEqual(true, (bool)c.ExtensionData[''NewValueSimple''])", span="368-368", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_134 [label="Assert.AreEqual(7, c.ExtensionData.Count)", span="372-372", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_124 [label="ExtensionDataTestClass c = JsonConvert.DeserializeObject<ExtensionDataTestClass>(json)", span="359-359", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_132 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), c.ExtensionData[''NewValueComplex'']))", span="369-369", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_133 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), c.ExtensionData[''Ignored'']))", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_123 [label="string json = @''{\r\n  ''''Ints'''': [1,2,3],\r\n  ''''Ignored'''': [1,2,3],\r\n  ''''Readonly'''': ''''Readonly'''',\r\n  ''''Name'''': ''''Actually set!'''',\r\n  ''''CustomName'''': ''''Wrong name!'''',\r\n  ''''GetPrivate'''': true,\r\n  ''''GetOnly'''': true,\r\n  ''''NewValueSimple'''': true,\r\n  ''''NewValueComplex'''': [1,2,3]\r\n}''", span="347-357", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_135 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", span="345-345", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="SerializationErrorHandlingTests.cs"];
m22_95 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="SerializationErrorHandlingTests.cs"];
m22_118 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="SerializationErrorHandlingTests.cs"];
m22_27 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="SerializationErrorHandlingTests.cs"];
m22_279 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoGetter.DocNoGetter()", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoGetter.DocNoGetter()", file="SerializationErrorHandlingTests.cs"];
m22_155 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", span="482-482", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_157 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="493-493", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_156 [label="string json = JsonConvert.SerializeObject(new PublicNoWriteExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            })", span="484-491", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_158 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", span="482-482", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_232 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="SerializationErrorHandlingTests.cs"];
m22_234 [label="Assert.AreEqual(null, c.ExtensionData1)", span="723-723", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="SerializationErrorHandlingTests.cs"];
m22_235 [label="Assert.AreEqual(null, c.ExtensionData2)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="SerializationErrorHandlingTests.cs"];
m22_236 [label="Assert.AreEqual(2, c.ExtensionData0.Count)", span="725-725", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="SerializationErrorHandlingTests.cs"];
m22_237 [label="Assert.AreEqual(1, (int)c.ExtensionData0[''first''])", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="SerializationErrorHandlingTests.cs"];
m22_238 [label="Assert.AreEqual(2, (int)c.ExtensionData0[''second''])", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="SerializationErrorHandlingTests.cs"];
m22_233 [label="var c = JsonConvert.DeserializeObject<ExtensionDataAttributesInheritanceTestClass>(''{'first':1,'second':2}'')", span="721-721", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="SerializationErrorHandlingTests.cs"];
m22_239 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="SerializationErrorHandlingTests.cs"];
m22_300 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ItemWithConstructor.ItemWithConstructor(string)", span="870-870", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ItemWithConstructor.ItemWithConstructor(string)", file="SerializationErrorHandlingTests.cs"];
m22_301 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ItemWithConstructor.ItemWithConstructor(string)", span="870-870", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ItemWithConstructor.ItemWithConstructor(string)", file="SerializationErrorHandlingTests.cs"];
m22_258 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetterAndNoValue()", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetterAndNoValue()", file="SerializationErrorHandlingTests.cs"];
m22_260 [label="Assert.AreEqual(@''{''''_name'''':''''documentName''''}'', json)", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetterAndNoValue()", file="SerializationErrorHandlingTests.cs"];
m22_259 [label="string json = JsonConvert.SerializeObject(new DocNoSetter(null)\r\n            {\r\n                Name = ''documentName''\r\n            })", span="787-790", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetterAndNoValue()", file="SerializationErrorHandlingTests.cs"];
m22_261 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetterAndNoValue()", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetterAndNoValue()", file="SerializationErrorHandlingTests.cs"];
m22_35 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="SerializationErrorHandlingTests.cs"];
m22_257 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="SerializationErrorHandlingTests.cs"];
m22_213 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="SerializationErrorHandlingTests.cs"];
m22_216 [label="Assert.AreEqual(''{}'', json)", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="SerializationErrorHandlingTests.cs"];
m22_215 [label="string json = JsonConvert.SerializeObject(c)", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="SerializationErrorHandlingTests.cs"];
m22_214 [label="FieldExtensionDataAttributeTestClass c = new FieldExtensionDataAttributeTestClass\r\n            {\r\n                ExtensionData = new Dictionary<object, object>()\r\n            }", span="687-690", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="SerializationErrorHandlingTests.cs"];
m22_217 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="SerializationErrorHandlingTests.cs"];
m22_164 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_173 [label="Assert.AreEqual(1, (long)bizzaroC2.ExtensionData[''Test''])", span="542-542", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=green, community=0, file="SerializationErrorHandlingTests.cs"];
m22_171 [label="PublicExtensionDataAttributeTestClass bizzaroC2 = (PublicExtensionDataAttributeTestClass)c2.ExtensionData[''Self'']", span="539-539", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_172 [label="Assert.AreEqual(c2, bizzaroC2)", span="541-541", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_169 [label="var c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", span="532-535", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_170 [label="Assert.AreEqual(''Name!'', c2.Name)", span="537-537", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_167 [label="string json = JsonConvert.SerializeObject(c, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="517-521", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_168 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="523-530", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_165 [label="var c = new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            }", span="507-514", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_166 [label="c.ExtensionData[''Self''] = c", span="515-515", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_174 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="SerializationErrorHandlingTests.cs"];
m22_160 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_162 [label="Assert.AreEqual(null, c.ExtensionData)", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_161 [label="PublicNoReadExtensionDataAttributeTestClass c = JsonConvert.DeserializeObject<PublicNoReadExtensionDataAttributeTestClass>(@''{''''Name'''':''''Name!'''',''''Test'''':1}'')", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_163 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_203 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", span="662-662", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_206 [label="Assert.AreEqual(''Name!'', c.Name)", span="672-672", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_207 [label="Assert.AreEqual(2, c.ExtensionData.Count)", span="673-673", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_208 [label="Assert.AreEqual(''NoMatch!'', (string)c.ExtensionData[''NoMatch''])", span="675-675", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_210 [label="Assert.AreEqual(1, o.Count)", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_205 [label="var c = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json)", span="670-670", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_209 [label="var o = (JObject)c.ExtensionData[''ExtensionData'']", span="679-679", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_211 [label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''HAI'', true } }, o))", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_204 [label="string json = @''{\r\n  'Name':'Name!',\r\n  'NoMatch':'NoMatch!',\r\n  'ExtensionData':{'HAI':true}\r\n}''", span="664-668", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_212 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", span="662-662", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_299 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="696-696", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="SerializationErrorHandlingTests.cs"];
m22_24 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Contains(System.Collections.Generic.KeyValuePair<string, object>)", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Contains(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_25 [label="return _inner.Contains(item);", span="100-100", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Contains(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_26 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Contains(System.Collections.Generic.KeyValuePair<string, object>)", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Contains(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_294 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="839-839", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="SerializationErrorHandlingTests.cs"];
m22_297 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="SerializationErrorHandlingTests.cs"];
m22_280 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", span="848-848", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_288 [label="Assert.AreEqual(''foo'', (string)deserialize.ExtensionData[''Foo''][''$values''][0])", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_289 [label="Assert.AreEqual(''bar'', (string)deserialize.ExtensionData[''Foo''][''$values''][1])", span="862-862", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_287 [label="Assert.AreEqual(JTokenType.String, value.Type)", span="860-860", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_285 [label="Item deserialize = jsonSerializer.Deserialize<Item>(new JsonTextReader(new StringReader(str)))", span="857-857", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_286 [label="JToken value = deserialize.ExtensionData[''Foo''][''$type'']", span="859-859", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_281 [label="JsonSerializer jsonSerializer = new JsonSerializer\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            }", span="850-853", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_284 [label="string str = stringWriter.GetStringBuilder().ToString()", span="856-856", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_282 [label="StringWriter stringWriter = new StringWriter()", span="854-854", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_283 [label="jsonSerializer.Serialize(stringWriter, new Item())", span="855-855", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_290 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", span="848-848", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Deserialize_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_96 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="SerializationErrorHandlingTests.cs"];
m22_266 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndWithExtensionData()", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndWithExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_269 [label="Assert.AreEqual(''Error setting value in extension data for type 'Newtonsoft.Json.Tests.Serialization.ExtensionDataTests+DocNoSetter'. Path 'Property1', line 1, position 39.'', ex.Message)", span="811-811", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndWithExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_270 [label="Assert.AreEqual(''Cannot set value onto extension data member 'Content'. The extension data collection is null and it cannot be set.'', ex.InnerException.Message)", span="812-812", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndWithExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_268 [label=JsonSerializationException, span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndWithExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_267 [label="JsonConvert.DeserializeObject<DocNoSetter>(@''{''''_name'''':''''documentName'''',''''Property1'''':123}'')", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndWithExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_271 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndWithExtensionData()", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndWithExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_28 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, object>[], int)", span="103-103", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, object>[], int)", file="SerializationErrorHandlingTests.cs"];
m22_29 [label="_inner.CopyTo(array, arrayIndex)", span="105-105", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, object>[], int)", file="SerializationErrorHandlingTests.cs"];
m22_30 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, object>[], int)", span="103-103", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, object>[], int)", file="SerializationErrorHandlingTests.cs"];
m22_302 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", span="881-881", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_310 [label="Assert.AreEqual(''foo'', (string)deserialize.ExtensionData[''Foo''][''$values''][0])", span="894-894", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_311 [label="Assert.AreEqual(''bar'', (string)deserialize.ExtensionData[''Foo''][''$values''][1])", span="895-895", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_309 [label="Assert.AreEqual(JTokenType.String, value.Type)", span="893-893", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_306 [label="string str = stringWriter.GetStringBuilder().ToString()", span="889-889", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_307 [label="Item deserialize = jsonSerializer.Deserialize<Item>(new JsonTextReader(new StringReader(str)))", span="890-890", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_308 [label="JToken value = deserialize.ExtensionData[''Foo''][''$type'']", span="892-892", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_304 [label="StringWriter stringWriter = new StringWriter()", span="887-887", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_305 [label="jsonSerializer.Serialize(stringWriter, new ItemWithConstructor(null))", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_303 [label="JsonSerializer jsonSerializer = new JsonSerializer\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            }", span="883-886", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_312 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", span="881-881", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeWithConstructor_WriteJsonDirectlyToJToken()", file="SerializationErrorHandlingTests.cs"];
m22_175 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="SerializationErrorHandlingTests.cs"];
m22_262 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndNoExtensionData()", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndNoExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_264 [label="Assert.AreEqual(''documentName'', doc.Name)", span="799-799", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndNoExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_263 [label="DocNoSetter doc = JsonConvert.DeserializeObject<DocNoSetter>(@''{''''_name'''':''''documentName''''}'')", span="797-797", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndNoExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_265 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndNoExtensionData()", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeExtensionData_NoSetterAndNoExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_97 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", span="264-264", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="SerializationErrorHandlingTests.cs"];
m22_102 [label="Assert.AreEqual(@''{''''TaxRate'''':0.15,''''HourlyRate'''':150,''''Hours'''':40}'', result)", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="SerializationErrorHandlingTests.cs"];
m22_101 [label="string result = JsonConvert.SerializeObject(invoice)", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="SerializationErrorHandlingTests.cs"];
m22_99 [label="var invoice = JsonConvert.DeserializeObject<CustomerInvoice>(json)", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="SerializationErrorHandlingTests.cs"];
m22_100 [label="invoice.TaxRate = 0.15m", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="SerializationErrorHandlingTests.cs"];
m22_98 [label="string json = @''{\r\n              'HourlyRate': 150,\r\n              'Hours': 40,\r\n              'TaxRate': 0.125\r\n            }''", span="266-270", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="SerializationErrorHandlingTests.cs"];
m22_103 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", span="264-264", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="SerializationErrorHandlingTests.cs"];
m22_190 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="SerializationErrorHandlingTests.cs"];
m22_191 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.0,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}''", span="600-611", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", color=green, community=0, file="SerializationErrorHandlingTests.cs"];
m22_192 [label="PublicExtensionDataAttributeTestClassWithNonDefaultConstructor c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClassWithNonDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="613-616", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="SerializationErrorHandlingTests.cs"];
m22_193 [label="Assert.AreEqual(''Name!'', c2.Name)", span="618-618", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="SerializationErrorHandlingTests.cs"];
m22_195 [label="Assert.AreEqual(2m, bizzaroC2.HourlyWage)", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="SerializationErrorHandlingTests.cs"];
m22_194 [label="WagePerson bizzaroC2 = (WagePerson)c2.ExtensionData[''Self'']", span="620-620", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="SerializationErrorHandlingTests.cs"];
m22_196 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="SerializationErrorHandlingTests.cs"];
m22_80 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="SerializationErrorHandlingTests.cs"];
m22_83 [label="Assert.AreEqual(JTokenType.Null, invoice._additionalData[''a''].Type)", span="219-219", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="SerializationErrorHandlingTests.cs"];
m22_84 [label="Assert.AreEqual(typeof(double), ((JValue)invoice._additionalData[''TaxRate'']).Value.GetType())", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="SerializationErrorHandlingTests.cs"];
m22_86 [label="Assert.AreEqual(@''{''''TaxRate'''':0.125,''''a'''':null}'', result)", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="SerializationErrorHandlingTests.cs"];
m22_82 [label="var invoice = JsonConvert.DeserializeObject<ExtendedObject>(json)", span="217-217", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="SerializationErrorHandlingTests.cs"];
m22_85 [label="string result = JsonConvert.SerializeObject(invoice)", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="SerializationErrorHandlingTests.cs"];
m22_81 [label="string json = @''{\r\n              'TaxRate': 0.125,\r\n              'a':null\r\n            }''", span="212-215", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="SerializationErrorHandlingTests.cs"];
m22_87 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="SerializationErrorHandlingTests.cs"];
m22_151 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="SerializationErrorHandlingTests.cs"];
m22_153 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="478-478", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="SerializationErrorHandlingTests.cs"];
m22_152 [label="string json = JsonConvert.SerializeObject(new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!''\r\n            })", span="473-476", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="SerializationErrorHandlingTests.cs"];
m22_154 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="SerializationErrorHandlingTests.cs"];
m22_197 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_199 [label="string json = JsonConvert.SerializeObject(c, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="642-646", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", color=green, community=0, file="SerializationErrorHandlingTests.cs"];
m22_198 [label="PublicExtensionDataAttributeTestClass c = new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    {\r\n                        ''Test'', new WagePerson\r\n                        {\r\n                            HourlyWage = 2.1m\r\n                        }\r\n                    }\r\n                }\r\n            }", span="628-640", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_200 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.ExtensionDataTests+PublicExtensionDataAttributeTestClass, Newtonsoft.Json.Tests'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.1,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}'', json)", span="648-658", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_201 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_90 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="SerializationErrorHandlingTests.cs"];
m22_93 [label="Assert.AreEqual(typeof(decimal), ((JValue)invoice._additionalData[''TaxRate'']).Value.GetType())", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="SerializationErrorHandlingTests.cs"];
m22_92 [label="var invoice = JsonConvert.DeserializeObject<ExtendedObject>(json, new JsonSerializerSettings\r\n            {\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="235-238", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="SerializationErrorHandlingTests.cs"];
m22_91 [label="string json = @''{\r\n              'TaxRate': 0.125,\r\n              'a':null\r\n            }''", span="230-233", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="SerializationErrorHandlingTests.cs"];
m22_94 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="SerializationErrorHandlingTests.cs"];
m22_295 [label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()", file="SerializationErrorHandlingTests.cs"];
m22_291 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="SerializationErrorHandlingTests.cs"];
m22_108 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", span="325-325", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_114 [label="Assert.AreEqual(''Name!'', c2.Name)", span="340-340", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_113 [label="JObjectExtensionDataTestClass c2 = JsonConvert.DeserializeObject<JObjectExtensionDataTestClass>(json)", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_115 [label="Assert.IsTrue(JToken.DeepEquals(c.ExtensionData, c2.ExtensionData))", span="341-341", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_112 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_109 [label="JObjectExtensionDataTestClass c = new JObjectExtensionDataTestClass()", span="327-327", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_111 [label="c.ExtensionData = new JObject\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', ''II'' },\r\n                { ''three'', new JArray(1, 1, 1) }\r\n            }", span="329-334", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_110 [label="c.Name = ''Name!''", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_116 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", span="325-325", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_293 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Item.Item()", span="836-836", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Item.Item()", file="SerializationErrorHandlingTests.cs"];
m22_40 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.System.Collections.IEnumerable.GetEnumerator()", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.System.Collections.IEnumerable.GetEnumerator()", file="SerializationErrorHandlingTests.cs"];
m22_41 [label="return _inner.GetEnumerator();", span="130-130", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.System.Collections.IEnumerable.GetEnumerator()", file="SerializationErrorHandlingTests.cs"];
m22_42 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.System.Collections.IEnumerable.GetEnumerator()", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.System.Collections.IEnumerable.GetEnumerator()", file="SerializationErrorHandlingTests.cs"];
m22_78 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SerializationErrorHandlingTests.cs"];
m22_63 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="SerializationErrorHandlingTests.cs"];
m22_146 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_148 [label="Assert.AreEqual(@''{''''Name'''':''''Name!'''',''''Test'''':1}'', json)", span="467-467", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_147 [label="string json = JsonConvert.SerializeObject(new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            })", span="458-465", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_149 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="SerializationErrorHandlingTests.cs"];
m22_43 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Example.Example()", span="136-136", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Example.Example()", file="SerializationErrorHandlingTests.cs"];
m22_44 [label="Data = new CustomDictionary()", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Example.Example()", file="SerializationErrorHandlingTests.cs"];
m22_45 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Example.Example()", span="136-136", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Example.Example()", file="SerializationErrorHandlingTests.cs"];
m22_117 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.JObjectExtensionDataTestClass.JObjectExtensionDataTestClass()", span="316-316", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.JObjectExtensionDataTestClass.JObjectExtensionDataTestClass()", file="SerializationErrorHandlingTests.cs"];
m22_20 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Clear()", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Clear()", file="SerializationErrorHandlingTests.cs"];
m22_21 [label="_inner.Clear()", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Clear()", file="SerializationErrorHandlingTests.cs"];
m22_22 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Clear()", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Clear()", file="SerializationErrorHandlingTests.cs"];
m22_79 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="SerializationErrorHandlingTests.cs"];
m22_7 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SerializationErrorHandlingTests.cs"];
m22_19 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SerializationErrorHandlingTests.cs"];
m22_67 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_73 [label="Assert.AreEqual(''Name!'', c2.Name)", span="203-203", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_75 [label="Assert.AreEqual(1, c2._extensionData.Count)", span="205-205", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_76 [label="Assert.AreEqual(''Value!'', (string)c2._extensionData[''Key!''])", span="206-206", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_72 [label="var c2 = JsonConvert.DeserializeObject<ExtensionDataDeserializeWithNonDefaultConstructor>(json)", span="201-201", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_74 [label="Assert.IsNotNull(c2._extensionData)", span="204-204", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_69 [label="c._extensionData = new Dictionary<string, JToken>\r\n            {\r\n                { ''Key!'', ''Value!'' }\r\n            }", span="189-192", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_71 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Key!'''': ''''Value!''''\r\n}'', json)", span="196-199", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_70 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="194-194", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_68 [label="ExtensionDataDeserializeWithNonDefaultConstructor c = new ExtensionDataDeserializeWithNonDefaultConstructor(''Name!'')", span="188-188", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_77 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="SerializationErrorHandlingTests.cs"];
m22_150 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClass.PublicExtensionDataAttributeTestClass()", span="398-398", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClass.PublicExtensionDataAttributeTestClass()", file="SerializationErrorHandlingTests.cs"];
m22_240 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", file="SerializationErrorHandlingTests.cs"];
m22_243 [label="Assert.AreEqual(null, c.LastActivityDate)", span="746-746", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", file="SerializationErrorHandlingTests.cs"];
m22_244 [label="Assert.AreEqual(1, c.CustomFields.Count)", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", file="SerializationErrorHandlingTests.cs"];
m22_245 [label="Assert.AreEqual(''Testing'', (string)c.CustomFields[''CustomField1''])", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", file="SerializationErrorHandlingTests.cs"];
m22_242 [label="var c = JsonConvert.DeserializeObject<TestClass>(json)", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", file="SerializationErrorHandlingTests.cs"];
m22_241 [label="string json = @''{ ''''LastActivityDate'''':null, ''''CustomField1'''':''''Testing'''' }''", span="742-742", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", file="SerializationErrorHandlingTests.cs"];
m22_246 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNullableProperty()", file="SerializationErrorHandlingTests.cs"];
m22_61 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="SerializationErrorHandlingTests.cs"];
m22_88 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SerializationErrorHandlingTests.cs"];
m22_276 [label="Entry lambda expression", span="829-832", cluster="lambda expression", file="SerializationErrorHandlingTests.cs"];
m22_277 [label="JsonConvert.SerializeObject(new DocNoGetter())", span="831-831", cluster="lambda expression", file="SerializationErrorHandlingTests.cs"];
m22_278 [label="Exit lambda expression", span="829-832", cluster="lambda expression", file="SerializationErrorHandlingTests.cs"];
m22_16 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(System.Collections.Generic.KeyValuePair<string, object>)", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_17 [label="_inner.Add(item)", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_18 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(System.Collections.Generic.KeyValuePair<string, object>)", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_39 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="SerializationErrorHandlingTests.cs"];
m22_159 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicNoWriteExtensionDataAttributeTestClass.PublicNoWriteExtensionDataAttributeTestClass()", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicNoWriteExtensionDataAttributeTestClass.PublicNoWriteExtensionDataAttributeTestClass()", file="SerializationErrorHandlingTests.cs"];
m22_298 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="SerializationErrorHandlingTests.cs"];
m22_31 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="SerializationErrorHandlingTests.cs"];
m22_183 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_184 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.0,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}''", span="572-583", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", color=green, community=0, file="SerializationErrorHandlingTests.cs"];
m22_185 [label="PublicExtensionDataAttributeTestClass c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="585-588", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_186 [label="Assert.AreEqual(''Name!'', c2.Name)", span="590-590", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_188 [label="Assert.AreEqual(2m, bizzaroC2.HourlyWage)", span="594-594", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_187 [label="WagePerson bizzaroC2 = (WagePerson)c2.ExtensionData[''Self'']", span="592-592", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_189 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="SerializationErrorHandlingTests.cs"];
m22_47 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_54 [label="Assert.AreEqual(JTokenType.Array, o1.Type)", span="165-165", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_55 [label="Assert.AreEqual(3, o1.Count)", span="166-166", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_56 [label="Assert.AreEqual(1, (int)o1[0])", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_57 [label="Assert.AreEqual(2, (int)o1[1])", span="168-168", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_58 [label="Assert.AreEqual(3, (int)o1[2])", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_53 [label="JArray o1 = (JArray)e2.Data[''extensionData1'']", span="163-163", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_51 [label="StringAssert.AreEqual(@''{\r\n  ''''extensionData1'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ]\r\n}'', json)", span="153-159", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_52 [label="Example e2 = JsonConvert.DeserializeObject<Example>(json)", span="161-161", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_50 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="151-151", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_48 [label="Example e = new Example()", span="148-148", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_49 [label="e.Data.Add(''extensionData1'', new int[] { 1, 2, 3 })", span="149-149", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_59 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DataBagDoesNotInheritFromDictionaryClass()", file="SerializationErrorHandlingTests.cs"];
m22_4 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.ContainsKey(string)", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.ContainsKey(string)", file="SerializationErrorHandlingTests.cs"];
m22_5 [label="return _inner.ContainsKey(key);", span="59-59", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.ContainsKey(string)", file="SerializationErrorHandlingTests.cs"];
m22_6 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.ContainsKey(string)", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.ContainsKey(string)", file="SerializationErrorHandlingTests.cs"];
m22_46 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.CustomDictionary()", span="48-48", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.CustomDictionary()", file="SerializationErrorHandlingTests.cs"];
m22_292 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="SerializationErrorHandlingTests.cs"];
m22_32 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(System.Collections.Generic.KeyValuePair<string, object>)", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_33 [label="return _inner.Remove(item);", span="120-120", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_34 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(System.Collections.Generic.KeyValuePair<string, object>)", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Remove(System.Collections.Generic.KeyValuePair<string, object>)", file="SerializationErrorHandlingTests.cs"];
m22_36 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.GetEnumerator()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.GetEnumerator()", file="SerializationErrorHandlingTests.cs"];
m22_37 [label="return _inner.GetEnumerator();", span="125-125", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.GetEnumerator()", file="SerializationErrorHandlingTests.cs"];
m22_38 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.GetEnumerator()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.GetEnumerator()", file="SerializationErrorHandlingTests.cs"];
m22_0 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(string, object)", span="52-52", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(string, object)", file="SerializationErrorHandlingTests.cs"];
m22_1 [label="_inner.Add(key, value)", span="54-54", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(string, object)", file="SerializationErrorHandlingTests.cs"];
m22_2 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(string, object)", span="52-52", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary.Add(string, object)", file="SerializationErrorHandlingTests.cs"];
m22_60 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="SerializationErrorHandlingTests.cs"];
m22_89 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="SerializationErrorHandlingTests.cs"];
m22_62 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="SerializationErrorHandlingTests.cs"];
m22_272 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoGetter()", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoGetter()", file="SerializationErrorHandlingTests.cs"];
m22_273 [label="ExceptionAssert.Throws<JsonException>(\r\n                () =>\r\n                {\r\n                    JsonConvert.SerializeObject(new DocNoGetter());\r\n                },\r\n                ''Invalid extension data attribute on 'Newtonsoft.Json.Tests.Serialization.ExtensionDataTests+DocNoGetter'. Member 'Content' must have a getter.'')", span="828-833", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoGetter()", file="SerializationErrorHandlingTests.cs"];
m22_274 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoGetter()", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoGetter()", file="SerializationErrorHandlingTests.cs"];
m22_252 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetter()", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetter()", file="SerializationErrorHandlingTests.cs"];
m22_254 [label="Assert.AreEqual(@''{''''_name'''':''''documentName'''',''''Property1'''':123}'', json)", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetter()", file="SerializationErrorHandlingTests.cs"];
m22_253 [label="string json = JsonConvert.SerializeObject(new DocNoSetter(new JObject(new JProperty(''Property1'', 123)))\r\n            {\r\n                Name = ''documentName''\r\n            })", span="777-780", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetter()", file="SerializationErrorHandlingTests.cs"];
m22_255 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetter()", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializeExtensionData_NoSetter()", file="SerializationErrorHandlingTests.cs"];
m22_219 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="SerializationErrorHandlingTests.cs"];
m22_221 [label="Assert.AreEqual(2, c.ExtensionData.Count)", span="702-702", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="SerializationErrorHandlingTests.cs"];
m22_222 [label="Assert.AreEqual(1, (long)c.ExtensionData[''first''])", span="703-703", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="SerializationErrorHandlingTests.cs"];
m22_223 [label="Assert.AreEqual(2, (long)c.ExtensionData[''second''])", span="704-704", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="SerializationErrorHandlingTests.cs"];
m22_220 [label="var c = JsonConvert.DeserializeObject<FieldExtensionDataAttributeTestClass>(''{'first':1,'second':2}'')", span="700-700", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="SerializationErrorHandlingTests.cs"];
m22_224 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="SerializationErrorHandlingTests.cs"];
m22_296 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="SerializationErrorHandlingTests.cs"];
m22_275 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="SerializationErrorHandlingTests.cs"];
m22_120 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="SerializationErrorHandlingTests.cs"];
m22_318 [label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoSetter", span="", file="SerializationErrorHandlingTests.cs"];
m22_315 [label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor", span="", file="SerializationErrorHandlingTests.cs"];
m22_314 [label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Example", span="", file="SerializationErrorHandlingTests.cs"];
m22_313 [label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary", span="", file="SerializationErrorHandlingTests.cs"];
m24_102 [label="Entry decimal.CompareTo(decimal)", span="0-0", cluster="decimal.CompareTo(decimal)", file="SpecialPropertyHandlingTests.cs"];
m24_101 [label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_137 [label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="583-583", cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="SpecialPropertyHandlingTests.cs"];
m24_138 [label="return new JValue(value, JTokenType.String);", span="585-585", cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="SpecialPropertyHandlingTests.cs"];
m24_139 [label="Exit Newtonsoft.Json.Linq.JValue.CreateString(string)", span="583-583", cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="SpecialPropertyHandlingTests.cs"];
m24_263 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1407-1407", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="SpecialPropertyHandlingTests.cs"];
m24_115 [label="Entry System.Guid.CompareTo(System.Guid)", span="0-0", cluster="System.Guid.CompareTo(System.Guid)", file="SpecialPropertyHandlingTests.cs"];
m24_248 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="933-933", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="SpecialPropertyHandlingTests.cs"];
m24_269 [label="Entry int.GetHashCode()", span="0-0", cluster="int.GetHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_254 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1066-1066", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="SpecialPropertyHandlingTests.cs"];
m24_243 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1195-1195", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="SpecialPropertyHandlingTests.cs"];
m24_256 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="992-992", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="SpecialPropertyHandlingTests.cs"];
m24_4 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="61-61", cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_5 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="61-61", cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_246 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="SpecialPropertyHandlingTests.cs"];
m24_103 [label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="401-401", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_122 [label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="403-403", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_123 [label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="404-404", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_124 [label="MathUtils.ApproxEquals(d1, d2)", span="407-407", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_126 [label="return d1.CompareTo(d2);", span="412-412", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_125 [label="return 0;", span="409-409", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_127 [label="Exit Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="401-401", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_18 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.Example()", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.Example()", file="SpecialPropertyHandlingTests.cs"];
m24_19 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.KnownTypesBinder.KnownTypesBinder()", span="36-36", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.KnownTypesBinder.KnownTypesBinder()", file="SpecialPropertyHandlingTests.cs"];
m24_24 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="SpecialPropertyHandlingTests.cs"];
m24_25 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="SpecialPropertyHandlingTests.cs"];
m24_28 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="SpecialPropertyHandlingTests.cs"];
m24_29 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="SpecialPropertyHandlingTests.cs"];
m24_105 [label="Entry long.CompareTo(long)", span="0-0", cluster="long.CompareTo(long)", file="SpecialPropertyHandlingTests.cs"];
m24_272 [label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="851-851", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_273 [label="other == null", span="853-853", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_275 [label="return ValuesEquals(this, other);", span="858-858", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_274 [label="return false;", span="855-855", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_276 [label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="851-851", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_110 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_252 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="973-973", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="SpecialPropertyHandlingTests.cs"];
m24_253 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="983-983", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="SpecialPropertyHandlingTests.cs"];
m24_146 [label="Entry Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="606-606", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_147 [label="value == null", span="608-608", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_149 [label="value is string", span="618-618", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_150 [label="return GetStringValueType(current);", span="620-620", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_151 [label="value is long || value is int || value is short || value is sbyte\r\n                     || value is ulong || value is uint || value is ushort || value is byte", span="622-623", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_153 [label="value is Enum", span="627-627", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_155 [label="value is double || value is float || value is decimal", span="637-637", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_157 [label="value is DateTime", span="641-641", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_159 [label="value is byte[]", span="651-651", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_161 [label="value is bool", span="655-655", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_163 [label="value is Guid", span="659-659", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_165 [label="value is Uri", span="663-663", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_167 [label="value is TimeSpan", span="667-667", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_169 [label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="672-672", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_148 [label="return JTokenType.Null;", span="610-610", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_152 [label="return JTokenType.Integer;", span="625-625", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_154 [label="return JTokenType.Integer;", span="629-629", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_156 [label="return JTokenType.Float;", span="639-639", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_158 [label="return JTokenType.Date;", span="643-643", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_160 [label="return JTokenType.Bytes;", span="653-653", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_162 [label="return JTokenType.Boolean;", span="657-657", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_164 [label="return JTokenType.Guid;", span="661-661", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_166 [label="return JTokenType.Uri;", span="665-665", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_168 [label="return JTokenType.TimeSpan;", span="669-669", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_170 [label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="606-606", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="SpecialPropertyHandlingTests.cs"];
m24_304 [label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_41 [label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_42 [label="objA == objB", span="250-250", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_44 [label="objB == null", span="254-254", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_46 [label="objA == null", span="258-258", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_48 [label=valueType, span="263-263", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_50 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="276-276", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_51 [label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="278-278", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_52 [label="objA is float || objB is float || objA is double || objB is double", span="280-280", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_53 [label="return CompareFloat(objA, objB);", span="282-282", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_54 [label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="286-286", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_56 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="299-299", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_57 [label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="301-301", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_58 [label="return CompareFloat(objA, objB);", span="303-303", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_62 [label="string s1 = Convert.ToString(objA, CultureInfo.InvariantCulture)", span="307-307", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_63 [label="string s2 = Convert.ToString(objB, CultureInfo.InvariantCulture)", span="308-308", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_66 [label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="312-312", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_67 [label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="313-313", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_70 [label="DateTime date1 = (DateTime)objA", span="321-321", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_72 [label="date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="332-332", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_75 [label="byte[] bytes2 = objB as byte[]", span="356-356", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_78 [label="byte[] bytes1 = objA as byte[]", span="362-362", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_82 [label="!(objB is Guid)", span="367-367", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_84 [label="Guid guid1 = (Guid)objA", span="372-372", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_85 [label="Guid guid2 = (Guid)objB", span="373-373", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_88 [label="Uri uri2 = objB as Uri", span="377-377", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_91 [label="Uri uri1 = (Uri)objA", span="383-383", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_94 [label="!(objB is TimeSpan)", span="387-387", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_96 [label="TimeSpan ts1 = (TimeSpan)objA", span="392-392", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_97 [label="TimeSpan ts2 = (TimeSpan)objB", span="393-393", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_99 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(nameof(valueType), valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="397-397", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_43 [label="return 0;", span="252-252", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_45 [label="return 1;", span="256-256", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_47 [label="return -1;", span="260-260", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_49 [label="JTokenType.Integer", span="265-265", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_55 [label="JTokenType.Float", span="288-288", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_59 [label="JTokenType.Comment", span="304-304", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_65 [label="JTokenType.Boolean", span="311-311", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_69 [label="JTokenType.Date", span="316-316", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_74 [label="JTokenType.Bytes", span="355-355", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_81 [label="JTokenType.Guid", span="366-366", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_87 [label="JTokenType.Uri", span="376-376", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_93 [label="JTokenType.TimeSpan", span="386-386", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_60 [label="JTokenType.String", span="305-305", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_61 [label="JTokenType.Raw", span="306-306", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_64 [label="return string.CompareOrdinal(s1, s2);", span="310-310", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_68 [label="return b1.CompareTo(b2);", span="315-315", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_71 [label="DateTime date2", span="322-322", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_73 [label="return date1.CompareTo(date2);", span="335-335", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_76 [label="bytes2 == null", span="357-357", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_80 [label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="365-365", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_77 [label="throw new ArgumentException(''Object must be of type byte[].'');", span="359-359", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_79 [label="Debug.Assert(bytes1 != null)", span="363-363", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_83 [label="throw new ArgumentException(''Object must be of type Guid.'');", span="369-369", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_86 [label="return guid1.CompareTo(guid2);", span="375-375", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_89 [label="uri2 == null", span="378-378", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_92 [label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="385-385", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_90 [label="throw new ArgumentException(''Object must be of type Uri.'');", span="380-380", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_95 [label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="389-389", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_98 [label="return ts1.CompareTo(ts2);", span="395-395", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_100 [label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="SpecialPropertyHandlingTests.cs"];
m24_104 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_22 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="SpecialPropertyHandlingTests.cs"];
m24_293 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="937-937", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_297 [label="_value == null", span="939-939", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_301 [label="return formattable.ToString(format, formatProvider);", span="947-947", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_298 [label="return string.Empty;", span="941-941", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_299 [label="IFormattable formattable = _value as IFormattable", span="944-944", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_300 [label="formattable != null", span="945-945", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_302 [label="return _value.ToString();", span="951-951", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_303 [label="Exit Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="937-937", cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_12 [label="KnownTypesBinder knownTypesBinder = new KnownTypesBinder\r\n            {\r\n                KnownTypes = new List<Type> { typeof(Car) }\r\n            }", span="62-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.Example()", file="SpecialPropertyHandlingTests.cs", color=green, community=0];
m24_13 [label="Car car = new Car\r\n            {\r\n                Maker = ''Ford'',\r\n                Model = ''Explorer''\r\n            }", span="67-71", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.Example()", file="SpecialPropertyHandlingTests.cs", color=green, community=0];
m24_171 [label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="675-675", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_173 [label="current == null", span="677-677", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_175 [label="current.GetValueOrDefault()", span="682-682", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_179 [label="return current.GetValueOrDefault();", span="687-687", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_174 [label="return JTokenType.String;", span="679-679", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_176 [label="JTokenType.Comment", span="684-684", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_180 [label="return JTokenType.String;", span="689-689", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_177 [label="JTokenType.String", span="685-685", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_178 [label="JTokenType.Raw", span="686-686", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_181 [label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="675-675", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="SpecialPropertyHandlingTests.cs"];
m24_118 [label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="SpecialPropertyHandlingTests.cs"];
m24_128 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_280 [label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="879-879", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_281 [label="_value == null", span="881-881", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_282 [label="return 0;", span="883-883", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_283 [label="return _value.GetHashCode();", span="886-886", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_284 [label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="879-879", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_7 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="SpecialPropertyHandlingTests.cs"];
m24_8 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", color=green, community=0, file="SpecialPropertyHandlingTests.cs"];
m24_9 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", color=green, community=0, file="SpecialPropertyHandlingTests.cs"];
m24_10 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="SpecialPropertyHandlingTests.cs"];
m24_114 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="88-88", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="SpecialPropertyHandlingTests.cs"];
m24_111 [label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0", cluster="System.DateTime.CompareTo(System.DateTime)", file="SpecialPropertyHandlingTests.cs"];
m24_119 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="SpecialPropertyHandlingTests.cs"];
m24_40 [label="Entry Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="839-839", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_270 [label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="841-841", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_271 [label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="839-839", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_16 [label="object newValue = JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                Binder = knownTypesBinder\r\n            })", span="86-90", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.Example()", file="SpecialPropertyHandlingTests.cs"];
m24_17 [label="Console.WriteLine(newValue.GetType().Name)", span="92-92", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.Example()", file="SpecialPropertyHandlingTests.cs"];
m24_108 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_116 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="SpecialPropertyHandlingTests.cs"];
m24_109 [label="Entry bool.CompareTo(bool)", span="0-0", cluster="bool.CompareTo(bool)", file="SpecialPropertyHandlingTests.cs"];
m24_249 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="907-907", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="SpecialPropertyHandlingTests.cs"];
m24_113 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="SpecialPropertyHandlingTests.cs"];
m24_258 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="1010-1010", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="SpecialPropertyHandlingTests.cs"];
m24_6 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="SpecialPropertyHandlingTests.cs"];
m24_120 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="SpecialPropertyHandlingTests.cs"];
m24_11 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="SpecialPropertyHandlingTests.cs"];
m24_14 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="SpecialPropertyHandlingTests.cs"];
m24_15 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="SpecialPropertyHandlingTests.cs"];
m24_30 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="SpecialPropertyHandlingTests.cs"];
m24_31 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="SpecialPropertyHandlingTests.cs"];
m24_23 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="SpecialPropertyHandlingTests.cs"];
m24_245 [label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="SpecialPropertyHandlingTests.cs"];
m24_112 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SpecialPropertyHandlingTests.cs"];
m24_131 [label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="563-563", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="SpecialPropertyHandlingTests.cs"];
m24_132 [label="return new JValue(this);", span="565-565", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="SpecialPropertyHandlingTests.cs"];
m24_133 [label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="563-563", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="SpecialPropertyHandlingTests.cs"];
m24_244 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="624-624", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="SpecialPropertyHandlingTests.cs"];
m24_121 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="71-71", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="SpecialPropertyHandlingTests.cs"];
m24_247 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1450-1450", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="SpecialPropertyHandlingTests.cs"];
m24_250 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="915-915", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="SpecialPropertyHandlingTests.cs"];
m24_257 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="945-945", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="SpecialPropertyHandlingTests.cs"];
m24_260 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1391-1391", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="SpecialPropertyHandlingTests.cs"];
m24_26 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SpecialPropertyHandlingTests.cs"];
m24_27 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="SpecialPropertyHandlingTests.cs"];
m24_259 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1075-1075", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="SpecialPropertyHandlingTests.cs"];
m24_290 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="912-912", cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="SpecialPropertyHandlingTests.cs"];
m24_291 [label="return ToString(format, CultureInfo.CurrentCulture);", span="914-914", cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="SpecialPropertyHandlingTests.cs"];
m24_292 [label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="912-912", cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="SpecialPropertyHandlingTests.cs"];
m24_183 [label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="728-728", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_184 [label="converters != null && converters.Length > 0 && _value != null", span="730-730", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_185 [label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="732-732", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_187 [label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="735-735", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_191 [label="writer.WriteComment(_value?.ToString())", span="743-743", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_194 [label="writer.WriteRawValue(_value?.ToString())", span="746-746", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_197 [label="writer.WriteNull()", span="749-749", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_200 [label="writer.WriteUndefined()", span="752-752", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_204 [label="writer.WriteValue((int)_value)", span="757-757", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_206 [label="writer.WriteValue((long)_value)", span="761-761", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_208 [label="writer.WriteValue((ulong)_value)", span="765-765", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_209 [label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="775-775", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_213 [label="writer.WriteValue((decimal)_value)", span="781-781", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_215 [label="writer.WriteValue((double)_value)", span="785-785", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_217 [label="writer.WriteValue((float)_value)", span="789-789", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_218 [label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="793-793", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_221 [label="writer.WriteValue(_value?.ToString())", span="797-797", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_224 [label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="800-800", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_227 [label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="811-811", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_230 [label="writer.WriteValue((byte[])_value)", span="815-815", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_233 [label="writer.WriteValue((_value != null) ? (Guid?)_value : null)", span="818-818", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_236 [label="writer.WriteValue((_value != null) ? (TimeSpan?)_value : null)", span="821-821", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_239 [label="writer.WriteValue((Uri)_value)", span="824-824", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_189 [label=_valueType, span="740-740", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_186 [label="matchingConverter != null && matchingConverter.CanWrite", span="733-733", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_188 [label="return;", span="736-736", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_190 [label="JTokenType.Comment", span="742-742", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_193 [label="JTokenType.Raw", span="745-745", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_196 [label="JTokenType.Null", span="748-748", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_199 [label="JTokenType.Undefined", span="751-751", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_202 [label="JTokenType.Integer", span="754-754", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_211 [label="JTokenType.Float", span="778-778", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_220 [label="JTokenType.String", span="796-796", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_223 [label="JTokenType.Boolean", span="799-799", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_226 [label="JTokenType.Date", span="802-802", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_229 [label="JTokenType.Bytes", span="814-814", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_232 [label="JTokenType.Guid", span="817-817", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_235 [label="JTokenType.TimeSpan", span="820-820", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_238 [label="JTokenType.Uri", span="823-823", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_192 [label="return;", span="744-744", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_195 [label="return;", span="747-747", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_198 [label="return;", span="750-750", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_201 [label="return;", span="753-753", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_203 [label="_value is int", span="755-755", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_205 [label="_value is long", span="759-759", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_207 [label="_value is ulong", span="763-763", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_210 [label="return;", span="777-777", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_212 [label="_value is decimal", span="779-779", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_214 [label="_value is double", span="783-783", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_216 [label="_value is float", span="787-787", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_219 [label="return;", span="795-795", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_222 [label="return;", span="798-798", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_225 [label="return;", span="801-801", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_228 [label="return;", span="813-813", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_231 [label="return;", span="816-816", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_234 [label="return;", span="819-819", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_237 [label="return;", span="822-822", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_240 [label="return;", span="825-825", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_242 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(nameof(Type), _valueType, ''Unexpected token type.'');", span="828-828", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_241 [label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="728-728", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SpecialPropertyHandlingTests.cs"];
m24_20 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SpecialPropertyHandlingTests.cs"];
m24_21 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.Car.Car()", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder.Car.Car()", file="SpecialPropertyHandlingTests.cs"];
m24_172 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SpecialPropertyHandlingTests.cs"];
m24_262 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1375-1375", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="SpecialPropertyHandlingTests.cs"];
m24_129 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="SpecialPropertyHandlingTests.cs"];
m24_130 [label="Entry double.CompareTo(double)", span="0-0", cluster="double.CompareTo(double)", file="SpecialPropertyHandlingTests.cs"];
m24_107 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="SpecialPropertyHandlingTests.cs"];
m24_261 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1359-1359", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="SpecialPropertyHandlingTests.cs"];
m24_182 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="SpecialPropertyHandlingTests.cs"];
m24_0 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="SpecialPropertyHandlingTests.cs"];
m24_1 [label="_value = value", span="53-53", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="SpecialPropertyHandlingTests.cs"];
m24_2 [label="_valueType = type", span="54-54", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="SpecialPropertyHandlingTests.cs"];
m24_3 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="SpecialPropertyHandlingTests.cs"];
m24_106 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_268 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_134 [label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="573-573", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="SpecialPropertyHandlingTests.cs"];
m24_135 [label="return new JValue(value, JTokenType.Comment);", span="575-575", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="SpecialPropertyHandlingTests.cs"];
m24_136 [label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="573-573", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="SpecialPropertyHandlingTests.cs"];
m24_294 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="924-924", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_295 [label="return ToString(null, formatProvider);", span="926-926", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_296 [label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="924-924", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="SpecialPropertyHandlingTests.cs"];
m24_264 [label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="831-831", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_265 [label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="833-833", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_266 [label="return ((int)_valueType).GetHashCode() ^ valueHashCode;", span="836-836", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_267 [label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="831-831", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="SpecialPropertyHandlingTests.cs"];
m24_117 [label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0", cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="SpecialPropertyHandlingTests.cs"];
m24_318 [label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1081-1081", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_319 [label="obj == null", span="1083-1083", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_321 [label="JTokenType comparisonType = (_valueType == JTokenType.String && _valueType != obj._valueType)\r\n                ? obj._valueType\r\n                : _valueType", span="1088-1090", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_322 [label="return Compare(comparisonType, _value, obj._value);", span="1092-1092", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_320 [label="return 1;", span="1085-1085", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_323 [label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1081-1081", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="SpecialPropertyHandlingTests.cs"];
m24_255 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="1001-1001", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="SpecialPropertyHandlingTests.cs"];
m24_32 [label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="SpecialPropertyHandlingTests.cs"];
m24_33 [label="JValue other = node as JValue", span="197-197", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="SpecialPropertyHandlingTests.cs"];
m24_34 [label="other == null", span="198-198", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="SpecialPropertyHandlingTests.cs"];
m24_36 [label="other == this", span="202-202", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="SpecialPropertyHandlingTests.cs"];
m24_38 [label="return ValuesEquals(this, other);", span="207-207", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="SpecialPropertyHandlingTests.cs"];
m24_35 [label="return false;", span="200-200", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="SpecialPropertyHandlingTests.cs"];
m24_37 [label="return true;", span="204-204", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="SpecialPropertyHandlingTests.cs"];
m24_39 [label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="SpecialPropertyHandlingTests.cs"];
m24_140 [label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="592-592", cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="SpecialPropertyHandlingTests.cs"];
m24_141 [label="return new JValue(null, JTokenType.Null);", span="594-594", cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="SpecialPropertyHandlingTests.cs"];
m24_142 [label="Exit Newtonsoft.Json.Linq.JValue.CreateNull()", span="592-592", cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="SpecialPropertyHandlingTests.cs"];
m24_277 [label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="868-868", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="SpecialPropertyHandlingTests.cs"];
m24_278 [label="return Equals(obj as JValue);", span="870-870", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="SpecialPropertyHandlingTests.cs"];
m24_279 [label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="868-868", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="SpecialPropertyHandlingTests.cs"];
m24_285 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="895-895", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="SpecialPropertyHandlingTests.cs"];
m24_286 [label="_value == null", span="897-897", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="SpecialPropertyHandlingTests.cs"];
m24_287 [label="return string.Empty;", span="899-899", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="SpecialPropertyHandlingTests.cs"];
m24_288 [label="return _value.ToString();", span="902-902", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="SpecialPropertyHandlingTests.cs"];
m24_289 [label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="895-895", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="SpecialPropertyHandlingTests.cs"];
m24_305 [label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1037-1037", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_306 [label="obj == null", span="1039-1039", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_308 [label="JValue value = obj as JValue", span="1044-1044", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_314 [label="otherValue = obj", span="1056-1056", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_307 [label="return 1;", span="1041-1041", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_309 [label="JTokenType comparisonType", span="1045-1045", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_311 [label="value != null", span="1047-1047", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_312 [label="otherValue = value.Value", span="1049-1049", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_313 [label="comparisonType = (_valueType == JTokenType.String && _valueType != value._valueType)\r\n                    ? value._valueType\r\n                    : _valueType", span="1050-1052", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_310 [label="object otherValue", span="1046-1046", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_316 [label="return Compare(comparisonType, _value, otherValue);", span="1060-1060", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_315 [label="comparisonType = _valueType", span="1057-1057", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_317 [label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1037-1037", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="SpecialPropertyHandlingTests.cs"];
m24_251 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="954-954", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="SpecialPropertyHandlingTests.cs"];
m24_143 [label="Entry Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="601-601", cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="SpecialPropertyHandlingTests.cs"];
m24_144 [label="return new JValue(null, JTokenType.Undefined);", span="603-603", cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="SpecialPropertyHandlingTests.cs"];
m24_145 [label="Exit Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="601-601", cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="SpecialPropertyHandlingTests.cs"];
m24_324 [label="Newtonsoft.Json.Linq.JValue", span="", file="SpecialPropertyHandlingTests.cs"];
m25_555 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="TraceWriterTests.cs"];
m25_457 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", span="306-306", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", file="TraceWriterTests.cs"];
m25_78 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TraceWriterTests.cs"];
m25_144 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_145 [label="string json = @''{''''IntList'''':[1, ''''two'''']}''", span="325-325", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_146 [label="var traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="327-330", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_147 [label="ExceptionAssert.Throws<Exception>(\r\n                ''Could not convert string to integer: two. Path 'IntList[1]', line 1, position 20.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.DeserializeObject<TraceTestObject>(\r\n                        json,\r\n                        new JsonSerializerSettings\r\n                        {\r\n                            TraceWriter = traceWriter\r\n                        });\r\n                })", span="332-342", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_148 [label="Assert.AreEqual(3, traceWriter.TraceRecords.Count)", span="344-344", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_149 [label="Assert.AreEqual(TraceLevel.Info, traceWriter.TraceRecords[0].Level)", span="346-346", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_150 [label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path 'IntList', line 1, position 11.'', traceWriter.TraceRecords[0].Message)", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_151 [label="Assert.AreEqual(TraceLevel.Info, traceWriter.TraceRecords[1].Level)", span="349-349", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_152 [label="Assert.AreEqual(''Started deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList', line 1, position 12.'', traceWriter.TraceRecords[1].Message)", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_153 [label="Assert.AreEqual(TraceLevel.Error, traceWriter.TraceRecords[2].Level)", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_154 [label="Assert.AreEqual(''Error deserializing System.Collections.Generic.IList`1[System.Int32]. Could not convert string to integer: two. Path 'IntList[1]', line 1, position 20.'', traceWriter.TraceRecords[2].Message)", span="353-353", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_155 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializingNested()", file="TraceWriterTests.cs"];
m25_436 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1016-1016", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="TraceWriterTests.cs"];
m25_441 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="TraceWriterTests.cs"];
m25_335 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="TraceWriterTests.cs"];
m25_421 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", span="196-196", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", file="TraceWriterTests.cs"];
m25_528 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.TraceJsonReader(Newtonsoft.Json.JsonReader)", span="14-14", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.TraceJsonReader(Newtonsoft.Json.JsonReader)", file="TraceWriterTests.cs"];
m25_47 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="TraceWriterTests.cs"];
m25_221 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_222 [label="string json = @''[new Date(976623132000)]''", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_223 [label="InMemoryTraceWriter traceWriter =\r\n                new InMemoryTraceWriter\r\n                {\r\n                    LevelFilter = TraceLevel.Verbose\r\n                }", span="475-479", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_224 [label="JsonConvert.DeserializeObject<List<DateTime>>(\r\n                json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    Converters = { new JavaScriptDateTimeConverter() },\r\n                    TraceWriter = traceWriter\r\n                })", span="481-487", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_225 [label="Assert.AreEqual(''Started deserializing System.Collections.Generic.List`1[System.DateTime]. Path '', line 1, position 1.'', traceWriter.TraceRecords[0].Message)", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_226 [label="Assert.AreEqual(''Started deserializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]', line 1, position 10.'', traceWriter.TraceRecords[1].Message)", span="490-490", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_227 [label="Assert.AreEqual(''Finished deserializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]', line 1, position 23.'', traceWriter.TraceRecords[2].Message)", span="491-491", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_228 [label="Assert.AreEqual(''Finished deserializing System.Collections.Generic.List`1[System.DateTime]. Path '', line 1, position 24.'', traceWriter.TraceRecords[3].Message)", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_229 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeConverter()", file="TraceWriterTests.cs"];
m25_424 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1151-1151", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceWriterTests.cs"];
m25_549 [label="Entry Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs"];
m25_550 [label="StringBuilder sb = new StringBuilder()", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs"];
m25_551 [label=TraceRecords, span="999-999", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs"];
m25_552 [label="sb.AppendLine(traceRecord.Message)", span="1001-1001", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs"];
m25_553 [label="return sb.ToString();", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs"];
m25_554 [label="Exit Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.ToString()", file="TraceWriterTests.cs"];
m25_450 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", span="108-108", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", file="TraceWriterTests.cs"];
m25_20 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_21 [label="Staff staff = new Staff()", span="77-77", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_22 [label="staff.Name = ''Arnie Admin''", span="78-78", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_23 [label="staff.Roles = new List<string> { ''Administrator'' }", span="79-79", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_24 [label="staff.StartDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_26 [label="JsonConvert.SerializeObject(\r\n                staff,\r\n                new JsonSerializerSettings { TraceWriter = traceWriter, Converters = { new JavaScriptDateTimeConverter() } })", span="84-86", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_25 [label="ITraceWriter traceWriter = new MemoryTraceWriter()", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_27 [label="Console.WriteLine(traceWriter)", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_28 [label="MemoryTraceWriter memoryTraceWriter = (MemoryTraceWriter)traceWriter", span="96-96", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_29 [label="string output = memoryTraceWriter.ToString()", span="97-97", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_31 [label="Assert.AreEqual(7, memoryTraceWriter.GetTraceMessages().Count())", span="100-100", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_30 [label="Assert.AreEqual(916, output.Length)", span="99-99", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_33 [label="Assert.IsTrue(output.Contains(json))", span="113-113", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_32 [label="string json = @''Serialized JSON: \r\n{\r\n  ''''Name'''': ''''Arnie Admin'''',\r\n  ''''StartDate'''': new Date(\r\n    976623132000\r\n  ),\r\n  ''''Roles'''': [\r\n    ''''Administrator''''\r\n  ]\r\n}''", span="102-111", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_34 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest()", file="TraceWriterTests.cs"];
m25_97 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceTestObject.TraceTestObject()", span="1008-1008", cluster="Newtonsoft.Json.Tests.Serialization.TraceTestObject.TraceTestObject()", file="TraceWriterTests.cs"];
m25_529 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.Read()", span="28-28", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.Read()", file="TraceWriterTests.cs"];
m25_416 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", span="210-210", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", file="TraceWriterTests.cs"];
m25_430 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1064-1064", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="TraceWriterTests.cs"];
m25_438 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="TraceWriterTests.cs"];
m25_411 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", span="94-94", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", file="TraceWriterTests.cs"];
m25_460 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.GetJson()", span="31-31", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.GetJson()", file="TraceWriterTests.cs"];
m25_459 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", span="334-334", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", file="TraceWriterTests.cs"];
m25_18 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="TraceWriterTests.cs"];
m25_444 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="TraceWriterTests.cs"];
m25_537 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.GetJson()", span="23-23", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.GetJson()", file="TraceWriterTests.cs"];
m25_418 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", span="161-161", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", file="TraceWriterTests.cs"];
m25_532 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTimeOffset()", span="71-71", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTimeOffset()", file="TraceWriterTests.cs"];
m25_230 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", span="496-496", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_231 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="498-501", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_232 [label="string json = @''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib'''',\r\n      ''''key!'''': ''''value!''''\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Version, mscorlib'''',\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ]\r\n}''", span="503-520", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_233 [label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                SpecialPropertyHandling = SpecialPropertyHandling.Default,\r\n                TraceWriter = traceWriter\r\n            })", span="522-527", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", color=green, community=0, file="TraceWriterTests.cs"];
m25_234 [label="Assert.AreEqual(''Resolved type 'System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib' to System.Collections.Generic.List`1[System.Object]. Path '$type', line 2, position 84.'', traceWriter.TraceRecords[0].Message)", span="529-529", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_235 [label="Assert.AreEqual(''Started deserializing System.Collections.Generic.List`1[System.Object]. Path '$values', line 3, position 15.'', traceWriter.TraceRecords[1].Message)", span="530-530", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_236 [label="Assert.AreEqual(''Resolved type 'System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib' to System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0].$type', line 5, position 120.'', traceWriter.TraceRecords[2].Message)", span="531-531", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_237 [label="Assert.AreEqual(''Started deserializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0].key!', line 6, position 14.'', traceWriter.TraceRecords[3].Message)", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_238 [label="Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith(''Finished deserializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0]'''))", span="533-533", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_239 [label="Assert.AreEqual(''Resolved type 'System.Version, mscorlib' to System.Version. Path '$values[1].$type', line 9, position 42.'', traceWriter.TraceRecords[5].Message)", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_240 [label="Assert.AreEqual(''Deserializing System.Version using a non-default constructor 'Void .ctor(Int32, Int32, Int32, Int32)'. Path '$values[1].Major', line 10, position 15.'', traceWriter.TraceRecords[6].Message)", span="535-535", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_241 [label="Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith(''Started deserializing System.Version. Path '$values[1]'''))", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_242 [label="Assert.IsTrue(traceWriter.TraceRecords[8].Message.StartsWith(''Finished deserializing System.Version. Path '$values[1]'''))", span="537-537", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_243 [label="Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith(''Finished deserializing System.Collections.Generic.List`1[System.Object]. Path '$values'''))", span="538-538", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_244 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", span="496-496", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeTypeName()", file="TraceWriterTests.cs"];
m25_449 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", span="313-313", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", file="TraceWriterTests.cs"];
m25_246 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", span="543-543", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs"];
m25_247 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="545-548", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs"];
m25_248 [label="ExceptionAssert.Throws<SerializationException>(\r\n                ''Member 'ClassName' was not found.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.DeserializeObject<Exception>(\r\n                        ''{}'',\r\n                        new JsonSerializerSettings\r\n                        {\r\n                            TraceWriter = traceWriter\r\n                        });\r\n                })", span="550-560", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs"];
m25_249 [label="Assert.IsTrue(traceWriter.TraceRecords[0].Message.StartsWith(''Deserializing System.Exception using ISerializable constructor. Path ''''))", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs"];
m25_250 [label="Assert.AreEqual(TraceLevel.Info, traceWriter.TraceRecords[0].Level)", span="563-563", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs"];
m25_251 [label="Assert.AreEqual(''Error deserializing System.Exception. Member 'ClassName' was not found. Path '', line 1, position 2.'', traceWriter.TraceRecords[1].Message)", span="564-564", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs"];
m25_252 [label="Assert.AreEqual(TraceLevel.Error, traceWriter.TraceRecords[1].Level)", span="565-565", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs"];
m25_253 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", span="543-543", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeISerializable()", file="TraceWriterTests.cs"];
m25_402 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", span="299-299", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", file="TraceWriterTests.cs"];
m25_420 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", span="136-136", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", file="TraceWriterTests.cs"];
m25_39 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="TraceWriterTests.cs"];
m25_531 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTime()", span="63-63", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTime()", file="TraceWriterTests.cs"];
m25_45 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="TraceWriterTests.cs"];
m25_399 [label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="TraceWriterTests.cs"];
m25_427 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1126-1126", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="TraceWriterTests.cs"];
m25_48 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_49 [label="string json = @''{\r\n  ''''Name'''': ''''Arnie Admin'''',\r\n  ''''StartDate'''': new Date(\r\n    976623132000\r\n  ),\r\n  ''''Roles'''': [\r\n    ''''Administrator''''\r\n  ]\r\n}''", span="119-127", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_50 [label="Staff staff = new Staff()", span="129-129", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_55 [label="JsonConvert.DeserializeObject<Staff>(\r\n                json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    TraceWriter = traceWriter,\r\n                    Converters = { new JavaScriptDateTimeConverter() },\r\n                    SpecialPropertyHandling = SpecialPropertyHandling.Default\r\n                })", span="136-143", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", color=green, community=0, file="TraceWriterTests.cs"];
m25_61 [label="Assert.IsTrue(output.Contains(json))", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_51 [label="staff.Name = ''Arnie Admin''", span="130-130", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_52 [label="staff.Roles = new List<string> { ''Administrator'' }", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_53 [label="staff.StartDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)", span="132-132", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_54 [label="ITraceWriter traceWriter = new MemoryTraceWriter()", span="134-134", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_56 [label="Console.WriteLine(traceWriter)", span="145-145", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_57 [label="MemoryTraceWriter memoryTraceWriter = (MemoryTraceWriter)traceWriter", span="163-163", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_58 [label="string output = memoryTraceWriter.ToString()", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_60 [label="Assert.AreEqual(7, memoryTraceWriter.GetTraceMessages().Count())", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_59 [label="Assert.AreEqual(1059, output.Length)", span="166-166", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_62 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest()", file="TraceWriterTests.cs"];
m25_406 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", span="78-78", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", file="TraceWriterTests.cs"];
m25_245 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="820-820", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs"];
m25_410 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", span="115-115", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", file="TraceWriterTests.cs"];
m25_445 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", span="203-203", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceWriterTests.cs"];
m25_412 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", span="36-36", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", file="TraceWriterTests.cs"];
m25_170 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TraceWriterTests.cs"];
m25_101 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="TraceWriterTests.cs"];
m25_80 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="TraceWriterTests.cs"];
m25_46 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="TraceWriterTests.cs"];
m25_0 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", span="43-43", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_1 [label="StringWriter sw = new StringWriter()", span="45-45", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_2 [label="TextWriterTraceListener listener = new TextWriterTraceListener(sw)", span="46-46", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_11 [label="Assert.AreEqual(@''Newtonsoft.Json Verbose: 0 : Verbose!\r\nNewtonsoft.Json Information: 0 : Info!\r\nNewtonsoft.Json Warning: 0 : Warning!\r\nNewtonsoft.Json Error: 0 : Error!\r\n'', sw.ToString())", span="60-64", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_3 [label="Trace.AutoFlush = true", span="50-50", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_4 [label="Trace.Listeners.Add(listener)", span="51-51", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_5 [label="DiagnosticsTraceWriter traceWriter = new DiagnosticsTraceWriter()", span="53-53", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_6 [label="traceWriter.Trace(TraceLevel.Verbose, ''Verbose!'', null)", span="54-54", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_7 [label="traceWriter.Trace(TraceLevel.Info, ''Info!'', null)", span="55-55", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_8 [label="traceWriter.Trace(TraceLevel.Warning, ''Warning!'', null)", span="56-56", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_9 [label="traceWriter.Trace(TraceLevel.Error, ''Error!'', null)", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_10 [label="traceWriter.Trace(TraceLevel.Off, ''Off!'', null)", span="58-58", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_12 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", span="43-43", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DiagnosticsTraceWriterTest()", file="TraceWriterTests.cs"];
m25_100 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="TraceWriterTests.cs"];
m25_454 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", span="236-236", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", file="TraceWriterTests.cs"];
m25_437 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1052-1052", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="TraceWriterTests.cs"];
m25_439 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="TraceWriterTests.cs"];
m25_556 [label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0", cluster="System.Text.StringBuilder.AppendLine(string)", file="TraceWriterTests.cs"];
m25_435 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1003-1003", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="TraceWriterTests.cs"];
m25_413 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", span="129-129", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", file="TraceWriterTests.cs"];
m25_527 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TraceWriterTests.cs"];
m25_63 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs"];
m25_126 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="TraceWriterTests.cs"];
m25_533 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsBytes()", span="49-49", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsBytes()", file="TraceWriterTests.cs"];
m25_198 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_199 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="417-420", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_200 [label="IList<object> l = new List<object>\r\n            {\r\n                new Dictionary<string, string> { { ''key!'', ''value!'' } },\r\n                new Version(1, 2, 3, 4)\r\n            }", span="422-426", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_201 [label="JsonConvert.SerializeObject(l, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TraceWriter = traceWriter\r\n            })", span="428-432", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_202 [label="Assert.AreEqual(''Started serializing System.Collections.Generic.List`1[System.Object]. Path ''.'', traceWriter.TraceRecords[0].Message)", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_203 [label="Assert.AreEqual(''Writing type name 'System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib' for System.Collections.Generic.List`1[System.Object]. Path ''.'', traceWriter.TraceRecords[1].Message)", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_204 [label="Assert.AreEqual(''Started serializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values'.'', traceWriter.TraceRecords[2].Message)", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_205 [label="Assert.AreEqual(''Writing type name 'System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib' for System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0]'.'', traceWriter.TraceRecords[3].Message)", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_206 [label="Assert.AreEqual(''Finished serializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path '$values[0]'.'', traceWriter.TraceRecords[4].Message)", span="438-438", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_207 [label="Assert.AreEqual(''Started serializing System.Version. Path '$values[0]'.'', traceWriter.TraceRecords[5].Message)", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_208 [label="Assert.AreEqual(''Writing type name 'System.Version, mscorlib' for System.Version. Path '$values[1]'.'', traceWriter.TraceRecords[6].Message)", span="440-440", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_209 [label="Assert.AreEqual(''Finished serializing System.Version. Path '$values[1]'.'', traceWriter.TraceRecords[7].Message)", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_210 [label="Assert.AreEqual(''Finished serializing System.Collections.Generic.List`1[System.Object]. Path ''.'', traceWriter.TraceRecords[8].Message)", span="442-442", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_211 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.WriteTypeNameForObjects()", file="TraceWriterTests.cs"];
m25_288 [label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_425 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1028-1028", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="TraceWriterTests.cs"];
m25_41 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs"];
m25_429 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1089-1089", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="TraceWriterTests.cs"];
m25_538 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", file="TraceWriterTests.cs"];
m25_539 [label="return Level + '' - '' + Message;", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", file="TraceWriterTests.cs"];
m25_540 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.TraceRecord.ToString()", file="TraceWriterTests.cs"];
m25_456 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="TraceWriterTests.cs"];
m25_171 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TraceWriterTests.cs"];
m25_96 [label="Entry Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", span="979-979", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", file="TraceWriterTests.cs"];
m25_541 [label="LevelFilter = TraceLevel.Verbose", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", file="TraceWriterTests.cs"];
m25_542 [label="TraceRecords = new List<TraceRecord>()", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", file="TraceWriterTests.cs"];
m25_543 [label="Exit Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", span="979-979", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.InMemoryTraceWriter()", file="TraceWriterTests.cs"];
m25_337 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_338 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="732-732", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_339 [label="JsonTextWriter w = new JsonTextWriter(sw)", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_340 [label="TraceJsonWriter traceWriter = new TraceJsonWriter(w)", span="734-734", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_341 [label="traceWriter.WriteStartObject()", span="736-736", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_342 [label="traceWriter.WritePropertyName(''Array'')", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_343 [label="traceWriter.WriteStartArray()", span="738-738", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_344 [label="traceWriter.WriteValue(''String!'')", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_345 [label="traceWriter.WriteValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_346 [label="traceWriter.WriteValue(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(2)))", span="741-741", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_347 [label="traceWriter.WriteValue(1.1f)", span="742-742", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_348 [label="traceWriter.WriteValue(1.1d)", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_349 [label="traceWriter.WriteValue(1.1m)", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_350 [label="traceWriter.WriteValue(1)", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_351 [label="traceWriter.WriteValue((char)'!')", span="746-746", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_352 [label="traceWriter.WriteValue((short)1)", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_353 [label="traceWriter.WriteValue((ushort)1)", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_354 [label="traceWriter.WriteValue((int)1)", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_355 [label="traceWriter.WriteValue((uint)1)", span="750-750", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_356 [label="traceWriter.WriteValue((sbyte)1)", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_357 [label="traceWriter.WriteValue((byte)1)", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_358 [label="traceWriter.WriteValue((long)1)", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_359 [label="traceWriter.WriteValue((ulong)1)", span="754-754", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_360 [label="traceWriter.WriteValue((bool)true)", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_361 [label="traceWriter.WriteValue((DateTime?)new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_362 [label="traceWriter.WriteValue((DateTimeOffset?)new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(2)))", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_363 [label="traceWriter.WriteValue((float?)1.1f)", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_364 [label="traceWriter.WriteValue((double?)1.1d)", span="760-760", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_365 [label="traceWriter.WriteValue((decimal?)1.1m)", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_366 [label="traceWriter.WriteValue((int?)1)", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_367 [label="traceWriter.WriteValue((char?)'!')", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_368 [label="traceWriter.WriteValue((short?)1)", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_369 [label="traceWriter.WriteValue((ushort?)1)", span="765-765", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_370 [label="traceWriter.WriteValue((int?)1)", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_371 [label="traceWriter.WriteValue((uint?)1)", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_372 [label="traceWriter.WriteValue((sbyte?)1)", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_373 [label="traceWriter.WriteValue((byte?)1)", span="769-769", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_374 [label="traceWriter.WriteValue((long?)1)", span="770-770", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_375 [label="traceWriter.WriteValue((ulong?)1)", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_376 [label="traceWriter.WriteValue((bool?)true)", span="772-772", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_377 [label="traceWriter.WriteValue(BigInteger.Parse(''9999999990000000000000000000000000000000000''))", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_378 [label="traceWriter.WriteValue((object)true)", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_379 [label="traceWriter.WriteValue(TimeSpan.FromMinutes(1))", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_380 [label="traceWriter.WriteValue(Guid.Empty)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_381 [label="traceWriter.WriteValue(new Uri(''http://www.google.com/''))", span="778-778", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_382 [label="traceWriter.WriteValue(Encoding.UTF8.GetBytes(''String!''))", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_383 [label="traceWriter.WriteRawValue(''[1],'')", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_384 [label="traceWriter.WriteRaw(''[1]'')", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_385 [label="traceWriter.WriteNull()", span="782-782", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_386 [label="traceWriter.WriteUndefined()", span="783-783", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_387 [label="traceWriter.WriteStartConstructor(''ctor'')", span="784-784", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_388 [label="traceWriter.WriteValue(1)", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_389 [label="traceWriter.WriteEndConstructor()", span="786-786", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_390 [label="traceWriter.WriteComment(''A comment'')", span="787-787", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_391 [label="traceWriter.WriteWhitespace(''       '')", span="788-788", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_392 [label="traceWriter.WriteEnd()", span="789-789", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_393 [label="traceWriter.WriteEndObject()", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_394 [label="traceWriter.Flush()", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_395 [label="traceWriter.Close()", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_396 [label="Console.WriteLine(traceWriter.GetJson())", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_397 [label="Assert.AreEqual(@''{\r\n  ''''Array'''': [\r\n    ''''String!'''',\r\n    ''''2000-12-12T12:12:12Z'''',\r\n    ''''2000-12-12T12:12:12+02:00'''',\r\n    1.1,\r\n    1.1,\r\n    1.1,\r\n    1,\r\n    ''''!'''',\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    true,\r\n    ''''2000-12-12T12:12:12Z'''',\r\n    ''''2000-12-12T12:12:12+02:00'''',\r\n    1.1,\r\n    1.1,\r\n    1.1,\r\n    1,\r\n    ''''!'''',\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    true,\r\n    9999999990000000000000000000000000000000000,\r\n    true,\r\n    true,\r\n    ''''00:01:00'''',\r\n    ''''00000000-0000-0000-0000-000000000000'''',\r\n    ''''http://www.google.com/'''',\r\n    ''''U3RyaW5nIQ=='''',\r\n    [1],[1],[1],\r\n    null,\r\n    undefined,\r\n    new ctor(\r\n      1\r\n    )\r\n    /*A comment*/       \r\n  ]\r\n}'', traceWriter.GetJson())", span="796-847", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_398 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonWriterTest()", file="TraceWriterTests.cs"];
m25_81 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_82 [label="var traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="193-196", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_83 [label="string json =\r\n                JsonConvert.SerializeObject(\r\n                    new TraceTestObject\r\n                    {\r\n                        StringArray = new[] { ''1'', ''2'' },\r\n                        IntList = new List<int> { 1, 2 },\r\n                        Version = new Version(1, 2, 3, 4),\r\n                        StringDictionary =\r\n                            new Dictionary<string, string>\r\n                            {\r\n                                { ''1'', ''!'' },\r\n                                { ''Two'', ''!!'' },\r\n                                { ''III'', ''!!!'' }\r\n                            }\r\n                    },\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        TraceWriter = traceWriter,\r\n                        Formatting = Formatting.Indented\r\n                    })", span="198-217", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_84 [label="Assert.AreEqual(''Started serializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''.'', traceWriter.TraceRecords[0].Message)", span="219-219", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_85 [label="Assert.AreEqual(''Started serializing System.Collections.Generic.List`1[System.Int32]. Path 'IntList'.'', traceWriter.TraceRecords[1].Message)", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_86 [label="Assert.AreEqual(''Finished serializing System.Collections.Generic.List`1[System.Int32]. Path 'IntList'.'', traceWriter.TraceRecords[2].Message)", span="221-221", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_87 [label="Assert.AreEqual(''Started serializing System.String[]. Path 'StringArray'.'', traceWriter.TraceRecords[3].Message)", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_88 [label="Assert.AreEqual(''Finished serializing System.String[]. Path 'StringArray'.'', traceWriter.TraceRecords[4].Message)", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_89 [label="Assert.AreEqual(''Started serializing System.Version. Path 'Version'.'', traceWriter.TraceRecords[5].Message)", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_90 [label="Assert.AreEqual(''Finished serializing System.Version. Path 'Version'.'', traceWriter.TraceRecords[6].Message)", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_91 [label="Assert.AreEqual(''Started serializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path 'StringDictionary'.'', traceWriter.TraceRecords[7].Message)", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_92 [label="Assert.AreEqual(''Finished serializing System.Collections.Generic.Dictionary`2[System.String,System.String]. Path 'StringDictionary'.'', traceWriter.TraceRecords[8].Message)", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_93 [label="Assert.AreEqual(''Finished serializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''.'', traceWriter.TraceRecords[9].Message)", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_94 [label="Assert.IsFalse(traceWriter.TraceRecords.Any(r => r.Level == TraceLevel.Verbose))", span="230-230", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_95 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Serialize()", file="TraceWriterTests.cs"];
m25_75 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="TraceWriterTests.cs"];
m25_181 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_182 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", span="385-394", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_183 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="396-399", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_184 [label="JsonConvert.DeserializeObject<PreserveReferencesHandlingTests.CircularDictionary>(json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    SpecialPropertyHandling = SpecialPropertyHandling.Default,\r\n                    TraceWriter = traceWriter\r\n                })", span="401-407", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", color=green, community=0, file="TraceWriterTests.cs"];
m25_185 [label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Read object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other', line 3, position 11.''))", span="409-409", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_186 [label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Read object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other.blah', line 5, position 12.''))", span="410-410", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_187 [label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message.StartsWith(''Resolved object reference '1' to Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self''')))", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_188 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_447 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", span="71-71", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceWriterTests.cs"];
m25_79 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="TraceWriterTests.cs"];
m25_428 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="978-978", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="TraceWriterTests.cs"];
m25_414 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", span="64-64", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", file="TraceWriterTests.cs"];
m25_64 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_65 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="175-175", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_66 [label="int i = 0", span="177-177", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_68 [label="traceWriter.Trace(TraceLevel.Verbose, (i + 1).ToString(CultureInfo.InvariantCulture), null)", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_70 [label="IList<string> traceMessages = traceWriter.GetTraceMessages().ToList()", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_67 [label="i < 1005", span="177-177", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_69 [label="i++", span="177-177", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_71 [label="Assert.AreEqual(1000, traceMessages.Count)", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_72 [label="Assert.IsTrue(traceMessages.First().EndsWith('' 6''))", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_73 [label="Assert.IsTrue(traceMessages.Last().EndsWith('' 1005''))", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_74 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterLimitTest()", file="TraceWriterTests.cs"];
m25_105 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_106 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="236-239", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_107 [label="TraceTestObject o2 = JsonConvert.DeserializeObject<TraceTestObject>(\r\n                @''{\r\n  ''''IntList'''': [\r\n    1,\r\n    2\r\n  ],\r\n  ''''StringArray'''': [\r\n    ''''1'''',\r\n    ''''2''''\r\n  ],\r\n  ''''Version'''': {\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  },\r\n  ''''StringDictionary'''': {\r\n    ''''1'''': ''''!'''',\r\n    ''''Two'''': ''''!!'''',\r\n    ''''III'''': ''''!!!''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TraceWriter = traceWriter\r\n                })", span="241-268", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_113 [label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path 'IntList', line 2, position 13.'', traceWriter.TraceRecords[0].Message)", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_114 [label="Assert.AreEqual(''Started deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList', line 2, position 15.'', traceWriter.TraceRecords[1].Message)", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_115 [label="Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith(''Finished deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'''))", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_116 [label="Assert.AreEqual(''Started deserializing System.String[]. Path 'StringArray', line 6, position 19.'', traceWriter.TraceRecords[3].Message)", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_117 [label="Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith(''Finished deserializing System.String[]. Path 'StringArray'''))", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_118 [label="Assert.AreEqual(''Deserializing System.Version using a non-default constructor 'Void .ctor(Int32, Int32, Int32, Int32)'. Path 'Version.Major', line 11, position 13.'', traceWriter.TraceRecords[5].Message)", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_119 [label="Assert.IsTrue(traceWriter.TraceRecords[6].Message.StartsWith(''Started deserializing System.Version. Path 'Version'''))", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_120 [label="Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith(''Finished deserializing System.Version. Path 'Version'''))", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_121 [label="Assert.AreEqual(''Started deserializing System.Collections.Generic.IDictionary`2[System.String,System.String]. Path 'StringDictionary.1', line 19, position 9.'', traceWriter.TraceRecords[8].Message)", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_122 [label="Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith(''Finished deserializing System.Collections.Generic.IDictionary`2[System.String,System.String]. Path 'StringDictionary'''))", span="285-285", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_123 [label="Assert.IsTrue(traceWriter.TraceRecords[10].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''''))", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_124 [label="Assert.IsFalse(traceWriter.TraceRecords.Any(r => r.Level == TraceLevel.Verbose))", span="288-288", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_108 [label="Assert.AreEqual(2, o2.IntList.Count)", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_109 [label="Assert.AreEqual(2, o2.StringArray.Length)", span="271-271", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_110 [label="Assert.AreEqual(1, o2.Version.Major)", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_111 [label="Assert.AreEqual(2, o2.Version.Minor)", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_112 [label="Assert.AreEqual(3, o2.StringDictionary.Count)", span="274-274", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_125 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.Deserialize()", file="TraceWriterTests.cs"];
m25_14 [label="Entry System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(System.IO.TextWriter)", span="0-0", cluster="System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(System.IO.TextWriter)", file="TraceWriterTests.cs"];
m25_289 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", span="650-650", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_290 [label="SpecifiedTestClass c = new SpecifiedTestClass()", span="652-652", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_291 [label="c.Name = ''James''", span="653-653", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_292 [label="c.Age = 27", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_293 [label="c.NameSpecified = false", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_295 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings { TraceWriter = traceWriter })", span="662-662", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_313 [label="c.NameSpecified = true", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_314 [label="c.WeightSpecified = true", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_315 [label="c.HeightSpecified = true", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_316 [label="c.FavoriteNumber = 23", span="695-695", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_317 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_294 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="657-660", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_296 [label="Assert.AreEqual(''Started serializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''.'', traceWriter.TraceRecords[0].Message)", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_297 [label="Assert.AreEqual(''IsSpecified result for property 'Name' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path ''.'', traceWriter.TraceRecords[1].Message)", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_298 [label="Assert.AreEqual(''IsSpecified result for property 'Weight' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'.'', traceWriter.TraceRecords[2].Message)", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_299 [label="Assert.AreEqual(''IsSpecified result for property 'Height' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'.'', traceWriter.TraceRecords[3].Message)", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_300 [label="Assert.AreEqual(''IsSpecified result for property 'FavoriteNumber' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'.'', traceWriter.TraceRecords[4].Message)", span="668-668", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_301 [label="Assert.AreEqual(''Finished serializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''.'', traceWriter.TraceRecords[5].Message)", span="669-669", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_302 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="671-673", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_304 [label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json, new JsonSerializerSettings { TraceWriter = traceWriter })", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_303 [label="traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="675-678", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_305 [label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path 'Age', line 2, position 9.'', traceWriter.TraceRecords[0].Message)", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_306 [label="Assert.IsTrue(traceWriter.TraceRecords[1].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''''))", span="683-683", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_307 [label="Assert.IsNull(deserialized.Name)", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_308 [label="Assert.IsFalse(deserialized.NameSpecified)", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_309 [label="Assert.IsFalse(deserialized.WeightSpecified)", span="687-687", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_310 [label="Assert.IsFalse(deserialized.HeightSpecified)", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_311 [label="Assert.IsFalse(deserialized.FavoriteNumberSpecified)", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_312 [label="Assert.AreEqual(27, deserialized.Age)", span="690-690", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_318 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0,\r\n  ''''FavoriteNumber'''': 23\r\n}'', json)", span="698-704", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_320 [label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json, new JsonSerializerSettings { TraceWriter = traceWriter })", span="711-711", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_319 [label="traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="706-709", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_321 [label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path 'Name', line 2, position 10.'', traceWriter.TraceRecords[0].Message)", span="713-713", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_322 [label="Assert.AreEqual(''IsSpecified for property 'Name' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Name', line 2, position 18.'', traceWriter.TraceRecords[1].Message)", span="714-714", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_323 [label="Assert.AreEqual(''IsSpecified for property 'Weight' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Weight', line 4, position 14.'', traceWriter.TraceRecords[2].Message)", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_324 [label="Assert.AreEqual(''IsSpecified for property 'Height' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Height', line 5, position 14.'', traceWriter.TraceRecords[3].Message)", span="716-716", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_325 [label="Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''''))", span="717-717", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_326 [label="Assert.AreEqual(''James'', deserialized.Name)", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_327 [label="Assert.IsTrue(deserialized.NameSpecified)", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_328 [label="Assert.IsTrue(deserialized.WeightSpecified)", span="721-721", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_329 [label="Assert.IsTrue(deserialized.HeightSpecified)", span="722-722", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_330 [label="Assert.IsTrue(deserialized.FavoriteNumberSpecified)", span="723-723", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_331 [label="Assert.AreEqual(27, deserialized.Age)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_332 [label="Assert.AreEqual(23, deserialized.FavoriteNumber)", span="725-725", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_333 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", span="650-650", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SpecifiedTest()", file="TraceWriterTests.cs"];
m25_431 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1077-1077", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="TraceWriterTests.cs"];
m25_16 [label="Entry Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.DiagnosticsTraceWriter()", span="10-10", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.DiagnosticsTraceWriter()", file="TraceWriterTests.cs"];
m25_544 [label="Entry Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs"];
m25_545 [label="TraceRecords.Add(\r\n                new TraceRecord\r\n                {\r\n                    Level = level,\r\n                    Message = message,\r\n                    Exception = ex\r\n                })", span="987-993", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs"];
m25_546 [label="Exit Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs"];
m25_401 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", span="17-17", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceWriterTests.cs"];
m25_43 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="66-66", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="TraceWriterTests.cs"];
m25_443 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", span="122-122", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", file="TraceWriterTests.cs"];
m25_461 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="TraceWriterTests.cs"];
m25_530 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsString()", span="42-42", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsString()", file="TraceWriterTests.cs"];
m25_99 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TraceWriterTests.cs"];
m25_19 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="TraceWriterTests.cs"];
m25_404 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", span="255-255", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", file="TraceWriterTests.cs"];
m25_76 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="41-41", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs"];
m25_462 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_463 [label="string json = @''{\r\n  ''''Array'''': [\r\n    ''''String!'''',\r\n    ''''2000-12-12T12:12:12Z'''',\r\n    ''''2000-12-12T12:12:12Z'''',\r\n    ''''2000-12-12T12:12:12+00:00'''',\r\n    ''''U3RyaW5nIQ=='''',\r\n    1,\r\n    1.1,\r\n    9999999990000000000000000000000000000000000,\r\n    null,\r\n    undefined,\r\n    new ctor(\r\n      1\r\n    )\r\n    /*A comment*/\r\n  ]\r\n}''", span="853-870", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_464 [label="StringReader sw = new StringReader(json)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_524 [label="Assert.AreEqual(json, traceReader.GetJson())", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_465 [label="JsonTextReader w = new JsonTextReader(sw)", span="873-873", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_466 [label="TraceJsonReader traceReader = new TraceJsonReader(w)", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_467 [label="traceReader.Read()", span="876-876", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_468 [label="Assert.AreEqual(JsonToken.StartObject, traceReader.TokenType)", span="877-877", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_469 [label="traceReader.Read()", span="879-879", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_470 [label="Assert.AreEqual(JsonToken.PropertyName, traceReader.TokenType)", span="880-880", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_471 [label="Assert.AreEqual(''Array'', traceReader.Value)", span="881-881", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_472 [label="traceReader.Read()", span="883-883", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_473 [label="Assert.AreEqual(JsonToken.StartArray, traceReader.TokenType)", span="884-884", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_474 [label="Assert.AreEqual(null, traceReader.Value)", span="885-885", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_475 [label="traceReader.ReadAsString()", span="887-887", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_476 [label="Assert.AreEqual(JsonToken.String, traceReader.TokenType)", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_477 [label="Assert.AreEqual('''', traceReader.QuoteChar)", span="889-889", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_478 [label="Assert.AreEqual(''String!'', traceReader.Value)", span="890-890", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_479 [label="traceReader.QuoteChar = '\''", span="893-893", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_480 [label="Assert.AreEqual('\'', traceReader.QuoteChar)", span="894-894", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_481 [label="traceReader.ReadAsString()", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_482 [label="Assert.AreEqual(JsonToken.String, traceReader.TokenType)", span="897-897", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_483 [label="Assert.AreEqual(''2000-12-12T12:12:12Z'', traceReader.Value)", span="898-898", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_484 [label="traceReader.ReadAsDateTime()", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_485 [label="Assert.AreEqual(JsonToken.Date, traceReader.TokenType)", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_486 [label="Assert.AreEqual(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), traceReader.Value)", span="902-902", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_487 [label="traceReader.ReadAsDateTimeOffset()", span="904-904", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_488 [label="Assert.AreEqual(JsonToken.Date, traceReader.TokenType)", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_489 [label="Assert.AreEqual(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), traceReader.Value)", span="906-906", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_490 [label="traceReader.ReadAsBytes()", span="908-908", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_491 [label="Assert.AreEqual(JsonToken.Bytes, traceReader.TokenType)", span="909-909", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_492 [label="CollectionAssert.AreEqual(Encoding.UTF8.GetBytes(''String!''), (byte[])traceReader.Value)", span="910-910", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_493 [label="traceReader.ReadAsInt32()", span="912-912", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_494 [label="Assert.AreEqual(JsonToken.Integer, traceReader.TokenType)", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_495 [label="Assert.AreEqual(1, traceReader.Value)", span="914-914", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_496 [label="traceReader.ReadAsDecimal()", span="916-916", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_497 [label="Assert.AreEqual(JsonToken.Float, traceReader.TokenType)", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_498 [label="Assert.AreEqual(1.1m, traceReader.Value)", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_499 [label="traceReader.Read()", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_500 [label="Assert.AreEqual(JsonToken.Integer, traceReader.TokenType)", span="921-921", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_501 [label="Assert.AreEqual(typeof(BigInteger), traceReader.ValueType)", span="922-922", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_502 [label="Assert.AreEqual(BigInteger.Parse(''9999999990000000000000000000000000000000000''), traceReader.Value)", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_503 [label="traceReader.Read()", span="925-925", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_504 [label="Assert.AreEqual(JsonToken.Null, traceReader.TokenType)", span="926-926", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_505 [label="traceReader.Read()", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_506 [label="Assert.AreEqual(JsonToken.Undefined, traceReader.TokenType)", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_507 [label="traceReader.Read()", span="931-931", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_508 [label="Assert.AreEqual(JsonToken.StartConstructor, traceReader.TokenType)", span="932-932", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_509 [label="traceReader.Read()", span="934-934", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_510 [label="Assert.AreEqual(JsonToken.Integer, traceReader.TokenType)", span="935-935", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_511 [label="Assert.AreEqual(1L, traceReader.Value)", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_512 [label="traceReader.Read()", span="938-938", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_513 [label="Assert.AreEqual(JsonToken.EndConstructor, traceReader.TokenType)", span="939-939", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_514 [label="traceReader.Read()", span="941-941", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_515 [label="Assert.AreEqual(JsonToken.Comment, traceReader.TokenType)", span="942-942", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_516 [label="Assert.AreEqual(''A comment'', traceReader.Value)", span="943-943", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_517 [label="traceReader.Read()", span="945-945", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_518 [label="Assert.AreEqual(JsonToken.EndArray, traceReader.TokenType)", span="946-946", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_519 [label="traceReader.Read()", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_520 [label="Assert.AreEqual(JsonToken.EndObject, traceReader.TokenType)", span="949-949", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_521 [label="Assert.IsFalse(traceReader.Read())", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_522 [label="traceReader.Close()", span="953-953", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_523 [label="Console.WriteLine(traceReader.GetJson())", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_525 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.TraceJsonReaderTest()", file="TraceWriterTests.cs"];
m25_535 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDecimal()", span="56-56", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDecimal()", file="TraceWriterTests.cs"];
m25_548 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TraceWriterTests.cs"];
m25_422 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", span="43-43", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", file="TraceWriterTests.cs"];
m25_407 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="TraceWriterTests.cs"];
m25_423 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1138-1138", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="TraceWriterTests.cs"];
m25_400 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="TraceWriterTests.cs"];
m25_455 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", span="217-217", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", file="TraceWriterTests.cs"];
m25_434 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", span="57-57", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceWriterTests.cs"];
m25_254 [label="Entry lambda expression", span="552-560", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_102 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_103 [label="r.Level == TraceLevel.Verbose", span="230-230", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_104 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_127 [label="Entry lambda expression", span="288-288", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_128 [label="r.Level == TraceLevel.Verbose", span="288-288", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_129 [label="Exit lambda expression", span="288-288", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_142 [label="JsonConvert.DeserializeObject<IntegerTestClass>(\r\n                        json,\r\n                        new JsonSerializerSettings\r\n                        {\r\n                            TraceWriter = traceWriter\r\n                        })", span="305-310", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_141 [label="Entry lambda expression", span="303-311", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_143 [label="Exit lambda expression", span="303-311", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_157 [label="JsonConvert.DeserializeObject<TraceTestObject>(\r\n                        json,\r\n                        new JsonSerializerSettings\r\n                        {\r\n                            TraceWriter = traceWriter\r\n                        })", span="336-341", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_156 [label="Entry lambda expression", span="334-342", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_158 [label="Exit lambda expression", span="334-342", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_172 [label="Entry lambda expression", span="377-377", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_175 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_178 [label="Entry lambda expression", span="379-379", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_173 [label="r.Message == ''Writing object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path ''.''", span="377-377", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_174 [label="Exit lambda expression", span="377-377", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_176 [label="r.Message == ''Writing object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other'.''", span="378-378", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_177 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_179 [label="r.Message == ''Writing object reference to Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self'.''", span="379-379", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_180 [label="Exit lambda expression", span="379-379", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_189 [label="Entry lambda expression", span="409-409", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_192 [label="Entry lambda expression", span="410-410", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_195 [label="Entry lambda expression", span="411-411", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_190 [label="r.Message == ''Read object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other', line 3, position 11.''", span="409-409", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_191 [label="Exit lambda expression", span="409-409", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_193 [label="r.Message == ''Read object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other.blah', line 5, position 12.''", span="410-410", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_194 [label="Exit lambda expression", span="410-410", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_196 [label="r.Message.StartsWith(''Resolved object reference '1' to Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self''')", span="411-411", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_197 [label="Exit lambda expression", span="411-411", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_255 [label="JsonConvert.DeserializeObject<Exception>(\r\n                        ''{}'',\r\n                        new JsonSerializerSettings\r\n                        {\r\n                            TraceWriter = traceWriter\r\n                        })", span="554-559", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_256 [label="Exit lambda expression", span="552-560", cluster="lambda expression", file="TraceWriterTests.cs"];
m25_159 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", span="357-357", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_160 [label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="359-359", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_161 [label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="360-360", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_162 [label="circularDictionary.Add(''self'', circularDictionary)", span="361-361", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_164 [label="JsonConvert.SerializeObject(\r\n                circularDictionary,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    TraceWriter = traceWriter\r\n                })", span="368-375", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_163 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="363-366", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_165 [label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Writing object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path ''.''))", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_166 [label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Writing object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other'.''))", span="378-378", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_167 [label="Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == ''Writing object reference to Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self'.''))", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_168 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", span="357-357", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeDictionarysWithPreserveObjectReferences()", file="TraceWriterTests.cs"];
m25_264 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", span="590-590", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_265 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="592-595", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_266 [label="string json = @''{\r\n  ''''Major'''': 1,\r\n  ''''Minor'''': 2,\r\n  ''''Build'''': 3,\r\n  ''''Revision'''': 4,\r\n  ''''MajorRevision'''': 0,\r\n  ''''MinorRevision'''': 4,\r\n  ''''MissingMemberProperty'''': null\r\n}''", span="597-605", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_267 [label="JsonConvert.DeserializeObject<Version>(json, new JsonSerializerSettings\r\n            {\r\n                TraceWriter = traceWriter\r\n            })", span="607-610", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_268 [label="Assert.AreEqual(''Deserializing System.Version using a non-default constructor 'Void .ctor(Int32, Int32, Int32, Int32)'. Path 'Major', line 2, position 11.'', traceWriter.TraceRecords[0].Message)", span="612-612", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_269 [label="Assert.AreEqual(''Could not find member 'MissingMemberProperty' on System.Version. Path 'MissingMemberProperty', line 8, position 32.'', traceWriter.TraceRecords[1].Message)", span="613-613", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_270 [label="Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith(''Started deserializing System.Version. Path ''''))", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_271 [label="Assert.IsTrue(traceWriter.TraceRecords[3].Message.StartsWith(''Finished deserializing System.Version. Path ''''))", span="615-615", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_272 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", span="590-590", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMemberConstructor()", file="TraceWriterTests.cs"];
m25_409 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", span="86-86", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", file="TraceWriterTests.cs"];
m25_35 [label="Entry Newtonsoft.Json.Tests.Serialization.Staff.Staff()", span="31-31", cluster="Newtonsoft.Json.Tests.Serialization.Staff.Staff()", file="TraceWriterTests.cs"];
m25_442 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", span="182-182", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", file="TraceWriterTests.cs"];
m25_334 [label="Entry Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", span="407-407", cluster="Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", file="TraceWriterTests.cs"];
m25_77 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TraceWriterTests.cs"];
m25_169 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="TraceWriterTests.cs"];
m25_452 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", span="269-269", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", file="TraceWriterTests.cs"];
m25_526 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="TraceWriterTests.cs"];
m25_42 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="TraceWriterTests.cs"];
m25_98 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="TraceWriterTests.cs"];
m25_140 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TraceWriterTests.cs"];
m25_419 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", span="50-50", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", file="TraceWriterTests.cs"];
m25_36 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TraceWriterTests.cs"];
m25_408 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="TraceWriterTests.cs"];
m25_534 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsInt32()", span="35-35", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsInt32()", file="TraceWriterTests.cs"];
m25_448 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", span="320-320", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", file="TraceWriterTests.cs"];
m25_426 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1040-1040", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="TraceWriterTests.cs"];
m25_415 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", span="168-168", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", file="TraceWriterTests.cs"];
m25_38 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="TraceWriterTests.cs"];
m25_536 [label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.Close()", span="110-110", cluster="Newtonsoft.Json.Serialization.TraceJsonReader.Close()", file="TraceWriterTests.cs"];
m25_13 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="TraceWriterTests.cs"];
m25_417 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", span="189-189", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", file="TraceWriterTests.cs"];
m25_44 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.GetTraceMessages()", span="55-55", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.GetTraceMessages()", file="TraceWriterTests.cs"];
m25_212 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_213 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="448-451", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_214 [label="IList<DateTime> d = new List<DateTime>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)\r\n            }", span="453-456", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_215 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                Converters = { new JavaScriptDateTimeConverter() },\r\n                TraceWriter = traceWriter\r\n            })", span="458-462", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_216 [label="Assert.AreEqual(''Started serializing System.Collections.Generic.List`1[System.DateTime]. Path ''.'', traceWriter.TraceRecords[0].Message)", span="464-464", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_217 [label="Assert.AreEqual(''Started serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path ''.'', traceWriter.TraceRecords[1].Message)", span="465-465", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_218 [label="Assert.AreEqual(''Finished serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]'.'', traceWriter.TraceRecords[2].Message)", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_219 [label="Assert.AreEqual(''Finished serializing System.Collections.Generic.List`1[System.DateTime]. Path ''.'', traceWriter.TraceRecords[3].Message)", span="467-467", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_220 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.SerializeConverter()", file="TraceWriterTests.cs"];
m25_130 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_131 [label="string json = @''{''''Integer'''':''''hi''''}''", span="294-294", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_132 [label="var traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Info\r\n            }", span="296-299", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_133 [label="ExceptionAssert.Throws<Exception>(\r\n                ''Could not convert string to integer: hi. Path 'Integer', line 1, position 15.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.DeserializeObject<IntegerTestClass>(\r\n                        json,\r\n                        new JsonSerializerSettings\r\n                        {\r\n                            TraceWriter = traceWriter\r\n                        });\r\n                })", span="301-311", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_134 [label="Assert.AreEqual(2, traceWriter.TraceRecords.Count)", span="313-313", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_135 [label="Assert.AreEqual(TraceLevel.Info, traceWriter.TraceRecords[0].Level)", span="315-315", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_136 [label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.Serialization.IntegerTestClass. Path 'Integer', line 1, position 11.'', traceWriter.TraceRecords[0].Message)", span="316-316", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_137 [label="Assert.AreEqual(TraceLevel.Error, traceWriter.TraceRecords[1].Level)", span="318-318", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_138 [label="Assert.AreEqual(''Error deserializing Newtonsoft.Json.Tests.Serialization.IntegerTestClass. Could not convert string to integer: hi. Path 'Integer', line 1, position 15.'', traceWriter.TraceRecords[1].Message)", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_139 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ErrorDeserializing()", file="TraceWriterTests.cs"];
m25_15 [label="Entry System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)", span="0-0", cluster="System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)", file="TraceWriterTests.cs"];
m25_403 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", span="283-283", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", file="TraceWriterTests.cs"];
m25_432 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="991-991", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="TraceWriterTests.cs"];
m25_547 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceRecord.TraceRecord()", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.TraceRecord.TraceRecord()", file="TraceWriterTests.cs"];
m25_17 [label="Entry Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="45-45", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="TraceWriterTests.cs"];
m25_336 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TraceWriterTests.cs"];
m25_451 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", span="101-101", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", file="TraceWriterTests.cs"];
m25_453 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", span="276-276", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", file="TraceWriterTests.cs"];
m25_40 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="TraceWriterTests.cs"];
m25_458 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", span="341-341", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", file="TraceWriterTests.cs"];
m25_273 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_274 [label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="621-621", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_275 [label="c.Age = 29", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_276 [label="c.Name = ''Jim''", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_277 [label="c._shouldSerializeName = true", span="624-624", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_279 [label="JsonConvert.SerializeObject(c, new JsonSerializerSettings { TraceWriter = traceWriter })", span="631-631", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_283 [label="c._shouldSerializeName = false", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_284 [label="JsonConvert.SerializeObject(c, new JsonSerializerSettings { TraceWriter = traceWriter })", span="643-643", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_278 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="626-629", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_280 [label="Assert.AreEqual(''ShouldSerialize result for property 'Name' on Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass: True. Path ''.'', traceWriter.TraceRecords[1].Message)", span="633-633", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_281 [label="Assert.AreEqual(TraceLevel.Verbose, traceWriter.TraceRecords[1].Level)", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_282 [label="traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="636-639", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_285 [label="Assert.AreEqual(''ShouldSerialize result for property 'Name' on Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass: False. Path ''.'', traceWriter.TraceRecords[1].Message)", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_286 [label="Assert.AreEqual(TraceLevel.Verbose, traceWriter.TraceRecords[1].Level)", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_287 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.ShouldSerializeTestClass()", file="TraceWriterTests.cs"];
m25_433 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1114-1114", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="TraceWriterTests.cs"];
m25_440 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", span="143-143", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceWriterTests.cs"];
m25_37 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="TraceWriterTests.cs"];
m25_557 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="TraceWriterTests.cs"];
m25_446 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="TraceWriterTests.cs"];
m25_405 [label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", span="175-175", cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", file="TraceWriterTests.cs"];
m25_257 [label="Entry Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs"];
m25_258 [label="InMemoryTraceWriter traceWriter = new InMemoryTraceWriter\r\n            {\r\n                LevelFilter = TraceLevel.Verbose\r\n            }", span="572-575", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs"];
m25_259 [label="JsonConvert.DeserializeObject<Person>(\r\n                ''{'MissingMemberProperty':'!!'}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TraceWriter = traceWriter\r\n                })", span="577-582", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs"];
m25_260 [label="Assert.AreEqual(''Started deserializing Newtonsoft.Json.Tests.TestObjects.Person. Path 'MissingMemberProperty', line 1, position 25.'', traceWriter.TraceRecords[0].Message)", span="584-584", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs"];
m25_261 [label="Assert.AreEqual(''Could not find member 'MissingMemberProperty' on Newtonsoft.Json.Tests.TestObjects.Person. Path 'MissingMemberProperty', line 1, position 25.'', traceWriter.TraceRecords[1].Message)", span="585-585", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs"];
m25_262 [label="Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith(''Finished deserializing Newtonsoft.Json.Tests.TestObjects.Person. Path ''''))", span="586-586", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs"];
m25_263 [label="Exit Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.TraceWriterTests.DeserializeMissingMember()", file="TraceWriterTests.cs"];
m25_558 [label=json, span="", file="TraceWriterTests.cs"];
m25_559 [label=traceWriter, span="", file="TraceWriterTests.cs"];
m25_560 [label=json, span="", file="TraceWriterTests.cs"];
m25_561 [label=traceWriter, span="", file="TraceWriterTests.cs"];
m25_562 [label=traceWriter, span="", file="TraceWriterTests.cs"];
m25_563 [label="Newtonsoft.Json.Tests.Serialization.TraceRecord", span="", file="TraceWriterTests.cs"];
m25_564 [label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter", span="", file="TraceWriterTests.cs"];
m26_318 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="TypeNameHandlingTests.cs"];
m26_319 [label="return new CustomEnumerable<T>(newVal, this);", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="TypeNameHandlingTests.cs"];
m26_320 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="TypeNameHandlingTests.cs"];
m26_616 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs"];
m26_617 [label="string json = @''{\r\n    ''''itemIdentifier'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.ReportItemKeys, Newtonsoft.Json.Tests'''',\r\n        ''''dataType'''': 0,\r\n        ''''wantedUnitID'''': 1,\r\n        ''''application'''': 3,\r\n        ''''id'''': 101,\r\n        ''''name'''': ''''Machine''''\r\n    },\r\n    ''''isBusinessEntity'''': false,\r\n    ''''isKeyItem'''': true,\r\n    ''''summarizeOnThisItem'''': false\r\n}''", span="1747-1759", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs"];
m26_618 [label="GroupingInfo g = JsonConvert.DeserializeObject<GroupingInfo>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="1761-1764", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs"];
m26_619 [label="ReportItemKeys item = (ReportItemKeys)g.ItemIdentifier", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs"];
m26_620 [label="Assert.AreEqual(1UL, item.WantedUnitID)", span="1767-1767", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs"];
m26_621 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="TypeNameHandlingTests.cs"];
m26_206 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", span="644-644", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", file="TypeNameHandlingTests.cs"];
m26_25 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="TypeNameHandlingTests.cs"];
m26_567 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="TypeNameHandlingTests.cs"];
m26_400 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", span="1950-1950", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", file="TypeNameHandlingTests.cs"];
m26_104 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="TypeNameHandlingTests.cs"];
m26_183 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_184 [label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), FormatterAssemblyStyle.Simple, null)", span="585-585", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_185 [label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="587-591", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_187 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="595-607", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_186 [label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_188 [label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="609-609", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_189 [label="Assert.AreEqual(''Name!'', deserialized.Name)", span="610-610", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_190 [label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_191 [label="List<int> nested = (List<int>)deserialized.Value", span="613-613", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_192 [label="Assert.AreEqual(5, nested.Count)", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_193 [label="Assert.AreEqual(1, nested[0])", span="615-615", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_194 [label="Assert.AreEqual(2, nested[1])", span="616-616", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_195 [label="Assert.AreEqual(3, nested[2])", span="617-617", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_196 [label="Assert.AreEqual(4, nested[3])", span="618-618", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_197 [label="Assert.AreEqual(5, nested[4])", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_198 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_279 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs"];
m26_280 [label="Message message = new Message()", span="821-821", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs"];
m26_281 [label="message.Address = ''http://www.google.com''", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs"];
m26_282 [label="message.Body = new SearchDetails\r\n            {\r\n                Query = ''Json.NET'',\r\n                Language = ''en-us''\r\n            }", span="823-827", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs"];
m26_283 [label="string json = JsonConvert.SerializeObject(message, Formatting.Indented)", span="829-829", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs"];
m26_284 [label="Message deserialized = JsonConvert.DeserializeObject<Message>(json)", span="839-839", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs"];
m26_285 [label="SearchDetails searchDetails = (SearchDetails)deserialized.Body", span="841-841", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs"];
m26_286 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs"];
m26_653 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_654 [label="obj == null", span="1893-1893", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_656 [label="ReferenceEquals(this, obj)", span="1894-1894", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_658 [label="obj is IExample", span="1895-1895", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_659 [label="return Name.Equals(((IExample)obj).Name);", span="1897-1897", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_655 [label="return false;", span="1893-1893", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_657 [label="return true;", span="1894-1894", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_660 [label="return false;", span="1901-1901", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_661 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_580 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_581 [label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChildList\r\n                {\r\n                    ''string!''\r\n                }\r\n            }", span="1639-1645", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_582 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1647-1655", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_583 [label="string json = JsonConvert.SerializeObject(p, settings)", span="1657-1657", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_585 [label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1668-1668", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_584 [label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChildList, Newtonsoft.Json.Tests'''',\r\n    ''''$values'''': [\r\n      ''''string!''''\r\n    ]\r\n  }\r\n}'', json)", span="1659-1666", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_586 [label="CustomAssert.IsInstanceOfType(typeof(MyChildList), p2.Child)", span="1669-1669", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_587 [label="Assert.AreEqual(1, ((MyChildList)p2.Child).Count)", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_588 [label="Assert.AreEqual(''string!'', ((MyChildList)p2.Child)[0])", span="1671-1671", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_589 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs"];
m26_17 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", span="112-112", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs"];
m26_18 [label="StringBuilder sb = new StringBuilder()", span="114-114", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs"];
m26_19 [label="int i = 0", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs"];
m26_21 [label="sb.Append(@''{''''$value'''':'')", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs"];
m26_23 [label="ExceptionAssert.Throws<JsonSerializationException>(''Unexpected token when deserializing primitive value: StartObject. Path '$value', line 1, position 11.'', () =>\r\n            {\r\n                var reader = new JsonTextReader(new StringReader(sb.ToString()));\r\n                var ser = new JsonSerializer();\r\n                ser.SpecialPropertyHandling = SpecialPropertyHandling.Default;\r\n                ser.Deserialize<bool>(reader);\r\n            })", span="120-126", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", color=red, community=0, file="TypeNameHandlingTests.cs"];
m26_20 [label="i < 10000", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs"];
m26_22 [label="i++", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs"];
m26_24 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", span="112-112", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs"];
m26_627 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1793-1793", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_628 [label="info.AddValue(''c'', Child)", span="1795-1795", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_629 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1793-1793", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_351 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", file="TypeNameHandlingTests.cs"];
m26_288 [label="Entry Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", span="1822-1822", cluster="Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", file="TypeNameHandlingTests.cs"];
m26_56 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="TypeNameHandlingTests.cs"];
m26_289 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_290 [label="Dictionary<string, object> collection = new Dictionary<string, object>()\r\n            {\r\n                { ''First'', new UrlStatus { Status = 404, Url = @''http://www.bing.com'' } },\r\n                { ''Second'', new UrlStatus { Status = 400, Url = @''http://www.google.com'' } },\r\n                {\r\n                    ''List'', new List<UrlStatus>\r\n                    {\r\n                        new UrlStatus { Status = 300, Url = @''http://www.yahoo.com'' },\r\n                        new UrlStatus { Status = 200, Url = @''http://www.askjeeves.com'' }\r\n                    }\r\n                }\r\n            }", span="855-866", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_291 [label="string json = JsonConvert.SerializeObject(collection, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n            })", span="868-872", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_292 [label="string urlStatusTypeName = ReflectionUtils.GetTypeName(typeof(UrlStatus), FormatterAssemblyStyle.Simple, null)", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_293 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n  ''''First'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 404,\r\n    ''''Url'''': ''''http://www.bing.com''''\r\n  },\r\n  ''''Second'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 400,\r\n    ''''Url'''': ''''http://www.google.com''''\r\n  },\r\n  ''''List'''': {\r\n    ''''$type'''': ''''System.Collections.Generic.List`1[['' + urlStatusTypeName + @'']], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 300,\r\n        ''''Url'''': ''''http://www.yahoo.com''''\r\n      },\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 200,\r\n        ''''Url'''': ''''http://www.askjeeves.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json)", span="876-903", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_294 [label="object c = JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n            })", span="905-909", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_295 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c)", span="911-911", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_296 [label="Dictionary<string, object> newCollection = (Dictionary<string, object>)c", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_297 [label="Assert.AreEqual(3, newCollection.Count)", span="914-914", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_298 [label="Assert.AreEqual(@''http://www.bing.com'', ((UrlStatus)newCollection[''First'']).Url)", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_299 [label="List<UrlStatus> statues = (List<UrlStatus>)newCollection[''List'']", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_300 [label="Assert.AreEqual(2, statues.Count)", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_301 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs"];
m26_631 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_632 [label="SerializableWrapper w = obj as SerializableWrapper", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_633 [label="w == null", span="1849-1849", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_635 [label="return Equals(w.Content, Content);", span="1852-1852", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_634 [label="return false;", span="1850-1850", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_636 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs"];
m26_274 [label="Entry Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", file="TypeNameHandlingTests.cs"];
m26_82 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="141-141", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="TypeNameHandlingTests.cs"];
m26_569 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1602-1602", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_570 [label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1604-1610", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_571 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1612-1620", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_572 [label="string json = JsonConvert.SerializeObject(p, settings)", span="1622-1622", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_574 [label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1631-1631", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_573 [label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n    ''''p'''': ''''string!''''\r\n  }\r\n}'', json)", span="1624-1629", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_575 [label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1632-1632", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_576 [label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1633-1633", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_577 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1602-1602", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_52 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="TypeNameHandlingTests.cs"];
m26_361 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", span="1841-1841", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", file="TypeNameHandlingTests.cs"];
m26_454 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="TypeNameHandlingTests.cs"];
m26_383 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="182-182", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="TypeNameHandlingTests.cs"];
m26_664 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1905-1905", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_665 [label="Name == null", span="1907-1907", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_666 [label="return 0;", span="1908-1908", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_667 [label="return Name.GetHashCode();", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_668 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1905-1905", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_39 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", span="130-130", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_40 [label="var serializer = new JsonSerializer()\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            }", span="132-135", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_41 [label="var sw = new StringWriter()", span="136-136", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_42 [label="serializer.Serialize(new JsonTextWriter(sw) { Formatting = Formatting.Indented }, new WagePerson(), typeof(Person))", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_47 [label="var person = serializer.Deserialize<Person>(rd)", span="151-151", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_43 [label="var result = sw.ToString()", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_44 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', result)", span="140-146", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_45 [label="Assert.IsTrue(result.Contains(''WagePerson''))", span="148-148", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_46 [label="var rd = new JsonTextReader(new StringReader(result))", span="149-149", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_48 [label="CustomAssert.IsInstanceOfType(typeof(WagePerson), person)", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_49 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", span="130-130", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs"];
m26_225 [label="Entry Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", file="TypeNameHandlingTests.cs"];
m26_554 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", span="1922-1922", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_199 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_200 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="625-629", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_201 [label="object p = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                Binder = new CustomSerializationBinder()\r\n            })", span="631-635", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_202 [label="CustomAssert.IsInstanceOfType(typeof(Person), p)", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_203 [label="Person person = (Person)p", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_204 [label="Assert.AreEqual(''Name!'', person.Name)", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_205 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_453 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", file="TypeNameHandlingTests.cs"];
m26_419 [label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="61-61", cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="TypeNameHandlingTests.cs"];
m26_54 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="TypeNameHandlingTests.cs"];
m26_673 [label="Entry Newtonsoft.Json.Tests.Serialization.ApplicationItemKeys.ApplicationItemKeys()", span="1986-1986", cluster="Newtonsoft.Json.Tests.Serialization.ApplicationItemKeys.ApplicationItemKeys()", file="TypeNameHandlingTests.cs"];
m26_207 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_208 [label="return typeof(Person);", span="648-648", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_209 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_669 [label="Entry string.GetHashCode()", span="0-0", cluster="string.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_224 [label="Entry Newtonsoft.Json.Tests.Serialization.Customer.Customer()", span="1828-1828", cluster="Newtonsoft.Json.Tests.Serialization.Customer.Customer()", file="TypeNameHandlingTests.cs"];
m26_210 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_211 [label="TypeNameSerializationBinder binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')", span="656-656", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_212 [label="IList<object> values = new List<object>\r\n            {\r\n                new Customer\r\n                {\r\n                    Name = ''Caroline Customer''\r\n                },\r\n                new Purchase\r\n                {\r\n                    ProductName = ''Elbow Grease'',\r\n                    Price = 5.99m,\r\n                    Quantity = 1\r\n                }\r\n            }", span="658-670", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_213 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                Binder = binder\r\n            })", span="672-676", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_214 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Customer'''',\r\n    ''''Name'''': ''''Caroline Customer''''\r\n  },\r\n  {\r\n    ''''$type'''': ''''Purchase'''',\r\n    ''''ProductName'''': ''''Elbow Grease'''',\r\n    ''''Price'''': 5.99,\r\n    ''''Quantity'''': 1\r\n  }\r\n]'', json)", span="692-703", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_215 [label="IList<object> newValues = JsonConvert.DeserializeObject<IList<object>>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                Binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')\r\n            })", span="705-709", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_216 [label="CustomAssert.IsInstanceOfType(typeof(Customer), newValues[0])", span="711-711", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_217 [label="Customer customer = (Customer)newValues[0]", span="712-712", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_219 [label="CustomAssert.IsInstanceOfType(typeof(Purchase), newValues[1])", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_220 [label="Purchase purchase = (Purchase)newValues[1]", span="716-716", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_218 [label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="713-713", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_221 [label="Assert.AreEqual(''Elbow Grease'', purchase.ProductName)", span="717-717", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_222 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs"];
m26_236 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="TypeNameHandlingTests.cs"];
m26_53 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="771-771", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="TypeNameHandlingTests.cs"];
m26_106 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_107 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_108 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="337-337", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_109 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="339-359", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_110 [label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="361-365", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_111 [label="Assert.AreEqual(4, values.Count)", span="367-367", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_112 [label="EmployeeReference e = (EmployeeReference)values[0]", span="369-369", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_113 [label="Person p = (Person)values[1]", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_119 [label="Assert.AreEqual(''String!'', values[2])", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_120 [label="Assert.AreEqual((long)int.MinValue, values[3])", span="380-380", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_114 [label="Assert.AreEqual(''Bob'', e.Name)", span="372-372", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_115 [label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="373-373", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_116 [label="Assert.AreEqual(null, p.Name)", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_117 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_118 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_121 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_434 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", span="1955-1955", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_7 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="TypeNameHandlingTests.cs"];
m26_137 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="690-690", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="TypeNameHandlingTests.cs"];
m26_527 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="TypeNameHandlingTests.cs"];
m26_122 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", span="384-384", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs"];
m26_123 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs"];
m26_124 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs"];
m26_125 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="389-394", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs"];
m26_128 [label="Assert.IsTrue(ex.Message.StartsWith(@''Type specified in JSON ''' + employeeRef + @''' is not compatible with ''' + personRef + @'''.''))", span="406-406", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs"];
m26_126 [label="JsonConvert.DeserializeObject(json, typeof(Person), new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n                })", span="398-402", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs"];
m26_127 [label=JsonSerializationException, span="404-404", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs"];
m26_129 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", span="384-384", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs"];
m26_649 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="TypeNameHandlingTests.cs"];
m26_161 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs"];
m26_162 [label="string containerTypeName = typeof(Container).AssemblyQualifiedName", span="510-510", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs"];
m26_163 [label="string productListTypeName = typeof(List<Product>).AssemblyQualifiedName", span="511-511", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs"];
m26_166 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + containerTypeName + @'''''',\r\n  ''''In'''': {\r\n    ''''$type'''': '''''' + productListTypeName + @'''''',\r\n    ''''$values'''': []\r\n  },\r\n  ''''Out'''': {\r\n    ''''$type'''': '''''' + productListTypeName + @'''''',\r\n    ''''$values'''': []\r\n  }\r\n}'', json)", span="527-537", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs"];
m26_164 [label="Container container = new Container\r\n            {\r\n                In = new List<Product>(),\r\n                Out = new List<Product>()\r\n            }", span="513-517", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs"];
m26_165 [label="string json = JsonConvert.SerializeObject(container, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    TypeNameHandling = TypeNameHandling.All,\r\n                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n                })", span="519-525", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs"];
m26_167 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs"];
m26_238 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_239 [label="HolderClass testObject = new HolderClass()", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_240 [label="testObject.TestMember = new ContentSubClass(''First One'')", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_241 [label="testObject.AnotherTestMember = new Dictionary<int, IList<ContentBaseClass>>()", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_242 [label="testObject.AnotherTestMember.Add(1, new List<ContentBaseClass>())", span="750-750", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_243 [label="testObject.AnotherTestMember[1].Add(new ContentSubClass(''Second One''))", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_244 [label="testObject.AThirdTestMember = new ContentSubClass(''Third One'')", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_251 [label="serializingTester.Serialize(jsonWriter, testObject)", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_245 [label="JsonSerializer serializingTester = new JsonSerializer()", span="754-754", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_246 [label="serializingTester.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_250 [label="serializingTester.TypeNameHandling = TypeNameHandling.Auto", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_247 [label="StringWriter sw = new StringWriter()", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_248 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_252 [label="string json = sw.ToString()", span="765-765", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_249 [label="jsonWriter.Formatting = Formatting.Indented", span="760-760", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_253 [label="string contentSubClassRef = ReflectionUtils.GetTypeName(typeof(ContentSubClass), FormatterAssemblyStyle.Simple, null)", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_257 [label="Assert.AreEqual(expected, json)", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_258 [label="StringReader sr = new StringReader(json)", span="793-793", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_254 [label="string dictionaryRef = ReflectionUtils.GetTypeName(typeof(Dictionary<int, IList<ContentBaseClass>>), FormatterAssemblyStyle.Simple, null)", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_256 [label="string expected = @''{\r\n  ''''TestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''First One''''\r\n  },\r\n  ''''AnotherTestMember'''': {\r\n    ''''$type'''': '''''' + dictionaryRef + @'''''',\r\n    ''''1'''': [\r\n      {\r\n        ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n        ''''SomeString'''': ''''Second One''''\r\n      }\r\n    ]\r\n  },\r\n  ''''AThirdTestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''Third One''''\r\n  }\r\n}''", span="771-789", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_255 [label="string listRef = ReflectionUtils.GetTypeName(typeof(List<ContentBaseClass>), FormatterAssemblyStyle.Simple, null)", span="769-769", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_259 [label="JsonSerializer deserializingTester = new JsonSerializer()", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_261 [label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="799-799", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_260 [label="HolderClass anotherTestObject", span="797-797", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_262 [label="deserializingTester.TypeNameHandling = TypeNameHandling.Auto", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_263 [label="anotherTestObject = deserializingTester.Deserialize<HolderClass>(jsonReader)", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_264 [label="Assert.IsNotNull(anotherTestObject)", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_265 [label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), anotherTestObject.TestMember)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_266 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<int, IList<ContentBaseClass>>), anotherTestObject.AnotherTestMember)", span="808-808", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_267 [label="Assert.AreEqual(1, anotherTestObject.AnotherTestMember.Count)", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_268 [label="IList<ContentBaseClass> list = anotherTestObject.AnotherTestMember[1]", span="811-811", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_269 [label="CustomAssert.IsInstanceOfType(typeof(List<ContentBaseClass>), list)", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_270 [label="Assert.AreEqual(1, list.Count)", span="814-814", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_271 [label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), list[0])", span="815-815", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_272 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs"];
m26_362 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_363 [label="Console.WriteLine(''Type Name Handling: '' + flag.ToString())", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_366 [label="serializer.TypeNameHandling = flag", span="1066-1066", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_367 [label="serializer.Serialize(new JsonTextWriter(writer), e)", span="1069-1069", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_371 [label="Assert.AreEqual(e, f, ''Objects should be equal after round trip json serialization'')", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_364 [label="StringWriter writer = new StringWriter()", span="1062-1062", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_365 [label="JsonSerializer serializer = new JsonSerializer()", span="1065-1065", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_368 [label="Console.WriteLine(writer.ToString())", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_370 [label="SerializableWrapper f = serializer.Deserialize<SerializableWrapper>(new JsonTextReader(new StringReader(writer.ToString())))", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_369 [label="Console.WriteLine()", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_372 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs"];
m26_435 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_436 [label="TypeNameObject o1 = new TypeNameObject()", span="1229-1229", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_437 [label="o1.Object1 = new TestComponentSimple { MyProperty = 1 }", span="1231-1231", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_438 [label="o1.Object2 = 123", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_439 [label="o1.ObjectNotHandled = new TestComponentSimple { MyProperty = int.MaxValue }", span="1233-1233", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_440 [label="o1.String = ''String!''", span="1234-1234", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_441 [label="o1.Integer = int.MaxValue", span="1235-1235", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_442 [label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_443 [label="string expected = @''{\r\n  ''''Object1'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Object2'''': 123,\r\n  ''''ObjectNotHandled'''': {\r\n    ''''MyProperty'''': 2147483647\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1238-1249", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_444 [label="Assert.AreEqual(expected, json)", span="1250-1250", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_445 [label="TypeNameObject o2 = JsonConvert.DeserializeObject<TypeNameObject>(json)", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_446 [label="Assert.IsNotNull(o2)", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_447 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Object1)", span="1255-1255", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_448 [label="Assert.AreEqual(1, ((TestComponentSimple)o2.Object1).MyProperty)", span="1256-1256", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_449 [label="CustomAssert.IsInstanceOfType(typeof(long), o2.Object2)", span="1257-1257", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_450 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.ObjectNotHandled)", span="1258-1258", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_451 [label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': 2147483647\r\n}'', o2.ObjectNotHandled.ToString())", span="1259-1261", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_452 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs"];
m26_303 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="704-704", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m26_625 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="TypeNameHandlingTests.cs"];
m26_237 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="TypeNameHandlingTests.cs"];
m26_90 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="820-820", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m26_321 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_322 [label="count == 0", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_323 [label="yield break;", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_324 [label="yield return value;", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_328 [label="yield return nextInLine.value;", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_325 [label="var nextInLine = next", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_326 [label="nextInLine != null", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_327 [label="nextInLine.count != 0", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_329 [label="nextInLine = nextInLine.next", span="972-972", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_330 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_525 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", span="1915-1915", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_275 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TypeNameHandlingTests.cs"];
m26_455 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_456 [label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling()", span="1267-1267", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_457 [label="c1.Data = new List<object>\r\n            {\r\n                1,\r\n                ''two'',\r\n                new TestComponentSimple { MyProperty = 1 }\r\n            }", span="1268-1273", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_458 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1275-1275", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_459 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    1,\r\n    ''''two'''',\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="1276-1285", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_460 [label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1287-1287", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_461 [label="Assert.AreEqual(3, c2.Data.Count)", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_462 [label="CustomAssert.IsInstanceOfType(typeof(long), c2.Data[0])", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_463 [label="CustomAssert.IsInstanceOfType(typeof(string), c2.Data[1])", span="1291-1291", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_464 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[2])", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_465 [label="TestComponentSimple c = (TestComponentSimple)c2.Data[2]", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_466 [label="Assert.AreEqual(1, c.MyProperty)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_467 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_468 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", span="1943-1943", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_91 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="263-263", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs"];
m26_92 [label="string cookieRef = ReflectionUtils.GetTypeName(typeof(Cookie), FormatterAssemblyStyle.Simple, null)", span="265-265", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs"];
m26_93 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + cookieRef + @''''''\r\n}''", span="267-270", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs"];
m26_94 [label="object cookie = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="272-275", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs"];
m26_95 [label="CustomAssert.IsInstanceOfType(typeof(Cookie), cookie)", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs"];
m26_96 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="263-263", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs"];
m26_304 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs"];
m26_305 [label="string productClassRef = ReflectionUtils.GetTypeName(typeof(CustomEnumerable<Product>), FormatterAssemblyStyle.Simple, null)", span="925-925", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs"];
m26_306 [label="CustomEnumerable<Product> products = new CustomEnumerable<Product>()", span="927-927", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs"];
m26_308 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + productClassRef + @'''''',\r\n  ''''$values'''': []\r\n}'', json)", span="931-934", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs"];
m26_307 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs"];
m26_309 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs"];
m26_555 [label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="826-826", cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="TypeNameHandlingTests.cs"];
m26_630 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="TypeNameHandlingTests.cs"];
m26_273 [label="Entry Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", file="TypeNameHandlingTests.cs"];
m26_670 [label="Entry Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", span="1979-1979", cluster="Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", file="TypeNameHandlingTests.cs"];
m26_671 [label="ItemIdentifier = new ApplicationItemKeys()", span="1981-1981", cluster="Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", file="TypeNameHandlingTests.cs"];
m26_672 [label="Exit Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", span="1979-1979", cluster="Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", file="TypeNameHandlingTests.cs"];
m26_662 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="TypeNameHandlingTests.cs"];
m26_55 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="TypeNameHandlingTests.cs"];
m26_38 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="658-658", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="TypeNameHandlingTests.cs"];
m26_353 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs"];
m26_354 [label="IExample e = new Example(''Rob'')", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs"];
m26_355 [label="SerializableWrapper w = new SerializableWrapper\r\n            {\r\n                Content = e\r\n            }", span="1042-1045", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs"];
m26_356 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.All)", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs"];
m26_357 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Auto)", span="1055-1055", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs"];
m26_358 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Objects)", span="1056-1056", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs"];
m26_359 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs"];
m26_331 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_332 [label="return GetEnumerator();", span="978-978", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_333 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs"];
m26_63 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_64 [label="Wrapper wrapper = new Wrapper()", span="183-183", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_65 [label="wrapper.Array = new List<EmployeeReference>\r\n            {\r\n                new EmployeeReference()\r\n            }", span="184-187", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_66 [label="wrapper.Dictionary = new Dictionary<string, EmployeeReference>\r\n            {\r\n                { ''First'', new EmployeeReference() }\r\n            }", span="188-191", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_67 [label="string json = JsonConvert.SerializeObject(wrapper, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="193-196", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_68 [label="Assert.AreEqual(@''{\r\n  ''''Array'''': [\r\n    {\r\n      ''''$id'''': ''''1'''',\r\n      ''''Name'''': null,\r\n      ''''Manager'''': null\r\n    }\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''First'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': null,\r\n      ''''Manager'''': null\r\n    }\r\n  }\r\n}'', json)", span="198-213", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_69 [label="Wrapper w2 = JsonConvert.DeserializeObject<Wrapper>(json)", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_70 [label="CustomAssert.IsInstanceOfType(typeof(List<EmployeeReference>), w2.Array)", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_71 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, EmployeeReference>), w2.Dictionary)", span="217-217", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_72 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs"];
m26_650 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_651 [label="info.AddValue(''name'', Name)", span="1886-1886", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_652 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_34 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs"];
m26_469 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_470 [label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling\r\n            {\r\n                Data = new List<object>\r\n                {\r\n                    new TestComponentSimple { MyProperty = 1 },\r\n                    new List<object>\r\n                    {\r\n                        new List<object>\r\n                        {\r\n                            new List<object>()\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1300-1313", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_471 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_472 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1316-1331", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_473 [label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1333-1333", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_474 [label="Assert.AreEqual(2, c2.Data.Count)", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_475 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1336-1336", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_476 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_477 [label="List<object> c = (List<object>)c2.Data[1]", span="1338-1338", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_478 [label="CustomAssert.IsInstanceOfType(typeof(JArray), c[0])", span="1339-1339", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_479 [label="json = @''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="1341-1357", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_480 [label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1359-1359", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_481 [label="Assert.AreEqual(2, c2.Data.Count)", span="1360-1360", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_482 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_483 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1363-1363", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_484 [label="c = (List<object>)c2.Data[1]", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_485 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[0])", span="1365-1365", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_486 [label="JObject o = (JObject)c[0]", span="1366-1366", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_487 [label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_488 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs"];
m26_160 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m26_130 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="TypeNameHandlingTests.cs"];
m26_168 [label="Entry Newtonsoft.Json.Tests.TestObjects.Container.Container()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Container.Container()", file="TypeNameHandlingTests.cs"];
m26_6 [label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="TypeNameHandlingTests.cs"];
m26_568 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m26_83 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs"];
m26_84 [label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), FormatterAssemblyStyle.Simple, null)", span="243-243", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs"];
m26_85 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="245-250", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs"];
m26_86 [label="object employee = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="252-255", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs"];
m26_87 [label="CustomAssert.IsInstanceOfType(typeof(EmployeeReference), employee)", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs"];
m26_88 [label="Assert.AreEqual(''Name!'', ((EmployeeReference)employee).Name)", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs"];
m26_89 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs"];
m26_509 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", span="1937-1937", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", file="TypeNameHandlingTests.cs"];
m26_420 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1200-1200", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_421 [label="TypeNameDictionary<object> l = new TypeNameDictionary<object>()", span="1202-1202", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_422 [label="l.Add(''First'', new TestComponentSimple { MyProperty = 1 })", span="1203-1203", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_423 [label="l.Add(''Second'', ''String!'')", span="1204-1204", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_424 [label="l.Add(''Third'', long.MaxValue)", span="1205-1205", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_425 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1207-1207", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_426 [label="Assert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Second'''': ''''String!'''',\r\n  ''''Third'''': 9223372036854775807\r\n}'', json)", span="1208-1215", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_427 [label="TypeNameDictionary<object> l2 = JsonConvert.DeserializeObject<TypeNameDictionary<object>>(json)", span="1217-1217", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_428 [label="Assert.AreEqual(3, l2.Count)", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_429 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[''First''])", span="1220-1220", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_430 [label="Assert.AreEqual(1, ((TestComponentSimple)l2[''First'']).MyProperty)", span="1221-1221", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_431 [label="CustomAssert.IsInstanceOfType(typeof(string), l2[''Second''])", span="1222-1222", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_432 [label="CustomAssert.IsInstanceOfType(typeof(long), l2[''Third''])", span="1223-1223", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_433 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1200-1200", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs"];
m26_376 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs"];
m26_377 [label="Message message = new Message\r\n            {\r\n                Address = ''jamesnk@testtown.com'',\r\n                Body = new Version(1, 2, 3, 4)\r\n            }", span="1088-1092", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs"];
m26_378 [label="string json = JsonConvert.SerializeObject(message, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                Binder = new MetroBinder(),\r\n                ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(NETFX_CORE || PORTABLE)\r\n                    IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="1094-1105", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs"];
m26_379 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''':::MESSAGE:::, AssemblyName'''',\r\n  ''''Address'''': ''''jamesnk@testtown.com'''',\r\n  ''''Body'''': {\r\n    ''''$type'''': '''':::VERSION:::, AssemblyName'''',\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  }\r\n}'', json)", span="1107-1119", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs"];
m26_380 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs"];
m26_391 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs"];
m26_150 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_151 [label="string typeName = typeof(SendHttpRequest).AssemblyQualifiedName", span="478-478", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_152 [label="string json = @''{\r\n''''$type'''': '''''' + typeName + @'''''',\r\n''''RequestData'''': {\r\n''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib,Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n''''Id'''': ''''siedemnaście'''',\r\n''''X'''': ''''323''''\r\n},\r\n''''Method'''': ''''GET'''',\r\n''''Url'''': ''''http://www.onet.pl'''',\r\n''''RequestEncoding'''': ''''UTF-8'''',\r\n''''CorrelationId'''': ''''xyz''''\r\n}''", span="480-491", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_153 [label="ICorrelatedMessage message = JsonConvert.DeserializeObject<ICorrelatedMessage>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="493-497", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_154 [label="CustomAssert.IsInstanceOfType(typeof(SendHttpRequest), message)", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_155 [label="SendHttpRequest request = (SendHttpRequest)message", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_156 [label="Assert.AreEqual(''xyz'', request.CorrelationId)", span="502-502", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_157 [label="Assert.AreEqual(2, request.RequestData.Count)", span="503-503", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_158 [label="Assert.AreEqual(''siedemnaście'', request.RequestData[''Id''])", span="504-504", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_159 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs"];
m26_8 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m26_334 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_335 [label="Car testerObject = new Car()", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_336 [label="testerObject.Year = new DateTime(2000, 10, 5, 1, 1, 1, DateTimeKind.Utc)", span="999-999", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_338 [label="testerObject.Objects = new object[] { data, ''prueba'' }", span="1001-1001", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_342 [label="string output = JsonConvert.SerializeObject(testerObject, Formatting.Indented, jsonSettings)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_337 [label="byte[] data = new byte[] { 75, 65, 82, 73, 82, 65 }", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_349 [label="CollectionAssert.AreEquivalent(data, d)", span="1032-1032", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_339 [label="JsonSerializerSettings jsonSettings = new JsonSerializerSettings()", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_340 [label="jsonSettings.NullValueHandling = NullValueHandling.Ignore", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_341 [label="jsonSettings.TypeNameHandling = TypeNameHandling.All", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_345 [label="Car obj = JsonConvert.DeserializeObject<Car>(output, jsonSettings)", span="1025-1025", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_343 [label="string carClassRef = ReflectionUtils.GetTypeName(typeof(Car), FormatterAssemblyStyle.Simple, null)", span="1009-1009", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_344 [label="Assert.AreEqual(output, @''{\r\n  ''''$type'''': '''''' + carClassRef + @'''''',\r\n  ''''Year'''': ''''2000-10-05T01:01:01Z'''',\r\n  ''''Objects'''': {\r\n    ''''$type'''': ''''System.Object[], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n        ''''$value'''': ''''S0FSSVJB''''\r\n      },\r\n      ''''prueba''''\r\n    ]\r\n  }\r\n}'')", span="1011-1024", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_346 [label="Assert.IsNotNull(obj)", span="1027-1027", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_347 [label="Assert.IsTrue(obj.Objects[0] is byte[])", span="1029-1029", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_348 [label="byte[] d = (byte[])obj.Objects[0]", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_350 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs"];
m26_138 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="402-402", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="TypeNameHandlingTests.cs"];
m26_615 [label="Entry System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", file="TypeNameHandlingTests.cs"];
m26_73 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Wrapper.Wrapper()", span="174-174", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Wrapper.Wrapper()", file="TypeNameHandlingTests.cs"];
m26_181 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="540-540", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="TypeNameHandlingTests.cs"];
m26_277 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="798-798", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="TypeNameHandlingTests.cs"];
m26_37 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="TypeNameHandlingTests.cs"];
m26_97 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_98 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_99 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="285-285", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_102 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''2000-12-30T00:00:00Z'''',\r\n    ''''LastModified'''': ''''2000-12-30T00:00:00Z''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]'', json)", span="310-330", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_100 [label="List<object> values = new List<object>\r\n            {\r\n                new EmployeeReference\r\n                {\r\n                    Name = ''Bob'',\r\n                    Manager = new EmployeeReference { Name = ''Frank'' }\r\n                },\r\n                new Person\r\n                {\r\n                    Department = ''Department'',\r\n                    BirthDate = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc),\r\n                    LastModified = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc)\r\n                },\r\n                ''String!'',\r\n                int.MinValue\r\n            }", span="287-302", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_101 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="304-308", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_103 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs"];
m26_302 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", file="TypeNameHandlingTests.cs"];
m26_401 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeNameHandlingTests.cs"];
m26_556 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_557 [label="string contextKey = ''k1''", span="1581-1581", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_558 [label="var someValue = Guid.NewGuid()", span="1582-1582", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_560 [label="inputContext.Add(contextKey, someValue)", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_565 [label="Assert.AreEqual(someValue, deserializedObject[contextKey])", span="1598-1598", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_559 [label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_562 [label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="1592-1592", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_561 [label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            }", span="1587-1591", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_564 [label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="1596-1596", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_563 [label="Console.WriteLine(serializedString)", span="1594-1594", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_566 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs"];
m26_131 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_132 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_133 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="415-420", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_134 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_135 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}'', o.ToString())", span="424-427", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_136 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs"];
m26_374 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="TypeNameHandlingTests.cs"];
m26_382 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", span="1122-1122", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", file="TypeNameHandlingTests.cs"];
m26_526 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", span="1929-1929", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", file="TypeNameHandlingTests.cs"];
m26_5 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TypeNameHandlingTests.cs"];
m26_9 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="TypeNameHandlingTests.cs"];
m26_352 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="TypeNameHandlingTests.cs"];
m26_62 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="613-613", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m26_278 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="TypeNameHandlingTests.cs"];
m26_384 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", span="1124-1124", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_385 [label="return null;", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_386 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", span="1124-1124", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_276 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TypeNameHandlingTests.cs"];
m26_228 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="729-729", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs"];
m26_229 [label="assemblyName = null", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs"];
m26_230 [label="typeName = serializedType.Name", span="732-732", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs"];
m26_231 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="729-729", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs"];
m26_139 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs"];
m26_140 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="433-438", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs"];
m26_141 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 56.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                    {\r\n                        TypeNameHandling = TypeNameHandling.Objects\r\n                    });\r\n                })", span="440-448", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs"];
m26_142 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs"];
m26_310 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs"];
m26_316 [label="count = 0", span="953-953", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs"];
m26_317 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs"];
m26_223 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs"];
m26_226 [label="TypeFormat = typeFormat", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs"];
m26_227 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs"];
m26_146 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="TypeNameHandlingTests.cs"];
m26_147 [label="RequestEncoding = ''UTF-8''", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="TypeNameHandlingTests.cs"];
m26_148 [label="Method = ''GET''", span="461-461", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="TypeNameHandlingTests.cs"];
m26_149 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="TypeNameHandlingTests.cs"];
m26_51 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="TypeNameHandlingTests.cs"];
m26_143 [label="Entry lambda expression", span="442-448", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m26_29 [label="var reader = new JsonTextReader(new StringReader(sb.ToString()))", span="122-122", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m26_28 [label="Entry lambda expression", span="120-126", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m26_30 [label="var ser = new JsonSerializer()", span="123-123", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m26_32 [label="ser.Deserialize<bool>(reader)", span="125-125", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m26_31 [label="ser.SpecialPropertyHandling = SpecialPropertyHandling.Default", span="124-124", cluster="lambda expression", color=red, community=0, file="TypeNameHandlingTests.cs"];
m26_33 [label="Exit lambda expression", span="120-126", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m26_144 [label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                    {\r\n                        TypeNameHandling = TypeNameHandling.Objects\r\n                    })", span="444-447", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m26_145 [label="Exit lambda expression", span="442-448", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m26_375 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="TypeNameHandlingTests.cs"];
m26_58 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs"];
m26_59 [label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="160-163", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs"];
m26_60 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', json)", span="165-171", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs"];
m26_61 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs"];
m26_169 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="549-549", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_170 [label="string typeNamePropertyRef = ReflectionUtils.GetTypeName(typeof(TypeNameProperty), FormatterAssemblyStyle.Simple, null)", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_171 [label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new TypeNameProperty\r\n                {\r\n                    Name = ''Nested!''\r\n                }\r\n            }", span="553-560", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_173 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + typeNamePropertyRef + @'''''',\r\n    ''''Name'''': ''''Nested!'''',\r\n    ''''Value'''': null\r\n  }\r\n}'', json)", span="564-571", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_172 [label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_174 [label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="573-573", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_175 [label="Assert.AreEqual(''Name!'', deserialized.Name)", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_176 [label="CustomAssert.IsInstanceOfType(typeof(TypeNameProperty), deserialized.Value)", span="575-575", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_177 [label="TypeNameProperty nested = (TypeNameProperty)deserialized.Value", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_178 [label="Assert.AreEqual(''Nested!'', nested.Name)", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_179 [label="Assert.AreEqual(null, nested.Value)", span="579-579", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_180 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="549-549", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs"];
m26_392 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1142-1142", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs"];
m26_393 [label="TypeNameList<int> l = new TypeNameList<int>()", span="1144-1144", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs"];
m26_394 [label="l.Add(1)", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs"];
m26_395 [label="l.Add(2)", span="1146-1146", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs"];
m26_396 [label="l.Add(3)", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs"];
m26_397 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1149-1149", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs"];
m26_398 [label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1150-1154", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs"];
m26_399 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1142-1142", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs"];
m26_57 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="152-152", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TypeNameHandlingTests.cs"];
m26_35 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="TypeNameHandlingTests.cs"];
m26_76 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="221-221", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs"];
m26_77 [label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), FormatterAssemblyStyle.Simple, null)", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs"];
m26_78 [label="EmployeeReference employee = new EmployeeReference()", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs"];
m26_80 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': null,\r\n  ''''Manager'''': null\r\n}'', json)", span="232-237", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs"];
m26_79 [label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="227-230", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs"];
m26_81 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="221-221", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs"];
m26_0 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs"];
m26_1 [label="Dictionary<string, object> dic = new Dictionary<string, object>\r\n            {\r\n                { ''movie'', new Movie { Name = ''Die Hard''}}\r\n            }", span="59-62", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs"];
m26_2 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="64-67", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs"];
m26_3 [label="Assert.AreEqual(@''{\r\n  ''''movie'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n    ''''Name'''': ''''Die Hard'''',\r\n    ''''Description'''': null,\r\n    ''''Classification'''': null,\r\n    ''''Studio'''': null,\r\n    ''''ReleaseDate'''': null,\r\n    ''''ReleaseCountries'''': null\r\n  }\r\n}'', json)", span="69-79", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs"];
m26_4 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs"];
m26_528 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_529 [label="PropertyItemTypeNameHandlingDynamic d1 = new PropertyItemTypeNameHandlingDynamic()", span="1507-1507", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_530 [label="dynamic data = new DynamicDictionary()", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_535 [label="d1.Data = (DynamicDictionary)data", span="1523-1523", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_536 [label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="1525-1525", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_531 [label="data.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 1\r\n            }", span="1510-1513", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_534 [label="data.two = data2", span="1521-1521", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_532 [label="dynamic data2 = new DynamicDictionary()", span="1515-1515", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_533 [label="data2.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 2\r\n            }", span="1516-1519", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_537 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1526-1539", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_538 [label="PropertyItemTypeNameHandlingDynamic d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1541-1541", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_539 [label="Assert.IsNotNull(d2)", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_540 [label="Assert.IsNotNull(d2.Data)", span="1543-1543", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_541 [label="dynamic data3 = d2.Data", span="1545-1545", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_542 [label="TestComponentSimple c = (TestComponentSimple)data3.one", span="1546-1546", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_544 [label="dynamic data4 = data3.two", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_543 [label="Assert.AreEqual(1, c.MyProperty)", span="1547-1547", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_545 [label="JObject o = (JObject)data4.one", span="1550-1550", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_546 [label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1551-1551", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_547 [label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}''", span="1553-1567", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_548 [label="d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1569-1569", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_549 [label="data3 = d2.Data", span="1570-1570", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_550 [label="data4 = data3.two", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_551 [label="o = (JObject)data4.one", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_552 [label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1573-1573", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_553 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs"];
m26_381 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="TypeNameHandlingTests.cs"];
m26_590 [label="Entry Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", file="TypeNameHandlingTests.cs"];
m26_27 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TypeNameHandlingTests.cs"];
m26_15 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TypeNameHandlingTests.cs"];
m26_579 [label="Entry Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", span="1799-1799", cluster="Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", file="TypeNameHandlingTests.cs"];
m26_602 [label="Entry Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", file="TypeNameHandlingTests.cs"];
m26_373 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="TypeNameHandlingTests.cs"];
m26_578 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1789-1789", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="TypeNameHandlingTests.cs"];
m26_626 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1789-1789", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="TypeNameHandlingTests.cs"];
m26_50 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="TypeNameHandlingTests.cs"];
m26_591 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1675-1675", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_592 [label="ParentParent pp = new ParentParent()", span="1677-1677", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_593 [label="pp.ParentProp = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1679-1685", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_595 [label="string json = JsonConvert.SerializeObject(pp, settings)", span="1696-1696", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_594 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1687-1694", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_597 [label="ParentParent pp2 = JsonConvert.DeserializeObject<ParentParent>(json, settings)", span="1707-1707", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_596 [label="Assert.AreEqual(@''{\r\n  ''''ParentProp'''': {\r\n    ''''c'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n      ''''p'''': ''''string!''''\r\n    }\r\n  }\r\n}'', json)", span="1698-1705", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_598 [label="MyParent p2 = pp2.ParentProp", span="1708-1708", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_599 [label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_600 [label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1710-1710", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_601 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1675-1675", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs"];
m26_643 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_287 [label="Entry Newtonsoft.Json.Tests.Serialization.Message.Message()", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.Message.Message()", file="TypeNameHandlingTests.cs"];
m26_387 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs"];
m26_388 [label="assemblyName = ''AssemblyName''", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs"];
m26_389 [label="typeName = '':::'' + serializedType.Name.ToUpper(CultureInfo.InvariantCulture) + '':::''", span="1133-1133", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs"];
m26_390 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs"];
m26_603 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1715-1715", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_604 [label="var input = new List<Stack<string>>()", span="1717-1717", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_605 [label="input.Add(new Stack<string>(new List<string> { ''One'', ''Two'', ''Three'' }))", span="1719-1719", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_606 [label="input.Add(new Stack<string>(new List<string> { ''Four'', ''Five'', ''Six'' }))", span="1720-1720", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_607 [label="input.Add(new Stack<string>(new List<string> { ''Seven'', ''Eight'', ''Nine'' }))", span="1721-1721", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_608 [label="string serialized = JsonConvert.SerializeObject(input,\r\n                Newtonsoft.Json.Formatting.Indented,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All, TypeNameAssemblyFormat = FormatterAssemblyStyle.Full } // TypeNameHandling.Auto will work\r\n            )", span="1723-1726", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_609 [label="Console.WriteLine(serialized)", span="1728-1728", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_610 [label="var output = JsonConvert.DeserializeObject<List<Stack<string>>>(serialized,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }\r\n            )", span="1730-1732", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_611 [label=output, span="1734-1734", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_612 [label=stack, span="1736-1736", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_613 [label="Console.WriteLine(value)", span="1738-1738", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_614 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1715-1715", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs"];
m26_489 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1371-1371", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_490 [label="PropertyItemTypeNameHandlingDictionary c1 = new PropertyItemTypeNameHandlingDictionary()\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    {\r\n                        ''one'', new TestComponentSimple { MyProperty = 1 }\r\n                    },\r\n                    {\r\n                        ''two'', new Dictionary<string, object>\r\n                        {\r\n                            {\r\n                                ''one'', new Dictionary<string, object>\r\n                                {\r\n                                    { ''one'', 1 }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1373-1392", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_491 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_492 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''one'''': 1\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1395-1408", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_493 [label="PropertyItemTypeNameHandlingDictionary c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1410-1410", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_494 [label="Assert.AreEqual(2, c2.Data.Count)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_495 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_496 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_497 [label="Dictionary<string, object> c = (Dictionary<string, object>)c2.Data[''two'']", span="1415-1415", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_498 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_499 [label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 1\r\n      }\r\n    }\r\n  }\r\n}''", span="1418-1432", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_500 [label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1434-1434", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_501 [label="Assert.AreEqual(2, c2.Data.Count)", span="1435-1435", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_502 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_503 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_504 [label="c = (Dictionary<string, object>)c2.Data[''two'']", span="1439-1439", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_505 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1440-1440", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_506 [label="JObject o = (JObject)c[''one'']", span="1442-1442", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_507 [label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1443-1443", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_508 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1371-1371", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs"];
m26_10 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs"];
m26_11 [label="IList<KeyValuePair<string, object>> dic = new List<KeyValuePair<string, object>>\r\n            {\r\n                new KeyValuePair<string, object>(''movie'', new Movie { Name = ''Die Hard''})\r\n            }", span="85-88", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs"];
m26_12 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="90-93", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs"];
m26_13 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''movie'''',\r\n    ''''Value'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n      ''''Name'''': ''''Die Hard'''',\r\n      ''''Description'''': null,\r\n      ''''Classification'''': null,\r\n      ''''Studio'''': null,\r\n      ''''ReleaseDate'''': null,\r\n      ''''ReleaseCountries'''': null\r\n    }\r\n  }\r\n]'', json)", span="95-108", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs"];
m26_14 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs"];
m26_16 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TypeNameHandlingTests.cs"];
m26_510 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_511 [label="PropertyItemTypeNameHandlingObject o1 = new PropertyItemTypeNameHandlingObject\r\n            {\r\n                Data = new TypeNameHandlingTestObject\r\n                {\r\n                    Prop1 = new List<object>\r\n                    {\r\n                        new TestComponentSimple\r\n                        {\r\n                            MyProperty = 1\r\n                        }\r\n                    },\r\n                    Prop2 = new TestComponentSimple\r\n                    {\r\n                        MyProperty = 1\r\n                    },\r\n                    Prop3 = 3,\r\n                    Prop4 = new JObject()\r\n                }\r\n            }", span="1449-1467", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_512 [label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1469-1469", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_513 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''Prop3'''': 3,\r\n    ''''Prop4'''': {}\r\n  }\r\n}'', json)", span="1470-1487", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_514 [label="PropertyItemTypeNameHandlingObject o2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingObject>(json)", span="1489-1489", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_515 [label="Assert.IsNotNull(o2)", span="1490-1490", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_516 [label="Assert.IsNotNull(o2.Data)", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_517 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), o2.Data.Prop1)", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_518 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Data.Prop2)", span="1494-1494", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_519 [label="CustomAssert.IsInstanceOfType(typeof(long), o2.Data.Prop3)", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_520 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.Data.Prop4)", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_521 [label="List<object> o = (List<object>)o2.Data.Prop1", span="1498-1498", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_522 [label="JObject j = (JObject)o[0]", span="1499-1499", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_523 [label="Assert.AreEqual(1, (int)j[''MyProperty''])", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_524 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs"];
m26_637 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="TypeNameHandlingTests.cs"];
m26_182 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs"];
m26_360 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs"];
m26_644 [label="Name = name", span="1876-1876", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs"];
m26_645 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs"];
m26_663 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="TypeNameHandlingTests.cs"];
m26_75 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="TypeNameHandlingTests.cs"];
m26_418 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", file="TypeNameHandlingTests.cs"];
m26_311 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs"];
m26_312 [label="this.value = value", span="946-946", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs"];
m26_313 [label="this.next = next", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs"];
m26_314 [label="count = this.next.count + 1", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs"];
m26_315 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs"];
m26_638 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", span="1855-1855", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_639 [label="Content == null", span="1857-1857", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_640 [label="return 0;", span="1858-1858", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_641 [label="return Content.GetHashCode();", span="1860-1860", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_642 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", span="1855-1855", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs"];
m26_402 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1158-1158", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_403 [label="var c1 = new TestComponentSimple()", span="1160-1160", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_404 [label="TypeNameList<object> l = new TypeNameList<object>()", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_405 [label="l.Add(c1)", span="1163-1163", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_406 [label="l.Add(new Employee\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                Department = ''Department!''\r\n            })", span="1164-1168", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_407 [label="l.Add(''String!'')", span="1169-1169", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_408 [label="l.Add(long.MaxValue)", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_409 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1172-1172", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_410 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee, Newtonsoft.Json.Tests'''',\r\n    ''''FirstName'''': null,\r\n    ''''LastName'''': null,\r\n    ''''BirthDate'''': ''''2000-12-12T12:12:12Z'''',\r\n    ''''Department'''': ''''Department!'''',\r\n    ''''JobTitle'''': null\r\n  },\r\n  ''''String!'''',\r\n  9223372036854775807\r\n]'', json)", span="1173-1188", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_411 [label="TypeNameList<object> l2 = JsonConvert.DeserializeObject<TypeNameList<object>>(json)", span="1190-1190", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_412 [label="Assert.AreEqual(4, l2.Count)", span="1191-1191", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_413 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[0])", span="1193-1193", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_414 [label="CustomAssert.IsInstanceOfType(typeof(Employee), l2[1])", span="1194-1194", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_415 [label="CustomAssert.IsInstanceOfType(typeof(string), l2[2])", span="1195-1195", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_416 [label="CustomAssert.IsInstanceOfType(typeof(long), l2[3])", span="1196-1196", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_417 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1158-1158", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs"];
m26_105 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="TypeNameHandlingTests.cs"];
m26_622 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1784-1784", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_623 [label="Child = (ISomeBase)info.GetValue(''c'', typeof(ISomeBase))", span="1786-1786", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_624 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1784-1784", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_26 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="TypeNameHandlingTests.cs"];
m26_646 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1879-1879", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_647 [label="Name = info.GetString(''name'')", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_648 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1879-1879", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs"];
m26_36 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="TypeNameHandlingTests.cs"];
m26_232 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_233 [label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_234 [label="return Type.GetType(resolvedTypeName, true);", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_235 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs"];
m26_74 [label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="TypeNameHandlingTests.cs"];
m26_674 [label=sb, span="", file="TypeNameHandlingTests.cs"];
m26_675 [label=json, span="", file="TypeNameHandlingTests.cs"];
m26_676 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest", span="", file="TypeNameHandlingTests.cs"];
m26_677 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", span="", file="TypeNameHandlingTests.cs"];
m26_678 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", span="", file="TypeNameHandlingTests.cs"];
m26_679 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", span="", file="TypeNameHandlingTests.cs"];
m26_680 [label="Newtonsoft.Json.Tests.Serialization.MyParent", span="", file="TypeNameHandlingTests.cs"];
m26_681 [label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", span="", file="TypeNameHandlingTests.cs"];
m26_682 [label="Newtonsoft.Json.Tests.Serialization.Example", span="", file="TypeNameHandlingTests.cs"];
m26_683 [label="Newtonsoft.Json.Tests.Serialization.GroupingInfo", span="", file="TypeNameHandlingTests.cs"];
m27_111 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="XmlNodeConverterTest.cs"];
m27_356 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="907-907", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_357 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="909-923", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_358 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="925-925", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_361 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="944-944", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_359 [label="string xml = IndentXml(newDoc.InnerXml)", span="927-927", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_360 [label="Assert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="929-941", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_363 [label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented)", span="961-961", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_362 [label="Assert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="946-958", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_364 [label="Console.WriteLine(newJson)", span="962-962", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_365 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="907-907", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m27_529 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="XmlNodeConverterTest.cs"];
m27_255 [label="Entry Unk.GetIndentedInnerXml", span="", cluster="Unk.GetIndentedInnerXml", file="XmlNodeConverterTest.cs"];
m27_528 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="1583-1583", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_531 [label="Newtonsoft.Json.JsonSerializerSettings settings = new Newtonsoft.Json.JsonSerializerSettings()", span="1585-1585", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_534 [label="Newtonsoft.Json.JsonTextReader reader = new Newtonsoft.Json.JsonTextReader(new System.IO.StreamReader(json))", span="1588-1588", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_538 [label="XmlWriter writer = XmlWriter.Create(xml)", span="1593-1593", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_532 [label="settings.Converters.Add(new Newtonsoft.Json.Converters.XmlNodeConverter())", span="1586-1586", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_533 [label="Newtonsoft.Json.JsonSerializer serializer = Newtonsoft.Json.JsonSerializer.Create(settings)", span="1587-1587", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_535 [label="XmlDocument doc = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="1590-1590", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_536 [label="reader.Read() && reader.TokenType != JsonToken.Comment", span="1591-1591", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_539 [label="doc.Save(writer)", span="1595-1595", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_537 [label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="1592-1592", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_540 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="1583-1583", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_220 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="XmlNodeConverterTest.cs"];
m27_355 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1090-1090", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_47 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs"];
m27_82 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="XmlNodeConverterTest.cs"];
m27_458 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="XmlNodeConverterTest.cs"];
m27_460 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1394-1394", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_461 [label="TestComplexArrayClass o = new TestComplexArrayClass\r\n            {\r\n                Name = ''Hi'',\r\n                Products = new List<Product>\r\n                {\r\n                    new Product { Name = ''First'' }\r\n                }\r\n            }", span="1396-1403", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_462 [label="string output = JsonConvert.SerializeObject(o, new IsoDateTimeConverter())", span="1405-1405", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_463 [label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''test'', true)", span="1407-1407", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_464 [label="Assert.AreEqual(@''<test>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>'', IndentXml(xmlProduct.InnerXml))", span="1409-1417", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_465 [label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented, true)", span="1419-1419", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_466 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Hi'''',\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output2)", span="1421-1431", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_467 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1394-1394", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_468 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.TestComplexArrayClass.TestComplexArrayClass()", span="1387-1387", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.TestComplexArrayClass.TestComplexArrayClass()", file="XmlNodeConverterTest.cs"];
m27_112 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="XmlNodeConverterTest.cs"];
m27_515 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="475-475", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs"];
m27_83 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="XmlNodeConverterTest.cs"];
m27_123 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="XmlNodeConverterTest.cs"];
m27_67 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="XmlNodeConverterTest.cs"];
m27_530 [label="Entry System.Text.Encoding.GetString(byte[])", span="0-0", cluster="System.Text.Encoding.GetString(byte[])", file="XmlNodeConverterTest.cs"];
m27_412 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="XmlNodeConverterTest.cs"];
m27_124 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="238-238", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_125 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n    <abbr class=''''dtstart'''' title=''''2005-10-05''''>October 5</abbr>\r\n    <abbr class=''''dtend'''' title=''''2005-10-08''''>7</abbr>\r\n    <span class=''''location''''>Argent Hotel, San Francisco, CA</span>\r\n  </a>\r\n</span>''", span="240-249", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_126 [label="XmlDocument doc = new XmlDocument()", span="250-250", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_127 [label="doc.LoadXml(xml)", span="251-251", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_128 [label="string jsonText = SerializeXmlNode(doc)", span="253-253", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_129 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': [\r\n        {\r\n          ''''@class'''': ''''summary'''',\r\n          ''''#text'''': ''''Web 2.0 Conference'''',\r\n          ''''#cdata-section'''': ''''my escaped text''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''location'''',\r\n          ''''#text'''': ''''Argent Hotel, San Francisco, CA''''\r\n        }\r\n      ],\r\n      ''''abbr'''': [\r\n        {\r\n          ''''@class'''': ''''dtstart'''',\r\n          ''''@title'''': ''''2005-10-05'''',\r\n          ''''#text'''': ''''October 5''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''dtend'''',\r\n          ''''@title'''': ''''2005-10-08'''',\r\n          ''''#text'''': ''''7''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="254-290", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_130 [label="Assert.AreEqual(expected, jsonText)", span="292-292", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_132 [label="Console.WriteLine(jsonText)", span="295-295", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_131 [label="Console.WriteLine(''DocumentSerializeIndented'')", span="294-294", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_133 [label="Console.WriteLine()", span="296-296", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_134 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="238-238", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m27_456 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="XmlNodeConverterTest.cs"];
m27_544 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="1602-1602", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_545 [label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="1604-1635", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_546 [label="string json = JsonConvert.SerializeXNode(XDocument.Parse(xaml), Formatting.Indented)", span="1637-1637", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_547 [label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="1639-1794", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_548 [label="Assert.AreEqual(expectedJson, json)", span="1796-1796", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_549 [label="XNode node = JsonConvert.DeserializeXNode(json)", span="1798-1798", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_550 [label="string xaml2 = node.ToString()", span="1800-1800", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_551 [label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="1802-1833", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_552 [label="Assert.AreEqual(expectedXaml, xaml2)", span="1835-1835", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_553 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="1602-1602", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_518 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m27_519 [label="MemoryStream ms = new MemoryStream(System.Text.Encoding.UTF8.GetBytes(@''{root:{''''@booleanType'''':true}}''))", span="1573-1573", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m27_520 [label="MemoryStream xml = new MemoryStream()", span="1574-1574", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m27_521 [label="JsonBodyToSoapXml(ms, xml)", span="1576-1576", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m27_522 [label="string xmlString = System.Text.Encoding.UTF8.GetString(xml.ToArray())", span="1578-1578", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m27_523 [label="Assert.AreEqual(@''﻿<?xml version=''''1.0'''' encoding=''''utf-8''''?><root booleanType=''''true'''' />'', xmlString)", span="1580-1580", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m27_524 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m27_210 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="1001-1001", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m27_114 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", span="219-219", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m27_115 [label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'/>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="221-225", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m27_116 [label="var xml = XElement.Parse(xmlString)", span="227-227", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m27_117 [label="var json1 = JsonConvert.SerializeXNode(xml)", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m27_119 [label="var equals = XElement.DeepEquals(xmlBack, xml)", span="232-232", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m27_118 [label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="230-230", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m27_120 [label="Assert.IsTrue(equals)", span="233-233", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m27_121 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", span="219-219", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m27_595 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2147-2147", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_596 [label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2149-2153", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_597 [label="var xml = XElement.Parse(xmlString)", span="2155-2155", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_598 [label="var json1 = JsonConvert.SerializeXNode(xml)", span="2157-2157", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_600 [label="var equals = XElement.DeepEquals(xmlBack, xml)", span="2160-2160", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_599 [label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="2158-2158", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_601 [label="Assert.IsTrue(equals)", span="2161-2161", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_602 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2147-2147", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_180 [label="Entry Unk.CreateAttribute", span="", cluster="Unk.CreateAttribute", file="XmlNodeConverterTest.cs"];
m27_92 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="XmlNodeConverterTest.cs"];
m27_392 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1069-1069", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_393 [label="string xml = @''<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>Text</a><!-- Hi! -->\r\n</span>''", span="1071-1073", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_394 [label="XmlDocument doc = new XmlDocument()", span="1074-1074", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_395 [label="doc.LoadXml(xml)", span="1075-1075", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_396 [label="string jsonText = SerializeXmlNode(doc)", span="1077-1077", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_397 [label="string expected = @''{\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''#text'''': ''''Text''''\r\n    }/* Hi! */\r\n  }\r\n}''", span="1079-1088", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_398 [label="Assert.AreEqual(expected, jsonText)", span="1090-1090", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_399 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1092-1092", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_400 [label="Assert.AreEqual(@''<span class=''''vevent''''><a class=''''url'''' href=''''http://www.web2con.com/''''>Text</a><!-- Hi! --></span>'', newDoc.InnerXml)", span="1093-1093", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_401 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1069-1069", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m27_223 [label="Entry Unk.Save", span="", cluster="Unk.Save", file="XmlNodeConverterTest.cs"];
m27_266 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="XmlNodeConverterTest.cs"];
m27_265 [label="Entry Unk.WriteTo", span="", cluster="Unk.WriteTo", file="XmlNodeConverterTest.cs"];
m27_181 [label="Entry Unk.SetAttributeNode", span="", cluster="Unk.SetAttributeNode", file="XmlNodeConverterTest.cs"];
m27_489 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1487-1487", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_490 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n<A>\r\n<B name=''''sample'''' json:Array=''''true''''/>\r\n<C></C>\r\n<C></C>\r\n</A>\r\n</root>''", span="1489-1496", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_491 [label="XmlDocument d = new XmlDocument()", span="1498-1498", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_492 [label="d.LoadXml(xml)", span="1499-1499", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_493 [label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1501-1501", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_494 [label="Assert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''root'''': {\r\n    ''''A'''': {\r\n      ''''B'''': [\r\n        {\r\n          ''''@name'''': ''''sample''''\r\n        }\r\n      ],\r\n      ''''C'''': [\r\n        '''''''',\r\n        ''''''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="1503-1521", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_495 [label="XmlDocument d2 = JsonConvert.DeserializeXmlNode(json)", span="1523-1523", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_496 [label="Assert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-8''''?>\r\n<root>\r\n  <A>\r\n    <B name=''''sample'''' />\r\n    <C></C>\r\n    <C></C>\r\n  </A>\r\n</root>'', ToStringWithDeclaration(d2, true))", span="1525-1532", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_497 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1487-1487", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m27_517 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverterTest.cs"];
m27_122 [label="Entry Unk.DeepEquals", span="", cluster="Unk.DeepEquals", file="XmlNodeConverterTest.cs"];
m27_65 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="XmlNodeConverterTest.cs"];
m27_113 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="XmlNodeConverterTest.cs"];
m27_297 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="753-753", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m27_298 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'',\r\n                () => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}''); })", span="755-757", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m27_299 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="753-753", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m27_94 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1079-1079", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="XmlNodeConverterTest.cs"];
m27_175 [label="Entry Unk.Element", span="", cluster="Unk.Element", file="XmlNodeConverterTest.cs"];
m27_479 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="XmlNodeConverterTest.cs"];
m27_275 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="706-706", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_276 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url />\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="708-718", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_277 [label="XmlDocument doc = new XmlDocument()", span="720-720", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_278 [label="doc.LoadXml(xml)", span="721-721", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_279 [label="string jsonText = SerializeXmlNode(doc)", span="723-723", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_282 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="729-729", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_280 [label="Console.WriteLine(jsonText)", span="725-725", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_281 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="727-727", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_283 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="706-706", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m27_213 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", span="509-509", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs"];
m27_214 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", span="509-509", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs"];
m27_63 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DecimalContainer.DecimalContainer()", span="118-118", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DecimalContainer.DecimalContainer()", file="XmlNodeConverterTest.cs"];
m27_22 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1055-1055", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs"];
m27_435 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverterTest.cs"];
m27_24 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="83-83", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m27_25 [label="return DeserializeXmlNode(json, null);", span="85-85", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m27_26 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="83-83", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m27_195 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="406-406", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_196 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8''''?><!DOCTYPE STOCKQUOTE PUBLIC ''''-//W3C//DTD StockQuote 1.5//EN'''' ''''http://www.irxml.org/dtd/stockquote_1.5.dtd''''><STOCKQUOTE ROWCOUNT=''''2''''><RESULT><ROW><ASK>0</ASK><BID>0</BID><CHANGE>-16.310</CHANGE><COMPANYNAME>Dow Jones</COMPANYNAME><DATETIME>2014-04-17 15:50:37</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>16460.490</HIGH><LASTDATETIME>2014-04-17 15:50:37</LASTDATETIME><LASTPRICE>16408.540</LASTPRICE><LOW>16368.140</LOW><OPEN>16424.140</OPEN><PCHANGE>-0.099</PCHANGE><PE>0</PE><PREVIOUSCLOSE>16424.850</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>DJII</TICKER><TRADES>0</TRADES><VOLUME>136188700</VOLUME><YEARHIGH>11309.000</YEARHIGH><YEARLOW>9302.280</YEARLOW><YIELD>0</YIELD></ROW><ROW><ASK>0</ASK><BID>0</BID><CHANGE>9.290</CHANGE><COMPANYNAME>NASDAQ</COMPANYNAME><DATETIME>2014-04-17 15:40:01</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>4110.460</HIGH><LASTDATETIME>2014-04-17 15:40:01</LASTDATETIME><LASTPRICE>4095.520</LASTPRICE><LOW>4064.700</LOW><OPEN>4080.300</OPEN><PCHANGE>0.227</PCHANGE><PE>0</PE><PREVIOUSCLOSE>4086.230</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>COMP</TICKER><TRADES>0</TRADES><VOLUME>1784210100</VOLUME><YEARHIGH>4371.710</YEARHIGH><YEARLOW>3154.960</YEARLOW><YIELD>0</YIELD></ROW></RESULT><STATUS>Couldn't find ticker: SPIC?</STATUS><STATUSCODE>2</STATUSCODE></STOCKQUOTE>''", span="408-408", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_197 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''!DOCTYPE'''': {\r\n    ''''@name'''': ''''STOCKQUOTE'''',\r\n    ''''@public'''': ''''-//W3C//DTD StockQuote 1.5//EN'''',\r\n    ''''@system'''': ''''http://www.irxml.org/dtd/stockquote_1.5.dtd''''\r\n  },\r\n  ''''STOCKQUOTE'''': {\r\n    ''''@ROWCOUNT'''': ''''2'''',\r\n    ''''RESULT'''': {\r\n      ''''ROW'''': [\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''-16.310'''',\r\n          ''''COMPANYNAME'''': ''''Dow Jones'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''16460.490'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''LASTPRICE'''': ''''16408.540'''',\r\n          ''''LOW'''': ''''16368.140'''',\r\n          ''''OPEN'''': ''''16424.140'''',\r\n          ''''PCHANGE'''': ''''-0.099'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''16424.850'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''DJII'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''136188700'''',\r\n          ''''YEARHIGH'''': ''''11309.000'''',\r\n          ''''YEARLOW'''': ''''9302.280'''',\r\n          ''''YIELD'''': ''''0''''\r\n        },\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''9.290'''',\r\n          ''''COMPANYNAME'''': ''''NASDAQ'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''4110.460'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''LASTPRICE'''': ''''4095.520'''',\r\n          ''''LOW'''': ''''4064.700'''',\r\n          ''''OPEN'''': ''''4080.300'''',\r\n          ''''PCHANGE'''': ''''0.227'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''4086.230'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''COMP'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''1784210100'''',\r\n          ''''YEARHIGH'''': ''''4371.710'''',\r\n          ''''YEARLOW'''': ''''3154.960'''',\r\n          ''''YIELD'''': ''''0''''\r\n        }\r\n      ]\r\n    },\r\n    ''''STATUS'''': ''''Couldn't find ticker: SPIC?'''',\r\n    ''''STATUSCODE'''': ''''2''''\r\n  }\r\n}''", span="410-479", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_199 [label="doc1.LoadXml(xml)", span="482-482", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_203 [label="Assert.AreEqual(xml, ToStringWithDeclaration(doc11))", span="490-490", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_204 [label="XDocument doc2 = XDocument.Parse(xml)", span="493-493", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_208 [label="Assert.AreEqual(xml, ToStringWithDeclaration(doc22))", span="501-501", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_198 [label="XmlDocument doc1 = new XmlDocument()", span="481-481", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_201 [label="Assert.AreEqual(expected, json1)", span="486-486", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_206 [label="Assert.AreEqual(expected, json2)", span="497-497", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_200 [label="string json1 = JsonConvert.SerializeXmlNode(doc1, Formatting.Indented)", span="484-484", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_202 [label="XmlDocument doc11 = JsonConvert.DeserializeXmlNode(json1)", span="488-488", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_205 [label="string json2 = JsonConvert.SerializeXNode(doc2, Formatting.Indented)", span="495-495", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_207 [label="XDocument doc22 = JsonConvert.DeserializeXNode(json2)", span="499-499", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_209 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="406-406", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m27_256 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="665-665", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_257 [label="XmlWriterSettings settings = new XmlWriterSettings()", span="667-667", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_261 [label="node.WriteTo(writer)", span="674-674", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_258 [label="settings.Indent = true", span="668-668", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_259 [label="StringWriter sw = new StringWriter()", span="670-670", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_260 [label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="672-672", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_262 [label="return sw.ToString();", span="677-677", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_263 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="665-665", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_16 [label="Entry XmlNodeReader.cstr", span="", cluster="XmlNodeReader.cstr", file="XmlNodeConverterTest.cs"];
m27_543 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="XmlNodeConverterTest.cs"];
m27_211 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", span="526-526", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_225 [label="StringBuilder builder = new StringBuilder()", span="528-528", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_226 [label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="529-529", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_227 [label="doc.Save(writer)", span="531-531", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_228 [label="return builder.ToString();", span="533-533", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_229 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", span="526-526", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_386 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1056-1056", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m27_387 [label="XmlDocument doc = new XmlDocument()", span="1058-1058", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m27_388 [label="doc.LoadXml(@''<name>O''''Connor</name>'')", span="1060-1060", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m27_389 [label="string json = SerializeXmlNode(doc)", span="1062-1062", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m27_390 [label="Assert.AreEqual(@''{\r\n  ''''name'''': ''''O\''''Connor''''\r\n}'', json)", span="1063-1065", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m27_391 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1056-1056", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m27_527 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="XmlNodeConverterTest.cs"];
m27_444 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1353-1353", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_445 [label="Product product = new Product()", span="1355-1355", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_446 [label="product.Name = ''Apple''", span="1357-1357", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_447 [label="product.ExpiryDate = new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc)", span="1358-1358", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_448 [label="product.Price = 3.99M", span="1359-1359", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_449 [label="product.Sizes = new string[] { ''Small'' }", span="1360-1360", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_450 [label="string output = JsonConvert.SerializeObject(product, new IsoDateTimeConverter())", span="1362-1362", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_451 [label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''product'', true)", span="1364-1364", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_452 [label="Assert.AreEqual(@''<product>\r\n  <Name>Apple</Name>\r\n  <ExpiryDate>2008-12-28T00:00:00Z</ExpiryDate>\r\n  <Price>3.99</Price>\r\n  <Sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>Small</Sizes>\r\n</product>'', IndentXml(xmlProduct.InnerXml))", span="1366-1371", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_453 [label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented)", span="1373-1373", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_454 [label="Assert.AreEqual(@''{\r\n  ''''product'''': {\r\n    ''''Name'''': ''''Apple'''',\r\n    ''''ExpiryDate'''': ''''2008-12-28T00:00:00Z'''',\r\n    ''''Price'''': ''''3.99'''',\r\n    ''''Sizes'''': [\r\n      ''''Small''''\r\n    ]\r\n  }\r\n}'', output2)", span="1375-1384", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_455 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1353-1353", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m27_48 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="848-848", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="XmlNodeConverterTest.cs"];
m27_182 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild", file="XmlNodeConverterTest.cs"];
m27_20 [label="Entry Unk.MoveToContent", span="", cluster="Unk.MoveToContent", file="XmlNodeConverterTest.cs"];
m27_267 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="681-681", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m27_268 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n	  			<name>Alan</name>\r\n		  		<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n			  	<name>Louis</name>\r\n				  <url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="683-693", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m27_269 [label="XmlDocument doc = new XmlDocument()", span="695-695", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m27_270 [label="doc.LoadXml(xml)", span="696-696", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m27_271 [label="string jsonText = SerializeXmlNode(doc)", span="698-698", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m27_273 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="702-702", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m27_272 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="700-700", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m27_274 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="681-681", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m27_312 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="787-787", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_313 [label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="789-795", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_314 [label="XmlDocument arrayDoc = new XmlDocument()", span="797-797", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_315 [label="arrayDoc.LoadXml(arrayXml)", span="798-798", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_316 [label="string arrayJsonText = SerializeXmlNode(arrayDoc)", span="800-800", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_317 [label="string expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="801-812", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_318 [label="Assert.AreEqual(expected, arrayJsonText)", span="813-813", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_319 [label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="815-822", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_320 [label="arrayDoc = new XmlDocument()", span="824-824", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_321 [label="arrayDoc.LoadXml(arrayXml)", span="825-825", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_322 [label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="827-827", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_323 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="828-840", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_324 [label="Assert.AreEqual(expected, arrayJsonText)", span="841-841", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_325 [label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="843-849", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_326 [label="arrayDoc = new XmlDocument()", span="851-851", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_327 [label="arrayDoc.LoadXml(arrayXml)", span="852-852", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_328 [label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="854-854", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_329 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': ''''Admin1''''\r\n    }\r\n  }\r\n}''", span="855-864", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_330 [label="Assert.AreEqual(expected, arrayJsonText)", span="865-865", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_331 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="787-787", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m27_45 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="XmlNodeConverterTest.cs"];
m27_367 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="966-966", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_368 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="968-982", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_369 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'', true)", span="984-984", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_371 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'', true)", span="1001-1001", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_375 [label="Assert.AreEqual(json, newJson)", span="1021-1021", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_370 [label="Assert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="986-998", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_374 [label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented, true)", span="1020-1020", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_372 [label="Console.WriteLine(IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1003-1003", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_373 [label="Assert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1005-1017", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_376 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="966-966", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m27_66 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs"];
m27_437 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs"];
m27_438 [label="string json = @''{\r\n  ''''8452309520V2'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Exp. Date 1''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Issue Date 1''''\r\n        }\r\n      }\r\n    },\r\n    ''''457463534534'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS0'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}{\r\n  ''''34534634535345'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_NUMBER_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''S'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''WALK_IN'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Walk in''''\r\n        },\r\n        ''''PERSONAL_MEETING'''': {\r\n          ''''VALUE'''': ''''PM1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Met Client in Person''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''PHOTO_ID'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_TYPE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        }\r\n      }\r\n    },\r\n    ''''45635624523'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1268-1345", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs"];
m27_439 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''XmlNodeConverter cannot convert JSON with an empty property name to XML.'',\r\n                () => { DeserializeXmlNode(json); })", span="1347-1349", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs"];
m27_440 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs"];
m27_402 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1097-1097", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_403 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="1099-1109", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_404 [label="XmlDocument doc = new XmlDocument()", span="1111-1111", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_405 [label="doc.LoadXml(xml)", span="1112-1112", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_406 [label="string jsonText = SerializeXmlNode(doc)", span="1114-1114", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_410 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1162-1162", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_407 [label="jsonText = JObject.Parse(jsonText).ToString()", span="1137-1137", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_408 [label="Assert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="1139-1158", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_409 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1160-1160", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_411 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1097-1097", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m27_554 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="1840-1840", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_555 [label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="1842-1873", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_556 [label="XmlDocument document = new XmlDocument()", span="1875-1875", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_557 [label="document.LoadXml(xaml)", span="1876-1876", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_558 [label="string json = JsonConvert.SerializeXmlNode(document, Formatting.Indented)", span="1878-1878", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_559 [label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="1880-2035", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_560 [label="Assert.AreEqual(expectedJson, json)", span="2037-2037", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_561 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json)", span="2039-2039", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_562 [label="StringWriter sw = new StringWriter()", span="2041-2041", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_564 [label="node.WriteTo(writer)", span="2047-2047", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_563 [label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings\r\n            {\r\n                Indent = true,\r\n                OmitXmlDeclaration = true\r\n            })", span="2042-2046", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_566 [label="string xaml2 = sw.ToString()", span="2050-2050", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_565 [label="writer.Flush()", span="2048-2048", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_567 [label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2052-2083", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_568 [label="Assert.AreEqual(expectedXaml, xaml2)", span="2085-2085", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_569 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="1840-1840", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m27_414 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="1166-1166", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m27_415 [label="string json = @''{\r\n        ''''?xml'''': {\r\n          ''''@version'''': ''''1.0'''',\r\n          ''''@standalone'''': ''''no''''\r\n        },\r\n        ''''root'''': {\r\n          ''''person'''': [\r\n            {\r\n              ''''@id'''': ''''1'''',\r\n              ''''name'''': ''''Alan'''',\r\n              ''''url'''': ''''http://www.google.com''''\r\n            },\r\n            {\r\n              ''''@id'''': ''''2'''',\r\n              ''''name'''': ''''Louis'''',\r\n              ''''url'''': ''''http://www.yahoo.com''''\r\n            }\r\n          ]\r\n        }\r\n      }''", span="1168-1187", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m27_416 [label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="1189-1189", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m27_417 [label="Assert.AreEqual(@''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<root>\r\n<person id=''''1''''>\r\n<name>Alan</name>\r\n<url>http://www.google.com</url>\r\n</person>\r\n<person id=''''2''''>\r\n<name>Louis</name>\r\n<url>http://www.yahoo.com</url>\r\n</person>\r\n</root>''.Replace(Environment.NewLine, string.Empty), doc.InnerXml)", span="1202-1212", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m27_418 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="1166-1166", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m27_378 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1106-1106", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="XmlNodeConverterTest.cs"];
m27_593 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", span="2125-2125", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", file="XmlNodeConverterTest.cs"];
m27_137 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="300-300", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_138 [label="XmlDocument doc = new XmlDocument()", span="302-302", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_139 [label="string jsonText", span="303-303", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_153 [label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="338-338", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_157 [label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="347-347", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_161 [label="XmlElement element = doc.CreateElement(''xs'', ''Choice'', ''http://www.w3.org/2001/XMLSchema'')", span="356-356", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_162 [label="element.SetAttributeNode(doc.CreateAttribute(''msdata'', ''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata''))", span="357-357", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_163 [label="XmlAttribute aa = doc.CreateAttribute(@''xmlns'', ''xs'', ''http://www.w3.org/2000/xmlns/'')", span="359-359", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_166 [label="aa = doc.CreateAttribute(@''xmlns'', ''msdata'', ''http://www.w3.org/2000/xmlns/'')", span="363-363", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_171 [label="doc.AppendChild(element)", span="370-370", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_140 [label="Console.WriteLine(''SerializeNodeTypes'')", span="305-305", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_141 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n	</xs:element>\r\n</xs:schema>''", span="307-314", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_142 [label="XmlDocument document = new XmlDocument()", span="316-316", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_143 [label="document.LoadXml(xml)", span="317-317", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_149 [label="XDocument d = XDocument.Parse(xml)", span="329-329", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_144 [label="XmlAttribute attribute = document.DocumentElement.ChildNodes[0].Attributes[''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata'']", span="320-320", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_145 [label="attribute.Value = ''true''", span="321-321", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_146 [label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="323-323", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_147 [label="Console.WriteLine(jsonText)", span="325-325", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_148 [label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="326-326", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_150 [label="XAttribute a = d.Root.Element(''{http://www.w3.org/2001/XMLSchema}element'').Attribute(''{urn:schemas-microsoft-com:xml-msdata}IsDataSet'')", span="330-330", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_151 [label="jsonText = JsonConvert.SerializeXNode(a)", span="332-332", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_152 [label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="334-334", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_154 [label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="340-340", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_169 [label="element.AppendChild(instruction)", span="367-367", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_155 [label="Console.WriteLine(jsonText)", span="342-342", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_156 [label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="343-343", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_158 [label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="349-349", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_170 [label="element.AppendChild(cDataSection)", span="368-368", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_159 [label="Console.WriteLine(jsonText)", span="351-351", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_160 [label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="352-352", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_165 [label="element.SetAttributeNode(aa)", span="361-361", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_168 [label="element.SetAttributeNode(aa)", span="365-365", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_172 [label="jsonText = JsonConvert.SerializeXmlNode(element, Formatting.Indented)", span="372-372", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_164 [label="aa.Value = ''http://www.w3.org/2001/XMLSchema''", span="360-360", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_167 [label="aa.Value = ''urn:schemas-microsoft-com:xml-msdata''", span="364-364", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_173 [label="Assert.AreEqual(@''{\r\n  ''''xs:Choice'''': {\r\n    ''''@msdata:IsDataSet'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', jsonText)", span="374-382", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_174 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="300-300", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m27_69 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_70 [label="DateTimeOffset d = new DateTimeOffset(2012, 12, 12, 12, 44, 1, TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(34)))", span="155-155", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_71 [label="var x = new DateTimeOffsetContainer { Date = d }", span="156-156", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_72 [label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="158-158", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_78 [label="Assert.AreEqual(x.Date, x2.Date)", span="173-173", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_73 [label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="160-164", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_74 [label="var xml = doc1.ToString()", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_76 [label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="169-169", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_75 [label="Assert.AreEqual(''<Date>2012-12-12T12:44:01+12:34</Date>'', xml)", span="167-167", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_77 [label="DateTimeOffsetContainer x2 = JsonConvert.DeserializeObject<DateTimeOffsetContainer>(json2)", span="171-171", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_79 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m27_15 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="975-975", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs"];
m27_21 [label="Entry Unk.ReadFrom", span="", cluster="Unk.ReadFrom", file="XmlNodeConverterTest.cs"];
m27_293 [label="Entry Unk.>", span="", cluster="Unk.>", file="XmlNodeConverterTest.cs"];
m27_284 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="733-733", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m27_285 [label="string jsonText = @''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''Float'''':2.5,''''Integer'''':99},{''''Boolean'''':true,''''@id'''':''''2'''',''''date'''':''''\/Date(954374400000)\/''''}]}}''", span="735-735", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m27_286 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="737-737", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m27_287 [label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><Float>2.5</Float><Integer>99</Integer></person><person id=''''2''''><Boolean>true</Boolean><date>2000-03-30T00:00:00Z</date></person></root>''", span="739-739", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m27_288 [label="Assert.AreEqual(expected, newDoc.InnerXml)", span="741-741", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m27_289 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="733-733", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m27_340 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="880-880", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs"];
m27_341 [label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="882-882", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs"];
m27_342 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'',\r\n                () => { JsonConvert.DeserializeXNode(json); })", span="884-886", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs"];
m27_343 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="880-880", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs"];
m27_436 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs"];
m27_290 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="745-745", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m27_291 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''XmlNodeConverter can only convert JSON that begins with an object.'',\r\n                () => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]''); })", span="747-749", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m27_292 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="745-745", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m27_575 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2099-2099", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_576 [label="var xmlString = @''<root xmlns=''''http://www.example.com/ns''''>\r\n  <a/>\r\n  <bns:b xmlns:bns=''''http://www.example.com/ns''''/>\r\n  <c/>\r\n</root>''", span="2101-2105", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_577 [label="var xml = XElement.Parse(xmlString)", span="2108-2108", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_581 [label="xml1.LoadXml(xmlString)", span="2116-2116", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_578 [label="var json1 = JsonConvert.SerializeObject(xml)", span="2110-2110", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_579 [label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json1)", span="2112-2112", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_580 [label="var xml1 = new XmlDocument()", span="2115-2115", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_582 [label="var json2 = JsonConvert.SerializeObject(xml1)", span="2118-2118", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_583 [label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json2)", span="2120-2120", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_584 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2099-2099", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m27_17 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="XmlNodeConverterTest.cs"];
m27_413 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="402-402", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="XmlNodeConverterTest.cs"];
m27_50 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1214-1214", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverterTest.cs"];
m27_49 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs"];
m27_516 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1641-1641", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="XmlNodeConverterTest.cs"];
m27_514 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="343-343", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="XmlNodeConverterTest.cs"];
m27_347 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="891-891", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m27_348 [label="string json = @''{''''count'''': 773840,''''photos'''': 773840}''", span="893-893", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m27_349 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="895-895", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m27_351 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="900-900", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m27_350 [label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newDoc.InnerXml)", span="897-897", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m27_352 [label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="902-902", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m27_353 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="891-891", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m27_135 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="XmlNodeConverterTest.cs"];
m27_221 [label="Entry XmlWriterSettings.cstr", span="", cluster="XmlWriterSettings.cstr", file="XmlNodeConverterTest.cs"];
m27_513 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverterTest.cs"];
m27_23 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="XmlNodeConverterTest.cs"];
m27_95 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="193-193", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_96 [label="XmlDocument doc = new XmlDocument()", span="195-195", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_97 [label="doc.LoadXml(''<root />'')", span="196-196", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_98 [label="string json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_99 [label="Assert.AreEqual(''null'', json)", span="199-199", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_100 [label="doc = new XmlDocument()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_101 [label="doc.LoadXml(''<root></root>'')", span="202-202", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_102 [label="json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="204-204", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_103 [label="Assert.AreEqual(@'''''''''''', json)", span="205-205", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_104 [label="XDocument doc1 = XDocument.Parse(''<root />'')", span="207-207", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_105 [label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="209-209", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_106 [label="Assert.AreEqual(''null'', json)", span="210-210", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_107 [label="doc1 = XDocument.Parse(''<root></root>'')", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_108 [label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="214-214", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_109 [label="Assert.AreEqual(@'''''''''''', json)", span="215-215", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_110 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="193-193", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m27_51 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="XmlNodeConverterTest.cs"];
m27_377 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1028-1028", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="XmlNodeConverterTest.cs"];
m27_18 [label="Entry XAttribute.cstr", span="", cluster="XAttribute.cstr", file="XmlNodeConverterTest.cs"];
m27_541 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="XmlNodeConverterTest.cs"];
m27_585 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2133-2133", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m27_586 [label="var xml = new NullableXml { Name = ''test'', notNull = XElement.Parse(''<root>test</root>'') }", span="2135-2135", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m27_587 [label="var json = JsonConvert.SerializeObject(xml)", span="2136-2136", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m27_589 [label="Assert.AreEqual(xml.Name, w2.Name)", span="2139-2139", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m27_590 [label="Assert.AreEqual(xml.isNull, w2.isNull)", span="2140-2140", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m27_591 [label="Assert.AreEqual(xml.notNull.ToString(), w2.notNull.ToString())", span="2141-2141", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m27_588 [label="var w2 = JsonConvert.DeserializeObject<NullableXml>(json)", span="2138-2138", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m27_592 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2133-2133", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m27_244 [label="Entry Unk.WriteLine", span="", cluster="Unk.WriteLine", file="XmlNodeConverterTest.cs"];
m27_222 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="XmlNodeConverterTest.cs"];
m27_0 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="53-53", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_1 [label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="55-55", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_2 [label="XmlNodeReader reader = new XmlNodeReader(node)", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_4 [label="node is XmlDocument", span="60-60", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_6 [label="node is XmlAttribute", span="64-64", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_7 [label="XmlAttribute attribute = (XmlAttribute)node", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_12 [label="Assert.AreEqual(json, linqJson)", span="77-77", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_13 [label="return json;", span="80-80", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_3 [label="XObject xNode", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_5 [label="xNode = XDocument.Load(reader)", span="62-62", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_9 [label="reader.MoveToContent()", span="71-71", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_10 [label="xNode = XNode.ReadFrom(reader)", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_8 [label="xNode = new XAttribute(XName.Get(attribute.LocalName, attribute.NamespaceURI), attribute.Value)", span="67-67", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_11 [label="string linqJson = JsonConvert.SerializeXNode(xNode, Formatting.Indented)", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_14 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="53-53", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m27_366 [label="Entry Unk.IndentXml", span="", cluster="Unk.IndentXml", file="XmlNodeConverterTest.cs"];
m27_80 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlNodeConverterTest.cs"];
m27_354 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1012-1012", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_441 [label="Entry lambda expression", span="1349-1349", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_294 [label="Entry lambda expression", span="749-749", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_295 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]'')", span="749-749", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_296 [label="Exit lambda expression", span="749-749", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_300 [label="Entry lambda expression", span="757-757", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_301 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}'')", span="757-757", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_302 [label="Exit lambda expression", span="757-757", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_338 [label="JsonConvert.DeserializeXmlNode(json)", span="875-875", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_337 [label="Entry lambda expression", span="875-875", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_339 [label="Exit lambda expression", span="875-875", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_345 [label="JsonConvert.DeserializeXNode(json)", span="886-886", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_344 [label="Entry lambda expression", span="886-886", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_346 [label="Exit lambda expression", span="886-886", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_442 [label="DeserializeXmlNode(json)", span="1349-1349", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_443 [label="Exit lambda expression", span="1349-1349", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m27_505 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1557-1557", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m27_506 [label="var dict = new Dictionary<string, object> { { ''Int16'', (short)1 }, { ''Float'', 2f }, { ''Int32'', 3 } }", span="1559-1559", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m27_507 [label="var obj = JObject.FromObject(dict)", span="1560-1560", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m27_508 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings { Converters = { new XmlNodeConverter() { DeserializeRootElementName = ''root'' } } })", span="1561-1561", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m27_509 [label="var reader = obj.CreateReader()", span="1562-1562", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m27_510 [label="var value = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="1564-1564", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m27_511 [label="Assert.AreEqual(@''<root><Int16>1</Int16><Float>2</Float><Int32>3</Int32></root>'', value.InnerXml)", span="1566-1566", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m27_512 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1557-1557", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m27_570 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2089-2089", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m27_571 [label="string json = @''{''''item'''': {''''@action'''': ''''update'''', ''''@itemid'''': ''''1'''', ''''elements'''': [{''''@action'''': ''''none'''', ''''@id'''': ''''2''''},{''''@action'''': ''''none'''', ''''@id'''': ''''3''''}],''''@description'''': ''''temp''''}}''", span="2091-2091", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m27_572 [label="XmlDocument xmldoc = JsonConvert.DeserializeXmlNode(json)", span="2093-2093", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m27_573 [label="Assert.AreEqual(@''<item action=''''update'''' itemid=''''1'''' description=''''temp''''><elements action=''''none'''' id=''''2'''' /><elements action=''''none'''' id=''''3'''' /></item>'', xmldoc.InnerXml)", span="2095-2095", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m27_574 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2089-2089", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m27_27 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="88-88", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_28 [label="JsonTextReader reader", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_29 [label="reader = new JsonTextReader(new StringReader(json))", span="92-92", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_32 [label="deserializeRootElementName != null", span="95-95", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_33 [label="converter.DeserializeRootElementName = deserializeRootElementName", span="96-96", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_36 [label="reader = new JsonTextReader(new StringReader(json))", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_30 [label="reader.Read()", span="93-93", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_34 [label="XmlNode node = (XmlNode)converter.ReadJson(reader, typeof(XmlDocument), null, new JsonSerializer())", span="98-98", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_31 [label="XmlNodeConverter converter = new XmlNodeConverter()", span="94-94", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_38 [label="XDocument d = (XDocument)converter.ReadJson(reader, typeof(XDocument), null, new JsonSerializer())", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_35 [label="string xmlText = node.OuterXml", span="101-101", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_43 [label="return node;", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_42 [label="Assert.AreEqual(xmlText, linqXmlText)", span="111-111", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_37 [label="reader.Read()", span="104-104", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_39 [label="string linqXmlText = d.ToString(SaveOptions.DisableFormatting)", span="107-107", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_40 [label="d.Declaration != null", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_41 [label="linqXmlText = d.Declaration + linqXmlText", span="109-109", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_44 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="88-88", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m27_136 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="XmlNodeConverterTest.cs"];
m27_179 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement", file="XmlNodeConverterTest.cs"];
m27_434 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="XmlNodeConverterTest.cs"];
m27_480 [label="Entry Unk.WriteNode", span="", cluster="Unk.WriteNode", file="XmlNodeConverterTest.cs"];
m27_46 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="XmlNodeConverterTest.cs"];
m27_379 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1025-1025", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m27_380 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1027-1042", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m27_381 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1044-1044", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m27_383 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1049-1049", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m27_382 [label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="1046-1046", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m27_384 [label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1051-1051", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m27_385 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1025-1025", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m27_303 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="761-761", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_304 [label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="763-763", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_305 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="765-765", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_306 [label="string expected = @''<root><r><Date>34343</Date><Date>55</Date></r></root>''", span="767-767", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_307 [label="Assert.AreEqual(expected, newDoc.InnerXml)", span="769-769", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_308 [label="string json = SerializeXmlNode(newDoc)", span="771-771", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_309 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="772-781", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_310 [label="Assert.AreEqual(expected, json)", span="783-783", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_311 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="761-761", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m27_481 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="XmlNodeConverterTest.cs"];
m27_336 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="XmlNodeConverterTest.cs"];
m27_81 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="XmlNodeConverterTest.cs"];
m27_420 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", span="1216-1216", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_421 [label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="1218-1218", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_422 [label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="1219-1219", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_423 [label="circularDictionary.Add(''self'', circularDictionary)", span="1220-1220", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_424 [label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1222-1223", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_425 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1225-1234", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_426 [label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="1236-1236", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_427 [label="string xml = GetIndentedInnerXml(node)", span="1237-1237", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_430 [label="string xmlJson = SerializeXmlNode(node)", span="1248-1248", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_428 [label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="1238-1244", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_429 [label="Assert.AreEqual(expected, xml)", span="1246-1246", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_431 [label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="1249-1260", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_432 [label="Assert.AreEqual(expectedXmlJson, xmlJson)", span="1262-1262", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_433 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", span="1216-1216", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="XmlNodeConverterTest.cs"];
m27_469 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverterTest.cs"];
m27_212 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="515-515", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_215 [label="StringBuilder builder = new StringBuilder()", span="517-517", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_216 [label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="518-518", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_217 [label="doc.Save(writer)", span="520-520", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_218 [label="return builder.ToString();", span="522-522", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_219 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="515-515", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m27_84 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", span="147-147", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", file="XmlNodeConverterTest.cs"];
m27_603 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2166-2166", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_604 [label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2168-2172", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_605 [label="XmlDocument xml = new XmlDocument()", span="2174-2174", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_606 [label="xml.LoadXml(xmlString)", span="2175-2175", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_607 [label="var json1 = JsonConvert.SerializeXmlNode(xml)", span="2177-2177", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_608 [label="var xmlBack = JsonConvert.DeserializeObject<XmlDocument>(json1)", span="2178-2178", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_609 [label="Assert.AreEqual(@''<root><b xmlns=''''http://www.example.com/ns''''>Asd</b><c>AAA</c><test>adad</test></root>'', xmlBack.OuterXml)", span="2180-2180", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_610 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2166-2166", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m27_542 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m27_264 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverterTest.cs"];
m27_178 [label="Entry Unk.CreateCDataSection", span="", cluster="Unk.CreateCDataSection", file="XmlNodeConverterTest.cs"];
m27_176 [label="Entry Unk.Attribute", span="", cluster="Unk.Attribute", file="XmlNodeConverterTest.cs"];
m27_183 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="386-386", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_184 [label="XmlDocument doc = new XmlDocument()", span="388-388", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_185 [label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="390-390", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_186 [label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="392-392", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_187 [label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="394-394", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_188 [label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="396-396", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_189 [label="Assert.AreEqual(expected, jsonText)", span="398-398", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_191 [label="Console.WriteLine(jsonText)", span="401-401", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_190 [label="Console.WriteLine(''DocumentFragmentSerialize'')", span="400-400", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_192 [label="Console.WriteLine()", span="402-402", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_193 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="386-386", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m27_93 [label="Entry Unk.SerializeXNode", span="", cluster="Unk.SerializeXNode", file="XmlNodeConverterTest.cs"];
m27_177 [label="Entry Unk.CreateProcessingInstruction", span="", cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverterTest.cs"];
m27_470 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1434-1434", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_471 [label="XmlReader reader = XmlReader.Create(new StringReader(xml))", span="1436-1436", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_472 [label="StringWriter sw = new StringWriter()", span="1438-1438", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_474 [label="reader.Read()", span="1441-1441", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_475 [label="writer.WriteNode(reader, false)", span="1443-1443", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_473 [label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true, OmitXmlDeclaration = true })", span="1439-1439", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_477 [label="return sw.ToString();", span="1448-1448", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_476 [label="writer.Flush()", span="1446-1446", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_478 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1434-1434", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m27_19 [label="Entry Unk.Get", span="", cluster="Unk.Get", file="XmlNodeConverterTest.cs"];
m27_52 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="124-124", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_53 [label="decimal d = (decimal)Math.PI + 1000000000m", span="126-126", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_54 [label="var x = new DecimalContainer { Number = d }", span="127-127", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_55 [label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_61 [label="Assert.AreEqual(x.Number, x2.Number)", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_56 [label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="131-135", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_57 [label="var xml = doc1.ToString()", span="137-137", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_59 [label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_58 [label="Assert.AreEqual(''<Number>1000000003.14159265358979</Number>'', xml)", span="138-138", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_60 [label="DecimalContainer x2 = JsonConvert.DeserializeObject<DecimalContainer>(json2)", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_62 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="124-124", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m27_64 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs"];
m27_85 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="177-177", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m27_86 [label="string xml = ''<root><p>Text1<span>Span1</span> <span>Span2</span> Text2</p></root>''", span="179-179", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m27_87 [label="string json = JsonConvert.SerializeXNode(XElement.Parse(xml))", span="181-181", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m27_88 [label="Assert.AreEqual(@''{''''root'''':{''''p'''':{''''#text'''':[''''Text1'''','''' Text2''''],''''span'''':[''''Span1'''',''''Span2'''']}}}'', json)", span="183-183", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m27_89 [label="XDocument doc = JsonConvert.DeserializeXNode(json)", span="185-185", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m27_90 [label="Assert.AreEqual(@''<root>\r\n  <p>Text1 Text2<span>Span1</span><span>Span2</span></p>\r\n</root>'', doc.ToString())", span="187-189", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m27_91 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="177-177", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m27_498 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1536-1536", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m27_499 [label="string xml = @''<root>\r\n<Reports d1p1:Array=''''true'''' xmlns:d1p1=''''http://james.newtonking.com/projects/json'''' />\r\n</root>''", span="1538-1540", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m27_500 [label="XmlDocument d = new XmlDocument()", span="1542-1542", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m27_501 [label="d.LoadXml(xml)", span="1543-1543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m27_502 [label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1545-1545", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m27_503 [label="Assert.AreEqual(@''{\r\n  ''''root'''': {\r\n    ''''Reports'''': [\r\n      {}\r\n    ]\r\n  }\r\n}'', json)", span="1547-1553", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m27_504 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1536-1536", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m27_594 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="XmlNodeConverterTest.cs"];
m27_194 [label="Entry Unk.CreateDocumentFragment", span="", cluster="Unk.CreateDocumentFragment", file="XmlNodeConverterTest.cs"];
m27_68 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="XmlNodeConverterTest.cs"];
m27_459 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="XmlNodeConverterTest.cs"];
m27_419 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="XmlNodeConverterTest.cs"];
m27_457 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverterTest.cs"];
m27_224 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="XmlNodeConverterTest.cs"];
m27_482 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1452-1452", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m27_483 [label="string xml = @''<test>\r\n  <Name>Hi</Name>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>''", span="1454-1463", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m27_484 [label="XmlDocument d = new XmlDocument()", span="1465-1465", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m27_485 [label="d.LoadXml(xml)", span="1466-1466", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m27_486 [label="string output = JsonConvert.SerializeXmlNode(d, Formatting.Indented, true)", span="1468-1468", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m27_487 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': [\r\n    ''''Hi'''',\r\n    ''''Hi''''\r\n  ],\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output)", span="1470-1483", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m27_488 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1452-1452", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m27_230 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="537-537", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_231 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="539-561", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_232 [label="XmlDocument doc = new XmlDocument()", span="563-563", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_233 [label="doc.LoadXml(xml)", span="564-564", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_234 [label="string jsonText = SerializeXmlNode(doc)", span="566-566", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_238 [label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="617-617", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_235 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''xs:schema'''': {\r\n    ''''@xs:id'''': ''''SomeID'''',\r\n    ''''@xmlns'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''xs:element'''': {\r\n      ''''@name'''': ''''MyDataSet'''',\r\n      ''''@msdata:IsDataSet'''': ''''true'''',\r\n      ''''xs:complexType'''': {\r\n        ''''xs:choice'''': {\r\n          ''''@maxOccurs'''': ''''unbounded'''',\r\n          ''''xs:element'''': {\r\n            ''''@name'''': ''''customers'''',\r\n            ''''xs:complexType'''': {\r\n              ''''xs:sequence'''': {\r\n                ''''xs:element'''': [\r\n                  {\r\n                    ''''@name'''': ''''CustomerID'''',\r\n                    ''''@type'''': ''''xs:integer'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''CompanyName'''',\r\n                    ''''@type'''': ''''xs:string'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''Phone'''',\r\n                    ''''@type'''': ''''xs:string''''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="568-611", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_236 [label="Assert.AreEqual(expected, jsonText)", span="613-613", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_237 [label="XmlDocument deserializedDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="615-615", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_240 [label="Console.WriteLine(jsonText)", span="620-620", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_241 [label="Console.WriteLine(deserializedDoc.InnerXml)", span="621-621", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_239 [label="Console.WriteLine(''NamespaceSerializeDeserialize'')", span="619-619", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_242 [label="Console.WriteLine()", span="622-622", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_243 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="537-537", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m27_332 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="869-869", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs"];
m27_333 [label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="871-871", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs"];
m27_334 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'',\r\n                () => { JsonConvert.DeserializeXmlNode(json); })", span="873-875", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs"];
m27_335 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="869-869", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs"];
m27_525 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="XmlNodeConverterTest.cs"];
m27_245 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="626-626", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_246 [label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      },\r\n      ''''@href'''': ''''http://www.web2con.com/''''\r\n    }\r\n  }\r\n}''", span="628-645", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_247 [label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(jsonText)", span="647-647", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_248 [label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="649-654", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_249 [label="string formattedXml = GetIndentedInnerXml(doc)", span="656-656", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_253 [label="Assert.AreEqual(expected, formattedXml)", span="662-662", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_250 [label="Console.WriteLine(''DocumentDeserialize'')", span="658-658", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_251 [label="Console.WriteLine(formattedXml)", span="659-659", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_252 [label="Console.WriteLine()", span="660-660", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_254 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="626-626", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m27_526 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverterTest.cs"];
m27_611 [label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span="", file="XmlNodeConverterTest.cs"];
m27_612 [label=json, span="", file="XmlNodeConverterTest.cs"];
m27_613 [label=json, span="", file="XmlNodeConverterTest.cs"];
m27_614 [label=json, span="", file="XmlNodeConverterTest.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=xml];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=doc];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=2, style=dotted];
m1_12 -> m1_9  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=xml];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_6  [key=2, style=dotted];
m1_16 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=doc];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_7  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_8  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=xml];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_6  [key=2, style=dotted];
m1_20 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=doc];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_7  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_8  [key=2, style=dotted];
m1_23 -> m1_14  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>"];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_0  [key=2, style=dotted];
m2_6 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=model];
m2_6 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=model];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=0, style=solid];
m2_8 -> m2_7  [key=0, style=solid];
m2_8 -> m2_11  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_5  [key=0, style=bold, color=blue];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m2_11 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m2_11 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_11 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_34  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_35  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_36  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_36  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_36  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_34  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_35  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_28  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_37  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_38  [key=2, style=dotted];
m2_27 -> m2_39  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_33  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_37  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_40  [key=2, style=dotted];
m2_33 -> m2_11  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_41 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_41 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m2_41 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaModel"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_7  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_36 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_36 -> m4_47  [key=1, style=dashed, color=red, label="System.Type"];
m4_36 -> m4_17  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryBuildImmutableForDictionaryContract"];
m4_36 -> m4_20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryBuildImmutableForDictionaryContract"];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_49  [key=0, style=solid];
m4_37 -> m4_22  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_23  [key=2, style=dotted];
m4_38 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_46 -> m4_47  [key=0, style=solid, color=red];
m4_46 -> m4_27  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid, color=red];
m4_47 -> m4_28  [key=2, style=dotted, color=red];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_24  [key=2, style=dotted];
m4_39 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_39 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=definition];
m4_39 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label=definition];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_49  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_25  [key=2, style=dotted];
m4_41 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=createdTypeDefinition];
m4_41 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=createdTypeDefinition];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_25  [key=2, style=dotted];
m4_42 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=builderTypeDefinition];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_49  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_26  [key=2, style=dotted];
m4_44 -> m4_24  [key=2, style=dotted];
m4_44 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_44 -> m4_47  [key=1, style=dashed, color=red, label=mb];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_49  [key=0, style=solid];
m4_48 -> m4_52  [key=0, style=solid];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="out System.Reflection.MethodBase"];
m4_51 -> m4_52  [key=0, style=solid];
m4_52 -> m4_36  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_5 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_5 -> m4_16  [key=1, style=dashed, color=red, label="System.Type"];
m4_5 -> m4_17  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryBuildImmutableForArrayContract"];
m4_5 -> m4_20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryBuildImmutableForArrayContract"];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_18  [key=0, style=solid];
m4_6 -> m4_22  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_23  [key=2, style=dotted];
m4_7 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_15 -> m4_16  [key=0, style=solid, color=red];
m4_15 -> m4_27  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid, color=red];
m4_16 -> m4_28  [key=2, style=dotted, color=red];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_24  [key=2, style=dotted];
m4_8 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=definition];
m4_8 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=definition];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_18  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_25  [key=2, style=dotted];
m4_10 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label=createdTypeDefinition];
m4_10 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=createdTypeDefinition];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_25  [key=2, style=dotted];
m4_11 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=builderTypeDefinition];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_18  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_26  [key=2, style=dotted];
m4_13 -> m4_24  [key=2, style=dotted];
m4_13 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_13 -> m4_16  [key=1, style=dashed, color=red, label=mb];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_18  [key=0, style=solid];
m4_17 -> m4_21  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="out System.Reflection.MethodBase"];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_5  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m4_30 -> m4_31  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_31 -> m4_29  [key=0, style=bold, color=blue];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_35  [key=2, style=dotted];
m4_34 -> m4_32  [key=0, style=bold, color=blue];
m4_54 -> m4_55  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_55 -> m4_53  [key=0, style=bold, color=blue];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_35  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_22  [key=2, style=dotted];
m4_58 -> m4_23  [key=2, style=dotted];
m4_59 -> m4_56  [key=0, style=bold, color=blue];
m4_60 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo"];
m4_60 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo"];
m4_60 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.ImmutableCollectionTypeInfo"];
m4_61 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_62 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label=name];
m5_105 -> m5_106  [key=0, style=solid];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_12  [key=2, style=dotted];
m5_106 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_106 -> m5_109  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_106 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_106 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_35  [key=2, style=dotted];
m5_107 -> m5_36  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_37  [key=2, style=dotted];
m5_108 -> m5_38  [key=2, style=dotted];
m5_108 -> m5_6  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_37  [key=2, style=dotted];
m5_109 -> m5_114  [key=2, style=dotted];
m5_109 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_115  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_37  [key=2, style=dotted];
m5_111 -> m5_38  [key=2, style=dotted];
m5_111 -> m5_6  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_6  [key=2, style=dotted];
m5_113 -> m5_105  [key=0, style=bold, color=blue];
m5_733 -> m5_734  [key=0, style=solid];
m5_734 -> m5_735  [key=0, style=solid];
m5_734 -> m5_12  [key=2, style=dotted];
m5_735 -> m5_736  [key=0, style=solid];
m5_735 -> m5_226  [key=2, style=dotted];
m5_736 -> m5_733  [key=0, style=bold, color=blue];
m5_141 -> m5_142  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_12  [key=2, style=dotted];
m5_142 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_142 -> m5_145  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_142 -> m5_146  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_142 -> m5_148  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_35  [key=2, style=dotted];
m5_143 -> m5_36  [key=2, style=dotted];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_35  [key=2, style=dotted];
m5_144 -> m5_36  [key=2, style=dotted];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_35  [key=2, style=dotted];
m5_145 -> m5_36  [key=2, style=dotted];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_37  [key=2, style=dotted];
m5_146 -> m5_38  [key=2, style=dotted];
m5_146 -> m5_6  [key=2, style=dotted];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_158  [key=2, style=dotted];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_149  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_147 -> m5_150  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_147 -> m5_151  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_147 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_147 -> m5_153  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_147 -> m5_154  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_147 -> m5_155  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_147 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_6  [key=2, style=dotted];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_6  [key=2, style=dotted];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_6  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_6  [key=2, style=dotted];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_6  [key=2, style=dotted];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_6  [key=2, style=dotted];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_6  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_6  [key=2, style=dotted];
m5_157 -> m5_141  [key=0, style=bold, color=blue];
m5_1007 -> m5_1008  [key=0, style=solid];
m5_1008 -> m5_1009  [key=0, style=solid];
m5_1008 -> m5_246  [key=2, style=dotted];
m5_1008 -> m5_1016  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1008 -> m5_1017  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1008 -> m5_1022  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1008 -> m5_1023  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1008 -> m5_1028  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1008 -> m5_1029  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1008 -> m5_1034  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1008 -> m5_1035  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1009 -> m5_1010  [key=0, style=solid];
m5_1009 -> m5_1008  [key=3, color=darkorchid, style=bold, label="Local variable System.ComponentModel.ICustomTypeDescriptor descriptor"];
m5_1016 -> m5_1017  [key=0, style=solid];
m5_1016 -> m5_1038  [key=2, style=dotted];
m5_1016 -> m5_6  [key=2, style=dotted];
m5_1017 -> m5_1018  [key=0, style=solid];
m5_1017 -> m5_1039  [key=2, style=dotted];
m5_1017 -> m5_6  [key=2, style=dotted];
m5_1022 -> m5_1023  [key=0, style=solid];
m5_1022 -> m5_1038  [key=2, style=dotted];
m5_1022 -> m5_6  [key=2, style=dotted];
m5_1023 -> m5_1024  [key=0, style=solid];
m5_1023 -> m5_1039  [key=2, style=dotted];
m5_1023 -> m5_6  [key=2, style=dotted];
m5_1028 -> m5_1029  [key=0, style=solid];
m5_1028 -> m5_1038  [key=2, style=dotted];
m5_1028 -> m5_6  [key=2, style=dotted];
m5_1029 -> m5_1030  [key=0, style=solid];
m5_1029 -> m5_1039  [key=2, style=dotted];
m5_1029 -> m5_6  [key=2, style=dotted];
m5_1034 -> m5_1035  [key=0, style=solid];
m5_1034 -> m5_1038  [key=2, style=dotted];
m5_1034 -> m5_6  [key=2, style=dotted];
m5_1035 -> m5_1036  [key=0, style=solid];
m5_1035 -> m5_1039  [key=2, style=dotted];
m5_1035 -> m5_6  [key=2, style=dotted];
m5_1010 -> m5_1011  [key=0, style=solid];
m5_1010 -> m5_1037  [key=2, style=dotted];
m5_1010 -> m5_1012  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_1010 -> m5_1018  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_1010 -> m5_1024  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_1010 -> m5_1030  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_1011 -> m5_1012  [key=0, style=solid];
m5_1011 -> m5_6  [key=2, style=dotted];
m5_1012 -> m5_1013  [key=0, style=solid];
m5_1012 -> m5_1014  [key=1, style=dashed, color=darkseagreen4, label=prop1];
m5_1012 -> m5_1015  [key=1, style=dashed, color=darkseagreen4, label=prop1];
m5_1012 -> m5_1016  [key=1, style=dashed, color=darkseagreen4, label=prop1];
m5_1012 -> m5_1017  [key=1, style=dashed, color=darkseagreen4, label=prop1];
m5_1018 -> m5_1019  [key=0, style=solid];
m5_1018 -> m5_1020  [key=1, style=dashed, color=darkseagreen4, label=prop2];
m5_1018 -> m5_1021  [key=1, style=dashed, color=darkseagreen4, label=prop2];
m5_1018 -> m5_1022  [key=1, style=dashed, color=darkseagreen4, label=prop2];
m5_1018 -> m5_1023  [key=1, style=dashed, color=darkseagreen4, label=prop2];
m5_1024 -> m5_1025  [key=0, style=solid];
m5_1024 -> m5_1026  [key=1, style=dashed, color=darkseagreen4, label=prop3];
m5_1024 -> m5_1027  [key=1, style=dashed, color=darkseagreen4, label=prop3];
m5_1024 -> m5_1028  [key=1, style=dashed, color=darkseagreen4, label=prop3];
m5_1024 -> m5_1029  [key=1, style=dashed, color=darkseagreen4, label=prop3];
m5_1030 -> m5_1031  [key=0, style=solid];
m5_1030 -> m5_1032  [key=1, style=dashed, color=darkseagreen4, label=prop4];
m5_1030 -> m5_1033  [key=1, style=dashed, color=darkseagreen4, label=prop4];
m5_1030 -> m5_1034  [key=1, style=dashed, color=darkseagreen4, label=prop4];
m5_1030 -> m5_1035  [key=1, style=dashed, color=darkseagreen4, label=prop4];
m5_1013 -> m5_1014  [key=0, style=solid];
m5_1013 -> m5_6  [key=2, style=dotted];
m5_1014 -> m5_1015  [key=0, style=solid];
m5_1014 -> m5_6  [key=2, style=dotted];
m5_1015 -> m5_1016  [key=0, style=solid];
m5_1015 -> m5_6  [key=2, style=dotted];
m5_1019 -> m5_1020  [key=0, style=solid];
m5_1019 -> m5_6  [key=2, style=dotted];
m5_1020 -> m5_1021  [key=0, style=solid];
m5_1020 -> m5_6  [key=2, style=dotted];
m5_1021 -> m5_1022  [key=0, style=solid];
m5_1021 -> m5_6  [key=2, style=dotted];
m5_1025 -> m5_1026  [key=0, style=solid];
m5_1025 -> m5_6  [key=2, style=dotted];
m5_1026 -> m5_1027  [key=0, style=solid];
m5_1026 -> m5_6  [key=2, style=dotted];
m5_1027 -> m5_1028  [key=0, style=solid];
m5_1027 -> m5_6  [key=2, style=dotted];
m5_1031 -> m5_1032  [key=0, style=solid];
m5_1031 -> m5_6  [key=2, style=dotted];
m5_1032 -> m5_1033  [key=0, style=solid];
m5_1032 -> m5_6  [key=2, style=dotted];
m5_1033 -> m5_1034  [key=0, style=solid];
m5_1033 -> m5_6  [key=2, style=dotted];
m5_1036 -> m5_1007  [key=0, style=bold, color=blue];
m5_781 -> m5_782  [key=0, style=solid];
m5_782 -> m5_783  [key=0, style=solid];
m5_782 -> m5_12  [key=2, style=dotted];
m5_783 -> m5_784  [key=0, style=solid];
m5_783 -> m5_6  [key=2, style=dotted];
m5_784 -> m5_781  [key=0, style=bold, color=blue];
m5_166 -> m5_167  [key=0, style=solid];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_84  [key=2, style=dotted];
m5_167 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_168 -> m5_166  [key=0, style=bold, color=blue];
m5_279 -> m5_280  [key=0, style=solid];
m5_280 -> m5_281  [key=0, style=solid];
m5_280 -> m5_12  [key=2, style=dotted];
m5_280 -> m5_282  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_280 -> m5_283  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_281 -> m5_282  [key=0, style=solid];
m5_281 -> m5_35  [key=2, style=dotted];
m5_281 -> m5_36  [key=2, style=dotted];
m5_282 -> m5_283  [key=0, style=solid];
m5_282 -> m5_35  [key=2, style=dotted];
m5_282 -> m5_36  [key=2, style=dotted];
m5_283 -> m5_284  [key=0, style=solid];
m5_283 -> m5_285  [key=1, style=dashed, color=darkseagreen4, label=t];
m5_283 -> m5_280  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JToken t"];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_284 -> m5_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_284 -> m5_288  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_284 -> m5_284  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_289  [key=0, style=solid];
m5_285 -> m5_287  [key=1, style=dashed, color=darkseagreen4, label=property];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_6  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_6  [key=2, style=dotted];
m5_288 -> m5_285  [key=0, style=solid];
m5_288 -> m5_288  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_289 -> m5_279  [key=0, style=bold, color=blue];
m5_641 -> m5_642  [key=0, style=solid];
m5_642 -> m5_643  [key=0, style=solid];
m5_642 -> m5_382  [key=2, style=dotted];
m5_643 -> m5_644  [key=0, style=solid];
m5_643 -> m5_472  [key=2, style=dotted];
m5_643 -> m5_645  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_643 -> m5_646  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_644 -> m5_645  [key=0, style=solid];
m5_644 -> m5_6  [key=2, style=dotted];
m5_645 -> m5_646  [key=0, style=solid];
m5_645 -> m5_115  [key=2, style=dotted];
m5_646 -> m5_647  [key=0, style=solid];
m5_646 -> m5_6  [key=2, style=dotted];
m5_647 -> m5_641  [key=0, style=bold, color=blue];
m5_694 -> m5_695  [key=0, style=solid];
m5_695 -> m5_696  [key=0, style=solid];
m5_695 -> m5_382  [key=2, style=dotted];
m5_695 -> m5_697  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_695 -> m5_701  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_695 -> m5_703  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_696 -> m5_697  [key=0, style=solid];
m5_696 -> m5_382  [key=2, style=dotted];
m5_696 -> m5_704  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_696 -> m5_705  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_696 -> m5_707  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_696 -> m5_708  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_697 -> m5_698  [key=0, style=solid];
m5_697 -> m5_383  [key=2, style=dotted];
m5_697 -> m5_699  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_697 -> m5_700  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_697 -> m5_701  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_697 -> m5_702  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_697 -> m5_703  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_697 -> m5_704  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_697 -> m5_705  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_697 -> m5_706  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_697 -> m5_707  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_701 -> m5_702  [key=0, style=solid];
m5_701 -> m5_80  [key=2, style=dotted];
m5_701 -> m5_225  [key=2, style=dotted];
m5_703 -> m5_704  [key=0, style=solid];
m5_703 -> m5_132  [key=2, style=dotted];
m5_703 -> m5_226  [key=2, style=dotted];
m5_704 -> m5_705  [key=0, style=solid];
m5_704 -> m5_132  [key=2, style=dotted];
m5_704 -> m5_225  [key=2, style=dotted];
m5_705 -> m5_706  [key=0, style=solid];
m5_705 -> m5_80  [key=2, style=dotted];
m5_705 -> m5_225  [key=2, style=dotted];
m5_707 -> m5_708  [key=0, style=solid];
m5_707 -> m5_132  [key=2, style=dotted];
m5_707 -> m5_226  [key=2, style=dotted];
m5_708 -> m5_709  [key=0, style=solid];
m5_708 -> m5_6  [key=2, style=dotted];
m5_698 -> m5_699  [key=0, style=solid];
m5_698 -> m5_382  [key=2, style=dotted];
m5_699 -> m5_700  [key=0, style=solid];
m5_699 -> m5_80  [key=2, style=dotted];
m5_699 -> m5_226  [key=2, style=dotted];
m5_700 -> m5_701  [key=0, style=solid];
m5_700 -> m5_6  [key=2, style=dotted];
m5_702 -> m5_703  [key=0, style=solid];
m5_702 -> m5_6  [key=2, style=dotted];
m5_706 -> m5_707  [key=0, style=solid];
m5_706 -> m5_6  [key=2, style=dotted];
m5_709 -> m5_694  [key=0, style=bold, color=blue];
m5_920 -> m5_921  [key=0, style=solid];
m5_921 -> m5_922  [key=0, style=solid];
m5_921 -> m5_921  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_922 -> m5_923  [key=0, style=solid];
m5_922 -> m5_246  [key=2, style=dotted];
m5_923 -> m5_924  [key=0, style=solid];
m5_924 -> m5_925  [key=0, style=solid];
m5_924 -> m5_6  [key=2, style=dotted];
m5_925 -> m5_920  [key=0, style=bold, color=blue];
m5_133 -> m5_134  [key=0, style=solid];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_12  [key=2, style=dotted];
m5_134 -> m5_136  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_134 -> m5_137  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_35  [key=2, style=dotted];
m5_135 -> m5_36  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_37  [key=2, style=dotted];
m5_136 -> m5_38  [key=2, style=dotted];
m5_136 -> m5_6  [key=2, style=dotted];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_140  [key=2, style=dotted];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_6  [key=2, style=dotted];
m5_139 -> m5_133  [key=0, style=bold, color=blue];
m5_757 -> m5_758  [key=0, style=solid];
m5_758 -> m5_759  [key=0, style=solid];
m5_758 -> m5_12  [key=2, style=dotted];
m5_759 -> m5_760  [key=0, style=solid];
m5_759 -> m5_6  [key=2, style=dotted];
m5_760 -> m5_757  [key=0, style=bold, color=blue];
m5_710 -> m5_711  [key=0, style=solid];
m5_711 -> m5_712  [key=0, style=solid];
m5_711 -> m5_382  [key=2, style=dotted];
m5_711 -> m5_713  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_711 -> m5_715  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_712 -> m5_713  [key=0, style=solid];
m5_712 -> m5_382  [key=2, style=dotted];
m5_712 -> m5_717  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_713 -> m5_714  [key=0, style=solid];
m5_713 -> m5_383  [key=2, style=dotted];
m5_713 -> m5_715  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_713 -> m5_716  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_713 -> m5_717  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_713 -> m5_718  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_715 -> m5_716  [key=0, style=solid];
m5_715 -> m5_80  [key=2, style=dotted];
m5_717 -> m5_718  [key=0, style=solid];
m5_717 -> m5_80  [key=2, style=dotted];
m5_714 -> m5_715  [key=0, style=solid];
m5_714 -> m5_720  [key=2, style=dotted];
m5_716 -> m5_717  [key=0, style=solid];
m5_716 -> m5_6  [key=2, style=dotted];
m5_718 -> m5_719  [key=0, style=solid];
m5_718 -> m5_6  [key=2, style=dotted];
m5_719 -> m5_710  [key=0, style=bold, color=blue];
m5_41 -> m5_42  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_12  [key=2, style=dotted];
m5_42 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_42 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_42 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_42 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_42 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_42 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_42 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_42 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_35  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_37  [key=2, style=dotted];
m5_44 -> m5_38  [key=2, style=dotted];
m5_44 -> m5_6  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_39  [key=2, style=dotted];
m5_46 -> m5_6  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_35  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_37  [key=2, style=dotted];
m5_49 -> m5_38  [key=2, style=dotted];
m5_49 -> m5_6  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_39  [key=2, style=dotted];
m5_50 -> m5_6  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_37  [key=2, style=dotted];
m5_53 -> m5_38  [key=2, style=dotted];
m5_53 -> m5_6  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid, color=red];
m5_54 -> m5_39  [key=2, style=dotted];
m5_54 -> m5_6  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_35  [key=2, style=dotted];
m5_47 -> m5_40  [key=2, style=dotted];
m5_47 -> m5_6  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_35  [key=2, style=dotted];
m5_51 -> m5_40  [key=2, style=dotted];
m5_51 -> m5_6  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid, color=red];
m5_55 -> m5_57  [key=2, style=dotted, color=red];
m5_55 -> m5_40  [key=2, style=dotted, color=red];
m5_55 -> m5_6  [key=2, style=dotted, color=red];
m5_56 -> m5_41  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_12  [key=2, style=dotted];
m5_24 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_24 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_24 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_24 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_35  [key=2, style=dotted];
m5_25 -> m5_36  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_37  [key=2, style=dotted];
m5_26 -> m5_38  [key=2, style=dotted];
m5_26 -> m5_6  [key=2, style=dotted];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_39  [key=2, style=dotted];
m5_28 -> m5_6  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_39  [key=2, style=dotted];
m5_30 -> m5_6  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_39  [key=2, style=dotted];
m5_32 -> m5_6  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_6  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_6  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_35  [key=2, style=dotted];
m5_33 -> m5_40  [key=2, style=dotted];
m5_33 -> m5_6  [key=2, style=dotted];
m5_34 -> m5_23  [key=0, style=bold, color=blue];
m5_577 -> m5_578  [key=0, style=solid];
m5_578 -> m5_579  [key=0, style=solid];
m5_578 -> m5_12  [key=2, style=dotted];
m5_579 -> m5_580  [key=0, style=solid];
m5_579 -> m5_226  [key=2, style=dotted];
m5_580 -> m5_577  [key=0, style=bold, color=blue];
m5_684 -> m5_685  [key=0, style=solid];
m5_685 -> m5_686  [key=0, style=solid];
m5_685 -> m5_84  [key=2, style=dotted];
m5_685 -> m5_687  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_686 -> m5_684  [key=0, style=bold, color=blue];
m5_581 -> m5_582  [key=0, style=solid];
m5_582 -> m5_583  [key=0, style=solid];
m5_582 -> m5_12  [key=2, style=dotted];
m5_583 -> m5_584  [key=0, style=solid];
m5_583 -> m5_226  [key=2, style=dotted];
m5_584 -> m5_581  [key=0, style=bold, color=blue];
m5_1040 -> m5_1041  [key=0, style=solid];
m5_1041 -> m5_1042  [key=0, style=solid];
m5_1041 -> m5_246  [key=2, style=dotted];
m5_1042 -> m5_1043  [key=0, style=solid];
m5_1042 -> m5_6  [key=2, style=dotted];
m5_1043 -> m5_1040  [key=0, style=bold, color=blue];
m5_810 -> m5_811  [key=0, style=solid];
m5_811 -> m5_812  [key=0, style=solid];
m5_811 -> m5_12  [key=2, style=dotted];
m5_812 -> m5_813  [key=0, style=solid];
m5_812 -> m5_814  [key=2, style=dotted];
m5_813 -> m5_810  [key=0, style=bold, color=blue];
m5_605 -> m5_606  [key=0, style=solid];
m5_606 -> m5_607  [key=0, style=solid];
m5_606 -> m5_84  [key=2, style=dotted];
m5_606 -> m5_608  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_607 -> m5_605  [key=0, style=bold, color=blue];
m5_765 -> m5_766  [key=0, style=solid];
m5_766 -> m5_767  [key=0, style=solid];
m5_766 -> m5_12  [key=2, style=dotted];
m5_767 -> m5_768  [key=0, style=solid];
m5_767 -> m5_6  [key=2, style=dotted];
m5_768 -> m5_765  [key=0, style=bold, color=blue];
m5_648 -> m5_649  [key=0, style=solid];
m5_649 -> m5_650  [key=0, style=solid];
m5_649 -> m5_382  [key=2, style=dotted];
m5_649 -> m5_651  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_649 -> m5_654  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_650 -> m5_651  [key=0, style=solid];
m5_650 -> m5_382  [key=2, style=dotted];
m5_650 -> m5_655  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_651 -> m5_652  [key=0, style=solid];
m5_651 -> m5_383  [key=2, style=dotted];
m5_651 -> m5_653  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_654 -> m5_655  [key=0, style=solid];
m5_654 -> m5_6  [key=2, style=dotted];
m5_655 -> m5_656  [key=0, style=solid];
m5_655 -> m5_6  [key=2, style=dotted];
m5_652 -> m5_653  [key=0, style=solid];
m5_652 -> m5_654  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_652 -> m5_655  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_653 -> m5_654  [key=0, style=solid];
m5_653 -> m5_158  [key=2, style=dotted];
m5_656 -> m5_648  [key=0, style=bold, color=blue];
m5_945 -> m5_946  [key=0, style=solid];
m5_946 -> m5_947  [key=0, style=solid];
m5_947 -> m5_948  [key=0, style=solid];
m5_947 -> m5_57  [key=2, style=dotted];
m5_947 -> m5_949  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_947 -> m5_951  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_948 -> m5_949  [key=0, style=solid];
m5_948 -> m5_6  [key=2, style=dotted];
m5_949 -> m5_950  [key=0, style=solid];
m5_949 -> m5_6  [key=2, style=dotted];
m5_951 -> m5_952  [key=0, style=solid];
m5_950 -> m5_951  [key=0, style=solid];
m5_950 -> m5_12  [key=2, style=dotted];
m5_950 -> m5_952  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_952 -> m5_953  [key=0, style=solid];
m5_952 -> m5_15  [key=2, style=dotted];
m5_953 -> m5_954  [key=0, style=solid];
m5_953 -> m5_6  [key=2, style=dotted];
m5_954 -> m5_945  [key=0, style=bold, color=blue];
m5_994 -> m5_995  [key=0, style=solid];
m5_995 -> m5_996  [key=0, style=solid];
m5_995 -> m5_84  [key=2, style=dotted];
m5_995 -> m5_997  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_995 -> m5_995  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m5_996 -> m5_994  [key=0, style=bold, color=blue];
m5_90 -> m5_91  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_12  [key=2, style=dotted];
m5_91 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_91 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_91 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_91 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_35  [key=2, style=dotted];
m5_92 -> m5_36  [key=2, style=dotted];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_6  [key=2, style=dotted];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_36  [key=2, style=dotted];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_6  [key=2, style=dotted];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_37  [key=2, style=dotted];
m5_96 -> m5_38  [key=2, style=dotted];
m5_96 -> m5_6  [key=2, style=dotted];
m5_97 -> m5_90  [key=0, style=bold, color=blue];
m5_1087 -> m5_1088  [key=0, style=solid];
m5_1088 -> m5_1089  [key=0, style=solid];
m5_1088 -> m5_246  [key=2, style=dotted];
m5_1088 -> m5_1091  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1089 -> m5_1090  [key=0, style=solid];
m5_1089 -> m5_1099  [key=2, style=dotted];
m5_1091 -> m5_1092  [key=0, style=solid];
m5_1091 -> m5_1099  [key=2, style=dotted];
m5_1090 -> m5_1091  [key=0, style=solid];
m5_1090 -> m5_6  [key=2, style=dotted];
m5_1092 -> m5_1093  [key=0, style=solid];
m5_1092 -> m5_6  [key=2, style=dotted];
m5_1093 -> m5_1094  [key=0, style=solid];
m5_1093 -> m5_246  [key=2, style=dotted];
m5_1093 -> m5_1096  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1094 -> m5_1095  [key=0, style=solid];
m5_1094 -> m5_1099  [key=2, style=dotted];
m5_1096 -> m5_1097  [key=0, style=solid];
m5_1096 -> m5_1099  [key=2, style=dotted];
m5_1095 -> m5_1096  [key=0, style=solid];
m5_1095 -> m5_6  [key=2, style=dotted];
m5_1097 -> m5_1098  [key=0, style=solid];
m5_1097 -> m5_6  [key=2, style=dotted];
m5_1098 -> m5_1087  [key=0, style=bold, color=blue];
m5_855 -> m5_856  [key=0, style=solid];
m5_856 -> m5_857  [key=0, style=solid];
m5_856 -> m5_382  [key=2, style=dotted];
m5_856 -> m5_858  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_857 -> m5_858  [key=0, style=solid];
m5_857 -> m5_382  [key=2, style=dotted];
m5_858 -> m5_859  [key=0, style=solid];
m5_858 -> m5_383  [key=2, style=dotted];
m5_859 -> m5_860  [key=0, style=solid];
m5_859 -> m5_862  [key=2, style=dotted];
m5_860 -> m5_861  [key=0, style=solid];
m5_860 -> m5_863  [key=2, style=dotted];
m5_861 -> m5_855  [key=0, style=bold, color=blue];
m5_386 -> m5_387  [key=0, style=solid];
m5_387 -> m5_388  [key=0, style=solid];
m5_387 -> m5_82  [key=3, color=darkorchid, style=bold, label="Local variable object changing"];
m5_388 -> m5_389  [key=0, style=solid];
m5_388 -> m5_82  [key=3, color=darkorchid, style=bold, label="Local variable object changed"];
m5_389 -> m5_390  [key=0, style=solid];
m5_389 -> m5_392  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_389 -> m5_389  [key=3, color=darkorchid, style=bold, label="Local variable int changingCount"];
m5_390 -> m5_391  [key=0, style=solid];
m5_390 -> m5_393  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_390 -> m5_389  [key=3, color=darkorchid, style=bold, label="Local variable int changedCount"];
m5_392 -> m5_393  [key=0, style=solid];
m5_392 -> m5_392  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_392 -> m5_426  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_392 -> m5_427  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangingEventArgs"];
m5_392 -> m5_428  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_391 -> m5_392  [key=0, style=solid];
m5_391 -> m5_12  [key=2, style=dotted];
m5_391 -> m5_393  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_394  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_397  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_400  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_403  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_406  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_409  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_412  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_415  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_391 -> m5_418  [key=1, style=dashed, color=red, label=o];
m5_391 -> m5_421  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_393 -> m5_394  [key=0, style=solid];
m5_393 -> m5_393  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_393 -> m5_431  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_393 -> m5_432  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangedEventArgs"];
m5_393 -> m5_433  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_394 -> m5_395  [key=0, style=solid];
m5_397 -> m5_398  [key=0, style=solid];
m5_397 -> m5_6  [key=2, style=dotted];
m5_400 -> m5_401  [key=0, style=solid];
m5_403 -> m5_404  [key=0, style=solid];
m5_406 -> m5_407  [key=0, style=solid];
m5_406 -> m5_6  [key=2, style=dotted];
m5_409 -> m5_410  [key=0, style=solid];
m5_412 -> m5_413  [key=0, style=solid];
m5_412 -> m5_6  [key=2, style=dotted];
m5_415 -> m5_416  [key=0, style=solid];
m5_418 -> m5_419  [key=0, style=solid, color=red];
m5_418 -> m5_57  [key=2, style=dotted, color=red];
m5_418 -> m5_6  [key=2, style=dotted, color=red];
m5_421 -> m5_422  [key=0, style=solid];
m5_395 -> m5_396  [key=0, style=solid];
m5_395 -> m5_6  [key=2, style=dotted];
m5_396 -> m5_397  [key=0, style=solid];
m5_396 -> m5_6  [key=2, style=dotted];
m5_398 -> m5_399  [key=0, style=solid];
m5_398 -> m5_6  [key=2, style=dotted];
m5_399 -> m5_400  [key=0, style=solid];
m5_399 -> m5_6  [key=2, style=dotted];
m5_401 -> m5_402  [key=0, style=solid];
m5_401 -> m5_6  [key=2, style=dotted];
m5_402 -> m5_403  [key=0, style=solid];
m5_402 -> m5_6  [key=2, style=dotted];
m5_404 -> m5_405  [key=0, style=solid];
m5_404 -> m5_6  [key=2, style=dotted];
m5_405 -> m5_406  [key=0, style=solid];
m5_405 -> m5_6  [key=2, style=dotted];
m5_407 -> m5_408  [key=0, style=solid];
m5_407 -> m5_6  [key=2, style=dotted];
m5_408 -> m5_409  [key=0, style=solid];
m5_408 -> m5_6  [key=2, style=dotted];
m5_410 -> m5_411  [key=0, style=solid];
m5_410 -> m5_6  [key=2, style=dotted];
m5_411 -> m5_412  [key=0, style=solid];
m5_411 -> m5_6  [key=2, style=dotted];
m5_413 -> m5_414  [key=0, style=solid];
m5_413 -> m5_6  [key=2, style=dotted];
m5_414 -> m5_415  [key=0, style=solid];
m5_414 -> m5_6  [key=2, style=dotted];
m5_416 -> m5_417  [key=0, style=solid];
m5_416 -> m5_6  [key=2, style=dotted];
m5_417 -> m5_418  [key=0, style=solid, color=red];
m5_417 -> m5_6  [key=2, style=dotted];
m5_419 -> m5_420  [key=0, style=solid];
m5_419 -> m5_6  [key=2, style=dotted];
m5_420 -> m5_421  [key=0, style=solid];
m5_420 -> m5_6  [key=2, style=dotted];
m5_422 -> m5_423  [key=0, style=solid];
m5_422 -> m5_6  [key=2, style=dotted];
m5_423 -> m5_424  [key=0, style=solid];
m5_423 -> m5_6  [key=2, style=dotted];
m5_424 -> m5_386  [key=0, style=bold, color=blue];
m5_247 -> m5_248  [key=0, style=solid];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_248  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_253  [key=2, style=dotted];
m5_250 -> m5_251  [key=0, style=solid];
m5_251 -> m5_252  [key=0, style=solid];
m5_251 -> m5_254  [key=2, style=dotted];
m5_251 -> m5_6  [key=2, style=dotted];
m5_252 -> m5_247  [key=0, style=bold, color=blue];
m5_1100 -> m5_1101  [key=0, style=solid];
m5_1101 -> m5_1102  [key=0, style=solid];
m5_1101 -> m5_12  [key=2, style=dotted];
m5_1101 -> m5_40  [key=2, style=dotted];
m5_1101 -> m5_225  [key=2, style=dotted];
m5_1102 -> m5_1103  [key=0, style=solid];
m5_1102 -> m5_12  [key=2, style=dotted];
m5_1102 -> m5_1106  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1102 -> m5_1107  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1103 -> m5_1104  [key=0, style=solid];
m5_1103 -> m5_12  [key=2, style=dotted];
m5_1103 -> m5_1105  [key=1, style=dashed, color=darkseagreen4, label=b];
m5_1103 -> m5_1106  [key=1, style=dashed, color=darkseagreen4, label=b];
m5_1103 -> m5_1107  [key=1, style=dashed, color=darkseagreen4, label=b];
m5_1106 -> m5_1107  [key=0, style=solid];
m5_1106 -> m5_40  [key=2, style=dotted];
m5_1106 -> m5_225  [key=2, style=dotted];
m5_1107 -> m5_1108  [key=0, style=solid];
m5_1107 -> m5_40  [key=2, style=dotted];
m5_1107 -> m5_225  [key=2, style=dotted];
m5_1104 -> m5_1105  [key=0, style=solid];
m5_1104 -> m5_36  [key=2, style=dotted];
m5_1105 -> m5_1106  [key=0, style=solid];
m5_1105 -> m5_67  [key=2, style=dotted];
m5_1108 -> m5_1100  [key=0, style=bold, color=blue];
m5_173 -> m5_174  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_84  [key=2, style=dotted];
m5_174 -> m5_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_175 -> m5_173  [key=0, style=bold, color=blue];
m5_675 -> m5_676  [key=0, style=solid];
m5_676 -> m5_677  [key=0, style=solid];
m5_676 -> m5_84  [key=2, style=dotted];
m5_676 -> m5_678  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_677 -> m5_675  [key=0, style=bold, color=blue];
m5_933 -> m5_934  [key=0, style=solid];
m5_934 -> m5_935  [key=0, style=solid];
m5_934 -> m5_936  [key=1, style=dashed, color=darkseagreen4, label=key];
m5_934 -> m5_937  [key=1, style=dashed, color=darkseagreen4, label=key];
m5_934 -> m5_934  [key=3, color=darkorchid, style=bold, label="Local variable object key"];
m5_935 -> m5_936  [key=0, style=solid];
m5_935 -> m5_12  [key=2, style=dotted];
m5_935 -> m5_937  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_936 -> m5_937  [key=0, style=solid];
m5_936 -> m5_35  [key=2, style=dotted];
m5_937 -> m5_938  [key=0, style=solid];
m5_937 -> m5_6  [key=2, style=dotted];
m5_938 -> m5_933  [key=0, style=bold, color=blue];
m5_785 -> m5_786  [key=0, style=solid];
m5_786 -> m5_787  [key=0, style=solid];
m5_786 -> m5_12  [key=2, style=dotted];
m5_787 -> m5_788  [key=0, style=solid];
m5_787 -> m5_6  [key=2, style=dotted];
m5_788 -> m5_785  [key=0, style=bold, color=blue];
m5_290 -> m5_291  [key=0, style=solid];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_12  [key=2, style=dotted];
m5_291 -> m5_293  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_291 -> m5_295  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_35  [key=2, style=dotted];
m5_292 -> m5_36  [key=2, style=dotted];
m5_293 -> m5_294  [key=0, style=solid];
m5_293 -> m5_35  [key=2, style=dotted];
m5_293 -> m5_36  [key=2, style=dotted];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_299  [key=0, style=solid];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_296  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_294 -> m5_297  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_294 -> m5_298  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_294 -> m5_284  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_6  [key=2, style=dotted];
m5_296 -> m5_296  [key=1, style=dashed, color=darkseagreen4, label=pair];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_6  [key=2, style=dotted];
m5_297 -> m5_297  [key=1, style=dashed, color=darkseagreen4, label=pair];
m5_298 -> m5_295  [key=0, style=solid];
m5_298 -> m5_298  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_299 -> m5_290  [key=0, style=bold, color=blue];
m5_769 -> m5_770  [key=0, style=solid];
m5_770 -> m5_771  [key=0, style=solid];
m5_770 -> m5_12  [key=2, style=dotted];
m5_771 -> m5_772  [key=0, style=solid];
m5_771 -> m5_6  [key=2, style=dotted];
m5_772 -> m5_769  [key=0, style=bold, color=blue];
m5_1155 -> m5_1156  [key=0, style=solid];
m5_1156 -> m5_1157  [key=0, style=solid];
m5_1156 -> m5_1158  [key=2, style=dotted];
m5_1157 -> m5_1155  [key=0, style=bold, color=blue];
m5_499 -> m5_500  [key=0, style=solid];
m5_500 -> m5_501  [key=0, style=solid];
m5_500 -> m5_382  [key=2, style=dotted];
m5_500 -> m5_502  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_501 -> m5_502  [key=0, style=solid];
m5_501 -> m5_382  [key=2, style=dotted];
m5_502 -> m5_503  [key=0, style=solid];
m5_502 -> m5_383  [key=2, style=dotted];
m5_502 -> m5_504  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_502 -> m5_505  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_502 -> m5_506  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_503 -> m5_504  [key=0, style=solid];
m5_503 -> m5_382  [key=2, style=dotted];
m5_503 -> m5_506  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_504 -> m5_505  [key=0, style=solid];
m5_504 -> m5_508  [key=2, style=dotted];
m5_505 -> m5_506  [key=0, style=solid];
m5_505 -> m5_6  [key=2, style=dotted];
m5_506 -> m5_507  [key=0, style=solid];
m5_506 -> m5_6  [key=2, style=dotted];
m5_507 -> m5_499  [key=0, style=bold, color=blue];
m5_622 -> m5_623  [key=0, style=solid];
m5_623 -> m5_624  [key=0, style=solid];
m5_623 -> m5_382  [key=2, style=dotted];
m5_623 -> m5_625  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_624 -> m5_625  [key=0, style=solid];
m5_624 -> m5_382  [key=2, style=dotted];
m5_625 -> m5_626  [key=0, style=solid];
m5_625 -> m5_383  [key=2, style=dotted];
m5_626 -> m5_627  [key=0, style=solid];
m5_626 -> m5_226  [key=2, style=dotted];
m5_627 -> m5_622  [key=0, style=bold, color=blue];
m5_848 -> m5_849  [key=0, style=solid];
m5_849 -> m5_850  [key=0, style=solid];
m5_849 -> m5_382  [key=2, style=dotted];
m5_849 -> m5_851  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_850 -> m5_851  [key=0, style=solid];
m5_850 -> m5_382  [key=2, style=dotted];
m5_851 -> m5_852  [key=0, style=solid];
m5_851 -> m5_383  [key=2, style=dotted];
m5_852 -> m5_853  [key=0, style=solid];
m5_852 -> m5_854  [key=2, style=dotted];
m5_852 -> m5_6  [key=2, style=dotted];
m5_853 -> m5_848  [key=0, style=bold, color=blue];
m5_565 -> m5_566  [key=0, style=solid];
m5_566 -> m5_567  [key=0, style=solid];
m5_566 -> m5_382  [key=2, style=dotted];
m5_566 -> m5_568  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_566 -> m5_572  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_567 -> m5_568  [key=0, style=solid];
m5_567 -> m5_382  [key=2, style=dotted];
m5_567 -> m5_574  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_568 -> m5_569  [key=0, style=solid];
m5_568 -> m5_383  [key=2, style=dotted];
m5_568 -> m5_570  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_568 -> m5_571  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_568 -> m5_572  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_568 -> m5_573  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_568 -> m5_574  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_572 -> m5_573  [key=0, style=solid];
m5_572 -> m5_6  [key=2, style=dotted];
m5_574 -> m5_575  [key=0, style=solid];
m5_574 -> m5_6  [key=2, style=dotted];
m5_569 -> m5_570  [key=0, style=solid];
m5_569 -> m5_382  [key=2, style=dotted];
m5_569 -> m5_571  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_569 -> m5_573  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_570 -> m5_571  [key=0, style=solid];
m5_570 -> m5_576  [key=2, style=dotted];
m5_571 -> m5_572  [key=0, style=solid];
m5_571 -> m5_6  [key=2, style=dotted];
m5_573 -> m5_574  [key=0, style=solid];
m5_573 -> m5_6  [key=2, style=dotted];
m5_575 -> m5_565  [key=0, style=bold, color=blue];
m5_761 -> m5_762  [key=0, style=solid];
m5_762 -> m5_763  [key=0, style=solid];
m5_762 -> m5_12  [key=2, style=dotted];
m5_763 -> m5_764  [key=0, style=solid];
m5_763 -> m5_6  [key=2, style=dotted];
m5_764 -> m5_761  [key=0, style=bold, color=blue];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_35  [key=2, style=dotted];
m5_69 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_69 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_12  [key=2, style=dotted];
m5_70 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_70 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_70 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_70 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_70 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_70 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_36  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_79  [key=2, style=dotted];
m5_76 -> m5_80  [key=2, style=dotted];
m5_76 -> m5_6  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_37  [key=2, style=dotted];
m5_72 -> m5_38  [key=2, style=dotted];
m5_72 -> m5_6  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_79  [key=2, style=dotted];
m5_73 -> m5_35  [key=2, style=dotted];
m5_73 -> m5_80  [key=2, style=dotted];
m5_73 -> m5_6  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_79  [key=2, style=dotted];
m5_74 -> m5_35  [key=2, style=dotted];
m5_74 -> m5_80  [key=2, style=dotted];
m5_74 -> m5_6  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_79  [key=2, style=dotted];
m5_75 -> m5_35  [key=2, style=dotted];
m5_75 -> m5_80  [key=2, style=dotted];
m5_75 -> m5_6  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_37  [key=2, style=dotted];
m5_77 -> m5_38  [key=2, style=dotted];
m5_77 -> m5_6  [key=2, style=dotted];
m5_78 -> m5_68  [key=0, style=bold, color=blue];
m5_159 -> m5_160  [key=0, style=solid];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_84  [key=2, style=dotted];
m5_160 -> m5_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_161 -> m5_159  [key=0, style=bold, color=blue];
m5_1142 -> m5_1143  [key=0, style=solid];
m5_1142 -> m5_1147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_1142 -> m5_1148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_1143 -> m5_1144  [key=0, style=solid];
m5_1143 -> m5_237  [key=2, style=dotted];
m5_1143 -> m5_1150  [key=2, style=dotted];
m5_1143 -> m5_1151  [key=2, style=dotted];
m5_1143 -> m5_1145  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_1143 -> m5_1148  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_1147 -> m5_1149  [key=0, style=solid];
m5_1147 -> m5_1153  [key=2, style=dotted];
m5_1148 -> m5_1149  [key=0, style=solid];
m5_1148 -> m5_1154  [key=2, style=dotted];
m5_1144 -> m5_1145  [key=0, style=solid];
m5_1144 -> m5_1148  [key=0, style=solid];
m5_1145 -> m5_1146  [key=0, style=solid];
m5_1145 -> m5_1147  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1146 -> m5_1147  [key=0, style=solid];
m5_1146 -> m5_382  [key=2, style=dotted];
m5_1146 -> m5_1152  [key=2, style=dotted];
m5_1149 -> m5_1142  [key=0, style=bold, color=blue];
m5_1052 -> m5_1053  [key=0, style=solid];
m5_1053 -> m5_1054  [key=0, style=solid];
m5_1053 -> m5_1057  [key=2, style=dotted];
m5_1053 -> m5_1050  [key=2, style=dotted];
m5_1053 -> m5_1055  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_1054 -> m5_1055  [key=0, style=solid];
m5_1054 -> m5_1057  [key=2, style=dotted];
m5_1054 -> m5_6  [key=2, style=dotted];
m5_1055 -> m5_1056  [key=0, style=solid];
m5_1055 -> m5_1051  [key=2, style=dotted];
m5_1055 -> m5_6  [key=2, style=dotted];
m5_1056 -> m5_1052  [key=0, style=bold, color=blue];
m5_926 -> m5_927  [key=0, style=solid];
m5_927 -> m5_928  [key=0, style=solid];
m5_927 -> m5_84  [key=2, style=dotted];
m5_927 -> m5_929  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_928 -> m5_926  [key=0, style=bold, color=blue];
m5_594 -> m5_595  [key=0, style=solid];
m5_595 -> m5_596  [key=0, style=solid];
m5_595 -> m5_84  [key=2, style=dotted];
m5_595 -> m5_597  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_596 -> m5_594  [key=0, style=bold, color=blue];
m5_321 -> m5_322  [key=0, style=solid];
m5_322 -> m5_323  [key=0, style=solid];
m5_322 -> m5_322  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m5_323 -> m5_324  [key=0, style=solid];
m5_323 -> m5_246  [key=2, style=dotted];
m5_324 -> m5_325  [key=0, style=solid];
m5_324 -> m5_333  [key=2, style=dotted];
m5_324 -> m5_334  [key=2, style=dotted];
m5_324 -> m5_326  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m5_324 -> m5_327  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m5_324 -> m5_328  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m5_324 -> m5_329  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m5_324 -> m5_330  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m5_324 -> m5_331  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_320  [key=2, style=dotted];
m5_326 -> m5_327  [key=0, style=solid];
m5_326 -> m5_320  [key=2, style=dotted];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_6  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_6  [key=2, style=dotted];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_6  [key=2, style=dotted];
m5_330 -> m5_331  [key=0, style=solid];
m5_330 -> m5_6  [key=2, style=dotted];
m5_331 -> m5_332  [key=0, style=solid];
m5_331 -> m5_6  [key=2, style=dotted];
m5_332 -> m5_321  [key=0, style=bold, color=blue];
m5_489 -> m5_490  [key=0, style=solid];
m5_490 -> m5_491  [key=0, style=solid];
m5_490 -> m5_382  [key=2, style=dotted];
m5_490 -> m5_492  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_490 -> m5_495  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_491 -> m5_492  [key=0, style=solid];
m5_491 -> m5_382  [key=2, style=dotted];
m5_491 -> m5_496  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_492 -> m5_493  [key=0, style=solid];
m5_492 -> m5_383  [key=2, style=dotted];
m5_492 -> m5_494  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_495 -> m5_496  [key=0, style=solid];
m5_495 -> m5_6  [key=2, style=dotted];
m5_496 -> m5_497  [key=0, style=solid];
m5_496 -> m5_6  [key=2, style=dotted];
m5_493 -> m5_494  [key=0, style=solid];
m5_493 -> m5_495  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_493 -> m5_496  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_494 -> m5_495  [key=0, style=solid];
m5_494 -> m5_498  [key=2, style=dotted];
m5_497 -> m5_489  [key=0, style=bold, color=blue];
m5_190 -> m5_191  [key=0, style=solid];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_198  [key=2, style=dotted];
m5_191 -> m5_199  [key=2, style=dotted];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_200  [key=2, style=dotted];
m5_192 -> m5_194  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_192 -> m5_195  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_192 -> m5_196  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_6  [key=2, style=dotted];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_6  [key=2, style=dotted];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_6  [key=2, style=dotted];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_6  [key=2, style=dotted];
m5_197 -> m5_190  [key=0, style=bold, color=blue];
m5_81 -> m5_82  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_84  [key=2, style=dotted];
m5_82 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_83 -> m5_81  [key=0, style=bold, color=blue];
m5_201 -> m5_202  [key=0, style=solid];
m5_202 -> m5_203  [key=0, style=solid];
m5_202 -> m5_198  [key=2, style=dotted];
m5_202 -> m5_199  [key=2, style=dotted];
m5_203 -> m5_204  [key=0, style=solid];
m5_203 -> m5_200  [key=2, style=dotted];
m5_204 -> m5_205  [key=0, style=solid];
m5_204 -> m5_223  [key=2, style=dotted];
m5_204 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_207  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_208  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_210  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_211  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_212  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_213  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_214  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_215  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_216  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_218  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_219  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_220  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_204 -> m5_221  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_224  [key=2, style=dotted];
m5_205 -> m5_225  [key=2, style=dotted];
m5_206 -> m5_207  [key=0, style=solid];
m5_206 -> m5_6  [key=2, style=dotted];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_224  [key=2, style=dotted];
m5_207 -> m5_225  [key=2, style=dotted];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_6  [key=2, style=dotted];
m5_209 -> m5_210  [key=0, style=solid];
m5_209 -> m5_224  [key=2, style=dotted];
m5_209 -> m5_225  [key=2, style=dotted];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_6  [key=2, style=dotted];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_224  [key=2, style=dotted];
m5_211 -> m5_225  [key=2, style=dotted];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_6  [key=2, style=dotted];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_224  [key=2, style=dotted];
m5_213 -> m5_225  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_6  [key=2, style=dotted];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_224  [key=2, style=dotted];
m5_215 -> m5_225  [key=2, style=dotted];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_6  [key=2, style=dotted];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_224  [key=2, style=dotted];
m5_217 -> m5_225  [key=2, style=dotted];
m5_218 -> m5_219  [key=0, style=solid];
m5_218 -> m5_6  [key=2, style=dotted];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_224  [key=2, style=dotted];
m5_219 -> m5_225  [key=2, style=dotted];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_6  [key=2, style=dotted];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_224  [key=2, style=dotted];
m5_221 -> m5_226  [key=2, style=dotted];
m5_222 -> m5_201  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_12  [key=2, style=dotted];
m5_8 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_13  [key=2, style=dotted];
m5_9 -> m5_14  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_15  [key=2, style=dotted];
m5_10 -> m5_6  [key=2, style=dotted];
m5_11 -> m5_7  [key=0, style=bold, color=blue];
m5_1064 -> m5_1065  [key=0, style=solid];
m5_1065 -> m5_1066  [key=0, style=solid];
m5_1065 -> m5_84  [key=2, style=dotted];
m5_1065 -> m5_1067  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1065 -> m5_1065  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1066 -> m5_1064  [key=0, style=bold, color=blue];
m5_892 -> m5_893  [key=0, style=solid];
m5_893 -> m5_894  [key=0, style=solid];
m5_893 -> m5_382  [key=2, style=dotted];
m5_893 -> m5_895  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_894 -> m5_895  [key=0, style=solid];
m5_894 -> m5_382  [key=2, style=dotted];
m5_895 -> m5_896  [key=0, style=solid];
m5_895 -> m5_383  [key=2, style=dotted];
m5_895 -> m5_898  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_895 -> m5_900  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_895 -> m5_903  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_895 -> m5_905  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_895 -> m5_908  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_895 -> m5_909  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_895 -> m5_910  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_895 -> m5_911  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_895 -> m5_914  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_896 -> m5_897  [key=0, style=solid];
m5_896 -> m5_82  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Specialized.NotifyCollectionChangedAction? changedType"];
m5_898 -> m5_899  [key=0, style=solid];
m5_898 -> m5_917  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m5_898 -> m5_918  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m5_900 -> m5_901  [key=0, style=solid];
m5_900 -> m5_14  [key=2, style=dotted];
m5_903 -> m5_904  [key=0, style=solid];
m5_903 -> m5_6  [key=2, style=dotted];
m5_905 -> m5_906  [key=0, style=solid];
m5_908 -> m5_909  [key=0, style=solid];
m5_908 -> m5_6  [key=2, style=dotted];
m5_909 -> m5_910  [key=0, style=solid];
m5_909 -> m5_132  [key=2, style=dotted];
m5_909 -> m5_226  [key=2, style=dotted];
m5_910 -> m5_911  [key=0, style=solid];
m5_910 -> m5_132  [key=2, style=dotted];
m5_910 -> m5_225  [key=2, style=dotted];
m5_911 -> m5_912  [key=0, style=solid];
m5_914 -> m5_915  [key=0, style=solid];
m5_914 -> m5_6  [key=2, style=dotted];
m5_897 -> m5_898  [key=0, style=solid];
m5_897 -> m5_82  [key=3, color=darkorchid, style=bold, label="Local variable int? index"];
m5_899 -> m5_900  [key=0, style=solid];
m5_899 -> m5_382  [key=2, style=dotted];
m5_899 -> m5_903  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_899 -> m5_909  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_901 -> m5_902  [key=0, style=solid];
m5_901 -> m5_6  [key=2, style=dotted];
m5_902 -> m5_903  [key=0, style=solid];
m5_902 -> m5_6  [key=2, style=dotted];
m5_904 -> m5_905  [key=0, style=solid];
m5_904 -> m5_382  [key=2, style=dotted];
m5_904 -> m5_908  [key=1, style=dashed, color=darkseagreen4, label=p4];
m5_904 -> m5_910  [key=1, style=dashed, color=darkseagreen4, label=p4];
m5_906 -> m5_907  [key=0, style=solid];
m5_906 -> m5_6  [key=2, style=dotted];
m5_907 -> m5_908  [key=0, style=solid];
m5_907 -> m5_6  [key=2, style=dotted];
m5_912 -> m5_913  [key=0, style=solid];
m5_912 -> m5_6  [key=2, style=dotted];
m5_913 -> m5_914  [key=0, style=solid];
m5_913 -> m5_6  [key=2, style=dotted];
m5_915 -> m5_892  [key=0, style=bold, color=blue];
m5_180 -> m5_181  [key=0, style=solid];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_84  [key=2, style=dotted];
m5_181 -> m5_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_182 -> m5_180  [key=0, style=bold, color=blue];
m5_789 -> m5_790  [key=0, style=solid];
m5_790 -> m5_791  [key=0, style=solid];
m5_790 -> m5_12  [key=2, style=dotted];
m5_791 -> m5_792  [key=0, style=solid];
m5_791 -> m5_793  [key=2, style=dotted];
m5_792 -> m5_789  [key=0, style=bold, color=blue];
m5_518 -> m5_519  [key=0, style=solid];
m5_519 -> m5_520  [key=0, style=solid];
m5_519 -> m5_84  [key=2, style=dotted];
m5_519 -> m5_521  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_520 -> m5_518  [key=0, style=bold, color=blue];
m5_963 -> m5_964  [key=0, style=solid];
m5_964 -> m5_965  [key=0, style=solid];
m5_964 -> m5_84  [key=2, style=dotted];
m5_964 -> m5_966  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_964 -> m5_956  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_965 -> m5_963  [key=0, style=bold, color=blue];
m5_474 -> m5_475  [key=0, style=solid];
m5_475 -> m5_476  [key=0, style=solid];
m5_475 -> m5_382  [key=2, style=dotted];
m5_475 -> m5_477  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_476 -> m5_477  [key=0, style=solid];
m5_476 -> m5_472  [key=2, style=dotted];
m5_476 -> m5_478  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_477 -> m5_478  [key=0, style=solid];
m5_477 -> m5_480  [key=2, style=dotted];
m5_477 -> m5_6  [key=2, style=dotted];
m5_478 -> m5_479  [key=0, style=solid];
m5_478 -> m5_382  [key=2, style=dotted];
m5_478 -> m5_480  [key=2, style=dotted];
m5_478 -> m5_6  [key=2, style=dotted];
m5_479 -> m5_474  [key=0, style=bold, color=blue];
m5_773 -> m5_774  [key=0, style=solid];
m5_774 -> m5_775  [key=0, style=solid];
m5_774 -> m5_12  [key=2, style=dotted];
m5_775 -> m5_776  [key=0, style=solid];
m5_775 -> m5_6  [key=2, style=dotted];
m5_776 -> m5_773  [key=0, style=bold, color=blue];
m5_802 -> m5_803  [key=0, style=solid];
m5_803 -> m5_804  [key=0, style=solid];
m5_803 -> m5_84  [key=2, style=dotted];
m5_803 -> m5_805  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_804 -> m5_802  [key=0, style=bold, color=blue];
m5_527 -> m5_528  [key=0, style=solid];
m5_528 -> m5_529  [key=0, style=solid];
m5_528 -> m5_84  [key=2, style=dotted];
m5_528 -> m5_530  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_529 -> m5_527  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_6  [key=2, style=dotted];
m5_4 -> m5_0  [key=0, style=bold, color=blue];
m5_227 -> m5_228  [key=0, style=solid];
m5_228 -> m5_229  [key=0, style=solid];
m5_228 -> m5_198  [key=2, style=dotted];
m5_228 -> m5_199  [key=2, style=dotted];
m5_229 -> m5_230  [key=0, style=solid];
m5_229 -> m5_200  [key=2, style=dotted];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_223  [key=2, style=dotted];
m5_230 -> m5_232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_237  [key=2, style=dotted];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_238  [key=2, style=dotted];
m5_232 -> m5_234  [key=1, style=dashed, color=darkseagreen4, label=raw];
m5_232 -> m5_235  [key=1, style=dashed, color=darkseagreen4, label=raw];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_6  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_6  [key=2, style=dotted];
m5_235 -> m5_236  [key=0, style=solid];
m5_235 -> m5_6  [key=2, style=dotted];
m5_236 -> m5_227  [key=0, style=bold, color=blue];
m5_300 -> m5_301  [key=0, style=solid];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_82  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m5_302 -> m5_303  [key=0, style=solid];
m5_302 -> m5_310  [key=2, style=dotted];
m5_302 -> m5_304  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_302 -> m5_306  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_6  [key=2, style=dotted];
m5_304 -> m5_305  [key=0, style=solid];
m5_304 -> m5_6  [key=2, style=dotted];
m5_306 -> m5_307  [key=0, style=solid];
m5_305 -> m5_306  [key=0, style=solid];
m5_305 -> m5_12  [key=2, style=dotted];
m5_305 -> m5_307  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_307 -> m5_308  [key=0, style=solid];
m5_307 -> m5_15  [key=2, style=dotted];
m5_308 -> m5_309  [key=0, style=solid];
m5_308 -> m5_6  [key=2, style=dotted];
m5_309 -> m5_300  [key=0, style=bold, color=blue];
m5_335 -> m5_336  [key=0, style=solid];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_12  [key=2, style=dotted];
m5_336 -> m5_338  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_336 -> m5_339  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_336 -> m5_340  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_337 -> m5_338  [key=0, style=solid];
m5_337 -> m5_35  [key=2, style=dotted];
m5_338 -> m5_339  [key=0, style=solid];
m5_338 -> m5_310  [key=2, style=dotted];
m5_339 -> m5_340  [key=0, style=solid];
m5_339 -> m5_310  [key=2, style=dotted];
m5_340 -> m5_341  [key=0, style=solid];
m5_340 -> m5_15  [key=2, style=dotted];
m5_340 -> m5_6  [key=2, style=dotted];
m5_341 -> m5_335  [key=0, style=bold, color=blue];
m5_1117 -> m5_1118  [key=0, style=solid];
m5_1118 -> m5_1119  [key=0, style=solid];
m5_1118 -> m5_12  [key=2, style=dotted];
m5_1118 -> m5_1120  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1121  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1122  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1123  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1124  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1125  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1126  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1127  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1128  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1130  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1132  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1133  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1134  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1136  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1118 -> m5_1138  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_1119 -> m5_1120  [key=0, style=solid];
m5_1120 -> m5_1121  [key=0, style=solid];
m5_1121 -> m5_1122  [key=0, style=solid];
m5_1122 -> m5_1123  [key=0, style=solid];
m5_1122 -> m5_1116  [key=2, style=dotted];
m5_1122 -> m5_6  [key=2, style=dotted];
m5_1123 -> m5_1124  [key=0, style=solid];
m5_1123 -> m5_1140  [key=2, style=dotted];
m5_1123 -> m5_6  [key=2, style=dotted];
m5_1124 -> m5_1125  [key=0, style=solid];
m5_1124 -> m5_1140  [key=2, style=dotted];
m5_1124 -> m5_6  [key=2, style=dotted];
m5_1125 -> m5_1126  [key=0, style=solid];
m5_1125 -> m5_1116  [key=2, style=dotted];
m5_1125 -> m5_6  [key=2, style=dotted];
m5_1126 -> m5_1127  [key=0, style=solid];
m5_1126 -> m5_1116  [key=2, style=dotted];
m5_1126 -> m5_6  [key=2, style=dotted];
m5_1127 -> m5_1128  [key=0, style=solid];
m5_1127 -> m5_1116  [key=2, style=dotted];
m5_1127 -> m5_6  [key=2, style=dotted];
m5_1128 -> m5_1129  [key=0, style=solid];
m5_1128 -> m5_1140  [key=2, style=dotted];
m5_1128 -> m5_6  [key=2, style=dotted];
m5_1130 -> m5_1131  [key=0, style=solid];
m5_1130 -> m5_1141  [key=2, style=dotted];
m5_1130 -> m5_226  [key=2, style=dotted];
m5_1132 -> m5_1133  [key=0, style=solid];
m5_1132 -> m5_39  [key=2, style=dotted];
m5_1132 -> m5_226  [key=2, style=dotted];
m5_1133 -> m5_1134  [key=0, style=solid];
m5_1133 -> m5_39  [key=2, style=dotted];
m5_1133 -> m5_226  [key=2, style=dotted];
m5_1134 -> m5_1135  [key=0, style=solid];
m5_1134 -> m5_1141  [key=2, style=dotted];
m5_1134 -> m5_225  [key=2, style=dotted];
m5_1136 -> m5_1137  [key=0, style=solid];
m5_1136 -> m5_1141  [key=2, style=dotted];
m5_1136 -> m5_225  [key=2, style=dotted];
m5_1138 -> m5_1139  [key=0, style=solid];
m5_1138 -> m5_1141  [key=2, style=dotted];
m5_1138 -> m5_226  [key=2, style=dotted];
m5_1129 -> m5_1130  [key=0, style=solid];
m5_1131 -> m5_1132  [key=0, style=solid];
m5_1131 -> m5_6  [key=2, style=dotted];
m5_1135 -> m5_1136  [key=0, style=solid];
m5_1135 -> m5_6  [key=2, style=dotted];
m5_1137 -> m5_1138  [key=0, style=solid];
m5_1137 -> m5_6  [key=2, style=dotted];
m5_1139 -> m5_1117  [key=0, style=bold, color=blue];
m5_864 -> m5_865  [key=0, style=solid];
m5_865 -> m5_866  [key=0, style=solid];
m5_865 -> m5_382  [key=2, style=dotted];
m5_865 -> m5_867  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_866 -> m5_867  [key=0, style=solid];
m5_866 -> m5_382  [key=2, style=dotted];
m5_867 -> m5_868  [key=0, style=solid];
m5_867 -> m5_383  [key=2, style=dotted];
m5_867 -> m5_870  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_867 -> m5_872  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_867 -> m5_875  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_867 -> m5_877  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_867 -> m5_880  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_867 -> m5_881  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_867 -> m5_882  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_867 -> m5_883  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_867 -> m5_886  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_868 -> m5_869  [key=0, style=solid];
m5_868 -> m5_82  [key=3, color=darkorchid, style=bold, label="Local variable System.ComponentModel.ListChangedType? changedType"];
m5_870 -> m5_871  [key=0, style=solid];
m5_870 -> m5_889  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m5_870 -> m5_890  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m5_872 -> m5_873  [key=0, style=solid];
m5_872 -> m5_14  [key=2, style=dotted];
m5_875 -> m5_876  [key=0, style=solid];
m5_875 -> m5_6  [key=2, style=dotted];
m5_877 -> m5_878  [key=0, style=solid];
m5_880 -> m5_881  [key=0, style=solid];
m5_880 -> m5_6  [key=2, style=dotted];
m5_881 -> m5_882  [key=0, style=solid];
m5_881 -> m5_132  [key=2, style=dotted];
m5_881 -> m5_226  [key=2, style=dotted];
m5_882 -> m5_883  [key=0, style=solid];
m5_882 -> m5_132  [key=2, style=dotted];
m5_882 -> m5_225  [key=2, style=dotted];
m5_883 -> m5_884  [key=0, style=solid];
m5_886 -> m5_887  [key=0, style=solid];
m5_886 -> m5_6  [key=2, style=dotted];
m5_869 -> m5_870  [key=0, style=solid];
m5_869 -> m5_82  [key=3, color=darkorchid, style=bold, label="Local variable int? index"];
m5_871 -> m5_872  [key=0, style=solid];
m5_871 -> m5_382  [key=2, style=dotted];
m5_871 -> m5_875  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_871 -> m5_881  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_873 -> m5_874  [key=0, style=solid];
m5_873 -> m5_6  [key=2, style=dotted];
m5_874 -> m5_875  [key=0, style=solid];
m5_874 -> m5_6  [key=2, style=dotted];
m5_876 -> m5_877  [key=0, style=solid];
m5_876 -> m5_382  [key=2, style=dotted];
m5_876 -> m5_880  [key=1, style=dashed, color=darkseagreen4, label=p4];
m5_876 -> m5_882  [key=1, style=dashed, color=darkseagreen4, label=p4];
m5_878 -> m5_879  [key=0, style=solid];
m5_878 -> m5_6  [key=2, style=dotted];
m5_879 -> m5_880  [key=0, style=solid];
m5_879 -> m5_6  [key=2, style=dotted];
m5_884 -> m5_885  [key=0, style=solid];
m5_884 -> m5_6  [key=2, style=dotted];
m5_885 -> m5_886  [key=0, style=solid];
m5_885 -> m5_6  [key=2, style=dotted];
m5_887 -> m5_864  [key=0, style=bold, color=blue];
m5_1067 -> m5_1068  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_12  [key=2, style=dotted];
m5_86 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_36  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_36  [key=2, style=dotted];
m5_89 -> m5_85  [key=0, style=bold, color=blue];
m5_162 -> m5_163  [key=0, style=solid];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_12  [key=2, style=dotted];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_158  [key=2, style=dotted];
m5_165 -> m5_162  [key=0, style=bold, color=blue];
m5_169 -> m5_170  [key=0, style=solid];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_12  [key=2, style=dotted];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_158  [key=2, style=dotted];
m5_172 -> m5_169  [key=0, style=bold, color=blue];
m5_176 -> m5_177  [key=0, style=solid];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_12  [key=2, style=dotted];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_158  [key=2, style=dotted];
m5_179 -> m5_176  [key=0, style=bold, color=blue];
m5_183 -> m5_184  [key=0, style=solid];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_12  [key=2, style=dotted];
m5_184 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_184 -> m5_187  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_184 -> m5_188  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_35  [key=2, style=dotted];
m5_185 -> m5_36  [key=2, style=dotted];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_35  [key=2, style=dotted];
m5_186 -> m5_36  [key=2, style=dotted];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_35  [key=2, style=dotted];
m5_187 -> m5_36  [key=2, style=dotted];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_158  [key=2, style=dotted];
m5_189 -> m5_183  [key=0, style=bold, color=blue];
m5_242 -> m5_243  [key=0, style=solid];
m5_243 -> m5_244  [key=0, style=solid];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_246  [key=2, style=dotted];
m5_245 -> m5_242  [key=0, style=bold, color=blue];
m5_269 -> m5_270  [key=0, style=solid];
m5_270 -> m5_271  [key=0, style=solid];
m5_270 -> m5_246  [key=2, style=dotted];
m5_271 -> m5_269  [key=0, style=bold, color=blue];
m5_426 -> m5_427  [key=0, style=solid];
m5_427 -> m5_428  [key=0, style=solid];
m5_427 -> m5_395  [key=1, style=dashed, color=darkseagreen4, label=changing];
m5_427 -> m5_404  [key=1, style=dashed, color=darkseagreen4, label=changing];
m5_427 -> m5_410  [key=1, style=dashed, color=darkseagreen4, label=changing];
m5_427 -> m5_416  [key=1, style=dashed, color=darkseagreen4, label=changing];
m5_427 -> m5_429  [key=1, style=dashed, color=darkseagreen4, label=changing];
m5_428 -> m5_429  [key=0, style=solid];
m5_428 -> m5_428  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_428 -> m5_398  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_428 -> m5_401  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_428 -> m5_407  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_428 -> m5_413  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_428 -> m5_419  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_428 -> m5_422  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_431 -> m5_432  [key=0, style=solid];
m5_432 -> m5_433  [key=0, style=solid];
m5_432 -> m5_396  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_432 -> m5_405  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_432 -> m5_411  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_432 -> m5_417  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_432 -> m5_434  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_433 -> m5_434  [key=0, style=solid];
m5_433 -> m5_433  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_433 -> m5_399  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_433 -> m5_402  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_433 -> m5_408  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_433 -> m5_414  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_433 -> m5_420  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_433 -> m5_423  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_425 -> m5_426  [key=0, style=solid];
m5_425 -> m5_427  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangingEventArgs"];
m5_429 -> m5_425  [key=0, style=bold, color=blue];
m5_430 -> m5_431  [key=0, style=solid];
m5_430 -> m5_432  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangedEventArgs"];
m5_434 -> m5_430  [key=0, style=bold, color=blue];
m5_462 -> m5_463  [key=0, style=solid];
m5_463 -> m5_464  [key=0, style=solid];
m5_463 -> m5_441  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_463 -> m5_447  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_463 -> m5_451  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_463 -> m5_455  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_463 -> m5_465  [key=1, style=dashed, color=darkseagreen4, label=changed];
m5_464 -> m5_465  [key=0, style=solid];
m5_464 -> m5_464  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_464 -> m5_443  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_464 -> m5_445  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_464 -> m5_449  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_464 -> m5_453  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_464 -> m5_457  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_464 -> m5_459  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_461 -> m5_462  [key=0, style=solid];
m5_461 -> m5_463  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangedEventArgs"];
m5_465 -> m5_461  [key=0, style=bold, color=blue];
m5_512 -> m5_513  [key=0, style=solid];
m5_513 -> m5_514  [key=0, style=solid];
m5_513 -> m5_382  [key=2, style=dotted];
m5_513 -> m5_515  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_514 -> m5_515  [key=0, style=solid];
m5_514 -> m5_382  [key=2, style=dotted];
m5_515 -> m5_516  [key=0, style=solid];
m5_515 -> m5_383  [key=2, style=dotted];
m5_516 -> m5_517  [key=0, style=solid];
m5_516 -> m5_310  [key=2, style=dotted];
m5_516 -> m5_508  [key=2, style=dotted];
m5_517 -> m5_512  [key=0, style=bold, color=blue];
m5_521 -> m5_522  [key=0, style=solid];
m5_522 -> m5_523  [key=0, style=solid];
m5_522 -> m5_382  [key=2, style=dotted];
m5_522 -> m5_524  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_523 -> m5_524  [key=0, style=solid];
m5_523 -> m5_382  [key=2, style=dotted];
m5_524 -> m5_525  [key=0, style=solid];
m5_524 -> m5_383  [key=2, style=dotted];
m5_525 -> m5_526  [key=0, style=solid];
m5_525 -> m5_508  [key=2, style=dotted];
m5_526 -> m5_521  [key=0, style=bold, color=blue];
m5_530 -> m5_531  [key=0, style=solid];
m5_531 -> m5_532  [key=0, style=solid];
m5_531 -> m5_382  [key=2, style=dotted];
m5_531 -> m5_533  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_532 -> m5_533  [key=0, style=solid];
m5_532 -> m5_382  [key=2, style=dotted];
m5_533 -> m5_534  [key=0, style=solid];
m5_533 -> m5_383  [key=2, style=dotted];
m5_533 -> m5_535  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_534 -> m5_535  [key=0, style=solid];
m5_534 -> m5_382  [key=2, style=dotted];
m5_535 -> m5_536  [key=0, style=solid];
m5_535 -> m5_508  [key=2, style=dotted];
m5_536 -> m5_530  [key=0, style=bold, color=blue];
m5_597 -> m5_598  [key=0, style=solid];
m5_598 -> m5_599  [key=0, style=solid];
m5_598 -> m5_382  [key=2, style=dotted];
m5_598 -> m5_600  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_599 -> m5_600  [key=0, style=solid];
m5_599 -> m5_382  [key=2, style=dotted];
m5_600 -> m5_601  [key=0, style=solid];
m5_600 -> m5_383  [key=2, style=dotted];
m5_600 -> m5_602  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_600 -> m5_603  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_601 -> m5_602  [key=0, style=solid];
m5_601 -> m5_382  [key=2, style=dotted];
m5_601 -> m5_603  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_602 -> m5_603  [key=0, style=solid];
m5_603 -> m5_604  [key=0, style=solid];
m5_604 -> m5_597  [key=0, style=bold, color=blue];
m5_608 -> m5_609  [key=0, style=solid];
m5_609 -> m5_610  [key=0, style=solid];
m5_609 -> m5_382  [key=2, style=dotted];
m5_609 -> m5_611  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_610 -> m5_611  [key=0, style=solid];
m5_610 -> m5_382  [key=2, style=dotted];
m5_611 -> m5_612  [key=0, style=solid];
m5_611 -> m5_383  [key=2, style=dotted];
m5_612 -> m5_613  [key=0, style=solid];
m5_612 -> m5_614  [key=2, style=dotted];
m5_613 -> m5_608  [key=0, style=bold, color=blue];
m5_669 -> m5_670  [key=0, style=solid];
m5_670 -> m5_671  [key=0, style=solid];
m5_670 -> m5_382  [key=2, style=dotted];
m5_670 -> m5_672  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_671 -> m5_672  [key=0, style=solid];
m5_671 -> m5_382  [key=2, style=dotted];
m5_672 -> m5_673  [key=0, style=solid];
m5_672 -> m5_383  [key=2, style=dotted];
m5_673 -> m5_674  [key=0, style=solid];
m5_673 -> m5_310  [key=2, style=dotted];
m5_673 -> m5_104  [key=2, style=dotted];
m5_674 -> m5_669  [key=0, style=bold, color=blue];
m5_678 -> m5_679  [key=0, style=solid];
m5_679 -> m5_680  [key=0, style=solid];
m5_679 -> m5_382  [key=2, style=dotted];
m5_679 -> m5_681  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_680 -> m5_681  [key=0, style=solid];
m5_680 -> m5_382  [key=2, style=dotted];
m5_681 -> m5_682  [key=0, style=solid];
m5_681 -> m5_383  [key=2, style=dotted];
m5_682 -> m5_683  [key=0, style=solid];
m5_682 -> m5_104  [key=2, style=dotted];
m5_683 -> m5_678  [key=0, style=bold, color=blue];
m5_687 -> m5_688  [key=0, style=solid];
m5_688 -> m5_689  [key=0, style=solid];
m5_688 -> m5_382  [key=2, style=dotted];
m5_688 -> m5_690  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_689 -> m5_690  [key=0, style=solid];
m5_689 -> m5_382  [key=2, style=dotted];
m5_690 -> m5_691  [key=0, style=solid];
m5_690 -> m5_383  [key=2, style=dotted];
m5_690 -> m5_692  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_691 -> m5_692  [key=0, style=solid];
m5_691 -> m5_382  [key=2, style=dotted];
m5_692 -> m5_693  [key=0, style=solid];
m5_692 -> m5_104  [key=2, style=dotted];
m5_693 -> m5_687  [key=0, style=bold, color=blue];
m5_749 -> m5_750  [key=0, style=solid];
m5_750 -> m5_751  [key=0, style=solid];
m5_750 -> m5_382  [key=2, style=dotted];
m5_750 -> m5_752  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_751 -> m5_752  [key=0, style=solid];
m5_751 -> m5_382  [key=2, style=dotted];
m5_752 -> m5_753  [key=0, style=solid];
m5_752 -> m5_383  [key=2, style=dotted];
m5_752 -> m5_754  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_752 -> m5_755  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_753 -> m5_754  [key=0, style=solid];
m5_753 -> m5_382  [key=2, style=dotted];
m5_753 -> m5_755  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_754 -> m5_755  [key=0, style=solid];
m5_755 -> m5_756  [key=0, style=solid];
m5_756 -> m5_749  [key=0, style=bold, color=blue];
m5_797 -> m5_798  [key=0, style=solid];
m5_798 -> m5_799  [key=0, style=solid];
m5_798 -> m5_12  [key=2, style=dotted];
m5_799 -> m5_800  [key=0, style=solid];
m5_799 -> m5_801  [key=2, style=dotted];
m5_800 -> m5_797  [key=0, style=bold, color=blue];
m5_805 -> m5_806  [key=0, style=solid];
m5_806 -> m5_807  [key=0, style=solid];
m5_806 -> m5_12  [key=2, style=dotted];
m5_807 -> m5_808  [key=0, style=solid];
m5_807 -> m5_809  [key=2, style=dotted];
m5_808 -> m5_805  [key=0, style=bold, color=blue];
m5_818 -> m5_819  [key=0, style=solid];
m5_819 -> m5_820  [key=0, style=solid];
m5_819 -> m5_12  [key=2, style=dotted];
m5_820 -> m5_821  [key=0, style=solid];
m5_820 -> m5_822  [key=2, style=dotted];
m5_821 -> m5_818  [key=0, style=bold, color=blue];
m5_830 -> m5_831  [key=0, style=solid];
m5_831 -> m5_832  [key=0, style=solid];
m5_831 -> m5_12  [key=2, style=dotted];
m5_832 -> m5_833  [key=0, style=solid];
m5_832 -> m5_834  [key=2, style=dotted];
m5_833 -> m5_830  [key=0, style=bold, color=blue];
m5_846 -> m5_847  [key=0, style=solid];
m5_846 -> m5_13  [key=2, style=dotted];
m5_845 -> m5_846  [key=0, style=solid];
m5_847 -> m5_845  [key=0, style=bold, color=blue];
m5_889 -> m5_890  [key=0, style=solid];
m5_889 -> m5_873  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m5_889 -> m5_878  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m5_889 -> m5_884  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m5_889 -> m5_891  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m5_890 -> m5_891  [key=0, style=solid];
m5_890 -> m5_874  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_890 -> m5_875  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_890 -> m5_877  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_890 -> m5_879  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_890 -> m5_880  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_890 -> m5_885  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_888 -> m5_889  [key=0, style=solid];
m5_888 -> m5_890  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m5_891 -> m5_888  [key=0, style=bold, color=blue];
m5_917 -> m5_918  [key=0, style=solid];
m5_917 -> m5_901  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m5_917 -> m5_906  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m5_917 -> m5_912  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m5_917 -> m5_919  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m5_918 -> m5_919  [key=0, style=solid];
m5_918 -> m5_902  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_918 -> m5_903  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_918 -> m5_905  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_918 -> m5_907  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_918 -> m5_908  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_918 -> m5_913  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_916 -> m5_917  [key=0, style=solid];
m5_916 -> m5_918  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m5_919 -> m5_916  [key=0, style=bold, color=blue];
m5_929 -> m5_930  [key=0, style=solid];
m5_930 -> m5_931  [key=0, style=solid];
m5_930 -> m5_12  [key=2, style=dotted];
m5_931 -> m5_932  [key=0, style=solid];
m5_931 -> m5_35  [key=2, style=dotted];
m5_932 -> m5_929  [key=0, style=bold, color=blue];
m5_958 -> m5_959  [key=0, style=solid];
m5_959 -> m5_960  [key=0, style=solid];
m5_960 -> m5_961  [key=0, style=solid];
m5_960 -> m5_246  [key=2, style=dotted];
m5_961 -> m5_962  [key=0, style=solid];
m5_962 -> m5_958  [key=0, style=bold, color=blue];
m5_966 -> m5_967  [key=0, style=solid];
m5_967 -> m5_968  [key=0, style=solid];
m5_968 -> m5_969  [key=0, style=solid];
m5_968 -> m5_246  [key=2, style=dotted];
m5_969 -> m5_970  [key=0, style=solid];
m5_969 -> m5_971  [key=2, style=dotted];
m5_970 -> m5_966  [key=0, style=bold, color=blue];
m5_975 -> m5_976  [key=0, style=solid];
m5_976 -> m5_977  [key=0, style=solid];
m5_976 -> m5_246  [key=2, style=dotted];
m5_977 -> m5_975  [key=0, style=bold, color=blue];
m5_997 -> m5_998  [key=0, style=solid];
m5_998 -> m5_999  [key=0, style=solid];
m5_999 -> m5_1000  [key=0, style=solid];
m5_999 -> m5_990  [key=2, style=dotted];
m5_999 -> m5_991  [key=2, style=dotted];
m5_999 -> m5_1001  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_999 -> m5_1002  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_999 -> m5_1003  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_999 -> m5_1004  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_999 -> m5_1005  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1000 -> m5_1001  [key=0, style=solid];
m5_1000 -> m5_224  [key=2, style=dotted];
m5_1001 -> m5_1002  [key=0, style=solid];
m5_1001 -> m5_224  [key=2, style=dotted];
m5_1002 -> m5_1003  [key=0, style=solid];
m5_1002 -> m5_224  [key=2, style=dotted];
m5_1003 -> m5_1004  [key=0, style=solid];
m5_1003 -> m5_224  [key=2, style=dotted];
m5_1004 -> m5_1005  [key=0, style=solid];
m5_1004 -> m5_224  [key=2, style=dotted];
m5_1005 -> m5_1006  [key=0, style=solid];
m5_1005 -> m5_992  [key=2, style=dotted];
m5_1006 -> m5_997  [key=0, style=bold, color=blue];
m5_1068 -> m5_1069  [key=0, style=solid];
m5_1069 -> m5_1070  [key=0, style=solid];
m5_1069 -> m5_246  [key=2, style=dotted];
m5_1070 -> m5_1067  [key=0, style=bold, color=blue];
m5_466 -> m5_467  [key=0, style=solid];
m5_467 -> m5_468  [key=0, style=solid];
m5_467 -> m5_382  [key=2, style=dotted];
m5_467 -> m5_469  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_468 -> m5_469  [key=0, style=solid];
m5_468 -> m5_472  [key=2, style=dotted];
m5_468 -> m5_470  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_469 -> m5_470  [key=0, style=solid];
m5_469 -> m5_473  [key=2, style=dotted];
m5_469 -> m5_225  [key=2, style=dotted];
m5_470 -> m5_471  [key=0, style=solid];
m5_470 -> m5_382  [key=2, style=dotted];
m5_470 -> m5_473  [key=2, style=dotted];
m5_470 -> m5_226  [key=2, style=dotted];
m5_471 -> m5_466  [key=0, style=bold, color=blue];
m5_939 -> m5_940  [key=0, style=solid];
m5_940 -> m5_941  [key=0, style=solid];
m5_940 -> m5_940  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_941 -> m5_942  [key=0, style=solid];
m5_941 -> m5_246  [key=2, style=dotted];
m5_942 -> m5_943  [key=0, style=solid];
m5_943 -> m5_944  [key=0, style=solid];
m5_943 -> m5_6  [key=2, style=dotted];
m5_944 -> m5_939  [key=0, style=bold, color=blue];
m5_1109 -> m5_1110  [key=0, style=solid];
m5_1110 -> m5_1111  [key=0, style=solid];
m5_1110 -> m5_246  [key=2, style=dotted];
m5_1110 -> m5_1112  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_1111 -> m5_1112  [key=0, style=solid];
m5_1111 -> m5_1116  [key=2, style=dotted];
m5_1111 -> m5_1113  [key=1, style=dashed, color=darkseagreen4, label=exactMatch];
m5_1112 -> m5_1113  [key=0, style=solid];
m5_1112 -> m5_1116  [key=2, style=dotted];
m5_1112 -> m5_1114  [key=1, style=dashed, color=darkseagreen4, label=ignoreCase];
m5_1113 -> m5_1114  [key=0, style=solid];
m5_1113 -> m5_6  [key=2, style=dotted];
m5_1114 -> m5_1115  [key=0, style=solid];
m5_1114 -> m5_6  [key=2, style=dotted];
m5_1115 -> m5_1109  [key=0, style=bold, color=blue];
m5_721 -> m5_722  [key=0, style=solid];
m5_722 -> m5_723  [key=0, style=solid];
m5_722 -> m5_382  [key=2, style=dotted];
m5_722 -> m5_724  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_722 -> m5_728  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_723 -> m5_724  [key=0, style=solid];
m5_723 -> m5_382  [key=2, style=dotted];
m5_723 -> m5_730  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_724 -> m5_725  [key=0, style=solid];
m5_724 -> m5_383  [key=2, style=dotted];
m5_724 -> m5_726  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_724 -> m5_727  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_724 -> m5_728  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_724 -> m5_729  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_724 -> m5_730  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_728 -> m5_729  [key=0, style=solid];
m5_728 -> m5_6  [key=2, style=dotted];
m5_730 -> m5_731  [key=0, style=solid];
m5_730 -> m5_6  [key=2, style=dotted];
m5_725 -> m5_726  [key=0, style=solid];
m5_725 -> m5_382  [key=2, style=dotted];
m5_725 -> m5_727  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_725 -> m5_729  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_726 -> m5_727  [key=0, style=solid];
m5_726 -> m5_732  [key=2, style=dotted];
m5_727 -> m5_728  [key=0, style=solid];
m5_727 -> m5_6  [key=2, style=dotted];
m5_729 -> m5_730  [key=0, style=solid];
m5_729 -> m5_6  [key=2, style=dotted];
m5_731 -> m5_721  [key=0, style=bold, color=blue];
m5_978 -> m5_979  [key=0, style=solid];
m5_979 -> m5_980  [key=0, style=solid];
m5_979 -> m5_979  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m5_980 -> m5_981  [key=0, style=solid];
m5_980 -> m5_990  [key=2, style=dotted];
m5_980 -> m5_991  [key=2, style=dotted];
m5_980 -> m5_982  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_980 -> m5_983  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_980 -> m5_984  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_980 -> m5_985  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_980 -> m5_986  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_981 -> m5_982  [key=0, style=solid];
m5_981 -> m5_224  [key=2, style=dotted];
m5_982 -> m5_983  [key=0, style=solid];
m5_982 -> m5_224  [key=2, style=dotted];
m5_983 -> m5_984  [key=0, style=solid];
m5_983 -> m5_224  [key=2, style=dotted];
m5_984 -> m5_985  [key=0, style=solid];
m5_984 -> m5_224  [key=2, style=dotted];
m5_985 -> m5_986  [key=0, style=solid];
m5_985 -> m5_224  [key=2, style=dotted];
m5_986 -> m5_987  [key=0, style=solid];
m5_986 -> m5_992  [key=2, style=dotted];
m5_986 -> m5_988  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_987 -> m5_988  [key=0, style=solid];
m5_987 -> m5_621  [key=2, style=dotted];
m5_988 -> m5_989  [key=0, style=solid];
m5_988 -> m5_993  [key=2, style=dotted];
m5_988 -> m5_6  [key=2, style=dotted];
m5_989 -> m5_978  [key=0, style=bold, color=blue];
m5_815 -> m5_816  [key=0, style=solid];
m5_816 -> m5_817  [key=0, style=solid];
m5_816 -> m5_84  [key=2, style=dotted];
m5_816 -> m5_818  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_817 -> m5_815  [key=0, style=bold, color=blue];
m5_272 -> m5_273  [key=0, style=solid];
m5_273 -> m5_274  [key=0, style=solid];
m5_273 -> m5_12  [key=2, style=dotted];
m5_273 -> m5_275  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_273 -> m5_276  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_274 -> m5_275  [key=0, style=solid];
m5_274 -> m5_199  [key=2, style=dotted];
m5_275 -> m5_276  [key=0, style=solid];
m5_275 -> m5_199  [key=2, style=dotted];
m5_276 -> m5_277  [key=0, style=solid];
m5_276 -> m5_15  [key=2, style=dotted];
m5_277 -> m5_278  [key=0, style=solid];
m5_277 -> m5_6  [key=2, style=dotted];
m5_278 -> m5_272  [key=0, style=bold, color=blue];
m5_1058 -> m5_1059  [key=0, style=solid];
m5_1059 -> m5_1060  [key=0, style=solid];
m5_1059 -> m5_1063  [key=2, style=dotted];
m5_1059 -> m5_1050  [key=2, style=dotted];
m5_1059 -> m5_1061  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_1060 -> m5_1061  [key=0, style=solid];
m5_1060 -> m5_1063  [key=2, style=dotted];
m5_1060 -> m5_6  [key=2, style=dotted];
m5_1061 -> m5_1062  [key=0, style=solid];
m5_1061 -> m5_1051  [key=2, style=dotted];
m5_1061 -> m5_6  [key=2, style=dotted];
m5_1062 -> m5_1058  [key=0, style=bold, color=blue];
m5_98 -> m5_99  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_12  [key=2, style=dotted];
m5_99 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_99 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_79  [key=2, style=dotted];
m5_100 -> m5_35  [key=2, style=dotted];
m5_100 -> m5_104  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_6  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_37  [key=2, style=dotted];
m5_102 -> m5_38  [key=2, style=dotted];
m5_102 -> m5_6  [key=2, style=dotted];
m5_103 -> m5_98  [key=0, style=bold, color=blue];
m5_666 -> m5_667  [key=0, style=solid];
m5_667 -> m5_668  [key=0, style=solid];
m5_667 -> m5_84  [key=2, style=dotted];
m5_667 -> m5_669  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_668 -> m5_666  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_12  [key=2, style=dotted];
m5_59 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_59 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_59 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_59 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_59 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_35  [key=2, style=dotted];
m5_60 -> m5_36  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_37  [key=2, style=dotted];
m5_61 -> m5_38  [key=2, style=dotted];
m5_61 -> m5_6  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_67  [key=2, style=dotted];
m5_62 -> m5_6  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_67  [key=2, style=dotted];
m5_63 -> m5_6  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_67  [key=2, style=dotted];
m5_64 -> m5_6  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_37  [key=2, style=dotted];
m5_65 -> m5_38  [key=2, style=dotted];
m5_65 -> m5_6  [key=2, style=dotted];
m5_66 -> m5_58  [key=0, style=bold, color=blue];
m5_509 -> m5_510  [key=0, style=solid];
m5_510 -> m5_511  [key=0, style=solid];
m5_510 -> m5_84  [key=2, style=dotted];
m5_510 -> m5_512  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_511 -> m5_509  [key=0, style=bold, color=blue];
m5_615 -> m5_616  [key=0, style=solid];
m5_616 -> m5_617  [key=0, style=solid];
m5_616 -> m5_382  [key=2, style=dotted];
m5_616 -> m5_618  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_617 -> m5_618  [key=0, style=solid];
m5_617 -> m5_382  [key=2, style=dotted];
m5_618 -> m5_619  [key=0, style=solid];
m5_618 -> m5_383  [key=2, style=dotted];
m5_619 -> m5_620  [key=0, style=solid];
m5_619 -> m5_621  [key=2, style=dotted];
m5_620 -> m5_615  [key=0, style=bold, color=blue];
m5_481 -> m5_482  [key=0, style=solid];
m5_482 -> m5_483  [key=0, style=solid];
m5_482 -> m5_382  [key=2, style=dotted];
m5_483 -> m5_484  [key=0, style=solid];
m5_483 -> m5_472  [key=2, style=dotted];
m5_483 -> m5_485  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_483 -> m5_486  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_484 -> m5_485  [key=0, style=solid];
m5_484 -> m5_6  [key=2, style=dotted];
m5_485 -> m5_486  [key=0, style=solid];
m5_485 -> m5_488  [key=2, style=dotted];
m5_486 -> m5_487  [key=0, style=solid];
m5_486 -> m5_6  [key=2, style=dotted];
m5_487 -> m5_481  [key=0, style=bold, color=blue];
m5_537 -> m5_538  [key=0, style=solid];
m5_538 -> m5_539  [key=0, style=solid];
m5_538 -> m5_382  [key=2, style=dotted];
m5_538 -> m5_540  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_538 -> m5_544  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_538 -> m5_546  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_539 -> m5_540  [key=0, style=solid];
m5_539 -> m5_382  [key=2, style=dotted];
m5_539 -> m5_547  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_539 -> m5_548  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_539 -> m5_550  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_539 -> m5_551  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_540 -> m5_541  [key=0, style=solid];
m5_540 -> m5_383  [key=2, style=dotted];
m5_540 -> m5_542  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_540 -> m5_543  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_540 -> m5_544  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_540 -> m5_545  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_540 -> m5_546  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_540 -> m5_547  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_540 -> m5_548  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_540 -> m5_549  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_540 -> m5_550  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_544 -> m5_545  [key=0, style=solid];
m5_544 -> m5_553  [key=2, style=dotted];
m5_546 -> m5_547  [key=0, style=solid];
m5_546 -> m5_473  [key=2, style=dotted];
m5_546 -> m5_226  [key=2, style=dotted];
m5_547 -> m5_548  [key=0, style=solid];
m5_547 -> m5_473  [key=2, style=dotted];
m5_547 -> m5_225  [key=2, style=dotted];
m5_548 -> m5_549  [key=0, style=solid];
m5_548 -> m5_553  [key=2, style=dotted];
m5_550 -> m5_551  [key=0, style=solid];
m5_550 -> m5_473  [key=2, style=dotted];
m5_550 -> m5_226  [key=2, style=dotted];
m5_551 -> m5_552  [key=0, style=solid];
m5_551 -> m5_6  [key=2, style=dotted];
m5_541 -> m5_542  [key=0, style=solid];
m5_541 -> m5_382  [key=2, style=dotted];
m5_542 -> m5_543  [key=0, style=solid];
m5_542 -> m5_553  [key=2, style=dotted];
m5_543 -> m5_544  [key=0, style=solid];
m5_543 -> m5_6  [key=2, style=dotted];
m5_545 -> m5_546  [key=0, style=solid];
m5_545 -> m5_6  [key=2, style=dotted];
m5_549 -> m5_550  [key=0, style=solid];
m5_549 -> m5_6  [key=2, style=dotted];
m5_552 -> m5_537  [key=0, style=bold, color=blue];
m5_634 -> m5_635  [key=0, style=solid];
m5_635 -> m5_636  [key=0, style=solid];
m5_635 -> m5_382  [key=2, style=dotted];
m5_635 -> m5_637  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_636 -> m5_637  [key=0, style=solid];
m5_636 -> m5_472  [key=2, style=dotted];
m5_636 -> m5_638  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_637 -> m5_638  [key=0, style=solid];
m5_637 -> m5_640  [key=2, style=dotted];
m5_637 -> m5_6  [key=2, style=dotted];
m5_638 -> m5_639  [key=0, style=solid];
m5_638 -> m5_382  [key=2, style=dotted];
m5_638 -> m5_640  [key=2, style=dotted];
m5_638 -> m5_6  [key=2, style=dotted];
m5_639 -> m5_634  [key=0, style=bold, color=blue];
m5_554 -> m5_555  [key=0, style=solid];
m5_555 -> m5_556  [key=0, style=solid];
m5_555 -> m5_382  [key=2, style=dotted];
m5_555 -> m5_557  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_555 -> m5_559  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_556 -> m5_557  [key=0, style=solid];
m5_556 -> m5_382  [key=2, style=dotted];
m5_556 -> m5_561  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_557 -> m5_558  [key=0, style=solid];
m5_557 -> m5_383  [key=2, style=dotted];
m5_557 -> m5_559  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_557 -> m5_560  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_557 -> m5_561  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_557 -> m5_562  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_559 -> m5_560  [key=0, style=solid];
m5_559 -> m5_553  [key=2, style=dotted];
m5_561 -> m5_562  [key=0, style=solid];
m5_561 -> m5_553  [key=2, style=dotted];
m5_558 -> m5_559  [key=0, style=solid];
m5_558 -> m5_564  [key=2, style=dotted];
m5_560 -> m5_561  [key=0, style=solid];
m5_560 -> m5_6  [key=2, style=dotted];
m5_562 -> m5_563  [key=0, style=solid];
m5_562 -> m5_6  [key=2, style=dotted];
m5_563 -> m5_554  [key=0, style=bold, color=blue];
m5_835 -> m5_836  [key=0, style=solid];
m5_836 -> m5_837  [key=0, style=solid];
m5_836 -> m5_12  [key=2, style=dotted];
m5_836 -> m5_838  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_836 -> m5_843  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_837 -> m5_838  [key=0, style=solid];
m5_837 -> m5_846  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.AddingNewEventArgs"];
m5_838 -> m5_839  [key=0, style=solid];
m5_838 -> m5_836  [key=3, color=darkorchid, style=bold, label="Local variable System.ComponentModel.IBindingList l"];
m5_843 -> m5_844  [key=0, style=solid];
m5_843 -> m5_6  [key=2, style=dotted];
m5_839 -> m5_840  [key=0, style=solid];
m5_839 -> m5_834  [key=2, style=dotted];
m5_839 -> m5_841  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m5_840 -> m5_841  [key=0, style=solid];
m5_840 -> m5_621  [key=2, style=dotted];
m5_841 -> m5_842  [key=0, style=solid];
m5_841 -> m5_843  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_842 -> m5_843  [key=0, style=solid];
m5_842 -> m5_6  [key=2, style=dotted];
m5_844 -> m5_835  [key=0, style=bold, color=blue];
m5_737 -> m5_738  [key=0, style=solid];
m5_738 -> m5_739  [key=0, style=solid];
m5_738 -> m5_382  [key=2, style=dotted];
m5_738 -> m5_740  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_739 -> m5_740  [key=0, style=solid];
m5_739 -> m5_382  [key=2, style=dotted];
m5_739 -> m5_744  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_740 -> m5_741  [key=0, style=solid];
m5_740 -> m5_383  [key=2, style=dotted];
m5_740 -> m5_742  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_740 -> m5_743  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_740 -> m5_744  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_744 -> m5_745  [key=0, style=solid];
m5_744 -> m5_6  [key=2, style=dotted];
m5_741 -> m5_742  [key=0, style=solid];
m5_741 -> m5_382  [key=2, style=dotted];
m5_741 -> m5_743  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_742 -> m5_743  [key=0, style=solid];
m5_743 -> m5_744  [key=0, style=solid];
m5_743 -> m5_6  [key=2, style=dotted];
m5_745 -> m5_737  [key=0, style=bold, color=blue];
m5_746 -> m5_747  [key=0, style=solid];
m5_747 -> m5_748  [key=0, style=solid];
m5_747 -> m5_84  [key=2, style=dotted];
m5_747 -> m5_749  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_748 -> m5_746  [key=0, style=bold, color=blue];
m5_794 -> m5_795  [key=0, style=solid];
m5_795 -> m5_796  [key=0, style=solid];
m5_795 -> m5_84  [key=2, style=dotted];
m5_795 -> m5_797  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_796 -> m5_794  [key=0, style=bold, color=blue];
m5_1044 -> m5_1045  [key=0, style=solid];
m5_1045 -> m5_1046  [key=0, style=solid];
m5_1045 -> m5_1049  [key=2, style=dotted];
m5_1045 -> m5_1050  [key=2, style=dotted];
m5_1045 -> m5_1047  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_1046 -> m5_1047  [key=0, style=solid];
m5_1046 -> m5_1049  [key=2, style=dotted];
m5_1046 -> m5_6  [key=2, style=dotted];
m5_1047 -> m5_1048  [key=0, style=solid];
m5_1047 -> m5_1051  [key=2, style=dotted];
m5_1047 -> m5_6  [key=2, style=dotted];
m5_1048 -> m5_1044  [key=0, style=bold, color=blue];
m5_1071 -> m5_1072  [key=0, style=solid];
m5_1072 -> m5_1073  [key=0, style=solid];
m5_1072 -> m5_383  [key=2, style=dotted];
m5_1072 -> m5_1084  [key=2, style=dotted];
m5_1072 -> m5_382  [key=2, style=dotted];
m5_1072 -> m5_1085  [key=2, style=dotted];
m5_1072 -> m5_1075  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_1072 -> m5_1077  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_1072 -> m5_1079  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_1072 -> m5_1081  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_1072 -> m5_1082  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_1073 -> m5_1074  [key=0, style=solid];
m5_1073 -> m5_1086  [key=2, style=dotted];
m5_1073 -> m5_225  [key=2, style=dotted];
m5_1075 -> m5_1076  [key=0, style=solid];
m5_1075 -> m5_1086  [key=2, style=dotted];
m5_1075 -> m5_225  [key=2, style=dotted];
m5_1077 -> m5_1078  [key=0, style=solid];
m5_1077 -> m5_1086  [key=2, style=dotted];
m5_1077 -> m5_226  [key=2, style=dotted];
m5_1079 -> m5_1080  [key=0, style=solid];
m5_1079 -> m5_1086  [key=2, style=dotted];
m5_1079 -> m5_226  [key=2, style=dotted];
m5_1081 -> m5_1082  [key=0, style=solid];
m5_1081 -> m5_1086  [key=2, style=dotted];
m5_1081 -> m5_226  [key=2, style=dotted];
m5_1082 -> m5_1083  [key=0, style=solid];
m5_1082 -> m5_1086  [key=2, style=dotted];
m5_1082 -> m5_226  [key=2, style=dotted];
m5_1074 -> m5_1075  [key=0, style=solid];
m5_1074 -> m5_383  [key=2, style=dotted];
m5_1074 -> m5_1084  [key=2, style=dotted];
m5_1074 -> m5_382  [key=2, style=dotted];
m5_1074 -> m5_1085  [key=2, style=dotted];
m5_1076 -> m5_1077  [key=0, style=solid];
m5_1076 -> m5_383  [key=2, style=dotted];
m5_1076 -> m5_1084  [key=2, style=dotted];
m5_1076 -> m5_382  [key=2, style=dotted];
m5_1076 -> m5_1085  [key=2, style=dotted];
m5_1078 -> m5_1079  [key=0, style=solid];
m5_1078 -> m5_383  [key=2, style=dotted];
m5_1078 -> m5_1084  [key=2, style=dotted];
m5_1078 -> m5_382  [key=2, style=dotted];
m5_1078 -> m5_1085  [key=2, style=dotted];
m5_1080 -> m5_1081  [key=0, style=solid];
m5_1080 -> m5_383  [key=2, style=dotted];
m5_1080 -> m5_1084  [key=2, style=dotted];
m5_1080 -> m5_382  [key=2, style=dotted];
m5_1083 -> m5_1071  [key=0, style=bold, color=blue];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_12  [key=2, style=dotted];
m5_17 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=d];
m5_20 -> m5_21  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_6  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_6  [key=2, style=dotted];
m5_22 -> m5_16  [key=0, style=bold, color=blue];
m5_1162 -> m5_1163  [key=0, style=solid];
m5_1163 -> m5_1164  [key=0, style=solid];
m5_1163 -> m5_1168  [key=2, style=dotted];
m5_1163 -> m5_1165  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_1164 -> m5_1165  [key=0, style=solid];
m5_1164 -> m5_1169  [key=2, style=dotted];
m5_1164 -> m5_1170  [key=2, style=dotted];
m5_1164 -> m5_1171  [key=2, style=dotted];
m5_1164 -> m5_1150  [key=2, style=dotted];
m5_1165 -> m5_1166  [key=0, style=solid];
m5_1165 -> m5_1172  [key=2, style=dotted];
m5_1166 -> m5_1167  [key=0, style=solid];
m5_1166 -> m5_6  [key=2, style=dotted];
m5_1167 -> m5_1162  [key=0, style=bold, color=blue];
m5_311 -> m5_312  [key=0, style=solid];
m5_312 -> m5_313  [key=0, style=solid];
m5_312 -> m5_312  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_313 -> m5_314  [key=0, style=solid];
m5_313 -> m5_246  [key=2, style=dotted];
m5_313 -> m5_315  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_314 -> m5_315  [key=0, style=solid];
m5_314 -> m5_317  [key=1, style=dashed, color=darkseagreen4, label=name];
m5_315 -> m5_316  [key=0, style=solid];
m5_317 -> m5_318  [key=0, style=solid];
m5_317 -> m5_320  [key=2, style=dotted];
m5_316 -> m5_317  [key=0, style=solid];
m5_316 -> m5_318  [key=1, style=dashed, color=darkseagreen4, label=smallest];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_320  [key=2, style=dotted];
m5_319 -> m5_311  [key=0, style=bold, color=blue];
m5_585 -> m5_586  [key=0, style=solid];
m5_586 -> m5_587  [key=0, style=solid];
m5_586 -> m5_382  [key=2, style=dotted];
m5_586 -> m5_588  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_587 -> m5_588  [key=0, style=solid];
m5_587 -> m5_382  [key=2, style=dotted];
m5_587 -> m5_592  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_588 -> m5_589  [key=0, style=solid];
m5_588 -> m5_383  [key=2, style=dotted];
m5_588 -> m5_590  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_588 -> m5_591  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_588 -> m5_592  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_592 -> m5_593  [key=0, style=solid];
m5_592 -> m5_6  [key=2, style=dotted];
m5_589 -> m5_590  [key=0, style=solid];
m5_589 -> m5_382  [key=2, style=dotted];
m5_589 -> m5_591  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_590 -> m5_591  [key=0, style=solid];
m5_591 -> m5_592  [key=0, style=solid];
m5_591 -> m5_6  [key=2, style=dotted];
m5_593 -> m5_585  [key=0, style=bold, color=blue];
m5_777 -> m5_778  [key=0, style=solid];
m5_778 -> m5_779  [key=0, style=solid];
m5_778 -> m5_12  [key=2, style=dotted];
m5_779 -> m5_780  [key=0, style=solid];
m5_779 -> m5_6  [key=2, style=dotted];
m5_780 -> m5_777  [key=0, style=bold, color=blue];
m5_628 -> m5_629  [key=0, style=solid];
m5_629 -> m5_630  [key=0, style=solid];
m5_629 -> m5_382  [key=2, style=dotted];
m5_629 -> m5_631  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_630 -> m5_631  [key=0, style=solid];
m5_630 -> m5_472  [key=2, style=dotted];
m5_630 -> m5_632  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_631 -> m5_632  [key=0, style=solid];
m5_631 -> m5_132  [key=2, style=dotted];
m5_631 -> m5_225  [key=2, style=dotted];
m5_632 -> m5_633  [key=0, style=solid];
m5_632 -> m5_382  [key=2, style=dotted];
m5_632 -> m5_132  [key=2, style=dotted];
m5_632 -> m5_226  [key=2, style=dotted];
m5_633 -> m5_628  [key=0, style=bold, color=blue];
m5_116 -> m5_117  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_35  [key=2, style=dotted];
m5_117 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_117 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=v];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_12  [key=2, style=dotted];
m5_118 -> m5_120  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_118 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_118 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_118 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_118 -> m5_127  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_118 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_36  [key=2, style=dotted];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_79  [key=2, style=dotted];
m5_123 -> m5_132  [key=2, style=dotted];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_37  [key=2, style=dotted];
m5_120 -> m5_38  [key=2, style=dotted];
m5_120 -> m5_6  [key=2, style=dotted];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_79  [key=2, style=dotted];
m5_121 -> m5_35  [key=2, style=dotted];
m5_121 -> m5_132  [key=2, style=dotted];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_79  [key=2, style=dotted];
m5_125 -> m5_35  [key=2, style=dotted];
m5_125 -> m5_132  [key=2, style=dotted];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_79  [key=2, style=dotted];
m5_127 -> m5_35  [key=2, style=dotted];
m5_127 -> m5_132  [key=2, style=dotted];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_132  [key=2, style=dotted];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_6  [key=2, style=dotted];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_6  [key=2, style=dotted];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_6  [key=2, style=dotted];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_6  [key=2, style=dotted];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_6  [key=2, style=dotted];
m5_131 -> m5_116  [key=0, style=bold, color=blue];
m5_266 -> m5_267  [key=0, style=solid];
m5_267 -> m5_268  [key=0, style=solid];
m5_267 -> m5_84  [key=2, style=dotted];
m5_267 -> m5_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_268 -> m5_266  [key=0, style=bold, color=blue];
m5_342 -> m5_343  [key=0, style=solid];
m5_343 -> m5_344  [key=0, style=solid];
m5_343 -> m5_12  [key=2, style=dotted];
m5_343 -> m5_345  [key=1, style=dashed, color=darkseagreen4, label=moss];
m5_343 -> m5_346  [key=1, style=dashed, color=darkseagreen4, label=moss];
m5_343 -> m5_347  [key=1, style=dashed, color=darkseagreen4, label=moss];
m5_343 -> m5_348  [key=1, style=dashed, color=darkseagreen4, label=moss];
m5_343 -> m5_349  [key=1, style=dashed, color=darkseagreen4, label=moss];
m5_344 -> m5_345  [key=0, style=solid];
m5_344 -> m5_310  [key=2, style=dotted];
m5_345 -> m5_346  [key=0, style=solid];
m5_345 -> m5_310  [key=2, style=dotted];
m5_346 -> m5_347  [key=0, style=solid];
m5_346 -> m5_358  [key=2, style=dotted];
m5_346 -> m5_359  [key=2, style=dotted];
m5_347 -> m5_348  [key=0, style=solid];
m5_347 -> m5_310  [key=2, style=dotted];
m5_348 -> m5_349  [key=0, style=solid];
m5_348 -> m5_310  [key=2, style=dotted];
m5_349 -> m5_350  [key=0, style=solid];
m5_349 -> m5_15  [key=2, style=dotted];
m5_349 -> m5_320  [key=2, style=dotted];
m5_350 -> m5_351  [key=0, style=solid];
m5_350 -> m5_12  [key=2, style=dotted];
m5_350 -> m5_352  [key=1, style=dashed, color=darkseagreen4, label=jen];
m5_350 -> m5_353  [key=1, style=dashed, color=darkseagreen4, label=jen];
m5_350 -> m5_354  [key=1, style=dashed, color=darkseagreen4, label=jen];
m5_350 -> m5_355  [key=1, style=dashed, color=darkseagreen4, label=jen];
m5_350 -> m5_356  [key=1, style=dashed, color=darkseagreen4, label=jen];
m5_351 -> m5_352  [key=0, style=solid];
m5_352 -> m5_353  [key=0, style=solid];
m5_353 -> m5_354  [key=0, style=solid];
m5_353 -> m5_359  [key=2, style=dotted];
m5_354 -> m5_355  [key=0, style=solid];
m5_355 -> m5_356  [key=0, style=solid];
m5_356 -> m5_357  [key=0, style=solid];
m5_356 -> m5_15  [key=2, style=dotted];
m5_356 -> m5_320  [key=2, style=dotted];
m5_357 -> m5_342  [key=0, style=bold, color=blue];
m5_360 -> m5_361  [key=0, style=solid];
m5_361 -> m5_362  [key=0, style=solid];
m5_361 -> m5_382  [key=2, style=dotted];
m5_361 -> m5_363  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_361 -> m5_365  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_361 -> m5_368  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_361 -> m5_369  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_382  [key=2, style=dotted];
m5_362 -> m5_366  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_362 -> m5_372  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_362 -> m5_376  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_362 -> m5_377  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_363 -> m5_364  [key=0, style=solid];
m5_363 -> m5_383  [key=2, style=dotted];
m5_363 -> m5_374  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_365 -> m5_366  [key=0, style=solid];
m5_365 -> m5_6  [key=2, style=dotted];
m5_368 -> m5_369  [key=0, style=solid];
m5_368 -> m5_384  [key=2, style=dotted];
m5_369 -> m5_370  [key=0, style=solid];
m5_369 -> m5_6  [key=2, style=dotted];
m5_366 -> m5_367  [key=0, style=solid];
m5_366 -> m5_6  [key=2, style=dotted];
m5_372 -> m5_373  [key=0, style=solid];
m5_372 -> m5_6  [key=2, style=dotted];
m5_376 -> m5_377  [key=0, style=solid];
m5_376 -> m5_384  [key=2, style=dotted];
m5_377 -> m5_378  [key=0, style=solid];
m5_377 -> m5_6  [key=2, style=dotted];
m5_364 -> m5_365  [key=0, style=solid];
m5_364 -> m5_366  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_364 -> m5_370  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_364 -> m5_371  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_364 -> m5_372  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_364 -> m5_373  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_364 -> m5_378  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_364 -> m5_379  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_364 -> m5_380  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_364 -> m5_363  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l"];
m5_374 -> m5_375  [key=0, style=solid];
m5_374 -> m5_385  [key=2, style=dotted];
m5_374 -> m5_38  [key=2, style=dotted];
m5_374 -> m5_6  [key=2, style=dotted];
m5_370 -> m5_371  [key=0, style=solid];
m5_370 -> m5_6  [key=2, style=dotted];
m5_371 -> m5_372  [key=0, style=solid];
m5_371 -> m5_6  [key=2, style=dotted];
m5_373 -> m5_374  [key=0, style=solid];
m5_373 -> m5_6  [key=2, style=dotted];
m5_378 -> m5_379  [key=0, style=solid];
m5_378 -> m5_6  [key=2, style=dotted];
m5_379 -> m5_380  [key=0, style=solid];
m5_379 -> m5_6  [key=2, style=dotted];
m5_380 -> m5_381  [key=0, style=solid];
m5_380 -> m5_6  [key=2, style=dotted];
m5_367 -> m5_368  [key=0, style=solid];
m5_367 -> m5_382  [key=2, style=dotted];
m5_367 -> m5_370  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_367 -> m5_371  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_367 -> m5_379  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_375 -> m5_376  [key=0, style=solid];
m5_375 -> m5_382  [key=2, style=dotted];
m5_375 -> m5_378  [key=1, style=dashed, color=darkseagreen4, label=p4];
m5_375 -> m5_380  [key=1, style=dashed, color=darkseagreen4, label=p4];
m5_381 -> m5_360  [key=0, style=bold, color=blue];
m5_657 -> m5_658  [key=0, style=solid];
m5_658 -> m5_659  [key=0, style=solid];
m5_658 -> m5_382  [key=2, style=dotted];
m5_658 -> m5_660  [key=1, style=dashed, color=darkseagreen4, label=p1];
m5_659 -> m5_660  [key=0, style=solid];
m5_659 -> m5_382  [key=2, style=dotted];
m5_660 -> m5_661  [key=0, style=solid];
m5_660 -> m5_383  [key=2, style=dotted];
m5_660 -> m5_662  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_660 -> m5_663  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_660 -> m5_664  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_661 -> m5_662  [key=0, style=solid];
m5_661 -> m5_382  [key=2, style=dotted];
m5_661 -> m5_664  [key=1, style=dashed, color=darkseagreen4, label=p3];
m5_662 -> m5_663  [key=0, style=solid];
m5_662 -> m5_104  [key=2, style=dotted];
m5_663 -> m5_664  [key=0, style=solid];
m5_663 -> m5_6  [key=2, style=dotted];
m5_664 -> m5_665  [key=0, style=solid];
m5_664 -> m5_6  [key=2, style=dotted];
m5_665 -> m5_657  [key=0, style=bold, color=blue];
m5_239 -> m5_240  [key=0, style=solid];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_84  [key=2, style=dotted];
m5_240 -> m5_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_240 -> m5_240  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_241 -> m5_239  [key=0, style=bold, color=blue];
m5_1159 -> m5_1160  [key=0, style=solid];
m5_1160 -> m5_1161  [key=0, style=solid];
m5_1161 -> m5_1159  [key=0, style=bold, color=blue];
m5_972 -> m5_973  [key=0, style=solid];
m5_973 -> m5_974  [key=0, style=solid];
m5_973 -> m5_84  [key=2, style=dotted];
m5_973 -> m5_975  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_974 -> m5_972  [key=0, style=bold, color=blue];
m5_827 -> m5_828  [key=0, style=solid];
m5_828 -> m5_829  [key=0, style=solid];
m5_828 -> m5_84  [key=2, style=dotted];
m5_828 -> m5_830  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_829 -> m5_827  [key=0, style=bold, color=blue];
m5_823 -> m5_824  [key=0, style=solid];
m5_824 -> m5_825  [key=0, style=solid];
m5_824 -> m5_12  [key=2, style=dotted];
m5_825 -> m5_826  [key=0, style=solid];
m5_825 -> m5_6  [key=2, style=dotted];
m5_826 -> m5_823  [key=0, style=bold, color=blue];
m5_955 -> m5_956  [key=0, style=solid];
m5_956 -> m5_957  [key=0, style=solid];
m5_956 -> m5_84  [key=2, style=dotted];
m5_956 -> m5_958  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_956 -> m5_956  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_957 -> m5_955  [key=0, style=bold, color=blue];
m5_255 -> m5_256  [key=0, style=solid];
m5_256 -> m5_257  [key=0, style=solid];
m5_256 -> m5_256  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_253  [key=2, style=dotted];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_265  [key=2, style=dotted];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_6  [key=2, style=dotted];
m5_260 -> m5_261  [key=0, style=solid];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_253  [key=2, style=dotted];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_265  [key=2, style=dotted];
m5_263 -> m5_264  [key=0, style=solid];
m5_263 -> m5_6  [key=2, style=dotted];
m5_264 -> m5_255  [key=0, style=bold, color=blue];
m5_435 -> m5_436  [key=0, style=solid];
m5_436 -> m5_437  [key=0, style=solid];
m5_436 -> m5_82  [key=3, color=darkorchid, style=bold, label="Local variable object changed"];
m5_437 -> m5_438  [key=0, style=solid];
m5_437 -> m5_439  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_437 -> m5_389  [key=3, color=darkorchid, style=bold, label="Local variable int changedCount"];
m5_438 -> m5_439  [key=0, style=solid];
m5_438 -> m5_12  [key=2, style=dotted];
m5_438 -> m5_440  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_438 -> m5_442  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_438 -> m5_444  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_438 -> m5_446  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_438 -> m5_448  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_438 -> m5_450  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_438 -> m5_452  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_438 -> m5_454  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_438 -> m5_456  [key=1, style=dashed, color=red, label=o];
m5_438 -> m5_458  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_439 -> m5_440  [key=0, style=solid];
m5_439 -> m5_439  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_439 -> m5_462  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_439 -> m5_463  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangedEventArgs"];
m5_439 -> m5_464  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_440 -> m5_441  [key=0, style=solid];
m5_442 -> m5_443  [key=0, style=solid];
m5_442 -> m5_6  [key=2, style=dotted];
m5_444 -> m5_445  [key=0, style=solid];
m5_446 -> m5_447  [key=0, style=solid];
m5_448 -> m5_449  [key=0, style=solid];
m5_448 -> m5_6  [key=2, style=dotted];
m5_450 -> m5_451  [key=0, style=solid];
m5_452 -> m5_453  [key=0, style=solid];
m5_452 -> m5_6  [key=2, style=dotted];
m5_454 -> m5_455  [key=0, style=solid];
m5_456 -> m5_457  [key=0, style=solid, color=red];
m5_456 -> m5_57  [key=2, style=dotted, color=red];
m5_456 -> m5_6  [key=2, style=dotted, color=red];
m5_458 -> m5_459  [key=0, style=solid];
m5_441 -> m5_442  [key=0, style=solid];
m5_441 -> m5_6  [key=2, style=dotted];
m5_443 -> m5_444  [key=0, style=solid];
m5_443 -> m5_6  [key=2, style=dotted];
m5_445 -> m5_446  [key=0, style=solid];
m5_445 -> m5_6  [key=2, style=dotted];
m5_447 -> m5_448  [key=0, style=solid];
m5_447 -> m5_6  [key=2, style=dotted];
m5_449 -> m5_450  [key=0, style=solid];
m5_449 -> m5_6  [key=2, style=dotted];
m5_451 -> m5_452  [key=0, style=solid];
m5_451 -> m5_6  [key=2, style=dotted];
m5_453 -> m5_454  [key=0, style=solid];
m5_453 -> m5_6  [key=2, style=dotted];
m5_455 -> m5_456  [key=0, style=solid, color=red];
m5_455 -> m5_6  [key=2, style=dotted];
m5_457 -> m5_458  [key=0, style=solid];
m5_457 -> m5_6  [key=2, style=dotted];
m5_459 -> m5_460  [key=0, style=solid];
m5_459 -> m5_6  [key=2, style=dotted];
m5_460 -> m5_435  [key=0, style=bold, color=blue];
m5_1173 -> m5_428  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m5_1174 -> m5_433  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_1175 -> m5_464  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_93  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_93  [key=0, style=solid];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_97  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_69  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_90  [key=0, style=solid];
m8_88 -> m8_75  [key=2, style=dotted];
m8_88 -> m8_81  [key=2, style=dotted];
m8_89 -> m8_91  [key=0, style=solid];
m8_89 -> m8_69  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_95  [key=2, style=dotted];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_96  [key=2, style=dotted];
m8_94 -> m8_84  [key=0, style=bold, color=blue];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_103  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_106  [key=2, style=dotted];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_69  [key=2, style=dotted];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_105  [key=2, style=dotted];
m8_104 -> m8_98  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_1 -> m8_2  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_21  [key=0, style=solid];
m8_11 -> m8_71  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=0, style=solid];
m8_12 -> m8_72  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_68  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_74  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_75  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_30  [key=0, style=solid];
m8_21 -> m8_72  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=0, style=solid];
m8_23 -> m8_76  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [key=0, style=solid];
m8_25 -> m8_76  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_74  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_38  [key=0, style=solid];
m8_30 -> m8_72  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_73  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=0, style=solid];
m8_32 -> m8_76  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_55  [key=0, style=solid];
m8_38 -> m8_72  [key=2, style=dotted];
m8_38 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label=tempCollectionType];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_74  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_46  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_77  [key=2, style=dotted];
m8_44 -> m8_78  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_51  [key=0, style=solid];
m8_46 -> m8_80  [key=2, style=dotted];
m8_46 -> m8_81  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_67  [key=0, style=solid];
m8_62 -> m8_83  [key=2, style=dotted];
m8_62 -> m8_64  [key=1, style=dashed, color=darkseagreen4, label=immutableParameterizedCreator];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_11  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_68  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_69  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
m8_10 -> m8_57  [key=0, style=solid];
m8_10 -> m8_70  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_13 -> m8_73  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_19  [key=0, style=solid];
m8_20 -> m8_57  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_73  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_69  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_69  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
m8_29 -> m8_57  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_69  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_69  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_74  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_57  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_73  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
m8_47 -> m8_48  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid];
m8_40 -> m8_76  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_69  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_79  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_69  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_50 -> m8_57  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_54 -> m8_57  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_60  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_82  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid, color=red];
m8_61 -> m8_62  [key=0, style=solid, color=red];
m8_63 -> m8_64  [key=0, style=solid];
m8_64 -> m8_65  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_0  [key=0, style=bold, color=blue];
m8_107 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_107 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m9_595 -> m9_605  [key=0, style=solid];
m9_595 -> m9_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_608  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_610  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_611  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_612  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_613  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_618  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_619  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_620  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_595 -> m9_626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_605 -> m9_606  [key=0, style=solid];
m9_605 -> m9_607  [key=0, style=solid];
m9_606 -> m9_627  [key=0, style=solid];
m9_606 -> m9_536  [key=2, style=dotted];
m9_607 -> m9_608  [key=0, style=solid];
m9_607 -> m9_611  [key=0, style=solid];
m9_608 -> m9_609  [key=0, style=solid];
m9_608 -> m9_610  [key=0, style=solid];
m9_609 -> m9_627  [key=0, style=solid];
m9_609 -> m9_628  [key=2, style=dotted];
m9_610 -> m9_627  [key=0, style=solid];
m9_610 -> m9_629  [key=2, style=dotted];
m9_610 -> m9_628  [key=2, style=dotted];
m9_611 -> m9_612  [key=0, style=solid];
m9_611 -> m9_617  [key=0, style=solid];
m9_612 -> m9_613  [key=0, style=solid];
m9_612 -> m9_614  [key=0, style=solid];
m9_613 -> m9_627  [key=0, style=solid];
m9_613 -> m9_628  [key=2, style=dotted];
m9_614 -> m9_615  [key=0, style=solid];
m9_614 -> m9_616  [key=0, style=solid];
m9_615 -> m9_627  [key=0, style=solid];
m9_615 -> m9_628  [key=2, style=dotted];
m9_616 -> m9_627  [key=0, style=solid];
m9_616 -> m9_630  [key=2, style=dotted];
m9_616 -> m9_628  [key=2, style=dotted];
m9_617 -> m9_618  [key=0, style=solid];
m9_617 -> m9_619  [key=0, style=solid];
m9_618 -> m9_627  [key=0, style=solid];
m9_618 -> m9_631  [key=2, style=dotted];
m9_618 -> m9_628  [key=2, style=dotted];
m9_619 -> m9_620  [key=0, style=solid];
m9_619 -> m9_624  [key=0, style=solid];
m9_620 -> m9_621  [key=0, style=solid];
m9_620 -> m9_622  [key=0, style=solid];
m9_621 -> m9_627  [key=0, style=solid];
m9_621 -> m9_628  [key=2, style=dotted];
m9_622 -> m9_623  [key=0, style=solid];
m9_622 -> m9_632  [key=2, style=dotted];
m9_624 -> m9_625  [key=0, style=solid];
m9_624 -> m9_626  [key=0, style=solid];
m9_626 -> m9_627  [key=0, style=solid];
m9_626 -> m9_604  [key=2, style=dotted];
m9_626 -> m9_567  [key=2, style=dotted];
m9_623 -> m9_627  [key=0, style=solid];
m9_623 -> m9_633  [key=2, style=dotted];
m9_623 -> m9_628  [key=2, style=dotted];
m9_625 -> m9_627  [key=0, style=solid];
m9_627 -> m9_595  [key=0, style=bold, color=blue];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_6  [key=2, style=dotted];
m9_35 -> m9_37  [key=2, style=dotted];
m9_36 -> m9_34  [key=0, style=bold, color=blue];
m9_134 -> m9_135  [key=0, style=solid];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_137  [key=2, style=dotted];
m9_135 -> m9_138  [key=2, style=dotted];
m9_136 -> m9_134  [key=0, style=bold, color=blue];
m9_96 -> m9_97  [key=0, style=solid];
m9_97 -> m9_96  [key=0, style=bold, color=blue];
m9_110 -> m9_111  [key=0, style=solid];
m9_111 -> m9_110  [key=0, style=bold, color=blue];
m9_157 -> m9_158  [key=0, style=solid];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_129  [key=2, style=dotted];
m9_158 -> m9_160  [key=2, style=dotted];
m9_159 -> m9_157  [key=0, style=bold, color=blue];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_205  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m9_201 -> m9_208  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m9_201 -> m9_211  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m9_201 -> m9_214  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m9_201 -> m9_217  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m9_201 -> m9_220  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m9_201 -> m9_223  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m9_201 -> m9_226  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m9_202 -> m9_203  [key=0, style=solid];
m9_202 -> m9_204  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_207  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_208 -> m9_209  [key=0, style=solid];
m9_208 -> m9_210  [key=1, style=dashed, color=darkseagreen4, label=container];
m9_211 -> m9_212  [key=0, style=solid];
m9_211 -> m9_213  [key=1, style=dashed, color=darkseagreen4, label=pi];
m9_214 -> m9_215  [key=0, style=solid];
m9_214 -> m9_216  [key=1, style=dashed, color=darkseagreen4, label=text];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_219  [key=1, style=dashed, color=darkseagreen4, label=comment];
m9_220 -> m9_221  [key=0, style=solid];
m9_220 -> m9_222  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m9_223 -> m9_224  [key=0, style=solid];
m9_223 -> m9_225  [key=1, style=dashed, color=darkseagreen4, label=type];
m9_226 -> m9_227  [key=0, style=solid];
m9_226 -> m9_228  [key=2, style=dotted];
m9_203 -> m9_204  [key=0, style=solid];
m9_203 -> m9_205  [key=0, style=solid];
m9_204 -> m9_227  [key=0, style=solid];
m9_204 -> m9_132  [key=2, style=dotted];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_208  [key=0, style=solid];
m9_207 -> m9_227  [key=0, style=solid];
m9_207 -> m9_169  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_211  [key=0, style=solid];
m9_210 -> m9_227  [key=0, style=solid];
m9_210 -> m9_199  [key=2, style=dotted];
m9_212 -> m9_213  [key=0, style=solid];
m9_212 -> m9_214  [key=0, style=solid];
m9_213 -> m9_227  [key=0, style=solid];
m9_213 -> m9_164  [key=2, style=dotted];
m9_215 -> m9_216  [key=0, style=solid];
m9_215 -> m9_217  [key=0, style=solid];
m9_216 -> m9_227  [key=0, style=solid];
m9_216 -> m9_194  [key=2, style=dotted];
m9_218 -> m9_219  [key=0, style=solid];
m9_218 -> m9_220  [key=0, style=solid];
m9_219 -> m9_227  [key=0, style=solid];
m9_219 -> m9_196  [key=2, style=dotted];
m9_221 -> m9_222  [key=0, style=solid];
m9_221 -> m9_223  [key=0, style=solid];
m9_222 -> m9_227  [key=0, style=solid];
m9_222 -> m9_180  [key=2, style=dotted];
m9_224 -> m9_225  [key=0, style=solid];
m9_224 -> m9_226  [key=0, style=solid];
m9_225 -> m9_227  [key=0, style=solid];
m9_225 -> m9_129  [key=2, style=dotted];
m9_227 -> m9_201  [key=0, style=bold, color=blue];
m9_171 -> m9_172  [key=0, style=solid];
m9_171 -> m9_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_175  [key=2, style=dotted];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> m9_169  [key=2, style=dotted];
m9_173 -> m9_170  [key=2, style=dotted];
m9_173 -> m9_176  [key=2, style=dotted];
m9_174 -> m9_171  [key=0, style=bold, color=blue];
m9_513 -> m9_541  [key=0, style=solid];
m9_513 -> m9_542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_513 -> m9_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_513 -> m9_544  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_513 -> m9_545  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_513 -> m9_546  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_513 -> m9_548  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_513 -> m9_550  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_513 -> m9_551  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_513 -> m9_553  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_513 -> m9_554  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_513 -> m9_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_513 -> m9_562  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_513 -> m9_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_513 -> m9_565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_541 -> m9_542  [key=0, style=solid];
m9_541 -> m9_543  [key=0, style=solid];
m9_541 -> m9_309  [key=2, style=dotted];
m9_542 -> m9_566  [key=0, style=solid];
m9_542 -> m9_567  [key=2, style=dotted];
m9_543 -> m9_544  [key=0, style=solid];
m9_543 -> m9_568  [key=2, style=dotted];
m9_543 -> m9_555  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m9_543 -> m9_565  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m9_544 -> m9_545  [key=0, style=solid];
m9_544 -> m9_569  [key=2, style=dotted];
m9_544 -> m9_565  [key=1, style=dashed, color=darkseagreen4, label=elementPrefix];
m9_545 -> m9_546  [key=0, style=solid];
m9_545 -> m9_550  [key=0, style=solid];
m9_545 -> m9_570  [key=2, style=dotted];
m9_546 -> m9_547  [key=0, style=solid];
m9_546 -> m9_571  [key=2, style=dotted];
m9_546 -> m9_548  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_548 -> m9_549  [key=0, style=solid];
m9_548 -> m9_572  [key=2, style=dotted];
m9_550 -> m9_551  [key=0, style=solid];
m9_550 -> m9_565  [key=0, style=solid];
m9_550 -> m9_570  [key=2, style=dotted];
m9_551 -> m9_552  [key=0, style=solid];
m9_551 -> m9_557  [key=0, style=solid];
m9_553 -> m9_554  [key=0, style=solid];
m9_553 -> m9_571  [key=2, style=dotted];
m9_553 -> m9_553  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_553 -> m9_555  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_553 -> m9_561  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_553 -> m9_563  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_553 -> m9_565  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_554 -> m9_555  [key=0, style=solid];
m9_554 -> m9_308  [key=2, style=dotted];
m9_554 -> m9_565  [key=1, style=dashed, color=darkseagreen4, label=elementPrefix];
m9_555 -> m9_556  [key=0, style=solid];
m9_555 -> m9_573  [key=2, style=dotted];
m9_562 -> m9_563  [key=0, style=solid];
m9_562 -> m9_308  [key=2, style=dotted];
m9_563 -> m9_564  [key=0, style=solid];
m9_563 -> m9_572  [key=2, style=dotted];
m9_565 -> m9_566  [key=0, style=solid];
m9_565 -> m9_573  [key=2, style=dotted];
m9_547 -> m9_548  [key=0, style=solid];
m9_547 -> m9_569  [key=2, style=dotted];
m9_549 -> m9_566  [key=0, style=solid];
m9_552 -> m9_553  [key=0, style=solid];
m9_557 -> m9_558  [key=0, style=solid];
m9_561 -> m9_562  [key=0, style=solid];
m9_561 -> m9_571  [key=2, style=dotted];
m9_561 -> m9_563  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_556 -> m9_566  [key=0, style=solid];
m9_558 -> m9_559  [key=0, style=solid];
m9_559 -> m9_560  [key=0, style=solid];
m9_560 -> m9_561  [key=0, style=solid];
m9_564 -> m9_566  [key=0, style=solid];
m9_566 -> m9_513  [key=0, style=bold, color=blue];
m9_118 -> m9_119  [key=0, style=solid];
m9_119 -> m9_118  [key=0, style=bold, color=blue];
m9_247 -> m9_248  [key=0, style=solid];
m9_248 -> m9_249  [key=0, style=solid];
m9_248 -> m9_193  [key=2, style=dotted];
m9_248 -> m9_250  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_249 -> m9_250  [key=0, style=solid];
m9_250 -> m9_251  [key=0, style=solid];
m9_251 -> m9_247  [key=0, style=bold, color=blue];
m9_180 -> m9_240  [key=0, style=solid];
m9_240 -> m9_180  [key=0, style=bold, color=blue];
m9_150 -> m9_151  [key=0, style=solid];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_137  [key=2, style=dotted];
m9_151 -> m9_142  [key=2, style=dotted];
m9_152 -> m9_150  [key=0, style=bold, color=blue];
m9_75 -> m9_76  [key=0, style=solid];
m9_76 -> m9_77  [key=0, style=solid];
m9_77 -> m9_75  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_58 -> m9_59  [key=0, style=solid];
m9_59 -> m9_57  [key=0, style=bold, color=blue];
m9_348 -> m9_349  [key=0, style=solid];
m9_348 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_348 -> m9_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_348 -> m9_353  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_348 -> m9_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_348 -> m9_369  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_348 -> m9_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_348 -> m9_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_348 -> m9_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_348 -> m9_376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_349 -> m9_350  [key=0, style=solid];
m9_349 -> m9_378  [key=2, style=dotted];
m9_349 -> m9_355  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m9_349 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m9_349 -> m9_360  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m9_351 -> m9_352  [key=0, style=solid];
m9_351 -> m9_360  [key=0, style=solid];
m9_352 -> m9_353  [key=0, style=solid];
m9_352 -> m9_358  [key=1, style=dashed, color=darkseagreen4, label=childNode];
m9_353 -> m9_354  [key=0, style=solid];
m9_353 -> m9_311  [key=2, style=dotted];
m9_353 -> m9_355  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m9_353 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m9_367 -> m9_360  [key=0, style=solid];
m9_367 -> m9_270  [key=2, style=dotted];
m9_369 -> m9_370  [key=0, style=solid];
m9_369 -> m9_371  [key=0, style=solid];
m9_370 -> m9_371  [key=0, style=solid];
m9_370 -> m9_381  [key=2, style=dotted];
m9_371 -> m9_372  [key=0, style=solid];
m9_371 -> m9_382  [key=2, style=dotted];
m9_374 -> m9_375  [key=0, style=solid];
m9_374 -> m9_270  [key=2, style=dotted];
m9_376 -> m9_360  [key=0, style=solid];
m9_376 -> m9_383  [key=2, style=dotted];
m9_350 -> m9_351  [key=0, style=solid];
m9_350 -> m9_352  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_350 -> m9_359  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_355 -> m9_356  [key=0, style=solid];
m9_355 -> m9_358  [key=0, style=solid];
m9_355 -> m9_379  [key=2, style=dotted];
m9_357 -> m9_358  [key=0, style=solid];
m9_357 -> m9_380  [key=2, style=dotted];
m9_360 -> m9_361  [key=0, style=solid];
m9_360 -> m9_377  [key=0, style=solid];
m9_359 -> m9_351  [key=0, style=solid];
m9_359 -> m9_359  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_358 -> m9_359  [key=0, style=solid];
m9_358 -> m9_298  [key=2, style=dotted];
m9_354 -> m9_355  [key=0, style=solid];
m9_356 -> m9_357  [key=0, style=solid];
m9_356 -> m9_297  [key=2, style=dotted];
m9_356 -> m9_358  [key=1, style=dashed, color=darkseagreen4, label=nodes];
m9_361 -> m9_362  [key=0, style=solid];
m9_361 -> m9_361  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m9_361 -> m9_363  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m9_361 -> m9_364  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m9_361 -> m9_367  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m9_361 -> m9_368  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m9_361 -> m9_373  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m9_361 -> m9_374  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m9_362 -> m9_363  [key=0, style=solid];
m9_363 -> m9_364  [key=0, style=solid];
m9_363 -> m9_365  [key=0, style=solid];
m9_364 -> m9_366  [key=0, style=solid];
m9_364 -> m9_340  [key=2, style=dotted];
m9_368 -> m9_369  [key=0, style=solid];
m9_368 -> m9_368  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m9_368 -> m9_370  [key=1, style=dashed, color=darkseagreen4, label=elementNames];
m9_373 -> m9_374  [key=0, style=solid];
m9_373 -> m9_376  [key=0, style=solid];
m9_365 -> m9_366  [key=0, style=solid];
m9_366 -> m9_367  [key=0, style=solid];
m9_366 -> m9_368  [key=0, style=solid];
m9_372 -> m9_373  [key=0, style=solid];
m9_372 -> m9_374  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_372 -> m9_375  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_375 -> m9_373  [key=0, style=solid];
m9_375 -> m9_375  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_377 -> m9_348  [key=0, style=bold, color=blue];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_81  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m9_78 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m9_78 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m9_78 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_82  [key=0, style=solid];
m9_79 -> m9_84  [key=0, style=solid];
m9_79 -> m9_86  [key=0, style=solid];
m9_81 -> m9_87  [key=0, style=solid];
m9_81 -> m9_57  [key=2, style=dotted];
m9_83 -> m9_87  [key=0, style=solid];
m9_83 -> m9_69  [key=2, style=dotted];
m9_85 -> m9_87  [key=0, style=solid];
m9_85 -> m9_72  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_75  [key=2, style=dotted];
m9_80 -> m9_81  [key=0, style=solid];
m9_82 -> m9_83  [key=0, style=solid];
m9_84 -> m9_85  [key=0, style=solid];
m9_87 -> m9_78  [key=0, style=bold, color=blue];
m9_69 -> m9_70  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid];
m9_71 -> m9_69  [key=0, style=bold, color=blue];
m9_98 -> m9_99  [key=0, style=solid];
m9_99 -> m9_98  [key=0, style=bold, color=blue];
m9_186 -> m9_187  [key=0, style=solid];
m9_186 -> m9_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_189  [key=1, style=dashed, color=darkseagreen4, label=declarationWrapper];
m9_187 -> m9_190  [key=1, style=dashed, color=darkseagreen4, label=declarationWrapper];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_193  [key=2, style=dotted];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_191  [key=0, style=solid];
m9_189 -> m9_190  [key=0, style=solid];
m9_190 -> m9_192  [key=0, style=solid];
m9_192 -> m9_186  [key=0, style=bold, color=blue];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=2, style=dotted];
m9_25 -> m9_28  [key=2, style=dotted];
m9_26 -> m9_24  [key=0, style=bold, color=blue];
m9_182 -> m9_183  [key=0, style=solid];
m9_182 -> m9_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_175  [key=2, style=dotted];
m9_184 -> m9_185  [key=0, style=solid];
m9_184 -> m9_180  [key=2, style=dotted];
m9_184 -> m9_181  [key=2, style=dotted];
m9_184 -> m9_176  [key=2, style=dotted];
m9_185 -> m9_182  [key=0, style=bold, color=blue];
m9_539 -> m9_732  [key=0, style=solid];
m9_539 -> m9_736  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_737  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_739  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_740  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_742  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_743  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_748  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_749  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_750  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_539 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_539 -> m9_752  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_732 -> m9_733  [key=0, style=solid];
m9_732 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_736 -> m9_737  [key=0, style=solid];
m9_736 -> m9_751  [key=0, style=solid];
m9_736 -> m9_514  [key=2, style=dotted];
m9_737 -> m9_738  [key=0, style=solid];
m9_737 -> m9_741  [key=0, style=solid];
m9_737 -> m9_744  [key=0, style=solid];
m9_737 -> m9_747  [key=0, style=solid];
m9_737 -> m9_750  [key=0, style=solid];
m9_737 -> m9_536  [key=2, style=dotted];
m9_739 -> m9_740  [key=0, style=solid];
m9_739 -> m9_514  [key=2, style=dotted];
m9_740 -> m9_736  [key=0, style=solid];
m9_740 -> m9_536  [key=2, style=dotted];
m9_740 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_742 -> m9_743  [key=0, style=solid];
m9_742 -> m9_514  [key=2, style=dotted];
m9_743 -> m9_736  [key=0, style=solid];
m9_743 -> m9_536  [key=2, style=dotted];
m9_743 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label=publicId];
m9_745 -> m9_746  [key=0, style=solid];
m9_745 -> m9_514  [key=2, style=dotted];
m9_746 -> m9_736  [key=0, style=solid];
m9_746 -> m9_536  [key=2, style=dotted];
m9_746 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label=systemId];
m9_748 -> m9_749  [key=0, style=solid];
m9_748 -> m9_514  [key=2, style=dotted];
m9_749 -> m9_736  [key=0, style=solid];
m9_749 -> m9_536  [key=2, style=dotted];
m9_749 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label=internalSubset];
m9_750 -> m9_753  [key=0, style=solid];
m9_750 -> m9_567  [key=2, style=dotted];
m9_751 -> m9_752  [key=0, style=solid];
m9_751 -> m9_108  [key=2, style=dotted];
m9_752 -> m9_753  [key=0, style=solid];
m9_752 -> m9_124  [key=2, style=dotted];
m9_733 -> m9_734  [key=0, style=solid];
m9_733 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label=publicId];
m9_734 -> m9_735  [key=0, style=solid];
m9_734 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label=systemId];
m9_735 -> m9_736  [key=0, style=solid];
m9_735 -> m9_751  [key=1, style=dashed, color=darkseagreen4, label=internalSubset];
m9_738 -> m9_739  [key=0, style=solid];
m9_741 -> m9_742  [key=0, style=solid];
m9_744 -> m9_745  [key=0, style=solid];
m9_747 -> m9_748  [key=0, style=solid];
m9_753 -> m9_539  [key=0, style=bold, color=blue];
m9_60 -> m9_61  [key=0, style=solid];
m9_61 -> m9_62  [key=0, style=solid];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_64  [key=2, style=dotted];
m9_63 -> m9_60  [key=0, style=bold, color=blue];
m9_108 -> m9_109  [key=0, style=solid];
m9_109 -> m9_108  [key=0, style=bold, color=blue];
m9_537 -> m9_711  [key=0, style=solid];
m9_537 -> m9_715  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_716  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_718  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_719  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_721  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_722  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_724  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_725  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_726  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_727  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_537 -> m9_728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_537 -> m9_729  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_537 -> m9_730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_711 -> m9_712  [key=0, style=solid];
m9_711 -> m9_729  [key=0, style=solid];
m9_715 -> m9_716  [key=0, style=solid];
m9_715 -> m9_727  [key=0, style=solid];
m9_715 -> m9_514  [key=2, style=dotted];
m9_716 -> m9_717  [key=0, style=solid];
m9_716 -> m9_720  [key=0, style=solid];
m9_716 -> m9_723  [key=0, style=solid];
m9_716 -> m9_726  [key=0, style=solid];
m9_716 -> m9_536  [key=2, style=dotted];
m9_718 -> m9_719  [key=0, style=solid];
m9_718 -> m9_514  [key=2, style=dotted];
m9_719 -> m9_715  [key=0, style=solid];
m9_719 -> m9_536  [key=2, style=dotted];
m9_719 -> m9_727  [key=1, style=dashed, color=darkseagreen4, label=version];
m9_721 -> m9_722  [key=0, style=solid];
m9_721 -> m9_514  [key=2, style=dotted];
m9_722 -> m9_715  [key=0, style=solid];
m9_722 -> m9_536  [key=2, style=dotted];
m9_722 -> m9_727  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m9_724 -> m9_725  [key=0, style=solid];
m9_724 -> m9_514  [key=2, style=dotted];
m9_725 -> m9_715  [key=0, style=solid];
m9_725 -> m9_536  [key=2, style=dotted];
m9_725 -> m9_727  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m9_726 -> m9_731  [key=0, style=solid];
m9_726 -> m9_567  [key=2, style=dotted];
m9_727 -> m9_728  [key=0, style=solid];
m9_727 -> m9_106  [key=2, style=dotted];
m9_728 -> m9_731  [key=0, style=solid];
m9_728 -> m9_124  [key=2, style=dotted];
m9_729 -> m9_730  [key=0, style=solid];
m9_729 -> m9_571  [key=2, style=dotted];
m9_729 -> m9_536  [key=2, style=dotted];
m9_729 -> m9_110  [key=2, style=dotted];
m9_730 -> m9_731  [key=0, style=solid];
m9_730 -> m9_124  [key=2, style=dotted];
m9_712 -> m9_713  [key=0, style=solid];
m9_712 -> m9_727  [key=1, style=dashed, color=darkseagreen4, label=version];
m9_713 -> m9_714  [key=0, style=solid];
m9_713 -> m9_727  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m9_714 -> m9_715  [key=0, style=solid];
m9_714 -> m9_727  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m9_717 -> m9_718  [key=0, style=solid];
m9_720 -> m9_721  [key=0, style=solid];
m9_723 -> m9_724  [key=0, style=solid];
m9_731 -> m9_537  [key=0, style=bold, color=blue];
m9_236 -> m9_237  [key=0, style=solid];
m9_237 -> m9_238  [key=0, style=solid];
m9_237 -> m9_239  [key=2, style=dotted];
m9_238 -> m9_236  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_6  [key=2, style=dotted];
m9_9 -> m9_11  [key=2, style=dotted];
m9_10 -> m9_8  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_114 -> m9_115  [key=0, style=solid];
m9_115 -> m9_114  [key=0, style=bold, color=blue];
m9_153 -> m9_154  [key=0, style=solid];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_126  [key=2, style=dotted];
m9_154 -> m9_156  [key=2, style=dotted];
m9_155 -> m9_153  [key=0, style=bold, color=blue];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_6  [key=2, style=dotted];
m9_4 -> m9_7  [key=2, style=dotted];
m9_5 -> m9_3  [key=0, style=bold, color=blue];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_6  [key=2, style=dotted];
m9_21 -> m9_23  [key=2, style=dotted];
m9_22 -> m9_20  [key=0, style=bold, color=blue];
m9_517 -> m9_518  [key=0, style=solid];
m9_517 -> m9_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_517 -> m9_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_517 -> m9_524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_517 -> m9_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_517 -> m9_527  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_517 -> m9_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_517 -> m9_529  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_517 -> m9_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_517 -> m9_531  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_517 -> m9_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_517 -> m9_534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_518 -> m9_519  [key=0, style=solid];
m9_518 -> m9_521  [key=0, style=solid];
m9_518 -> m9_523  [key=0, style=solid];
m9_518 -> m9_525  [key=0, style=solid];
m9_518 -> m9_527  [key=0, style=solid];
m9_520 -> m9_535  [key=0, style=solid];
m9_520 -> m9_536  [key=2, style=dotted];
m9_520 -> m9_98  [key=2, style=dotted];
m9_520 -> m9_124  [key=2, style=dotted];
m9_522 -> m9_535  [key=0, style=solid];
m9_522 -> m9_536  [key=2, style=dotted];
m9_522 -> m9_100  [key=2, style=dotted];
m9_522 -> m9_124  [key=2, style=dotted];
m9_524 -> m9_535  [key=0, style=solid];
m9_524 -> m9_536  [key=2, style=dotted];
m9_524 -> m9_102  [key=2, style=dotted];
m9_524 -> m9_124  [key=2, style=dotted];
m9_526 -> m9_535  [key=0, style=solid];
m9_526 -> m9_536  [key=2, style=dotted];
m9_526 -> m9_104  [key=2, style=dotted];
m9_526 -> m9_124  [key=2, style=dotted];
m9_527 -> m9_528  [key=0, style=solid];
m9_527 -> m9_529  [key=0, style=solid];
m9_527 -> m9_309  [key=2, style=dotted];
m9_528 -> m9_535  [key=0, style=solid];
m9_528 -> m9_537  [key=2, style=dotted];
m9_529 -> m9_530  [key=0, style=solid];
m9_529 -> m9_531  [key=0, style=solid];
m9_529 -> m9_538  [key=2, style=dotted];
m9_530 -> m9_535  [key=0, style=solid];
m9_530 -> m9_539  [key=2, style=dotted];
m9_531 -> m9_532  [key=0, style=solid];
m9_531 -> m9_534  [key=0, style=solid];
m9_532 -> m9_533  [key=0, style=solid];
m9_532 -> m9_540  [key=2, style=dotted];
m9_534 -> m9_535  [key=0, style=solid];
m9_534 -> m9_513  [key=2, style=dotted];
m9_519 -> m9_520  [key=0, style=solid];
m9_521 -> m9_522  [key=0, style=solid];
m9_523 -> m9_524  [key=0, style=solid];
m9_525 -> m9_526  [key=0, style=solid];
m9_533 -> m9_535  [key=0, style=solid];
m9_535 -> m9_517  [key=0, style=bold, color=blue];
m9_196 -> m9_197  [key=0, style=solid];
m9_197 -> m9_196  [key=0, style=bold, color=blue];
m9_169 -> m9_241  [key=0, style=solid];
m9_241 -> m9_169  [key=0, style=bold, color=blue];
m9_302 -> m9_303  [key=0, style=solid];
m9_302 -> m9_305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_302 -> m9_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_303 -> m9_304  [key=0, style=solid];
m9_303 -> m9_308  [key=2, style=dotted];
m9_303 -> m9_305  [key=1, style=dashed, color=darkseagreen4, label=prefix];
m9_305 -> m9_307  [key=0, style=solid];
m9_305 -> m9_310  [key=2, style=dotted];
m9_306 -> m9_307  [key=0, style=solid];
m9_306 -> m9_310  [key=2, style=dotted];
m9_304 -> m9_305  [key=0, style=solid];
m9_304 -> m9_306  [key=0, style=solid];
m9_304 -> m9_309  [key=2, style=dotted];
m9_307 -> m9_302  [key=0, style=bold, color=blue];
m9_129 -> m9_130  [key=0, style=solid];
m9_130 -> m9_131  [key=0, style=solid];
m9_131 -> m9_129  [key=0, style=bold, color=blue];
m9_252 -> m9_253  [key=0, style=solid];
m9_253 -> m9_254  [key=0, style=solid];
m9_253 -> m9_68  [key=2, style=dotted];
m9_254 -> m9_252  [key=0, style=bold, color=blue];
m9_104 -> m9_105  [key=0, style=solid];
m9_105 -> m9_104  [key=0, style=bold, color=blue];
m9_193 -> m9_229  [key=0, style=solid];
m9_193 -> m9_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_229 -> m9_230  [key=0, style=solid];
m9_229 -> m9_233  [key=2, style=dotted];
m9_231 -> m9_232  [key=0, style=solid];
m9_230 -> m9_231  [key=0, style=solid];
m9_232 -> m9_193  [key=0, style=bold, color=blue];
m9_340 -> m9_341  [key=0, style=solid];
m9_340 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_341 -> m9_342  [key=0, style=solid];
m9_341 -> m9_345  [key=0, style=solid];
m9_342 -> m9_343  [key=0, style=solid];
m9_342 -> m9_345  [key=0, style=solid];
m9_342 -> m9_344  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m9_345 -> m9_346  [key=0, style=solid];
m9_343 -> m9_344  [key=0, style=solid];
m9_343 -> m9_342  [key=0, style=solid];
m9_344 -> m9_346  [key=0, style=solid];
m9_344 -> m9_347  [key=2, style=dotted];
m9_346 -> m9_340  [key=0, style=bold, color=blue];
m9_72 -> m9_73  [key=0, style=solid];
m9_73 -> m9_74  [key=0, style=solid];
m9_74 -> m9_72  [key=0, style=bold, color=blue];
m9_161 -> m9_162  [key=0, style=solid];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> m9_164  [key=2, style=dotted];
m9_162 -> m9_165  [key=2, style=dotted];
m9_163 -> m9_161  [key=0, style=bold, color=blue];
m9_311 -> m9_312  [key=0, style=solid];
m9_311 -> m9_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_311 -> m9_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_311 -> m9_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_311 -> m9_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_311 -> m9_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_311 -> m9_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_311 -> m9_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_311 -> m9_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_311 -> m9_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_312 -> m9_313  [key=0, style=solid];
m9_312 -> m9_317  [key=0, style=solid];
m9_312 -> m9_319  [key=0, style=solid];
m9_312 -> m9_321  [key=0, style=solid];
m9_312 -> m9_325  [key=0, style=solid];
m9_312 -> m9_327  [key=0, style=solid];
m9_312 -> m9_329  [key=0, style=solid];
m9_312 -> m9_331  [key=0, style=solid];
m9_312 -> m9_333  [key=0, style=solid];
m9_312 -> m9_335  [key=0, style=solid];
m9_312 -> m9_337  [key=0, style=solid];
m9_314 -> m9_315  [key=0, style=solid];
m9_314 -> m9_316  [key=0, style=solid];
m9_315 -> m9_338  [key=0, style=solid];
m9_316 -> m9_338  [key=0, style=solid];
m9_316 -> m9_302  [key=2, style=dotted];
m9_322 -> m9_323  [key=0, style=solid];
m9_322 -> m9_324  [key=0, style=solid];
m9_323 -> m9_338  [key=0, style=solid];
m9_324 -> m9_338  [key=0, style=solid];
m9_324 -> m9_302  [key=2, style=dotted];
m9_326 -> m9_338  [key=0, style=solid];
m9_326 -> m9_302  [key=2, style=dotted];
m9_328 -> m9_338  [key=0, style=solid];
m9_328 -> m9_302  [key=2, style=dotted];
m9_337 -> m9_338  [key=0, style=solid];
m9_337 -> m9_339  [key=2, style=dotted];
m9_313 -> m9_314  [key=0, style=solid];
m9_317 -> m9_318  [key=0, style=solid];
m9_319 -> m9_320  [key=0, style=solid];
m9_321 -> m9_322  [key=0, style=solid];
m9_325 -> m9_326  [key=0, style=solid];
m9_327 -> m9_328  [key=0, style=solid];
m9_329 -> m9_330  [key=0, style=solid];
m9_331 -> m9_332  [key=0, style=solid];
m9_333 -> m9_334  [key=0, style=solid];
m9_335 -> m9_336  [key=0, style=solid];
m9_318 -> m9_338  [key=0, style=solid];
m9_320 -> m9_338  [key=0, style=solid];
m9_330 -> m9_338  [key=0, style=solid];
m9_332 -> m9_338  [key=0, style=solid];
m9_334 -> m9_338  [key=0, style=solid];
m9_336 -> m9_338  [key=0, style=solid];
m9_338 -> m9_311  [key=0, style=bold, color=blue];
m9_166 -> m9_167  [key=0, style=solid];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> m9_169  [key=2, style=dotted];
m9_167 -> m9_170  [key=2, style=dotted];
m9_168 -> m9_166  [key=0, style=bold, color=blue];
m9_476 -> m9_477  [key=0, style=solid];
m9_476 -> m9_482  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_476 -> m9_483  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_476 -> m9_488  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_476 -> m9_489  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_476 -> m9_496  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_476 -> m9_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_476 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_476 -> m9_501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_476 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_476 -> m9_503  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_477 -> m9_478  [key=0, style=solid];
m9_477 -> m9_479  [key=0, style=solid];
m9_482 -> m9_483  [key=0, style=solid];
m9_482 -> m9_488  [key=0, style=solid];
m9_482 -> m9_509  [key=2, style=dotted];
m9_483 -> m9_484  [key=0, style=solid];
m9_483 -> m9_485  [key=0, style=solid];
m9_488 -> m9_489  [key=0, style=solid];
m9_488 -> m9_495  [key=0, style=solid];
m9_488 -> m9_509  [key=2, style=dotted];
m9_489 -> m9_490  [key=0, style=solid];
m9_489 -> m9_491  [key=0, style=solid];
m9_496 -> m9_508  [key=0, style=solid];
m9_496 -> m9_510  [key=2, style=dotted];
m9_497 -> m9_498  [key=0, style=solid];
m9_497 -> m9_499  [key=0, style=solid];
m9_500 -> m9_503  [key=0, style=solid];
m9_500 -> m9_513  [key=2, style=dotted];
m9_501 -> m9_502  [key=0, style=solid];
m9_501 -> m9_514  [key=2, style=dotted];
m9_502 -> m9_503  [key=0, style=solid];
m9_502 -> m9_515  [key=2, style=dotted];
m9_503 -> m9_504  [key=0, style=solid];
m9_503 -> m9_507  [key=0, style=solid];
m9_478 -> m9_508  [key=0, style=solid];
m9_479 -> m9_480  [key=0, style=solid];
m9_479 -> m9_266  [key=2, style=dotted];
m9_479 -> m9_267  [key=2, style=dotted];
m9_479 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label=manager];
m9_479 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label=manager];
m9_480 -> m9_481  [key=0, style=solid];
m9_480 -> m9_495  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_480 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_480 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_480 -> m9_504  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_480 -> m9_507  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_481 -> m9_482  [key=0, style=solid];
m9_481 -> m9_495  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m9_481 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m9_481 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m9_495 -> m9_496  [key=0, style=solid];
m9_495 -> m9_497  [key=0, style=solid];
m9_504 -> m9_505  [key=0, style=solid];
m9_504 -> m9_506  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_507 -> m9_508  [key=0, style=solid];
m9_484 -> m9_508  [key=0, style=solid];
m9_484 -> m9_510  [key=2, style=dotted];
m9_485 -> m9_486  [key=0, style=solid];
m9_485 -> m9_511  [key=2, style=dotted];
m9_486 -> m9_487  [key=0, style=solid];
m9_486 -> m9_132  [key=2, style=dotted];
m9_486 -> m9_495  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_486 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_486 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_486 -> m9_504  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_486 -> m9_507  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_487 -> m9_488  [key=0, style=solid];
m9_487 -> m9_495  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m9_487 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m9_487 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m9_490 -> m9_508  [key=0, style=solid];
m9_490 -> m9_510  [key=2, style=dotted];
m9_491 -> m9_492  [key=0, style=solid];
m9_491 -> m9_512  [key=2, style=dotted];
m9_492 -> m9_493  [key=0, style=solid];
m9_492 -> m9_492  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_493 -> m9_494  [key=0, style=solid];
m9_493 -> m9_0  [key=2, style=dotted];
m9_493 -> m9_495  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_493 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_493 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_493 -> m9_504  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_493 -> m9_507  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_494 -> m9_495  [key=0, style=solid];
m9_494 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m9_494 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m9_498 -> m9_508  [key=0, style=solid];
m9_498 -> m9_510  [key=2, style=dotted];
m9_499 -> m9_500  [key=0, style=solid];
m9_499 -> m9_501  [key=0, style=solid];
m9_499 -> m9_309  [key=2, style=dotted];
m9_505 -> m9_506  [key=0, style=solid];
m9_505 -> m9_516  [key=2, style=dotted];
m9_506 -> m9_508  [key=0, style=solid];
m9_508 -> m9_476  [key=0, style=bold, color=blue];
m9_143 -> m9_144  [key=0, style=solid];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_137  [key=2, style=dotted];
m9_144 -> m9_146  [key=2, style=dotted];
m9_145 -> m9_143  [key=0, style=bold, color=blue];
m9_573 -> m9_574  [key=0, style=solid];
m9_573 -> m9_575  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_573 -> m9_576  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m9_573 -> m9_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_573 -> m9_581  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_573 -> m9_582  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_573 -> m9_584  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_573 -> m9_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_573 -> m9_586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_573 -> m9_587  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_573 -> m9_588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_573 -> m9_589  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_573 -> m9_590  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_574 -> m9_575  [key=0, style=solid];
m9_574 -> m9_592  [key=2, style=dotted];
m9_574 -> m9_580  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_574 -> m9_584  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_574 -> m9_588  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_575 -> m9_576  [key=0, style=solid];
m9_575 -> m9_124  [key=2, style=dotted];
m9_576 -> m9_577  [key=0, style=solid];
m9_576 -> m9_581  [key=0, style=solid];
m9_579 -> m9_580  [key=0, style=solid];
m9_579 -> m9_309  [key=2, style=dotted];
m9_579 -> m9_594  [key=2, style=dotted];
m9_579 -> m9_51  [key=2, style=dotted];
m9_579 -> m9_116  [key=2, style=dotted];
m9_579 -> m9_579  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m9_581 -> m9_582  [key=0, style=solid];
m9_581 -> m9_585  [key=0, style=solid];
m9_582 -> m9_583  [key=0, style=solid];
m9_582 -> m9_595  [key=2, style=dotted];
m9_582 -> m9_584  [key=1, style=dashed, color=darkseagreen4, label=text];
m9_584 -> m9_591  [key=0, style=solid];
m9_584 -> m9_98  [key=2, style=dotted];
m9_584 -> m9_124  [key=2, style=dotted];
m9_585 -> m9_586  [key=0, style=solid];
m9_585 -> m9_591  [key=0, style=solid];
m9_586 -> m9_587  [key=0, style=solid];
m9_586 -> m9_590  [key=0, style=solid];
m9_587 -> m9_588  [key=0, style=solid];
m9_587 -> m9_300  [key=2, style=dotted];
m9_588 -> m9_589  [key=0, style=solid];
m9_588 -> m9_515  [key=2, style=dotted];
m9_589 -> m9_590  [key=0, style=solid];
m9_589 -> m9_469  [key=2, style=dotted];
m9_590 -> m9_591  [key=0, style=solid];
m9_590 -> m9_596  [key=2, style=dotted];
m9_580 -> m9_576  [key=0, style=solid];
m9_580 -> m9_120  [key=2, style=dotted];
m9_577 -> m9_578  [key=0, style=solid];
m9_577 -> m9_593  [key=2, style=dotted];
m9_577 -> m9_577  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m9_577 -> m9_579  [key=1, style=dashed, color=darkseagreen4, label=encodedName];
m9_578 -> m9_579  [key=0, style=solid];
m9_578 -> m9_569  [key=2, style=dotted];
m9_578 -> m9_578  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m9_583 -> m9_584  [key=0, style=solid];
m9_583 -> m9_591  [key=0, style=solid];
m9_591 -> m9_573  [key=0, style=bold, color=blue];
m9_177 -> m9_178  [key=0, style=solid];
m9_178 -> m9_179  [key=0, style=solid];
m9_178 -> m9_180  [key=2, style=dotted];
m9_178 -> m9_181  [key=2, style=dotted];
m9_179 -> m9_177  [key=0, style=bold, color=blue];
m9_540 -> m9_634  [key=0, style=solid];
m9_540 -> m9_635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_540 -> m9_636  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_540 -> m9_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_540 -> m9_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_540 -> m9_642  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_540 -> m9_646  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_540 -> m9_647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_634 -> m9_635  [key=0, style=solid];
m9_634 -> m9_569  [key=2, style=dotted];
m9_635 -> m9_636  [key=0, style=solid];
m9_635 -> m9_592  [key=2, style=dotted];
m9_635 -> m9_639  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m9_635 -> m9_642  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m9_635 -> m9_644  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m9_636 -> m9_637  [key=0, style=solid];
m9_636 -> m9_124  [key=2, style=dotted];
m9_638 -> m9_639  [key=0, style=solid];
m9_638 -> m9_641  [key=0, style=solid];
m9_638 -> m9_514  [key=2, style=dotted];
m9_639 -> m9_640  [key=0, style=solid];
m9_639 -> m9_517  [key=2, style=dotted];
m9_642 -> m9_643  [key=0, style=solid];
m9_642 -> m9_649  [key=2, style=dotted];
m9_646 -> m9_647  [key=0, style=solid];
m9_646 -> m9_644  [key=0, style=solid];
m9_647 -> m9_648  [key=0, style=solid];
m9_647 -> m9_649  [key=2, style=dotted];
m9_644 -> m9_645  [key=0, style=solid];
m9_644 -> m9_648  [key=0, style=solid];
m9_637 -> m9_638  [key=0, style=solid];
m9_637 -> m9_640  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_637 -> m9_643  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_640 -> m9_638  [key=0, style=solid];
m9_640 -> m9_640  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_640 -> m9_643  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_643 -> m9_644  [key=0, style=solid];
m9_643 -> m9_648  [key=0, style=solid];
m9_641 -> m9_642  [key=0, style=solid];
m9_641 -> m9_643  [key=0, style=solid];
m9_645 -> m9_646  [key=0, style=solid];
m9_645 -> m9_647  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_648 -> m9_540  [key=0, style=bold, color=blue];
m9_126 -> m9_127  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_128 -> m9_126  [key=0, style=bold, color=blue];
m9_120 -> m9_121  [key=0, style=solid];
m9_121 -> m9_120  [key=0, style=bold, color=blue];
m9_164 -> m9_198  [key=0, style=solid];
m9_198 -> m9_164  [key=0, style=bold, color=blue];
m9_147 -> m9_148  [key=0, style=solid];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_137  [key=2, style=dotted];
m9_148 -> m9_142  [key=2, style=dotted];
m9_149 -> m9_147  [key=0, style=bold, color=blue];
m9_708 -> m9_788  [key=0, style=solid];
m9_708 -> m9_789  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_708 -> m9_792  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_708 -> m9_793  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_788 -> m9_789  [key=0, style=solid];
m9_788 -> m9_795  [key=0, style=solid];
m9_788 -> m9_798  [key=2, style=dotted];
m9_789 -> m9_790  [key=0, style=solid];
m9_789 -> m9_792  [key=0, style=solid];
m9_792 -> m9_793  [key=0, style=solid];
m9_792 -> m9_795  [key=0, style=solid];
m9_793 -> m9_794  [key=0, style=solid];
m9_793 -> m9_799  [key=2, style=dotted];
m9_795 -> m9_796  [key=0, style=solid];
m9_795 -> m9_797  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m9_790 -> m9_791  [key=0, style=solid];
m9_791 -> m9_797  [key=0, style=solid];
m9_794 -> m9_797  [key=0, style=solid];
m9_796 -> m9_797  [key=0, style=solid];
m9_797 -> m9_708  [key=0, style=bold, color=blue];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_6  [key=2, style=dotted];
m9_13 -> m9_15  [key=2, style=dotted];
m9_14 -> m9_12  [key=0, style=bold, color=blue];
m9_194 -> m9_195  [key=0, style=solid];
m9_195 -> m9_194  [key=0, style=bold, color=blue];
m9_106 -> m9_107  [key=0, style=solid];
m9_107 -> m9_106  [key=0, style=bold, color=blue];
m9_112 -> m9_113  [key=0, style=solid];
m9_113 -> m9_112  [key=0, style=bold, color=blue];
m9_228 -> m9_234  [key=0, style=solid];
m9_234 -> m9_235  [key=0, style=solid];
m9_235 -> m9_228  [key=0, style=bold, color=blue];
m9_465 -> m9_800  [key=0, style=solid];
m9_800 -> m9_801  [key=0, style=solid];
m9_800 -> m9_803  [key=0, style=solid];
m9_801 -> m9_802  [key=0, style=solid];
m9_801 -> m9_800  [key=0, style=solid];
m9_803 -> m9_804  [key=0, style=solid];
m9_802 -> m9_804  [key=0, style=solid];
m9_804 -> m9_465  [key=0, style=bold, color=blue];
m9_805 -> m9_806  [key=0, style=solid];
m9_805 -> m9_808  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_806 -> m9_807  [key=0, style=solid];
m9_806 -> m9_808  [key=0, style=solid];
m9_806 -> m9_509  [key=2, style=dotted];
m9_808 -> m9_809  [key=0, style=solid];
m9_808 -> m9_810  [key=0, style=solid];
m9_808 -> m9_509  [key=2, style=dotted];
m9_807 -> m9_811  [key=0, style=solid];
m9_809 -> m9_811  [key=0, style=solid];
m9_810 -> m9_811  [key=0, style=solid];
m9_811 -> m9_805  [key=0, style=bold, color=blue];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_6  [key=2, style=dotted];
m9_53 -> m9_51  [key=2, style=dotted];
m9_53 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m9_54 -> m9_55  [key=0, style=solid];
m9_55 -> m9_56  [key=0, style=solid];
m9_56 -> m9_52  [key=0, style=bold, color=blue];
m9_139 -> m9_140  [key=0, style=solid];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_137  [key=2, style=dotted];
m9_140 -> m9_142  [key=2, style=dotted];
m9_141 -> m9_139  [key=0, style=bold, color=blue];
m9_649 -> m9_650  [key=0, style=solid];
m9_649 -> m9_651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m9_649 -> m9_652  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m9_649 -> m9_653  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m9_650 -> m9_651  [key=0, style=solid];
m9_650 -> m9_118  [key=2, style=dotted];
m9_650 -> m9_120  [key=2, style=dotted];
m9_651 -> m9_652  [key=0, style=solid];
m9_651 -> m9_654  [key=0, style=solid];
m9_652 -> m9_653  [key=0, style=solid];
m9_652 -> m9_654  [key=0, style=solid];
m9_652 -> m9_122  [key=2, style=dotted];
m9_653 -> m9_654  [key=0, style=solid];
m9_653 -> m9_118  [key=2, style=dotted];
m9_653 -> m9_120  [key=2, style=dotted];
m9_654 -> m9_649  [key=0, style=bold, color=blue];
m9_132 -> m9_133  [key=0, style=solid];
m9_133 -> m9_132  [key=0, style=bold, color=blue];
m9_124 -> m9_125  [key=0, style=solid];
m9_125 -> m9_124  [key=0, style=bold, color=blue];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_41  [key=2, style=dotted];
m9_44 -> m9_42  [key=2, style=dotted];
m9_45 -> m9_43  [key=0, style=bold, color=blue];
m9_29 -> m9_30  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_32  [key=2, style=dotted];
m9_30 -> m9_33  [key=2, style=dotted];
m9_31 -> m9_29  [key=0, style=bold, color=blue];
m9_122 -> m9_123  [key=0, style=solid];
m9_123 -> m9_122  [key=0, style=bold, color=blue];
m9_572 -> m9_597  [key=0, style=solid];
m9_572 -> m9_598  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_572 -> m9_599  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_572 -> m9_600  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_572 -> m9_601  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_572 -> m9_602  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_597 -> m9_598  [key=0, style=solid];
m9_597 -> m9_599  [key=0, style=solid];
m9_598 -> m9_603  [key=0, style=solid];
m9_598 -> m9_604  [key=2, style=dotted];
m9_598 -> m9_567  [key=2, style=dotted];
m9_599 -> m9_600  [key=0, style=solid];
m9_599 -> m9_593  [key=2, style=dotted];
m9_599 -> m9_601  [key=1, style=dashed, color=darkseagreen4, label=encodedName];
m9_600 -> m9_601  [key=0, style=solid];
m9_600 -> m9_536  [key=2, style=dotted];
m9_601 -> m9_602  [key=0, style=solid];
m9_601 -> m9_309  [key=2, style=dotted];
m9_601 -> m9_594  [key=2, style=dotted];
m9_601 -> m9_51  [key=2, style=dotted];
m9_601 -> m9_116  [key=2, style=dotted];
m9_602 -> m9_603  [key=0, style=solid];
m9_602 -> m9_120  [key=2, style=dotted];
m9_603 -> m9_572  [key=0, style=bold, color=blue];
m9_100 -> m9_101  [key=0, style=solid];
m9_101 -> m9_100  [key=0, style=bold, color=blue];
m9_199 -> m9_200  [key=0, style=solid];
m9_200 -> m9_199  [key=0, style=bold, color=blue];
m9_65 -> m9_66  [key=0, style=solid];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_68  [key=2, style=dotted];
m9_67 -> m9_65  [key=0, style=bold, color=blue];
m9_255 -> m9_256  [key=0, style=solid];
m9_255 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_255 -> m9_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_255 -> m9_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_256 -> m9_257  [key=0, style=solid];
m9_256 -> m9_265  [key=2, style=dotted];
m9_256 -> m9_258  [key=1, style=dashed, color=darkseagreen4, label=node];
m9_256 -> m9_261  [key=1, style=dashed, color=darkseagreen4, label=node];
m9_260 -> m9_261  [key=0, style=solid];
m9_260 -> m9_269  [key=2, style=dotted];
m9_261 -> m9_262  [key=0, style=solid];
m9_261 -> m9_270  [key=2, style=dotted];
m9_263 -> m9_264  [key=0, style=solid];
m9_263 -> m9_271  [key=2, style=dotted];
m9_257 -> m9_258  [key=0, style=solid];
m9_257 -> m9_266  [key=2, style=dotted];
m9_257 -> m9_267  [key=2, style=dotted];
m9_257 -> m9_261  [key=1, style=dashed, color=darkseagreen4, label=manager];
m9_258 -> m9_259  [key=0, style=solid];
m9_258 -> m9_268  [key=2, style=dotted];
m9_259 -> m9_260  [key=0, style=solid];
m9_259 -> m9_261  [key=0, style=solid];
m9_262 -> m9_263  [key=0, style=solid];
m9_262 -> m9_264  [key=0, style=solid];
m9_264 -> m9_255  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_41  [key=2, style=dotted];
m9_39 -> m9_42  [key=2, style=dotted];
m9_40 -> m9_38  [key=0, style=bold, color=blue];
m9_242 -> m9_243  [key=0, style=solid];
m9_243 -> m9_244  [key=0, style=solid];
m9_244 -> m9_245  [key=0, style=solid];
m9_244 -> m9_233  [key=2, style=dotted];
m9_245 -> m9_246  [key=0, style=solid];
m9_246 -> m9_242  [key=0, style=bold, color=blue];
m9_265 -> m9_272  [key=0, style=solid];
m9_265 -> m9_275  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_265 -> m9_278  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_272 -> m9_273  [key=0, style=solid];
m9_272 -> m9_274  [key=1, style=dashed, color=darkseagreen4, label=xObject];
m9_275 -> m9_276  [key=0, style=solid];
m9_275 -> m9_277  [key=1, style=dashed, color=darkseagreen4, label=node];
m9_278 -> m9_279  [key=0, style=solid];
m9_278 -> m9_280  [key=2, style=dotted];
m9_278 -> m9_281  [key=2, style=dotted];
m9_273 -> m9_274  [key=0, style=solid];
m9_273 -> m9_275  [key=0, style=solid];
m9_274 -> m9_279  [key=0, style=solid];
m9_274 -> m9_201  [key=2, style=dotted];
m9_276 -> m9_277  [key=0, style=solid];
m9_276 -> m9_278  [key=0, style=solid];
m9_277 -> m9_279  [key=0, style=solid];
m9_277 -> m9_78  [key=2, style=dotted];
m9_279 -> m9_265  [key=0, style=bold, color=blue];
m9_16 -> m9_17  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_6  [key=2, style=dotted];
m9_17 -> m9_19  [key=2, style=dotted];
m9_18 -> m9_16  [key=0, style=bold, color=blue];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_6  [key=2, style=dotted];
m9_47 -> m9_51  [key=2, style=dotted];
m9_47 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m9_48 -> m9_49  [key=0, style=solid];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_46  [key=0, style=bold, color=blue];
m9_102 -> m9_103  [key=0, style=solid];
m9_103 -> m9_102  [key=0, style=bold, color=blue];
m9_116 -> m9_117  [key=0, style=solid];
m9_117 -> m9_116  [key=0, style=bold, color=blue];
m9_592 -> m9_754  [key=0, style=solid];
m9_592 -> m9_755  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_592 -> m9_756  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_754 -> m9_755  [key=0, style=solid];
m9_754 -> m9_593  [key=2, style=dotted];
m9_754 -> m9_756  [key=1, style=dashed, color=darkseagreen4, label=encodeName];
m9_755 -> m9_756  [key=0, style=solid];
m9_755 -> m9_309  [key=2, style=dotted];
m9_755 -> m9_594  [key=2, style=dotted];
m9_756 -> m9_757  [key=0, style=solid];
m9_756 -> m9_309  [key=2, style=dotted];
m9_756 -> m9_114  [key=2, style=dotted];
m9_756 -> m9_112  [key=2, style=dotted];
m9_757 -> m9_758  [key=0, style=solid];
m9_758 -> m9_592  [key=0, style=bold, color=blue];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_89 -> m9_90  [key=0, style=solid];
m9_93 -> m9_94  [key=0, style=solid];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_95  [key=2, style=dotted];
m9_91 -> m9_92  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_94 -> m9_88  [key=0, style=bold, color=blue];
m9_464 -> m9_471  [key=0, style=solid];
m9_464 -> m9_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_471 -> m9_472  [key=0, style=solid];
m9_471 -> m9_474  [key=0, style=solid];
m9_472 -> m9_473  [key=0, style=solid];
m9_472 -> m9_471  [key=0, style=solid];
m9_474 -> m9_475  [key=0, style=solid];
m9_473 -> m9_475  [key=0, style=solid];
m9_475 -> m9_464  [key=0, style=bold, color=blue];
m9_270 -> m9_384  [key=0, style=solid];
m9_270 -> m9_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_391  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_270 -> m9_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_396  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_270 -> m9_397  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_270 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_404  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_413  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_270 -> m9_415  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_270 -> m9_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_428  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_270 -> m9_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_270 -> m9_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_270 -> m9_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_384 -> m9_385  [key=0, style=solid];
m9_384 -> m9_388  [key=0, style=solid];
m9_384 -> m9_414  [key=0, style=solid];
m9_384 -> m9_417  [key=0, style=solid];
m9_384 -> m9_431  [key=0, style=solid];
m9_384 -> m9_445  [key=0, style=solid];
m9_384 -> m9_462  [key=0, style=solid];
m9_387 -> m9_463  [key=0, style=solid];
m9_387 -> m9_348  [key=2, style=dotted];
m9_389 -> m9_390  [key=0, style=solid];
m9_389 -> m9_391  [key=0, style=solid];
m9_389 -> m9_340  [key=2, style=dotted];
m9_389 -> m9_464  [key=2, style=dotted];
m9_390 -> m9_463  [key=0, style=solid];
m9_390 -> m9_348  [key=2, style=dotted];
m9_391 -> m9_392  [key=0, style=solid];
m9_391 -> m9_300  [key=2, style=dotted];
m9_392 -> m9_393  [key=0, style=solid];
m9_392 -> m9_397  [key=0, style=solid];
m9_392 -> m9_394  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m9_392 -> m9_395  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m9_396 -> m9_392  [key=0, style=solid];
m9_396 -> m9_301  [key=2, style=dotted];
m9_397 -> m9_398  [key=0, style=solid];
m9_397 -> m9_399  [key=0, style=solid];
m9_398 -> m9_399  [key=0, style=solid];
m9_398 -> m9_311  [key=2, style=dotted];
m9_398 -> m9_381  [key=2, style=dotted];
m9_399 -> m9_400  [key=0, style=solid];
m9_399 -> m9_401  [key=0, style=solid];
m9_399 -> m9_465  [key=2, style=dotted];
m9_400 -> m9_413  [key=0, style=solid];
m9_400 -> m9_466  [key=2, style=dotted];
m9_401 -> m9_402  [key=0, style=solid];
m9_401 -> m9_406  [key=0, style=solid];
m9_401 -> m9_467  [key=2, style=dotted];
m9_402 -> m9_403  [key=0, style=solid];
m9_404 -> m9_413  [key=0, style=solid];
m9_404 -> m9_468  [key=2, style=dotted];
m9_405 -> m9_413  [key=0, style=solid];
m9_405 -> m9_466  [key=2, style=dotted];
m9_406 -> m9_407  [key=0, style=solid];
m9_406 -> m9_269  [key=2, style=dotted];
m9_408 -> m9_409  [key=0, style=solid];
m9_408 -> m9_411  [key=0, style=solid];
m9_409 -> m9_410  [key=0, style=solid];
m9_409 -> m9_270  [key=2, style=dotted];
m9_411 -> m9_412  [key=0, style=solid];
m9_411 -> m9_348  [key=2, style=dotted];
m9_412 -> m9_413  [key=0, style=solid];
m9_412 -> m9_271  [key=2, style=dotted];
m9_413 -> m9_463  [key=0, style=solid];
m9_413 -> m9_469  [key=2, style=dotted];
m9_415 -> m9_416  [key=0, style=solid];
m9_415 -> m9_463  [key=0, style=solid];
m9_416 -> m9_463  [key=0, style=solid];
m9_416 -> m9_470  [key=2, style=dotted];
m9_423 -> m9_424  [key=0, style=solid];
m9_423 -> m9_425  [key=0, style=solid];
m9_425 -> m9_426  [key=0, style=solid];
m9_425 -> m9_428  [key=0, style=solid];
m9_426 -> m9_427  [key=0, style=solid];
m9_426 -> m9_428  [key=0, style=solid];
m9_428 -> m9_429  [key=0, style=solid];
m9_428 -> m9_430  [key=0, style=solid];
m9_429 -> m9_430  [key=0, style=solid];
m9_429 -> m9_311  [key=2, style=dotted];
m9_429 -> m9_381  [key=2, style=dotted];
m9_430 -> m9_463  [key=0, style=solid];
m9_430 -> m9_466  [key=2, style=dotted];
m9_432 -> m9_433  [key=0, style=solid];
m9_432 -> m9_435  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m9_432 -> m9_437  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m9_432 -> m9_438  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m9_432 -> m9_440  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m9_432 -> m9_441  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m9_432 -> m9_443  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m9_433 -> m9_434  [key=0, style=solid];
m9_433 -> m9_311  [key=2, style=dotted];
m9_433 -> m9_381  [key=2, style=dotted];
m9_434 -> m9_435  [key=0, style=solid];
m9_434 -> m9_269  [key=2, style=dotted];
m9_436 -> m9_437  [key=0, style=solid];
m9_436 -> m9_381  [key=2, style=dotted];
m9_437 -> m9_438  [key=0, style=solid];
m9_437 -> m9_466  [key=2, style=dotted];
m9_439 -> m9_440  [key=0, style=solid];
m9_439 -> m9_381  [key=2, style=dotted];
m9_440 -> m9_441  [key=0, style=solid];
m9_440 -> m9_466  [key=2, style=dotted];
m9_442 -> m9_443  [key=0, style=solid];
m9_442 -> m9_381  [key=2, style=dotted];
m9_443 -> m9_444  [key=0, style=solid];
m9_443 -> m9_466  [key=2, style=dotted];
m9_444 -> m9_463  [key=0, style=solid];
m9_444 -> m9_271  [key=2, style=dotted];
m9_446 -> m9_447  [key=0, style=solid];
m9_446 -> m9_449  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m9_446 -> m9_451  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m9_446 -> m9_452  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m9_446 -> m9_454  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m9_446 -> m9_455  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m9_446 -> m9_457  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m9_446 -> m9_458  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m9_446 -> m9_460  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m9_447 -> m9_448  [key=0, style=solid];
m9_447 -> m9_311  [key=2, style=dotted];
m9_447 -> m9_381  [key=2, style=dotted];
m9_448 -> m9_449  [key=0, style=solid];
m9_448 -> m9_269  [key=2, style=dotted];
m9_450 -> m9_451  [key=0, style=solid];
m9_450 -> m9_381  [key=2, style=dotted];
m9_451 -> m9_452  [key=0, style=solid];
m9_451 -> m9_466  [key=2, style=dotted];
m9_453 -> m9_454  [key=0, style=solid];
m9_453 -> m9_381  [key=2, style=dotted];
m9_454 -> m9_455  [key=0, style=solid];
m9_454 -> m9_466  [key=2, style=dotted];
m9_456 -> m9_457  [key=0, style=solid];
m9_456 -> m9_381  [key=2, style=dotted];
m9_457 -> m9_458  [key=0, style=solid];
m9_457 -> m9_466  [key=2, style=dotted];
m9_459 -> m9_460  [key=0, style=solid];
m9_459 -> m9_381  [key=2, style=dotted];
m9_460 -> m9_461  [key=0, style=solid];
m9_460 -> m9_466  [key=2, style=dotted];
m9_461 -> m9_463  [key=0, style=solid];
m9_461 -> m9_271  [key=2, style=dotted];
m9_462 -> m9_463  [key=0, style=solid];
m9_462 -> m9_339  [key=2, style=dotted];
m9_385 -> m9_386  [key=0, style=solid];
m9_388 -> m9_389  [key=0, style=solid];
m9_414 -> m9_415  [key=0, style=solid];
m9_417 -> m9_418  [key=0, style=solid];
m9_431 -> m9_432  [key=0, style=solid];
m9_445 -> m9_446  [key=0, style=solid];
m9_386 -> m9_387  [key=0, style=solid];
m9_393 -> m9_394  [key=0, style=solid];
m9_393 -> m9_392  [key=0, style=solid];
m9_394 -> m9_395  [key=0, style=solid];
m9_394 -> m9_310  [key=2, style=dotted];
m9_394 -> m9_396  [key=1, style=dashed, color=darkseagreen4, label=namespacePrefix];
m9_395 -> m9_396  [key=0, style=solid];
m9_403 -> m9_404  [key=0, style=solid];
m9_403 -> m9_405  [key=0, style=solid];
m9_407 -> m9_408  [key=0, style=solid];
m9_407 -> m9_409  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_407 -> m9_410  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_410 -> m9_408  [key=0, style=solid];
m9_410 -> m9_410  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_418 -> m9_419  [key=0, style=solid];
m9_419 -> m9_420  [key=0, style=solid];
m9_420 -> m9_421  [key=0, style=solid];
m9_421 -> m9_422  [key=0, style=solid];
m9_422 -> m9_423  [key=0, style=solid];
m9_424 -> m9_463  [key=0, style=solid];
m9_427 -> m9_463  [key=0, style=solid];
m9_435 -> m9_436  [key=0, style=solid];
m9_435 -> m9_438  [key=0, style=solid];
m9_435 -> m9_309  [key=2, style=dotted];
m9_438 -> m9_439  [key=0, style=solid];
m9_438 -> m9_441  [key=0, style=solid];
m9_438 -> m9_309  [key=2, style=dotted];
m9_441 -> m9_442  [key=0, style=solid];
m9_441 -> m9_444  [key=0, style=solid];
m9_441 -> m9_309  [key=2, style=dotted];
m9_449 -> m9_450  [key=0, style=solid];
m9_449 -> m9_452  [key=0, style=solid];
m9_449 -> m9_309  [key=2, style=dotted];
m9_452 -> m9_453  [key=0, style=solid];
m9_452 -> m9_455  [key=0, style=solid];
m9_452 -> m9_309  [key=2, style=dotted];
m9_455 -> m9_456  [key=0, style=solid];
m9_455 -> m9_458  [key=0, style=solid];
m9_455 -> m9_309  [key=2, style=dotted];
m9_458 -> m9_459  [key=0, style=solid];
m9_458 -> m9_461  [key=0, style=solid];
m9_458 -> m9_309  [key=2, style=dotted];
m9_463 -> m9_270  [key=0, style=bold, color=blue];
m9_268 -> m9_282  [key=0, style=solid];
m9_268 -> m9_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_268 -> m9_292  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_268 -> m9_295  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_282 -> m9_283  [key=0, style=solid];
m9_282 -> m9_286  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m9_282 -> m9_288  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m9_282 -> m9_289  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m9_282 -> m9_290  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m9_282 -> m9_291  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m9_283 -> m9_284  [key=0, style=solid];
m9_292 -> m9_293  [key=0, style=solid];
m9_292 -> m9_300  [key=2, style=dotted];
m9_295 -> m9_293  [key=0, style=solid];
m9_295 -> m9_301  [key=2, style=dotted];
m9_286 -> m9_287  [key=0, style=solid];
m9_286 -> m9_288  [key=0, style=solid];
m9_288 -> m9_284  [key=0, style=solid];
m9_288 -> m9_298  [key=2, style=dotted];
m9_289 -> m9_290  [key=0, style=solid];
m9_289 -> m9_296  [key=0, style=solid];
m9_290 -> m9_291  [key=0, style=solid];
m9_290 -> m9_299  [key=2, style=dotted];
m9_291 -> m9_292  [key=0, style=solid];
m9_291 -> m9_296  [key=0, style=solid];
m9_291 -> m9_293  [key=1, style=dashed, color=darkseagreen4, label=parentElement];
m9_284 -> m9_285  [key=0, style=solid];
m9_284 -> m9_289  [key=0, style=solid];
m9_284 -> m9_284  [key=1, style=dashed, color=darkseagreen4, label=parent];
m9_284 -> m9_288  [key=1, style=dashed, color=darkseagreen4, label=parent];
m9_285 -> m9_286  [key=0, style=solid];
m9_285 -> m9_284  [key=0, style=solid];
m9_287 -> m9_288  [key=0, style=solid];
m9_287 -> m9_297  [key=2, style=dotted];
m9_287 -> m9_289  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m9_287 -> m9_290  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m9_287 -> m9_291  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m9_293 -> m9_294  [key=0, style=solid];
m9_293 -> m9_291  [key=0, style=solid];
m9_293 -> m9_295  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m9_294 -> m9_295  [key=0, style=solid];
m9_294 -> m9_293  [key=0, style=solid];
m9_296 -> m9_268  [key=0, style=bold, color=blue];
m9_568 -> m9_655  [key=0, style=solid];
m9_568 -> m9_658  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_669  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_674  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_568 -> m9_682  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_568 -> m9_685  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_568 -> m9_689  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m9_568 -> m9_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_694  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_695  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_696  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_568 -> m9_705  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_655 -> m9_656  [key=0, style=solid];
m9_655 -> m9_378  [key=2, style=dotted];
m9_655 -> m9_671  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m9_655 -> m9_688  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m9_655 -> m9_697  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m9_655 -> m9_706  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m9_658 -> m9_659  [key=0, style=solid];
m9_658 -> m9_706  [key=0, style=solid];
m9_659 -> m9_660  [key=0, style=solid];
m9_659 -> m9_706  [key=0, style=solid];
m9_659 -> m9_514  [key=2, style=dotted];
m9_660 -> m9_661  [key=0, style=solid];
m9_660 -> m9_701  [key=0, style=solid];
m9_660 -> m9_703  [key=0, style=solid];
m9_660 -> m9_705  [key=0, style=solid];
m9_662 -> m9_663  [key=0, style=solid];
m9_662 -> m9_536  [key=2, style=dotted];
m9_662 -> m9_664  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_662 -> m9_668  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_669 -> m9_670  [key=0, style=solid];
m9_669 -> m9_514  [key=2, style=dotted];
m9_670 -> m9_671  [key=0, style=solid];
m9_670 -> m9_595  [key=2, style=dotted];
m9_670 -> m9_674  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
m9_674 -> m9_659  [key=0, style=solid];
m9_674 -> m9_301  [key=2, style=dotted];
m9_682 -> m9_683  [key=0, style=solid];
m9_682 -> m9_308  [key=2, style=dotted];
m9_682 -> m9_697  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m9_685 -> m9_686  [key=0, style=solid];
m9_685 -> m9_687  [key=0, style=solid];
m9_685 -> m9_594  [key=2, style=dotted];
m9_689 -> m9_690  [key=0, style=solid];
m9_689 -> m9_301  [key=2, style=dotted];
m9_693 -> m9_694  [key=0, style=solid];
m9_693 -> m9_514  [key=2, style=dotted];
m9_694 -> m9_695  [key=0, style=solid];
m9_694 -> m9_696  [key=0, style=solid];
m9_694 -> m9_710  [key=2, style=dotted];
m9_695 -> m9_707  [key=0, style=solid];
m9_695 -> m9_567  [key=2, style=dotted];
m9_696 -> m9_697  [key=0, style=solid];
m9_696 -> m9_536  [key=2, style=dotted];
m9_705 -> m9_707  [key=0, style=solid];
m9_705 -> m9_567  [key=2, style=dotted];
m9_656 -> m9_657  [key=0, style=solid];
m9_656 -> m9_659  [key=1, style=dashed, color=darkseagreen4, label=finishedAttributes];
m9_671 -> m9_672  [key=0, style=solid];
m9_671 -> m9_380  [key=2, style=dotted];
m9_688 -> m9_689  [key=0, style=solid];
m9_688 -> m9_380  [key=2, style=dotted];
m9_697 -> m9_659  [key=0, style=solid];
m9_697 -> m9_380  [key=2, style=dotted];
m9_706 -> m9_707  [key=0, style=solid];
m9_657 -> m9_658  [key=0, style=solid];
m9_657 -> m9_659  [key=1, style=dashed, color=darkseagreen4, label=finishedElement];
m9_661 -> m9_662  [key=0, style=solid];
m9_701 -> m9_702  [key=0, style=solid];
m9_703 -> m9_704  [key=0, style=solid];
m9_663 -> m9_664  [key=0, style=solid];
m9_663 -> m9_700  [key=0, style=solid];
m9_663 -> m9_309  [key=2, style=dotted];
m9_664 -> m9_665  [key=0, style=solid];
m9_664 -> m9_666  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m9_668 -> m9_669  [key=0, style=solid];
m9_668 -> m9_571  [key=2, style=dotted];
m9_668 -> m9_668  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_668 -> m9_671  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_668 -> m9_673  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_668 -> m9_676  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_668 -> m9_690  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_668 -> m9_692  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_700 -> m9_659  [key=0, style=solid];
m9_665 -> m9_666  [key=0, style=solid];
m9_666 -> m9_667  [key=0, style=solid];
m9_666 -> m9_675  [key=0, style=solid];
m9_666 -> m9_699  [key=0, style=solid];
m9_667 -> m9_668  [key=0, style=solid];
m9_675 -> m9_676  [key=0, style=solid];
m9_699 -> m9_659  [key=0, style=solid];
m9_673 -> m9_674  [key=0, style=solid];
m9_673 -> m9_659  [key=0, style=solid];
m9_673 -> m9_708  [key=2, style=dotted];
m9_676 -> m9_677  [key=0, style=solid];
m9_676 -> m9_698  [key=0, style=solid];
m9_690 -> m9_691  [key=0, style=solid];
m9_690 -> m9_692  [key=0, style=solid];
m9_692 -> m9_693  [key=0, style=solid];
m9_692 -> m9_571  [key=2, style=dotted];
m9_692 -> m9_692  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_692 -> m9_697  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m9_672 -> m9_673  [key=0, style=solid];
m9_677 -> m9_678  [key=0, style=solid];
m9_698 -> m9_659  [key=0, style=solid];
m9_678 -> m9_679  [key=0, style=solid];
m9_679 -> m9_680  [key=0, style=solid];
m9_680 -> m9_681  [key=0, style=solid];
m9_681 -> m9_682  [key=0, style=solid];
m9_683 -> m9_684  [key=0, style=solid];
m9_683 -> m9_690  [key=0, style=solid];
m9_684 -> m9_685  [key=0, style=solid];
m9_684 -> m9_686  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_684 -> m9_687  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_686 -> m9_685  [key=0, style=solid];
m9_686 -> m9_709  [key=2, style=dotted];
m9_686 -> m9_686  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_686 -> m9_687  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_687 -> m9_688  [key=0, style=solid];
m9_687 -> m9_689  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m9_687 -> m9_697  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m9_691 -> m9_659  [key=0, style=solid];
m9_702 -> m9_659  [key=0, style=solid];
m9_704 -> m9_659  [key=0, style=solid];
m9_707 -> m9_568  [key=0, style=bold, color=blue];
m9_515 -> m9_759  [key=0, style=solid];
m9_515 -> m9_761  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_515 -> m9_762  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_763  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_764  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_765  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_768  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m9_515 -> m9_774  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m9_515 -> m9_775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_777  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_778  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_781  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_785  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_515 -> m9_786  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_759 -> m9_760  [key=0, style=solid];
m9_759 -> m9_776  [key=0, style=solid];
m9_759 -> m9_780  [key=0, style=solid];
m9_759 -> m9_782  [key=0, style=solid];
m9_759 -> m9_785  [key=0, style=solid];
m9_761 -> m9_762  [key=0, style=solid];
m9_761 -> m9_763  [key=0, style=solid];
m9_762 -> m9_787  [key=0, style=solid];
m9_762 -> m9_567  [key=2, style=dotted];
m9_763 -> m9_764  [key=0, style=solid];
m9_763 -> m9_536  [key=2, style=dotted];
m9_763 -> m9_768  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m9_763 -> m9_773  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m9_763 -> m9_775  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m9_764 -> m9_765  [key=0, style=solid];
m9_764 -> m9_514  [key=2, style=dotted];
m9_765 -> m9_766  [key=0, style=solid];
m9_765 -> m9_775  [key=0, style=solid];
m9_767 -> m9_768  [key=0, style=solid];
m9_767 -> m9_770  [key=0, style=solid];
m9_767 -> m9_514  [key=2, style=dotted];
m9_768 -> m9_769  [key=0, style=solid];
m9_768 -> m9_517  [key=2, style=dotted];
m9_771 -> m9_772  [key=0, style=solid];
m9_771 -> m9_786  [key=0, style=solid];
m9_774 -> m9_786  [key=0, style=solid];
m9_774 -> m9_649  [key=2, style=dotted];
m9_775 -> m9_786  [key=0, style=solid];
m9_775 -> m9_517  [key=2, style=dotted];
m9_777 -> m9_778  [key=0, style=solid];
m9_777 -> m9_536  [key=2, style=dotted];
m9_777 -> m9_779  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m9_778 -> m9_779  [key=0, style=solid];
m9_778 -> m9_786  [key=0, style=solid];
m9_778 -> m9_514  [key=2, style=dotted];
m9_779 -> m9_778  [key=0, style=solid];
m9_779 -> m9_517  [key=2, style=dotted];
m9_781 -> m9_786  [key=0, style=solid];
m9_781 -> m9_96  [key=2, style=dotted];
m9_781 -> m9_124  [key=2, style=dotted];
m9_785 -> m9_787  [key=0, style=solid];
m9_785 -> m9_567  [key=2, style=dotted];
m9_786 -> m9_515  [key=0, style=solid];
m9_786 -> m9_787  [key=0, style=solid];
m9_786 -> m9_514  [key=2, style=dotted];
m9_760 -> m9_761  [key=0, style=solid];
m9_776 -> m9_777  [key=0, style=solid];
m9_780 -> m9_781  [key=0, style=solid];
m9_782 -> m9_783  [key=0, style=solid];
m9_773 -> m9_774  [key=0, style=solid];
m9_773 -> m9_771  [key=0, style=solid];
m9_766 -> m9_767  [key=0, style=solid];
m9_766 -> m9_769  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_766 -> m9_770  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_769 -> m9_767  [key=0, style=solid];
m9_769 -> m9_769  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_769 -> m9_770  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_770 -> m9_771  [key=0, style=solid];
m9_770 -> m9_786  [key=0, style=solid];
m9_772 -> m9_773  [key=0, style=solid];
m9_772 -> m9_774  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_783 -> m9_784  [key=0, style=solid];
m9_784 -> m9_787  [key=0, style=solid];
m9_787 -> m9_515  [key=0, style=bold, color=blue];
m9_812 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_812 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m9_813 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m9_813 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m9_813 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m9_814 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper"];
m9_815 -> m9_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper"];
m9_816 -> m9_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m9_816 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m9_816 -> m9_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m9_816 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m9_817 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDeclarationWrapper"];
m9_818 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentTypeWrapper"];
m9_819 -> m9_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentWrapper"];
m9_819 -> m9_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentWrapper"];
m9_820 -> m9_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XContainerWrapper"];
m9_820 -> m9_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XContainerWrapper"];
m9_821 -> m9_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XObjectWrapper"];
m9_822 -> m9_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m9_822 -> m9_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m9_822 -> m9_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m9_822 -> m9_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m9_822 -> m9_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m9_823 -> m9_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_582  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_642  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_643  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_768  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_770  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_774  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m9_823 -> m9_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_244 -> m10_245  [key=0, style=solid];
m10_244 -> m10_247  [key=2, style=dotted];
m10_244 -> m10_190  [key=0, style=bold, color=blue];
m10_245 -> m10_26  [key=2, style=dotted];
m10_245 -> m10_246  [key=0, style=solid];
m10_246 -> m10_243  [key=0, style=bold, color=blue];
m10_228 -> m10_229  [key=0, style=solid];
m10_228 -> m10_230  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid, color=red];
m10_47 -> m10_49  [key=0, style=solid, color=red];
m10_111 -> m10_112  [key=0, style=solid];
m10_111 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_111 -> m10_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_111 -> m10_108  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m10_111 -> m10_90  [key=2, style=dotted];
m10_112 -> m10_113  [key=0, style=solid];
m10_112 -> m10_117  [key=2, style=dotted];
m10_112 -> m10_54  [key=2, style=dotted];
m10_112 -> m10_55  [key=2, style=dotted];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_117  [key=2, style=dotted];
m10_113 -> m10_108  [key=0, style=bold, color=blue];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_119  [key=2, style=dotted];
m10_115 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_114 -> m10_115  [key=0, style=solid];
m10_114 -> m10_118  [key=2, style=dotted];
m10_116 -> m10_111  [key=0, style=bold, color=blue];
m10_116 -> m10_117  [key=0, style=solid];
m10_116 -> m10_114  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_21 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_21 -> m10_30  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings"];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_25  [key=2, style=dotted];
m10_22 -> m10_18  [key=2, style=dotted];
m10_22 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m10_23 -> m10_26  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_25  [key=0, style=solid];
m10_24 -> m10_21  [key=0, style=bold, color=blue];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_27  [key=2, style=dotted];
m10_157 -> m10_158  [key=0, style=solid];
m10_157 -> m10_159  [key=1, style=dashed, color=darkseagreen4, label=bool];
m10_158 -> m10_159  [key=0, style=solid];
m10_158 -> m10_114  [key=2, style=dotted];
m10_158 -> m10_178  [key=2, style=dotted];
m10_158 -> m10_160  [key=1, style=dashed, color=darkseagreen4, label=traceJsonReader];
m10_158 -> m10_161  [key=1, style=dashed, color=darkseagreen4, label=traceJsonReader];
m10_158 -> m10_162  [key=1, style=dashed, color=darkseagreen4, label=traceJsonReader];
m10_159 -> m10_90  [key=2, style=dotted];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_161  [key=2, style=dotted];
m10_159 -> m10_118  [key=2, style=dotted];
m10_160 -> m10_157  [key=0, style=bold, color=blue];
m10_160 -> m10_161  [key=0, style=solid];
m10_160 -> m10_179  [key=2, style=dotted];
m10_160 -> m10_175  [key=1, style=dashed, color=darkseagreen4, label=value];
m10_179 -> m10_90  [key=2, style=dotted];
m10_179 -> m10_180  [key=0, style=solid];
m10_179 -> m10_181  [key=2, style=dotted];
m10_178 -> m10_179  [key=0, style=solid];
m10_178 -> m10_114  [key=2, style=dotted];
m10_178 -> m10_189  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings"];
m10_269 -> m10_270  [key=0, style=solid];
m10_269 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m10_270 -> m10_271  [key=0, style=solid];
m10_270 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label=error];
m10_272 -> m10_273  [key=0, style=solid];
m10_272 -> m10_274  [key=2, style=dotted];
m10_271 -> m10_272  [key=0, style=solid];
m10_271 -> m10_273  [key=0, style=solid];
m10_273 -> m10_269  [key=0, style=bold, color=blue];
m10_176 -> m10_132  [key=0, style=bold, color=blue];
m10_172 -> m10_173  [key=0, style=solid];
m10_172 -> m10_174  [key=1, style=dashed, color=darkseagreen4, label=char];
m10_173 -> m10_174  [key=0, style=solid];
m10_173 -> m10_114  [key=2, style=dotted];
m10_173 -> m10_175  [key=0, style=solid];
m10_174 -> m10_90  [key=2, style=dotted];
m10_174 -> m10_175  [key=0, style=solid];
m10_174 -> m10_176  [key=2, style=dotted];
m10_175 -> m10_172  [key=0, style=bold, color=blue];
m10_175 -> m10_176  [key=0, style=solid];
m10_139 -> m10_140  [key=0, style=solid];
m10_139 -> m10_142  [key=0, style=solid];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_3  [key=2, style=dotted];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_123  [key=3, color=darkorchid, style=bold, label="method methodReturn object Deserialize"];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_107  [key=2, style=dotted];
m10_125 -> m10_123  [key=2, style=dotted];
m10_125 -> m10_127  [key=1, style=dashed, color=darkseagreen4, label=long];
m10_126 -> m10_124  [key=0, style=bold, color=blue];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_114  [key=2, style=dotted];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_172  [key=1, style=dashed, color=darkseagreen4, label=previousMaxDepth];
m10_150 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable int? previousMaxDepth"];
m10_25 -> m10_26  [key=0, style=solid];
m10_26 -> m10_21  [key=0, style=bold, color=blue];
m10_258 -> m10_259  [key=0, style=solid];
m10_258 -> m10_261  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>"];
m10_258 -> m10_262  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>"];
m10_258 -> m10_263  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_258 -> m10_255  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_258 -> m10_121  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.JsonConverter GetMatchingConverter"];
m10_259 -> m10_260  [key=0, style=solid];
m10_259 -> m10_266  [key=0, style=solid];
m10_261 -> m10_262  [key=0, style=solid];
m10_261 -> m10_266  [key=0, style=solid];
m10_261 -> m10_42  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m10_262 -> m10_263  [key=0, style=solid];
m10_262 -> m10_264  [key=1, style=dashed, color=darkseagreen4, label=converter];
m10_263 -> m10_264  [key=0, style=solid];
m10_263 -> m10_265  [key=0, style=solid];
m10_263 -> m10_268  [key=2, style=dotted];
m10_260 -> m10_261  [key=0, style=solid];
m10_260 -> m10_262  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_260 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_266 -> m10_267  [key=0, style=solid];
m10_265 -> m10_261  [key=0, style=solid];
m10_265 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_264 -> m10_267  [key=0, style=solid];
m10_267 -> m10_258  [key=0, style=bold, color=blue];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_57 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_57 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label=bool];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_53  [key=2, style=dotted];
m10_60 -> m10_66  [key=0, style=solid];
m10_60 -> m10_54  [key=2, style=dotted];
m10_60 -> m10_55  [key=2, style=dotted];
m10_60 -> m10_61  [key=0, style=solid];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_63  [key=0, style=solid];
m10_62 -> m10_56  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_63 -> m10_26  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_65  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_66  [key=0, style=solid];
m10_65 -> m10_56  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_67  [key=0, style=solid];
m10_66 -> m10_56  [key=2, style=dotted];
m10_66 -> m10_67  [key=0, style=solid];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_61  [key=0, style=solid];
m10_67 -> m10_57  [key=0, style=bold, color=blue];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_69  [key=0, style=solid];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_122  [key=1, style=dashed, color=darkseagreen4, label=uint];
m10_120 -> m10_123  [key=3, color=darkorchid, style=bold, label="method methodReturn object Deserialize"];
m10_121 -> m10_122  [key=0, style=solid];
m10_121 -> m10_114  [key=2, style=dotted];
m10_121 -> m10_123  [key=2, style=dotted];
m10_122 -> m10_90  [key=2, style=dotted];
m10_122 -> m10_123  [key=0, style=solid];
m10_122 -> m10_124  [key=2, style=dotted];
m10_122 -> m10_120  [key=0, style=bold, color=blue];
m10_123 -> m10_120  [key=0, style=bold, color=blue];
m10_123 -> m10_130  [key=0, style=solid];
m10_123 -> m10_127  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_123 -> m10_121  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_123 -> m10_124  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_123 -> m10_132  [key=3, color=darkorchid, style=bold, label="method methodReturn object Deserialize"];
m10_140 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label="float?"];
m10_140 -> m10_141  [key=0, style=solid];
m10_140 -> m10_165  [key=1, style=dashed, color=darkseagreen4, label=previousDateTimeZoneHandling];
m10_140 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label=previousDateTimeZoneHandling];
m10_142 -> m10_145  [key=0, style=solid];
m10_142 -> m10_93  [key=2, style=dotted];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_167  [key=1, style=dashed, color=darkseagreen4, label=previousDateParseHandling];
m10_142 -> m10_168  [key=1, style=dashed, color=darkseagreen4, label=previousDateParseHandling];
m10_142 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.DateParseHandling? previousDateParseHandling"];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_114  [key=2, style=dotted];
m10_143 -> m10_146  [key=0, style=solid];
m10_144 -> m10_90  [key=2, style=dotted];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_139  [key=2, style=dotted];
m10_144 -> m10_167  [key=1, style=dashed, color=darkseagreen4, label=previousDateParseHandling];
m10_144 -> m10_168  [key=1, style=dashed, color=darkseagreen4, label=previousDateParseHandling];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_143  [key=0, style=solid];
m10_145 -> m10_140  [key=0, style=bold, color=blue];
m10_145 -> m10_146  [key=0, style=solid];
m10_248 -> m10_79  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_85  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_164  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_248 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextWriter"];
m10_162 -> m10_164  [key=1, style=dashed, color=green, label=short];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_180  [key=2, style=dotted];
m10_162 -> m10_181  [key=2, style=dotted];
m10_164 -> m10_165  [key=0, style=solid, color=green];
m10_164 -> m10_166  [key=2, style=dotted, color=green];
m10_164 -> m10_90  [key=2, style=dotted, color=green];
m10_163 -> m10_164  [key=0, style=solid, color=green];
m10_163 -> m10_114  [key=2, style=dotted];
m10_163 -> m10_165  [key=0, style=solid];
m10_165 -> m10_162  [key=0, style=bold, color=blue];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_167  [key=0, style=solid];
m10_97 -> m10_98  [key=0, style=solid];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_213  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid, color=red];
m10_48 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_53  [key=2, style=dotted];
m10_49 -> m10_51  [key=0, style=solid];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_54  [key=2, style=dotted];
m10_50 -> m10_55  [key=2, style=dotted];
m10_51 -> m10_56  [key=2, style=dotted];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_53  [key=0, style=solid];
m10_52 -> m10_48  [key=0, style=bold, color=blue];
m10_52 -> m10_53  [key=0, style=solid];
m10_117 -> m10_90  [key=2, style=dotted];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_119  [key=2, style=dotted];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_108 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_108 -> m10_104  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m10_109 -> m10_110  [key=0, style=solid];
m10_109 -> m10_114  [key=2, style=dotted];
m10_109 -> m10_111  [key=2, style=dotted];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_112  [key=0, style=solid];
m10_110 -> m10_108  [key=0, style=bold, color=blue];
m10_82 -> m10_83  [key=0, style=solid];
m10_180 -> m10_177  [key=0, style=bold, color=blue];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_132  [key=2, style=dotted];
m10_131 -> m10_123  [key=0, style=bold, color=blue];
m10_131 -> m10_132  [key=0, style=solid];
m10_131 -> m10_114  [key=2, style=dotted];
m10_212 -> m10_213  [key=0, style=solid];
m10_212 -> m10_215  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m10_213 -> m10_214  [key=0, style=solid];
m10_213 -> m10_114  [key=2, style=dotted];
m10_213 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=previousStringEscapeHandling];
m10_213 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label=previousStringEscapeHandling];
m10_213 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.StringEscapeHandling? previousStringEscapeHandling"];
m10_214 -> m10_56  [key=2, style=dotted];
m10_214 -> m10_215  [key=0, style=solid];
m10_214 -> m10_217  [key=0, style=solid];
m10_215 -> m10_216  [key=0, style=solid];
m10_215 -> m10_218  [key=2, style=dotted];
m10_215 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=previousStringEscapeHandling];
m10_215 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label=previousStringEscapeHandling];
m10_216 -> m10_56  [key=2, style=dotted];
m10_216 -> m10_217  [key=0, style=solid];
m10_217 -> m10_212  [key=0, style=bold, color=blue];
m10_217 -> m10_218  [key=0, style=solid];
m10_217 -> m10_242  [key=1, style=dashed, color=darkseagreen4, label=previousCulture];
m10_217 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=previousCulture];
m10_217 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable System.Globalization.CultureInfo previousCulture"];
m10_191 -> m10_192  [key=0, style=solid];
m10_200 -> m10_201  [key=0, style=solid];
m10_236 -> m10_237  [key=0, style=solid];
m10_236 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_236 -> m10_238  [key=0, style=solid];
m10_237 -> m10_238  [key=0, style=solid];
m10_237 -> m10_242  [key=2, style=dotted];
m10_238 -> m10_26  [key=2, style=dotted];
m10_238 -> m10_239  [key=0, style=solid];
m10_238 -> m10_240  [key=0, style=solid];
m10_239 -> m10_26  [key=2, style=dotted];
m10_239 -> m10_240  [key=0, style=solid];
m10_240 -> m10_26  [key=2, style=dotted];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_242  [key=0, style=solid];
m10_241 -> m10_236  [key=0, style=bold, color=blue];
m10_241 -> m10_242  [key=0, style=solid];
m10_132 -> m10_90  [key=2, style=dotted];
m10_132 -> m10_133  [key=0, style=solid];
m10_132 -> m10_134  [key=2, style=dotted];
m10_132 -> m10_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_132 -> m10_123  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_133 -> m10_130  [key=0, style=bold, color=blue];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_117  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_34 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_34 -> m10_26  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_28  [key=2, style=dotted];
m10_35 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m10_35 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m10_35 -> m10_26  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_38  [key=0, style=solid];
m10_36 -> m10_31  [key=0, style=bold, color=blue];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_27  [key=2, style=dotted];
m10_37 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonToken"];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_45  [key=0, style=solid];
m10_38 -> m10_41  [key=0, style=solid];
m10_38 -> m10_43  [key=0, style=solid];
m10_39 -> m10_34  [key=0, style=bold, color=blue];
m10_39 -> m10_40  [key=0, style=solid];
m10_187 -> m10_188  [key=0, style=solid];
m10_187 -> m10_191  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_187 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m10_188 -> m10_189  [key=0, style=solid];
m10_188 -> m10_190  [key=2, style=dotted];
m10_188 -> m10_114  [key=2, style=dotted];
m10_189 -> m10_187  [key=0, style=bold, color=blue];
m10_189 -> m10_90  [key=2, style=dotted];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_191  [key=2, style=dotted];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_211 -> m10_212  [key=0, style=solid];
m10_211 -> m10_236  [key=1, style=dashed, color=darkseagreen4, label=previousFloatFormatHandling];
m10_211 -> m10_237  [key=1, style=dashed, color=darkseagreen4, label=previousFloatFormatHandling];
m10_13 -> m10_14  [key=0, style=solid];
m10_192 -> m10_193  [key=0, style=solid];
m10_192 -> m10_194  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_192 -> m10_185  [key=2, style=dotted];
m10_192 -> m10_187  [key=2, style=dotted];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_114  [key=2, style=dotted];
m10_193 -> m10_191  [key=0, style=bold, color=blue];
m10_194 -> m10_194  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_194 -> m10_195  [key=0, style=solid];
m10_194 -> m10_199  [key=2, style=dotted];
m10_194 -> m10_196  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_194 -> m10_190  [key=2, style=dotted];
m10_195 -> m10_56  [key=2, style=dotted];
m10_195 -> m10_196  [key=0, style=solid];
m10_195 -> m10_186  [key=0, style=bold, color=blue];
m10_196 -> m10_197  [key=0, style=solid];
m10_196 -> m10_200  [key=2, style=dotted];
m10_196 -> m10_117  [key=2, style=dotted];
m10_197 -> m10_56  [key=2, style=dotted];
m10_197 -> m10_198  [key=0, style=solid];
m10_197 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label=previousFormatting];
m10_197 -> m10_231  [key=1, style=dashed, color=darkseagreen4, label=previousFormatting];
m10_197 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Formatting? previousFormatting"];
m10_198 -> m10_192  [key=0, style=bold, color=blue];
m10_198 -> m10_199  [key=0, style=solid];
m10_198 -> m10_201  [key=0, style=solid];
m10_129 -> m10_127  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_107  [key=2, style=dotted];
m10_105 -> m10_106  [key=0, style=solid];
m10_105 -> m10_107  [key=2, style=dotted];
m10_105 -> m10_108  [key=2, style=dotted];
m10_105 -> m10_26  [key=2, style=dotted];
m10_106 -> m10_104  [key=0, style=bold, color=blue];
m10_106 -> m10_103  [key=0, style=bold, color=blue];
m10_151 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m10_151 -> m10_152  [key=0, style=solid];
m10_151 -> m10_154  [key=0, style=solid];
m10_153 -> m10_156  [key=0, style=solid];
m10_153 -> m10_93  [key=2, style=dotted];
m10_153 -> m10_154  [key=0, style=solid];
m10_154 -> m10_155  [key=0, style=solid];
m10_154 -> m10_114  [key=2, style=dotted];
m10_154 -> m10_174  [key=1, style=dashed, color=darkseagreen4, label=previousDateFormatString];
m10_154 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable string previousDateFormatString"];
m10_155 -> m10_90  [key=2, style=dotted];
m10_155 -> m10_156  [key=0, style=solid];
m10_155 -> m10_150  [key=2, style=dotted];
m10_155 -> m10_158  [key=0, style=solid];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_154  [key=0, style=solid];
m10_152 -> m10_172  [key=1, style=dashed, color=darkseagreen4, label=previousMaxDepth];
m10_156 -> m10_151  [key=0, style=bold, color=blue];
m10_156 -> m10_157  [key=0, style=solid];
m10_156 -> m10_174  [key=1, style=dashed, color=darkseagreen4, label=previousDateFormatString];
m10_146 -> m10_147  [key=0, style=solid];
m10_146 -> m10_148  [key=1, style=dashed, color=darkseagreen4, label=double];
m10_146 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label=previousFloatParseHandling];
m10_146 -> m10_170  [key=1, style=dashed, color=darkseagreen4, label=previousFloatParseHandling];
m10_146 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.FloatParseHandling? previousFloatParseHandling"];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_114  [key=2, style=dotted];
m10_147 -> m10_150  [key=0, style=solid];
m10_148 -> m10_90  [key=2, style=dotted];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_150  [key=2, style=dotted];
m10_148 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label=previousFloatParseHandling];
m10_148 -> m10_170  [key=1, style=dashed, color=darkseagreen4, label=previousFloatParseHandling];
m10_149 -> m10_146  [key=0, style=bold, color=blue];
m10_149 -> m10_150  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_14  [key=0, style=bold, color=blue];
m10_20 -> m10_18  [key=0, style=bold, color=blue];
m10_135 -> m10_136  [key=0, style=solid];
m10_135 -> m10_137  [key=1, style=dashed, color=darkseagreen4, label=float];
m10_135 -> m10_138  [key=0, style=solid];
m10_135 -> m10_177  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_136 -> m10_114  [key=2, style=dotted];
m10_136 -> m10_163  [key=1, style=dashed, color=darkseagreen4, label=previousCulture];
m10_136 -> m10_164  [key=1, style=dashed, color=darkseagreen4, label=previousCulture];
m10_137 -> m10_90  [key=2, style=dotted];
m10_137 -> m10_138  [key=0, style=solid];
m10_137 -> m10_139  [key=2, style=dotted];
m10_138 -> m10_135  [key=0, style=bold, color=blue];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_165  [key=1, style=dashed, color=darkseagreen4, label=previousDateTimeZoneHandling];
m10_138 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label=previousDateTimeZoneHandling];
m10_138 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.DateTimeZoneHandling? previousDateTimeZoneHandling"];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_163  [key=1, style=dashed, color=darkseagreen4, label=previousCulture];
m10_134 -> m10_164  [key=1, style=dashed, color=darkseagreen4, label=previousCulture];
m10_134 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable System.Globalization.CultureInfo previousCulture"];
m10_74 -> m10_75  [key=0, style=solid];
m10_80 -> m10_80  [key=1, style=dashed, color=green, label=currentIndentCount];
m10_80 -> m10_77  [key=0, style=solid, color=green];
m10_80 -> m10_81  [key=0, style=solid];
m10_76 -> m10_80  [key=1, style=dashed, color=green, label=currentIndentCount];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label=currentIndentCount];
m10_78 -> m10_80  [key=1, style=dashed, color=green, label=writeCount];
m10_78 -> m10_79  [key=0, style=solid, color=green];
m10_78 -> m10_82  [key=2, style=dotted];
m10_79 -> m10_80  [key=0, style=solid, color=green];
m10_79 -> m10_83  [key=2, style=dotted, color=green];
m10_79 -> m10_26  [key=2, style=dotted, color=green];
m10_79 -> m10_81  [key=0, style=solid];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_81  [key=0, style=solid];
m10_77 -> m10_79  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_26  [key=2, style=dotted];
m10_75 -> m10_77  [key=0, style=solid];
m10_81 -> m10_74  [key=0, style=bold, color=blue];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_83  [key=0, style=solid];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_2 -> m10_8  [key=0, style=solid];
m10_2 -> m10_9  [key=2, style=dotted];
m10_229 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label="System.Uri"];
m10_229 -> m10_230  [key=0, style=solid];
m10_229 -> m10_248  [key=2, style=dotted];
m10_229 -> m10_181  [key=2, style=dotted];
m10_231 -> m10_234  [key=0, style=solid];
m10_231 -> m10_93  [key=2, style=dotted];
m10_231 -> m10_232  [key=0, style=solid];
m10_232 -> m10_233  [key=0, style=solid];
m10_232 -> m10_114  [key=2, style=dotted];
m10_232 -> m10_234  [key=0, style=solid];
m10_233 -> m10_90  [key=2, style=dotted];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_235  [key=2, style=dotted];
m10_230 -> m10_231  [key=0, style=solid];
m10_230 -> m10_232  [key=0, style=solid];
m10_234 -> m10_229  [key=0, style=bold, color=blue];
m10_234 -> m10_235  [key=0, style=solid];
m10_234 -> m10_236  [key=0, style=solid];
m10_223 -> m10_224  [key=0, style=solid];
m10_223 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=previousDateFormatString];
m10_224 -> m10_225  [key=0, style=solid];
m10_224 -> m10_226  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_225 -> m10_226  [key=0, style=solid];
m10_225 -> m10_114  [key=2, style=dotted];
m10_225 -> m10_245  [key=2, style=dotted];
m10_225 -> m10_227  [key=1, style=dashed, color=darkseagreen4, label=traceJsonWriter];
m10_225 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label=traceJsonWriter];
m10_225 -> m10_229  [key=1, style=dashed, color=darkseagreen4, label=traceJsonWriter];
m10_226 -> m10_90  [key=2, style=dotted];
m10_226 -> m10_227  [key=0, style=solid];
m10_226 -> m10_228  [key=2, style=dotted];
m10_226 -> m10_246  [key=2, style=dotted];
m10_227 -> m10_224  [key=0, style=bold, color=blue];
m10_227 -> m10_228  [key=0, style=solid];
m10_227 -> m10_247  [key=2, style=dotted];
m10_40 -> m10_26  [key=2, style=dotted];
m10_40 -> m10_46  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_45  [key=0, style=solid];
m10_40 -> m10_102  [key=2, style=dotted];
m10_42 -> m10_26  [key=2, style=dotted];
m10_42 -> m10_46  [key=0, style=solid];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_45  [key=0, style=solid];
m10_42 -> m10_42  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m10_44 -> m10_26  [key=2, style=dotted];
m10_44 -> m10_46  [key=0, style=solid];
m10_44 -> m10_42  [key=0, style=solid];
m10_44 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_47  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_41 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_103  [key=2, style=dotted];
m10_46 -> m10_37  [key=0, style=bold, color=blue];
m10_46 -> m10_47  [key=0, style=solid, color=red];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_123  [key=3, color=darkorchid, style=bold, label="method methodReturn T Deserialize"];
m10_127 -> m10_90  [key=2, style=dotted];
m10_127 -> m10_129  [key=2, style=dotted];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_123  [key=2, style=dotted];
m10_128 -> m10_125  [key=0, style=bold, color=blue];
m10_182 -> m10_183  [key=0, style=solid];
m10_182 -> m10_184  [key=1, style=dashed, color=darkseagreen4, label=sbyte];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_185  [key=2, style=dotted];
m10_183 -> m10_186  [key=2, style=dotted];
m10_183 -> m10_114  [key=2, style=dotted];
m10_184 -> m10_182  [key=0, style=bold, color=blue];
m10_184 -> m10_90  [key=2, style=dotted];
m10_184 -> m10_185  [key=0, style=solid];
m10_184 -> m10_186  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_166 -> m10_167  [key=0, style=solid];
m10_93 -> m10_94  [key=0, style=solid];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_97  [key=2, style=dotted];
m10_94 -> m10_96  [key=0, style=solid];
m10_95 -> m10_90  [key=2, style=dotted];
m10_95 -> m10_96  [key=0, style=solid];
m10_96 -> m10_93  [key=0, style=bold, color=blue];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_98  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_19  [key=2, style=dotted];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_20  [key=2, style=dotted];
m10_17 -> m10_3  [key=0, style=bold, color=blue];
m10_255 -> m10_256  [key=0, style=solid];
m10_255 -> m10_258  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.JsonConverter GetMatchingConverter"];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_258  [key=2, style=dotted];
m10_257 -> m10_255  [key=0, style=bold, color=blue];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_31 -> m10_21  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_25  [key=2, style=dotted];
m10_32 -> m10_28  [key=0, style=bold, color=blue];
m10_33 -> m10_26  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_219 -> m10_220  [key=0, style=solid];
m10_219 -> m10_221  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m10_219 -> m10_242  [key=1, style=dashed, color=darkseagreen4, label=previousCulture];
m10_219 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=previousCulture];
m10_220 -> m10_221  [key=0, style=solid];
m10_220 -> m10_114  [key=2, style=dotted];
m10_221 -> m10_90  [key=2, style=dotted];
m10_221 -> m10_222  [key=0, style=solid];
m10_221 -> m10_223  [key=2, style=dotted];
m10_221 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=previousDateFormatString];
m10_221 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable string previousDateFormatString"];
m10_222 -> m10_219  [key=0, style=bold, color=blue];
m10_222 -> m10_223  [key=0, style=solid];
m10_222 -> m10_225  [key=0, style=solid];
m10_118 -> m10_115  [key=0, style=bold, color=blue];
m10_186 -> m10_194  [key=0, style=solid];
m10_186 -> m10_182  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_185 -> m10_182  [key=0, style=bold, color=blue];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_0  [key=0, style=bold, color=blue];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid, color=red];
m10_11 -> m10_13  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid, color=red];
m10_12 -> m10_10  [key=0, style=bold, color=blue];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_21  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.JsonSerializer CreateDefault"];
m10_28 -> m10_25  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_26  [key=2, style=dotted];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_33  [key=2, style=dotted];
m10_30 -> m10_27  [key=0, style=bold, color=blue];
m10_190 -> m10_187  [key=0, style=bold, color=blue];
m10_190 -> m10_196  [key=0, style=solid];
m10_190 -> m10_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_190 -> m10_186  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_190 -> m10_121  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_235 -> m10_236  [key=0, style=solid];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_55  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_57  [key=0, style=solid];
m10_27 -> m10_40  [key=0, style=solid];
m10_27 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_47  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_48  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m10_27 -> m10_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_27 -> m10_22  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer"];
m10_27 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer"];
m10_27 -> m10_21  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings"];
m10_27 -> m10_34  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings"];
m10_27 -> m10_28  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_68  [key=0, style=solid];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_70  [key=0, style=solid];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_71  [key=0, style=solid];
m10_69 -> m10_73  [key=0, style=solid];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_72  [key=0, style=solid];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_73  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_75  [key=0, style=solid];
m10_73 -> m10_54  [key=0, style=bold, color=blue];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_85  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid, color=green];
m10_85 -> m10_86  [key=0, style=solid, color=green];
m10_85 -> m10_87  [key=0, style=solid];
m10_85 -> m10_56  [key=2, style=dotted, color=green];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_84  [key=0, style=bold, color=blue];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_90  [key=0, style=solid];
m10_88 -> m10_89  [key=0, style=solid];
m10_88 -> m10_56  [key=2, style=dotted];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_87  [key=0, style=bold, color=blue];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_92  [key=0, style=solid];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_26  [key=2, style=dotted];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_94  [key=0, style=solid];
m10_92 -> m10_90  [key=0, style=bold, color=blue];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_101  [key=0, style=solid];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_102  [key=2, style=dotted];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_90  [key=2, style=dotted];
m10_101 -> m10_27  [key=0, style=bold, color=blue];
m10_101 -> m10_98  [key=0, style=bold, color=blue];
m10_177 -> m10_178  [key=0, style=solid];
m10_177 -> m10_179  [key=1, style=dashed, color=darkseagreen4, label=byte];
m10_171 -> m10_172  [key=0, style=solid];
m10_171 -> m10_173  [key=0, style=solid];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label=previousFormatting];
m10_199 -> m10_231  [key=1, style=dashed, color=darkseagreen4, label=previousFormatting];
m10_202 -> m10_203  [key=0, style=solid];
m10_202 -> m10_205  [key=0, style=solid];
m10_202 -> m10_204  [key=0, style=solid];
m10_203 -> m10_204  [key=0, style=solid];
m10_203 -> m10_232  [key=1, style=dashed, color=darkseagreen4, label=previousDateFormatHandling];
m10_203 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label=previousDateFormatHandling];
m10_203 -> m10_209  [key=0, style=solid];
m10_203 -> m10_93  [key=2, style=dotted];
m10_204 -> m10_205  [key=0, style=solid];
m10_204 -> m10_114  [key=2, style=dotted];
m10_206 -> m10_207  [key=0, style=solid];
m10_206 -> m10_209  [key=0, style=solid];
m10_206 -> m10_210  [key=2, style=dotted];
m10_207 -> m10_208  [key=0, style=solid];
m10_207 -> m10_234  [key=1, style=dashed, color=darkseagreen4, label=previousDateTimeZoneHandling];
m10_207 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label=previousDateTimeZoneHandling];
m10_207 -> m10_211  [key=2, style=dotted];
m10_208 -> m10_209  [key=0, style=solid];
m10_208 -> m10_56  [key=2, style=dotted];
m10_218 -> m10_219  [key=0, style=solid];
m10_218 -> m10_221  [key=0, style=solid];
m10_218 -> m10_177  [key=2, style=dotted];
m10_201 -> m10_202  [key=0, style=solid];
m10_201 -> m10_232  [key=1, style=dashed, color=darkseagreen4, label=previousDateFormatHandling];
m10_201 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label=previousDateFormatHandling];
m10_201 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.DateFormatHandling? previousDateFormatHandling"];
m10_201 -> m10_206  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m10_205 -> m10_206  [key=0, style=solid];
m10_205 -> m10_234  [key=1, style=dashed, color=darkseagreen4, label=previousDateTimeZoneHandling];
m10_205 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label=previousDateTimeZoneHandling];
m10_205 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.DateTimeZoneHandling? previousDateTimeZoneHandling"];
m10_205 -> m10_56  [key=2, style=dotted];
m10_205 -> m10_205  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_236  [key=1, style=dashed, color=darkseagreen4, label=previousFloatFormatHandling];
m10_209 -> m10_237  [key=1, style=dashed, color=darkseagreen4, label=previousFloatFormatHandling];
m10_209 -> m10_121  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.FloatFormatHandling? previousFloatFormatHandling"];
m10_209 -> m10_201  [key=0, style=bold, color=blue];
m10_242 -> m10_243  [key=0, style=solid];
m10_242 -> m10_244  [key=0, style=solid];
m10_168 -> m10_169  [key=0, style=solid];
m10_168 -> m10_114  [key=2, style=dotted];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_167  [key=0, style=bold, color=blue];
m10_167 -> m10_168  [key=0, style=solid];
m10_167 -> m10_169  [key=0, style=solid];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_171  [key=0, style=solid];
m10_169 -> m10_90  [key=2, style=dotted];
m10_161 -> m10_162  [key=0, style=solid];
m10_161 -> m10_163  [key=0, style=solid];
m10_249 -> m10_250  [key=0, style=solid];
m10_250 -> m10_251  [key=0, style=solid];
m10_250 -> m10_252  [key=0, style=solid];
m10_251 -> m10_252  [key=0, style=solid];
m10_251 -> m10_254  [key=2, style=dotted];
m10_252 -> m10_253  [key=0, style=solid];
m10_253 -> m10_249  [key=0, style=bold, color=blue];
m10_275 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_12  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m10_275 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m11_16 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_19  [key=0, style=solid];
m11_18 -> m11_20  [key=0, style=solid];
m11_18 -> m11_21  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_22  [key=2, style=dotted];
m11_20 -> m11_16  [key=0, style=bold, color=blue];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m11_23 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_26  [key=0, style=solid];
m11_25 -> m11_27  [key=0, style=solid];
m11_25 -> m11_28  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_29  [key=2, style=dotted];
m11_27 -> m11_23  [key=0, style=bold, color=blue];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m11_30 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_33  [key=0, style=solid];
m11_32 -> m11_34  [key=0, style=solid];
m11_32 -> m11_35  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_36  [key=2, style=dotted];
m11_34 -> m11_30  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=0, style=solid];
m11_2 -> m11_4  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_4 -> m11_0  [key=0, style=bold, color=blue];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader"];
m11_5 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader"];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_10  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_9 -> m11_5  [key=0, style=bold, color=blue];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m11_11 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_10  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_11  [key=0, style=bold, color=blue];
m11_37 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m11_37 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerProxy"];
m12_5 -> m12_6  [key=0, style=solid];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_4  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_0  [key=0, style=bold, color=blue];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_8  [key=2, style=dotted];
m12_7 -> m12_5  [key=0, style=bold, color=blue];
m12_9 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m13_1650 -> m13_1651  [key=0, style=solid];
m13_1651 -> m13_1652  [key=0, style=solid];
m13_1651 -> m13_1653  [key=2, style=dotted];
m13_1652 -> m13_1650  [key=0, style=bold, color=blue];
m13_276 -> m13_277  [key=0, style=solid];
m13_277 -> m13_278  [key=0, style=solid];
m13_277 -> m13_2747  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m13_278 -> m13_279  [key=0, style=solid];
m13_278 -> m13_286  [key=2, style=dotted];
m13_278 -> m13_280  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_278 -> m13_282  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_278 -> m13_283  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_279 -> m13_280  [key=0, style=solid];
m13_279 -> m13_287  [key=2, style=dotted];
m13_279 -> m13_281  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_280 -> m13_281  [key=0, style=solid];
m13_280 -> m13_288  [key=2, style=dotted];
m13_282 -> m13_283  [key=0, style=solid];
m13_282 -> m13_7  [key=2, style=dotted];
m13_283 -> m13_284  [key=0, style=solid];
m13_283 -> m13_7  [key=2, style=dotted];
m13_281 -> m13_282  [key=0, style=solid];
m13_281 -> m13_289  [key=2, style=dotted];
m13_281 -> m13_284  [key=1, style=dashed, color=darkseagreen4, label=output];
m13_284 -> m13_285  [key=0, style=solid];
m13_284 -> m13_7  [key=2, style=dotted];
m13_285 -> m13_276  [key=0, style=bold, color=blue];
m13_1183 -> m13_1184  [key=0, style=solid];
m13_1183 -> m13_1185  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1183 -> m13_1186  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1183 -> m13_1187  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_1184 -> m13_1185  [key=0, style=solid];
m13_1185 -> m13_1186  [key=0, style=solid];
m13_1186 -> m13_1187  [key=0, style=solid];
m13_1187 -> m13_1188  [key=0, style=solid];
m13_1188 -> m13_1183  [key=0, style=bold, color=blue];
m13_317 -> m13_318  [key=0, style=solid];
m13_318 -> m13_319  [key=0, style=solid];
m13_318 -> m13_323  [key=2, style=dotted];
m13_318 -> m13_309  [key=2, style=dotted];
m13_319 -> m13_320  [key=0, style=solid];
m13_319 -> m13_6  [key=2, style=dotted];
m13_319 -> m13_321  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_320 -> m13_321  [key=0, style=solid];
m13_320 -> m13_320  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m13_321 -> m13_322  [key=0, style=solid];
m13_321 -> m13_7  [key=2, style=dotted];
m13_322 -> m13_317  [key=0, style=bold, color=blue];
m13_1270 -> m13_1271  [key=0, style=solid];
m13_1271 -> m13_1272  [key=0, style=solid];
m13_1271 -> m13_1271  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1272 -> m13_1273  [key=0, style=solid];
m13_1272 -> m13_8  [key=2, style=dotted];
m13_1272 -> m13_1274  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_1272 -> m13_1275  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_1273 -> m13_1274  [key=0, style=solid];
m13_1273 -> m13_7  [key=2, style=dotted];
m13_1274 -> m13_1275  [key=0, style=solid];
m13_1274 -> m13_7  [key=2, style=dotted];
m13_1275 -> m13_1276  [key=0, style=solid];
m13_1275 -> m13_7  [key=2, style=dotted];
m13_1276 -> m13_1270  [key=0, style=bold, color=blue];
m13_770 -> m13_771  [key=0, style=solid];
m13_771 -> m13_772  [key=0, style=solid];
m13_771 -> m13_634  [key=2, style=dotted];
m13_772 -> m13_773  [key=0, style=solid];
m13_772 -> m13_6  [key=2, style=dotted];
m13_773 -> m13_774  [key=0, style=solid];
m13_773 -> m13_7  [key=2, style=dotted];
m13_774 -> m13_770  [key=0, style=bold, color=blue];
m13_3426 -> m13_3427  [key=0, style=solid, color=green];
m13_3427 -> m13_3428  [key=0, style=solid, color=green];
m13_3427 -> m13_483  [key=2, style=dotted];
m13_3427 -> m13_3430  [key=1, style=dashed, color=green, label=culture];
m13_3427 -> m13_3433  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3427 -> m13_122  [key=2, style=dotted, color=green];
m13_3427 -> m13_3435  [key=1, style=dashed, color=green, label=culture];
m13_3427 -> m13_3440  [key=1, style=dashed, color=green, label=culture];
m13_3428 -> m13_3429  [key=0, style=solid, color=green];
m13_3428 -> m13_3409  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3428 -> m13_483  [key=2, style=dotted, color=green];
m13_3428 -> m13_3431  [key=1, style=dashed, color=green, label=dt];
m13_3428 -> m13_3434  [key=1, style=dashed, color=green, label=dt];
m13_3428 -> m13_3439  [key=1, style=dashed, color=green, label=dt];
m13_3430 -> m13_3431  [key=0, style=solid, color=green];
m13_3430 -> m13_350  [key=2, style=dotted];
m13_3430 -> m13_636  [key=2, style=dotted];
m13_3430 -> m13_3432  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3430 -> m13_185  [key=2, style=dotted, color=green];
m13_3430 -> m13_3433  [key=1, style=dashed, color=green, label=settings];
m13_3433 -> m13_3434  [key=0, style=solid, color=green];
m13_3433 -> m13_1221  [key=2, style=dotted];
m13_3433 -> m13_7  [key=2, style=dotted];
m13_3433 -> m13_863  [key=2, style=dotted, color=green];
m13_3429 -> m13_3430  [key=0, style=solid, color=green];
m13_3429 -> m13_185  [key=2, style=dotted];
m13_3429 -> m13_3432  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3429 -> m13_3435  [key=1, style=dashed, color=green, label=dateFormatString];
m13_3429 -> m13_3440  [key=1, style=dashed, color=green, label=dateFormatString];
m13_3429 -> m13_3409  [key=3, color=green, style=bold, label="Local variable string dateFormatString"];
m13_3432 -> m13_3433  [key=0, style=solid, color=green];
m13_3432 -> m13_863  [key=2, style=dotted];
m13_3432 -> m13_7  [key=2, style=dotted, color=green];
m13_3431 -> m13_3432  [key=0, style=solid, color=green];
m13_3431 -> m13_7  [key=2, style=dotted];
m13_3431 -> m13_3435  [key=1, style=dashed, color=green, label=json];
m13_3431 -> m13_636  [key=2, style=dotted, color=green];
m13_3431 -> m13_3433  [key=1, style=dashed, color=green, label=json];
m13_3434 -> m13_3426  [key=0, style=bold, color=blue];
m13_3434 -> m13_3435  [key=0, style=solid, color=green];
m13_3434 -> m13_7  [key=2, style=dotted, color=green];
m13_1577 -> m13_1578  [key=0, style=solid];
m13_1578 -> m13_1579  [key=0, style=solid];
m13_1578 -> m13_1580  [key=0, style=solid];
m13_1579 -> m13_1578  [key=0, style=solid];
m13_1579 -> m13_353  [key=2, style=dotted];
m13_1579 -> m13_1579  [key=1, style=dashed, color=darkseagreen4, label=pair];
m13_1580 -> m13_1577  [key=0, style=bold, color=blue];
m13_1954 -> m13_1955  [key=0, style=solid];
m13_1955 -> m13_1956  [key=0, style=solid];
m13_1955 -> m13_586  [key=2, style=dotted];
m13_1955 -> m13_1957  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1956 -> m13_1954  [key=0, style=bold, color=blue];
m13_864 -> m13_865  [key=0, style=solid];
m13_865 -> m13_866  [key=0, style=solid];
m13_865 -> m13_843  [key=2, style=dotted];
m13_865 -> m13_870  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_865 -> m13_871  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_866 -> m13_867  [key=0, style=solid];
m13_866 -> m13_844  [key=2, style=dotted];
m13_870 -> m13_871  [key=0, style=solid];
m13_870 -> m13_7  [key=2, style=dotted];
m13_871 -> m13_872  [key=0, style=solid];
m13_871 -> m13_7  [key=2, style=dotted];
m13_867 -> m13_868  [key=0, style=solid];
m13_867 -> m13_185  [key=2, style=dotted];
m13_867 -> m13_636  [key=2, style=dotted];
m13_867 -> m13_869  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_868 -> m13_869  [key=0, style=solid];
m13_868 -> m13_7  [key=2, style=dotted];
m13_869 -> m13_870  [key=0, style=solid];
m13_869 -> m13_8  [key=2, style=dotted];
m13_869 -> m13_871  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_872 -> m13_864  [key=0, style=bold, color=blue];
m13_1312 -> m13_1313  [key=0, style=solid];
m13_1313 -> m13_1314  [key=0, style=solid];
m13_1313 -> m13_8  [key=2, style=dotted];
m13_1313 -> m13_1315  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_1313 -> m13_1316  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_1313 -> m13_1317  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_1314 -> m13_1315  [key=0, style=solid];
m13_1314 -> m13_7  [key=2, style=dotted];
m13_1315 -> m13_1316  [key=0, style=solid];
m13_1315 -> m13_7  [key=2, style=dotted];
m13_1316 -> m13_1317  [key=0, style=solid];
m13_1316 -> m13_7  [key=2, style=dotted];
m13_1317 -> m13_1318  [key=0, style=solid];
m13_1317 -> m13_7  [key=2, style=dotted];
m13_1318 -> m13_1312  [key=0, style=bold, color=blue];
m13_2576 -> m13_2577  [key=0, style=solid];
m13_2577 -> m13_2578  [key=0, style=solid];
m13_2577 -> m13_633  [key=2, style=dotted];
m13_2577 -> m13_2580  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2577 -> m13_2581  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2578 -> m13_2579  [key=0, style=solid];
m13_2578 -> m13_6  [key=2, style=dotted];
m13_2580 -> m13_2581  [key=0, style=solid];
m13_2580 -> m13_7  [key=2, style=dotted];
m13_2581 -> m13_2582  [key=0, style=solid];
m13_2581 -> m13_7  [key=2, style=dotted];
m13_2579 -> m13_2580  [key=0, style=solid];
m13_2579 -> m13_8  [key=2, style=dotted];
m13_2579 -> m13_2581  [key=1, style=dashed, color=darkseagreen4, label=d2];
m13_2582 -> m13_2576  [key=0, style=bold, color=blue];
m13_1250 -> m13_1251  [key=0, style=solid];
m13_1251 -> m13_1252  [key=0, style=solid];
m13_1251 -> m13_447  [key=2, style=dotted];
m13_1251 -> m13_1255  [key=2, style=dotted];
m13_1252 -> m13_1253  [key=0, style=solid];
m13_1252 -> m13_6  [key=2, style=dotted];
m13_1253 -> m13_1254  [key=0, style=solid];
m13_1253 -> m13_7  [key=2, style=dotted];
m13_1254 -> m13_1250  [key=0, style=bold, color=blue];
m13_2101 -> m13_2102  [key=0, style=solid];
m13_2102 -> m13_2103  [key=0, style=solid];
m13_2102 -> m13_8  [key=2, style=dotted];
m13_2103 -> m13_2104  [key=0, style=solid];
m13_2103 -> m13_2085  [key=2, style=dotted];
m13_2103 -> m13_483  [key=2, style=dotted];
m13_2103 -> m13_644  [key=2, style=dotted];
m13_2103 -> m13_7  [key=2, style=dotted];
m13_2104 -> m13_2101  [key=0, style=bold, color=blue];
m13_1021 -> m13_1022  [key=0, style=solid];
m13_1022 -> m13_1023  [key=0, style=solid];
m13_1022 -> m13_1031  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1022 -> m13_1022  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1023 -> m13_1024  [key=0, style=solid];
m13_1023 -> m13_8  [key=2, style=dotted];
m13_1023 -> m13_1025  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1023 -> m13_1026  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1023 -> m13_1027  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1023 -> m13_1028  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1023 -> m13_1029  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1023 -> m13_1030  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1031 -> m13_1032  [key=0, style=solid];
m13_1031 -> m13_7  [key=2, style=dotted];
m13_1024 -> m13_1025  [key=0, style=solid];
m13_1024 -> m13_7  [key=2, style=dotted];
m13_1025 -> m13_1026  [key=0, style=solid];
m13_1025 -> m13_7  [key=2, style=dotted];
m13_1026 -> m13_1027  [key=0, style=solid];
m13_1026 -> m13_7  [key=2, style=dotted];
m13_1027 -> m13_1028  [key=0, style=solid];
m13_1027 -> m13_7  [key=2, style=dotted];
m13_1028 -> m13_1029  [key=0, style=solid];
m13_1028 -> m13_7  [key=2, style=dotted];
m13_1029 -> m13_1030  [key=0, style=solid];
m13_1029 -> m13_7  [key=2, style=dotted];
m13_1030 -> m13_1031  [key=0, style=solid];
m13_1030 -> m13_6  [key=2, style=dotted];
m13_1032 -> m13_1021  [key=0, style=bold, color=blue];
m13_1292 -> m13_1293  [key=0, style=solid];
m13_1293 -> m13_1294  [key=0, style=solid];
m13_1293 -> m13_1297  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1293 -> m13_1293  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1294 -> m13_1295  [key=0, style=solid];
m13_1294 -> m13_586  [key=2, style=dotted];
m13_1294 -> m13_1296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1295 -> m13_1292  [key=0, style=bold, color=blue];
m13_2297 -> m13_2298  [key=0, style=solid];
m13_2298 -> m13_2299  [key=0, style=solid];
m13_2298 -> m13_2298  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2299 -> m13_2300  [key=0, style=solid];
m13_2299 -> m13_8  [key=2, style=dotted];
m13_2299 -> m13_2301  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_2299 -> m13_2302  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_2300 -> m13_2301  [key=0, style=solid];
m13_2300 -> m13_7  [key=2, style=dotted];
m13_2301 -> m13_2302  [key=0, style=solid];
m13_2301 -> m13_7  [key=2, style=dotted];
m13_2302 -> m13_2303  [key=0, style=solid];
m13_2302 -> m13_7  [key=2, style=dotted];
m13_2303 -> m13_2297  [key=0, style=bold, color=blue];
m13_1968 -> m13_1969  [key=0, style=solid];
m13_1969 -> m13_1970  [key=0, style=solid];
m13_1969 -> m13_350  [key=2, style=dotted];
m13_1969 -> m13_1971  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_1969 -> m13_1972  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_1969 -> m13_1976  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_1970 -> m13_1971  [key=0, style=solid];
m13_1970 -> m13_353  [key=2, style=dotted];
m13_1971 -> m13_1972  [key=0, style=solid];
m13_1971 -> m13_353  [key=2, style=dotted];
m13_1972 -> m13_1973  [key=0, style=solid];
m13_1972 -> m13_353  [key=2, style=dotted];
m13_1976 -> m13_1977  [key=0, style=solid];
m13_1976 -> m13_353  [key=2, style=dotted];
m13_1973 -> m13_1974  [key=0, style=solid];
m13_1973 -> m13_350  [key=2, style=dotted];
m13_1973 -> m13_1975  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1973 -> m13_1976  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1973 -> m13_1977  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1974 -> m13_1975  [key=0, style=solid];
m13_1974 -> m13_353  [key=2, style=dotted];
m13_1975 -> m13_1976  [key=0, style=solid];
m13_1975 -> m13_353  [key=2, style=dotted];
m13_1977 -> m13_1978  [key=0, style=solid];
m13_1977 -> m13_6  [key=2, style=dotted];
m13_1977 -> m13_1979  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1978 -> m13_1979  [key=0, style=solid];
m13_1978 -> m13_364  [key=2, style=dotted];
m13_1979 -> m13_1980  [key=0, style=solid];
m13_1979 -> m13_8  [key=2, style=dotted];
m13_1979 -> m13_1981  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_1979 -> m13_1982  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_1980 -> m13_1981  [key=0, style=solid];
m13_1980 -> m13_7  [key=2, style=dotted];
m13_1981 -> m13_1982  [key=0, style=solid];
m13_1981 -> m13_7  [key=2, style=dotted];
m13_1982 -> m13_1983  [key=0, style=solid];
m13_1982 -> m13_7  [key=2, style=dotted];
m13_1983 -> m13_1968  [key=0, style=bold, color=blue];
m13_690 -> m13_691  [key=0, style=solid];
m13_691 -> m13_692  [key=0, style=solid];
m13_691 -> m13_6  [key=2, style=dotted];
m13_692 -> m13_693  [key=0, style=solid];
m13_692 -> m13_7  [key=2, style=dotted];
m13_693 -> m13_690  [key=0, style=bold, color=blue];
m13_3393 -> m13_3394  [key=0, style=solid];
m13_3394 -> m13_3395  [key=0, style=solid];
m13_3394 -> m13_3398  [key=2, style=dotted];
m13_3394 -> m13_3399  [key=2, style=dotted];
m13_3395 -> m13_3396  [key=0, style=solid];
m13_3395 -> m13_274  [key=2, style=dotted];
m13_3396 -> m13_3397  [key=0, style=solid];
m13_3396 -> m13_7  [key=2, style=dotted];
m13_3397 -> m13_3393  [key=0, style=bold, color=blue];
m13_2799 -> m13_2800  [key=0, style=solid];
m13_2800 -> m13_2801  [key=0, style=solid];
m13_2800 -> m13_482  [key=2, style=dotted];
m13_2800 -> m13_2802  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_2800 -> m13_2803  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_2800 -> m13_2804  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_2800 -> m13_2805  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_2800 -> m13_2806  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_2801 -> m13_2802  [key=0, style=solid];
m13_2802 -> m13_2803  [key=0, style=solid];
m13_2802 -> m13_483  [key=2, style=dotted];
m13_2803 -> m13_2804  [key=0, style=solid];
m13_2804 -> m13_2805  [key=0, style=solid];
m13_2805 -> m13_2806  [key=0, style=solid];
m13_2805 -> m13_6  [key=2, style=dotted];
m13_2806 -> m13_2807  [key=0, style=solid];
m13_2806 -> m13_185  [key=2, style=dotted];
m13_2806 -> m13_2812  [key=2, style=dotted];
m13_2806 -> m13_2813  [key=2, style=dotted];
m13_2806 -> m13_636  [key=2, style=dotted];
m13_2807 -> m13_2808  [key=0, style=solid];
m13_2807 -> m13_7  [key=2, style=dotted];
m13_2808 -> m13_2809  [key=0, style=solid];
m13_2809 -> m13_2810  [key=0, style=solid];
m13_2809 -> m13_185  [key=2, style=dotted];
m13_2809 -> m13_2812  [key=2, style=dotted];
m13_2809 -> m13_2813  [key=2, style=dotted];
m13_2809 -> m13_2814  [key=2, style=dotted];
m13_2809 -> m13_636  [key=2, style=dotted];
m13_2810 -> m13_2811  [key=0, style=solid];
m13_2810 -> m13_7  [key=2, style=dotted];
m13_2811 -> m13_2799  [key=0, style=bold, color=blue];
m13_1012 -> m13_1013  [key=0, style=solid];
m13_1013 -> m13_1014  [key=0, style=solid];
m13_1013 -> m13_1020  [key=2, style=dotted];
m13_1013 -> m13_1015  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1013 -> m13_1016  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1013 -> m13_1017  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1014 -> m13_1015  [key=0, style=solid];
m13_1015 -> m13_1016  [key=0, style=solid];
m13_1016 -> m13_1017  [key=0, style=solid];
m13_1017 -> m13_1018  [key=0, style=solid];
m13_1017 -> m13_6  [key=2, style=dotted];
m13_1018 -> m13_1019  [key=0, style=solid];
m13_1018 -> m13_7  [key=2, style=dotted];
m13_1019 -> m13_1012  [key=0, style=bold, color=blue];
m13_2008 -> m13_2009  [key=0, style=solid];
m13_2009 -> m13_2010  [key=0, style=solid];
m13_2009 -> m13_350  [key=2, style=dotted];
m13_2009 -> m13_2011  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_2009 -> m13_2012  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_2010 -> m13_2011  [key=0, style=solid];
m13_2010 -> m13_2007  [key=2, style=dotted];
m13_2010 -> m13_353  [key=2, style=dotted];
m13_2011 -> m13_2012  [key=0, style=solid];
m13_2011 -> m13_2007  [key=2, style=dotted];
m13_2011 -> m13_353  [key=2, style=dotted];
m13_2012 -> m13_2013  [key=0, style=solid];
m13_2012 -> m13_274  [key=2, style=dotted];
m13_2012 -> m13_2014  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2013 -> m13_2014  [key=0, style=solid];
m13_2013 -> m13_7  [key=2, style=dotted];
m13_2014 -> m13_2015  [key=0, style=solid];
m13_2014 -> m13_8  [key=2, style=dotted];
m13_2015 -> m13_2016  [key=0, style=solid];
m13_2015 -> m13_7  [key=2, style=dotted];
m13_2016 -> m13_2008  [key=0, style=bold, color=blue];
m13_1562 -> m13_1563  [key=0, style=solid];
m13_1563 -> m13_1564  [key=0, style=solid];
m13_1563 -> m13_1563  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1564 -> m13_1565  [key=0, style=solid];
m13_1564 -> m13_8  [key=2, style=dotted];
m13_1564 -> m13_1566  [key=1, style=dashed, color=darkseagreen4, label=dic];
m13_1564 -> m13_1567  [key=1, style=dashed, color=darkseagreen4, label=dic];
m13_1564 -> m13_1568  [key=1, style=dashed, color=darkseagreen4, label=dic];
m13_1565 -> m13_1566  [key=0, style=solid];
m13_1565 -> m13_7  [key=2, style=dotted];
m13_1566 -> m13_1567  [key=0, style=solid];
m13_1566 -> m13_7  [key=2, style=dotted];
m13_1567 -> m13_1568  [key=0, style=solid];
m13_1567 -> m13_7  [key=2, style=dotted];
m13_1568 -> m13_1569  [key=0, style=solid];
m13_1568 -> m13_7  [key=2, style=dotted];
m13_1569 -> m13_1562  [key=0, style=bold, color=blue];
m13_2537 -> m13_2538  [key=0, style=solid];
m13_2538 -> m13_2539  [key=0, style=solid];
m13_2538 -> m13_2538  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m13_2539 -> m13_2540  [key=0, style=solid];
m13_2539 -> m13_1248  [key=2, style=dotted];
m13_2539 -> m13_2542  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_2540 -> m13_2541  [key=0, style=solid];
m13_2540 -> m13_6  [key=2, style=dotted];
m13_2542 -> m13_2543  [key=0, style=solid];
m13_2542 -> m13_7  [key=2, style=dotted];
m13_2541 -> m13_2542  [key=0, style=solid];
m13_2541 -> m13_8  [key=2, style=dotted];
m13_2543 -> m13_2537  [key=0, style=bold, color=blue];
m13_1658 -> m13_1659  [key=0, style=solid];
m13_1659 -> m13_1660  [key=0, style=solid];
m13_1659 -> m13_1661  [key=2, style=dotted];
m13_1660 -> m13_1658  [key=0, style=bold, color=blue];
m13_2450 -> m13_2451  [key=0, style=solid];
m13_2451 -> m13_2452  [key=0, style=solid];
m13_2452 -> m13_2450  [key=0, style=bold, color=blue];
m13_2590 -> m13_2591  [key=0, style=solid];
m13_2591 -> m13_2592  [key=0, style=solid];
m13_2591 -> m13_633  [key=2, style=dotted];
m13_2591 -> m13_2594  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2591 -> m13_2595  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2592 -> m13_2593  [key=0, style=solid];
m13_2592 -> m13_6  [key=2, style=dotted];
m13_2594 -> m13_2595  [key=0, style=solid];
m13_2594 -> m13_7  [key=2, style=dotted];
m13_2595 -> m13_2596  [key=0, style=solid];
m13_2595 -> m13_7  [key=2, style=dotted];
m13_2593 -> m13_2594  [key=0, style=solid];
m13_2593 -> m13_8  [key=2, style=dotted];
m13_2593 -> m13_2595  [key=1, style=dashed, color=darkseagreen4, label=d2];
m13_2596 -> m13_2590  [key=0, style=bold, color=blue];
m13_1535 -> m13_1536  [key=0, style=solid];
m13_1536 -> m13_1537  [key=0, style=solid];
m13_1536 -> m13_353  [key=2, style=dotted];
m13_1537 -> m13_1535  [key=0, style=bold, color=blue];
m13_3176 -> m13_3177  [key=0, style=solid];
m13_3177 -> m13_3178  [key=0, style=solid];
m13_3177 -> m13_3184  [key=2, style=dotted];
m13_3178 -> m13_3179  [key=0, style=solid];
m13_3178 -> m13_6  [key=2, style=dotted];
m13_3178 -> m13_3180  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3179 -> m13_3180  [key=0, style=solid];
m13_3179 -> m13_7  [key=2, style=dotted];
m13_3180 -> m13_3181  [key=0, style=solid];
m13_3180 -> m13_8  [key=2, style=dotted];
m13_3180 -> m13_3182  [key=1, style=dashed, color=darkseagreen4, label=tuple2];
m13_3181 -> m13_3182  [key=0, style=solid];
m13_3181 -> m13_7  [key=2, style=dotted];
m13_3182 -> m13_3183  [key=0, style=solid];
m13_3182 -> m13_7  [key=2, style=dotted];
m13_3183 -> m13_3176  [key=0, style=bold, color=blue];
m13_2827 -> m13_2828  [key=0, style=solid];
m13_2828 -> m13_2829  [key=0, style=solid];
m13_2829 -> m13_2827  [key=0, style=bold, color=blue];
m13_2250 -> m13_2251  [key=0, style=solid];
m13_2251 -> m13_2252  [key=0, style=solid];
m13_2251 -> m13_8  [key=2, style=dotted];
m13_2252 -> m13_2253  [key=0, style=solid];
m13_2252 -> m13_7  [key=2, style=dotted];
m13_2253 -> m13_2250  [key=0, style=bold, color=blue];
m13_3135 -> m13_3136  [key=0, style=solid];
m13_3136 -> m13_3137  [key=0, style=solid];
m13_3137 -> m13_3135  [key=0, style=bold, color=blue];
m13_2141 -> m13_2142  [key=0, style=solid];
m13_2142 -> m13_2143  [key=0, style=solid];
m13_2142 -> m13_2142  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2143 -> m13_2144  [key=0, style=solid];
m13_2143 -> m13_2053  [key=2, style=dotted];
m13_2143 -> m13_722  [key=2, style=dotted];
m13_2143 -> m13_2146  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2144 -> m13_2145  [key=0, style=solid];
m13_2146 -> m13_2147  [key=0, style=solid];
m13_2146 -> m13_2086  [key=2, style=dotted];
m13_2145 -> m13_2146  [key=0, style=solid];
m13_2145 -> m13_116  [key=2, style=dotted];
m13_2147 -> m13_2148  [key=0, style=solid];
m13_2147 -> m13_7  [key=2, style=dotted];
m13_2148 -> m13_2141  [key=0, style=bold, color=blue];
m13_2074 -> m13_2075  [key=0, style=solid];
m13_2075 -> m13_2076  [key=0, style=solid];
m13_2075 -> m13_2084  [key=2, style=dotted];
m13_2075 -> m13_2085  [key=2, style=dotted];
m13_2075 -> m13_483  [key=2, style=dotted];
m13_2075 -> m13_644  [key=2, style=dotted];
m13_2075 -> m13_6  [key=2, style=dotted];
m13_2075 -> m13_2077  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m13_2076 -> m13_2077  [key=0, style=solid];
m13_2076 -> m13_7  [key=2, style=dotted];
m13_2077 -> m13_2078  [key=0, style=solid];
m13_2077 -> m13_2053  [key=2, style=dotted];
m13_2077 -> m13_722  [key=2, style=dotted];
m13_2077 -> m13_2080  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2078 -> m13_2079  [key=0, style=solid];
m13_2080 -> m13_2081  [key=0, style=solid];
m13_2080 -> m13_2086  [key=2, style=dotted];
m13_2080 -> m13_2082  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m13_2079 -> m13_2080  [key=0, style=solid];
m13_2079 -> m13_116  [key=2, style=dotted];
m13_2081 -> m13_2082  [key=0, style=solid];
m13_2081 -> m13_644  [key=2, style=dotted];
m13_2081 -> m13_7  [key=2, style=dotted];
m13_2082 -> m13_2083  [key=0, style=solid];
m13_2082 -> m13_483  [key=2, style=dotted];
m13_2082 -> m13_7  [key=2, style=dotted];
m13_2083 -> m13_2074  [key=0, style=bold, color=blue];
m13_2340 -> m13_2341  [key=0, style=solid];
m13_2341 -> m13_2342  [key=0, style=solid];
m13_2341 -> m13_2344  [key=2, style=dotted];
m13_2341 -> m13_6  [key=2, style=dotted];
m13_2342 -> m13_2343  [key=0, style=solid];
m13_2342 -> m13_8  [key=2, style=dotted];
m13_2343 -> m13_2340  [key=0, style=bold, color=blue];
m13_383 -> m13_384  [key=0, style=solid];
m13_384 -> m13_385  [key=0, style=solid];
m13_384 -> m13_392  [key=2, style=dotted];
m13_384 -> m13_386  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_384 -> m13_387  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_384 -> m13_388  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_384 -> m13_389  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_385 -> m13_386  [key=0, style=solid];
m13_386 -> m13_387  [key=0, style=solid];
m13_387 -> m13_388  [key=0, style=solid];
m13_388 -> m13_389  [key=0, style=solid];
m13_389 -> m13_390  [key=0, style=solid];
m13_389 -> m13_393  [key=2, style=dotted];
m13_390 -> m13_391  [key=0, style=solid];
m13_390 -> m13_7  [key=2, style=dotted];
m13_391 -> m13_383  [key=0, style=bold, color=blue];
m13_3210 -> m13_3211  [key=0, style=solid];
m13_3211 -> m13_3212  [key=0, style=solid];
m13_3211 -> m13_3214  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3211 -> m13_3217  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3211 -> m13_3211  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3212 -> m13_3213  [key=0, style=solid];
m13_3212 -> m13_8  [key=2, style=dotted];
m13_3214 -> m13_3215  [key=0, style=solid];
m13_3214 -> m13_586  [key=2, style=dotted];
m13_3214 -> m13_3216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3213 -> m13_3214  [key=0, style=solid];
m13_3213 -> m13_1883  [key=2, style=dotted];
m13_3213 -> m13_7  [key=2, style=dotted];
m13_3215 -> m13_3210  [key=0, style=bold, color=blue];
m13_187 -> m13_188  [key=0, style=solid];
m13_188 -> m13_189  [key=0, style=solid];
m13_188 -> m13_246  [key=2, style=dotted];
m13_188 -> m13_247  [key=2, style=dotted];
m13_188 -> m13_116  [key=2, style=dotted];
m13_188 -> m13_190  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_191  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_192  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_193  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_194  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_195  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_196  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_197  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_199  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_200  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_201  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_202  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_203  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_204  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_205  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_206  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_207  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_208  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_209  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_210  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_211  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_212  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_213  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_214  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_215  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_216  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_217  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_218  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_219  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_220  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_221  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_222  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_223  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_224  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_225  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_226  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_227  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_228  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_229  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_230  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_231  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_232  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_234  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_235  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_236  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_237  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_239  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_240  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_241  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_242  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_243  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_188 -> m13_244  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_189 -> m13_190  [key=0, style=solid];
m13_189 -> m13_117  [key=2, style=dotted];
m13_189 -> m13_191  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m13_190 -> m13_191  [key=0, style=solid];
m13_191 -> m13_192  [key=0, style=solid];
m13_191 -> m13_7  [key=2, style=dotted];
m13_192 -> m13_193  [key=0, style=solid];
m13_193 -> m13_194  [key=0, style=solid];
m13_193 -> m13_7  [key=2, style=dotted];
m13_194 -> m13_195  [key=0, style=solid];
m13_195 -> m13_196  [key=0, style=solid];
m13_195 -> m13_7  [key=2, style=dotted];
m13_196 -> m13_197  [key=0, style=solid];
m13_196 -> m13_118  [key=2, style=dotted];
m13_197 -> m13_198  [key=0, style=solid];
m13_197 -> m13_118  [key=2, style=dotted];
m13_197 -> m13_7  [key=2, style=dotted];
m13_199 -> m13_200  [key=0, style=solid];
m13_200 -> m13_201  [key=0, style=solid];
m13_200 -> m13_7  [key=2, style=dotted];
m13_201 -> m13_202  [key=0, style=solid];
m13_201 -> m13_120  [key=2, style=dotted];
m13_201 -> m13_121  [key=2, style=dotted];
m13_202 -> m13_203  [key=0, style=solid];
m13_202 -> m13_7  [key=2, style=dotted];
m13_203 -> m13_204  [key=0, style=solid];
m13_203 -> m13_122  [key=2, style=dotted];
m13_204 -> m13_205  [key=0, style=solid];
m13_204 -> m13_123  [key=2, style=dotted];
m13_204 -> m13_7  [key=2, style=dotted];
m13_205 -> m13_206  [key=0, style=solid];
m13_206 -> m13_207  [key=0, style=solid];
m13_206 -> m13_7  [key=2, style=dotted];
m13_207 -> m13_208  [key=0, style=solid];
m13_208 -> m13_209  [key=0, style=solid];
m13_208 -> m13_7  [key=2, style=dotted];
m13_209 -> m13_210  [key=0, style=solid];
m13_210 -> m13_211  [key=0, style=solid];
m13_210 -> m13_7  [key=2, style=dotted];
m13_211 -> m13_212  [key=0, style=solid];
m13_212 -> m13_213  [key=0, style=solid];
m13_212 -> m13_7  [key=2, style=dotted];
m13_213 -> m13_214  [key=0, style=solid];
m13_214 -> m13_215  [key=0, style=solid];
m13_214 -> m13_7  [key=2, style=dotted];
m13_215 -> m13_216  [key=0, style=solid];
m13_216 -> m13_217  [key=0, style=solid];
m13_216 -> m13_7  [key=2, style=dotted];
m13_217 -> m13_218  [key=0, style=solid];
m13_218 -> m13_219  [key=0, style=solid];
m13_218 -> m13_7  [key=2, style=dotted];
m13_219 -> m13_220  [key=0, style=solid];
m13_220 -> m13_221  [key=0, style=solid];
m13_220 -> m13_7  [key=2, style=dotted];
m13_221 -> m13_222  [key=0, style=solid];
m13_222 -> m13_223  [key=0, style=solid];
m13_222 -> m13_7  [key=2, style=dotted];
m13_223 -> m13_224  [key=0, style=solid];
m13_224 -> m13_225  [key=0, style=solid];
m13_224 -> m13_7  [key=2, style=dotted];
m13_225 -> m13_226  [key=0, style=solid];
m13_226 -> m13_227  [key=0, style=solid];
m13_226 -> m13_7  [key=2, style=dotted];
m13_227 -> m13_228  [key=0, style=solid];
m13_228 -> m13_229  [key=0, style=solid];
m13_228 -> m13_7  [key=2, style=dotted];
m13_229 -> m13_230  [key=0, style=solid];
m13_230 -> m13_231  [key=0, style=solid];
m13_230 -> m13_7  [key=2, style=dotted];
m13_231 -> m13_232  [key=0, style=solid];
m13_232 -> m13_233  [key=0, style=solid];
m13_232 -> m13_7  [key=2, style=dotted];
m13_234 -> m13_235  [key=0, style=solid];
m13_235 -> m13_236  [key=0, style=solid];
m13_235 -> m13_7  [key=2, style=dotted];
m13_236 -> m13_237  [key=0, style=solid];
m13_237 -> m13_238  [key=0, style=solid];
m13_237 -> m13_7  [key=2, style=dotted];
m13_239 -> m13_240  [key=0, style=solid];
m13_240 -> m13_241  [key=0, style=solid];
m13_240 -> m13_7  [key=2, style=dotted];
m13_241 -> m13_242  [key=0, style=solid];
m13_242 -> m13_243  [key=0, style=solid];
m13_242 -> m13_7  [key=2, style=dotted];
m13_243 -> m13_244  [key=0, style=solid];
m13_244 -> m13_245  [key=0, style=solid];
m13_244 -> m13_7  [key=2, style=dotted];
m13_198 -> m13_199  [key=0, style=solid];
m13_198 -> m13_119  [key=2, style=dotted];
m13_198 -> m13_200  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m13_233 -> m13_234  [key=0, style=solid];
m13_233 -> m13_124  [key=2, style=dotted];
m13_233 -> m13_235  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_238 -> m13_239  [key=0, style=solid];
m13_238 -> m13_125  [key=2, style=dotted];
m13_238 -> m13_240  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m13_245 -> m13_187  [key=0, style=bold, color=blue];
m13_2615 -> m13_2616  [key=0, style=solid];
m13_2616 -> m13_2617  [key=0, style=solid];
m13_2616 -> m13_2620  [key=2, style=dotted];
m13_2616 -> m13_2621  [key=2, style=dotted];
m13_2617 -> m13_2618  [key=0, style=solid];
m13_2617 -> m13_274  [key=2, style=dotted];
m13_2618 -> m13_2619  [key=0, style=solid];
m13_2618 -> m13_7  [key=2, style=dotted];
m13_2619 -> m13_2615  [key=0, style=bold, color=blue];
m13_2314 -> m13_2315  [key=0, style=solid];
m13_2315 -> m13_2316  [key=0, style=solid];
m13_2315 -> m13_2319  [key=2, style=dotted];
m13_2316 -> m13_2317  [key=0, style=solid];
m13_2316 -> m13_274  [key=2, style=dotted];
m13_2317 -> m13_2318  [key=0, style=solid];
m13_2317 -> m13_7  [key=2, style=dotted];
m13_2318 -> m13_2314  [key=0, style=bold, color=blue];
m13_1611 -> m13_1612  [key=0, style=solid];
m13_1611 -> m13_1614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_1612 -> m13_1613  [key=0, style=solid];
m13_1612 -> m13_1614  [key=0, style=solid];
m13_1614 -> m13_1615  [key=0, style=solid];
m13_1614 -> m13_1616  [key=0, style=solid];
m13_1613 -> m13_1616  [key=0, style=solid];
m13_1613 -> m13_1617  [key=2, style=dotted];
m13_1615 -> m13_1614  [key=0, style=solid];
m13_1615 -> m13_353  [key=2, style=dotted];
m13_1615 -> m13_1615  [key=1, style=dashed, color=darkseagreen4, label=entry];
m13_1616 -> m13_1611  [key=0, style=bold, color=blue];
m13_2419 -> m13_2420  [key=0, style=solid];
m13_2420 -> m13_2421  [key=0, style=solid];
m13_2420 -> m13_1922  [key=2, style=dotted];
m13_2421 -> m13_2419  [key=0, style=bold, color=blue];
m13_981 -> m13_982  [key=0, style=solid];
m13_982 -> m13_983  [key=0, style=solid];
m13_982 -> m13_982  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_983 -> m13_984  [key=0, style=solid];
m13_983 -> m13_8  [key=2, style=dotted];
m13_983 -> m13_985  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_983 -> m13_986  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_984 -> m13_985  [key=0, style=solid];
m13_984 -> m13_7  [key=2, style=dotted];
m13_985 -> m13_986  [key=0, style=solid];
m13_985 -> m13_7  [key=2, style=dotted];
m13_986 -> m13_987  [key=0, style=solid];
m13_986 -> m13_7  [key=2, style=dotted];
m13_987 -> m13_981  [key=0, style=bold, color=blue];
m13_2924 -> m13_2925  [key=0, style=solid];
m13_2925 -> m13_2926  [key=0, style=solid];
m13_2925 -> m13_350  [key=2, style=dotted];
m13_2925 -> m13_643  [key=2, style=dotted];
m13_2926 -> m13_2927  [key=0, style=solid];
m13_2926 -> m13_274  [key=2, style=dotted];
m13_2926 -> m13_2928  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2927 -> m13_2928  [key=0, style=solid];
m13_2927 -> m13_7  [key=2, style=dotted];
m13_2928 -> m13_2929  [key=0, style=solid];
m13_2928 -> m13_8  [key=2, style=dotted];
m13_2928 -> m13_2930  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_2928 -> m13_2931  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_2929 -> m13_2930  [key=0, style=solid];
m13_2929 -> m13_7  [key=2, style=dotted];
m13_2930 -> m13_2931  [key=0, style=solid];
m13_2930 -> m13_643  [key=2, style=dotted];
m13_2930 -> m13_7  [key=2, style=dotted];
m13_2931 -> m13_2932  [key=0, style=solid];
m13_2931 -> m13_643  [key=2, style=dotted];
m13_2931 -> m13_7  [key=2, style=dotted];
m13_2932 -> m13_2924  [key=0, style=bold, color=blue];
m13_3077 -> m13_3078  [key=0, style=solid];
m13_3078 -> m13_3079  [key=0, style=solid];
m13_3078 -> m13_3081  [key=2, style=dotted];
m13_3078 -> m13_185  [key=2, style=dotted];
m13_3078 -> m13_119  [key=2, style=dotted];
m13_3078 -> m13_768  [key=2, style=dotted];
m13_3079 -> m13_3080  [key=0, style=solid];
m13_3079 -> m13_7  [key=2, style=dotted];
m13_3080 -> m13_3077  [key=0, style=bold, color=blue];
m13_1934 -> m13_1935  [key=0, style=solid];
m13_1935 -> m13_1936  [key=0, style=solid];
m13_1935 -> m13_1922  [key=2, style=dotted];
m13_1936 -> m13_1934  [key=0, style=bold, color=blue];
m13_1347 -> m13_1348  [key=0, style=solid];
m13_1348 -> m13_1349  [key=0, style=solid];
m13_1348 -> m13_1352  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1348 -> m13_1320  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1349 -> m13_1350  [key=0, style=solid];
m13_1349 -> m13_586  [key=2, style=dotted];
m13_1349 -> m13_1351  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1350 -> m13_1347  [key=0, style=bold, color=blue];
m13_1675 -> m13_1676  [key=0, style=solid];
m13_1675 -> m13_1677  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1675 -> m13_1678  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m13_1675 -> m13_1679  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m13_1676 -> m13_1677  [key=0, style=solid];
m13_1677 -> m13_1678  [key=0, style=solid];
m13_1678 -> m13_1679  [key=0, style=solid];
m13_1679 -> m13_1680  [key=0, style=solid];
m13_1680 -> m13_1681  [key=0, style=solid];
m13_1680 -> m13_843  [key=2, style=dotted];
m13_1681 -> m13_1675  [key=0, style=bold, color=blue];
m13_310 -> m13_311  [key=0, style=solid];
m13_311 -> m13_312  [key=0, style=solid];
m13_311 -> m13_305  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_312 -> m13_313  [key=0, style=solid];
m13_312 -> m13_8  [key=2, style=dotted];
m13_312 -> m13_314  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_313 -> m13_314  [key=0, style=solid];
m13_313 -> m13_316  [key=2, style=dotted];
m13_314 -> m13_315  [key=0, style=solid];
m13_314 -> m13_7  [key=2, style=dotted];
m13_315 -> m13_310  [key=0, style=bold, color=blue];
m13_1618 -> m13_1619  [key=0, style=solid];
m13_1619 -> m13_1620  [key=0, style=solid];
m13_1619 -> m13_186  [key=2, style=dotted];
m13_1620 -> m13_1618  [key=0, style=bold, color=blue];
m13_1995 -> m13_1996  [key=0, style=solid];
m13_1996 -> m13_1997  [key=0, style=solid];
m13_1996 -> m13_1996  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1997 -> m13_1998  [key=0, style=solid];
m13_1997 -> m13_185  [key=2, style=dotted];
m13_1997 -> m13_863  [key=2, style=dotted];
m13_1997 -> m13_1999  [key=1, style=dashed, color=darkseagreen4, label=dic];
m13_1998 -> m13_1999  [key=0, style=solid];
m13_1998 -> m13_442  [key=2, style=dotted];
m13_1998 -> m13_7  [key=2, style=dotted];
m13_1999 -> m13_2000  [key=0, style=solid];
m13_1999 -> m13_7  [key=2, style=dotted];
m13_2000 -> m13_1995  [key=0, style=bold, color=blue];
m13_2133 -> m13_2134  [key=0, style=solid];
m13_2134 -> m13_2135  [key=0, style=solid];
m13_2134 -> m13_8  [key=2, style=dotted];
m13_2135 -> m13_2136  [key=0, style=solid];
m13_2135 -> m13_7  [key=2, style=dotted];
m13_2136 -> m13_2133  [key=0, style=bold, color=blue];
m13_1870 -> m13_1871  [key=0, style=solid];
m13_1871 -> m13_1872  [key=0, style=solid];
m13_1871 -> m13_1882  [key=2, style=dotted];
m13_1871 -> m13_1873  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_1871 -> m13_1874  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_1871 -> m13_1878  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_1871 -> m13_1879  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_1872 -> m13_1873  [key=0, style=solid];
m13_1872 -> m13_1883  [key=2, style=dotted];
m13_1873 -> m13_1874  [key=0, style=solid];
m13_1873 -> m13_1883  [key=2, style=dotted];
m13_1874 -> m13_1875  [key=0, style=solid];
m13_1874 -> m13_274  [key=2, style=dotted];
m13_1874 -> m13_1876  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1874 -> m13_1877  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1878 -> m13_1879  [key=0, style=solid];
m13_1878 -> m13_1884  [key=2, style=dotted];
m13_1878 -> m13_7  [key=2, style=dotted];
m13_1879 -> m13_1880  [key=0, style=solid];
m13_1879 -> m13_1884  [key=2, style=dotted];
m13_1879 -> m13_7  [key=2, style=dotted];
m13_1875 -> m13_1876  [key=0, style=solid];
m13_1875 -> m13_1875  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m13_1876 -> m13_1877  [key=0, style=solid];
m13_1876 -> m13_7  [key=2, style=dotted];
m13_1877 -> m13_1878  [key=0, style=solid];
m13_1877 -> m13_8  [key=2, style=dotted];
m13_1877 -> m13_1879  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m13_1877 -> m13_1880  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m13_1880 -> m13_1881  [key=0, style=solid];
m13_1880 -> m13_1885  [key=2, style=dotted];
m13_1881 -> m13_1870  [key=0, style=bold, color=blue];
m13_528 -> m13_529  [key=0, style=solid];
m13_529 -> m13_530  [key=0, style=solid];
m13_529 -> m13_529  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m13_530 -> m13_531  [key=0, style=solid];
m13_530 -> m13_466  [key=2, style=dotted];
m13_530 -> m13_532  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_531 -> m13_532  [key=0, style=solid];
m13_531 -> m13_527  [key=2, style=dotted];
m13_531 -> m13_7  [key=2, style=dotted];
m13_532 -> m13_533  [key=0, style=solid];
m13_532 -> m13_527  [key=2, style=dotted];
m13_532 -> m13_7  [key=2, style=dotted];
m13_533 -> m13_528  [key=0, style=bold, color=blue];
m13_1624 -> m13_1625  [key=0, style=solid];
m13_1625 -> m13_1626  [key=0, style=solid];
m13_1625 -> m13_1627  [key=2, style=dotted];
m13_1626 -> m13_1624  [key=0, style=bold, color=blue];
m13_891 -> m13_892  [key=0, style=solid];
m13_892 -> m13_893  [key=0, style=solid];
m13_892 -> m13_901  [key=2, style=dotted];
m13_892 -> m13_894  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_892 -> m13_895  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_893 -> m13_894  [key=0, style=solid];
m13_893 -> m13_823  [key=2, style=dotted];
m13_894 -> m13_895  [key=0, style=solid];
m13_894 -> m13_823  [key=2, style=dotted];
m13_895 -> m13_896  [key=0, style=solid];
m13_895 -> m13_831  [key=2, style=dotted];
m13_895 -> m13_832  [key=2, style=dotted];
m13_895 -> m13_897  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_896 -> m13_897  [key=0, style=solid];
m13_896 -> m13_7  [key=2, style=dotted];
m13_897 -> m13_898  [key=0, style=solid];
m13_897 -> m13_831  [key=2, style=dotted];
m13_897 -> m13_833  [key=2, style=dotted];
m13_897 -> m13_899  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_898 -> m13_899  [key=0, style=solid];
m13_898 -> m13_7  [key=2, style=dotted];
m13_899 -> m13_900  [key=0, style=solid];
m13_899 -> m13_7  [key=2, style=dotted];
m13_900 -> m13_891  [key=0, style=bold, color=blue];
m13_1409 -> m13_1410  [key=0, style=solid];
m13_1410 -> m13_1411  [key=0, style=solid];
m13_1410 -> m13_586  [key=2, style=dotted];
m13_1410 -> m13_1412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1411 -> m13_1409  [key=0, style=bold, color=blue];
m13_2182 -> m13_2183  [key=0, style=solid];
m13_2183 -> m13_2182  [key=0, style=bold, color=blue];
m13_1812 -> m13_1859  [key=0, style=solid];
m13_1812 -> m13_1860  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1812 -> m13_1861  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1812 -> m13_1862  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1812 -> m13_1863  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1812 -> m13_1864  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1812 -> m13_1865  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1812 -> m13_1866  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1812 -> m13_1867  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1812 -> m13_1868  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1859 -> m13_1860  [key=0, style=solid];
m13_1860 -> m13_1861  [key=0, style=solid];
m13_1861 -> m13_1862  [key=0, style=solid];
m13_1862 -> m13_1863  [key=0, style=solid];
m13_1863 -> m13_1864  [key=0, style=solid];
m13_1864 -> m13_1865  [key=0, style=solid];
m13_1865 -> m13_1866  [key=0, style=solid];
m13_1866 -> m13_1867  [key=0, style=solid];
m13_1867 -> m13_1868  [key=0, style=solid];
m13_1868 -> m13_1869  [key=0, style=solid];
m13_1869 -> m13_1812  [key=0, style=bold, color=blue];
m13_371 -> m13_372  [key=0, style=solid];
m13_372 -> m13_373  [key=0, style=solid];
m13_372 -> m13_375  [key=2, style=dotted];
m13_373 -> m13_374  [key=0, style=solid];
m13_373 -> m13_351  [key=2, style=dotted];
m13_373 -> m13_376  [key=2, style=dotted];
m13_374 -> m13_371  [key=0, style=bold, color=blue];
m13_2844 -> m13_2845  [key=0, style=solid];
m13_2845 -> m13_2846  [key=0, style=solid];
m13_2845 -> m13_355  [key=2, style=dotted];
m13_2845 -> m13_2850  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_2846 -> m13_2847  [key=0, style=solid];
m13_2846 -> m13_2857  [key=2, style=dotted];
m13_2846 -> m13_2848  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_2846 -> m13_2849  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_2850 -> m13_2851  [key=0, style=solid];
m13_2850 -> m13_444  [key=2, style=dotted];
m13_2847 -> m13_2848  [key=0, style=solid];
m13_2847 -> m13_2858  [key=2, style=dotted];
m13_2848 -> m13_2849  [key=0, style=solid];
m13_2848 -> m13_2859  [key=2, style=dotted];
m13_2849 -> m13_2850  [key=0, style=solid];
m13_2849 -> m13_2860  [key=2, style=dotted];
m13_2851 -> m13_2852  [key=0, style=solid];
m13_2851 -> m13_2861  [key=2, style=dotted];
m13_2851 -> m13_599  [key=2, style=dotted];
m13_2852 -> m13_2853  [key=0, style=solid];
m13_2852 -> m13_2862  [key=2, style=dotted];
m13_2852 -> m13_2855  [key=1, style=dashed, color=darkseagreen4, label=a];
m13_2853 -> m13_2854  [key=0, style=solid];
m13_2855 -> m13_2856  [key=0, style=solid];
m13_2855 -> m13_289  [key=2, style=dotted];
m13_2855 -> m13_364  [key=2, style=dotted];
m13_2854 -> m13_2855  [key=0, style=solid];
m13_2854 -> m13_442  [key=2, style=dotted];
m13_2854 -> m13_2863  [key=2, style=dotted];
m13_2856 -> m13_2844  [key=0, style=bold, color=blue];
m13_915 -> m13_916  [key=0, style=solid];
m13_916 -> m13_917  [key=0, style=solid];
m13_917 -> m13_918  [key=0, style=solid];
m13_917 -> m13_6  [key=2, style=dotted];
m13_918 -> m13_919  [key=0, style=solid];
m13_918 -> m13_7  [key=2, style=dotted];
m13_919 -> m13_920  [key=0, style=solid];
m13_919 -> m13_6  [key=2, style=dotted];
m13_920 -> m13_921  [key=0, style=solid];
m13_920 -> m13_7  [key=2, style=dotted];
m13_921 -> m13_915  [key=0, style=bold, color=blue];
m13_1256 -> m13_1257  [key=0, style=solid];
m13_1257 -> m13_1258  [key=0, style=solid];
m13_1257 -> m13_1261  [key=2, style=dotted];
m13_1257 -> m13_633  [key=2, style=dotted];
m13_1258 -> m13_1259  [key=0, style=solid];
m13_1258 -> m13_274  [key=2, style=dotted];
m13_1259 -> m13_1260  [key=0, style=solid];
m13_1259 -> m13_7  [key=2, style=dotted];
m13_1260 -> m13_1256  [key=0, style=bold, color=blue];
m13_2331 -> m13_2332  [key=0, style=solid];
m13_2332 -> m13_2333  [key=0, style=solid];
m13_2333 -> m13_2331  [key=0, style=bold, color=blue];
m13_1751 -> m13_1752  [key=0, style=solid];
m13_1752 -> m13_1753  [key=0, style=solid];
m13_1752 -> m13_1052  [key=2, style=dotted];
m13_1752 -> m13_1754  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_1752 -> m13_1755  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_1752 -> m13_1756  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_1752 -> m13_1760  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_1753 -> m13_1754  [key=0, style=solid];
m13_1753 -> m13_634  [key=2, style=dotted];
m13_1754 -> m13_1755  [key=0, style=solid];
m13_1755 -> m13_1756  [key=0, style=solid];
m13_1756 -> m13_1757  [key=0, style=solid];
m13_1760 -> m13_1761  [key=0, style=solid];
m13_1760 -> m13_1675  [key=2, style=dotted];
m13_1757 -> m13_1758  [key=0, style=solid];
m13_1757 -> m13_643  [key=2, style=dotted];
m13_1757 -> m13_644  [key=2, style=dotted];
m13_1757 -> m13_1760  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_1757 -> m13_1766  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_1758 -> m13_1759  [key=0, style=solid];
m13_1766 -> m13_1767  [key=0, style=solid];
m13_1766 -> m13_7  [key=2, style=dotted];
m13_1759 -> m13_1760  [key=0, style=solid];
m13_1759 -> m13_1762  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m13_1762 -> m13_1763  [key=0, style=solid];
m13_1762 -> m13_7  [key=2, style=dotted];
m13_1761 -> m13_1762  [key=0, style=solid];
m13_1761 -> m13_274  [key=2, style=dotted];
m13_1761 -> m13_1763  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1763 -> m13_1764  [key=0, style=solid];
m13_1763 -> m13_8  [key=2, style=dotted];
m13_1763 -> m13_1765  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1763 -> m13_1766  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1763 -> m13_1767  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1763 -> m13_1768  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1763 -> m13_1769  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1764 -> m13_1765  [key=0, style=solid];
m13_1764 -> m13_7  [key=2, style=dotted];
m13_1765 -> m13_1766  [key=0, style=solid];
m13_1765 -> m13_7  [key=2, style=dotted];
m13_1767 -> m13_1768  [key=0, style=solid];
m13_1767 -> m13_7  [key=2, style=dotted];
m13_1768 -> m13_1769  [key=0, style=solid];
m13_1768 -> m13_7  [key=2, style=dotted];
m13_1769 -> m13_1770  [key=0, style=solid];
m13_1769 -> m13_7  [key=2, style=dotted];
m13_1770 -> m13_1751  [key=0, style=bold, color=blue];
m13_2597 -> m13_2598  [key=0, style=solid];
m13_2598 -> m13_2599  [key=0, style=solid];
m13_2598 -> m13_2607  [key=2, style=dotted];
m13_2598 -> m13_2600  [key=1, style=dashed, color=darkseagreen4, label=b];
m13_2598 -> m13_2602  [key=1, style=dashed, color=darkseagreen4, label=b];
m13_2599 -> m13_2600  [key=0, style=solid];
m13_2600 -> m13_2601  [key=0, style=solid];
m13_2600 -> m13_2598  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.TestObjects.Aa a"];
m13_2602 -> m13_2603  [key=0, style=solid];
m13_2602 -> m13_6  [key=2, style=dotted];
m13_2602 -> m13_2604  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2601 -> m13_2602  [key=0, style=solid];
m13_2603 -> m13_2604  [key=0, style=solid];
m13_2603 -> m13_7  [key=2, style=dotted];
m13_2604 -> m13_2605  [key=0, style=solid];
m13_2604 -> m13_8  [key=2, style=dotted];
m13_2605 -> m13_2606  [key=0, style=solid];
m13_2605 -> m13_7  [key=2, style=dotted];
m13_2606 -> m13_2597  [key=0, style=bold, color=blue];
m13_972 -> m13_973  [key=0, style=solid];
m13_973 -> m13_974  [key=0, style=solid];
m13_973 -> m13_980  [key=2, style=dotted];
m13_973 -> m13_634  [key=2, style=dotted];
m13_974 -> m13_975  [key=0, style=solid];
m13_974 -> m13_274  [key=2, style=dotted];
m13_974 -> m13_976  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_975 -> m13_976  [key=0, style=solid];
m13_975 -> m13_7  [key=2, style=dotted];
m13_976 -> m13_977  [key=0, style=solid];
m13_976 -> m13_8  [key=2, style=dotted];
m13_976 -> m13_978  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_977 -> m13_978  [key=0, style=solid];
m13_977 -> m13_7  [key=2, style=dotted];
m13_978 -> m13_979  [key=0, style=solid];
m13_978 -> m13_634  [key=2, style=dotted];
m13_978 -> m13_7  [key=2, style=dotted];
m13_979 -> m13_972  [key=0, style=bold, color=blue];
m13_2380 -> m13_2381  [key=0, style=solid];
m13_2381 -> m13_2382  [key=0, style=solid];
m13_2382 -> m13_2383  [key=0, style=solid];
m13_2382 -> m13_633  [key=2, style=dotted];
m13_2383 -> m13_2380  [key=0, style=bold, color=blue];
m13_2234 -> m13_2235  [key=0, style=solid];
m13_2235 -> m13_2236  [key=0, style=solid];
m13_2236 -> m13_2234  [key=0, style=bold, color=blue];
m13_1581 -> m13_1582  [key=0, style=solid];
m13_1582 -> m13_1583  [key=0, style=solid];
m13_1582 -> m13_1586  [key=2, style=dotted];
m13_1583 -> m13_1584  [key=0, style=solid];
m13_1583 -> m13_274  [key=2, style=dotted];
m13_1584 -> m13_1585  [key=0, style=solid];
m13_1584 -> m13_7  [key=2, style=dotted];
m13_1585 -> m13_1581  [key=0, style=bold, color=blue];
m13_1148 -> m13_1149  [key=0, style=solid];
m13_1149 -> m13_1150  [key=0, style=solid];
m13_1150 -> m13_1151  [key=0, style=solid];
m13_1150 -> m13_586  [key=2, style=dotted];
m13_1150 -> m13_1152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1151 -> m13_1148  [key=0, style=bold, color=blue];
m13_988 -> m13_989  [key=0, style=solid];
m13_989 -> m13_990  [key=0, style=solid];
m13_989 -> m13_989  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_990 -> m13_991  [key=0, style=solid];
m13_990 -> m13_8  [key=2, style=dotted];
m13_991 -> m13_992  [key=0, style=solid];
m13_991 -> m13_994  [key=0, style=solid];
m13_991 -> m13_995  [key=2, style=dotted];
m13_992 -> m13_993  [key=0, style=solid];
m13_993 -> m13_994  [key=0, style=solid];
m13_993 -> m13_996  [key=2, style=dotted];
m13_993 -> m13_265  [key=2, style=dotted];
m13_994 -> m13_988  [key=0, style=bold, color=blue];
m13_3154 -> m13_3155  [key=0, style=solid];
m13_3155 -> m13_3156  [key=0, style=solid];
m13_3155 -> m13_633  [key=2, style=dotted];
m13_3155 -> m13_634  [key=2, style=dotted];
m13_3155 -> m13_643  [key=2, style=dotted];
m13_3155 -> m13_644  [key=2, style=dotted];
m13_3156 -> m13_3157  [key=0, style=solid];
m13_3156 -> m13_185  [key=2, style=dotted];
m13_3156 -> m13_122  [key=2, style=dotted];
m13_3156 -> m13_768  [key=2, style=dotted];
m13_3157 -> m13_3158  [key=0, style=solid];
m13_3157 -> m13_7  [key=2, style=dotted];
m13_3158 -> m13_3154  [key=0, style=bold, color=blue];
m13_1621 -> m13_1622  [key=0, style=solid];
m13_1621 -> m13_1668  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m13_1622 -> m13_1623  [key=0, style=solid];
m13_1622 -> m13_353  [key=2, style=dotted];
m13_1623 -> m13_1621  [key=0, style=bold, color=blue];
m13_368 -> m13_369  [key=0, style=solid];
m13_369 -> m13_370  [key=0, style=solid];
m13_370 -> m13_368  [key=0, style=bold, color=blue];
m13_1457 -> m13_1458  [key=0, style=solid];
m13_1458 -> m13_1459  [key=0, style=solid];
m13_1458 -> m13_1470  [key=2, style=dotted];
m13_1458 -> m13_1460  [key=1, style=dashed, color=darkseagreen4, label=f];
m13_1458 -> m13_1461  [key=1, style=dashed, color=darkseagreen4, label=f];
m13_1458 -> m13_1462  [key=1, style=dashed, color=darkseagreen4, label=f];
m13_1459 -> m13_1460  [key=0, style=solid];
m13_1459 -> m13_1471  [key=2, style=dotted];
m13_1459 -> m13_1435  [key=2, style=dotted];
m13_1460 -> m13_1461  [key=0, style=solid];
m13_1460 -> m13_1471  [key=2, style=dotted];
m13_1460 -> m13_1435  [key=2, style=dotted];
m13_1461 -> m13_1462  [key=0, style=solid];
m13_1461 -> m13_1471  [key=2, style=dotted];
m13_1461 -> m13_1435  [key=2, style=dotted];
m13_1462 -> m13_1463  [key=0, style=solid];
m13_1462 -> m13_274  [key=2, style=dotted];
m13_1462 -> m13_1464  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1463 -> m13_1464  [key=0, style=solid];
m13_1463 -> m13_7  [key=2, style=dotted];
m13_1464 -> m13_1465  [key=0, style=solid];
m13_1464 -> m13_8  [key=2, style=dotted];
m13_1464 -> m13_1466  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m13_1464 -> m13_1467  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m13_1464 -> m13_1468  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m13_1465 -> m13_1466  [key=0, style=solid];
m13_1465 -> m13_7  [key=2, style=dotted];
m13_1466 -> m13_1467  [key=0, style=solid];
m13_1466 -> m13_7  [key=2, style=dotted];
m13_1467 -> m13_1468  [key=0, style=solid];
m13_1467 -> m13_7  [key=2, style=dotted];
m13_1468 -> m13_1469  [key=0, style=solid];
m13_1468 -> m13_7  [key=2, style=dotted];
m13_1469 -> m13_1457  [key=0, style=bold, color=blue];
m13_1717 -> m13_1718  [key=0, style=solid];
m13_1717 -> m13_1719  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1720  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1721  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1722  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1723  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1724  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1725  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1726  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1727  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1728  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1729  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1730  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1731  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1732  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1733  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1734  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1717 -> m13_1735  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1718 -> m13_1719  [key=0, style=solid];
m13_1718 -> m13_1737  [key=2, style=dotted];
m13_1719 -> m13_1720  [key=0, style=solid];
m13_1719 -> m13_1738  [key=2, style=dotted];
m13_1720 -> m13_1721  [key=0, style=solid];
m13_1720 -> m13_1737  [key=2, style=dotted];
m13_1721 -> m13_1722  [key=0, style=solid];
m13_1721 -> m13_1737  [key=2, style=dotted];
m13_1722 -> m13_1723  [key=0, style=solid];
m13_1722 -> m13_1737  [key=2, style=dotted];
m13_1723 -> m13_1724  [key=0, style=solid];
m13_1723 -> m13_1737  [key=2, style=dotted];
m13_1724 -> m13_1725  [key=0, style=solid];
m13_1724 -> m13_1739  [key=2, style=dotted];
m13_1725 -> m13_1726  [key=0, style=solid];
m13_1725 -> m13_1740  [key=2, style=dotted];
m13_1726 -> m13_1727  [key=0, style=solid];
m13_1726 -> m13_1741  [key=2, style=dotted];
m13_1727 -> m13_1728  [key=0, style=solid];
m13_1727 -> m13_1742  [key=2, style=dotted];
m13_1728 -> m13_1729  [key=0, style=solid];
m13_1728 -> m13_1743  [key=2, style=dotted];
m13_1729 -> m13_1730  [key=0, style=solid];
m13_1729 -> m13_1744  [key=2, style=dotted];
m13_1730 -> m13_1731  [key=0, style=solid];
m13_1730 -> m13_1745  [key=2, style=dotted];
m13_1731 -> m13_1732  [key=0, style=solid];
m13_1731 -> m13_1746  [key=2, style=dotted];
m13_1732 -> m13_1733  [key=0, style=solid];
m13_1732 -> m13_1747  [key=2, style=dotted];
m13_1733 -> m13_1734  [key=0, style=solid];
m13_1733 -> m13_1748  [key=2, style=dotted];
m13_1734 -> m13_1735  [key=0, style=solid];
m13_1734 -> m13_1749  [key=2, style=dotted];
m13_1735 -> m13_1736  [key=0, style=solid];
m13_1735 -> m13_1750  [key=2, style=dotted];
m13_1736 -> m13_1717  [key=0, style=bold, color=blue];
m13_2474 -> m13_2475  [key=0, style=solid];
m13_2475 -> m13_2476  [key=0, style=solid];
m13_2475 -> m13_633  [key=2, style=dotted];
m13_2476 -> m13_2474  [key=0, style=bold, color=blue];
m13_957 -> m13_958  [key=0, style=solid];
m13_958 -> m13_959  [key=0, style=solid];
m13_958 -> m13_961  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m13_959 -> m13_960  [key=0, style=solid];
m13_959 -> m13_971  [key=2, style=dotted];
m13_961 -> m13_962  [key=0, style=solid];
m13_961 -> m13_7  [key=2, style=dotted];
m13_960 -> m13_961  [key=0, style=solid];
m13_960 -> m13_6  [key=2, style=dotted];
m13_960 -> m13_962  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_962 -> m13_963  [key=0, style=solid];
m13_962 -> m13_8  [key=2, style=dotted];
m13_963 -> m13_964  [key=0, style=solid];
m13_963 -> m13_7  [key=2, style=dotted];
m13_964 -> m13_965  [key=0, style=solid];
m13_964 -> m13_967  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m13_965 -> m13_966  [key=0, style=solid];
m13_965 -> m13_971  [key=2, style=dotted];
m13_967 -> m13_968  [key=0, style=solid];
m13_967 -> m13_7  [key=2, style=dotted];
m13_966 -> m13_967  [key=0, style=solid];
m13_966 -> m13_6  [key=2, style=dotted];
m13_966 -> m13_968  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_968 -> m13_969  [key=0, style=solid];
m13_968 -> m13_8  [key=2, style=dotted];
m13_969 -> m13_970  [key=0, style=solid];
m13_969 -> m13_7  [key=2, style=dotted];
m13_970 -> m13_957  [key=0, style=bold, color=blue];
m13_3381 -> m13_3382  [key=0, style=solid];
m13_3382 -> m13_3383  [key=0, style=solid];
m13_3382 -> m13_3347  [key=2, style=dotted];
m13_3383 -> m13_3381  [key=0, style=bold, color=blue];
m13_3164 -> m13_3165  [key=0, style=solid];
m13_3165 -> m13_3166  [key=0, style=solid];
m13_3165 -> m13_633  [key=2, style=dotted];
m13_3165 -> m13_634  [key=2, style=dotted];
m13_3165 -> m13_643  [key=2, style=dotted];
m13_3165 -> m13_644  [key=2, style=dotted];
m13_3165 -> m13_3169  [key=1, style=dashed, color=darkseagreen4, label=dates];
m13_3166 -> m13_3167  [key=0, style=solid];
m13_3166 -> m13_2524  [key=2, style=dotted];
m13_3166 -> m13_3173  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_3169 -> m13_3170  [key=0, style=solid];
m13_3169 -> m13_2561  [key=2, style=dotted];
m13_3167 -> m13_3168  [key=0, style=solid];
m13_3167 -> m13_2525  [key=2, style=dotted];
m13_3167 -> m13_3169  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3167 -> m13_3170  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3167 -> m13_3171  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3167 -> m13_3172  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3173 -> m13_3174  [key=0, style=solid];
m13_3173 -> m13_2529  [key=2, style=dotted];
m13_3168 -> m13_3169  [key=0, style=solid];
m13_3168 -> m13_185  [key=2, style=dotted];
m13_3168 -> m13_122  [key=2, style=dotted];
m13_3168 -> m13_354  [key=2, style=dotted];
m13_3170 -> m13_3171  [key=0, style=solid];
m13_3170 -> m13_1885  [key=2, style=dotted];
m13_3171 -> m13_3172  [key=0, style=solid];
m13_3171 -> m13_7  [key=2, style=dotted];
m13_3172 -> m13_3173  [key=0, style=solid];
m13_3172 -> m13_7  [key=2, style=dotted];
m13_3174 -> m13_3175  [key=0, style=solid];
m13_3174 -> m13_7  [key=2, style=dotted];
m13_3175 -> m13_3164  [key=0, style=bold, color=blue];
m13_1326 -> m13_1327  [key=0, style=solid];
m13_1327 -> m13_1328  [key=0, style=solid];
m13_1327 -> m13_1331  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1327 -> m13_1320  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1328 -> m13_1329  [key=0, style=solid];
m13_1328 -> m13_586  [key=2, style=dotted];
m13_1328 -> m13_1330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1329 -> m13_1326  [key=0, style=bold, color=blue];
m13_2400 -> m13_2401  [key=0, style=solid];
m13_2401 -> m13_2402  [key=0, style=solid];
m13_2401 -> m13_2396  [key=2, style=dotted];
m13_2401 -> m13_2403  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2401 -> m13_2404  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2401 -> m13_2407  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2401 -> m13_2408  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2402 -> m13_2403  [key=0, style=solid];
m13_2402 -> m13_2412  [key=2, style=dotted];
m13_2403 -> m13_2404  [key=0, style=solid];
m13_2403 -> m13_2412  [key=2, style=dotted];
m13_2404 -> m13_2405  [key=0, style=solid];
m13_2404 -> m13_274  [key=2, style=dotted];
m13_2404 -> m13_2406  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2407 -> m13_2408  [key=0, style=solid];
m13_2407 -> m13_7  [key=2, style=dotted];
m13_2408 -> m13_2409  [key=0, style=solid];
m13_2408 -> m13_7  [key=2, style=dotted];
m13_2405 -> m13_2406  [key=0, style=solid];
m13_2405 -> m13_7  [key=2, style=dotted];
m13_2406 -> m13_2407  [key=0, style=solid];
m13_2406 -> m13_8  [key=2, style=dotted];
m13_2406 -> m13_2408  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2406 -> m13_2409  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2406 -> m13_2410  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2409 -> m13_2410  [key=0, style=solid];
m13_2409 -> m13_7  [key=2, style=dotted];
m13_2410 -> m13_2411  [key=0, style=solid];
m13_2410 -> m13_7  [key=2, style=dotted];
m13_2411 -> m13_2400  [key=0, style=bold, color=blue];
m13_1813 -> m13_1814  [key=0, style=solid];
m13_1814 -> m13_1815  [key=0, style=solid];
m13_1814 -> m13_8  [key=2, style=dotted];
m13_1814 -> m13_1816  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_1814 -> m13_1817  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_1814 -> m13_1818  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_1814 -> m13_1819  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_1814 -> m13_1820  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_1814 -> m13_1821  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_1814 -> m13_1822  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_1815 -> m13_1816  [key=0, style=solid];
m13_1815 -> m13_1843  [key=2, style=dotted];
m13_1815 -> m13_1844  [key=2, style=dotted];
m13_1815 -> m13_7  [key=2, style=dotted];
m13_1816 -> m13_1817  [key=0, style=solid];
m13_1816 -> m13_1843  [key=2, style=dotted];
m13_1816 -> m13_1844  [key=2, style=dotted];
m13_1816 -> m13_7  [key=2, style=dotted];
m13_1817 -> m13_1818  [key=0, style=solid];
m13_1817 -> m13_1845  [key=2, style=dotted];
m13_1817 -> m13_1844  [key=2, style=dotted];
m13_1817 -> m13_7  [key=2, style=dotted];
m13_1818 -> m13_1819  [key=0, style=solid];
m13_1818 -> m13_1845  [key=2, style=dotted];
m13_1818 -> m13_1844  [key=2, style=dotted];
m13_1818 -> m13_7  [key=2, style=dotted];
m13_1819 -> m13_1820  [key=0, style=solid];
m13_1819 -> m13_1845  [key=2, style=dotted];
m13_1819 -> m13_1844  [key=2, style=dotted];
m13_1819 -> m13_7  [key=2, style=dotted];
m13_1820 -> m13_1821  [key=0, style=solid];
m13_1820 -> m13_1845  [key=2, style=dotted];
m13_1820 -> m13_1844  [key=2, style=dotted];
m13_1820 -> m13_7  [key=2, style=dotted];
m13_1821 -> m13_1822  [key=0, style=solid];
m13_1821 -> m13_1845  [key=2, style=dotted];
m13_1821 -> m13_1844  [key=2, style=dotted];
m13_1821 -> m13_7  [key=2, style=dotted];
m13_1822 -> m13_1823  [key=0, style=solid];
m13_1822 -> m13_1845  [key=2, style=dotted];
m13_1822 -> m13_1844  [key=2, style=dotted];
m13_1822 -> m13_7  [key=2, style=dotted];
m13_1823 -> m13_1824  [key=0, style=solid];
m13_1823 -> m13_8  [key=2, style=dotted];
m13_1823 -> m13_1825  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1826  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1827  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1828  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1829  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1830  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1831  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1832  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1833  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1834  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1835  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1836  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1837  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1838  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1839  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1840  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1823 -> m13_1841  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_1824 -> m13_1825  [key=0, style=solid];
m13_1824 -> m13_1843  [key=2, style=dotted];
m13_1824 -> m13_1844  [key=2, style=dotted];
m13_1824 -> m13_7  [key=2, style=dotted];
m13_1825 -> m13_1826  [key=0, style=solid];
m13_1825 -> m13_1843  [key=2, style=dotted];
m13_1825 -> m13_1844  [key=2, style=dotted];
m13_1825 -> m13_7  [key=2, style=dotted];
m13_1826 -> m13_1827  [key=0, style=solid];
m13_1826 -> m13_1845  [key=2, style=dotted];
m13_1826 -> m13_1844  [key=2, style=dotted];
m13_1826 -> m13_7  [key=2, style=dotted];
m13_1827 -> m13_1828  [key=0, style=solid];
m13_1827 -> m13_1845  [key=2, style=dotted];
m13_1827 -> m13_1844  [key=2, style=dotted];
m13_1827 -> m13_7  [key=2, style=dotted];
m13_1828 -> m13_1829  [key=0, style=solid];
m13_1828 -> m13_1845  [key=2, style=dotted];
m13_1828 -> m13_1844  [key=2, style=dotted];
m13_1828 -> m13_7  [key=2, style=dotted];
m13_1829 -> m13_1830  [key=0, style=solid];
m13_1829 -> m13_1845  [key=2, style=dotted];
m13_1829 -> m13_1844  [key=2, style=dotted];
m13_1829 -> m13_7  [key=2, style=dotted];
m13_1830 -> m13_1831  [key=0, style=solid];
m13_1830 -> m13_1845  [key=2, style=dotted];
m13_1830 -> m13_1844  [key=2, style=dotted];
m13_1830 -> m13_7  [key=2, style=dotted];
m13_1831 -> m13_1832  [key=0, style=solid];
m13_1831 -> m13_1845  [key=2, style=dotted];
m13_1831 -> m13_1844  [key=2, style=dotted];
m13_1831 -> m13_7  [key=2, style=dotted];
m13_1832 -> m13_1833  [key=0, style=solid];
m13_1832 -> m13_7  [key=2, style=dotted];
m13_1833 -> m13_1834  [key=0, style=solid];
m13_1833 -> m13_7  [key=2, style=dotted];
m13_1834 -> m13_1835  [key=0, style=solid];
m13_1834 -> m13_7  [key=2, style=dotted];
m13_1835 -> m13_1836  [key=0, style=solid];
m13_1835 -> m13_7  [key=2, style=dotted];
m13_1836 -> m13_1837  [key=0, style=solid];
m13_1836 -> m13_1845  [key=2, style=dotted];
m13_1836 -> m13_1844  [key=2, style=dotted];
m13_1836 -> m13_7  [key=2, style=dotted];
m13_1837 -> m13_1838  [key=0, style=solid];
m13_1837 -> m13_1845  [key=2, style=dotted];
m13_1837 -> m13_1844  [key=2, style=dotted];
m13_1837 -> m13_7  [key=2, style=dotted];
m13_1838 -> m13_1839  [key=0, style=solid];
m13_1838 -> m13_7  [key=2, style=dotted];
m13_1839 -> m13_1840  [key=0, style=solid];
m13_1839 -> m13_1845  [key=2, style=dotted];
m13_1839 -> m13_1844  [key=2, style=dotted];
m13_1839 -> m13_7  [key=2, style=dotted];
m13_1840 -> m13_1841  [key=0, style=solid];
m13_1840 -> m13_1845  [key=2, style=dotted];
m13_1840 -> m13_1844  [key=2, style=dotted];
m13_1840 -> m13_7  [key=2, style=dotted];
m13_1841 -> m13_1842  [key=0, style=solid];
m13_1841 -> m13_1845  [key=2, style=dotted];
m13_1841 -> m13_1844  [key=2, style=dotted];
m13_1841 -> m13_7  [key=2, style=dotted];
m13_1842 -> m13_1813  [key=0, style=bold, color=blue];
m13_2177 -> m13_2178  [key=0, style=solid];
m13_2178 -> m13_2177  [key=0, style=bold, color=blue];
m13_257 -> m13_258  [key=0, style=solid];
m13_258 -> m13_259  [key=0, style=solid];
m13_258 -> m13_262  [key=2, style=dotted];
m13_258 -> m13_260  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_259 -> m13_260  [key=0, style=solid];
m13_259 -> m13_263  [key=2, style=dotted];
m13_260 -> m13_261  [key=0, style=solid];
m13_260 -> m13_264  [key=2, style=dotted];
m13_260 -> m13_265  [key=2, style=dotted];
m13_261 -> m13_257  [key=0, style=bold, color=blue];
m13_3369 -> m13_3370  [key=0, style=solid];
m13_3370 -> m13_3371  [key=0, style=solid];
m13_3371 -> m13_3369  [key=0, style=bold, color=blue];
m13_1078 -> m13_1079  [key=0, style=solid];
m13_1079 -> m13_1080  [key=0, style=solid];
m13_1079 -> m13_1079  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1080 -> m13_1081  [key=0, style=solid];
m13_1080 -> m13_8  [key=2, style=dotted];
m13_1080 -> m13_1082  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1080 -> m13_1083  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1080 -> m13_1084  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1080 -> m13_1085  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1081 -> m13_1082  [key=0, style=solid];
m13_1081 -> m13_316  [key=2, style=dotted];
m13_1082 -> m13_1083  [key=0, style=solid];
m13_1082 -> m13_7  [key=2, style=dotted];
m13_1083 -> m13_1084  [key=0, style=solid];
m13_1083 -> m13_7  [key=2, style=dotted];
m13_1084 -> m13_1085  [key=0, style=solid];
m13_1084 -> m13_7  [key=2, style=dotted];
m13_1085 -> m13_1086  [key=0, style=solid];
m13_1085 -> m13_7  [key=2, style=dotted];
m13_1086 -> m13_1078  [key=0, style=bold, color=blue];
m13_714 -> m13_715  [key=0, style=solid];
m13_715 -> m13_716  [key=0, style=solid];
m13_715 -> m13_718  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_715 -> m13_705  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_716 -> m13_717  [key=0, style=solid];
m13_716 -> m13_116  [key=2, style=dotted];
m13_716 -> m13_718  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_718 -> m13_719  [key=0, style=solid];
m13_718 -> m13_722  [key=2, style=dotted];
m13_718 -> m13_362  [key=2, style=dotted];
m13_718 -> m13_720  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_717 -> m13_718  [key=0, style=solid];
m13_719 -> m13_720  [key=0, style=solid];
m13_719 -> m13_7  [key=2, style=dotted];
m13_720 -> m13_721  [key=0, style=solid];
m13_720 -> m13_7  [key=2, style=dotted];
m13_721 -> m13_714  [key=0, style=bold, color=blue];
m13_1128 -> m13_1129  [key=0, style=solid];
m13_1129 -> m13_1130  [key=0, style=solid];
m13_1129 -> m13_1139  [key=2, style=dotted];
m13_1129 -> m13_1131  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1129 -> m13_1132  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1129 -> m13_1133  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1129 -> m13_1134  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1129 -> m13_1136  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1130 -> m13_1131  [key=0, style=solid];
m13_1131 -> m13_1132  [key=0, style=solid];
m13_1132 -> m13_1133  [key=0, style=solid];
m13_1133 -> m13_1134  [key=0, style=solid];
m13_1134 -> m13_1135  [key=0, style=solid];
m13_1134 -> m13_274  [key=2, style=dotted];
m13_1136 -> m13_1137  [key=0, style=solid];
m13_1136 -> m13_185  [key=2, style=dotted];
m13_1136 -> m13_768  [key=2, style=dotted];
m13_1135 -> m13_1136  [key=0, style=solid];
m13_1135 -> m13_7  [key=2, style=dotted];
m13_1137 -> m13_1138  [key=0, style=solid];
m13_1137 -> m13_7  [key=2, style=dotted];
m13_1138 -> m13_1128  [key=0, style=bold, color=blue];
m13_659 -> m13_660  [key=0, style=solid];
m13_660 -> m13_661  [key=0, style=solid];
m13_660 -> m13_482  [key=2, style=dotted];
m13_660 -> m13_663  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_661 -> m13_662  [key=0, style=solid];
m13_661 -> m13_6  [key=2, style=dotted];
m13_661 -> m13_663  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_663 -> m13_664  [key=0, style=solid];
m13_663 -> m13_672  [key=2, style=dotted];
m13_663 -> m13_663  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_663 -> m13_665  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_663 -> m13_666  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_663 -> m13_667  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_663 -> m13_668  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_663 -> m13_669  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_663 -> m13_670  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_662 -> m13_663  [key=0, style=solid];
m13_662 -> m13_7  [key=2, style=dotted];
m13_664 -> m13_665  [key=0, style=solid];
m13_664 -> m13_7  [key=2, style=dotted];
m13_665 -> m13_666  [key=0, style=solid];
m13_665 -> m13_7  [key=2, style=dotted];
m13_666 -> m13_667  [key=0, style=solid];
m13_666 -> m13_7  [key=2, style=dotted];
m13_667 -> m13_668  [key=0, style=solid];
m13_667 -> m13_7  [key=2, style=dotted];
m13_668 -> m13_669  [key=0, style=solid];
m13_668 -> m13_7  [key=2, style=dotted];
m13_669 -> m13_670  [key=0, style=solid];
m13_669 -> m13_7  [key=2, style=dotted];
m13_670 -> m13_671  [key=0, style=solid];
m13_670 -> m13_7  [key=2, style=dotted];
m13_671 -> m13_659  [key=0, style=bold, color=blue];
m13_1988 -> m13_1989  [key=0, style=solid];
m13_1989 -> m13_1990  [key=0, style=solid];
m13_1989 -> m13_1989  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1990 -> m13_1991  [key=0, style=solid];
m13_1990 -> m13_8  [key=2, style=dotted];
m13_1990 -> m13_1992  [key=1, style=dashed, color=darkseagreen4, label=cc];
m13_1990 -> m13_1993  [key=1, style=dashed, color=darkseagreen4, label=cc];
m13_1991 -> m13_1992  [key=0, style=solid];
m13_1991 -> m13_7  [key=2, style=dotted];
m13_1992 -> m13_1993  [key=0, style=solid];
m13_1992 -> m13_7  [key=2, style=dotted];
m13_1993 -> m13_1994  [key=0, style=solid];
m13_1993 -> m13_7  [key=2, style=dotted];
m13_1994 -> m13_1988  [key=0, style=bold, color=blue];
m13_3044 -> m13_3045  [key=0, style=solid];
m13_3045 -> m13_3046  [key=0, style=solid];
m13_3045 -> m13_8  [key=2, style=dotted];
m13_3045 -> m13_3047  [key=1, style=dashed, color=darkseagreen4, label=uris];
m13_3046 -> m13_3047  [key=0, style=solid];
m13_3046 -> m13_7  [key=2, style=dotted];
m13_3047 -> m13_3048  [key=0, style=solid];
m13_3047 -> m13_1248  [key=2, style=dotted];
m13_3047 -> m13_7  [key=2, style=dotted];
m13_3048 -> m13_3049  [key=0, style=solid];
m13_3048 -> m13_8  [key=2, style=dotted];
m13_3049 -> m13_3050  [key=0, style=solid];
m13_3049 -> m13_316  [key=2, style=dotted];
m13_3050 -> m13_3051  [key=0, style=solid];
m13_3050 -> m13_3057  [key=2, style=dotted];
m13_3050 -> m13_3052  [key=1, style=dashed, color=darkseagreen4, label=i1];
m13_3051 -> m13_3052  [key=0, style=solid];
m13_3051 -> m13_1248  [key=2, style=dotted];
m13_3052 -> m13_3053  [key=0, style=solid];
m13_3052 -> m13_7  [key=2, style=dotted];
m13_3053 -> m13_3054  [key=0, style=solid];
m13_3053 -> m13_8  [key=2, style=dotted];
m13_3053 -> m13_3055  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_3054 -> m13_3055  [key=0, style=solid];
m13_3054 -> m13_316  [key=2, style=dotted];
m13_3055 -> m13_3056  [key=0, style=solid];
m13_3055 -> m13_3057  [key=2, style=dotted];
m13_3055 -> m13_7  [key=2, style=dotted];
m13_3056 -> m13_3044  [key=0, style=bold, color=blue];
m13_2477 -> m13_2478  [key=0, style=solid];
m13_2478 -> m13_2479  [key=0, style=solid];
m13_2478 -> m13_2474  [key=2, style=dotted];
m13_2478 -> m13_2481  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m13_2478 -> m13_2482  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m13_2478 -> m13_2485  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m13_2479 -> m13_2482  [key=0, style=solid];
m13_2479 -> m13_1605  [key=2, style=dotted];
m13_2481 -> m13_2482  [key=0, style=solid];
m13_2481 -> m13_186  [key=2, style=dotted];
m13_2482 -> m13_2483  [key=0, style=solid];
m13_2482 -> m13_6  [key=2, style=dotted];
m13_2485 -> m13_2486  [key=0, style=solid];
m13_2485 -> m13_274  [key=2, style=dotted];
m13_2480 -> m13_2481  [key=0, style=solid];
m13_2483 -> m13_2484  [key=0, style=solid];
m13_2483 -> m13_8  [key=2, style=dotted];
m13_2484 -> m13_2485  [key=0, style=solid];
m13_2484 -> m13_2489  [key=2, style=dotted];
m13_2484 -> m13_7  [key=2, style=dotted];
m13_2486 -> m13_2487  [key=0, style=solid];
m13_2486 -> m13_8  [key=2, style=dotted];
m13_2487 -> m13_2488  [key=0, style=solid];
m13_2487 -> m13_2489  [key=2, style=dotted];
m13_2487 -> m13_7  [key=2, style=dotted];
m13_2488 -> m13_2477  [key=0, style=bold, color=blue];
m13_2468 -> m13_2469  [key=0, style=solid];
m13_2469 -> m13_2470  [key=0, style=solid];
m13_2469 -> m13_2473  [key=2, style=dotted];
m13_2470 -> m13_2471  [key=0, style=solid];
m13_2470 -> m13_274  [key=2, style=dotted];
m13_2471 -> m13_2472  [key=0, style=solid];
m13_2471 -> m13_7  [key=2, style=dotted];
m13_2472 -> m13_2468  [key=0, style=bold, color=blue];
m13_1886 -> m13_1887  [key=0, style=solid];
m13_1887 -> m13_1888  [key=0, style=solid];
m13_1887 -> m13_1897  [key=2, style=dotted];
m13_1887 -> m13_1890  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_1887 -> m13_1891  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_1887 -> m13_1895  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_1888 -> m13_1889  [key=0, style=solid];
m13_1888 -> m13_1898  [key=2, style=dotted];
m13_1888 -> m13_1890  [key=1, style=dashed, color=darkseagreen4, label=document];
m13_1890 -> m13_1891  [key=0, style=solid];
m13_1891 -> m13_1892  [key=0, style=solid];
m13_1891 -> m13_274  [key=2, style=dotted];
m13_1891 -> m13_1893  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1891 -> m13_1894  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1895 -> m13_1896  [key=0, style=solid];
m13_1895 -> m13_7  [key=2, style=dotted];
m13_1889 -> m13_1890  [key=0, style=solid];
m13_1889 -> m13_1899  [key=2, style=dotted];
m13_1892 -> m13_1893  [key=0, style=solid];
m13_1892 -> m13_1892  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m13_1893 -> m13_1894  [key=0, style=solid];
m13_1893 -> m13_7  [key=2, style=dotted];
m13_1894 -> m13_1895  [key=0, style=solid];
m13_1894 -> m13_8  [key=2, style=dotted];
m13_1896 -> m13_1886  [key=0, style=bold, color=blue];
m13_1640 -> m13_1641  [key=0, style=solid];
m13_1641 -> m13_1642  [key=0, style=solid];
m13_1641 -> m13_1643  [key=2, style=dotted];
m13_1642 -> m13_1640  [key=0, style=bold, color=blue];
m13_2971 -> m13_2972  [key=0, style=solid];
m13_2971 -> m13_2965  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m13_2971 -> m13_2976  [key=3, color=darkorchid, style=bold, label="method methodReturn T SerializeAndDeserialize"];
m13_2972 -> m13_2973  [key=0, style=solid];
m13_2972 -> m13_2975  [key=2, style=dotted];
m13_2973 -> m13_2974  [key=0, style=solid];
m13_2973 -> m13_2976  [key=2, style=dotted];
m13_2974 -> m13_2971  [key=0, style=bold, color=blue];
m13_2166 -> m13_2167  [key=0, style=solid];
m13_2167 -> m13_2168  [key=0, style=solid];
m13_2167 -> m13_2175  [key=2, style=dotted];
m13_2167 -> m13_2169  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_2168 -> m13_2169  [key=0, style=solid];
m13_2168 -> m13_2176  [key=2, style=dotted];
m13_2169 -> m13_2170  [key=0, style=solid];
m13_2169 -> m13_6  [key=2, style=dotted];
m13_2170 -> m13_2171  [key=0, style=solid];
m13_2170 -> m13_8  [key=2, style=dotted];
m13_2170 -> m13_2172  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_2170 -> m13_2173  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_2171 -> m13_2172  [key=0, style=solid];
m13_2171 -> m13_7  [key=2, style=dotted];
m13_2172 -> m13_2173  [key=0, style=solid];
m13_2172 -> m13_7  [key=2, style=dotted];
m13_2173 -> m13_2174  [key=0, style=solid];
m13_2173 -> m13_7  [key=2, style=dotted];
m13_2174 -> m13_2166  [key=0, style=bold, color=blue];
m13_1192 -> m13_1193  [key=0, style=solid];
m13_1193 -> m13_1194  [key=0, style=solid];
m13_1193 -> m13_1183  [key=2, style=dotted];
m13_1193 -> m13_1195  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1194 -> m13_1195  [key=0, style=solid];
m13_1195 -> m13_1196  [key=0, style=solid];
m13_1195 -> m13_274  [key=2, style=dotted];
m13_1195 -> m13_1197  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1196 -> m13_1197  [key=0, style=solid];
m13_1196 -> m13_7  [key=2, style=dotted];
m13_1197 -> m13_1198  [key=0, style=solid];
m13_1197 -> m13_8  [key=2, style=dotted];
m13_1198 -> m13_1199  [key=0, style=solid];
m13_1198 -> m13_1189  [key=2, style=dotted];
m13_1198 -> m13_7  [key=2, style=dotted];
m13_1199 -> m13_1192  [key=0, style=bold, color=blue];
m13_2724 -> m13_2725  [key=0, style=solid];
m13_2725 -> m13_2726  [key=0, style=solid];
m13_2725 -> m13_586  [key=2, style=dotted];
m13_2725 -> m13_2727  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2726 -> m13_2724  [key=0, style=bold, color=blue];
m13_2442 -> m13_2443  [key=0, style=solid];
m13_2442 -> m13_2444  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_2442 -> m13_2445  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_2443 -> m13_2444  [key=0, style=solid];
m13_2444 -> m13_2445  [key=0, style=solid];
m13_2445 -> m13_2446  [key=0, style=solid];
m13_2446 -> m13_2442  [key=0, style=bold, color=blue];
m13_3138 -> m13_3139  [key=0, style=solid];
m13_3139 -> m13_3140  [key=0, style=solid];
m13_3139 -> m13_3141  [key=1, style=dashed, color=darkseagreen4, label=content];
m13_3139 -> m13_3139  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m13_3140 -> m13_3141  [key=0, style=solid];
m13_3140 -> m13_185  [key=2, style=dotted];
m13_3141 -> m13_3142  [key=0, style=solid];
m13_3141 -> m13_3146  [key=2, style=dotted];
m13_3142 -> m13_3143  [key=0, style=solid];
m13_3143 -> m13_3144  [key=0, style=solid];
m13_3143 -> m13_644  [key=2, style=dotted];
m13_3143 -> m13_7  [key=2, style=dotted];
m13_3143 -> m13_3143  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_3144 -> m13_3145  [key=0, style=solid];
m13_3144 -> m13_3147  [key=2, style=dotted];
m13_3144 -> m13_7  [key=2, style=dotted];
m13_3144 -> m13_3144  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_3145 -> m13_3138  [key=0, style=bold, color=blue];
m13_816 -> m13_817  [key=0, style=solid];
m13_817 -> m13_818  [key=0, style=solid];
m13_817 -> m13_823  [key=2, style=dotted];
m13_818 -> m13_819  [key=0, style=solid];
m13_818 -> m13_6  [key=2, style=dotted];
m13_818 -> m13_820  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_819 -> m13_820  [key=0, style=solid];
m13_819 -> m13_7  [key=2, style=dotted];
m13_820 -> m13_821  [key=0, style=solid];
m13_820 -> m13_8  [key=2, style=dotted];
m13_821 -> m13_822  [key=0, style=solid];
m13_821 -> m13_7  [key=2, style=dotted];
m13_822 -> m13_816  [key=0, style=bold, color=blue];
m13_1140 -> m13_1141  [key=0, style=solid];
m13_1141 -> m13_1142  [key=0, style=solid];
m13_1141 -> m13_2251  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1142 -> m13_1143  [key=0, style=solid];
m13_1142 -> m13_8  [key=2, style=dotted];
m13_1142 -> m13_1144  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1142 -> m13_1145  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1142 -> m13_1146  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1143 -> m13_1144  [key=0, style=solid];
m13_1143 -> m13_7  [key=2, style=dotted];
m13_1144 -> m13_1145  [key=0, style=solid];
m13_1144 -> m13_7  [key=2, style=dotted];
m13_1145 -> m13_1146  [key=0, style=solid];
m13_1145 -> m13_7  [key=2, style=dotted];
m13_1146 -> m13_1147  [key=0, style=solid];
m13_1146 -> m13_7  [key=2, style=dotted];
m13_1147 -> m13_1140  [key=0, style=bold, color=blue];
m13_2975 -> m13_2977  [key=0, style=solid];
m13_2975 -> m13_2980  [key=1, style=dashed, color=darkseagreen4, label=T];
m13_2975 -> m13_2971  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m13_2977 -> m13_2978  [key=0, style=solid];
m13_2977 -> m13_2524  [key=2, style=dotted];
m13_2977 -> m13_2980  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m13_2977 -> m13_2981  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m13_2980 -> m13_2981  [key=0, style=solid];
m13_2980 -> m13_357  [key=2, style=dotted];
m13_2978 -> m13_2979  [key=0, style=solid];
m13_2978 -> m13_116  [key=2, style=dotted];
m13_2978 -> m13_2980  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2981 -> m13_2982  [key=0, style=solid];
m13_2981 -> m13_2529  [key=2, style=dotted];
m13_2979 -> m13_2980  [key=0, style=solid];
m13_2979 -> m13_2983  [key=2, style=dotted];
m13_2982 -> m13_2975  [key=0, style=bold, color=blue];
m13_2665 -> m13_2666  [key=0, style=solid];
m13_2666 -> m13_2667  [key=0, style=solid];
m13_2666 -> m13_2675  [key=2, style=dotted];
m13_2666 -> m13_782  [key=2, style=dotted];
m13_2666 -> m13_634  [key=2, style=dotted];
m13_2667 -> m13_2668  [key=0, style=solid];
m13_2667 -> m13_274  [key=2, style=dotted];
m13_2667 -> m13_2669  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m13_2668 -> m13_2669  [key=0, style=solid];
m13_2668 -> m13_7  [key=2, style=dotted];
m13_2669 -> m13_2670  [key=0, style=solid];
m13_2669 -> m13_8  [key=2, style=dotted];
m13_2669 -> m13_2671  [key=1, style=dashed, color=darkseagreen4, label=actual];
m13_2669 -> m13_2672  [key=1, style=dashed, color=darkseagreen4, label=actual];
m13_2670 -> m13_2671  [key=0, style=solid];
m13_2670 -> m13_782  [key=2, style=dotted];
m13_2670 -> m13_7  [key=2, style=dotted];
m13_2671 -> m13_2672  [key=0, style=solid];
m13_2671 -> m13_782  [key=2, style=dotted];
m13_2671 -> m13_7  [key=2, style=dotted];
m13_2672 -> m13_2673  [key=0, style=solid];
m13_2673 -> m13_2674  [key=0, style=solid];
m13_2673 -> m13_56  [key=2, style=dotted];
m13_2673 -> m13_2564  [key=2, style=dotted];
m13_2674 -> m13_2665  [key=0, style=bold, color=blue];
m13_20 -> m13_21  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_28  [key=2, style=dotted];
m13_21 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_21 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_21 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_6  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_7  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_7  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_7  [key=2, style=dotted];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_8  [key=2, style=dotted];
m13_23 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_23 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_27 -> m13_20  [key=0, style=bold, color=blue];
m13_3011 -> m13_3012  [key=0, style=solid];
m13_3012 -> m13_3013  [key=0, style=solid];
m13_3012 -> m13_3015  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3012 -> m13_3020  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3012 -> m13_3023  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3012 -> m13_3012  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3013 -> m13_3014  [key=0, style=solid];
m13_3013 -> m13_185  [key=2, style=dotted];
m13_3013 -> m13_3018  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3013 -> m13_3019  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3015 -> m13_3016  [key=0, style=solid];
m13_3015 -> m13_2053  [key=2, style=dotted];
m13_3015 -> m13_722  [key=2, style=dotted];
m13_3015 -> m13_2086  [key=2, style=dotted];
m13_3015 -> m13_3017  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_3020 -> m13_3021  [key=0, style=solid];
m13_3020 -> m13_586  [key=2, style=dotted];
m13_3020 -> m13_3022  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3014 -> m13_3015  [key=0, style=solid];
m13_3014 -> m13_354  [key=2, style=dotted];
m13_3018 -> m13_3019  [key=0, style=solid];
m13_3019 -> m13_3020  [key=0, style=solid];
m13_3019 -> m13_354  [key=2, style=dotted];
m13_3019 -> m13_3023  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_3016 -> m13_3017  [key=0, style=solid];
m13_3016 -> m13_316  [key=2, style=dotted];
m13_3017 -> m13_3018  [key=0, style=solid];
m13_3017 -> m13_7  [key=2, style=dotted];
m13_3021 -> m13_3011  [key=0, style=bold, color=blue];
m13_1803 -> m13_1804  [key=0, style=solid];
m13_1804 -> m13_1805  [key=0, style=solid];
m13_1804 -> m13_1811  [key=2, style=dotted];
m13_1805 -> m13_1806  [key=0, style=solid];
m13_1805 -> m13_274  [key=2, style=dotted];
m13_1806 -> m13_1807  [key=0, style=solid];
m13_1806 -> m13_7  [key=2, style=dotted];
m13_1807 -> m13_1808  [key=0, style=solid];
m13_1807 -> m13_1812  [key=2, style=dotted];
m13_1808 -> m13_1809  [key=0, style=solid];
m13_1808 -> m13_274  [key=2, style=dotted];
m13_1809 -> m13_1810  [key=0, style=solid];
m13_1809 -> m13_7  [key=2, style=dotted];
m13_1810 -> m13_1803  [key=0, style=bold, color=blue];
m13_3363 -> m13_3364  [key=0, style=solid];
m13_3364 -> m13_3365  [key=0, style=solid];
m13_3364 -> m13_3347  [key=2, style=dotted];
m13_3365 -> m13_3363  [key=0, style=bold, color=blue];
m13_2219 -> m13_2220  [key=0, style=solid];
m13_2219 -> m13_2208  [key=3, color=darkorchid, style=bold, label="Parameter variable string serStr"];
m13_2220 -> m13_2221  [key=0, style=solid];
m13_2220 -> m13_185  [key=2, style=dotted];
m13_2220 -> m13_863  [key=2, style=dotted];
m13_2221 -> m13_2219  [key=0, style=bold, color=blue];
m13_2736 -> m13_2737  [key=0, style=solid];
m13_2737 -> m13_2738  [key=0, style=solid];
m13_2737 -> m13_586  [key=2, style=dotted];
m13_2737 -> m13_2739  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2738 -> m13_2736  [key=0, style=bold, color=blue];
m13_1033 -> m13_1034  [key=0, style=solid];
m13_1034 -> m13_1035  [key=0, style=solid];
m13_1034 -> m13_1034  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1035 -> m13_1036  [key=0, style=solid];
m13_1035 -> m13_8  [key=2, style=dotted];
m13_1036 -> m13_1033  [key=0, style=bold, color=blue];
m13_2413 -> m13_2414  [key=0, style=solid];
m13_2414 -> m13_2415  [key=0, style=solid];
m13_2414 -> m13_1922  [key=2, style=dotted];
m13_2415 -> m13_2413  [key=0, style=bold, color=blue];
m13_1523 -> m13_1524  [key=0, style=solid];
m13_1524 -> m13_1525  [key=0, style=solid];
m13_1524 -> m13_8  [key=2, style=dotted];
m13_1524 -> m13_1526  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1524 -> m13_1527  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1524 -> m13_1528  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1524 -> m13_1529  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1524 -> m13_1530  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1524 -> m13_1531  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1524 -> m13_1532  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1524 -> m13_1533  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1525 -> m13_1526  [key=0, style=solid];
m13_1525 -> m13_316  [key=2, style=dotted];
m13_1526 -> m13_1527  [key=0, style=solid];
m13_1526 -> m13_316  [key=2, style=dotted];
m13_1527 -> m13_1528  [key=0, style=solid];
m13_1527 -> m13_442  [key=2, style=dotted];
m13_1527 -> m13_7  [key=2, style=dotted];
m13_1528 -> m13_1529  [key=0, style=solid];
m13_1528 -> m13_442  [key=2, style=dotted];
m13_1528 -> m13_7  [key=2, style=dotted];
m13_1529 -> m13_1530  [key=0, style=solid];
m13_1529 -> m13_7  [key=2, style=dotted];
m13_1530 -> m13_1531  [key=0, style=solid];
m13_1530 -> m13_7  [key=2, style=dotted];
m13_1531 -> m13_1532  [key=0, style=solid];
m13_1531 -> m13_7  [key=2, style=dotted];
m13_1532 -> m13_1533  [key=0, style=solid];
m13_1532 -> m13_7  [key=2, style=dotted];
m13_1533 -> m13_1534  [key=0, style=solid];
m13_1533 -> m13_7  [key=2, style=dotted];
m13_1534 -> m13_1523  [key=0, style=bold, color=blue];
m13_1354 -> m13_1355  [key=0, style=solid];
m13_1355 -> m13_1356  [key=0, style=solid];
m13_1355 -> m13_1359  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1355 -> m13_1320  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1356 -> m13_1357  [key=0, style=solid];
m13_1356 -> m13_586  [key=2, style=dotted];
m13_1356 -> m13_1358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1357 -> m13_1354  [key=0, style=bold, color=blue];
m13_17 -> m13_18  [key=0, style=solid];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_17  [key=0, style=bold, color=blue];
m13_467 -> m13_468  [key=0, style=solid];
m13_468 -> m13_469  [key=0, style=solid];
m13_468 -> m13_482  [key=2, style=dotted];
m13_468 -> m13_470  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_468 -> m13_471  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_468 -> m13_472  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_468 -> m13_473  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_469 -> m13_470  [key=0, style=solid];
m13_470 -> m13_471  [key=0, style=solid];
m13_470 -> m13_483  [key=2, style=dotted];
m13_471 -> m13_472  [key=0, style=solid];
m13_472 -> m13_473  [key=0, style=solid];
m13_473 -> m13_474  [key=0, style=solid];
m13_473 -> m13_6  [key=2, style=dotted];
m13_474 -> m13_475  [key=0, style=solid];
m13_474 -> m13_466  [key=2, style=dotted];
m13_474 -> m13_476  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_474 -> m13_477  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_474 -> m13_478  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_474 -> m13_479  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_474 -> m13_480  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_475 -> m13_476  [key=0, style=solid];
m13_475 -> m13_7  [key=2, style=dotted];
m13_476 -> m13_477  [key=0, style=solid];
m13_476 -> m13_483  [key=2, style=dotted];
m13_476 -> m13_7  [key=2, style=dotted];
m13_477 -> m13_478  [key=0, style=solid];
m13_477 -> m13_7  [key=2, style=dotted];
m13_478 -> m13_479  [key=0, style=solid];
m13_478 -> m13_7  [key=2, style=dotted];
m13_479 -> m13_480  [key=0, style=solid];
m13_479 -> m13_7  [key=2, style=dotted];
m13_480 -> m13_481  [key=0, style=solid];
m13_480 -> m13_7  [key=2, style=dotted];
m13_481 -> m13_467  [key=0, style=bold, color=blue];
m13_3336 -> m13_3337  [key=0, style=solid];
m13_3336 -> m13_3339  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_3336 -> m13_3341  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_3336 -> m13_3343  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_3337 -> m13_3338  [key=0, style=solid];
m13_3337 -> m13_3339  [key=0, style=solid];
m13_3339 -> m13_3340  [key=0, style=solid];
m13_3339 -> m13_3341  [key=0, style=solid];
m13_3341 -> m13_3342  [key=0, style=solid];
m13_3341 -> m13_3343  [key=0, style=solid];
m13_3343 -> m13_3344  [key=0, style=solid];
m13_3343 -> m13_3345  [key=0, style=solid];
m13_3338 -> m13_3346  [key=0, style=solid];
m13_3340 -> m13_3346  [key=0, style=solid];
m13_3342 -> m13_3346  [key=0, style=solid];
m13_3344 -> m13_3346  [key=0, style=solid];
m13_3344 -> m13_352  [key=2, style=dotted];
m13_3345 -> m13_3346  [key=0, style=solid];
m13_3345 -> m13_3347  [key=2, style=dotted];
m13_3346 -> m13_3336  [key=0, style=bold, color=blue];
m13_2110 -> m13_2111  [key=0, style=solid];
m13_2111 -> m13_2112  [key=0, style=solid];
m13_2111 -> m13_2131  [key=2, style=dotted];
m13_2111 -> m13_2113  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2111 -> m13_2114  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2111 -> m13_2115  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2111 -> m13_2116  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2111 -> m13_2117  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2111 -> m13_2121  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2111 -> m13_2123  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2111 -> m13_2127  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2111 -> m13_2129  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2112 -> m13_2113  [key=0, style=solid];
m13_2113 -> m13_2114  [key=0, style=solid];
m13_2114 -> m13_2115  [key=0, style=solid];
m13_2114 -> m13_2131  [key=2, style=dotted];
m13_2115 -> m13_2116  [key=0, style=solid];
m13_2116 -> m13_2117  [key=0, style=solid];
m13_2116 -> m13_634  [key=2, style=dotted];
m13_2117 -> m13_2118  [key=0, style=solid];
m13_2117 -> m13_2132  [key=2, style=dotted];
m13_2117 -> m13_2119  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2121 -> m13_2122  [key=0, style=solid];
m13_2121 -> m13_7  [key=2, style=dotted];
m13_2123 -> m13_2124  [key=0, style=solid];
m13_2123 -> m13_7  [key=2, style=dotted];
m13_2127 -> m13_2128  [key=0, style=solid];
m13_2127 -> m13_7  [key=2, style=dotted];
m13_2129 -> m13_2130  [key=0, style=solid];
m13_2129 -> m13_7  [key=2, style=dotted];
m13_2118 -> m13_2119  [key=0, style=solid];
m13_2118 -> m13_7  [key=2, style=dotted];
m13_2119 -> m13_2120  [key=0, style=solid];
m13_2119 -> m13_8  [key=2, style=dotted];
m13_2119 -> m13_2121  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2119 -> m13_2122  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2119 -> m13_2123  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2119 -> m13_2124  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2119 -> m13_2125  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2120 -> m13_2121  [key=0, style=solid];
m13_2120 -> m13_263  [key=2, style=dotted];
m13_2122 -> m13_2123  [key=0, style=solid];
m13_2122 -> m13_263  [key=2, style=dotted];
m13_2124 -> m13_2125  [key=0, style=solid];
m13_2124 -> m13_263  [key=2, style=dotted];
m13_2125 -> m13_2126  [key=0, style=solid];
m13_2125 -> m13_2127  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_2125 -> m13_2128  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_2125 -> m13_2129  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_2126 -> m13_2127  [key=0, style=solid];
m13_2126 -> m13_263  [key=2, style=dotted];
m13_2128 -> m13_2129  [key=0, style=solid];
m13_2128 -> m13_263  [key=2, style=dotted];
m13_2130 -> m13_2110  [key=0, style=bold, color=blue];
m13_3351 -> m13_3352  [key=0, style=solid];
m13_3352 -> m13_3353  [key=0, style=solid];
m13_3352 -> m13_3347  [key=2, style=dotted];
m13_3353 -> m13_3351  [key=0, style=bold, color=blue];
m13_1397 -> m13_1398  [key=0, style=solid];
m13_1398 -> m13_1399  [key=0, style=solid];
m13_1398 -> m13_1398  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1399 -> m13_1400  [key=0, style=solid];
m13_1399 -> m13_8  [key=2, style=dotted];
m13_1400 -> m13_1401  [key=0, style=solid];
m13_1400 -> m13_7  [key=2, style=dotted];
m13_1401 -> m13_1397  [key=0, style=bold, color=blue];
m13_3032 -> m13_3033  [key=0, style=solid];
m13_3033 -> m13_3034  [key=0, style=solid];
m13_3033 -> m13_586  [key=2, style=dotted];
m13_3033 -> m13_3035  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3033 -> m13_3033  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3034 -> m13_3032  [key=0, style=bold, color=blue];
m13_1445 -> m13_1446  [key=0, style=solid];
m13_1446 -> m13_1447  [key=0, style=solid];
m13_1446 -> m13_1456  [key=2, style=dotted];
m13_1446 -> m13_1451  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m13_1447 -> m13_1448  [key=0, style=solid];
m13_1447 -> m13_274  [key=2, style=dotted];
m13_1447 -> m13_1449  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1447 -> m13_1450  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1451 -> m13_1452  [key=0, style=solid];
m13_1451 -> m13_7  [key=2, style=dotted];
m13_1451 -> m13_1451  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m13_1451 -> m13_1453  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m13_1448 -> m13_1449  [key=0, style=solid];
m13_1448 -> m13_364  [key=2, style=dotted];
m13_1449 -> m13_1450  [key=0, style=solid];
m13_1449 -> m13_7  [key=2, style=dotted];
m13_1450 -> m13_1451  [key=0, style=solid];
m13_1450 -> m13_8  [key=2, style=dotted];
m13_1452 -> m13_1453  [key=0, style=solid];
m13_1452 -> m13_7  [key=2, style=dotted];
m13_1453 -> m13_1454  [key=0, style=solid];
m13_1453 -> m13_7  [key=2, style=dotted];
m13_1453 -> m13_1453  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m13_1454 -> m13_1455  [key=0, style=solid];
m13_1454 -> m13_7  [key=2, style=dotted];
m13_1455 -> m13_1445  [key=0, style=bold, color=blue];
m13_2643 -> m13_2644  [key=0, style=solid];
m13_2644 -> m13_2645  [key=0, style=solid];
m13_2644 -> m13_586  [key=2, style=dotted];
m13_2644 -> m13_2646  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2644 -> m13_2644  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2645 -> m13_2643  [key=0, style=bold, color=blue];
m13_615 -> m13_616  [key=0, style=solid];
m13_616 -> m13_617  [key=0, style=solid];
m13_616 -> m13_620  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_616 -> m13_616  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_617 -> m13_618  [key=0, style=solid];
m13_617 -> m13_586  [key=2, style=dotted];
m13_617 -> m13_619  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_618 -> m13_615  [key=0, style=bold, color=blue];
m13_1109 -> m13_1110  [key=0, style=solid];
m13_1110 -> m13_1111  [key=0, style=solid];
m13_1110 -> m13_1118  [key=2, style=dotted];
m13_1110 -> m13_1112  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_1111 -> m13_1112  [key=0, style=solid];
m13_1112 -> m13_1113  [key=0, style=solid];
m13_1112 -> m13_6  [key=2, style=dotted];
m13_1112 -> m13_1114  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1113 -> m13_1114  [key=0, style=solid];
m13_1113 -> m13_7  [key=2, style=dotted];
m13_1114 -> m13_1115  [key=0, style=solid];
m13_1114 -> m13_8  [key=2, style=dotted];
m13_1115 -> m13_1116  [key=0, style=solid];
m13_1115 -> m13_6  [key=2, style=dotted];
m13_1116 -> m13_1117  [key=0, style=solid];
m13_1116 -> m13_7  [key=2, style=dotted];
m13_1117 -> m13_1109  [key=0, style=bold, color=blue];
m13_2951 -> m13_2952  [key=0, style=solid];
m13_2952 -> m13_2953  [key=0, style=solid];
m13_2952 -> m13_350  [key=2, style=dotted];
m13_2952 -> m13_634  [key=2, style=dotted];
m13_2953 -> m13_2954  [key=0, style=solid];
m13_2953 -> m13_185  [key=2, style=dotted];
m13_2953 -> m13_768  [key=2, style=dotted];
m13_2953 -> m13_2955  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2954 -> m13_2955  [key=0, style=solid];
m13_2954 -> m13_7  [key=2, style=dotted];
m13_2955 -> m13_2956  [key=0, style=solid];
m13_2955 -> m13_8  [key=2, style=dotted];
m13_2955 -> m13_2957  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_2955 -> m13_2958  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_2956 -> m13_2957  [key=0, style=solid];
m13_2956 -> m13_7  [key=2, style=dotted];
m13_2957 -> m13_2958  [key=0, style=solid];
m13_2957 -> m13_634  [key=2, style=dotted];
m13_2957 -> m13_7  [key=2, style=dotted];
m13_2958 -> m13_2959  [key=0, style=solid];
m13_2958 -> m13_634  [key=2, style=dotted];
m13_2958 -> m13_7  [key=2, style=dotted];
m13_2959 -> m13_2951  [key=0, style=bold, color=blue];
m13_302 -> m13_303  [key=0, style=solid];
m13_303 -> m13_304  [key=0, style=solid];
m13_303 -> m13_308  [key=2, style=dotted];
m13_303 -> m13_309  [key=2, style=dotted];
m13_304 -> m13_305  [key=0, style=solid];
m13_304 -> m13_6  [key=2, style=dotted];
m13_304 -> m13_306  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_305 -> m13_306  [key=0, style=solid];
m13_305 -> m13_305  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m13_306 -> m13_307  [key=0, style=solid];
m13_306 -> m13_7  [key=2, style=dotted];
m13_307 -> m13_302  [key=0, style=bold, color=blue];
m13_2490 -> m13_2491  [key=0, style=solid];
m13_2491 -> m13_2492  [key=0, style=solid];
m13_2491 -> m13_2501  [key=2, style=dotted];
m13_2491 -> m13_2495  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2491 -> m13_2496  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2491 -> m13_2497  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2491 -> m13_2498  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2491 -> m13_2499  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2492 -> m13_2493  [key=0, style=solid];
m13_2492 -> m13_274  [key=2, style=dotted];
m13_2492 -> m13_2494  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2495 -> m13_2496  [key=0, style=solid];
m13_2495 -> m13_7  [key=2, style=dotted];
m13_2496 -> m13_2497  [key=0, style=solid];
m13_2496 -> m13_7  [key=2, style=dotted];
m13_2497 -> m13_2498  [key=0, style=solid];
m13_2497 -> m13_7  [key=2, style=dotted];
m13_2498 -> m13_2499  [key=0, style=solid];
m13_2498 -> m13_7  [key=2, style=dotted];
m13_2499 -> m13_2500  [key=0, style=solid];
m13_2499 -> m13_7  [key=2, style=dotted];
m13_2493 -> m13_2494  [key=0, style=solid];
m13_2493 -> m13_7  [key=2, style=dotted];
m13_2494 -> m13_2495  [key=0, style=solid];
m13_2494 -> m13_8  [key=2, style=dotted];
m13_2494 -> m13_2496  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2494 -> m13_2497  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2494 -> m13_2498  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2494 -> m13_2499  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2500 -> m13_2490  [key=0, style=bold, color=blue];
m13_3292 -> m13_3293  [key=0, style=solid];
m13_3293 -> m13_3294  [key=0, style=solid];
m13_3293 -> m13_3293  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3294 -> m13_3295  [key=0, style=solid];
m13_3294 -> m13_185  [key=2, style=dotted];
m13_3294 -> m13_124  [key=2, style=dotted];
m13_3294 -> m13_863  [key=2, style=dotted];
m13_3294 -> m13_3296  [key=1, style=dashed, color=darkseagreen4, label=people];
m13_3294 -> m13_3297  [key=1, style=dashed, color=darkseagreen4, label=people];
m13_3295 -> m13_3296  [key=0, style=solid];
m13_3295 -> m13_7  [key=2, style=dotted];
m13_3296 -> m13_3297  [key=0, style=solid];
m13_3296 -> m13_3298  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3296 -> m13_3299  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3297 -> m13_3298  [key=0, style=solid];
m13_3297 -> m13_3299  [key=1, style=dashed, color=darkseagreen4, label=jane];
m13_3298 -> m13_3299  [key=0, style=solid];
m13_3298 -> m13_7  [key=2, style=dotted];
m13_3299 -> m13_3300  [key=0, style=solid];
m13_3299 -> m13_7  [key=2, style=dotted];
m13_3300 -> m13_3292  [key=0, style=bold, color=blue];
m13_1333 -> m13_1334  [key=0, style=solid];
m13_1334 -> m13_1335  [key=0, style=solid];
m13_1334 -> m13_1338  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1334 -> m13_1320  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1335 -> m13_1336  [key=0, style=solid];
m13_1335 -> m13_586  [key=2, style=dotted];
m13_1335 -> m13_1337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1336 -> m13_1333  [key=0, style=bold, color=blue];
m13_3108 -> m13_3109  [key=0, style=solid];
m13_3109 -> m13_3110  [key=0, style=solid];
m13_3109 -> m13_3109  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3110 -> m13_3111  [key=0, style=solid];
m13_3110 -> m13_8  [key=2, style=dotted];
m13_3110 -> m13_3112  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_3111 -> m13_3112  [key=0, style=solid];
m13_3111 -> m13_7  [key=2, style=dotted];
m13_3112 -> m13_3113  [key=0, style=solid];
m13_3112 -> m13_7  [key=2, style=dotted];
m13_3113 -> m13_3108  [key=0, style=bold, color=blue];
m13_2254 -> m13_2255  [key=0, style=solid];
m13_2255 -> m13_2256  [key=0, style=solid];
m13_2256 -> m13_2254  [key=0, style=bold, color=blue];
m13_1375 -> m13_1376  [key=0, style=solid];
m13_1376 -> m13_1377  [key=0, style=solid];
m13_1376 -> m13_2251  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1377 -> m13_1378  [key=0, style=solid];
m13_1377 -> m13_8  [key=2, style=dotted];
m13_1378 -> m13_1379  [key=0, style=solid];
m13_1378 -> m13_1381  [key=0, style=solid];
m13_1378 -> m13_995  [key=2, style=dotted];
m13_1379 -> m13_1380  [key=0, style=solid];
m13_1380 -> m13_1381  [key=0, style=solid];
m13_1380 -> m13_996  [key=2, style=dotted];
m13_1380 -> m13_265  [key=2, style=dotted];
m13_1381 -> m13_1375  [key=0, style=bold, color=blue];
m13_126 -> m13_127  [key=0, style=solid];
m13_127 -> m13_128  [key=0, style=solid];
m13_127 -> m13_185  [key=2, style=dotted];
m13_127 -> m13_129  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_130  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_131  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_132  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_133  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_134  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_135  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_136  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_138  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_139  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_140  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_141  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_142  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_143  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_144  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_145  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_146  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_147  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_148  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_149  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_150  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_151  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_152  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_153  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_154  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_155  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_156  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_157  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_158  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_159  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_160  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_161  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_162  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_163  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_164  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_165  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_166  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_167  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_168  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_169  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_170  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_171  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_173  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_174  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_175  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_176  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_178  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_179  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_180  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_181  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_182  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_127 -> m13_183  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_117  [key=2, style=dotted];
m13_128 -> m13_130  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m13_129 -> m13_130  [key=0, style=solid];
m13_130 -> m13_131  [key=0, style=solid];
m13_130 -> m13_7  [key=2, style=dotted];
m13_131 -> m13_132  [key=0, style=solid];
m13_132 -> m13_133  [key=0, style=solid];
m13_132 -> m13_7  [key=2, style=dotted];
m13_133 -> m13_134  [key=0, style=solid];
m13_134 -> m13_135  [key=0, style=solid];
m13_134 -> m13_7  [key=2, style=dotted];
m13_135 -> m13_136  [key=0, style=solid];
m13_135 -> m13_118  [key=2, style=dotted];
m13_136 -> m13_137  [key=0, style=solid];
m13_136 -> m13_118  [key=2, style=dotted];
m13_136 -> m13_7  [key=2, style=dotted];
m13_138 -> m13_139  [key=0, style=solid];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_7  [key=2, style=dotted];
m13_140 -> m13_141  [key=0, style=solid];
m13_140 -> m13_120  [key=2, style=dotted];
m13_140 -> m13_186  [key=2, style=dotted];
m13_141 -> m13_142  [key=0, style=solid];
m13_141 -> m13_7  [key=2, style=dotted];
m13_142 -> m13_143  [key=0, style=solid];
m13_142 -> m13_122  [key=2, style=dotted];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_123  [key=2, style=dotted];
m13_143 -> m13_7  [key=2, style=dotted];
m13_144 -> m13_145  [key=0, style=solid];
m13_145 -> m13_146  [key=0, style=solid];
m13_145 -> m13_7  [key=2, style=dotted];
m13_146 -> m13_147  [key=0, style=solid];
m13_147 -> m13_148  [key=0, style=solid];
m13_147 -> m13_7  [key=2, style=dotted];
m13_148 -> m13_149  [key=0, style=solid];
m13_149 -> m13_150  [key=0, style=solid];
m13_149 -> m13_7  [key=2, style=dotted];
m13_150 -> m13_151  [key=0, style=solid];
m13_151 -> m13_152  [key=0, style=solid];
m13_151 -> m13_7  [key=2, style=dotted];
m13_152 -> m13_153  [key=0, style=solid];
m13_153 -> m13_154  [key=0, style=solid];
m13_153 -> m13_7  [key=2, style=dotted];
m13_154 -> m13_155  [key=0, style=solid];
m13_155 -> m13_156  [key=0, style=solid];
m13_155 -> m13_7  [key=2, style=dotted];
m13_156 -> m13_157  [key=0, style=solid];
m13_157 -> m13_158  [key=0, style=solid];
m13_157 -> m13_7  [key=2, style=dotted];
m13_158 -> m13_159  [key=0, style=solid];
m13_159 -> m13_160  [key=0, style=solid];
m13_159 -> m13_7  [key=2, style=dotted];
m13_160 -> m13_161  [key=0, style=solid];
m13_161 -> m13_162  [key=0, style=solid];
m13_161 -> m13_7  [key=2, style=dotted];
m13_162 -> m13_163  [key=0, style=solid];
m13_163 -> m13_164  [key=0, style=solid];
m13_163 -> m13_7  [key=2, style=dotted];
m13_164 -> m13_165  [key=0, style=solid];
m13_165 -> m13_166  [key=0, style=solid];
m13_165 -> m13_7  [key=2, style=dotted];
m13_166 -> m13_167  [key=0, style=solid];
m13_167 -> m13_168  [key=0, style=solid];
m13_167 -> m13_7  [key=2, style=dotted];
m13_168 -> m13_169  [key=0, style=solid];
m13_169 -> m13_170  [key=0, style=solid];
m13_169 -> m13_7  [key=2, style=dotted];
m13_170 -> m13_171  [key=0, style=solid];
m13_171 -> m13_172  [key=0, style=solid];
m13_171 -> m13_7  [key=2, style=dotted];
m13_173 -> m13_174  [key=0, style=solid];
m13_174 -> m13_175  [key=0, style=solid];
m13_174 -> m13_7  [key=2, style=dotted];
m13_175 -> m13_176  [key=0, style=solid];
m13_176 -> m13_177  [key=0, style=solid];
m13_176 -> m13_7  [key=2, style=dotted];
m13_178 -> m13_179  [key=0, style=solid];
m13_179 -> m13_180  [key=0, style=solid];
m13_179 -> m13_7  [key=2, style=dotted];
m13_180 -> m13_181  [key=0, style=solid];
m13_181 -> m13_182  [key=0, style=solid];
m13_181 -> m13_7  [key=2, style=dotted];
m13_182 -> m13_183  [key=0, style=solid];
m13_183 -> m13_184  [key=0, style=solid];
m13_183 -> m13_7  [key=2, style=dotted];
m13_137 -> m13_138  [key=0, style=solid];
m13_137 -> m13_119  [key=2, style=dotted];
m13_137 -> m13_139  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m13_172 -> m13_173  [key=0, style=solid];
m13_172 -> m13_124  [key=2, style=dotted];
m13_172 -> m13_174  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_177 -> m13_178  [key=0, style=solid];
m13_177 -> m13_125  [key=2, style=dotted];
m13_177 -> m13_179  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m13_184 -> m13_126  [key=0, style=bold, color=blue];
m13_351 -> m13_365  [key=0, style=solid];
m13_351 -> m13_366  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_365 -> m13_366  [key=0, style=solid];
m13_366 -> m13_367  [key=0, style=solid];
m13_367 -> m13_351  [key=0, style=bold, color=blue];
m13_2187 -> m13_2188  [key=0, style=solid];
m13_2188 -> m13_2189  [key=0, style=solid];
m13_2188 -> m13_2179  [key=2, style=dotted];
m13_2188 -> m13_2190  [key=1, style=dashed, color=darkseagreen4, label=derived];
m13_2189 -> m13_2190  [key=0, style=solid];
m13_2189 -> m13_185  [key=2, style=dotted];
m13_2189 -> m13_2191  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_2190 -> m13_2191  [key=0, style=solid];
m13_2190 -> m13_768  [key=2, style=dotted];
m13_2191 -> m13_2192  [key=0, style=solid];
m13_2191 -> m13_863  [key=2, style=dotted];
m13_2191 -> m13_2193  [key=1, style=dashed, color=darkseagreen4, label=meh];
m13_2192 -> m13_2193  [key=0, style=solid];
m13_2192 -> m13_7  [key=2, style=dotted];
m13_2193 -> m13_2194  [key=0, style=solid];
m13_2193 -> m13_7  [key=2, style=dotted];
m13_2194 -> m13_2187  [key=0, style=bold, color=blue];
m13_1361 -> m13_1362  [key=0, style=solid];
m13_1362 -> m13_1363  [key=0, style=solid];
m13_1362 -> m13_1366  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1362 -> m13_1362  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1363 -> m13_1364  [key=0, style=solid];
m13_1363 -> m13_586  [key=2, style=dotted];
m13_1363 -> m13_1365  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1364 -> m13_1361  [key=0, style=bold, color=blue];
m13_29 -> m13_30  [key=0, style=solid];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_37  [key=2, style=dotted];
m13_30 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_30 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_30 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_6  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_7  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_7  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_7  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_8  [key=2, style=dotted];
m13_32 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_32 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_36 -> m13_29  [key=0, style=bold, color=blue];
m13_2162 -> m13_2163  [key=0, style=solid];
m13_2163 -> m13_2164  [key=0, style=solid];
m13_2163 -> m13_2165  [key=2, style=dotted];
m13_2164 -> m13_2162  [key=0, style=bold, color=blue];
m13_3357 -> m13_3358  [key=0, style=solid];
m13_3358 -> m13_3359  [key=0, style=solid];
m13_3358 -> m13_3347  [key=2, style=dotted];
m13_3359 -> m13_3357  [key=0, style=bold, color=blue];
m13_3082 -> m13_3083  [key=0, style=solid];
m13_3083 -> m13_3084  [key=0, style=solid];
m13_3084 -> m13_3082  [key=0, style=bold, color=blue];
m13_2396 -> m13_2397  [key=0, style=solid];
m13_2397 -> m13_2398  [key=0, style=solid];
m13_2398 -> m13_2399  [key=0, style=solid];
m13_2398 -> m13_350  [key=2, style=dotted];
m13_2399 -> m13_2396  [key=0, style=bold, color=blue];
m13_2154 -> m13_2155  [key=0, style=solid];
m13_2155 -> m13_2156  [key=0, style=solid];
m13_2155 -> m13_2155  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2156 -> m13_2157  [key=0, style=solid];
m13_2156 -> m13_2053  [key=2, style=dotted];
m13_2156 -> m13_722  [key=2, style=dotted];
m13_2156 -> m13_2159  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2157 -> m13_2158  [key=0, style=solid];
m13_2159 -> m13_2160  [key=0, style=solid];
m13_2159 -> m13_2086  [key=2, style=dotted];
m13_2158 -> m13_2159  [key=0, style=solid];
m13_2158 -> m13_116  [key=2, style=dotted];
m13_2160 -> m13_2161  [key=0, style=solid];
m13_2160 -> m13_7  [key=2, style=dotted];
m13_2161 -> m13_2154  [key=0, style=bold, color=blue];
m13_2447 -> m13_2448  [key=0, style=solid];
m13_2448 -> m13_2449  [key=0, style=solid];
m13_2449 -> m13_2447  [key=0, style=bold, color=blue];
m13_790 -> m13_791  [key=0, style=solid];
m13_791 -> m13_792  [key=0, style=solid];
m13_791 -> m13_797  [key=2, style=dotted];
m13_791 -> m13_795  [key=1, style=dashed, color=darkseagreen4, label=ts];
m13_792 -> m13_793  [key=0, style=solid];
m13_792 -> m13_798  [key=2, style=dotted];
m13_792 -> m13_274  [key=2, style=dotted];
m13_792 -> m13_794  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_795 -> m13_796  [key=0, style=solid];
m13_795 -> m13_7  [key=2, style=dotted];
m13_793 -> m13_794  [key=0, style=solid];
m13_793 -> m13_7  [key=2, style=dotted];
m13_794 -> m13_795  [key=0, style=solid];
m13_794 -> m13_8  [key=2, style=dotted];
m13_796 -> m13_790  [key=0, style=bold, color=blue];
m13_3114 -> m13_3115  [key=0, style=solid];
m13_3115 -> m13_3116  [key=0, style=solid];
m13_3115 -> m13_3082  [key=2, style=dotted];
m13_3116 -> m13_3117  [key=0, style=solid];
m13_3116 -> m13_6  [key=2, style=dotted];
m13_3116 -> m13_3119  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3116 -> m13_3125  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3117 -> m13_3118  [key=0, style=solid];
m13_3117 -> m13_7  [key=2, style=dotted];
m13_3119 -> m13_3120  [key=0, style=solid];
m13_3119 -> m13_3119  [key=3, color=darkorchid, style=bold, label="Local variable System.Action doStuff"];
m13_3118 -> m13_3119  [key=0, style=solid];
m13_3118 -> m13_2747  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<int> obj"];
m13_3120 -> m13_3121  [key=0, style=solid];
m13_3120 -> m13_3123  [key=2, style=dotted];
m13_3121 -> m13_3122  [key=0, style=solid];
m13_3121 -> m13_7  [key=2, style=dotted];
m13_3122 -> m13_3114  [key=0, style=bold, color=blue];
m13_1682 -> m13_1683  [key=0, style=solid];
m13_1682 -> m13_1684  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1685  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1686  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1687  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1688  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1689  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1690  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1691  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1692  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1693  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1694  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1695  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1696  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1697  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1698  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1699  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1682 -> m13_1700  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_1683 -> m13_1684  [key=0, style=solid];
m13_1683 -> m13_1702  [key=2, style=dotted];
m13_1684 -> m13_1685  [key=0, style=solid];
m13_1684 -> m13_1703  [key=2, style=dotted];
m13_1685 -> m13_1686  [key=0, style=solid];
m13_1685 -> m13_1704  [key=2, style=dotted];
m13_1686 -> m13_1687  [key=0, style=solid];
m13_1686 -> m13_1704  [key=2, style=dotted];
m13_1687 -> m13_1688  [key=0, style=solid];
m13_1687 -> m13_1704  [key=2, style=dotted];
m13_1688 -> m13_1689  [key=0, style=solid];
m13_1688 -> m13_1704  [key=2, style=dotted];
m13_1689 -> m13_1690  [key=0, style=solid];
m13_1689 -> m13_1705  [key=2, style=dotted];
m13_1690 -> m13_1691  [key=0, style=solid];
m13_1690 -> m13_1706  [key=2, style=dotted];
m13_1691 -> m13_1692  [key=0, style=solid];
m13_1691 -> m13_1707  [key=2, style=dotted];
m13_1692 -> m13_1693  [key=0, style=solid];
m13_1692 -> m13_1708  [key=2, style=dotted];
m13_1693 -> m13_1694  [key=0, style=solid];
m13_1693 -> m13_1709  [key=2, style=dotted];
m13_1694 -> m13_1695  [key=0, style=solid];
m13_1694 -> m13_1710  [key=2, style=dotted];
m13_1695 -> m13_1696  [key=0, style=solid];
m13_1695 -> m13_1711  [key=2, style=dotted];
m13_1696 -> m13_1697  [key=0, style=solid];
m13_1696 -> m13_1712  [key=2, style=dotted];
m13_1697 -> m13_1698  [key=0, style=solid];
m13_1697 -> m13_1713  [key=2, style=dotted];
m13_1698 -> m13_1699  [key=0, style=solid];
m13_1698 -> m13_1714  [key=2, style=dotted];
m13_1699 -> m13_1700  [key=0, style=solid];
m13_1699 -> m13_1715  [key=2, style=dotted];
m13_1700 -> m13_1701  [key=0, style=solid];
m13_1700 -> m13_1716  [key=2, style=dotted];
m13_1701 -> m13_1682  [key=0, style=bold, color=blue];
m13_248 -> m13_249  [key=0, style=solid];
m13_249 -> m13_250  [key=0, style=solid];
m13_249 -> m13_256  [key=2, style=dotted];
m13_249 -> m13_253  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m13_250 -> m13_251  [key=0, style=solid];
m13_250 -> m13_6  [key=2, style=dotted];
m13_250 -> m13_252  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_253 -> m13_254  [key=0, style=solid];
m13_253 -> m13_7  [key=2, style=dotted];
m13_253 -> m13_253  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m13_251 -> m13_252  [key=0, style=solid];
m13_251 -> m13_7  [key=2, style=dotted];
m13_252 -> m13_253  [key=0, style=solid];
m13_252 -> m13_8  [key=2, style=dotted];
m13_254 -> m13_255  [key=0, style=solid];
m13_254 -> m13_7  [key=2, style=dotted];
m13_254 -> m13_254  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m13_255 -> m13_248  [key=0, style=bold, color=blue];
m13_2676 -> m13_2677  [key=0, style=solid];
m13_2677 -> m13_2678  [key=0, style=solid];
m13_2677 -> m13_185  [key=2, style=dotted];
m13_2677 -> m13_354  [key=2, style=dotted];
m13_2678 -> m13_2679  [key=0, style=solid];
m13_2678 -> m13_2053  [key=2, style=dotted];
m13_2678 -> m13_722  [key=2, style=dotted];
m13_2678 -> m13_2086  [key=2, style=dotted];
m13_2678 -> m13_2680  [key=1, style=dashed, color=darkseagreen4, label=dict];
m13_2679 -> m13_2680  [key=0, style=solid];
m13_2679 -> m13_7  [key=2, style=dotted];
m13_2680 -> m13_2681  [key=0, style=solid];
m13_2680 -> m13_7  [key=2, style=dotted];
m13_2681 -> m13_2676  [key=0, style=bold, color=blue];
m13_2425 -> m13_2426  [key=0, style=solid];
m13_2426 -> m13_2427  [key=0, style=solid];
m13_2426 -> m13_1922  [key=2, style=dotted];
m13_2427 -> m13_2425  [key=0, style=bold, color=blue];
m13_2960 -> m13_2961  [key=0, style=solid];
m13_2961 -> m13_2962  [key=0, style=solid];
m13_2961 -> m13_116  [key=2, style=dotted];
m13_2961 -> m13_2053  [key=2, style=dotted];
m13_2961 -> m13_722  [key=2, style=dotted];
m13_2961 -> m13_2563  [key=2, style=dotted];
m13_2962 -> m13_2963  [key=0, style=solid];
m13_2962 -> m13_7  [key=2, style=dotted];
m13_2963 -> m13_2960  [key=0, style=bold, color=blue];
m13_3072 -> m13_3073  [key=0, style=solid];
m13_3073 -> m13_3074  [key=0, style=solid];
m13_3073 -> m13_8  [key=2, style=dotted];
m13_3074 -> m13_3075  [key=0, style=solid];
m13_3074 -> m13_7  [key=2, style=dotted];
m13_3074 -> m13_3074  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_3075 -> m13_3076  [key=0, style=solid];
m13_3075 -> m13_7  [key=2, style=dotted];
m13_3075 -> m13_3075  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_3076 -> m13_3072  [key=0, style=bold, color=blue];
m13_1609 -> m13_1610  [key=0, style=solid];
m13_1610 -> m13_1609  [key=0, style=bold, color=blue];
m13_484 -> m13_485  [key=0, style=solid];
m13_485 -> m13_486  [key=0, style=solid];
m13_485 -> m13_485  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m13_486 -> m13_487  [key=0, style=solid];
m13_486 -> m13_466  [key=2, style=dotted];
m13_486 -> m13_488  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_486 -> m13_489  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_487 -> m13_488  [key=0, style=solid];
m13_487 -> m13_7  [key=2, style=dotted];
m13_488 -> m13_489  [key=0, style=solid];
m13_488 -> m13_491  [key=2, style=dotted];
m13_488 -> m13_7  [key=2, style=dotted];
m13_489 -> m13_490  [key=0, style=solid];
m13_489 -> m13_7  [key=2, style=dotted];
m13_490 -> m13_484  [key=0, style=bold, color=blue];
m13_1048 -> m13_1049  [key=0, style=solid];
m13_1049 -> m13_1050  [key=0, style=solid];
m13_1049 -> m13_1052  [key=2, style=dotted];
m13_1049 -> m13_634  [key=2, style=dotted];
m13_1050 -> m13_1051  [key=0, style=solid];
m13_1051 -> m13_1048  [key=0, style=bold, color=blue];
m13_1102 -> m13_1103  [key=0, style=solid];
m13_1103 -> m13_1104  [key=0, style=solid];
m13_1103 -> m13_1091  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1104 -> m13_1105  [key=0, style=solid];
m13_1104 -> m13_8  [key=2, style=dotted];
m13_1105 -> m13_1106  [key=0, style=solid];
m13_1105 -> m13_1108  [key=0, style=solid];
m13_1105 -> m13_995  [key=2, style=dotted];
m13_1106 -> m13_1107  [key=0, style=solid];
m13_1107 -> m13_1108  [key=0, style=solid];
m13_1107 -> m13_996  [key=2, style=dotted];
m13_1107 -> m13_265  [key=2, style=dotted];
m13_1108 -> m13_1102  [key=0, style=bold, color=blue];
m13_1005 -> m13_1006  [key=0, style=solid];
m13_1006 -> m13_1007  [key=0, style=solid];
m13_1006 -> m13_1006  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1007 -> m13_1008  [key=0, style=solid];
m13_1007 -> m13_8  [key=2, style=dotted];
m13_1008 -> m13_1009  [key=0, style=solid];
m13_1008 -> m13_1011  [key=0, style=solid];
m13_1008 -> m13_995  [key=2, style=dotted];
m13_1009 -> m13_1010  [key=0, style=solid];
m13_1010 -> m13_1011  [key=0, style=solid];
m13_1010 -> m13_996  [key=2, style=dotted];
m13_1010 -> m13_265  [key=2, style=dotted];
m13_1011 -> m13_1005  [key=0, style=bold, color=blue];
m13_2243 -> m13_2244  [key=0, style=solid];
m13_2244 -> m13_2245  [key=0, style=solid];
m13_2245 -> m13_2243  [key=0, style=bold, color=blue];
m13_997 -> m13_998  [key=0, style=solid];
m13_998 -> m13_999  [key=0, style=solid];
m13_998 -> m13_586  [key=2, style=dotted];
m13_998 -> m13_1000  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_999 -> m13_997  [key=0, style=bold, color=blue];
m13_3065 -> m13_3066  [key=0, style=solid];
m13_3066 -> m13_3067  [key=0, style=solid];
m13_3067 -> m13_3065  [key=0, style=bold, color=blue];
m13_2198 -> m13_2199  [key=0, style=solid];
m13_2199 -> m13_2200  [key=0, style=solid];
m13_2199 -> m13_1737  [key=2, style=dotted];
m13_2200 -> m13_2198  [key=0, style=bold, color=blue];
m13_3387 -> m13_3388  [key=0, style=solid];
m13_3388 -> m13_3389  [key=0, style=solid];
m13_3388 -> m13_3347  [key=2, style=dotted];
m13_3389 -> m13_3387  [key=0, style=bold, color=blue];
m13_2790 -> m13_2791  [key=0, style=solid];
m13_2791 -> m13_2792  [key=0, style=solid];
m13_2791 -> m13_2798  [key=2, style=dotted];
m13_2791 -> m13_2793  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2791 -> m13_2794  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2791 -> m13_2796  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2792 -> m13_2793  [key=0, style=solid];
m13_2793 -> m13_2794  [key=0, style=solid];
m13_2794 -> m13_2795  [key=0, style=solid];
m13_2794 -> m13_6  [key=2, style=dotted];
m13_2796 -> m13_2797  [key=0, style=solid];
m13_2796 -> m13_7  [key=2, style=dotted];
m13_2795 -> m13_2796  [key=0, style=solid];
m13_2795 -> m13_8  [key=2, style=dotted];
m13_2797 -> m13_2790  [key=0, style=bold, color=blue];
m13_1222 -> m13_1223  [key=0, style=solid];
m13_1223 -> m13_1224  [key=0, style=solid];
m13_1223 -> m13_1223  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1224 -> m13_1225  [key=0, style=solid];
m13_1224 -> m13_466  [key=2, style=dotted];
m13_1224 -> m13_1226  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1224 -> m13_1227  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1224 -> m13_1228  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1224 -> m13_1229  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1224 -> m13_1230  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1225 -> m13_1226  [key=0, style=solid];
m13_1225 -> m13_7  [key=2, style=dotted];
m13_1226 -> m13_1227  [key=0, style=solid];
m13_1226 -> m13_634  [key=2, style=dotted];
m13_1226 -> m13_7  [key=2, style=dotted];
m13_1227 -> m13_1228  [key=0, style=solid];
m13_1227 -> m13_7  [key=2, style=dotted];
m13_1228 -> m13_1229  [key=0, style=solid];
m13_1228 -> m13_7  [key=2, style=dotted];
m13_1229 -> m13_1230  [key=0, style=solid];
m13_1229 -> m13_7  [key=2, style=dotted];
m13_1230 -> m13_1231  [key=0, style=solid];
m13_1230 -> m13_7  [key=2, style=dotted];
m13_1231 -> m13_1222  [key=0, style=bold, color=blue];
m13_457 -> m13_458  [key=0, style=solid];
m13_458 -> m13_459  [key=0, style=solid];
m13_458 -> m13_465  [key=2, style=dotted];
m13_458 -> m13_461  [key=1, style=dashed, color=darkseagreen4, label=store];
m13_458 -> m13_462  [key=1, style=dashed, color=darkseagreen4, label=store];
m13_459 -> m13_460  [key=0, style=solid];
m13_459 -> m13_6  [key=2, style=dotted];
m13_459 -> m13_463  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m13_461 -> m13_462  [key=0, style=solid];
m13_461 -> m13_7  [key=2, style=dotted];
m13_462 -> m13_463  [key=0, style=solid];
m13_462 -> m13_7  [key=2, style=dotted];
m13_460 -> m13_461  [key=0, style=solid];
m13_460 -> m13_466  [key=2, style=dotted];
m13_460 -> m13_462  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m13_463 -> m13_464  [key=0, style=solid];
m13_463 -> m13_364  [key=2, style=dotted];
m13_464 -> m13_457  [key=0, style=bold, color=blue];
m13_3202 -> m13_3203  [key=0, style=solid];
m13_3203 -> m13_3202  [key=0, style=bold, color=blue];
m13_2989 -> m13_2990  [key=0, style=solid];
m13_2990 -> m13_2991  [key=0, style=solid];
m13_2990 -> m13_2994  [key=2, style=dotted];
m13_2990 -> m13_633  [key=2, style=dotted];
m13_2990 -> m13_2995  [key=2, style=dotted];
m13_2991 -> m13_2992  [key=0, style=solid];
m13_2991 -> m13_274  [key=2, style=dotted];
m13_2992 -> m13_2993  [key=0, style=solid];
m13_2992 -> m13_7  [key=2, style=dotted];
m13_2993 -> m13_2989  [key=0, style=bold, color=blue];
m13_2275 -> m13_2276  [key=0, style=solid];
m13_2276 -> m13_2277  [key=0, style=solid];
m13_2276 -> m13_8  [key=2, style=dotted];
m13_2276 -> m13_2278  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2276 -> m13_2279  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2277 -> m13_2278  [key=0, style=solid];
m13_2277 -> m13_7  [key=2, style=dotted];
m13_2278 -> m13_2279  [key=0, style=solid];
m13_2278 -> m13_7  [key=2, style=dotted];
m13_2279 -> m13_2280  [key=0, style=solid];
m13_2279 -> m13_7  [key=2, style=dotted];
m13_2280 -> m13_2275  [key=0, style=bold, color=blue];
m13_723 -> m13_724  [key=0, style=solid];
m13_724 -> m13_725  [key=0, style=solid];
m13_724 -> m13_739  [key=2, style=dotted];
m13_724 -> m13_726  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_724 -> m13_727  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_724 -> m13_728  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_724 -> m13_729  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_725 -> m13_726  [key=0, style=solid];
m13_726 -> m13_727  [key=0, style=solid];
m13_726 -> m13_186  [key=2, style=dotted];
m13_727 -> m13_728  [key=0, style=solid];
m13_727 -> m13_186  [key=2, style=dotted];
m13_728 -> m13_729  [key=0, style=solid];
m13_728 -> m13_186  [key=2, style=dotted];
m13_729 -> m13_730  [key=0, style=solid];
m13_729 -> m13_6  [key=2, style=dotted];
m13_730 -> m13_731  [key=0, style=solid];
m13_730 -> m13_8  [key=2, style=dotted];
m13_730 -> m13_732  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_730 -> m13_733  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_730 -> m13_734  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_730 -> m13_735  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_730 -> m13_736  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_730 -> m13_737  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_731 -> m13_732  [key=0, style=solid];
m13_731 -> m13_7  [key=2, style=dotted];
m13_732 -> m13_733  [key=0, style=solid];
m13_732 -> m13_7  [key=2, style=dotted];
m13_733 -> m13_734  [key=0, style=solid];
m13_733 -> m13_7  [key=2, style=dotted];
m13_734 -> m13_735  [key=0, style=solid];
m13_734 -> m13_7  [key=2, style=dotted];
m13_735 -> m13_736  [key=0, style=solid];
m13_735 -> m13_7  [key=2, style=dotted];
m13_736 -> m13_737  [key=0, style=solid];
m13_736 -> m13_7  [key=2, style=dotted];
m13_737 -> m13_738  [key=0, style=solid];
m13_737 -> m13_7  [key=2, style=dotted];
m13_738 -> m13_723  [key=0, style=bold, color=blue];
m13_1771 -> m13_1772  [key=0, style=solid];
m13_1772 -> m13_1773  [key=0, style=solid];
m13_1772 -> m13_1052  [key=2, style=dotted];
m13_1772 -> m13_1774  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_1772 -> m13_1775  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_1772 -> m13_1776  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_1772 -> m13_1780  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_1773 -> m13_1774  [key=0, style=solid];
m13_1773 -> m13_634  [key=2, style=dotted];
m13_1774 -> m13_1775  [key=0, style=solid];
m13_1775 -> m13_1776  [key=0, style=solid];
m13_1776 -> m13_1777  [key=0, style=solid];
m13_1780 -> m13_1781  [key=0, style=solid];
m13_1780 -> m13_1675  [key=2, style=dotted];
m13_1777 -> m13_1778  [key=0, style=solid];
m13_1777 -> m13_643  [key=2, style=dotted];
m13_1777 -> m13_644  [key=2, style=dotted];
m13_1777 -> m13_1780  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_1777 -> m13_1786  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_1778 -> m13_1779  [key=0, style=solid];
m13_1786 -> m13_1787  [key=0, style=solid];
m13_1786 -> m13_7  [key=2, style=dotted];
m13_1779 -> m13_1780  [key=0, style=solid];
m13_1779 -> m13_1782  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m13_1782 -> m13_1783  [key=0, style=solid];
m13_1782 -> m13_7  [key=2, style=dotted];
m13_1781 -> m13_1782  [key=0, style=solid];
m13_1781 -> m13_185  [key=2, style=dotted];
m13_1781 -> m13_768  [key=2, style=dotted];
m13_1781 -> m13_1783  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1783 -> m13_1784  [key=0, style=solid];
m13_1783 -> m13_8  [key=2, style=dotted];
m13_1783 -> m13_1785  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1783 -> m13_1786  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1783 -> m13_1787  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1783 -> m13_1788  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1783 -> m13_1789  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_1784 -> m13_1785  [key=0, style=solid];
m13_1784 -> m13_7  [key=2, style=dotted];
m13_1785 -> m13_1786  [key=0, style=solid];
m13_1785 -> m13_7  [key=2, style=dotted];
m13_1787 -> m13_1788  [key=0, style=solid];
m13_1787 -> m13_7  [key=2, style=dotted];
m13_1788 -> m13_1789  [key=0, style=solid];
m13_1788 -> m13_7  [key=2, style=dotted];
m13_1789 -> m13_1790  [key=0, style=solid];
m13_1789 -> m13_7  [key=2, style=dotted];
m13_1790 -> m13_1771  [key=0, style=bold, color=blue];
m13_3148 -> m13_3149  [key=0, style=solid];
m13_3149 -> m13_3150  [key=0, style=solid];
m13_3149 -> m13_3153  [key=2, style=dotted];
m13_3150 -> m13_3151  [key=0, style=solid];
m13_3150 -> m13_185  [key=2, style=dotted];
m13_3150 -> m13_768  [key=2, style=dotted];
m13_3151 -> m13_3152  [key=0, style=solid];
m13_3151 -> m13_7  [key=2, style=dotted];
m13_3152 -> m13_3148  [key=0, style=bold, color=blue];
m13_873 -> m13_874  [key=0, style=solid];
m13_874 -> m13_875  [key=0, style=solid];
m13_874 -> m13_843  [key=2, style=dotted];
m13_874 -> m13_879  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_874 -> m13_880  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_875 -> m13_876  [key=0, style=solid];
m13_875 -> m13_844  [key=2, style=dotted];
m13_879 -> m13_880  [key=0, style=solid];
m13_879 -> m13_7  [key=2, style=dotted];
m13_880 -> m13_881  [key=0, style=solid];
m13_880 -> m13_7  [key=2, style=dotted];
m13_876 -> m13_877  [key=0, style=solid];
m13_876 -> m13_882  [key=2, style=dotted];
m13_876 -> m13_832  [key=2, style=dotted];
m13_876 -> m13_878  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_877 -> m13_878  [key=0, style=solid];
m13_877 -> m13_7  [key=2, style=dotted];
m13_878 -> m13_879  [key=0, style=solid];
m13_878 -> m13_882  [key=2, style=dotted];
m13_878 -> m13_833  [key=2, style=dotted];
m13_878 -> m13_880  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_881 -> m13_873  [key=0, style=bold, color=blue];
m13_2657 -> m13_2658  [key=0, style=solid];
m13_2658 -> m13_2659  [key=0, style=solid];
m13_2658 -> m13_2658  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2659 -> m13_2660  [key=0, style=solid];
m13_2659 -> m13_8  [key=2, style=dotted];
m13_2660 -> m13_2661  [key=0, style=solid];
m13_2660 -> m13_7  [key=2, style=dotted];
m13_2661 -> m13_2662  [key=0, style=solid];
m13_2662 -> m13_2663  [key=0, style=solid];
m13_2662 -> m13_8  [key=2, style=dotted];
m13_2663 -> m13_2664  [key=0, style=solid];
m13_2663 -> m13_782  [key=2, style=dotted];
m13_2663 -> m13_7  [key=2, style=dotted];
m13_2664 -> m13_2657  [key=0, style=bold, color=blue];
m13_1262 -> m13_1263  [key=0, style=solid];
m13_1263 -> m13_1264  [key=0, style=solid];
m13_1263 -> m13_1263  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1264 -> m13_1265  [key=0, style=solid];
m13_1264 -> m13_8  [key=2, style=dotted];
m13_1264 -> m13_1266  [key=1, style=dashed, color=darkseagreen4, label=content];
m13_1264 -> m13_1267  [key=1, style=dashed, color=darkseagreen4, label=content];
m13_1264 -> m13_1268  [key=1, style=dashed, color=darkseagreen4, label=content];
m13_1265 -> m13_1266  [key=0, style=solid];
m13_1265 -> m13_7  [key=2, style=dotted];
m13_1266 -> m13_1267  [key=0, style=solid];
m13_1266 -> m13_7  [key=2, style=dotted];
m13_1267 -> m13_1268  [key=0, style=solid];
m13_1267 -> m13_7  [key=2, style=dotted];
m13_1268 -> m13_1269  [key=0, style=solid];
m13_1268 -> m13_7  [key=2, style=dotted];
m13_1269 -> m13_1262  [key=0, style=bold, color=blue];
m13_3216 -> m13_3217  [key=0, style=solid];
m13_451 -> m13_452  [key=0, style=solid];
m13_454 -> m13_455  [key=0, style=solid];
m13_452 -> m13_453  [key=0, style=solid];
m13_453 -> m13_451  [key=0, style=bold, color=blue];
m13_455 -> m13_456  [key=0, style=solid];
m13_456 -> m13_454  [key=0, style=bold, color=blue];
m13_587 -> m13_588  [key=0, style=solid];
m13_588 -> m13_589  [key=0, style=solid];
m13_588 -> m13_590  [key=2, style=dotted];
m13_588 -> m13_6  [key=2, style=dotted];
m13_589 -> m13_587  [key=0, style=bold, color=blue];
m13_620 -> m13_621  [key=0, style=solid];
m13_620 -> m13_8  [key=2, style=dotted];
m13_619 -> m13_620  [key=0, style=solid];
m13_621 -> m13_619  [key=0, style=bold, color=blue];
m13_905 -> m13_906  [key=0, style=solid];
m13_906 -> m13_907  [key=0, style=solid];
m13_906 -> m13_909  [key=2, style=dotted];
m13_907 -> m13_908  [key=0, style=solid];
m13_907 -> m13_6  [key=2, style=dotted];
m13_908 -> m13_905  [key=0, style=bold, color=blue];
m13_1000 -> m13_1001  [key=0, style=solid];
m13_1001 -> m13_1002  [key=0, style=solid];
m13_1001 -> m13_980  [key=2, style=dotted];
m13_1001 -> m13_634  [key=2, style=dotted];
m13_1002 -> m13_1003  [key=0, style=solid];
m13_1002 -> m13_6  [key=2, style=dotted];
m13_1003 -> m13_1004  [key=0, style=solid];
m13_1003 -> m13_364  [key=2, style=dotted];
m13_1004 -> m13_1000  [key=0, style=bold, color=blue];
m13_1046 -> m13_1047  [key=0, style=solid];
m13_1046 -> m13_466  [key=2, style=dotted];
m13_1045 -> m13_1046  [key=0, style=solid];
m13_1047 -> m13_1045  [key=0, style=bold, color=blue];
m13_1152 -> m13_1153  [key=0, style=solid];
m13_1153 -> m13_1154  [key=0, style=solid];
m13_1153 -> m13_1139  [key=2, style=dotted];
m13_1153 -> m13_1155  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1154 -> m13_1155  [key=0, style=solid];
m13_1155 -> m13_1156  [key=0, style=solid];
m13_1155 -> m13_185  [key=2, style=dotted];
m13_1155 -> m13_768  [key=2, style=dotted];
m13_1156 -> m13_1152  [key=0, style=bold, color=blue];
m13_1297 -> m13_1298  [key=0, style=solid];
m13_1297 -> m13_8  [key=2, style=dotted];
m13_1296 -> m13_1297  [key=0, style=solid];
m13_1298 -> m13_1296  [key=0, style=bold, color=blue];
m13_1324 -> m13_1325  [key=0, style=solid];
m13_1324 -> m13_8  [key=2, style=dotted];
m13_1323 -> m13_1324  [key=0, style=solid];
m13_1325 -> m13_1323  [key=0, style=bold, color=blue];
m13_1331 -> m13_1332  [key=0, style=solid];
m13_1331 -> m13_8  [key=2, style=dotted];
m13_1330 -> m13_1331  [key=0, style=solid];
m13_1332 -> m13_1330  [key=0, style=bold, color=blue];
m13_1338 -> m13_1339  [key=0, style=solid];
m13_1338 -> m13_8  [key=2, style=dotted];
m13_1337 -> m13_1338  [key=0, style=solid];
m13_1339 -> m13_1337  [key=0, style=bold, color=blue];
m13_1345 -> m13_1346  [key=0, style=solid];
m13_1345 -> m13_8  [key=2, style=dotted];
m13_1344 -> m13_1345  [key=0, style=solid];
m13_1346 -> m13_1344  [key=0, style=bold, color=blue];
m13_1352 -> m13_1353  [key=0, style=solid];
m13_1352 -> m13_8  [key=2, style=dotted];
m13_1351 -> m13_1352  [key=0, style=solid];
m13_1353 -> m13_1351  [key=0, style=bold, color=blue];
m13_1359 -> m13_1360  [key=0, style=solid];
m13_1359 -> m13_8  [key=2, style=dotted];
m13_1358 -> m13_1359  [key=0, style=solid];
m13_1360 -> m13_1358  [key=0, style=bold, color=blue];
m13_1366 -> m13_1367  [key=0, style=solid];
m13_1366 -> m13_8  [key=2, style=dotted];
m13_1365 -> m13_1366  [key=0, style=solid];
m13_1367 -> m13_1365  [key=0, style=bold, color=blue];
m13_1373 -> m13_1374  [key=0, style=solid];
m13_1373 -> m13_8  [key=2, style=dotted];
m13_1372 -> m13_1373  [key=0, style=solid];
m13_1374 -> m13_1372  [key=0, style=bold, color=blue];
m13_1387 -> m13_1388  [key=0, style=solid];
m13_1387 -> m13_1052  [key=2, style=dotted];
m13_1387 -> m13_1389  [key=2, style=dotted];
m13_1386 -> m13_1387  [key=0, style=solid];
m13_1388 -> m13_1386  [key=0, style=bold, color=blue];
m13_1395 -> m13_1396  [key=0, style=solid];
m13_1395 -> m13_633  [key=2, style=dotted];
m13_1395 -> m13_1389  [key=2, style=dotted];
m13_1394 -> m13_1395  [key=0, style=solid];
m13_1396 -> m13_1394  [key=0, style=bold, color=blue];
m13_1405 -> m13_1406  [key=0, style=solid];
m13_1406 -> m13_1407  [key=0, style=solid];
m13_1406 -> m13_355  [key=2, style=dotted];
m13_1406 -> m13_185  [key=2, style=dotted];
m13_1406 -> m13_1408  [key=2, style=dotted];
m13_1406 -> m13_636  [key=2, style=dotted];
m13_1407 -> m13_1405  [key=0, style=bold, color=blue];
m13_1412 -> m13_1413  [key=0, style=solid];
m13_1413 -> m13_1414  [key=0, style=solid];
m13_1413 -> m13_185  [key=2, style=dotted];
m13_1413 -> m13_1408  [key=2, style=dotted];
m13_1413 -> m13_863  [key=2, style=dotted];
m13_1414 -> m13_1412  [key=0, style=bold, color=blue];
m13_1418 -> m13_1419  [key=0, style=solid];
m13_1419 -> m13_1420  [key=0, style=solid];
m13_1419 -> m13_185  [key=2, style=dotted];
m13_1419 -> m13_1408  [key=2, style=dotted];
m13_1419 -> m13_863  [key=2, style=dotted];
m13_1420 -> m13_1418  [key=0, style=bold, color=blue];
m13_1424 -> m13_1425  [key=0, style=solid];
m13_1425 -> m13_1426  [key=0, style=solid];
m13_1425 -> m13_185  [key=2, style=dotted];
m13_1425 -> m13_1408  [key=2, style=dotted];
m13_1425 -> m13_863  [key=2, style=dotted];
m13_1426 -> m13_1424  [key=0, style=bold, color=blue];
m13_1538 -> m13_1539  [key=0, style=solid];
m13_1539 -> m13_1540  [key=0, style=solid];
m13_1540 -> m13_1538  [key=0, style=bold, color=blue];
m13_1575 -> m13_1576  [key=0, style=solid, color=green];
m13_1575 -> m13_185  [key=2, style=dotted, color=green];
m13_1575 -> m13_863  [key=2, style=dotted, color=green];
m13_1574 -> m13_1575  [key=0, style=solid, color=green];
m13_1576 -> m13_1574  [key=0, style=bold, color=blue];
m13_1952 -> m13_1953  [key=0, style=solid];
m13_1952 -> m13_8  [key=2, style=dotted];
m13_1951 -> m13_1952  [key=0, style=solid];
m13_1953 -> m13_1951  [key=0, style=bold, color=blue];
m13_1957 -> m13_1958  [key=0, style=solid];
m13_1958 -> m13_1959  [key=0, style=solid];
m13_1958 -> m13_350  [key=2, style=dotted];
m13_1958 -> m13_1960  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_1958 -> m13_1964  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_1959 -> m13_1960  [key=0, style=solid];
m13_1959 -> m13_353  [key=2, style=dotted];
m13_1960 -> m13_1961  [key=0, style=solid];
m13_1960 -> m13_353  [key=2, style=dotted];
m13_1964 -> m13_1965  [key=0, style=solid];
m13_1964 -> m13_353  [key=2, style=dotted];
m13_1961 -> m13_1962  [key=0, style=solid];
m13_1961 -> m13_350  [key=2, style=dotted];
m13_1961 -> m13_1963  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1961 -> m13_1964  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1961 -> m13_1965  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1962 -> m13_1963  [key=0, style=solid];
m13_1962 -> m13_353  [key=2, style=dotted];
m13_1963 -> m13_1964  [key=0, style=solid];
m13_1963 -> m13_353  [key=2, style=dotted];
m13_1965 -> m13_1966  [key=0, style=solid];
m13_1965 -> m13_274  [key=2, style=dotted];
m13_1966 -> m13_1967  [key=0, style=solid];
m13_1966 -> m13_8  [key=2, style=dotted];
m13_1967 -> m13_1957  [key=0, style=bold, color=blue];
m13_2064 -> m13_2065  [key=0, style=solid];
m13_2064 -> m13_8  [key=2, style=dotted];
m13_2063 -> m13_2064  [key=0, style=solid];
m13_2065 -> m13_2063  [key=0, style=bold, color=blue];
m13_2307 -> m13_2308  [key=0, style=solid];
m13_2308 -> m13_2309  [key=0, style=solid];
m13_2308 -> m13_466  [key=2, style=dotted];
m13_2309 -> m13_2307  [key=0, style=bold, color=blue];
m13_2613 -> m13_2614  [key=0, style=solid];
m13_2613 -> m13_8  [key=2, style=dotted];
m13_2612 -> m13_2613  [key=0, style=solid];
m13_2614 -> m13_2612  [key=0, style=bold, color=blue];
m13_2627 -> m13_2628  [key=0, style=solid];
m13_2627 -> m13_8  [key=2, style=dotted];
m13_2626 -> m13_2627  [key=0, style=solid];
m13_2628 -> m13_2626  [key=0, style=bold, color=blue];
m13_2646 -> m13_2647  [key=0, style=solid];
m13_2647 -> m13_2648  [key=0, style=solid];
m13_2648 -> m13_2649  [key=0, style=solid];
m13_2648 -> m13_8  [key=2, style=dotted];
m13_2649 -> m13_2646  [key=0, style=bold, color=blue];
m13_2653 -> m13_2654  [key=0, style=solid];
m13_2654 -> m13_2655  [key=0, style=solid];
m13_2655 -> m13_2656  [key=0, style=solid];
m13_2655 -> m13_8  [key=2, style=dotted];
m13_2656 -> m13_2653  [key=0, style=bold, color=blue];
m13_2727 -> m13_2728  [key=0, style=solid];
m13_2728 -> m13_2729  [key=0, style=solid];
m13_2728 -> m13_8  [key=2, style=dotted];
m13_2729 -> m13_2727  [key=0, style=bold, color=blue];
m13_2733 -> m13_2734  [key=0, style=solid];
m13_2734 -> m13_2735  [key=0, style=solid];
m13_2734 -> m13_8  [key=2, style=dotted];
m13_2735 -> m13_2733  [key=0, style=bold, color=blue];
m13_2739 -> m13_2740  [key=0, style=solid];
m13_2740 -> m13_2741  [key=0, style=solid];
m13_2740 -> m13_8  [key=2, style=dotted];
m13_2741 -> m13_2739  [key=0, style=bold, color=blue];
m13_2749 -> m13_2750  [key=0, style=solid];
m13_2750 -> m13_2751  [key=0, style=solid];
m13_2750 -> m13_8  [key=2, style=dotted];
m13_2751 -> m13_2749  [key=0, style=bold, color=blue];
m13_2755 -> m13_2756  [key=0, style=solid];
m13_2756 -> m13_2757  [key=0, style=solid];
m13_2756 -> m13_262  [key=2, style=dotted];
m13_2757 -> m13_2755  [key=0, style=bold, color=blue];
m13_2877 -> m13_2878  [key=0, style=solid];
m13_2877 -> m13_186  [key=2, style=dotted];
m13_2878 -> m13_2879  [key=0, style=solid];
m13_2876 -> m13_2877  [key=0, style=solid];
m13_2876 -> m13_2878  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2879 -> m13_2876  [key=0, style=bold, color=blue];
m13_2892 -> m13_2893  [key=0, style=solid];
m13_2892 -> m13_186  [key=2, style=dotted];
m13_2893 -> m13_2894  [key=0, style=solid];
m13_2891 -> m13_2892  [key=0, style=solid];
m13_2891 -> m13_2893  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2894 -> m13_2891  [key=0, style=bold, color=blue];
m13_2907 -> m13_2908  [key=0, style=solid];
m13_2907 -> m13_186  [key=2, style=dotted];
m13_2908 -> m13_2909  [key=0, style=solid];
m13_2906 -> m13_2907  [key=0, style=solid];
m13_2906 -> m13_2908  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2909 -> m13_2906  [key=0, style=bold, color=blue];
m13_3023 -> m13_3024  [key=0, style=solid];
m13_3023 -> m13_2053  [key=2, style=dotted];
m13_3023 -> m13_722  [key=2, style=dotted];
m13_3023 -> m13_2086  [key=2, style=dotted];
m13_3022 -> m13_3023  [key=0, style=solid];
m13_3024 -> m13_3022  [key=0, style=bold, color=blue];
m13_3035 -> m13_3036  [key=0, style=solid];
m13_3036 -> m13_3037  [key=0, style=solid];
m13_3036 -> m13_3039  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3037 -> m13_3038  [key=0, style=solid];
m13_3037 -> m13_116  [key=2, style=dotted];
m13_3037 -> m13_3042  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_3039 -> m13_3040  [key=0, style=solid];
m13_3039 -> m13_2053  [key=2, style=dotted];
m13_3039 -> m13_722  [key=2, style=dotted];
m13_3039 -> m13_3041  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_3039 -> m13_3042  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_3038 -> m13_3039  [key=0, style=solid];
m13_3042 -> m13_3043  [key=0, style=solid];
m13_3042 -> m13_2054  [key=2, style=dotted];
m13_3040 -> m13_3041  [key=0, style=solid];
m13_3040 -> m13_2843  [key=2, style=dotted];
m13_3041 -> m13_3042  [key=0, style=solid];
m13_3041 -> m13_2843  [key=2, style=dotted];
m13_3043 -> m13_3035  [key=0, style=bold, color=blue];
m13_3125 -> m13_3126  [key=0, style=solid];
m13_3125 -> m13_8  [key=2, style=dotted];
m13_3125 -> m13_3121  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_3124 -> m13_3125  [key=0, style=solid];
m13_3126 -> m13_3124  [key=0, style=bold, color=blue];
m13_3199 -> m13_3200  [key=0, style=solid];
m13_3200 -> m13_3201  [key=0, style=solid];
m13_3200 -> m13_8  [key=2, style=dotted];
m13_3201 -> m13_3199  [key=0, style=bold, color=blue];
m13_3207 -> m13_3208  [key=0, style=solid];
m13_3208 -> m13_3209  [key=0, style=solid];
m13_3208 -> m13_8  [key=2, style=dotted];
m13_3209 -> m13_3207  [key=0, style=bold, color=blue];
m13_3217 -> m13_3218  [key=0, style=solid];
m13_3217 -> m13_8  [key=2, style=dotted];
m13_3218 -> m13_3216  [key=0, style=bold, color=blue];
m13_3088 -> m13_3089  [key=0, style=solid];
m13_3089 -> m13_3090  [key=0, style=solid];
m13_3090 -> m13_3091  [key=0, style=solid];
m13_3090 -> m13_633  [key=2, style=dotted];
m13_3090 -> m13_3092  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_3090 -> m13_3093  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_3091 -> m13_3092  [key=0, style=solid];
m13_3091 -> m13_6  [key=2, style=dotted];
m13_3092 -> m13_3093  [key=0, style=solid];
m13_3092 -> m13_185  [key=2, style=dotted];
m13_3092 -> m13_636  [key=2, style=dotted];
m13_3093 -> m13_3094  [key=0, style=solid];
m13_3093 -> m13_185  [key=2, style=dotted];
m13_3093 -> m13_636  [key=2, style=dotted];
m13_3094 -> m13_3095  [key=0, style=solid];
m13_3094 -> m13_7  [key=2, style=dotted];
m13_3095 -> m13_3088  [key=0, style=bold, color=blue];
m13_3400 -> m13_3401  [key=0, style=solid];
m13_3401 -> m13_3402  [key=0, style=solid];
m13_3401 -> m13_3405  [key=1, style=dashed, color=darkseagreen4, label=originalUri];
m13_3401 -> m13_3401  [key=3, color=darkorchid, style=bold, label="Local variable string originalUri"];
m13_3402 -> m13_3403  [key=0, style=solid];
m13_3402 -> m13_1248  [key=2, style=dotted];
m13_3405 -> m13_3406  [key=0, style=solid];
m13_3405 -> m13_7  [key=2, style=dotted];
m13_3403 -> m13_3404  [key=0, style=solid];
m13_3403 -> m13_6  [key=2, style=dotted];
m13_3404 -> m13_3405  [key=0, style=solid];
m13_3404 -> m13_8  [key=2, style=dotted];
m13_3406 -> m13_3400  [key=0, style=bold, color=blue];
m13_883 -> m13_884  [key=0, style=solid];
m13_884 -> m13_885  [key=0, style=solid];
m13_884 -> m13_889  [key=2, style=dotted];
m13_884 -> m13_890  [key=2, style=dotted];
m13_885 -> m13_886  [key=0, style=solid];
m13_885 -> m13_844  [key=2, style=dotted];
m13_886 -> m13_887  [key=0, style=solid];
m13_886 -> m13_274  [key=2, style=dotted];
m13_887 -> m13_888  [key=0, style=solid];
m13_887 -> m13_364  [key=2, style=dotted];
m13_888 -> m13_883  [key=0, style=bold, color=blue];
m13_3204 -> m13_3205  [key=0, style=solid];
m13_3205 -> m13_3206  [key=0, style=solid];
m13_3205 -> m13_586  [key=2, style=dotted];
m13_3205 -> m13_3207  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3206 -> m13_3204  [key=0, style=bold, color=blue];
m13_1415 -> m13_1416  [key=0, style=solid];
m13_1416 -> m13_1417  [key=0, style=solid];
m13_1416 -> m13_586  [key=2, style=dotted];
m13_1416 -> m13_1418  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1417 -> m13_1415  [key=0, style=bold, color=blue];
m13_1795 -> m13_1796  [key=0, style=solid];
m13_1796 -> m13_1797  [key=0, style=solid];
m13_1796 -> m13_8  [key=2, style=dotted];
m13_1796 -> m13_1798  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m13_1796 -> m13_1799  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m13_1796 -> m13_1800  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m13_1796 -> m13_1801  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m13_1797 -> m13_1798  [key=0, style=solid];
m13_1797 -> m13_7  [key=2, style=dotted];
m13_1798 -> m13_1799  [key=0, style=solid];
m13_1798 -> m13_7  [key=2, style=dotted];
m13_1799 -> m13_1800  [key=0, style=solid];
m13_1799 -> m13_7  [key=2, style=dotted];
m13_1800 -> m13_1801  [key=0, style=solid];
m13_1800 -> m13_7  [key=2, style=dotted];
m13_1801 -> m13_1802  [key=0, style=solid];
m13_1801 -> m13_7  [key=2, style=dotted];
m13_1802 -> m13_1795  [key=0, style=bold, color=blue];
m13_1493 -> m13_1494  [key=0, style=solid];
m13_1494 -> m13_1495  [key=0, style=solid];
m13_1494 -> m13_1494  [key=3, color=darkorchid, style=bold, label="Local variable string googleSearchText"];
m13_1495 -> m13_1496  [key=0, style=solid];
m13_1495 -> m13_446  [key=2, style=dotted];
m13_1496 -> m13_1497  [key=0, style=solid];
m13_1496 -> m13_571  [key=2, style=dotted];
m13_1496 -> m13_56  [key=2, style=dotted];
m13_1496 -> m13_1498  [key=1, style=dashed, color=darkseagreen4, label=results];
m13_1497 -> m13_1498  [key=0, style=solid];
m13_1497 -> m13_633  [key=2, style=dotted];
m13_1497 -> m13_1500  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m13_1497 -> m13_1501  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m13_1497 -> m13_1502  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m13_1497 -> m13_1503  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m13_1498 -> m13_1499  [key=0, style=solid];
m13_1498 -> m13_1501  [key=0, style=solid];
m13_1500 -> m13_1498  [key=0, style=solid];
m13_1500 -> m13_186  [key=2, style=dotted];
m13_1501 -> m13_1502  [key=0, style=solid];
m13_1501 -> m13_7  [key=2, style=dotted];
m13_1502 -> m13_1503  [key=0, style=solid];
m13_1502 -> m13_7  [key=2, style=dotted];
m13_1503 -> m13_1504  [key=0, style=solid];
m13_1503 -> m13_7  [key=2, style=dotted];
m13_1499 -> m13_1500  [key=0, style=solid];
m13_1499 -> m13_289  [key=2, style=dotted];
m13_1499 -> m13_8  [key=2, style=dotted];
m13_1504 -> m13_1493  [key=0, style=bold, color=blue];
m13_332 -> m13_333  [key=0, style=solid];
m13_333 -> m13_334  [key=0, style=solid];
m13_333 -> m13_350  [key=2, style=dotted];
m13_333 -> m13_336  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m13_333 -> m13_342  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m13_334 -> m13_335  [key=0, style=solid];
m13_334 -> m13_336  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_334 -> m13_337  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_334 -> m13_334  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m13_336 -> m13_337  [key=0, style=solid];
m13_336 -> m13_351  [key=2, style=dotted];
m13_336 -> m13_352  [key=2, style=dotted];
m13_336 -> m13_353  [key=2, style=dotted];
m13_342 -> m13_343  [key=0, style=solid];
m13_342 -> m13_357  [key=2, style=dotted];
m13_335 -> m13_336  [key=0, style=solid];
m13_335 -> m13_338  [key=0, style=solid];
m13_337 -> m13_335  [key=0, style=solid];
m13_337 -> m13_337  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_338 -> m13_339  [key=0, style=solid];
m13_338 -> m13_185  [key=2, style=dotted];
m13_339 -> m13_340  [key=0, style=solid];
m13_339 -> m13_354  [key=2, style=dotted];
m13_339 -> m13_342  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m13_339 -> m13_346  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m13_340 -> m13_341  [key=0, style=solid];
m13_340 -> m13_355  [key=2, style=dotted];
m13_340 -> m13_344  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_340 -> m13_346  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_346 -> m13_347  [key=0, style=solid];
m13_346 -> m13_361  [key=2, style=dotted];
m13_346 -> m13_362  [key=2, style=dotted];
m13_341 -> m13_342  [key=0, style=solid];
m13_341 -> m13_356  [key=2, style=dotted];
m13_341 -> m13_343  [key=1, style=dashed, color=darkseagreen4, label=streamWriter];
m13_344 -> m13_345  [key=0, style=solid];
m13_344 -> m13_359  [key=2, style=dotted];
m13_343 -> m13_344  [key=0, style=solid];
m13_343 -> m13_358  [key=2, style=dotted];
m13_345 -> m13_346  [key=0, style=solid];
m13_345 -> m13_360  [key=2, style=dotted];
m13_345 -> m13_347  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m13_345 -> m13_348  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m13_347 -> m13_348  [key=0, style=solid];
m13_347 -> m13_363  [key=2, style=dotted];
m13_348 -> m13_349  [key=0, style=solid];
m13_348 -> m13_364  [key=2, style=dotted];
m13_349 -> m13_332  [key=0, style=bold, color=blue];
m13_1037 -> m13_1038  [key=0, style=solid];
m13_1038 -> m13_1039  [key=0, style=solid];
m13_1038 -> m13_1043  [key=2, style=dotted];
m13_1038 -> m13_1040  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m13_1039 -> m13_1040  [key=0, style=solid];
m13_1039 -> m13_1044  [key=2, style=dotted];
m13_1040 -> m13_1041  [key=0, style=solid];
m13_1040 -> m13_6  [key=2, style=dotted];
m13_1040 -> m13_1046  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m13_1041 -> m13_1042  [key=0, style=solid];
m13_1041 -> m13_586  [key=2, style=dotted];
m13_1041 -> m13_1045  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1042 -> m13_1037  [key=0, style=bold, color=blue];
m13_3068 -> m13_3069  [key=0, style=solid];
m13_3069 -> m13_3070  [key=0, style=solid];
m13_3069 -> m13_8  [key=2, style=dotted];
m13_3070 -> m13_3071  [key=0, style=solid];
m13_3070 -> m13_7  [key=2, style=dotted];
m13_3071 -> m13_3068  [key=0, style=bold, color=blue];
m13_3366 -> m13_3367  [key=0, style=solid];
m13_3367 -> m13_3368  [key=0, style=solid];
m13_3368 -> m13_3366  [key=0, style=bold, color=blue];
m13_2746 -> m13_2747  [key=0, style=solid];
m13_2747 -> m13_2748  [key=0, style=solid];
m13_2747 -> m13_586  [key=2, style=dotted];
m13_2747 -> m13_2749  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2748 -> m13_2746  [key=0, style=bold, color=blue];
m13_1479 -> m13_1480  [key=0, style=solid];
m13_1480 -> m13_1481  [key=0, style=solid];
m13_1480 -> m13_350  [key=2, style=dotted];
m13_1480 -> m13_1482  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_1480 -> m13_1483  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_1481 -> m13_1482  [key=0, style=solid];
m13_1481 -> m13_1052  [key=2, style=dotted];
m13_1481 -> m13_353  [key=2, style=dotted];
m13_1482 -> m13_1483  [key=0, style=solid];
m13_1482 -> m13_1052  [key=2, style=dotted];
m13_1482 -> m13_353  [key=2, style=dotted];
m13_1483 -> m13_1484  [key=0, style=solid];
m13_1483 -> m13_274  [key=2, style=dotted];
m13_1484 -> m13_1485  [key=0, style=solid];
m13_1484 -> m13_7  [key=2, style=dotted];
m13_1485 -> m13_1479  [key=0, style=bold, color=blue];
m13_784 -> m13_785  [key=0, style=solid];
m13_785 -> m13_786  [key=0, style=solid];
m13_785 -> m13_6  [key=2, style=dotted];
m13_785 -> m13_787  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_786 -> m13_787  [key=0, style=solid];
m13_786 -> m13_7  [key=2, style=dotted];
m13_787 -> m13_788  [key=0, style=solid];
m13_787 -> m13_8  [key=2, style=dotted];
m13_788 -> m13_789  [key=0, style=solid];
m13_788 -> m13_7  [key=2, style=dotted];
m13_789 -> m13_784  [key=0, style=bold, color=blue];
m13_2708 -> m13_2709  [key=0, style=solid];
m13_2709 -> m13_2710  [key=0, style=solid];
m13_2709 -> m13_8  [key=2, style=dotted];
m13_2710 -> m13_2711  [key=0, style=solid];
m13_2710 -> m13_1885  [key=2, style=dotted];
m13_2711 -> m13_2712  [key=0, style=solid];
m13_2711 -> m13_8  [key=2, style=dotted];
m13_2712 -> m13_2713  [key=0, style=solid];
m13_2712 -> m13_1885  [key=2, style=dotted];
m13_2713 -> m13_2714  [key=0, style=solid];
m13_2713 -> m13_8  [key=2, style=dotted];
m13_2714 -> m13_2715  [key=0, style=solid];
m13_2714 -> m13_1885  [key=2, style=dotted];
m13_2715 -> m13_2716  [key=0, style=solid];
m13_2715 -> m13_8  [key=2, style=dotted];
m13_2716 -> m13_2717  [key=0, style=solid];
m13_2716 -> m13_1885  [key=2, style=dotted];
m13_2717 -> m13_2718  [key=0, style=solid];
m13_2717 -> m13_8  [key=2, style=dotted];
m13_2718 -> m13_2719  [key=0, style=solid];
m13_2718 -> m13_1885  [key=2, style=dotted];
m13_2719 -> m13_2720  [key=0, style=solid];
m13_2719 -> m13_8  [key=2, style=dotted];
m13_2720 -> m13_2721  [key=0, style=solid];
m13_2720 -> m13_1885  [key=2, style=dotted];
m13_2721 -> m13_2722  [key=0, style=solid];
m13_2721 -> m13_8  [key=2, style=dotted];
m13_2722 -> m13_2723  [key=0, style=solid];
m13_2722 -> m13_1885  [key=2, style=dotted];
m13_2723 -> m13_2708  [key=0, style=bold, color=blue];
m13_3238 -> m13_3239  [key=0, style=solid];
m13_3239 -> m13_3240  [key=0, style=solid];
m13_3239 -> m13_3239  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3240 -> m13_3241  [key=0, style=solid];
m13_3240 -> m13_8  [key=2, style=dotted];
m13_3240 -> m13_3242  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3240 -> m13_3243  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3240 -> m13_3244  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3240 -> m13_3245  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3241 -> m13_3242  [key=0, style=solid];
m13_3241 -> m13_1885  [key=2, style=dotted];
m13_3242 -> m13_3243  [key=0, style=solid];
m13_3242 -> m13_1885  [key=2, style=dotted];
m13_3243 -> m13_3244  [key=0, style=solid];
m13_3243 -> m13_1885  [key=2, style=dotted];
m13_3244 -> m13_3245  [key=0, style=solid];
m13_3244 -> m13_1885  [key=2, style=dotted];
m13_3245 -> m13_3246  [key=0, style=solid];
m13_3245 -> m13_1885  [key=2, style=dotted];
m13_3246 -> m13_3238  [key=0, style=bold, color=blue];
m13_2629 -> m13_2630  [key=0, style=solid];
m13_2630 -> m13_2631  [key=0, style=solid];
m13_2630 -> m13_2634  [key=2, style=dotted];
m13_2630 -> m13_2635  [key=2, style=dotted];
m13_2631 -> m13_2632  [key=0, style=solid];
m13_2631 -> m13_6  [key=2, style=dotted];
m13_2632 -> m13_2633  [key=0, style=solid];
m13_2632 -> m13_7  [key=2, style=dotted];
m13_2633 -> m13_2629  [key=0, style=bold, color=blue];
m13_751 -> m13_752  [key=0, style=solid];
m13_752 -> m13_753  [key=0, style=solid];
m13_752 -> m13_759  [key=2, style=dotted];
m13_752 -> m13_754  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_752 -> m13_755  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_752 -> m13_756  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_753 -> m13_754  [key=0, style=solid];
m13_753 -> m13_760  [key=2, style=dotted];
m13_754 -> m13_755  [key=0, style=solid];
m13_754 -> m13_760  [key=2, style=dotted];
m13_755 -> m13_756  [key=0, style=solid];
m13_755 -> m13_760  [key=2, style=dotted];
m13_756 -> m13_757  [key=0, style=solid];
m13_756 -> m13_6  [key=2, style=dotted];
m13_757 -> m13_758  [key=0, style=solid];
m13_757 -> m13_7  [key=2, style=dotted];
m13_758 -> m13_751  [key=0, style=bold, color=blue];
m13_622 -> m13_623  [key=0, style=solid];
m13_623 -> m13_624  [key=0, style=solid];
m13_623 -> m13_633  [key=2, style=dotted];
m13_623 -> m13_634  [key=2, style=dotted];
m13_623 -> m13_626  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m13_623 -> m13_630  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m13_624 -> m13_625  [key=0, style=solid];
m13_624 -> m13_355  [key=2, style=dotted];
m13_624 -> m13_626  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_624 -> m13_627  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_624 -> m13_628  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_626 -> m13_627  [key=0, style=solid];
m13_626 -> m13_443  [key=2, style=dotted];
m13_630 -> m13_631  [key=0, style=solid];
m13_630 -> m13_185  [key=2, style=dotted];
m13_630 -> m13_636  [key=2, style=dotted];
m13_625 -> m13_626  [key=0, style=solid];
m13_625 -> m13_441  [key=2, style=dotted];
m13_627 -> m13_628  [key=0, style=solid];
m13_627 -> m13_359  [key=2, style=dotted];
m13_628 -> m13_629  [key=0, style=solid];
m13_628 -> m13_361  [key=2, style=dotted];
m13_629 -> m13_630  [key=0, style=solid];
m13_629 -> m13_635  [key=2, style=dotted];
m13_629 -> m13_631  [key=1, style=dashed, color=darkseagreen4, label=expected];
m13_631 -> m13_632  [key=0, style=solid];
m13_631 -> m13_7  [key=2, style=dotted];
m13_632 -> m13_622  [key=0, style=bold, color=blue];
m13_1189 -> m13_1190  [key=0, style=solid];
m13_1190 -> m13_1191  [key=0, style=solid];
m13_1191 -> m13_1189  [key=0, style=bold, color=blue];
m13_2544 -> m13_2545  [key=0, style=solid];
m13_2545 -> m13_2546  [key=0, style=solid];
m13_2545 -> m13_2560  [key=2, style=dotted];
m13_2545 -> m13_2551  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_2546 -> m13_2547  [key=0, style=solid];
m13_2546 -> m13_116  [key=2, style=dotted];
m13_2546 -> m13_2551  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2546 -> m13_2556  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2551 -> m13_2552  [key=0, style=solid];
m13_2551 -> m13_2561  [key=2, style=dotted];
m13_2547 -> m13_2548  [key=0, style=solid];
m13_2556 -> m13_2557  [key=0, style=solid];
m13_2556 -> m13_2563  [key=2, style=dotted];
m13_2556 -> m13_2558  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m13_2548 -> m13_2549  [key=0, style=solid];
m13_2549 -> m13_2550  [key=0, style=solid];
m13_2549 -> m13_355  [key=2, style=dotted];
m13_2549 -> m13_2553  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m13_2550 -> m13_2551  [key=0, style=solid];
m13_2550 -> m13_2525  [key=2, style=dotted];
m13_2550 -> m13_356  [key=2, style=dotted];
m13_2550 -> m13_2552  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m13_2553 -> m13_2554  [key=0, style=solid];
m13_2553 -> m13_444  [key=2, style=dotted];
m13_2552 -> m13_2553  [key=0, style=solid];
m13_2552 -> m13_2562  [key=2, style=dotted];
m13_2554 -> m13_2555  [key=0, style=solid];
m13_2554 -> m13_599  [key=2, style=dotted];
m13_2555 -> m13_2556  [key=0, style=solid];
m13_2555 -> m13_2053  [key=2, style=dotted];
m13_2555 -> m13_361  [key=2, style=dotted];
m13_2557 -> m13_2558  [key=0, style=solid];
m13_2557 -> m13_7  [key=2, style=dotted];
m13_2558 -> m13_2559  [key=0, style=solid];
m13_2558 -> m13_2564  [key=2, style=dotted];
m13_2559 -> m13_2544  [key=0, style=bold, color=blue];
m13_1628 -> m13_1629  [key=0, style=solid];
m13_1629 -> m13_1630  [key=0, style=solid];
m13_1629 -> m13_1631  [key=2, style=dotted];
m13_1630 -> m13_1628  [key=0, style=bold, color=blue];
m13_541 -> m13_542  [key=0, style=solid];
m13_542 -> m13_543  [key=0, style=solid];
m13_542 -> m13_546  [key=2, style=dotted];
m13_542 -> m13_6  [key=2, style=dotted];
m13_543 -> m13_544  [key=0, style=solid];
m13_543 -> m13_8  [key=2, style=dotted];
m13_544 -> m13_545  [key=0, style=solid];
m13_544 -> m13_7  [key=2, style=dotted];
m13_545 -> m13_541  [key=0, style=bold, color=blue];
m13_2864 -> m13_2865  [key=0, style=solid];
m13_2865 -> m13_2866  [key=0, style=solid];
m13_2865 -> m13_2868  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2865 -> m13_2251  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2866 -> m13_2867  [key=0, style=solid];
m13_2866 -> m13_633  [key=2, style=dotted];
m13_2866 -> m13_2877  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2866 -> m13_2870  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2866 -> m13_2871  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2866 -> m13_2872  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2866 -> m13_2873  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2866 -> m13_2874  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2868 -> m13_2869  [key=0, style=solid];
m13_2868 -> m13_185  [key=2, style=dotted];
m13_2868 -> m13_863  [key=2, style=dotted];
m13_2867 -> m13_2868  [key=0, style=solid];
m13_2867 -> m13_2877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2867 -> m13_2878  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2867 -> m13_2867  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m13_2870 -> m13_2871  [key=0, style=solid];
m13_2870 -> m13_7  [key=2, style=dotted];
m13_2871 -> m13_2872  [key=0, style=solid];
m13_2871 -> m13_996  [key=2, style=dotted];
m13_2871 -> m13_265  [key=2, style=dotted];
m13_2872 -> m13_2873  [key=0, style=solid];
m13_2872 -> m13_996  [key=2, style=dotted];
m13_2872 -> m13_265  [key=2, style=dotted];
m13_2873 -> m13_2874  [key=0, style=solid];
m13_2873 -> m13_996  [key=2, style=dotted];
m13_2873 -> m13_265  [key=2, style=dotted];
m13_2874 -> m13_2875  [key=0, style=solid];
m13_2874 -> m13_996  [key=2, style=dotted];
m13_2874 -> m13_265  [key=2, style=dotted];
m13_2869 -> m13_2870  [key=0, style=solid];
m13_2869 -> m13_316  [key=2, style=dotted];
m13_2875 -> m13_2864  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid];
m13_16 -> m13_15  [key=0, style=bold, color=blue];
m13_2431 -> m13_2432  [key=0, style=solid];
m13_2432 -> m13_2433  [key=0, style=solid];
m13_2432 -> m13_1922  [key=2, style=dotted];
m13_2433 -> m13_2431  [key=0, style=bold, color=blue];
m13_854 -> m13_855  [key=0, style=solid];
m13_855 -> m13_856  [key=0, style=solid];
m13_855 -> m13_843  [key=2, style=dotted];
m13_856 -> m13_857  [key=0, style=solid];
m13_856 -> m13_844  [key=2, style=dotted];
m13_857 -> m13_858  [key=0, style=solid];
m13_857 -> m13_185  [key=2, style=dotted];
m13_857 -> m13_636  [key=2, style=dotted];
m13_857 -> m13_859  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_858 -> m13_859  [key=0, style=solid];
m13_858 -> m13_7  [key=2, style=dotted];
m13_859 -> m13_860  [key=0, style=solid];
m13_859 -> m13_185  [key=2, style=dotted];
m13_859 -> m13_863  [key=2, style=dotted];
m13_859 -> m13_861  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_860 -> m13_861  [key=0, style=solid];
m13_860 -> m13_483  [key=2, style=dotted];
m13_860 -> m13_7  [key=2, style=dotted];
m13_861 -> m13_862  [key=0, style=solid];
m13_861 -> m13_483  [key=2, style=dotted];
m13_861 -> m13_7  [key=2, style=dotted];
m13_862 -> m13_854  [key=0, style=bold, color=blue];
m13_3219 -> m13_3220  [key=0, style=solid];
m13_3220 -> m13_3221  [key=0, style=solid];
m13_3220 -> m13_3225  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3220 -> m13_3220  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3221 -> m13_3222  [key=0, style=solid];
m13_3221 -> m13_8  [key=2, style=dotted];
m13_3221 -> m13_3223  [key=1, style=dashed, color=darkseagreen4, label=floats];
m13_3221 -> m13_3224  [key=1, style=dashed, color=darkseagreen4, label=floats];
m13_3225 -> m13_3226  [key=0, style=solid];
m13_3225 -> m13_8  [key=2, style=dotted];
m13_3225 -> m13_3227  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m13_3225 -> m13_3228  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m13_3222 -> m13_3223  [key=0, style=solid];
m13_3222 -> m13_7  [key=2, style=dotted];
m13_3223 -> m13_3224  [key=0, style=solid];
m13_3223 -> m13_7  [key=2, style=dotted];
m13_3224 -> m13_3225  [key=0, style=solid];
m13_3224 -> m13_7  [key=2, style=dotted];
m13_3226 -> m13_3227  [key=0, style=solid];
m13_3226 -> m13_7  [key=2, style=dotted];
m13_3227 -> m13_3228  [key=0, style=solid];
m13_3227 -> m13_7  [key=2, style=dotted];
m13_3228 -> m13_3229  [key=0, style=solid];
m13_3228 -> m13_7  [key=2, style=dotted];
m13_3229 -> m13_3219  [key=0, style=bold, color=blue];
m13_1654 -> m13_1655  [key=0, style=solid];
m13_1655 -> m13_1656  [key=0, style=solid];
m13_1655 -> m13_1657  [key=2, style=dotted];
m13_1656 -> m13_1654  [key=0, style=bold, color=blue];
m13_2291 -> m13_2292  [key=0, style=solid];
m13_2292 -> m13_2293  [key=0, style=solid];
m13_2292 -> m13_2296  [key=2, style=dotted];
m13_2293 -> m13_2294  [key=0, style=solid];
m13_2293 -> m13_274  [key=2, style=dotted];
m13_2294 -> m13_2295  [key=0, style=solid];
m13_2294 -> m13_7  [key=2, style=dotted];
m13_2295 -> m13_2291  [key=0, style=bold, color=blue];
m13_1340 -> m13_1341  [key=0, style=solid];
m13_1341 -> m13_1342  [key=0, style=solid];
m13_1341 -> m13_1345  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1341 -> m13_1320  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1342 -> m13_1343  [key=0, style=solid];
m13_1342 -> m13_586  [key=2, style=dotted];
m13_1342 -> m13_1344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1343 -> m13_1340  [key=0, style=bold, color=blue];
m13_2778 -> m13_2779  [key=0, style=solid];
m13_2779 -> m13_2780  [key=0, style=solid];
m13_2779 -> m13_185  [key=2, style=dotted];
m13_2779 -> m13_863  [key=2, style=dotted];
m13_2779 -> m13_2781  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2779 -> m13_2782  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2779 -> m13_2783  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2780 -> m13_2781  [key=0, style=solid];
m13_2780 -> m13_2775  [key=2, style=dotted];
m13_2780 -> m13_2776  [key=2, style=dotted];
m13_2780 -> m13_7  [key=2, style=dotted];
m13_2781 -> m13_2782  [key=0, style=solid];
m13_2781 -> m13_2777  [key=2, style=dotted];
m13_2781 -> m13_7  [key=2, style=dotted];
m13_2782 -> m13_2783  [key=0, style=solid];
m13_2782 -> m13_7  [key=2, style=dotted];
m13_2783 -> m13_2784  [key=0, style=solid];
m13_2783 -> m13_7  [key=2, style=dotted];
m13_2784 -> m13_2785  [key=0, style=solid];
m13_2784 -> m13_8  [key=2, style=dotted];
m13_2784 -> m13_2786  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2784 -> m13_2787  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2784 -> m13_2788  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2785 -> m13_2786  [key=0, style=solid];
m13_2785 -> m13_7  [key=2, style=dotted];
m13_2786 -> m13_2787  [key=0, style=solid];
m13_2786 -> m13_7  [key=2, style=dotted];
m13_2787 -> m13_2788  [key=0, style=solid];
m13_2787 -> m13_7  [key=2, style=dotted];
m13_2788 -> m13_2789  [key=0, style=solid];
m13_2788 -> m13_7  [key=2, style=dotted];
m13_2789 -> m13_2778  [key=0, style=bold, color=blue];
m13_1919 -> m13_1920  [key=0, style=solid];
m13_1920 -> m13_1921  [key=0, style=solid];
m13_1920 -> m13_1922  [key=2, style=dotted];
m13_1921 -> m13_1919  [key=0, style=bold, color=blue];
m13_834 -> m13_835  [key=0, style=solid];
m13_835 -> m13_836  [key=0, style=solid];
m13_835 -> m13_843  [key=2, style=dotted];
m13_835 -> m13_840  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_835 -> m13_841  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_836 -> m13_837  [key=0, style=solid];
m13_836 -> m13_844  [key=2, style=dotted];
m13_840 -> m13_841  [key=0, style=solid];
m13_840 -> m13_7  [key=2, style=dotted];
m13_841 -> m13_842  [key=0, style=solid];
m13_841 -> m13_7  [key=2, style=dotted];
m13_837 -> m13_838  [key=0, style=solid];
m13_837 -> m13_6  [key=2, style=dotted];
m13_837 -> m13_839  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_838 -> m13_839  [key=0, style=solid];
m13_838 -> m13_7  [key=2, style=dotted];
m13_839 -> m13_840  [key=0, style=solid];
m13_839 -> m13_8  [key=2, style=dotted];
m13_839 -> m13_841  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_842 -> m13_834  [key=0, style=bold, color=blue];
m13_3390 -> m13_3391  [key=0, style=solid];
m13_3391 -> m13_3392  [key=0, style=solid];
m13_3391 -> m13_3347  [key=2, style=dotted];
m13_3392 -> m13_3390  [key=0, style=bold, color=blue];
m13_1632 -> m13_1633  [key=0, style=solid];
m13_1633 -> m13_1634  [key=0, style=solid];
m13_1633 -> m13_1635  [key=2, style=dotted];
m13_1634 -> m13_1632  [key=0, style=bold, color=blue];
m13_1910 -> m13_1911  [key=0, style=solid];
m13_1910 -> m13_1913  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m13_1910 -> m13_1914  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m13_1911 -> m13_1912  [key=0, style=solid];
m13_1911 -> m13_1913  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_1913 -> m13_1915  [key=0, style=solid];
m13_1913 -> m13_1916  [key=2, style=dotted];
m13_1913 -> m13_1917  [key=2, style=dotted];
m13_1914 -> m13_1915  [key=0, style=solid];
m13_1914 -> m13_1918  [key=2, style=dotted];
m13_1912 -> m13_1913  [key=0, style=solid];
m13_1912 -> m13_1914  [key=0, style=solid];
m13_1915 -> m13_1910  [key=0, style=bold, color=blue];
m13_1319 -> m13_1320  [key=0, style=solid];
m13_1320 -> m13_1321  [key=0, style=solid];
m13_1320 -> m13_1324  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1320 -> m13_1320  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1321 -> m13_1322  [key=0, style=solid];
m13_1321 -> m13_586  [key=2, style=dotted];
m13_1321 -> m13_1323  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1322 -> m13_1319  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_5  [key=2, style=dotted];
m13_1 -> m13_6  [key=2, style=dotted];
m13_1 -> m13_7  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_8  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_7  [key=2, style=dotted];
m13_4 -> m13_0  [key=0, style=bold, color=blue];
m13_2880 -> m13_2881  [key=0, style=solid];
m13_2881 -> m13_2882  [key=0, style=solid];
m13_2881 -> m13_2884  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2881 -> m13_2881  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2882 -> m13_2883  [key=0, style=solid];
m13_2882 -> m13_633  [key=2, style=dotted];
m13_2882 -> m13_2892  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2882 -> m13_2886  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2882 -> m13_2887  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2882 -> m13_2888  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2882 -> m13_2889  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2884 -> m13_2885  [key=0, style=solid];
m13_2884 -> m13_185  [key=2, style=dotted];
m13_2884 -> m13_863  [key=2, style=dotted];
m13_2883 -> m13_2884  [key=0, style=solid];
m13_2883 -> m13_2892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2883 -> m13_2893  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2883 -> m13_2883  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m13_2886 -> m13_2887  [key=0, style=solid];
m13_2886 -> m13_7  [key=2, style=dotted];
m13_2887 -> m13_2888  [key=0, style=solid];
m13_2887 -> m13_996  [key=2, style=dotted];
m13_2887 -> m13_265  [key=2, style=dotted];
m13_2888 -> m13_2889  [key=0, style=solid];
m13_2888 -> m13_996  [key=2, style=dotted];
m13_2888 -> m13_265  [key=2, style=dotted];
m13_2889 -> m13_2890  [key=0, style=solid];
m13_2889 -> m13_996  [key=2, style=dotted];
m13_2889 -> m13_265  [key=2, style=dotted];
m13_2885 -> m13_2886  [key=0, style=solid];
m13_2885 -> m13_316  [key=2, style=dotted];
m13_2890 -> m13_2880  [key=0, style=bold, color=blue];
m13_2964 -> m13_2965  [key=0, style=solid];
m13_2965 -> m13_2966  [key=0, style=solid];
m13_2965 -> m13_2970  [key=2, style=dotted];
m13_2965 -> m13_2967  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m13_2966 -> m13_2967  [key=0, style=solid];
m13_2966 -> m13_2971  [key=2, style=dotted];
m13_2966 -> m13_2968  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m13_2967 -> m13_2968  [key=0, style=solid];
m13_2967 -> m13_7  [key=2, style=dotted];
m13_2968 -> m13_2969  [key=0, style=solid];
m13_2968 -> m13_7  [key=2, style=dotted];
m13_2969 -> m13_2964  [key=0, style=bold, color=blue];
m13_1519 -> m13_1520  [key=0, style=solid];
m13_1520 -> m13_1521  [key=0, style=solid];
m13_1520 -> m13_350  [key=2, style=dotted];
m13_1521 -> m13_1522  [key=0, style=solid];
m13_1521 -> m13_633  [key=2, style=dotted];
m13_1522 -> m13_1519  [key=0, style=bold, color=blue];
m13_2281 -> m13_2282  [key=0, style=solid];
m13_2282 -> m13_2283  [key=0, style=solid];
m13_2282 -> m13_2290  [key=2, style=dotted];
m13_2282 -> m13_633  [key=2, style=dotted];
m13_2283 -> m13_2284  [key=0, style=solid];
m13_2283 -> m13_274  [key=2, style=dotted];
m13_2283 -> m13_2285  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2284 -> m13_2285  [key=0, style=solid];
m13_2284 -> m13_7  [key=2, style=dotted];
m13_2285 -> m13_2286  [key=0, style=solid];
m13_2285 -> m13_8  [key=2, style=dotted];
m13_2285 -> m13_2287  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2285 -> m13_2288  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2286 -> m13_2287  [key=0, style=solid];
m13_2286 -> m13_1221  [key=2, style=dotted];
m13_2286 -> m13_7  [key=2, style=dotted];
m13_2287 -> m13_2288  [key=0, style=solid];
m13_2287 -> m13_1221  [key=2, style=dotted];
m13_2287 -> m13_7  [key=2, style=dotted];
m13_2288 -> m13_2289  [key=0, style=solid];
m13_2288 -> m13_1221  [key=2, style=dotted];
m13_2288 -> m13_7  [key=2, style=dotted];
m13_2289 -> m13_2281  [key=0, style=bold, color=blue];
m13_1791 -> m13_1792  [key=0, style=solid];
m13_1791 -> m13_1793  [key=1, style=dashed, color=darkseagreen4, label=TValue];
m13_1792 -> m13_1793  [key=0, style=solid];
m13_1793 -> m13_1794  [key=0, style=solid];
m13_1794 -> m13_1791  [key=0, style=bold, color=blue];
m13_2636 -> m13_2637  [key=0, style=solid];
m13_2637 -> m13_2638  [key=0, style=solid];
m13_2637 -> m13_2637  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2638 -> m13_2639  [key=0, style=solid];
m13_2638 -> m13_8  [key=2, style=dotted];
m13_2638 -> m13_2640  [key=1, style=dashed, color=darkseagreen4, label=w];
m13_2638 -> m13_2641  [key=1, style=dashed, color=darkseagreen4, label=w];
m13_2639 -> m13_2640  [key=0, style=solid];
m13_2639 -> m13_2635  [key=2, style=dotted];
m13_2639 -> m13_7  [key=2, style=dotted];
m13_2640 -> m13_2641  [key=0, style=solid];
m13_2640 -> m13_2635  [key=2, style=dotted];
m13_2640 -> m13_7  [key=2, style=dotted];
m13_2641 -> m13_2642  [key=0, style=solid];
m13_2641 -> m13_7  [key=2, style=dotted];
m13_2642 -> m13_2636  [key=0, style=bold, color=blue];
m13_845 -> m13_846  [key=0, style=solid];
m13_846 -> m13_847  [key=0, style=solid];
m13_846 -> m13_843  [key=2, style=dotted];
m13_846 -> m13_851  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_846 -> m13_852  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_847 -> m13_848  [key=0, style=solid];
m13_847 -> m13_844  [key=2, style=dotted];
m13_851 -> m13_852  [key=0, style=solid];
m13_851 -> m13_7  [key=2, style=dotted];
m13_852 -> m13_853  [key=0, style=solid];
m13_852 -> m13_7  [key=2, style=dotted];
m13_848 -> m13_849  [key=0, style=solid];
m13_848 -> m13_185  [key=2, style=dotted];
m13_848 -> m13_636  [key=2, style=dotted];
m13_848 -> m13_850  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_849 -> m13_850  [key=0, style=solid];
m13_849 -> m13_7  [key=2, style=dotted];
m13_850 -> m13_851  [key=0, style=solid];
m13_850 -> m13_8  [key=2, style=dotted];
m13_850 -> m13_852  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_853 -> m13_845  [key=0, style=bold, color=blue];
m13_2701 -> m13_2702  [key=0, style=solid];
m13_2702 -> m13_2703  [key=0, style=solid];
m13_2702 -> m13_185  [key=2, style=dotted];
m13_2702 -> m13_354  [key=2, style=dotted];
m13_2702 -> m13_2705  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2703 -> m13_2704  [key=0, style=solid];
m13_2703 -> m13_2053  [key=2, style=dotted];
m13_2703 -> m13_722  [key=2, style=dotted];
m13_2703 -> m13_2086  [key=2, style=dotted];
m13_2703 -> m13_2706  [key=1, style=dashed, color=darkseagreen4, label=dict];
m13_2705 -> m13_2706  [key=0, style=solid];
m13_2705 -> m13_2086  [key=2, style=dotted];
m13_2704 -> m13_2705  [key=0, style=solid];
m13_2704 -> m13_2053  [key=2, style=dotted];
m13_2704 -> m13_722  [key=2, style=dotted];
m13_2706 -> m13_2707  [key=0, style=solid];
m13_2706 -> m13_7  [key=2, style=dotted];
m13_2707 -> m13_2701  [key=0, style=bold, color=blue];
m13_393 -> m13_425  [key=0, style=solid];
m13_393 -> m13_426  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_393 -> m13_427  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_393 -> m13_431  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_393 -> m13_433  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_393 -> m13_384  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m13_393 -> m13_406  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m13_393 -> m13_416  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m13_425 -> m13_426  [key=0, style=solid];
m13_425 -> m13_355  [key=2, style=dotted];
m13_425 -> m13_427  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_425 -> m13_428  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_426 -> m13_427  [key=0, style=solid];
m13_426 -> m13_441  [key=2, style=dotted];
m13_426 -> m13_442  [key=2, style=dotted];
m13_427 -> m13_428  [key=0, style=solid];
m13_427 -> m13_443  [key=2, style=dotted];
m13_431 -> m13_432  [key=0, style=solid];
m13_431 -> m13_6  [key=2, style=dotted];
m13_431 -> m13_446  [key=2, style=dotted];
m13_433 -> m13_434  [key=0, style=solid];
m13_433 -> m13_442  [key=2, style=dotted];
m13_433 -> m13_364  [key=2, style=dotted];
m13_428 -> m13_429  [key=0, style=solid];
m13_428 -> m13_444  [key=2, style=dotted];
m13_429 -> m13_430  [key=0, style=solid];
m13_429 -> m13_445  [key=2, style=dotted];
m13_429 -> m13_446  [key=2, style=dotted];
m13_430 -> m13_431  [key=0, style=solid];
m13_430 -> m13_447  [key=2, style=dotted];
m13_430 -> m13_448  [key=2, style=dotted];
m13_430 -> m13_449  [key=2, style=dotted];
m13_430 -> m13_430  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m13_430 -> m13_451  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_430 -> m13_434  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m13_430 -> m13_436  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m13_430 -> m13_437  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m13_434 -> m13_435  [key=0, style=solid];
m13_434 -> m13_364  [key=2, style=dotted];
m13_436 -> m13_437  [key=0, style=solid];
m13_436 -> m13_7  [key=2, style=dotted];
m13_437 -> m13_438  [key=0, style=solid];
m13_437 -> m13_439  [key=0, style=solid];
m13_432 -> m13_433  [key=0, style=solid];
m13_432 -> m13_447  [key=2, style=dotted];
m13_432 -> m13_448  [key=2, style=dotted];
m13_432 -> m13_449  [key=2, style=dotted];
m13_432 -> m13_432  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m13_432 -> m13_454  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_432 -> m13_435  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m13_432 -> m13_436  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m13_432 -> m13_438  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m13_432 -> m13_439  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m13_435 -> m13_436  [key=0, style=solid];
m13_435 -> m13_364  [key=2, style=dotted];
m13_438 -> m13_437  [key=0, style=solid];
m13_438 -> m13_450  [key=2, style=dotted];
m13_438 -> m13_265  [key=2, style=dotted];
m13_438 -> m13_438  [key=1, style=dashed, color=darkseagreen4, label=property];
m13_439 -> m13_440  [key=0, style=solid];
m13_439 -> m13_289  [key=2, style=dotted];
m13_440 -> m13_393  [key=0, style=bold, color=blue];
m13_2895 -> m13_2896  [key=0, style=solid];
m13_2896 -> m13_2897  [key=0, style=solid];
m13_2896 -> m13_633  [key=2, style=dotted];
m13_2896 -> m13_2907  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2896 -> m13_2900  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2896 -> m13_2901  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2896 -> m13_2902  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2896 -> m13_2903  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2897 -> m13_2898  [key=0, style=solid];
m13_2897 -> m13_2907  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2897 -> m13_2908  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2897 -> m13_2897  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m13_2900 -> m13_2901  [key=0, style=solid];
m13_2900 -> m13_7  [key=2, style=dotted];
m13_2901 -> m13_2902  [key=0, style=solid];
m13_2901 -> m13_7  [key=2, style=dotted];
m13_2902 -> m13_2903  [key=0, style=solid];
m13_2902 -> m13_7  [key=2, style=dotted];
m13_2903 -> m13_2904  [key=0, style=solid];
m13_2903 -> m13_7  [key=2, style=dotted];
m13_2898 -> m13_2899  [key=0, style=solid];
m13_2898 -> m13_2905  [key=2, style=dotted];
m13_2898 -> m13_185  [key=2, style=dotted];
m13_2898 -> m13_636  [key=2, style=dotted];
m13_2899 -> m13_2900  [key=0, style=solid];
m13_2899 -> m13_7  [key=2, style=dotted];
m13_2904 -> m13_2895  [key=0, style=bold, color=blue];
m13_694 -> m13_695  [key=0, style=solid];
m13_695 -> m13_696  [key=0, style=solid];
m13_695 -> m13_695  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_696 -> m13_697  [key=0, style=solid];
m13_696 -> m13_8  [key=2, style=dotted];
m13_696 -> m13_698  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_696 -> m13_699  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_696 -> m13_700  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_696 -> m13_701  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_696 -> m13_702  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_697 -> m13_698  [key=0, style=solid];
m13_697 -> m13_7  [key=2, style=dotted];
m13_698 -> m13_699  [key=0, style=solid];
m13_698 -> m13_7  [key=2, style=dotted];
m13_699 -> m13_700  [key=0, style=solid];
m13_699 -> m13_7  [key=2, style=dotted];
m13_700 -> m13_701  [key=0, style=solid];
m13_700 -> m13_7  [key=2, style=dotted];
m13_701 -> m13_702  [key=0, style=solid];
m13_701 -> m13_7  [key=2, style=dotted];
m13_702 -> m13_703  [key=0, style=solid];
m13_702 -> m13_7  [key=2, style=dotted];
m13_703 -> m13_694  [key=0, style=bold, color=blue];
m13_2246 -> m13_2247  [key=0, style=solid];
m13_2247 -> m13_2248  [key=0, style=solid];
m13_2248 -> m13_2249  [key=0, style=solid];
m13_2249 -> m13_2246  [key=0, style=bold, color=blue];
m13_650 -> m13_651  [key=0, style=solid];
m13_651 -> m13_652  [key=0, style=solid];
m13_651 -> m13_350  [key=2, style=dotted];
m13_651 -> m13_653  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_651 -> m13_654  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_651 -> m13_657  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_652 -> m13_653  [key=0, style=solid];
m13_652 -> m13_353  [key=2, style=dotted];
m13_653 -> m13_654  [key=0, style=solid];
m13_653 -> m13_353  [key=2, style=dotted];
m13_654 -> m13_655  [key=0, style=solid];
m13_654 -> m13_6  [key=2, style=dotted];
m13_654 -> m13_656  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_657 -> m13_658  [key=0, style=solid];
m13_657 -> m13_7  [key=2, style=dotted];
m13_655 -> m13_656  [key=0, style=solid];
m13_655 -> m13_7  [key=2, style=dotted];
m13_656 -> m13_657  [key=0, style=solid];
m13_656 -> m13_8  [key=2, style=dotted];
m13_658 -> m13_650  [key=0, style=bold, color=blue];
m13_1937 -> m13_1938  [key=0, style=solid];
m13_1938 -> m13_1939  [key=0, style=solid];
m13_1938 -> m13_1926  [key=2, style=dotted];
m13_1939 -> m13_1937  [key=0, style=bold, color=blue];
m13_3301 -> m13_3302  [key=0, style=solid];
m13_3302 -> m13_3303  [key=0, style=solid];
m13_3302 -> m13_3321  [key=2, style=dotted];
m13_3302 -> m13_3304  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m13_3302 -> m13_3309  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m13_3302 -> m13_3315  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m13_3303 -> m13_3304  [key=0, style=solid];
m13_3303 -> m13_185  [key=2, style=dotted];
m13_3303 -> m13_3322  [key=2, style=dotted];
m13_3303 -> m13_3323  [key=2, style=dotted];
m13_3303 -> m13_3306  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3303 -> m13_3310  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3303 -> m13_3312  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3303 -> m13_3316  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3303 -> m13_3318  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3304 -> m13_3305  [key=0, style=solid];
m13_3304 -> m13_768  [key=2, style=dotted];
m13_3304 -> m13_3306  [key=1, style=dashed, color=darkseagreen4, label=text1];
m13_3309 -> m13_3310  [key=0, style=solid];
m13_3309 -> m13_353  [key=2, style=dotted];
m13_3315 -> m13_3316  [key=0, style=solid];
m13_3315 -> m13_353  [key=2, style=dotted];
m13_3306 -> m13_3307  [key=0, style=solid];
m13_3306 -> m13_863  [key=2, style=dotted];
m13_3310 -> m13_3311  [key=0, style=solid];
m13_3310 -> m13_768  [key=2, style=dotted];
m13_3310 -> m13_3312  [key=1, style=dashed, color=darkseagreen4, label=text2];
m13_3312 -> m13_3313  [key=0, style=solid];
m13_3312 -> m13_863  [key=2, style=dotted];
m13_3316 -> m13_3317  [key=0, style=solid];
m13_3316 -> m13_768  [key=2, style=dotted];
m13_3316 -> m13_3318  [key=1, style=dashed, color=darkseagreen4, label=text3];
m13_3318 -> m13_3319  [key=0, style=solid];
m13_3318 -> m13_863  [key=2, style=dotted];
m13_3305 -> m13_3306  [key=0, style=solid];
m13_3305 -> m13_7  [key=2, style=dotted];
m13_3307 -> m13_3308  [key=0, style=solid];
m13_3307 -> m13_3324  [key=2, style=dotted];
m13_3307 -> m13_7  [key=2, style=dotted];
m13_3308 -> m13_3309  [key=0, style=solid];
m13_3308 -> m13_350  [key=2, style=dotted];
m13_3308 -> m13_3310  [key=1, style=dashed, color=darkseagreen4, label=dict2];
m13_3311 -> m13_3312  [key=0, style=solid];
m13_3311 -> m13_7  [key=2, style=dotted];
m13_3313 -> m13_3314  [key=0, style=solid];
m13_3313 -> m13_3291  [key=2, style=dotted];
m13_3313 -> m13_3324  [key=2, style=dotted];
m13_3313 -> m13_7  [key=2, style=dotted];
m13_3314 -> m13_3315  [key=0, style=solid];
m13_3314 -> m13_350  [key=2, style=dotted];
m13_3314 -> m13_3316  [key=1, style=dashed, color=darkseagreen4, label=dict3];
m13_3317 -> m13_3318  [key=0, style=solid];
m13_3317 -> m13_7  [key=2, style=dotted];
m13_3319 -> m13_3320  [key=0, style=solid];
m13_3319 -> m13_3291  [key=2, style=dotted];
m13_3319 -> m13_3324  [key=2, style=dotted];
m13_3319 -> m13_7  [key=2, style=dotted];
m13_3320 -> m13_3301  [key=0, style=bold, color=blue];
m13_1505 -> m13_1506  [key=0, style=solid];
m13_1506 -> m13_1507  [key=0, style=solid];
m13_1506 -> m13_1518  [key=2, style=dotted];
m13_1506 -> m13_1513  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m13_1507 -> m13_1508  [key=0, style=solid];
m13_1507 -> m13_1509  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1507 -> m13_1510  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1507 -> m13_1511  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1507 -> m13_1512  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1507 -> m13_1516  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1513 -> m13_1514  [key=0, style=solid];
m13_1513 -> m13_274  [key=2, style=dotted];
m13_1513 -> m13_1515  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1508 -> m13_1509  [key=0, style=solid];
m13_1508 -> m13_634  [key=2, style=dotted];
m13_1509 -> m13_1510  [key=0, style=solid];
m13_1510 -> m13_1511  [key=0, style=solid];
m13_1511 -> m13_1512  [key=0, style=solid];
m13_1511 -> m13_634  [key=2, style=dotted];
m13_1512 -> m13_1513  [key=0, style=solid];
m13_1516 -> m13_1517  [key=0, style=solid];
m13_1516 -> m13_7  [key=2, style=dotted];
m13_1514 -> m13_1515  [key=0, style=solid];
m13_1514 -> m13_7  [key=2, style=dotted];
m13_1515 -> m13_1516  [key=0, style=solid];
m13_1515 -> m13_8  [key=2, style=dotted];
m13_1517 -> m13_1505  [key=0, style=bold, color=blue];
m13_902 -> m13_903  [key=0, style=solid];
m13_903 -> m13_904  [key=0, style=solid];
m13_903 -> m13_586  [key=2, style=dotted];
m13_903 -> m13_905  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_904 -> m13_902  [key=0, style=bold, color=blue];
m13_1570 -> m13_1571  [key=0, style=solid];
m13_1571 -> m13_1572  [key=0, style=solid, color=green];
m13_1571 -> m13_1575  [key=1, style=dashed, color=green, label=json];
m13_1571 -> m13_1571  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1572 -> m13_1573  [key=0, style=solid, color=green];
m13_1572 -> m13_586  [key=2, style=dotted, color=green];
m13_1572 -> m13_1574  [key=1, style=dashed, color=green, label="lambda expression"];
m13_1573 -> m13_1570  [key=0, style=bold, color=blue];
m13_561 -> m13_562  [key=0, style=solid];
m13_562 -> m13_563  [key=0, style=solid];
m13_562 -> m13_562  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m13_563 -> m13_564  [key=0, style=solid];
m13_563 -> m13_262  [key=2, style=dotted];
m13_563 -> m13_565  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_564 -> m13_565  [key=0, style=solid];
m13_564 -> m13_569  [key=2, style=dotted];
m13_564 -> m13_570  [key=2, style=dotted];
m13_564 -> m13_7  [key=2, style=dotted];
m13_565 -> m13_566  [key=0, style=solid];
m13_566 -> m13_567  [key=0, style=solid];
m13_567 -> m13_568  [key=0, style=solid];
m13_567 -> m13_571  [key=2, style=dotted];
m13_567 -> m13_570  [key=2, style=dotted];
m13_567 -> m13_7  [key=2, style=dotted];
m13_568 -> m13_561  [key=0, style=bold, color=blue];
m13_47 -> m13_48  [key=0, style=solid];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_28  [key=2, style=dotted];
m13_48 -> m13_55  [key=2, style=dotted];
m13_48 -> m13_56  [key=2, style=dotted];
m13_48 -> m13_51  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_48 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_48 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_6  [key=2, style=dotted];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_7  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_7  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_7  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_8  [key=2, style=dotted];
m13_50 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_50 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_54 -> m13_47  [key=0, style=bold, color=blue];
m13_1119 -> m13_1120  [key=0, style=solid];
m13_1120 -> m13_1121  [key=0, style=solid];
m13_1120 -> m13_1118  [key=2, style=dotted];
m13_1120 -> m13_1122  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_1121 -> m13_1122  [key=0, style=solid];
m13_1122 -> m13_1123  [key=0, style=solid];
m13_1122 -> m13_185  [key=2, style=dotted];
m13_1122 -> m13_636  [key=2, style=dotted];
m13_1122 -> m13_1124  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1123 -> m13_1124  [key=0, style=solid];
m13_1123 -> m13_7  [key=2, style=dotted];
m13_1124 -> m13_1125  [key=0, style=solid];
m13_1124 -> m13_185  [key=2, style=dotted];
m13_1124 -> m13_863  [key=2, style=dotted];
m13_1125 -> m13_1126  [key=0, style=solid];
m13_1125 -> m13_185  [key=2, style=dotted];
m13_1125 -> m13_636  [key=2, style=dotted];
m13_1126 -> m13_1127  [key=0, style=solid];
m13_1126 -> m13_7  [key=2, style=dotted];
m13_1127 -> m13_1119  [key=0, style=bold, color=blue];
m13_3096 -> m13_3097  [key=0, style=solid];
m13_3097 -> m13_3098  [key=0, style=solid];
m13_3097 -> m13_3097  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3098 -> m13_3099  [key=0, style=solid];
m13_3098 -> m13_8  [key=2, style=dotted];
m13_3099 -> m13_3100  [key=0, style=solid];
m13_3100 -> m13_3101  [key=0, style=solid];
m13_3100 -> m13_1883  [key=2, style=dotted];
m13_3100 -> m13_7  [key=2, style=dotted];
m13_3101 -> m13_3096  [key=0, style=bold, color=blue];
m13_2758 -> m13_2759  [key=0, style=solid];
m13_2759 -> m13_2760  [key=0, style=solid];
m13_2759 -> m13_2759  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m13_2760 -> m13_2761  [key=0, style=solid];
m13_2760 -> m13_683  [key=2, style=dotted];
m13_2760 -> m13_833  [key=2, style=dotted];
m13_2761 -> m13_2762  [key=0, style=solid];
m13_2761 -> m13_7  [key=2, style=dotted];
m13_2762 -> m13_2758  [key=0, style=bold, color=blue];
m13_57 -> m13_58  [key=0, style=solid];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_116  [key=2, style=dotted];
m13_58 -> m13_60  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_61  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_62  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_64  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_67  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_69  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_71  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_73  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_74  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_75  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_76  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_77  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_78  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_79  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_80  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_81  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_82  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_83  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_85  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_86  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_88  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_89  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_90  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_91  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_92  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_93  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_94  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_95  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_96  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_97  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_98  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_99  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_100  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_101  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_102  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_104  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_105  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_107  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_109  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_110  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_111  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_112  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_113  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_58 -> m13_114  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_117  [key=2, style=dotted];
m13_59 -> m13_61  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m13_60 -> m13_61  [key=0, style=solid];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_7  [key=2, style=dotted];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_7  [key=2, style=dotted];
m13_64 -> m13_65  [key=0, style=solid];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_7  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_118  [key=2, style=dotted];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_118  [key=2, style=dotted];
m13_67 -> m13_7  [key=2, style=dotted];
m13_69 -> m13_70  [key=0, style=solid];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_7  [key=2, style=dotted];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_120  [key=2, style=dotted];
m13_71 -> m13_121  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_7  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_122  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_123  [key=2, style=dotted];
m13_74 -> m13_7  [key=2, style=dotted];
m13_75 -> m13_76  [key=0, style=solid];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_7  [key=2, style=dotted];
m13_77 -> m13_78  [key=0, style=solid];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_7  [key=2, style=dotted];
m13_79 -> m13_80  [key=0, style=solid];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_7  [key=2, style=dotted];
m13_81 -> m13_82  [key=0, style=solid];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_7  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_7  [key=2, style=dotted];
m13_85 -> m13_86  [key=0, style=solid];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_7  [key=2, style=dotted];
m13_87 -> m13_88  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_7  [key=2, style=dotted];
m13_89 -> m13_90  [key=0, style=solid];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_7  [key=2, style=dotted];
m13_91 -> m13_92  [key=0, style=solid];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_7  [key=2, style=dotted];
m13_93 -> m13_94  [key=0, style=solid];
m13_94 -> m13_95  [key=0, style=solid];
m13_94 -> m13_7  [key=2, style=dotted];
m13_95 -> m13_96  [key=0, style=solid];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_7  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_7  [key=2, style=dotted];
m13_99 -> m13_100  [key=0, style=solid];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_7  [key=2, style=dotted];
m13_101 -> m13_102  [key=0, style=solid];
m13_102 -> m13_103  [key=0, style=solid];
m13_102 -> m13_7  [key=2, style=dotted];
m13_104 -> m13_105  [key=0, style=solid];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_7  [key=2, style=dotted];
m13_106 -> m13_107  [key=0, style=solid];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_7  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_110 -> m13_111  [key=0, style=solid];
m13_110 -> m13_7  [key=2, style=dotted];
m13_111 -> m13_112  [key=0, style=solid];
m13_112 -> m13_113  [key=0, style=solid];
m13_112 -> m13_7  [key=2, style=dotted];
m13_113 -> m13_114  [key=0, style=solid];
m13_114 -> m13_115  [key=0, style=solid];
m13_114 -> m13_7  [key=2, style=dotted];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_119  [key=2, style=dotted];
m13_68 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_124  [key=2, style=dotted];
m13_103 -> m13_105  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_125  [key=2, style=dotted];
m13_108 -> m13_110  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m13_115 -> m13_57  [key=0, style=bold, color=blue];
m13_2222 -> m13_2223  [key=0, style=solid];
m13_2223 -> m13_2224  [key=0, style=solid];
m13_2223 -> m13_2229  [key=2, style=dotted];
m13_2223 -> m13_2230  [key=2, style=dotted];
m13_2223 -> m13_1255  [key=2, style=dotted];
m13_2223 -> m13_2227  [key=1, style=dashed, color=darkseagreen4, label=response];
m13_2224 -> m13_2225  [key=0, style=solid];
m13_2224 -> m13_274  [key=2, style=dotted];
m13_2227 -> m13_2228  [key=0, style=solid];
m13_2227 -> m13_2231  [key=2, style=dotted];
m13_2227 -> m13_265  [key=2, style=dotted];
m13_2225 -> m13_2226  [key=0, style=solid];
m13_2225 -> m13_8  [key=2, style=dotted];
m13_2225 -> m13_2227  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m13_2226 -> m13_2227  [key=0, style=solid];
m13_2226 -> m13_7  [key=2, style=dotted];
m13_2228 -> m13_2222  [key=0, style=bold, color=blue];
m13_2195 -> m13_2196  [key=0, style=solid];
m13_2196 -> m13_2197  [key=0, style=solid];
m13_2196 -> m13_1702  [key=2, style=dotted];
m13_2196 -> m13_3485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m13_2197 -> m13_2195  [key=0, style=bold, color=blue];
m13_1486 -> m13_1487  [key=0, style=solid];
m13_1487 -> m13_1488  [key=0, style=solid];
m13_1487 -> m13_1487  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1488 -> m13_1489  [key=0, style=solid];
m13_1488 -> m13_8  [key=2, style=dotted];
m13_1489 -> m13_1490  [key=0, style=solid];
m13_1489 -> m13_1492  [key=0, style=solid];
m13_1489 -> m13_995  [key=2, style=dotted];
m13_1490 -> m13_1491  [key=0, style=solid];
m13_1491 -> m13_1492  [key=0, style=solid];
m13_1491 -> m13_996  [key=2, style=dotted];
m13_1491 -> m13_265  [key=2, style=dotted];
m13_1492 -> m13_1486  [key=0, style=bold, color=blue];
m13_3159 -> m13_3160  [key=0, style=solid];
m13_3160 -> m13_3161  [key=0, style=solid];
m13_3160 -> m13_633  [key=2, style=dotted];
m13_3160 -> m13_634  [key=2, style=dotted];
m13_3160 -> m13_643  [key=2, style=dotted];
m13_3160 -> m13_644  [key=2, style=dotted];
m13_3161 -> m13_3162  [key=0, style=solid];
m13_3161 -> m13_185  [key=2, style=dotted];
m13_3161 -> m13_768  [key=2, style=dotted];
m13_3162 -> m13_3163  [key=0, style=solid];
m13_3162 -> m13_7  [key=2, style=dotted];
m13_3163 -> m13_3159  [key=0, style=bold, color=blue];
m13_2261 -> m13_2262  [key=0, style=solid];
m13_2262 -> m13_2263  [key=0, style=solid];
m13_2262 -> m13_8  [key=2, style=dotted];
m13_2262 -> m13_2264  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2263 -> m13_2264  [key=0, style=solid];
m13_2263 -> m13_7  [key=2, style=dotted];
m13_2264 -> m13_2265  [key=0, style=solid];
m13_2264 -> m13_7  [key=2, style=dotted];
m13_2265 -> m13_2261  [key=0, style=bold, color=blue];
m13_3360 -> m13_3361  [key=0, style=solid];
m13_3361 -> m13_3362  [key=0, style=solid];
m13_3361 -> m13_3347  [key=2, style=dotted];
m13_3362 -> m13_3360  [key=0, style=bold, color=blue];
m13_591 -> m13_592  [key=0, style=solid];
m13_592 -> m13_593  [key=0, style=solid];
m13_592 -> m13_594  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_592 -> m13_595  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_592 -> m13_592  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_593 -> m13_594  [key=0, style=solid];
m13_593 -> m13_441  [key=2, style=dotted];
m13_594 -> m13_595  [key=0, style=solid];
m13_594 -> m13_599  [key=2, style=dotted];
m13_594 -> m13_600  [key=2, style=dotted];
m13_594 -> m13_601  [key=2, style=dotted];
m13_594 -> m13_597  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m13_595 -> m13_596  [key=0, style=solid];
m13_595 -> m13_8  [key=2, style=dotted];
m13_595 -> m13_597  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m13_597 -> m13_598  [key=0, style=solid];
m13_597 -> m13_7  [key=2, style=dotted];
m13_596 -> m13_597  [key=0, style=solid];
m13_596 -> m13_7  [key=2, style=dotted];
m13_598 -> m13_591  [key=0, style=bold, color=blue];
m13_3333 -> m13_3334  [key=0, style=solid];
m13_3333 -> m13_785  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode"];
m13_3334 -> m13_3335  [key=0, style=solid];
m13_3335 -> m13_3333  [key=0, style=bold, color=blue];
m13_2374 -> m13_2375  [key=0, style=solid];
m13_2375 -> m13_2376  [key=0, style=solid];
m13_2375 -> m13_2379  [key=2, style=dotted];
m13_2375 -> m13_634  [key=2, style=dotted];
m13_2376 -> m13_2377  [key=0, style=solid];
m13_2376 -> m13_274  [key=2, style=dotted];
m13_2377 -> m13_2378  [key=0, style=solid];
m13_2377 -> m13_7  [key=2, style=dotted];
m13_2378 -> m13_2374  [key=0, style=bold, color=blue];
m13_3058 -> m13_3059  [key=0, style=solid];
m13_3059 -> m13_3060  [key=0, style=solid];
m13_3059 -> m13_3061  [key=2, style=dotted];
m13_3060 -> m13_3058  [key=0, style=bold, color=blue];
m13_377 -> m13_378  [key=0, style=solid];
m13_378 -> m13_379  [key=0, style=solid];
m13_378 -> m13_382  [key=2, style=dotted];
m13_379 -> m13_380  [key=0, style=solid];
m13_379 -> m13_6  [key=2, style=dotted];
m13_380 -> m13_381  [key=0, style=solid];
m13_380 -> m13_7  [key=2, style=dotted];
m13_381 -> m13_377  [key=0, style=bold, color=blue];
m13_492 -> m13_493  [key=0, style=solid];
m13_493 -> m13_494  [key=0, style=solid];
m13_493 -> m13_483  [key=2, style=dotted];
m13_493 -> m13_495  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m13_493 -> m13_504  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m13_494 -> m13_495  [key=0, style=solid];
m13_494 -> m13_350  [key=2, style=dotted];
m13_494 -> m13_496  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m13_494 -> m13_499  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m13_495 -> m13_496  [key=0, style=solid];
m13_504 -> m13_505  [key=0, style=solid];
m13_504 -> m13_7  [key=2, style=dotted];
m13_496 -> m13_497  [key=0, style=solid];
m13_496 -> m13_6  [key=2, style=dotted];
m13_496 -> m13_502  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m13_499 -> m13_500  [key=0, style=solid];
m13_499 -> m13_443  [key=2, style=dotted];
m13_497 -> m13_498  [key=0, style=solid];
m13_497 -> m13_355  [key=2, style=dotted];
m13_497 -> m13_499  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_497 -> m13_500  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_502 -> m13_503  [key=0, style=solid];
m13_502 -> m13_466  [key=2, style=dotted];
m13_498 -> m13_499  [key=0, style=solid];
m13_498 -> m13_441  [key=2, style=dotted];
m13_500 -> m13_501  [key=0, style=solid];
m13_500 -> m13_444  [key=2, style=dotted];
m13_501 -> m13_502  [key=0, style=solid];
m13_501 -> m13_445  [key=2, style=dotted];
m13_503 -> m13_504  [key=0, style=solid];
m13_505 -> m13_492  [key=0, style=bold, color=blue];
m13_2422 -> m13_2423  [key=0, style=solid];
m13_2423 -> m13_2424  [key=0, style=solid];
m13_2423 -> m13_1922  [key=2, style=dotted];
m13_2424 -> m13_2422  [key=0, style=bold, color=blue];
m13_1662 -> m13_1663  [key=0, style=solid];
m13_1663 -> m13_1664  [key=0, style=solid];
m13_1663 -> m13_1665  [key=2, style=dotted];
m13_1664 -> m13_1662  [key=0, style=bold, color=blue];
m13_1207 -> m13_1208  [key=0, style=solid];
m13_1208 -> m13_1209  [key=0, style=solid];
m13_1208 -> m13_1208  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1209 -> m13_1210  [key=0, style=solid];
m13_1209 -> m13_185  [key=2, style=dotted];
m13_1209 -> m13_863  [key=2, style=dotted];
m13_1209 -> m13_1211  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1209 -> m13_1212  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1209 -> m13_1213  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1209 -> m13_1214  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1209 -> m13_1215  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1209 -> m13_1216  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1209 -> m13_1217  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1209 -> m13_1218  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1209 -> m13_1219  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1210 -> m13_1211  [key=0, style=solid];
m13_1210 -> m13_7  [key=2, style=dotted];
m13_1211 -> m13_1212  [key=0, style=solid];
m13_1211 -> m13_7  [key=2, style=dotted];
m13_1212 -> m13_1213  [key=0, style=solid];
m13_1212 -> m13_7  [key=2, style=dotted];
m13_1213 -> m13_1214  [key=0, style=solid];
m13_1213 -> m13_7  [key=2, style=dotted];
m13_1214 -> m13_1215  [key=0, style=solid];
m13_1214 -> m13_7  [key=2, style=dotted];
m13_1215 -> m13_1216  [key=0, style=solid];
m13_1215 -> m13_1221  [key=2, style=dotted];
m13_1215 -> m13_7  [key=2, style=dotted];
m13_1216 -> m13_1217  [key=0, style=solid];
m13_1216 -> m13_1221  [key=2, style=dotted];
m13_1216 -> m13_7  [key=2, style=dotted];
m13_1217 -> m13_1218  [key=0, style=solid];
m13_1217 -> m13_7  [key=2, style=dotted];
m13_1218 -> m13_1219  [key=0, style=solid];
m13_1218 -> m13_7  [key=2, style=dotted];
m13_1219 -> m13_1220  [key=0, style=solid];
m13_1219 -> m13_316  [key=2, style=dotted];
m13_1220 -> m13_1207  [key=0, style=bold, color=blue];
m13_922 -> m13_923  [key=0, style=solid];
m13_923 -> m13_924  [key=0, style=solid];
m13_923 -> m13_928  [key=2, style=dotted];
m13_923 -> m13_929  [key=2, style=dotted];
m13_923 -> m13_925  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m13_924 -> m13_925  [key=0, style=solid];
m13_925 -> m13_926  [key=0, style=solid];
m13_925 -> m13_6  [key=2, style=dotted];
m13_926 -> m13_927  [key=0, style=solid];
m13_926 -> m13_7  [key=2, style=dotted];
m13_927 -> m13_922  [key=0, style=bold, color=blue];
m13_3085 -> m13_3086  [key=0, style=solid];
m13_3086 -> m13_3087  [key=0, style=solid];
m13_3087 -> m13_3085  [key=0, style=bold, color=blue];
m13_415 -> m13_416  [key=0, style=solid];
m13_416 -> m13_417  [key=0, style=solid];
m13_416 -> m13_424  [key=2, style=dotted];
m13_416 -> m13_418  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_416 -> m13_419  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_416 -> m13_420  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_416 -> m13_421  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_417 -> m13_418  [key=0, style=solid];
m13_418 -> m13_419  [key=0, style=solid];
m13_419 -> m13_420  [key=0, style=solid];
m13_420 -> m13_421  [key=0, style=solid];
m13_421 -> m13_422  [key=0, style=solid];
m13_421 -> m13_393  [key=2, style=dotted];
m13_422 -> m13_423  [key=0, style=solid];
m13_422 -> m13_7  [key=2, style=dotted];
m13_423 -> m13_415  [key=0, style=bold, color=blue];
m13_1927 -> m13_1928  [key=0, style=solid];
m13_1927 -> m13_1930  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m13_1927 -> m13_1931  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m13_1928 -> m13_1929  [key=0, style=solid];
m13_1928 -> m13_1930  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_1930 -> m13_1932  [key=0, style=solid];
m13_1930 -> m13_1933  [key=2, style=dotted];
m13_1930 -> m13_1917  [key=2, style=dotted];
m13_1931 -> m13_1932  [key=0, style=solid];
m13_1931 -> m13_1918  [key=2, style=dotted];
m13_1929 -> m13_1930  [key=0, style=solid];
m13_1929 -> m13_1931  [key=0, style=solid];
m13_1932 -> m13_1927  [key=0, style=bold, color=blue];
m13_1636 -> m13_1637  [key=0, style=solid];
m13_1637 -> m13_1638  [key=0, style=solid];
m13_1637 -> m13_1639  [key=2, style=dotted];
m13_1638 -> m13_1636  [key=0, style=bold, color=blue];
m13_3001 -> m13_3002  [key=0, style=solid];
m13_3002 -> m13_3003  [key=0, style=solid];
m13_3002 -> m13_3009  [key=2, style=dotted];
m13_3003 -> m13_3004  [key=0, style=solid];
m13_3003 -> m13_274  [key=2, style=dotted];
m13_3004 -> m13_3005  [key=0, style=solid];
m13_3004 -> m13_7  [key=2, style=dotted];
m13_3005 -> m13_3006  [key=0, style=solid];
m13_3005 -> m13_3010  [key=2, style=dotted];
m13_3006 -> m13_3007  [key=0, style=solid];
m13_3006 -> m13_274  [key=2, style=dotted];
m13_3007 -> m13_3008  [key=0, style=solid];
m13_3007 -> m13_7  [key=2, style=dotted];
m13_3008 -> m13_3001  [key=0, style=bold, color=blue];
m13_405 -> m13_406  [key=0, style=solid];
m13_406 -> m13_407  [key=0, style=solid];
m13_406 -> m13_414  [key=2, style=dotted];
m13_406 -> m13_408  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_406 -> m13_409  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_406 -> m13_410  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_406 -> m13_411  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_407 -> m13_408  [key=0, style=solid];
m13_408 -> m13_409  [key=0, style=solid];
m13_409 -> m13_410  [key=0, style=solid];
m13_410 -> m13_411  [key=0, style=solid];
m13_411 -> m13_412  [key=0, style=solid];
m13_411 -> m13_393  [key=2, style=dotted];
m13_412 -> m13_413  [key=0, style=solid];
m13_412 -> m13_7  [key=2, style=dotted];
m13_413 -> m13_405  [key=0, style=bold, color=blue];
m13_2001 -> m13_2002  [key=0, style=solid];
m13_2002 -> m13_2003  [key=0, style=solid];
m13_2003 -> m13_2001  [key=0, style=bold, color=blue];
m13_2087 -> m13_2088  [key=0, style=solid];
m13_2088 -> m13_2089  [key=0, style=solid];
m13_2088 -> m13_8  [key=2, style=dotted];
m13_2089 -> m13_2090  [key=0, style=solid];
m13_2089 -> m13_2085  [key=2, style=dotted];
m13_2089 -> m13_483  [key=2, style=dotted];
m13_2089 -> m13_644  [key=2, style=dotted];
m13_2089 -> m13_7  [key=2, style=dotted];
m13_2090 -> m13_2087  [key=0, style=bold, color=blue];
m13_2320 -> m13_2321  [key=0, style=solid];
m13_2321 -> m13_2322  [key=0, style=solid];
m13_2321 -> m13_2321  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2322 -> m13_2323  [key=0, style=solid];
m13_2322 -> m13_8  [key=2, style=dotted];
m13_2322 -> m13_2324  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m13_2322 -> m13_2325  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m13_2323 -> m13_2324  [key=0, style=solid];
m13_2323 -> m13_7  [key=2, style=dotted];
m13_2324 -> m13_2325  [key=0, style=solid];
m13_2324 -> m13_7  [key=2, style=dotted];
m13_2325 -> m13_2326  [key=0, style=solid];
m13_2325 -> m13_7  [key=2, style=dotted];
m13_2326 -> m13_2320  [key=0, style=bold, color=blue];
m13_1846 -> m13_1847  [key=0, style=solid];
m13_1847 -> m13_1846  [key=0, style=bold, color=blue];
m13_1287 -> m13_1288  [key=0, style=solid];
m13_1288 -> m13_1289  [key=0, style=solid];
m13_1288 -> m13_1288  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1289 -> m13_1290  [key=0, style=solid];
m13_1289 -> m13_8  [key=2, style=dotted];
m13_1290 -> m13_1291  [key=0, style=solid];
m13_1290 -> m13_7  [key=2, style=dotted];
m13_1291 -> m13_1287  [key=0, style=bold, color=blue];
m13_3194 -> m13_3195  [key=0, style=solid];
m13_3195 -> m13_3194  [key=0, style=bold, color=blue];
m13_637 -> m13_638  [key=0, style=solid];
m13_638 -> m13_639  [key=0, style=solid];
m13_638 -> m13_633  [key=2, style=dotted];
m13_638 -> m13_642  [key=2, style=dotted];
m13_638 -> m13_634  [key=2, style=dotted];
m13_638 -> m13_643  [key=2, style=dotted];
m13_638 -> m13_644  [key=2, style=dotted];
m13_639 -> m13_640  [key=0, style=solid];
m13_639 -> m13_6  [key=2, style=dotted];
m13_640 -> m13_641  [key=0, style=solid];
m13_640 -> m13_7  [key=2, style=dotted];
m13_641 -> m13_637  [key=0, style=bold, color=blue];
m13_2730 -> m13_2731  [key=0, style=solid];
m13_2731 -> m13_2732  [key=0, style=solid];
m13_2731 -> m13_586  [key=2, style=dotted];
m13_2731 -> m13_2733  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2732 -> m13_2730  [key=0, style=bold, color=blue];
m13_2976 -> m13_2984  [key=0, style=solid];
m13_2976 -> m13_2972  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m13_2984 -> m13_2985  [key=0, style=solid];
m13_2984 -> m13_2053  [key=2, style=dotted];
m13_2984 -> m13_722  [key=2, style=dotted];
m13_2984 -> m13_2987  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m13_2985 -> m13_2986  [key=0, style=solid];
m13_2985 -> m13_116  [key=2, style=dotted];
m13_2985 -> m13_2987  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2987 -> m13_2988  [key=0, style=solid];
m13_2987 -> m13_2054  [key=2, style=dotted];
m13_2986 -> m13_2987  [key=0, style=solid];
m13_2986 -> m13_2983  [key=2, style=dotted];
m13_2988 -> m13_2976  [key=0, style=bold, color=blue];
m13_2682 -> m13_2683  [key=0, style=solid];
m13_2683 -> m13_2684  [key=0, style=solid];
m13_2683 -> m13_2692  [key=2, style=dotted];
m13_2683 -> m13_6  [key=2, style=dotted];
m13_2683 -> m13_2685  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2684 -> m13_2685  [key=0, style=solid];
m13_2684 -> m13_7  [key=2, style=dotted];
m13_2685 -> m13_2686  [key=0, style=solid];
m13_2685 -> m13_8  [key=2, style=dotted];
m13_2686 -> m13_2687  [key=0, style=solid];
m13_2686 -> m13_7  [key=2, style=dotted];
m13_2687 -> m13_2688  [key=0, style=solid];
m13_2687 -> m13_2692  [key=2, style=dotted];
m13_2687 -> m13_6  [key=2, style=dotted];
m13_2687 -> m13_2689  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2688 -> m13_2689  [key=0, style=solid];
m13_2688 -> m13_7  [key=2, style=dotted];
m13_2689 -> m13_2690  [key=0, style=solid];
m13_2689 -> m13_8  [key=2, style=dotted];
m13_2690 -> m13_2691  [key=0, style=solid];
m13_2690 -> m13_7  [key=2, style=dotted];
m13_2691 -> m13_2682  [key=0, style=bold, color=blue];
m13_2232 -> m13_2233  [key=0, style=solid];
m13_2233 -> m13_2232  [key=0, style=bold, color=blue];
m13_645 -> m13_646  [key=0, style=solid];
m13_646 -> m13_647  [key=0, style=solid];
m13_646 -> m13_633  [key=2, style=dotted];
m13_646 -> m13_642  [key=2, style=dotted];
m13_646 -> m13_634  [key=2, style=dotted];
m13_646 -> m13_643  [key=2, style=dotted];
m13_646 -> m13_644  [key=2, style=dotted];
m13_647 -> m13_648  [key=0, style=solid];
m13_647 -> m13_185  [key=2, style=dotted];
m13_647 -> m13_636  [key=2, style=dotted];
m13_648 -> m13_649  [key=0, style=solid];
m13_648 -> m13_7  [key=2, style=dotted];
m13_649 -> m13_645  [key=0, style=bold, color=blue];
m13_3325 -> m13_3326  [key=0, style=solid];
m13_3326 -> m13_3327  [key=0, style=solid];
m13_3326 -> m13_3332  [key=2, style=dotted];
m13_3326 -> m13_3328  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_3327 -> m13_3328  [key=0, style=solid];
m13_3327 -> m13_350  [key=2, style=dotted];
m13_3328 -> m13_3329  [key=0, style=solid];
m13_3328 -> m13_6  [key=2, style=dotted];
m13_3328 -> m13_3330  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3329 -> m13_3330  [key=0, style=solid];
m13_3329 -> m13_364  [key=2, style=dotted];
m13_3330 -> m13_3331  [key=0, style=solid];
m13_3330 -> m13_8  [key=2, style=dotted];
m13_3331 -> m13_3325  [key=0, style=bold, color=blue];
m13_761 -> m13_762  [key=0, style=solid];
m13_762 -> m13_763  [key=0, style=solid];
m13_762 -> m13_764  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_762 -> m13_765  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_763 -> m13_764  [key=0, style=solid];
m13_763 -> m13_185  [key=2, style=dotted];
m13_763 -> m13_765  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_764 -> m13_765  [key=0, style=solid];
m13_764 -> m13_636  [key=2, style=dotted];
m13_764 -> m13_766  [key=1, style=dashed, color=darkseagreen4, label=indented];
m13_765 -> m13_766  [key=0, style=solid];
m13_765 -> m13_768  [key=2, style=dotted];
m13_766 -> m13_767  [key=0, style=solid];
m13_766 -> m13_769  [key=2, style=dotted];
m13_767 -> m13_761  [key=0, style=bold, color=blue];
m13_3263 -> m13_3264  [key=0, style=solid];
m13_3264 -> m13_3265  [key=0, style=solid];
m13_3264 -> m13_3267  [key=2, style=dotted];
m13_3264 -> m13_185  [key=2, style=dotted];
m13_3264 -> m13_1408  [key=2, style=dotted];
m13_3264 -> m13_768  [key=2, style=dotted];
m13_3265 -> m13_3266  [key=0, style=solid];
m13_3265 -> m13_7  [key=2, style=dotted];
m13_3266 -> m13_3263  [key=0, style=bold, color=blue];
m13_2650 -> m13_2651  [key=0, style=solid];
m13_2651 -> m13_2652  [key=0, style=solid];
m13_2651 -> m13_586  [key=2, style=dotted];
m13_2651 -> m13_2653  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2651 -> m13_2651  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2652 -> m13_2650  [key=0, style=bold, color=blue];
m13_2304 -> m13_2305  [key=0, style=solid];
m13_2305 -> m13_2306  [key=0, style=solid];
m13_2305 -> m13_586  [key=2, style=dotted];
m13_2305 -> m13_2307  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2306 -> m13_2304  [key=0, style=bold, color=blue];
m13_1666 -> m13_1667  [key=0, style=solid];
m13_1667 -> m13_1668  [key=0, style=solid];
m13_1667 -> m13_1609  [key=2, style=dotted];
m13_1667 -> m13_1669  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m13_1668 -> m13_1669  [key=0, style=solid];
m13_1668 -> m13_1621  [key=2, style=dotted];
m13_1669 -> m13_1670  [key=0, style=solid];
m13_1669 -> m13_6  [key=2, style=dotted];
m13_1669 -> m13_1671  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1670 -> m13_1671  [key=0, style=solid];
m13_1670 -> m13_7  [key=2, style=dotted];
m13_1671 -> m13_1672  [key=0, style=solid];
m13_1671 -> m13_8  [key=2, style=dotted];
m13_1671 -> m13_1673  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m13_1672 -> m13_1673  [key=0, style=solid];
m13_1672 -> m13_7  [key=2, style=dotted];
m13_1673 -> m13_1674  [key=0, style=solid];
m13_1673 -> m13_7  [key=2, style=dotted];
m13_1674 -> m13_1666  [key=0, style=bold, color=blue];
m13_3062 -> m13_3063  [key=0, style=solid];
m13_3062 -> m13_3059  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m13_3063 -> m13_3064  [key=0, style=solid];
m13_3064 -> m13_3062  [key=0, style=bold, color=blue];
m13_2351 -> m13_2352  [key=0, style=solid];
m13_2352 -> m13_2353  [key=0, style=solid];
m13_2352 -> m13_2350  [key=2, style=dotted];
m13_2352 -> m13_2355  [key=1, style=dashed, color=darkseagreen4, label=cc];
m13_2353 -> m13_2354  [key=0, style=solid];
m13_2353 -> m13_2359  [key=2, style=dotted];
m13_2353 -> m13_2355  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2355 -> m13_2356  [key=0, style=solid];
m13_2355 -> m13_443  [key=2, style=dotted];
m13_2354 -> m13_2355  [key=0, style=solid];
m13_2354 -> m13_355  [key=2, style=dotted];
m13_2354 -> m13_2356  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_2356 -> m13_2357  [key=0, style=solid];
m13_2356 -> m13_444  [key=2, style=dotted];
m13_2356 -> m13_2360  [key=2, style=dotted];
m13_2356 -> m13_445  [key=2, style=dotted];
m13_2357 -> m13_2358  [key=0, style=solid];
m13_2357 -> m13_364  [key=2, style=dotted];
m13_2358 -> m13_2351  [key=0, style=bold, color=blue];
m13_2361 -> m13_2362  [key=0, style=solid];
m13_2362 -> m13_2363  [key=0, style=solid];
m13_2362 -> m13_2366  [key=2, style=dotted];
m13_2363 -> m13_2364  [key=0, style=solid];
m13_2363 -> m13_6  [key=2, style=dotted];
m13_2364 -> m13_2365  [key=0, style=solid];
m13_2364 -> m13_7  [key=2, style=dotted];
m13_2365 -> m13_2361  [key=0, style=bold, color=blue];
m13_3435 -> m13_3436  [key=0, style=solid, color=green];
m13_3435 -> m13_2053  [key=2, style=dotted, color=green];
m13_3435 -> m13_722  [key=2, style=dotted, color=green];
m13_3440 -> m13_3441  [key=0, style=solid, color=green];
m13_3440 -> m13_2053  [key=2, style=dotted, color=green];
m13_3440 -> m13_722  [key=2, style=dotted, color=green];
m13_3440 -> m13_7  [key=2, style=dotted];
m13_3439 -> m13_3440  [key=0, style=solid, color=green];
m13_3439 -> m13_7  [key=2, style=dotted, color=green];
m13_3439 -> m13_636  [key=2, style=dotted];
m13_3439 -> m13_3441  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3439 -> m13_3443  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3436 -> m13_3439  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3436 -> m13_3437  [key=0, style=solid, color=green];
m13_3436 -> m13_2862  [key=2, style=dotted, color=green];
m13_3436 -> m13_3438  [key=1, style=dashed, color=green, label=v];
m13_3436 -> m13_642  [key=2, style=dotted];
m13_3436 -> m13_483  [key=2, style=dotted];
m13_3436 -> m13_3442  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3436 -> m13_3447  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3441 -> m13_3442  [key=0, style=solid, color=green];
m13_3441 -> m13_2862  [key=2, style=dotted, color=green];
m13_3441 -> m13_3443  [key=1, style=dashed, color=green, label=v];
m13_3441 -> m13_3444  [key=1, style=dashed, color=green, label=v];
m13_3441 -> m13_863  [key=2, style=dotted];
m13_3438 -> m13_3439  [key=0, style=solid, color=green];
m13_3438 -> m13_442  [key=2, style=dotted, color=green];
m13_3438 -> m13_7  [key=2, style=dotted, color=green];
m13_3438 -> m13_185  [key=2, style=dotted];
m13_3438 -> m13_3441  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3437 -> m13_3438  [key=0, style=solid, color=green];
m13_3437 -> m13_7  [key=2, style=dotted, color=green];
m13_3437 -> m13_3443  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m13_3437 -> m13_3409  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3442 -> m13_3443  [key=0, style=solid, color=green];
m13_3442 -> m13_7  [key=2, style=dotted, color=green];
m13_3443 -> m13_3444  [key=0, style=solid, color=green];
m13_3443 -> m13_442  [key=2, style=dotted, color=green];
m13_3443 -> m13_7  [key=2, style=dotted, color=green];
m13_3443 -> m13_2053  [key=2, style=dotted];
m13_3443 -> m13_722  [key=2, style=dotted];
m13_3444 -> m13_3445  [key=0, style=solid, color=green];
m13_3444 -> m13_7  [key=2, style=dotted, color=green];
m13_3444 -> m13_2862  [key=2, style=dotted];
m13_3444 -> m13_3446  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3444 -> m13_3447  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3445 -> m13_3426  [key=0, style=bold, color=blue];
m13_3445 -> m13_3446  [key=0, style=solid];
m13_3445 -> m13_7  [key=2, style=dotted];
m13_1427 -> m13_1428  [key=0, style=solid];
m13_1428 -> m13_1429  [key=0, style=solid];
m13_1428 -> m13_633  [key=2, style=dotted];
m13_1428 -> m13_1430  [key=1, style=dashed, color=darkseagreen4, label=strings];
m13_1428 -> m13_1431  [key=1, style=dashed, color=darkseagreen4, label=strings];
m13_1428 -> m13_1432  [key=1, style=dashed, color=darkseagreen4, label=strings];
m13_1429 -> m13_1430  [key=0, style=solid];
m13_1429 -> m13_1435  [key=2, style=dotted];
m13_1430 -> m13_1431  [key=0, style=solid];
m13_1430 -> m13_1435  [key=2, style=dotted];
m13_1431 -> m13_1432  [key=0, style=solid];
m13_1431 -> m13_1435  [key=2, style=dotted];
m13_1432 -> m13_1433  [key=0, style=solid];
m13_1432 -> m13_6  [key=2, style=dotted];
m13_1433 -> m13_1434  [key=0, style=solid];
m13_1433 -> m13_7  [key=2, style=dotted];
m13_1434 -> m13_1427  [key=0, style=bold, color=blue];
m13_1436 -> m13_1437  [key=0, style=solid];
m13_1437 -> m13_1438  [key=0, style=solid];
m13_1437 -> m13_1444  [key=2, style=dotted];
m13_1438 -> m13_1439  [key=0, style=solid];
m13_1438 -> m13_274  [key=2, style=dotted];
m13_1438 -> m13_1440  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1439 -> m13_1440  [key=0, style=solid];
m13_1439 -> m13_7  [key=2, style=dotted];
m13_1440 -> m13_1441  [key=0, style=solid];
m13_1440 -> m13_8  [key=2, style=dotted];
m13_1440 -> m13_1442  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_1441 -> m13_1442  [key=0, style=solid];
m13_1441 -> m13_7  [key=2, style=dotted];
m13_1442 -> m13_1443  [key=0, style=solid];
m13_1442 -> m13_7  [key=2, style=dotted];
m13_1443 -> m13_1436  [key=0, style=bold, color=blue];
m13_2693 -> m13_2694  [key=0, style=solid];
m13_2694 -> m13_2695  [key=0, style=solid];
m13_2694 -> m13_2699  [key=2, style=dotted];
m13_2694 -> m13_2700  [key=2, style=dotted];
m13_2694 -> m13_6  [key=2, style=dotted];
m13_2695 -> m13_2696  [key=0, style=solid];
m13_2695 -> m13_7  [key=2, style=dotted];
m13_2696 -> m13_2697  [key=0, style=solid];
m13_2696 -> m13_8  [key=2, style=dotted];
m13_2697 -> m13_2698  [key=0, style=solid];
m13_2697 -> m13_2700  [key=2, style=dotted];
m13_2697 -> m13_7  [key=2, style=dotted];
m13_2698 -> m13_2693  [key=0, style=bold, color=blue];
m13_2910 -> m13_2911  [key=0, style=solid];
m13_2911 -> m13_2912  [key=0, style=solid];
m13_2911 -> m13_2918  [key=2, style=dotted];
m13_2912 -> m13_2913  [key=0, style=solid];
m13_2912 -> m13_8  [key=2, style=dotted];
m13_2912 -> m13_2914  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2912 -> m13_2915  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2912 -> m13_2916  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2913 -> m13_2914  [key=0, style=solid];
m13_2913 -> m13_316  [key=2, style=dotted];
m13_2914 -> m13_2915  [key=0, style=solid];
m13_2914 -> m13_7  [key=2, style=dotted];
m13_2915 -> m13_2916  [key=0, style=solid];
m13_2915 -> m13_7  [key=2, style=dotted];
m13_2916 -> m13_2917  [key=0, style=solid];
m13_2916 -> m13_7  [key=2, style=dotted];
m13_2917 -> m13_2910  [key=0, style=bold, color=blue];
m13_2763 -> m13_2764  [key=0, style=solid];
m13_2764 -> m13_2765  [key=0, style=solid];
m13_2764 -> m13_185  [key=2, style=dotted];
m13_2764 -> m13_863  [key=2, style=dotted];
m13_2764 -> m13_2766  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2764 -> m13_2767  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2764 -> m13_2768  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2765 -> m13_2766  [key=0, style=solid];
m13_2765 -> m13_2775  [key=2, style=dotted];
m13_2765 -> m13_2776  [key=2, style=dotted];
m13_2765 -> m13_7  [key=2, style=dotted];
m13_2766 -> m13_2767  [key=0, style=solid];
m13_2766 -> m13_2777  [key=2, style=dotted];
m13_2766 -> m13_7  [key=2, style=dotted];
m13_2767 -> m13_2768  [key=0, style=solid];
m13_2767 -> m13_7  [key=2, style=dotted];
m13_2768 -> m13_2769  [key=0, style=solid];
m13_2768 -> m13_7  [key=2, style=dotted];
m13_2769 -> m13_2770  [key=0, style=solid];
m13_2769 -> m13_185  [key=2, style=dotted];
m13_2769 -> m13_863  [key=2, style=dotted];
m13_2769 -> m13_2771  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2769 -> m13_2772  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2769 -> m13_2773  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2770 -> m13_2771  [key=0, style=solid];
m13_2770 -> m13_2775  [key=2, style=dotted];
m13_2770 -> m13_2776  [key=2, style=dotted];
m13_2770 -> m13_7  [key=2, style=dotted];
m13_2771 -> m13_2772  [key=0, style=solid];
m13_2771 -> m13_2777  [key=2, style=dotted];
m13_2771 -> m13_7  [key=2, style=dotted];
m13_2772 -> m13_2773  [key=0, style=solid];
m13_2772 -> m13_7  [key=2, style=dotted];
m13_2773 -> m13_2774  [key=0, style=solid];
m13_2773 -> m13_7  [key=2, style=dotted];
m13_2774 -> m13_2763  [key=0, style=bold, color=blue];
m13_799 -> m13_800  [key=0, style=solid];
m13_800 -> m13_801  [key=0, style=solid];
m13_800 -> m13_806  [key=2, style=dotted];
m13_800 -> m13_6  [key=2, style=dotted];
m13_801 -> m13_802  [key=0, style=solid];
m13_801 -> m13_7  [key=2, style=dotted];
m13_802 -> m13_803  [key=0, style=solid];
m13_802 -> m13_8  [key=2, style=dotted];
m13_802 -> m13_804  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_803 -> m13_804  [key=0, style=solid];
m13_803 -> m13_7  [key=2, style=dotted];
m13_804 -> m13_805  [key=0, style=solid];
m13_804 -> m13_7  [key=2, style=dotted];
m13_805 -> m13_799  [key=0, style=bold, color=blue];
m13_2434 -> m13_2435  [key=0, style=solid];
m13_2435 -> m13_2436  [key=0, style=solid];
m13_2435 -> m13_2440  [key=2, style=dotted];
m13_2435 -> m13_274  [key=2, style=dotted];
m13_2436 -> m13_2437  [key=0, style=solid];
m13_2436 -> m13_7  [key=2, style=dotted];
m13_2437 -> m13_2438  [key=0, style=solid];
m13_2437 -> m13_2441  [key=2, style=dotted];
m13_2437 -> m13_274  [key=2, style=dotted];
m13_2438 -> m13_2439  [key=0, style=solid];
m13_2438 -> m13_7  [key=2, style=dotted];
m13_2439 -> m13_2434  [key=0, style=bold, color=blue];
m13_2327 -> m13_2328  [key=0, style=solid];
m13_2328 -> m13_2329  [key=0, style=solid];
m13_2329 -> m13_2330  [key=0, style=solid];
m13_2330 -> m13_2327  [key=0, style=bold, color=blue];
m13_2257 -> m13_2258  [key=0, style=solid];
m13_2258 -> m13_2259  [key=0, style=solid];
m13_2259 -> m13_2260  [key=0, style=solid];
m13_2260 -> m13_2257  [key=0, style=bold, color=blue];
m13_1382 -> m13_1383  [key=0, style=solid];
m13_1383 -> m13_1384  [key=0, style=solid];
m13_1383 -> m13_1387  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1383 -> m13_1320  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1384 -> m13_1385  [key=0, style=solid];
m13_1384 -> m13_586  [key=2, style=dotted];
m13_1384 -> m13_1386  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1385 -> m13_1382  [key=0, style=bold, color=blue];
m13_2942 -> m13_2943  [key=0, style=solid];
m13_2943 -> m13_2944  [key=0, style=solid];
m13_2943 -> m13_350  [key=2, style=dotted];
m13_2943 -> m13_634  [key=2, style=dotted];
m13_2944 -> m13_2945  [key=0, style=solid];
m13_2944 -> m13_274  [key=2, style=dotted];
m13_2944 -> m13_2946  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2945 -> m13_2946  [key=0, style=solid];
m13_2945 -> m13_7  [key=2, style=dotted];
m13_2946 -> m13_2947  [key=0, style=solid];
m13_2946 -> m13_8  [key=2, style=dotted];
m13_2946 -> m13_2948  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_2946 -> m13_2949  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_2947 -> m13_2948  [key=0, style=solid];
m13_2947 -> m13_7  [key=2, style=dotted];
m13_2948 -> m13_2949  [key=0, style=solid];
m13_2948 -> m13_634  [key=2, style=dotted];
m13_2948 -> m13_7  [key=2, style=dotted];
m13_2949 -> m13_2950  [key=0, style=solid];
m13_2949 -> m13_634  [key=2, style=dotted];
m13_2949 -> m13_7  [key=2, style=dotted];
m13_2950 -> m13_2942  [key=0, style=bold, color=blue];
m13_1277 -> m13_1278  [key=0, style=solid];
m13_1278 -> m13_1279  [key=0, style=solid];
m13_1278 -> m13_1278  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1279 -> m13_1280  [key=0, style=solid];
m13_1279 -> m13_8  [key=2, style=dotted];
m13_1279 -> m13_1281  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1279 -> m13_1282  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1279 -> m13_1283  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1279 -> m13_1284  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1280 -> m13_1281  [key=0, style=solid];
m13_1280 -> m13_1286  [key=2, style=dotted];
m13_1281 -> m13_1282  [key=0, style=solid];
m13_1281 -> m13_364  [key=2, style=dotted];
m13_1282 -> m13_1283  [key=0, style=solid];
m13_1282 -> m13_7  [key=2, style=dotted];
m13_1283 -> m13_1284  [key=0, style=solid];
m13_1283 -> m13_7  [key=2, style=dotted];
m13_1284 -> m13_1285  [key=0, style=solid];
m13_1284 -> m13_7  [key=2, style=dotted];
m13_1285 -> m13_1277  [key=0, style=bold, color=blue];
m13_1541 -> m13_1542  [key=0, style=solid];
m13_1542 -> m13_1543  [key=0, style=solid];
m13_1542 -> m13_274  [key=2, style=dotted];
m13_1543 -> m13_1541  [key=0, style=bold, color=blue];
m13_3407 -> m13_3408  [key=0, style=solid];
m13_3408 -> m13_3409  [key=0, style=solid];
m13_3408 -> m13_483  [key=2, style=dotted];
m13_3408 -> m13_3411  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3408 -> m13_3414  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3408 -> m13_3419  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3409 -> m13_3410  [key=0, style=solid];
m13_3409 -> m13_3415  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m13_3409 -> m13_3420  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m13_3409 -> m13_3409  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3411 -> m13_3412  [key=0, style=solid];
m13_3411 -> m13_636  [key=2, style=dotted];
m13_3411 -> m13_3413  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3411 -> m13_3415  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3414 -> m13_3415  [key=0, style=solid];
m13_3414 -> m13_7  [key=2, style=dotted];
m13_3419 -> m13_3420  [key=0, style=solid];
m13_3419 -> m13_7  [key=2, style=dotted];
m13_3410 -> m13_3411  [key=0, style=solid];
m13_3410 -> m13_185  [key=2, style=dotted];
m13_3410 -> m13_3413  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3415 -> m13_3416  [key=0, style=solid];
m13_3415 -> m13_2053  [key=2, style=dotted];
m13_3415 -> m13_722  [key=2, style=dotted];
m13_3420 -> m13_3421  [key=0, style=solid];
m13_3420 -> m13_2053  [key=2, style=dotted];
m13_3420 -> m13_722  [key=2, style=dotted];
m13_3413 -> m13_3414  [key=0, style=solid];
m13_3413 -> m13_863  [key=2, style=dotted];
m13_3412 -> m13_3413  [key=0, style=solid];
m13_3412 -> m13_7  [key=2, style=dotted];
m13_3416 -> m13_3417  [key=0, style=solid];
m13_3416 -> m13_2862  [key=2, style=dotted];
m13_3416 -> m13_3418  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3416 -> m13_3419  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3417 -> m13_3418  [key=0, style=solid];
m13_3417 -> m13_7  [key=2, style=dotted];
m13_3418 -> m13_3419  [key=0, style=solid];
m13_3418 -> m13_442  [key=2, style=dotted];
m13_3418 -> m13_7  [key=2, style=dotted];
m13_3421 -> m13_3422  [key=0, style=solid];
m13_3421 -> m13_2862  [key=2, style=dotted];
m13_3421 -> m13_3423  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3421 -> m13_3424  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3422 -> m13_3423  [key=0, style=solid];
m13_3422 -> m13_7  [key=2, style=dotted];
m13_3423 -> m13_3424  [key=0, style=solid];
m13_3423 -> m13_442  [key=2, style=dotted];
m13_3423 -> m13_7  [key=2, style=dotted];
m13_3424 -> m13_3425  [key=0, style=solid];
m13_3424 -> m13_7  [key=2, style=dotted];
m13_3425 -> m13_3407  [key=0, style=bold, color=blue];
m13_2149 -> m13_2150  [key=0, style=solid];
m13_2150 -> m13_2151  [key=0, style=solid];
m13_2150 -> m13_2150  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2151 -> m13_2152  [key=0, style=solid];
m13_2151 -> m13_8  [key=2, style=dotted];
m13_2152 -> m13_2153  [key=0, style=solid];
m13_2152 -> m13_7  [key=2, style=dotted];
m13_2153 -> m13_2149  [key=0, style=bold, color=blue];
m13_1308 -> m13_1309  [key=0, style=solid];
m13_1309 -> m13_1310  [key=0, style=solid];
m13_1309 -> m13_1309  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1310 -> m13_1311  [key=0, style=solid];
m13_1310 -> m13_8  [key=2, style=dotted];
m13_1311 -> m13_1308  [key=0, style=bold, color=blue];
m13_824 -> m13_825  [key=0, style=solid];
m13_825 -> m13_826  [key=0, style=solid];
m13_825 -> m13_823  [key=2, style=dotted];
m13_826 -> m13_827  [key=0, style=solid];
m13_826 -> m13_831  [key=2, style=dotted];
m13_826 -> m13_832  [key=2, style=dotted];
m13_826 -> m13_828  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_827 -> m13_828  [key=0, style=solid];
m13_827 -> m13_7  [key=2, style=dotted];
m13_828 -> m13_829  [key=0, style=solid];
m13_828 -> m13_831  [key=2, style=dotted];
m13_828 -> m13_833  [key=2, style=dotted];
m13_829 -> m13_830  [key=0, style=solid];
m13_829 -> m13_7  [key=2, style=dotted];
m13_830 -> m13_824  [key=0, style=bold, color=blue];
m13_3127 -> m13_3128  [key=0, style=solid];
m13_3128 -> m13_3129  [key=0, style=solid];
m13_3128 -> m13_3134  [key=2, style=dotted];
m13_3129 -> m13_3130  [key=0, style=solid];
m13_3129 -> m13_185  [key=2, style=dotted];
m13_3129 -> m13_3135  [key=2, style=dotted];
m13_3129 -> m13_636  [key=2, style=dotted];
m13_3129 -> m13_3131  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3130 -> m13_3131  [key=0, style=solid];
m13_3130 -> m13_7  [key=2, style=dotted];
m13_3131 -> m13_3132  [key=0, style=solid];
m13_3131 -> m13_185  [key=2, style=dotted];
m13_3131 -> m13_3135  [key=2, style=dotted];
m13_3131 -> m13_863  [key=2, style=dotted];
m13_3132 -> m13_3133  [key=0, style=solid];
m13_3132 -> m13_7  [key=2, style=dotted];
m13_3133 -> m13_3127  [key=0, style=bold, color=blue];
m13_938 -> m13_939  [key=0, style=solid];
m13_939 -> m13_940  [key=0, style=solid];
m13_939 -> m13_951  [key=2, style=dotted];
m13_939 -> m13_782  [key=2, style=dotted];
m13_940 -> m13_941  [key=0, style=solid];
m13_940 -> m13_6  [key=2, style=dotted];
m13_940 -> m13_942  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_941 -> m13_942  [key=0, style=solid];
m13_941 -> m13_7  [key=2, style=dotted];
m13_942 -> m13_943  [key=0, style=solid];
m13_942 -> m13_8  [key=2, style=dotted];
m13_942 -> m13_944  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_942 -> m13_945  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_942 -> m13_946  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_942 -> m13_947  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_942 -> m13_948  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_942 -> m13_949  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_943 -> m13_944  [key=0, style=solid];
m13_943 -> m13_782  [key=2, style=dotted];
m13_943 -> m13_7  [key=2, style=dotted];
m13_944 -> m13_945  [key=0, style=solid];
m13_944 -> m13_7  [key=2, style=dotted];
m13_945 -> m13_946  [key=0, style=solid];
m13_945 -> m13_7  [key=2, style=dotted];
m13_946 -> m13_947  [key=0, style=solid];
m13_946 -> m13_7  [key=2, style=dotted];
m13_947 -> m13_948  [key=0, style=solid];
m13_947 -> m13_7  [key=2, style=dotted];
m13_948 -> m13_949  [key=0, style=solid];
m13_948 -> m13_7  [key=2, style=dotted];
m13_949 -> m13_950  [key=0, style=solid];
m13_949 -> m13_7  [key=2, style=dotted];
m13_950 -> m13_938  [key=0, style=bold, color=blue];
m13_1421 -> m13_1422  [key=0, style=solid];
m13_1422 -> m13_1423  [key=0, style=solid];
m13_1422 -> m13_586  [key=2, style=dotted];
m13_1422 -> m13_1424  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1423 -> m13_1421  [key=0, style=bold, color=blue];
m13_2453 -> m13_2454  [key=0, style=solid];
m13_2454 -> m13_2455  [key=0, style=solid];
m13_2454 -> m13_2442  [key=2, style=dotted];
m13_2455 -> m13_2456  [key=0, style=solid];
m13_2455 -> m13_274  [key=2, style=dotted];
m13_2455 -> m13_2457  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2456 -> m13_2457  [key=0, style=solid];
m13_2456 -> m13_7  [key=2, style=dotted];
m13_2457 -> m13_2458  [key=0, style=solid];
m13_2457 -> m13_8  [key=2, style=dotted];
m13_2458 -> m13_2459  [key=0, style=solid];
m13_2458 -> m13_2450  [key=2, style=dotted];
m13_2458 -> m13_7  [key=2, style=dotted];
m13_2459 -> m13_2453  [key=0, style=bold, color=blue];
m13_3185 -> m13_3186  [key=0, style=solid];
m13_3186 -> m13_3187  [key=0, style=solid];
m13_3186 -> m13_2524  [key=2, style=dotted];
m13_3186 -> m13_3191  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_3187 -> m13_3188  [key=0, style=solid];
m13_3187 -> m13_2525  [key=2, style=dotted];
m13_3187 -> m13_3189  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3187 -> m13_3190  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3191 -> m13_3192  [key=0, style=solid];
m13_3191 -> m13_2529  [key=2, style=dotted];
m13_3188 -> m13_3189  [key=0, style=solid];
m13_3188 -> m13_185  [key=2, style=dotted];
m13_3188 -> m13_354  [key=2, style=dotted];
m13_3189 -> m13_3190  [key=0, style=solid];
m13_3189 -> m13_2561  [key=2, style=dotted];
m13_3190 -> m13_3191  [key=0, style=solid];
m13_3190 -> m13_7  [key=2, style=dotted];
m13_3192 -> m13_3193  [key=0, style=solid];
m13_3192 -> m13_7  [key=2, style=dotted];
m13_3193 -> m13_3185  [key=0, style=bold, color=blue];
m13_1368 -> m13_1369  [key=0, style=solid];
m13_1369 -> m13_1370  [key=0, style=solid];
m13_1369 -> m13_1373  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1369 -> m13_1369  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1370 -> m13_1371  [key=0, style=solid];
m13_1370 -> m13_586  [key=2, style=dotted];
m13_1370 -> m13_1372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1371 -> m13_1368  [key=0, style=bold, color=blue];
m13_266 -> m13_267  [key=0, style=solid];
m13_267 -> m13_268  [key=0, style=solid];
m13_267 -> m13_273  [key=2, style=dotted];
m13_268 -> m13_269  [key=0, style=solid];
m13_268 -> m13_274  [key=2, style=dotted];
m13_269 -> m13_270  [key=0, style=solid];
m13_269 -> m13_8  [key=2, style=dotted];
m13_269 -> m13_271  [key=1, style=dashed, color=darkseagreen4, label=r2];
m13_270 -> m13_271  [key=0, style=solid];
m13_270 -> m13_275  [key=2, style=dotted];
m13_270 -> m13_7  [key=2, style=dotted];
m13_271 -> m13_272  [key=0, style=solid];
m13_271 -> m13_7  [key=2, style=dotted];
m13_272 -> m13_266  [key=0, style=bold, color=blue];
m13_1168 -> m13_1169  [key=0, style=solid];
m13_1169 -> m13_1170  [key=0, style=solid];
m13_1169 -> m13_1180  [key=2, style=dotted];
m13_1169 -> m13_1171  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m13_1169 -> m13_1172  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m13_1169 -> m13_1173  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m13_1170 -> m13_1171  [key=0, style=solid];
m13_1171 -> m13_1172  [key=0, style=solid];
m13_1172 -> m13_1173  [key=0, style=solid];
m13_1173 -> m13_1174  [key=0, style=solid];
m13_1173 -> m13_274  [key=2, style=dotted];
m13_1174 -> m13_1175  [key=0, style=solid];
m13_1174 -> m13_7  [key=2, style=dotted];
m13_1175 -> m13_1176  [key=0, style=solid];
m13_1175 -> m13_8  [key=2, style=dotted];
m13_1175 -> m13_1177  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m13_1175 -> m13_1178  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m13_1176 -> m13_1177  [key=0, style=solid];
m13_1176 -> m13_7  [key=2, style=dotted];
m13_1177 -> m13_1178  [key=0, style=solid];
m13_1177 -> m13_7  [key=2, style=dotted];
m13_1178 -> m13_1179  [key=0, style=solid];
m13_1178 -> m13_7  [key=2, style=dotted];
m13_1179 -> m13_1168  [key=0, style=bold, color=blue];
m13_1054 -> m13_1055  [key=0, style=solid];
m13_1054 -> m13_1062  [key=2, style=dotted];
m13_1054 -> m13_634  [key=2, style=dotted];
m13_1054 -> m13_1056  [key=1, style=dashed, color=darkseagreen4, label=entry];
m13_1054 -> m13_1057  [key=1, style=dashed, color=darkseagreen4, label=entry];
m13_1053 -> m13_1054  [key=0, style=solid];
m13_1055 -> m13_1056  [key=0, style=solid];
m13_1055 -> m13_6  [key=2, style=dotted];
m13_1055 -> m13_1058  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m13_1056 -> m13_1057  [key=0, style=solid];
m13_1056 -> m13_683  [key=2, style=dotted];
m13_1056 -> m13_832  [key=2, style=dotted];
m13_1056 -> m13_1059  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m13_1057 -> m13_1058  [key=0, style=solid];
m13_1057 -> m13_882  [key=2, style=dotted];
m13_1057 -> m13_832  [key=2, style=dotted];
m13_1057 -> m13_1060  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m13_1058 -> m13_1059  [key=0, style=solid];
m13_1058 -> m13_364  [key=2, style=dotted];
m13_1059 -> m13_1060  [key=0, style=solid];
m13_1059 -> m13_364  [key=2, style=dotted];
m13_1060 -> m13_1061  [key=0, style=solid];
m13_1060 -> m13_364  [key=2, style=dotted];
m13_1061 -> m13_1053  [key=0, style=bold, color=blue];
m13_506 -> m13_507  [key=0, style=solid];
m13_507 -> m13_508  [key=0, style=solid];
m13_507 -> m13_519  [key=2, style=dotted];
m13_507 -> m13_509  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m13_507 -> m13_510  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m13_507 -> m13_511  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m13_507 -> m13_513  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m13_508 -> m13_509  [key=0, style=solid];
m13_509 -> m13_510  [key=0, style=solid];
m13_510 -> m13_511  [key=0, style=solid];
m13_511 -> m13_512  [key=0, style=solid];
m13_511 -> m13_6  [key=2, style=dotted];
m13_513 -> m13_514  [key=0, style=solid];
m13_513 -> m13_520  [key=2, style=dotted];
m13_512 -> m13_513  [key=0, style=solid];
m13_512 -> m13_466  [key=2, style=dotted];
m13_512 -> m13_514  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m13_512 -> m13_515  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m13_512 -> m13_516  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m13_512 -> m13_517  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m13_514 -> m13_515  [key=0, style=solid];
m13_514 -> m13_7  [key=2, style=dotted];
m13_515 -> m13_516  [key=0, style=solid];
m13_515 -> m13_7  [key=2, style=dotted];
m13_516 -> m13_517  [key=0, style=solid];
m13_516 -> m13_521  [key=2, style=dotted];
m13_517 -> m13_518  [key=0, style=solid];
m13_517 -> m13_7  [key=2, style=dotted];
m13_518 -> m13_506  [key=0, style=bold, color=blue];
m13_297 -> m13_298  [key=0, style=solid];
m13_298 -> m13_299  [key=0, style=solid];
m13_298 -> m13_293  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_299 -> m13_300  [key=0, style=solid];
m13_299 -> m13_8  [key=2, style=dotted];
m13_300 -> m13_301  [key=0, style=solid];
m13_300 -> m13_7  [key=2, style=dotted];
m13_301 -> m13_297  [key=0, style=bold, color=blue];
m13_2815 -> m13_2816  [key=0, style=solid];
m13_2815 -> m13_2818  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m13_2816 -> m13_2817  [key=0, style=solid];
m13_2818 -> m13_2819  [key=0, style=solid];
m13_2818 -> m13_2820  [key=2, style=dotted];
m13_2818 -> m13_1884  [key=2, style=dotted];
m13_2818 -> m13_2821  [key=2, style=dotted];
m13_2818 -> m13_2822  [key=2, style=dotted];
m13_2817 -> m13_2818  [key=0, style=solid];
m13_2819 -> m13_2815  [key=0, style=bold, color=blue];
m13_3384 -> m13_3385  [key=0, style=solid];
m13_3385 -> m13_3386  [key=0, style=solid];
m13_3385 -> m13_3347  [key=2, style=dotted];
m13_3386 -> m13_3384  [key=0, style=bold, color=blue];
m13_2066 -> m13_2067  [key=0, style=solid];
m13_2067 -> m13_2068  [key=0, style=solid];
m13_2067 -> m13_2073  [key=2, style=dotted];
m13_2068 -> m13_2069  [key=0, style=solid];
m13_2068 -> m13_274  [key=2, style=dotted];
m13_2068 -> m13_2070  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2069 -> m13_2070  [key=0, style=solid];
m13_2069 -> m13_7  [key=2, style=dotted];
m13_2070 -> m13_2071  [key=0, style=solid];
m13_2070 -> m13_8  [key=2, style=dotted];
m13_2071 -> m13_2072  [key=0, style=solid];
m13_2071 -> m13_7  [key=2, style=dotted];
m13_2071 -> m13_2071  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m13_2072 -> m13_2066  [key=0, style=bold, color=blue];
m13_1090 -> m13_1091  [key=0, style=solid];
m13_1091 -> m13_1092  [key=0, style=solid];
m13_1091 -> m13_1095  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1091 -> m13_1091  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1092 -> m13_1093  [key=0, style=solid];
m13_1092 -> m13_185  [key=2, style=dotted];
m13_1092 -> m13_863  [key=2, style=dotted];
m13_1092 -> m13_1094  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1095 -> m13_1096  [key=0, style=solid];
m13_1095 -> m13_185  [key=2, style=dotted];
m13_1095 -> m13_863  [key=2, style=dotted];
m13_1095 -> m13_1097  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1093 -> m13_1094  [key=0, style=solid];
m13_1093 -> m13_7  [key=2, style=dotted];
m13_1094 -> m13_1095  [key=0, style=solid];
m13_1094 -> m13_7  [key=2, style=dotted];
m13_1096 -> m13_1097  [key=0, style=solid];
m13_1096 -> m13_7  [key=2, style=dotted];
m13_1097 -> m13_1098  [key=0, style=solid];
m13_1097 -> m13_7  [key=2, style=dotted];
m13_1098 -> m13_1090  [key=0, style=bold, color=blue];
m13_2310 -> m13_2311  [key=0, style=solid];
m13_2311 -> m13_2312  [key=0, style=solid];
m13_2311 -> m13_466  [key=2, style=dotted];
m13_2312 -> m13_2313  [key=0, style=solid];
m13_2312 -> m13_1885  [key=2, style=dotted];
m13_2313 -> m13_2310  [key=0, style=bold, color=blue];
m13_2996 -> m13_2997  [key=0, style=solid];
m13_2997 -> m13_2998  [key=0, style=solid];
m13_2997 -> m13_3000  [key=2, style=dotted];
m13_2997 -> m13_274  [key=2, style=dotted];
m13_2998 -> m13_2999  [key=0, style=solid];
m13_2998 -> m13_7  [key=2, style=dotted];
m13_2999 -> m13_2996  [key=0, style=bold, color=blue];
m13_2583 -> m13_2584  [key=0, style=solid];
m13_2584 -> m13_2585  [key=0, style=solid];
m13_2584 -> m13_633  [key=2, style=dotted];
m13_2584 -> m13_2587  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2584 -> m13_2588  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2585 -> m13_2586  [key=0, style=solid];
m13_2585 -> m13_6  [key=2, style=dotted];
m13_2587 -> m13_2588  [key=0, style=solid];
m13_2587 -> m13_7  [key=2, style=dotted];
m13_2588 -> m13_2589  [key=0, style=solid];
m13_2588 -> m13_7  [key=2, style=dotted];
m13_2586 -> m13_2587  [key=0, style=solid];
m13_2586 -> m13_8  [key=2, style=dotted];
m13_2586 -> m13_2588  [key=1, style=dashed, color=darkseagreen4, label=d2];
m13_2589 -> m13_2583  [key=0, style=bold, color=blue];
m13_3196 -> m13_3197  [key=0, style=solid];
m13_3197 -> m13_3198  [key=0, style=solid];
m13_3197 -> m13_586  [key=2, style=dotted];
m13_3197 -> m13_3199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3198 -> m13_3196  [key=0, style=bold, color=blue];
m13_3102 -> m13_3103  [key=0, style=solid];
m13_3103 -> m13_3104  [key=0, style=solid];
m13_3103 -> m13_3103  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3104 -> m13_3105  [key=0, style=solid];
m13_3104 -> m13_8  [key=2, style=dotted];
m13_3105 -> m13_3106  [key=0, style=solid];
m13_3106 -> m13_3107  [key=0, style=solid];
m13_3106 -> m13_7  [key=2, style=dotted];
m13_3107 -> m13_3102  [key=0, style=bold, color=blue];
m13_290 -> m13_291  [key=0, style=solid];
m13_291 -> m13_292  [key=0, style=solid];
m13_291 -> m13_296  [key=2, style=dotted];
m13_292 -> m13_293  [key=0, style=solid];
m13_292 -> m13_6  [key=2, style=dotted];
m13_292 -> m13_294  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_293 -> m13_294  [key=0, style=solid];
m13_293 -> m13_293  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m13_294 -> m13_295  [key=0, style=solid];
m13_294 -> m13_7  [key=2, style=dotted];
m13_295 -> m13_290  [key=0, style=bold, color=blue];
m13_2091 -> m13_2092  [key=0, style=solid];
m13_2092 -> m13_2093  [key=0, style=solid];
m13_2092 -> m13_2084  [key=2, style=dotted];
m13_2092 -> m13_2085  [key=2, style=dotted];
m13_2092 -> m13_483  [key=2, style=dotted];
m13_2092 -> m13_644  [key=2, style=dotted];
m13_2092 -> m13_185  [key=2, style=dotted];
m13_2092 -> m13_768  [key=2, style=dotted];
m13_2092 -> m13_2094  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m13_2093 -> m13_2094  [key=0, style=solid];
m13_2093 -> m13_7  [key=2, style=dotted];
m13_2094 -> m13_2095  [key=0, style=solid];
m13_2094 -> m13_2053  [key=2, style=dotted];
m13_2094 -> m13_722  [key=2, style=dotted];
m13_2094 -> m13_2097  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2095 -> m13_2096  [key=0, style=solid];
m13_2095 -> m13_116  [key=2, style=dotted];
m13_2095 -> m13_2097  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2097 -> m13_2098  [key=0, style=solid];
m13_2097 -> m13_2086  [key=2, style=dotted];
m13_2097 -> m13_2099  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m13_2096 -> m13_2097  [key=0, style=solid];
m13_2098 -> m13_2099  [key=0, style=solid];
m13_2098 -> m13_644  [key=2, style=dotted];
m13_2098 -> m13_7  [key=2, style=dotted];
m13_2099 -> m13_2100  [key=0, style=solid];
m13_2099 -> m13_483  [key=2, style=dotted];
m13_2099 -> m13_7  [key=2, style=dotted];
m13_2100 -> m13_2091  [key=0, style=bold, color=blue];
m13_930 -> m13_931  [key=0, style=solid];
m13_931 -> m13_932  [key=0, style=solid];
m13_931 -> m13_931  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_932 -> m13_933  [key=0, style=solid];
m13_932 -> m13_8  [key=2, style=dotted];
m13_932 -> m13_934  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m13_932 -> m13_935  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m13_933 -> m13_934  [key=0, style=solid];
m13_933 -> m13_7  [key=2, style=dotted];
m13_934 -> m13_935  [key=0, style=solid];
m13_934 -> m13_937  [key=2, style=dotted];
m13_934 -> m13_7  [key=2, style=dotted];
m13_935 -> m13_936  [key=0, style=solid];
m13_935 -> m13_7  [key=2, style=dotted];
m13_936 -> m13_930  [key=0, style=bold, color=blue];
m13_1811 -> m13_1848  [key=0, style=solid];
m13_1811 -> m13_1849  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1811 -> m13_1850  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1811 -> m13_1851  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1811 -> m13_1852  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1811 -> m13_1853  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1811 -> m13_1854  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1811 -> m13_1855  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1848 -> m13_1849  [key=0, style=solid];
m13_1849 -> m13_1850  [key=0, style=solid];
m13_1850 -> m13_1851  [key=0, style=solid];
m13_1851 -> m13_1852  [key=0, style=solid];
m13_1852 -> m13_1853  [key=0, style=solid];
m13_1853 -> m13_1854  [key=0, style=solid];
m13_1854 -> m13_1855  [key=0, style=solid];
m13_1855 -> m13_1856  [key=0, style=solid];
m13_1856 -> m13_1811  [key=0, style=bold, color=blue];
m13_2017 -> m13_2018  [key=0, style=solid];
m13_2018 -> m13_2019  [key=0, style=solid];
m13_2018 -> m13_274  [key=2, style=dotted];
m13_2019 -> m13_2020  [key=0, style=solid];
m13_2019 -> m13_7  [key=2, style=dotted];
m13_2020 -> m13_2017  [key=0, style=bold, color=blue];
m13_807 -> m13_808  [key=0, style=solid];
m13_808 -> m13_809  [key=0, style=solid];
m13_808 -> m13_815  [key=2, style=dotted];
m13_809 -> m13_810  [key=0, style=solid];
m13_809 -> m13_6  [key=2, style=dotted];
m13_810 -> m13_811  [key=0, style=solid];
m13_810 -> m13_8  [key=2, style=dotted];
m13_810 -> m13_812  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_810 -> m13_813  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_811 -> m13_812  [key=0, style=solid];
m13_811 -> m13_7  [key=2, style=dotted];
m13_812 -> m13_813  [key=0, style=solid];
m13_812 -> m13_7  [key=2, style=dotted];
m13_813 -> m13_814  [key=0, style=solid];
m13_813 -> m13_7  [key=2, style=dotted];
m13_814 -> m13_807  [key=0, style=bold, color=blue];
m13_2055 -> m13_2056  [key=0, style=solid];
m13_2056 -> m13_2057  [key=0, style=solid];
m13_2056 -> m13_2059  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m13_2057 -> m13_2058  [key=0, style=solid];
m13_2057 -> m13_2061  [key=2, style=dotted];
m13_2057 -> m13_2062  [key=2, style=dotted];
m13_2059 -> m13_2060  [key=0, style=solid];
m13_2059 -> m13_586  [key=2, style=dotted];
m13_2059 -> m13_2063  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2058 -> m13_2059  [key=0, style=solid];
m13_2058 -> m13_274  [key=2, style=dotted];
m13_2058 -> m13_2064  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2060 -> m13_2055  [key=0, style=bold, color=blue];
m13_775 -> m13_776  [key=0, style=solid];
m13_776 -> m13_777  [key=0, style=solid];
m13_776 -> m13_782  [key=2, style=dotted];
m13_776 -> m13_780  [key=1, style=dashed, color=darkseagreen4, label=guid];
m13_777 -> m13_778  [key=0, style=solid];
m13_777 -> m13_783  [key=2, style=dotted];
m13_777 -> m13_6  [key=2, style=dotted];
m13_777 -> m13_779  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_780 -> m13_781  [key=0, style=solid];
m13_780 -> m13_7  [key=2, style=dotted];
m13_778 -> m13_779  [key=0, style=solid];
m13_778 -> m13_7  [key=2, style=dotted];
m13_779 -> m13_780  [key=0, style=solid];
m13_779 -> m13_8  [key=2, style=dotted];
m13_781 -> m13_775  [key=0, style=bold, color=blue];
m13_2179 -> m13_2180  [key=0, style=solid];
m13_2180 -> m13_2181  [key=0, style=solid];
m13_2181 -> m13_2179  [key=0, style=bold, color=blue];
m13_2752 -> m13_2753  [key=0, style=solid];
m13_2753 -> m13_2754  [key=0, style=solid];
m13_2753 -> m13_586  [key=2, style=dotted];
m13_2753 -> m13_2755  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2754 -> m13_2752  [key=0, style=bold, color=blue];
m13_685 -> m13_686  [key=0, style=solid];
m13_686 -> m13_687  [key=0, style=solid];
m13_686 -> m13_689  [key=2, style=dotted];
m13_686 -> m13_6  [key=2, style=dotted];
m13_687 -> m13_688  [key=0, style=solid];
m13_687 -> m13_7  [key=2, style=dotted];
m13_688 -> m13_685  [key=0, style=bold, color=blue];
m13_2004 -> m13_2005  [key=0, style=solid];
m13_2005 -> m13_2006  [key=0, style=solid];
m13_2005 -> m13_2007  [key=2, style=dotted];
m13_2006 -> m13_2004  [key=0, style=bold, color=blue];
m13_2345 -> m13_2346  [key=0, style=solid];
m13_2346 -> m13_2347  [key=0, style=solid];
m13_2346 -> m13_2350  [key=2, style=dotted];
m13_2347 -> m13_2348  [key=0, style=solid];
m13_2347 -> m13_274  [key=2, style=dotted];
m13_2348 -> m13_2349  [key=0, style=solid];
m13_2348 -> m13_364  [key=2, style=dotted];
m13_2349 -> m13_2345  [key=0, style=bold, color=blue];
m13_1087 -> m13_1088  [key=0, style=solid];
m13_1088 -> m13_1089  [key=0, style=solid];
m13_1089 -> m13_1087  [key=0, style=bold, color=blue];
m13_2266 -> m13_2267  [key=0, style=solid];
m13_2267 -> m13_2268  [key=0, style=solid];
m13_2268 -> m13_2269  [key=0, style=solid];
m13_2269 -> m13_2266  [key=0, style=bold, color=blue];
m13_740 -> m13_741  [key=0, style=solid];
m13_741 -> m13_742  [key=0, style=solid];
m13_741 -> m13_750  [key=2, style=dotted];
m13_741 -> m13_274  [key=2, style=dotted];
m13_741 -> m13_744  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_741 -> m13_745  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_742 -> m13_743  [key=0, style=solid];
m13_742 -> m13_2747  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m13_744 -> m13_745  [key=0, style=solid];
m13_744 -> m13_7  [key=2, style=dotted];
m13_745 -> m13_746  [key=0, style=solid];
m13_745 -> m13_8  [key=2, style=dotted];
m13_745 -> m13_747  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_745 -> m13_748  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_743 -> m13_744  [key=0, style=solid];
m13_746 -> m13_747  [key=0, style=solid];
m13_746 -> m13_7  [key=2, style=dotted];
m13_747 -> m13_748  [key=0, style=solid];
m13_747 -> m13_7  [key=2, style=dotted];
m13_748 -> m13_749  [key=0, style=solid];
m13_748 -> m13_7  [key=2, style=dotted];
m13_749 -> m13_740  [key=0, style=bold, color=blue];
m13_2042 -> m13_2043  [key=0, style=solid];
m13_2043 -> m13_2044  [key=0, style=solid];
m13_2043 -> m13_116  [key=2, style=dotted];
m13_2043 -> m13_2045  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m13_2043 -> m13_2048  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m13_2044 -> m13_2045  [key=0, style=solid];
m13_2044 -> m13_683  [key=2, style=dotted];
m13_2044 -> m13_121  [key=2, style=dotted];
m13_2045 -> m13_2046  [key=0, style=solid];
m13_2048 -> m13_2049  [key=0, style=solid];
m13_2048 -> m13_2054  [key=2, style=dotted];
m13_2048 -> m13_2050  [key=1, style=dashed, color=darkseagreen4, label=z];
m13_2048 -> m13_2051  [key=1, style=dashed, color=darkseagreen4, label=z];
m13_2046 -> m13_2047  [key=0, style=solid];
m13_2046 -> m13_2046  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2047 -> m13_2048  [key=0, style=solid];
m13_2047 -> m13_2053  [key=2, style=dotted];
m13_2047 -> m13_722  [key=2, style=dotted];
m13_2049 -> m13_2050  [key=0, style=solid];
m13_2049 -> m13_7  [key=2, style=dotted];
m13_2050 -> m13_2051  [key=0, style=solid];
m13_2050 -> m13_7  [key=2, style=dotted];
m13_2051 -> m13_2052  [key=0, style=solid];
m13_2051 -> m13_7  [key=2, style=dotted];
m13_2052 -> m13_2042  [key=0, style=bold, color=blue];
m13_1232 -> m13_1233  [key=0, style=solid];
m13_1233 -> m13_1234  [key=0, style=solid];
m13_1233 -> m13_1233  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1234 -> m13_1235  [key=0, style=solid];
m13_1234 -> m13_446  [key=2, style=dotted];
m13_1235 -> m13_1236  [key=0, style=solid];
m13_1235 -> m13_289  [key=2, style=dotted];
m13_1235 -> m13_8  [key=2, style=dotted];
m13_1235 -> m13_1237  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1235 -> m13_1238  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1235 -> m13_1239  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1236 -> m13_1237  [key=0, style=solid];
m13_1236 -> m13_316  [key=2, style=dotted];
m13_1237 -> m13_1238  [key=0, style=solid];
m13_1237 -> m13_7  [key=2, style=dotted];
m13_1238 -> m13_1239  [key=0, style=solid];
m13_1238 -> m13_7  [key=2, style=dotted];
m13_1239 -> m13_1240  [key=0, style=solid];
m13_1239 -> m13_7  [key=2, style=dotted];
m13_1240 -> m13_1232  [key=0, style=bold, color=blue];
m13_2565 -> m13_2566  [key=0, style=solid];
m13_2566 -> m13_2567  [key=0, style=solid];
m13_2567 -> m13_2568  [key=0, style=solid];
m13_2567 -> m13_2575  [key=2, style=dotted];
m13_2567 -> m13_2569  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m13_2568 -> m13_2569  [key=0, style=solid];
m13_2569 -> m13_2570  [key=0, style=solid];
m13_2570 -> m13_2571  [key=0, style=solid];
m13_2570 -> m13_2570  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2571 -> m13_2572  [key=0, style=solid];
m13_2571 -> m13_8  [key=2, style=dotted];
m13_2571 -> m13_2573  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2572 -> m13_2573  [key=0, style=solid];
m13_2572 -> m13_7  [key=2, style=dotted];
m13_2573 -> m13_2574  [key=0, style=solid];
m13_2573 -> m13_7  [key=2, style=dotted];
m13_2574 -> m13_2565  [key=0, style=bold, color=blue];
m13_1063 -> m13_1064  [key=0, style=solid];
m13_1064 -> m13_1065  [key=0, style=solid];
m13_1064 -> m13_1076  [key=2, style=dotted];
m13_1064 -> m13_1066  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1064 -> m13_1067  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1064 -> m13_1068  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1064 -> m13_1072  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1064 -> m13_1073  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1064 -> m13_1074  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1065 -> m13_1066  [key=0, style=solid];
m13_1065 -> m13_350  [key=2, style=dotted];
m13_1066 -> m13_1067  [key=0, style=solid];
m13_1066 -> m13_633  [key=2, style=dotted];
m13_1067 -> m13_1068  [key=0, style=solid];
m13_1067 -> m13_633  [key=2, style=dotted];
m13_1068 -> m13_1069  [key=0, style=solid];
m13_1068 -> m13_274  [key=2, style=dotted];
m13_1068 -> m13_1070  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1072 -> m13_1073  [key=0, style=solid];
m13_1072 -> m13_1077  [key=2, style=dotted];
m13_1072 -> m13_7  [key=2, style=dotted];
m13_1073 -> m13_1074  [key=0, style=solid];
m13_1073 -> m13_1077  [key=2, style=dotted];
m13_1073 -> m13_7  [key=2, style=dotted];
m13_1074 -> m13_1075  [key=0, style=solid];
m13_1074 -> m13_1077  [key=2, style=dotted];
m13_1074 -> m13_7  [key=2, style=dotted];
m13_1069 -> m13_1070  [key=0, style=solid];
m13_1069 -> m13_7  [key=2, style=dotted];
m13_1070 -> m13_1071  [key=0, style=solid];
m13_1070 -> m13_8  [key=2, style=dotted];
m13_1070 -> m13_1072  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m13_1070 -> m13_1073  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m13_1070 -> m13_1074  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m13_1071 -> m13_1072  [key=0, style=solid];
m13_1071 -> m13_316  [key=2, style=dotted];
m13_1075 -> m13_1063  [key=0, style=bold, color=blue];
m13_2530 -> m13_2531  [key=0, style=solid];
m13_2531 -> m13_2532  [key=0, style=solid];
m13_2531 -> m13_2531  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m13_2532 -> m13_2533  [key=0, style=solid];
m13_2532 -> m13_1248  [key=2, style=dotted];
m13_2532 -> m13_2535  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_2533 -> m13_2534  [key=0, style=solid];
m13_2533 -> m13_6  [key=2, style=dotted];
m13_2535 -> m13_2536  [key=0, style=solid];
m13_2535 -> m13_7  [key=2, style=dotted];
m13_2534 -> m13_2535  [key=0, style=solid];
m13_2534 -> m13_8  [key=2, style=dotted];
m13_2536 -> m13_2530  [key=0, style=bold, color=blue];
m13_3372 -> m13_3373  [key=0, style=solid];
m13_3373 -> m13_3374  [key=0, style=solid];
m13_3374 -> m13_3372  [key=0, style=bold, color=blue];
m13_1157 -> m13_1158  [key=0, style=solid];
m13_1158 -> m13_1159  [key=0, style=solid];
m13_1158 -> m13_1161  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1158 -> m13_1158  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1159 -> m13_1160  [key=0, style=solid];
m13_1159 -> m13_8  [key=2, style=dotted];
m13_1161 -> m13_1162  [key=0, style=solid];
m13_1161 -> m13_8  [key=2, style=dotted];
m13_1161 -> m13_1163  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_1161 -> m13_1164  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_1161 -> m13_1165  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_1161 -> m13_1166  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_1160 -> m13_1161  [key=0, style=solid];
m13_1160 -> m13_7  [key=2, style=dotted];
m13_1162 -> m13_1163  [key=0, style=solid];
m13_1162 -> m13_782  [key=2, style=dotted];
m13_1162 -> m13_7  [key=2, style=dotted];
m13_1163 -> m13_1164  [key=0, style=solid];
m13_1163 -> m13_782  [key=2, style=dotted];
m13_1163 -> m13_7  [key=2, style=dotted];
m13_1164 -> m13_1165  [key=0, style=solid];
m13_1164 -> m13_7  [key=2, style=dotted];
m13_1165 -> m13_1166  [key=0, style=solid];
m13_1165 -> m13_7  [key=2, style=dotted];
m13_1166 -> m13_1167  [key=0, style=solid];
m13_1166 -> m13_7  [key=2, style=dotted];
m13_1167 -> m13_1157  [key=0, style=bold, color=blue];
m13_2201 -> m13_2202  [key=0, style=solid];
m13_2202 -> m13_2203  [key=0, style=solid];
m13_2202 -> m13_2217  [key=2, style=dotted];
m13_2202 -> m13_2204  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m13_2202 -> m13_2208  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m13_2203 -> m13_2204  [key=0, style=solid];
m13_2203 -> m13_2218  [key=2, style=dotted];
m13_2204 -> m13_2205  [key=0, style=solid];
m13_2204 -> m13_2218  [key=2, style=dotted];
m13_2208 -> m13_2209  [key=0, style=solid];
m13_2208 -> m13_6  [key=2, style=dotted];
m13_2205 -> m13_2206  [key=0, style=solid];
m13_2205 -> m13_2217  [key=2, style=dotted];
m13_2205 -> m13_2207  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m13_2205 -> m13_2212  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m13_2206 -> m13_2207  [key=0, style=solid];
m13_2206 -> m13_2218  [key=2, style=dotted];
m13_2207 -> m13_2208  [key=0, style=solid];
m13_2212 -> m13_2213  [key=0, style=solid];
m13_2212 -> m13_6  [key=2, style=dotted];
m13_2209 -> m13_2210  [key=0, style=solid];
m13_2209 -> m13_2219  [key=2, style=dotted];
m13_2209 -> m13_2211  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_2210 -> m13_2211  [key=0, style=solid];
m13_2210 -> m13_7  [key=2, style=dotted];
m13_2211 -> m13_2212  [key=0, style=solid];
m13_2211 -> m13_7  [key=2, style=dotted];
m13_2213 -> m13_2214  [key=0, style=solid];
m13_2213 -> m13_2219  [key=2, style=dotted];
m13_2213 -> m13_2215  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_2214 -> m13_2215  [key=0, style=solid];
m13_2214 -> m13_7  [key=2, style=dotted];
m13_2215 -> m13_2216  [key=0, style=solid];
m13_2215 -> m13_7  [key=2, style=dotted];
m13_2216 -> m13_2201  [key=0, style=bold, color=blue];
m13_3283 -> m13_3284  [key=0, style=solid];
m13_3284 -> m13_3285  [key=0, style=solid];
m13_3284 -> m13_350  [key=2, style=dotted];
m13_3284 -> m13_3290  [key=2, style=dotted];
m13_3284 -> m13_6  [key=2, style=dotted];
m13_3284 -> m13_3286  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3285 -> m13_3286  [key=0, style=solid];
m13_3285 -> m13_7  [key=2, style=dotted];
m13_3286 -> m13_3287  [key=0, style=solid];
m13_3286 -> m13_8  [key=2, style=dotted];
m13_3286 -> m13_3288  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_3287 -> m13_3288  [key=0, style=solid];
m13_3287 -> m13_3290  [key=2, style=dotted];
m13_3287 -> m13_3291  [key=2, style=dotted];
m13_3287 -> m13_7  [key=2, style=dotted];
m13_3288 -> m13_3289  [key=0, style=solid];
m13_3288 -> m13_3290  [key=2, style=dotted];
m13_3288 -> m13_3291  [key=2, style=dotted];
m13_3288 -> m13_7  [key=2, style=dotted];
m13_3289 -> m13_3283  [key=0, style=bold, color=blue];
m13_952 -> m13_953  [key=0, style=solid];
m13_953 -> m13_954  [key=0, style=solid];
m13_953 -> m13_953  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_954 -> m13_955  [key=0, style=solid];
m13_954 -> m13_8  [key=2, style=dotted];
m13_955 -> m13_956  [key=0, style=solid];
m13_955 -> m13_7  [key=2, style=dotted];
m13_956 -> m13_952  [key=0, style=bold, color=blue];
m13_2237 -> m13_2238  [key=0, style=solid];
m13_2238 -> m13_2239  [key=0, style=solid];
m13_2238 -> m13_2234  [key=2, style=dotted];
m13_2239 -> m13_2240  [key=0, style=solid, color=green];
m13_2239 -> m13_6  [key=2, style=dotted];
m13_2240 -> m13_2241  [key=0, style=solid, color=green];
m13_2240 -> m13_185  [key=2, style=dotted, color=green];
m13_2240 -> m13_863  [key=2, style=dotted, color=green];
m13_2241 -> m13_2242  [key=0, style=solid];
m13_2241 -> m13_7  [key=2, style=dotted];
m13_2242 -> m13_2237  [key=0, style=bold, color=blue];
m13_1900 -> m13_1901  [key=0, style=solid];
m13_1901 -> m13_1902  [key=0, style=solid];
m13_1901 -> m13_1905  [key=2, style=dotted];
m13_1901 -> m13_1906  [key=2, style=dotted];
m13_1901 -> m13_1907  [key=2, style=dotted];
m13_1902 -> m13_1903  [key=0, style=solid];
m13_1902 -> m13_1908  [key=2, style=dotted];
m13_1902 -> m13_1909  [key=2, style=dotted];
m13_1902 -> m13_832  [key=2, style=dotted];
m13_1903 -> m13_1904  [key=0, style=solid];
m13_1903 -> m13_7  [key=2, style=dotted];
m13_1904 -> m13_1900  [key=0, style=bold, color=blue];
m13_2428 -> m13_2429  [key=0, style=solid];
m13_2429 -> m13_2430  [key=0, style=solid];
m13_2429 -> m13_1922  [key=2, style=dotted];
m13_2430 -> m13_2428  [key=0, style=bold, color=blue];
m13_2514 -> m13_2515  [key=0, style=solid];
m13_2515 -> m13_2516  [key=0, style=solid];
m13_2516 -> m13_2517  [key=0, style=solid];
m13_2516 -> m13_287  [key=2, style=dotted];
m13_2516 -> m13_2519  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2517 -> m13_2518  [key=0, style=solid];
m13_2517 -> m13_2524  [key=2, style=dotted];
m13_2517 -> m13_2521  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_2519 -> m13_2520  [key=0, style=solid];
m13_2519 -> m13_2526  [key=2, style=dotted];
m13_2519 -> m13_2527  [key=2, style=dotted];
m13_2518 -> m13_2519  [key=0, style=solid];
m13_2518 -> m13_2525  [key=2, style=dotted];
m13_2518 -> m13_2520  [key=1, style=dashed, color=darkseagreen4, label=jw];
m13_2521 -> m13_2522  [key=0, style=solid];
m13_2521 -> m13_2529  [key=2, style=dotted];
m13_2520 -> m13_2521  [key=0, style=solid];
m13_2520 -> m13_2528  [key=2, style=dotted];
m13_2522 -> m13_2523  [key=0, style=solid];
m13_2522 -> m13_7  [key=2, style=dotted];
m13_2523 -> m13_2514  [key=0, style=bold, color=blue];
m13_2039 -> m13_2040  [key=0, style=solid];
m13_2040 -> m13_2041  [key=0, style=solid];
m13_2041 -> m13_2039  [key=0, style=bold, color=blue];
m13_2270 -> m13_2271  [key=0, style=solid];
m13_2270 -> m13_2272  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2271 -> m13_2272  [key=0, style=solid];
m13_2272 -> m13_2273  [key=0, style=solid];
m13_2273 -> m13_2274  [key=0, style=solid];
m13_2274 -> m13_2270  [key=0, style=bold, color=blue];
m13_1181 -> m13_1182  [key=0, style=solid];
m13_1182 -> m13_1181  [key=0, style=bold, color=blue];
m13_1644 -> m13_1645  [key=0, style=solid];
m13_1644 -> m13_1647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_1645 -> m13_1646  [key=0, style=solid];
m13_1645 -> m13_1647  [key=0, style=solid];
m13_1647 -> m13_1648  [key=0, style=solid];
m13_1647 -> m13_1649  [key=0, style=solid];
m13_1646 -> m13_1649  [key=0, style=solid];
m13_1648 -> m13_1647  [key=0, style=solid];
m13_1648 -> m13_1648  [key=1, style=dashed, color=darkseagreen4, label=entry];
m13_1649 -> m13_1644  [key=0, style=bold, color=blue];
m13_2105 -> m13_2106  [key=0, style=solid];
m13_2106 -> m13_2107  [key=0, style=solid];
m13_2106 -> m13_2109  [key=2, style=dotted];
m13_2106 -> m13_274  [key=2, style=dotted];
m13_2107 -> m13_2108  [key=0, style=solid];
m13_2107 -> m13_7  [key=2, style=dotted];
m13_2108 -> m13_2105  [key=0, style=bold, color=blue];
m13_704 -> m13_705  [key=0, style=solid];
m13_705 -> m13_706  [key=0, style=solid];
m13_705 -> m13_705  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_706 -> m13_707  [key=0, style=solid];
m13_706 -> m13_8  [key=2, style=dotted];
m13_706 -> m13_708  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_706 -> m13_709  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_706 -> m13_710  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_706 -> m13_711  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_706 -> m13_712  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_707 -> m13_708  [key=0, style=solid];
m13_707 -> m13_7  [key=2, style=dotted];
m13_708 -> m13_709  [key=0, style=solid];
m13_708 -> m13_7  [key=2, style=dotted];
m13_709 -> m13_710  [key=0, style=solid];
m13_709 -> m13_7  [key=2, style=dotted];
m13_710 -> m13_711  [key=0, style=solid];
m13_710 -> m13_7  [key=2, style=dotted];
m13_711 -> m13_712  [key=0, style=solid];
m13_711 -> m13_7  [key=2, style=dotted];
m13_712 -> m13_713  [key=0, style=solid];
m13_712 -> m13_7  [key=2, style=dotted];
m13_713 -> m13_704  [key=0, style=bold, color=blue];
m13_547 -> m13_548  [key=0, style=solid];
m13_548 -> m13_549  [key=0, style=solid];
m13_548 -> m13_554  [key=2, style=dotted];
m13_548 -> m13_6  [key=2, style=dotted];
m13_549 -> m13_550  [key=0, style=solid];
m13_549 -> m13_7  [key=2, style=dotted];
m13_550 -> m13_551  [key=0, style=solid];
m13_550 -> m13_8  [key=2, style=dotted];
m13_550 -> m13_552  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_551 -> m13_552  [key=0, style=solid];
m13_551 -> m13_7  [key=2, style=dotted];
m13_552 -> m13_553  [key=0, style=solid];
m13_552 -> m13_7  [key=2, style=dotted];
m13_553 -> m13_547  [key=0, style=bold, color=blue];
m13_2021 -> m13_2022  [key=0, style=solid];
m13_2022 -> m13_2023  [key=0, style=solid];
m13_2022 -> m13_466  [key=2, style=dotted];
m13_2022 -> m13_2024  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2022 -> m13_2025  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2022 -> m13_2026  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2023 -> m13_2024  [key=0, style=solid];
m13_2023 -> m13_7  [key=2, style=dotted];
m13_2024 -> m13_2025  [key=0, style=solid];
m13_2024 -> m13_7  [key=2, style=dotted];
m13_2025 -> m13_2026  [key=0, style=solid];
m13_2025 -> m13_7  [key=2, style=dotted];
m13_2026 -> m13_2027  [key=0, style=solid];
m13_2026 -> m13_7  [key=2, style=dotted];
m13_2027 -> m13_2021  [key=0, style=bold, color=blue];
m13_324 -> m13_325  [key=0, style=solid];
m13_325 -> m13_326  [key=0, style=solid];
m13_325 -> m13_320  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_326 -> m13_327  [key=0, style=solid];
m13_326 -> m13_8  [key=2, style=dotted];
m13_326 -> m13_328  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_326 -> m13_329  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_326 -> m13_330  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_327 -> m13_328  [key=0, style=solid];
m13_327 -> m13_316  [key=2, style=dotted];
m13_328 -> m13_329  [key=0, style=solid];
m13_328 -> m13_7  [key=2, style=dotted];
m13_329 -> m13_330  [key=0, style=solid];
m13_329 -> m13_316  [key=2, style=dotted];
m13_330 -> m13_331  [key=0, style=solid];
m13_330 -> m13_7  [key=2, style=dotted];
m13_331 -> m13_324  [key=0, style=bold, color=blue];
m13_602 -> m13_603  [key=0, style=solid];
m13_603 -> m13_604  [key=0, style=solid];
m13_603 -> m13_605  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_603 -> m13_607  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_603 -> m13_608  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_603 -> m13_603  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_604 -> m13_605  [key=0, style=solid];
m13_604 -> m13_613  [key=2, style=dotted];
m13_605 -> m13_606  [key=0, style=solid];
m13_605 -> m13_614  [key=2, style=dotted];
m13_605 -> m13_611  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m13_607 -> m13_608  [key=0, style=solid];
m13_607 -> m13_599  [key=2, style=dotted];
m13_607 -> m13_600  [key=2, style=dotted];
m13_607 -> m13_601  [key=2, style=dotted];
m13_607 -> m13_610  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m13_608 -> m13_609  [key=0, style=solid];
m13_608 -> m13_8  [key=2, style=dotted];
m13_608 -> m13_610  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m13_608 -> m13_611  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m13_606 -> m13_607  [key=0, style=solid];
m13_606 -> m13_441  [key=2, style=dotted];
m13_611 -> m13_612  [key=0, style=solid];
m13_611 -> m13_7  [key=2, style=dotted];
m13_610 -> m13_611  [key=0, style=solid];
m13_610 -> m13_7  [key=2, style=dotted];
m13_609 -> m13_610  [key=0, style=solid];
m13_609 -> m13_7  [key=2, style=dotted];
m13_612 -> m13_602  [key=0, style=bold, color=blue];
m13_3378 -> m13_3379  [key=0, style=solid];
m13_3379 -> m13_3380  [key=0, style=solid];
m13_3379 -> m13_3347  [key=2, style=dotted];
m13_3380 -> m13_3378  [key=0, style=bold, color=blue];
m13_583 -> m13_584  [key=0, style=solid];
m13_584 -> m13_585  [key=0, style=solid];
m13_584 -> m13_586  [key=2, style=dotted];
m13_584 -> m13_587  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_585 -> m13_583  [key=0, style=bold, color=blue];
m13_2823 -> m13_2824  [key=0, style=solid];
m13_2824 -> m13_2825  [key=0, style=solid];
m13_2824 -> m13_527  [key=2, style=dotted];
m13_2824 -> m13_2826  [key=2, style=dotted];
m13_2825 -> m13_2823  [key=0, style=bold, color=blue];
m13_394 -> m13_395  [key=0, style=solid];
m13_395 -> m13_396  [key=0, style=solid];
m13_395 -> m13_404  [key=2, style=dotted];
m13_395 -> m13_397  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_395 -> m13_398  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_395 -> m13_399  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_395 -> m13_400  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_396 -> m13_397  [key=0, style=solid];
m13_397 -> m13_398  [key=0, style=solid];
m13_398 -> m13_399  [key=0, style=solid];
m13_399 -> m13_400  [key=0, style=solid];
m13_400 -> m13_401  [key=0, style=solid];
m13_400 -> m13_274  [key=2, style=dotted];
m13_400 -> m13_402  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_401 -> m13_402  [key=0, style=solid];
m13_401 -> m13_364  [key=2, style=dotted];
m13_402 -> m13_403  [key=0, style=solid];
m13_402 -> m13_7  [key=2, style=dotted];
m13_403 -> m13_394  [key=0, style=bold, color=blue];
m13_3447 -> m13_3448  [key=0, style=solid];
m13_3447 -> m13_7  [key=2, style=dotted];
m13_3446 -> m13_3447  [key=0, style=solid];
m13_3446 -> m13_442  [key=2, style=dotted];
m13_3446 -> m13_7  [key=2, style=dotted];
m13_3448 -> m13_3435  [key=0, style=bold, color=blue];
m13_2184 -> m13_2185  [key=0, style=solid];
m13_2185 -> m13_2186  [key=0, style=solid];
m13_2186 -> m13_2184  [key=0, style=bold, color=blue];
m13_2502 -> m13_2503  [key=0, style=solid];
m13_2503 -> m13_2504  [key=0, style=solid];
m13_2503 -> m13_2501  [key=2, style=dotted];
m13_2503 -> m13_782  [key=2, style=dotted];
m13_2503 -> m13_2513  [key=2, style=dotted];
m13_2503 -> m13_644  [key=2, style=dotted];
m13_2503 -> m13_1248  [key=2, style=dotted];
m13_2503 -> m13_2507  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2503 -> m13_2508  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2503 -> m13_2509  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2503 -> m13_2510  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2503 -> m13_2511  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2504 -> m13_2505  [key=0, style=solid];
m13_2504 -> m13_274  [key=2, style=dotted];
m13_2504 -> m13_2506  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2507 -> m13_2508  [key=0, style=solid];
m13_2507 -> m13_7  [key=2, style=dotted];
m13_2508 -> m13_2509  [key=0, style=solid];
m13_2508 -> m13_7  [key=2, style=dotted];
m13_2509 -> m13_2510  [key=0, style=solid];
m13_2509 -> m13_7  [key=2, style=dotted];
m13_2510 -> m13_2511  [key=0, style=solid];
m13_2510 -> m13_7  [key=2, style=dotted];
m13_2511 -> m13_2512  [key=0, style=solid];
m13_2511 -> m13_7  [key=2, style=dotted];
m13_2505 -> m13_2506  [key=0, style=solid];
m13_2505 -> m13_7  [key=2, style=dotted];
m13_2506 -> m13_2507  [key=0, style=solid];
m13_2506 -> m13_8  [key=2, style=dotted];
m13_2506 -> m13_2508  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2506 -> m13_2509  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2506 -> m13_2510  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2506 -> m13_2511  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2512 -> m13_2502  [key=0, style=bold, color=blue];
m13_1857 -> m13_1858  [key=0, style=solid];
m13_1858 -> m13_1857  [key=0, style=bold, color=blue];
m13_1984 -> m13_1985  [key=0, style=solid];
m13_1984 -> m13_1986  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1985 -> m13_1986  [key=0, style=solid];
m13_1986 -> m13_1987  [key=0, style=solid];
m13_1987 -> m13_1984  [key=0, style=bold, color=blue];
m13_2416 -> m13_2417  [key=0, style=solid];
m13_2417 -> m13_2418  [key=0, style=solid];
m13_2417 -> m13_1922  [key=2, style=dotted];
m13_2418 -> m13_2416  [key=0, style=bold, color=blue];
m13_2384 -> m13_2385  [key=0, style=solid];
m13_2385 -> m13_2386  [key=0, style=solid];
m13_2385 -> m13_2380  [key=2, style=dotted];
m13_2385 -> m13_2387  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2385 -> m13_2388  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2385 -> m13_2391  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2385 -> m13_2392  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2386 -> m13_2387  [key=0, style=solid];
m13_2386 -> m13_186  [key=2, style=dotted];
m13_2387 -> m13_2388  [key=0, style=solid];
m13_2387 -> m13_186  [key=2, style=dotted];
m13_2388 -> m13_2389  [key=0, style=solid];
m13_2388 -> m13_274  [key=2, style=dotted];
m13_2388 -> m13_2390  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2391 -> m13_2392  [key=0, style=solid];
m13_2391 -> m13_7  [key=2, style=dotted];
m13_2392 -> m13_2393  [key=0, style=solid];
m13_2392 -> m13_7  [key=2, style=dotted];
m13_2389 -> m13_2390  [key=0, style=solid];
m13_2389 -> m13_7  [key=2, style=dotted];
m13_2390 -> m13_2391  [key=0, style=solid];
m13_2390 -> m13_8  [key=2, style=dotted];
m13_2390 -> m13_2392  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2390 -> m13_2393  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2390 -> m13_2394  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2393 -> m13_2394  [key=0, style=solid];
m13_2393 -> m13_7  [key=2, style=dotted];
m13_2394 -> m13_2395  [key=0, style=solid];
m13_2394 -> m13_7  [key=2, style=dotted];
m13_2395 -> m13_2384  [key=0, style=bold, color=blue];
m13_1200 -> m13_1201  [key=0, style=solid];
m13_1201 -> m13_1202  [key=0, style=solid];
m13_1201 -> m13_1201  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1202 -> m13_1203  [key=0, style=solid];
m13_1202 -> m13_185  [key=2, style=dotted];
m13_1202 -> m13_863  [key=2, style=dotted];
m13_1202 -> m13_1204  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1202 -> m13_1205  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1203 -> m13_1204  [key=0, style=solid];
m13_1203 -> m13_7  [key=2, style=dotted];
m13_1204 -> m13_1205  [key=0, style=solid];
m13_1204 -> m13_7  [key=2, style=dotted];
m13_1205 -> m13_1206  [key=0, style=solid];
m13_1205 -> m13_7  [key=2, style=dotted];
m13_1206 -> m13_1200  [key=0, style=bold, color=blue];
m13_1299 -> m13_1300  [key=0, style=solid];
m13_1300 -> m13_1301  [key=0, style=solid];
m13_1300 -> m13_1300  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1301 -> m13_1302  [key=0, style=solid];
m13_1301 -> m13_8  [key=2, style=dotted];
m13_1302 -> m13_1303  [key=0, style=solid];
m13_1302 -> m13_1307  [key=2, style=dotted];
m13_1302 -> m13_1304  [key=1, style=dashed, color=darkseagreen4, label=a];
m13_1302 -> m13_1305  [key=1, style=dashed, color=darkseagreen4, label=a];
m13_1303 -> m13_1304  [key=0, style=solid];
m13_1303 -> m13_7  [key=2, style=dotted];
m13_1304 -> m13_1305  [key=0, style=solid];
m13_1304 -> m13_7  [key=2, style=dotted];
m13_1305 -> m13_1306  [key=0, style=solid];
m13_1305 -> m13_7  [key=2, style=dotted];
m13_1306 -> m13_1299  [key=0, style=bold, color=blue];
m13_3273 -> m13_3274  [key=0, style=solid];
m13_3274 -> m13_3275  [key=0, style=solid];
m13_3274 -> m13_3282  [key=2, style=dotted];
m13_3274 -> m13_782  [key=2, style=dotted];
m13_3274 -> m13_3276  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3274 -> m13_3277  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3274 -> m13_3278  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3275 -> m13_3276  [key=0, style=solid];
m13_3275 -> m13_3282  [key=2, style=dotted];
m13_3275 -> m13_782  [key=2, style=dotted];
m13_3275 -> m13_3277  [key=1, style=dashed, color=darkseagreen4, label=jane];
m13_3275 -> m13_3278  [key=1, style=dashed, color=darkseagreen4, label=jane];
m13_3276 -> m13_3277  [key=0, style=solid];
m13_3277 -> m13_3278  [key=0, style=solid];
m13_3278 -> m13_3279  [key=0, style=solid];
m13_3278 -> m13_633  [key=2, style=dotted];
m13_3279 -> m13_3280  [key=0, style=solid];
m13_3279 -> m13_185  [key=2, style=dotted];
m13_3279 -> m13_124  [key=2, style=dotted];
m13_3279 -> m13_636  [key=2, style=dotted];
m13_3280 -> m13_3281  [key=0, style=solid];
m13_3280 -> m13_7  [key=2, style=dotted];
m13_3281 -> m13_3273  [key=0, style=bold, color=blue];
m13_1587 -> m13_1588  [key=0, style=solid];
m13_1588 -> m13_1589  [key=0, style=solid];
m13_1588 -> m13_1588  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1589 -> m13_1590  [key=0, style=solid];
m13_1589 -> m13_8  [key=2, style=dotted];
m13_1590 -> m13_1591  [key=0, style=solid];
m13_1590 -> m13_7  [key=2, style=dotted];
m13_1591 -> m13_1587  [key=0, style=bold, color=blue];
m13_1390 -> m13_1391  [key=0, style=solid];
m13_1391 -> m13_1392  [key=0, style=solid];
m13_1391 -> m13_1395  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1391 -> m13_2251  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1392 -> m13_1393  [key=0, style=solid];
m13_1392 -> m13_586  [key=2, style=dotted];
m13_1392 -> m13_1394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1393 -> m13_1390  [key=0, style=bold, color=blue];
m13_3348 -> m13_3349  [key=0, style=solid];
m13_3349 -> m13_3350  [key=0, style=solid];
m13_3349 -> m13_3347  [key=2, style=dotted];
m13_3350 -> m13_3348  [key=0, style=bold, color=blue];
m13_1592 -> m13_1593  [key=0, style=solid];
m13_1593 -> m13_1594  [key=0, style=solid];
m13_1593 -> m13_1605  [key=2, style=dotted];
m13_1593 -> m13_1598  [key=1, style=dashed, color=darkseagreen4, label=ex];
m13_1594 -> m13_1595  [key=0, style=solid];
m13_1594 -> m13_1606  [key=2, style=dotted];
m13_1594 -> m13_1596  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1594 -> m13_1597  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1594 -> m13_1598  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1594 -> m13_1601  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1598 -> m13_1599  [key=0, style=solid];
m13_1595 -> m13_1596  [key=0, style=solid];
m13_1595 -> m13_1607  [key=2, style=dotted];
m13_1596 -> m13_1597  [key=0, style=solid];
m13_1596 -> m13_782  [key=2, style=dotted];
m13_1597 -> m13_1598  [key=0, style=solid];
m13_1597 -> m13_1608  [key=2, style=dotted];
m13_1601 -> m13_1602  [key=0, style=solid];
m13_1601 -> m13_443  [key=2, style=dotted];
m13_1599 -> m13_1600  [key=0, style=solid];
m13_1599 -> m13_355  [key=2, style=dotted];
m13_1599 -> m13_1601  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_1599 -> m13_1602  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_1600 -> m13_1601  [key=0, style=solid];
m13_1600 -> m13_441  [key=2, style=dotted];
m13_1602 -> m13_1603  [key=0, style=solid];
m13_1602 -> m13_444  [key=2, style=dotted];
m13_1603 -> m13_1604  [key=0, style=solid];
m13_1603 -> m13_445  [key=2, style=dotted];
m13_1604 -> m13_1592  [key=0, style=bold, color=blue];
m13_3256 -> m13_3257  [key=0, style=solid];
m13_3257 -> m13_3258  [key=0, style=solid];
m13_3257 -> m13_2053  [key=2, style=dotted];
m13_3257 -> m13_722  [key=2, style=dotted];
m13_3257 -> m13_3260  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_3258 -> m13_3259  [key=0, style=solid];
m13_3258 -> m13_185  [key=2, style=dotted];
m13_3260 -> m13_3261  [key=0, style=solid];
m13_3260 -> m13_2086  [key=2, style=dotted];
m13_3259 -> m13_3260  [key=0, style=solid];
m13_3259 -> m13_354  [key=2, style=dotted];
m13_3261 -> m13_3262  [key=0, style=solid];
m13_3261 -> m13_7  [key=2, style=dotted];
m13_3262 -> m13_3256  [key=0, style=bold, color=blue];
m13_522 -> m13_523  [key=0, style=solid];
m13_523 -> m13_524  [key=0, style=solid];
m13_523 -> m13_485  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m13_524 -> m13_525  [key=0, style=solid];
m13_524 -> m13_466  [key=2, style=dotted];
m13_525 -> m13_526  [key=0, style=solid];
m13_525 -> m13_527  [key=2, style=dotted];
m13_525 -> m13_7  [key=2, style=dotted];
m13_526 -> m13_522  [key=0, style=bold, color=blue];
m13_1472 -> m13_1473  [key=0, style=solid];
m13_1473 -> m13_1474  [key=0, style=solid];
m13_1473 -> m13_350  [key=2, style=dotted];
m13_1473 -> m13_1475  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_1473 -> m13_1476  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_1474 -> m13_1475  [key=0, style=solid];
m13_1474 -> m13_782  [key=2, style=dotted];
m13_1474 -> m13_353  [key=2, style=dotted];
m13_1475 -> m13_1476  [key=0, style=solid];
m13_1475 -> m13_782  [key=2, style=dotted];
m13_1475 -> m13_353  [key=2, style=dotted];
m13_1476 -> m13_1477  [key=0, style=solid];
m13_1476 -> m13_274  [key=2, style=dotted];
m13_1477 -> m13_1478  [key=0, style=solid];
m13_1477 -> m13_7  [key=2, style=dotted];
m13_1478 -> m13_1472  [key=0, style=bold, color=blue];
m13_2137 -> m13_2138  [key=0, style=solid];
m13_2138 -> m13_2139  [key=0, style=solid];
m13_2138 -> m13_8  [key=2, style=dotted];
m13_2139 -> m13_2140  [key=0, style=solid];
m13_2139 -> m13_7  [key=2, style=dotted];
m13_2140 -> m13_2137  [key=0, style=bold, color=blue];
m13_1099 -> m13_1100  [key=0, style=solid];
m13_1100 -> m13_1101  [key=0, style=solid];
m13_1101 -> m13_1099  [key=0, style=bold, color=blue];
m13_2028 -> m13_2029  [key=0, style=solid];
m13_2029 -> m13_2030  [key=0, style=solid];
m13_2029 -> m13_2037  [key=2, style=dotted];
m13_2029 -> m13_274  [key=2, style=dotted];
m13_2029 -> m13_2031  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m13_2030 -> m13_2031  [key=0, style=solid];
m13_2030 -> m13_7  [key=2, style=dotted];
m13_2031 -> m13_2032  [key=0, style=solid];
m13_2031 -> m13_8  [key=2, style=dotted];
m13_2031 -> m13_2033  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2031 -> m13_2034  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2031 -> m13_2035  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2032 -> m13_2033  [key=0, style=solid];
m13_2032 -> m13_7  [key=2, style=dotted];
m13_2033 -> m13_2034  [key=0, style=solid];
m13_2033 -> m13_2038  [key=2, style=dotted];
m13_2033 -> m13_265  [key=2, style=dotted];
m13_2034 -> m13_2035  [key=0, style=solid];
m13_2034 -> m13_2038  [key=2, style=dotted];
m13_2034 -> m13_265  [key=2, style=dotted];
m13_2035 -> m13_2036  [key=0, style=solid];
m13_2035 -> m13_2038  [key=2, style=dotted];
m13_2035 -> m13_265  [key=2, style=dotted];
m13_2036 -> m13_2028  [key=0, style=bold, color=blue];
m13_1241 -> m13_1242  [key=0, style=solid];
m13_1242 -> m13_1243  [key=0, style=solid];
m13_1242 -> m13_1248  [key=2, style=dotted];
m13_1242 -> m13_1244  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_1242 -> m13_1246  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_1243 -> m13_1244  [key=0, style=solid];
m13_1243 -> m13_6  [key=2, style=dotted];
m13_1243 -> m13_1245  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1244 -> m13_1245  [key=0, style=solid];
m13_1244 -> m13_1249  [key=2, style=dotted];
m13_1244 -> m13_7  [key=2, style=dotted];
m13_1246 -> m13_1247  [key=0, style=solid];
m13_1246 -> m13_7  [key=2, style=dotted];
m13_1245 -> m13_1246  [key=0, style=solid];
m13_1245 -> m13_8  [key=2, style=dotted];
m13_1247 -> m13_1241  [key=0, style=bold, color=blue];
m13_1940 -> m13_1941  [key=0, style=solid];
m13_1941 -> m13_1942  [key=0, style=solid];
m13_1941 -> m13_350  [key=2, style=dotted];
m13_1941 -> m13_1943  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_1941 -> m13_1947  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_1942 -> m13_1943  [key=0, style=solid];
m13_1942 -> m13_353  [key=2, style=dotted];
m13_1943 -> m13_1944  [key=0, style=solid];
m13_1943 -> m13_353  [key=2, style=dotted];
m13_1947 -> m13_1948  [key=0, style=solid];
m13_1947 -> m13_353  [key=2, style=dotted];
m13_1944 -> m13_1945  [key=0, style=solid];
m13_1944 -> m13_350  [key=2, style=dotted];
m13_1944 -> m13_1946  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1944 -> m13_1947  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1944 -> m13_1948  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1945 -> m13_1946  [key=0, style=solid];
m13_1945 -> m13_353  [key=2, style=dotted];
m13_1946 -> m13_1947  [key=0, style=solid];
m13_1946 -> m13_353  [key=2, style=dotted];
m13_1948 -> m13_1949  [key=0, style=solid];
m13_1948 -> m13_274  [key=2, style=dotted];
m13_1948 -> m13_1952  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1949 -> m13_1950  [key=0, style=solid];
m13_1949 -> m13_586  [key=2, style=dotted];
m13_1949 -> m13_1951  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1950 -> m13_1940  [key=0, style=bold, color=blue];
m13_2919 -> m13_2920  [key=0, style=solid];
m13_2920 -> m13_2921  [key=0, style=solid];
m13_2920 -> m13_2918  [key=2, style=dotted];
m13_2921 -> m13_2922  [key=0, style=solid];
m13_2921 -> m13_6  [key=2, style=dotted];
m13_2922 -> m13_2923  [key=0, style=solid];
m13_2922 -> m13_7  [key=2, style=dotted];
m13_2923 -> m13_2919  [key=0, style=bold, color=blue];
m13_2608 -> m13_2609  [key=0, style=solid];
m13_2609 -> m13_2610  [key=0, style=solid];
m13_2609 -> m13_2613  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2609 -> m13_2609  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2610 -> m13_2611  [key=0, style=solid];
m13_2610 -> m13_586  [key=2, style=dotted];
m13_2610 -> m13_2612  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2611 -> m13_2608  [key=0, style=bold, color=blue];
m13_3354 -> m13_3355  [key=0, style=solid];
m13_3355 -> m13_3356  [key=0, style=solid];
m13_3355 -> m13_3347  [key=2, style=dotted];
m13_3356 -> m13_3354  [key=0, style=bold, color=blue];
m13_3247 -> m13_3248  [key=0, style=solid];
m13_3248 -> m13_3249  [key=0, style=solid];
m13_3248 -> m13_3255  [key=2, style=dotted];
m13_3248 -> m13_3251  [key=1, style=dashed, color=darkseagreen4, label=s1];
m13_3248 -> m13_3252  [key=1, style=dashed, color=darkseagreen4, label=s1];
m13_3249 -> m13_3250  [key=0, style=solid];
m13_3249 -> m13_6  [key=2, style=dotted];
m13_3251 -> m13_3252  [key=0, style=solid];
m13_3251 -> m13_7  [key=2, style=dotted];
m13_3252 -> m13_3253  [key=0, style=solid];
m13_3252 -> m13_3254  [key=0, style=solid];
m13_3250 -> m13_3251  [key=0, style=solid];
m13_3250 -> m13_8  [key=2, style=dotted];
m13_3250 -> m13_3253  [key=1, style=dashed, color=darkseagreen4, label=s2];
m13_3253 -> m13_3252  [key=0, style=solid];
m13_3253 -> m13_1631  [key=2, style=dotted];
m13_3253 -> m13_265  [key=2, style=dotted];
m13_3254 -> m13_3247  [key=0, style=bold, color=blue];
m13_555 -> m13_556  [key=0, style=solid];
m13_556 -> m13_557  [key=0, style=solid];
m13_556 -> m13_556  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_557 -> m13_558  [key=0, style=solid];
m13_557 -> m13_262  [key=2, style=dotted];
m13_558 -> m13_559  [key=0, style=solid];
m13_558 -> m13_558  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m13_559 -> m13_560  [key=0, style=solid];
m13_559 -> m13_559  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_560 -> m13_555  [key=0, style=bold, color=blue];
m13_1923 -> m13_1924  [key=0, style=solid];
m13_1924 -> m13_1925  [key=0, style=solid];
m13_1924 -> m13_1926  [key=2, style=dotted];
m13_1925 -> m13_1923  [key=0, style=bold, color=blue];
m13_3375 -> m13_3376  [key=0, style=solid];
m13_3376 -> m13_3377  [key=0, style=solid];
m13_3376 -> m13_3347  [key=2, style=dotted];
m13_3377 -> m13_3375  [key=0, style=bold, color=blue];
m13_1556 -> m13_1557  [key=0, style=solid];
m13_1557 -> m13_1558  [key=0, style=solid];
m13_1557 -> m13_8  [key=2, style=dotted];
m13_1558 -> m13_1559  [key=0, style=solid];
m13_1558 -> m13_937  [key=2, style=dotted];
m13_1558 -> m13_7  [key=2, style=dotted];
m13_1559 -> m13_1560  [key=0, style=solid];
m13_1559 -> m13_8  [key=2, style=dotted];
m13_1560 -> m13_1561  [key=0, style=solid];
m13_1560 -> m13_937  [key=2, style=dotted];
m13_1560 -> m13_7  [key=2, style=dotted];
m13_1561 -> m13_1556  [key=0, style=bold, color=blue];
m13_3230 -> m13_3231  [key=0, style=solid];
m13_3231 -> m13_3232  [key=0, style=solid];
m13_3231 -> m13_350  [key=2, style=dotted];
m13_3231 -> m13_634  [key=2, style=dotted];
m13_3231 -> m13_643  [key=2, style=dotted];
m13_3231 -> m13_644  [key=2, style=dotted];
m13_3231 -> m13_3234  [key=1, style=dashed, color=darkseagreen4, label=dates];
m13_3232 -> m13_3233  [key=0, style=solid];
m13_3232 -> m13_274  [key=2, style=dotted];
m13_3232 -> m13_3235  [key=1, style=dashed, color=darkseagreen4, label=expected];
m13_3232 -> m13_3236  [key=1, style=dashed, color=darkseagreen4, label=expected];
m13_3234 -> m13_3235  [key=0, style=solid];
m13_3234 -> m13_185  [key=2, style=dotted];
m13_3234 -> m13_768  [key=2, style=dotted];
m13_3234 -> m13_3236  [key=1, style=dashed, color=darkseagreen4, label=actual];
m13_3233 -> m13_3234  [key=0, style=solid];
m13_3233 -> m13_364  [key=2, style=dotted];
m13_3235 -> m13_3236  [key=0, style=solid];
m13_3235 -> m13_364  [key=2, style=dotted];
m13_3236 -> m13_3237  [key=0, style=solid];
m13_3236 -> m13_7  [key=2, style=dotted];
m13_3237 -> m13_3230  [key=0, style=bold, color=blue];
m13_2933 -> m13_2934  [key=0, style=solid];
m13_2934 -> m13_2935  [key=0, style=solid];
m13_2934 -> m13_350  [key=2, style=dotted];
m13_2934 -> m13_643  [key=2, style=dotted];
m13_2935 -> m13_2936  [key=0, style=solid];
m13_2935 -> m13_185  [key=2, style=dotted];
m13_2935 -> m13_768  [key=2, style=dotted];
m13_2935 -> m13_2937  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2936 -> m13_2937  [key=0, style=solid];
m13_2936 -> m13_7  [key=2, style=dotted];
m13_2937 -> m13_2938  [key=0, style=solid];
m13_2937 -> m13_8  [key=2, style=dotted];
m13_2937 -> m13_2939  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_2937 -> m13_2940  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_2938 -> m13_2939  [key=0, style=solid];
m13_2938 -> m13_7  [key=2, style=dotted];
m13_2939 -> m13_2940  [key=0, style=solid];
m13_2939 -> m13_643  [key=2, style=dotted];
m13_2939 -> m13_7  [key=2, style=dotted];
m13_2940 -> m13_2941  [key=0, style=solid];
m13_2940 -> m13_643  [key=2, style=dotted];
m13_2940 -> m13_7  [key=2, style=dotted];
m13_2941 -> m13_2933  [key=0, style=bold, color=blue];
m13_2830 -> m13_2831  [key=0, style=solid];
m13_2831 -> m13_2832  [key=0, style=solid];
m13_2831 -> m13_633  [key=2, style=dotted];
m13_2831 -> m13_2838  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_2831 -> m13_2839  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_2831 -> m13_2840  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_2831 -> m13_2841  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_2832 -> m13_2833  [key=0, style=solid];
m13_2832 -> m13_2053  [key=2, style=dotted];
m13_2832 -> m13_722  [key=2, style=dotted];
m13_2832 -> m13_2835  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2832 -> m13_2837  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2838 -> m13_2834  [key=0, style=solid];
m13_2838 -> m13_186  [key=2, style=dotted];
m13_2839 -> m13_2840  [key=0, style=solid];
m13_2839 -> m13_7  [key=2, style=dotted];
m13_2840 -> m13_2841  [key=0, style=solid];
m13_2840 -> m13_7  [key=2, style=dotted];
m13_2841 -> m13_2842  [key=0, style=solid];
m13_2841 -> m13_7  [key=2, style=dotted];
m13_2833 -> m13_2834  [key=0, style=solid];
m13_2835 -> m13_2836  [key=0, style=solid];
m13_2835 -> m13_2839  [key=0, style=solid];
m13_2835 -> m13_2843  [key=2, style=dotted];
m13_2837 -> m13_2838  [key=0, style=solid];
m13_2837 -> m13_2086  [key=2, style=dotted];
m13_2834 -> m13_2835  [key=0, style=solid];
m13_2834 -> m13_2839  [key=0, style=solid];
m13_2836 -> m13_2837  [key=0, style=solid];
m13_2836 -> m13_116  [key=2, style=dotted];
m13_2842 -> m13_2830  [key=0, style=bold, color=blue];
m13_534 -> m13_535  [key=0, style=solid];
m13_535 -> m13_536  [key=0, style=solid];
m13_535 -> m13_540  [key=2, style=dotted];
m13_535 -> m13_6  [key=2, style=dotted];
m13_536 -> m13_537  [key=0, style=solid];
m13_536 -> m13_8  [key=2, style=dotted];
m13_536 -> m13_538  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_537 -> m13_538  [key=0, style=solid];
m13_537 -> m13_7  [key=2, style=dotted];
m13_538 -> m13_539  [key=0, style=solid];
m13_538 -> m13_7  [key=2, style=dotted];
m13_539 -> m13_534  [key=0, style=bold, color=blue];
m13_673 -> m13_674  [key=0, style=solid];
m13_674 -> m13_675  [key=0, style=solid];
m13_674 -> m13_483  [key=2, style=dotted];
m13_674 -> m13_681  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_675 -> m13_676  [key=0, style=solid];
m13_675 -> m13_678  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_675 -> m13_680  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_681 -> m13_682  [key=0, style=solid];
m13_681 -> m13_7  [key=2, style=dotted];
m13_676 -> m13_677  [key=0, style=solid];
m13_676 -> m13_185  [key=2, style=dotted];
m13_676 -> m13_678  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_676 -> m13_680  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_678 -> m13_679  [key=0, style=solid];
m13_678 -> m13_636  [key=2, style=dotted];
m13_678 -> m13_680  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_680 -> m13_681  [key=0, style=solid];
m13_680 -> m13_684  [key=2, style=dotted];
m13_680 -> m13_680  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_677 -> m13_678  [key=0, style=solid];
m13_677 -> m13_683  [key=2, style=dotted];
m13_677 -> m13_186  [key=2, style=dotted];
m13_679 -> m13_680  [key=0, style=solid];
m13_679 -> m13_7  [key=2, style=dotted];
m13_682 -> m13_673  [key=0, style=bold, color=blue];
m13_2334 -> m13_2335  [key=0, style=solid];
m13_2335 -> m13_2336  [key=0, style=solid];
m13_2335 -> m13_2337  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2335 -> m13_2335  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2336 -> m13_2337  [key=0, style=solid];
m13_2336 -> m13_8  [key=2, style=dotted];
m13_2336 -> m13_2338  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m13_2337 -> m13_2338  [key=0, style=solid];
m13_2337 -> m13_8  [key=2, style=dotted];
m13_2338 -> m13_2339  [key=0, style=solid];
m13_2338 -> m13_7  [key=2, style=dotted];
m13_2339 -> m13_2334  [key=0, style=bold, color=blue];
m13_3025 -> m13_3026  [key=0, style=solid];
m13_3026 -> m13_3027  [key=0, style=solid];
m13_3026 -> m13_3026  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3027 -> m13_3028  [key=0, style=solid];
m13_3027 -> m13_8  [key=2, style=dotted];
m13_3027 -> m13_3029  [key=1, style=dashed, color=darkseagreen4, label=exception];
m13_3027 -> m13_3030  [key=1, style=dashed, color=darkseagreen4, label=exception];
m13_3028 -> m13_3029  [key=0, style=solid];
m13_3028 -> m13_316  [key=2, style=dotted];
m13_3029 -> m13_3030  [key=0, style=solid];
m13_3029 -> m13_263  [key=2, style=dotted];
m13_3030 -> m13_3031  [key=0, style=solid];
m13_3030 -> m13_7  [key=2, style=dotted];
m13_3031 -> m13_3025  [key=0, style=bold, color=blue];
m13_38 -> m13_39  [key=0, style=solid];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_46  [key=2, style=dotted];
m13_39 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_39 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_39 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_6  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_7  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_7  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_7  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_8  [key=2, style=dotted];
m13_41 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_41 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_45 -> m13_38  [key=0, style=bold, color=blue];
m13_1544 -> m13_1545  [key=0, style=solid];
m13_1545 -> m13_1546  [key=0, style=solid];
m13_1545 -> m13_1554  [key=2, style=dotted];
m13_1545 -> m13_1547  [key=1, style=dashed, color=darkseagreen4, label=g];
m13_1545 -> m13_1548  [key=1, style=dashed, color=darkseagreen4, label=g];
m13_1545 -> m13_1549  [key=1, style=dashed, color=darkseagreen4, label=g];
m13_1546 -> m13_1547  [key=0, style=solid];
m13_1546 -> m13_1555  [key=2, style=dotted];
m13_1546 -> m13_1535  [key=2, style=dotted];
m13_1547 -> m13_1548  [key=0, style=solid];
m13_1547 -> m13_1555  [key=2, style=dotted];
m13_1547 -> m13_1535  [key=2, style=dotted];
m13_1548 -> m13_1549  [key=0, style=solid];
m13_1549 -> m13_1550  [key=0, style=solid];
m13_1549 -> m13_1541  [key=2, style=dotted];
m13_1549 -> m13_1551  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1550 -> m13_1551  [key=0, style=solid];
m13_1550 -> m13_7  [key=2, style=dotted];
m13_1551 -> m13_1552  [key=0, style=solid];
m13_1551 -> m13_8  [key=2, style=dotted];
m13_1552 -> m13_1553  [key=0, style=solid];
m13_1552 -> m13_7  [key=2, style=dotted];
m13_1553 -> m13_1544  [key=0, style=bold, color=blue];
m13_910 -> m13_911  [key=0, style=solid];
m13_911 -> m13_912  [key=0, style=solid];
m13_911 -> m13_914  [key=2, style=dotted];
m13_911 -> m13_6  [key=2, style=dotted];
m13_912 -> m13_913  [key=0, style=solid];
m13_912 -> m13_7  [key=2, style=dotted];
m13_913 -> m13_910  [key=0, style=bold, color=blue];
m13_3268 -> m13_3269  [key=0, style=solid];
m13_3269 -> m13_3270  [key=0, style=solid];
m13_3269 -> m13_1883  [key=2, style=dotted];
m13_3270 -> m13_3271  [key=0, style=solid];
m13_3270 -> m13_274  [key=2, style=dotted];
m13_3271 -> m13_3272  [key=0, style=solid];
m13_3271 -> m13_7  [key=2, style=dotted];
m13_3272 -> m13_3268  [key=0, style=bold, color=blue];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_14  [key=2, style=dotted];
m13_10 -> m13_6  [key=2, style=dotted];
m13_10 -> m13_7  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_8  [key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_7  [key=2, style=dotted];
m13_13 -> m13_9  [key=0, style=bold, color=blue];
m13_1402 -> m13_1403  [key=0, style=solid];
m13_1403 -> m13_1404  [key=0, style=solid];
m13_1403 -> m13_586  [key=2, style=dotted];
m13_1403 -> m13_1405  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1404 -> m13_1402  [key=0, style=bold, color=blue];
m13_572 -> m13_573  [key=0, style=solid];
m13_573 -> m13_574  [key=0, style=solid];
m13_573 -> m13_582  [key=2, style=dotted];
m13_573 -> m13_575  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_573 -> m13_576  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_573 -> m13_579  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_573 -> m13_580  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_574 -> m13_575  [key=0, style=solid];
m13_575 -> m13_576  [key=0, style=solid];
m13_576 -> m13_577  [key=0, style=solid];
m13_576 -> m13_6  [key=2, style=dotted];
m13_576 -> m13_578  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m13_579 -> m13_580  [key=0, style=solid];
m13_579 -> m13_7  [key=2, style=dotted];
m13_580 -> m13_581  [key=0, style=solid];
m13_580 -> m13_7  [key=2, style=dotted];
m13_577 -> m13_578  [key=0, style=solid];
m13_577 -> m13_7  [key=2, style=dotted];
m13_578 -> m13_579  [key=0, style=solid];
m13_578 -> m13_8  [key=2, style=dotted];
m13_578 -> m13_580  [key=1, style=dashed, color=darkseagreen4, label=test2];
m13_581 -> m13_572  [key=0, style=bold, color=blue];
m13_2742 -> m13_2743  [key=0, style=solid];
m13_2743 -> m13_2744  [key=0, style=solid];
m13_2743 -> m13_8  [key=2, style=dotted];
m13_2744 -> m13_2745  [key=0, style=solid];
m13_2744 -> m13_1885  [key=2, style=dotted];
m13_2745 -> m13_2742  [key=0, style=bold, color=blue];
m13_2367 -> m13_2368  [key=0, style=solid];
m13_2368 -> m13_2369  [key=0, style=solid];
m13_2368 -> m13_2373  [key=2, style=dotted];
m13_2369 -> m13_2370  [key=0, style=solid];
m13_2369 -> m13_6  [key=2, style=dotted];
m13_2369 -> m13_2371  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_2370 -> m13_2371  [key=0, style=solid];
m13_2370 -> m13_364  [key=2, style=dotted];
m13_2371 -> m13_2372  [key=0, style=solid];
m13_2371 -> m13_7  [key=2, style=dotted];
m13_2372 -> m13_2367  [key=0, style=bold, color=blue];
m13_2622 -> m13_2623  [key=0, style=solid];
m13_2623 -> m13_2624  [key=0, style=solid];
m13_2623 -> m13_2627  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2623 -> m13_2623  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2624 -> m13_2625  [key=0, style=solid];
m13_2624 -> m13_586  [key=2, style=dotted];
m13_2624 -> m13_2626  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2625 -> m13_2622  [key=0, style=bold, color=blue];
m13_2460 -> m13_2461  [key=0, style=solid];
m13_2461 -> m13_2462  [key=0, style=solid];
m13_2461 -> m13_8  [key=2, style=dotted];
m13_2461 -> m13_2463  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_2461 -> m13_2464  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_2461 -> m13_2465  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_2461 -> m13_2466  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_2462 -> m13_2463  [key=0, style=solid];
m13_2462 -> m13_442  [key=2, style=dotted];
m13_2462 -> m13_7  [key=2, style=dotted];
m13_2463 -> m13_2464  [key=0, style=solid];
m13_2463 -> m13_570  [key=2, style=dotted];
m13_2463 -> m13_7  [key=2, style=dotted];
m13_2464 -> m13_2465  [key=0, style=solid];
m13_2464 -> m13_1221  [key=2, style=dotted];
m13_2464 -> m13_316  [key=2, style=dotted];
m13_2465 -> m13_2466  [key=0, style=solid];
m13_2465 -> m13_1221  [key=2, style=dotted];
m13_2465 -> m13_316  [key=2, style=dotted];
m13_2466 -> m13_2467  [key=0, style=solid];
m13_2466 -> m13_1221  [key=2, style=dotted];
m13_2466 -> m13_1885  [key=2, style=dotted];
m13_2467 -> m13_2460  [key=0, style=bold, color=blue];
m13_3449 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse"];
m13_3450 -> m13_365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m13_3450 -> m13_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m13_3450 -> m13_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m13_3451 -> m13_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_3451 -> m13_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_3451 -> m13_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_3451 -> m13_2966  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_3451 -> m13_2972  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_3451 -> m13_2973  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_3452 -> m13_620  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3453 -> m13_1046  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m13_3454 -> m13_1088  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass"];
m13_3455 -> m13_1100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass"];
m13_3456 -> m13_1184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_3456 -> m13_1185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_3456 -> m13_1186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_3456 -> m13_1187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_3456 -> m13_1190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_3457 -> m13_1297  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3458 -> m13_1324  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3459 -> m13_1331  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3460 -> m13_1338  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3461 -> m13_1345  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3462 -> m13_1352  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3463 -> m13_1359  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3464 -> m13_1366  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3465 -> m13_1373  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3466 -> m13_1387  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3467 -> m13_1395  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3468 -> m13_1520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m13_3468 -> m13_1521  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m13_3469 -> m13_1536  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m13_3469 -> m13_1539  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m13_3469 -> m13_1542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m13_3470 -> m13_1575  [key=1, style=dashed, color=green, label=json];
m13_3471 -> m13_1579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m13_3472 -> m13_1615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1619  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1629  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1633  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1648  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1655  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3472 -> m13_1663  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_3473 -> m13_1676  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1678  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1679  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1680  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1683  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1684  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1685  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1686  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1687  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1688  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1689  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1690  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1691  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1692  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1694  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1695  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1696  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1697  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1699  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1700  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1718  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1719  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1720  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1721  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1722  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1724  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1725  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1726  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1727  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1729  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1732  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1733  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3473 -> m13_1735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_3474 -> m13_1792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m13_3474 -> m13_1793  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m13_3475 -> m13_1848  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_3475 -> m13_1849  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_3475 -> m13_1850  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_3475 -> m13_1851  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_3475 -> m13_1852  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_3475 -> m13_1853  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_3475 -> m13_1854  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_3475 -> m13_1855  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_3476 -> m13_1859  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1860  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1861  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1862  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1863  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1864  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1865  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1866  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1867  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3476 -> m13_1868  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_3477 -> m13_1952  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3478 -> m13_1985  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m13_3478 -> m13_1986  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m13_3479 -> m13_2002  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey"];
m13_3480 -> m13_2040  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass"];
m13_3481 -> m13_2064  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3482 -> m13_2163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector"];
m13_3483 -> m13_2180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m13_3484 -> m13_2185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base"];
m13_3486 -> m13_2199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m13_3487 -> m13_2235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest"];
m13_3488 -> m13_2244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m13_3488 -> m13_2247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m13_3488 -> m13_2248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m13_3489 -> m13_2255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m13_3489 -> m13_2258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m13_3489 -> m13_2259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m13_3490 -> m13_2267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m13_3490 -> m13_2268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m13_3490 -> m13_2271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m13_3490 -> m13_2272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m13_3490 -> m13_2273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m13_3491 -> m13_2328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m13_3491 -> m13_2329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m13_3492 -> m13_2332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor"];
m13_3493 -> m13_2381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m13_3493 -> m13_2382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m13_3494 -> m13_2397  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m13_3494 -> m13_2398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m13_3495 -> m13_2443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_3495 -> m13_2444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_3495 -> m13_2445  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_3495 -> m13_2448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_3495 -> m13_2451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_3496 -> m13_2475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m13_3497 -> m13_2613  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3498 -> m13_2627  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3499 -> m13_2877  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3500 -> m13_2892  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3501 -> m13_2907  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3502 -> m13_3023  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3503 -> m13_3023  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_3504 -> m13_3083  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m13_3505 -> m13_3086  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>"];
m13_3506 -> m13_3125  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3507 -> m13_3136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m13_3508 -> m13_3217  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3509 -> m13_3338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_3509 -> m13_3340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_3509 -> m13_3342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_3509 -> m13_3344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_3509 -> m13_3367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_3509 -> m13_3370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_3509 -> m13_3373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m14_293 -> m14_294  [key=0, style=solid];
m14_293 -> m14_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_293 -> m14_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_294 -> m14_295  [key=0, style=solid];
m14_294 -> m14_296  [key=0, style=solid];
m14_296 -> m14_297  [key=0, style=solid];
m14_296 -> m14_89  [key=2, style=dotted];
m14_296 -> m14_299  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_296 -> m14_300  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_296 -> m14_301  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_298 -> m14_302  [key=0, style=solid];
m14_298 -> m14_118  [key=2, style=dotted];
m14_298 -> m14_98  [key=2, style=dotted];
m14_298 -> m14_61  [key=2, style=dotted];
m14_295 -> m14_302  [key=0, style=solid];
m14_297 -> m14_298  [key=0, style=solid];
m14_297 -> m14_299  [key=0, style=solid];
m14_297 -> m14_106  [key=2, style=dotted];
m14_299 -> m14_300  [key=0, style=solid];
m14_299 -> m14_301  [key=0, style=solid];
m14_300 -> m14_302  [key=0, style=solid];
m14_301 -> m14_302  [key=0, style=solid];
m14_301 -> m14_253  [key=2, style=dotted];
m14_302 -> m14_293  [key=0, style=bold, color=blue];
m14_98 -> m14_99  [key=0, style=solid];
m14_98 -> m14_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_98 -> m14_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_98 -> m14_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_98 -> m14_110  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_121  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_134  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_144  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_153  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_163  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_177  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_188  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_199  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_210  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_219  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_228  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_237  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_245  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_254  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_263  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_273  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_283  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_293  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_303  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_313  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_321  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_331  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_342  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_350  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_361  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_372  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_380  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_388  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_405  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_413  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_421  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_437  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_447  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_459  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_466  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_476  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_487  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_98 -> m14_494  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken token"];
m14_99 -> m14_100  [key=0, style=solid];
m14_99 -> m14_104  [key=2, style=dotted];
m14_100 -> m14_101  [key=0, style=solid];
m14_100 -> m14_102  [key=0, style=solid];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_105  [key=2, style=dotted];
m14_103 -> m14_98  [key=0, style=bold, color=blue];
m14_784 -> m14_785  [key=0, style=solid];
m14_784 -> m14_787  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IJsonLineInfo"];
m14_784 -> m14_753  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m14_784 -> m14_764  [key=0, style=solid, color=green];
m14_784 -> m14_61  [key=2, style=dotted, color=green];
m14_784 -> m14_766  [key=2, style=dotted, color=green];
m14_785 -> m14_786  [key=0, style=solid];
m14_785 -> m14_787  [key=0, style=solid];
m14_785 -> m14_789  [key=2, style=dotted];
m14_787 -> m14_788  [key=0, style=solid];
m14_787 -> m14_790  [key=2, style=dotted];
m14_786 -> m14_788  [key=0, style=solid];
m14_788 -> m14_784  [key=0, style=bold, color=blue];
m14_263 -> m14_264  [key=0, style=solid];
m14_263 -> m14_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_263 -> m14_268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_264 -> m14_265  [key=0, style=solid];
m14_264 -> m14_266  [key=0, style=solid];
m14_266 -> m14_267  [key=0, style=solid];
m14_266 -> m14_89  [key=2, style=dotted];
m14_266 -> m14_269  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_266 -> m14_270  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_266 -> m14_271  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_268 -> m14_272  [key=0, style=solid];
m14_268 -> m14_118  [key=2, style=dotted];
m14_268 -> m14_98  [key=2, style=dotted];
m14_268 -> m14_61  [key=2, style=dotted];
m14_265 -> m14_272  [key=0, style=solid];
m14_267 -> m14_268  [key=0, style=solid];
m14_267 -> m14_269  [key=0, style=solid];
m14_267 -> m14_106  [key=2, style=dotted];
m14_269 -> m14_270  [key=0, style=solid];
m14_269 -> m14_271  [key=0, style=solid];
m14_270 -> m14_272  [key=0, style=solid];
m14_271 -> m14_272  [key=0, style=solid];
m14_271 -> m14_218  [key=2, style=dotted];
m14_272 -> m14_263  [key=0, style=bold, color=blue];
m14_245 -> m14_246  [key=0, style=solid];
m14_245 -> m14_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_246 -> m14_247  [key=0, style=solid];
m14_246 -> m14_89  [key=2, style=dotted];
m14_246 -> m14_249  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_246 -> m14_250  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_246 -> m14_251  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_248 -> m14_252  [key=0, style=solid];
m14_248 -> m14_118  [key=2, style=dotted];
m14_248 -> m14_98  [key=2, style=dotted];
m14_248 -> m14_61  [key=2, style=dotted];
m14_247 -> m14_248  [key=0, style=solid];
m14_247 -> m14_249  [key=0, style=solid];
m14_247 -> m14_106  [key=2, style=dotted];
m14_249 -> m14_250  [key=0, style=solid];
m14_249 -> m14_251  [key=0, style=solid];
m14_250 -> m14_252  [key=0, style=solid];
m14_251 -> m14_252  [key=0, style=solid];
m14_251 -> m14_253  [key=2, style=dotted];
m14_252 -> m14_245  [key=0, style=bold, color=blue];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_89 -> m14_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_89 -> m14_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_89 -> m14_110  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_121  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_134  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_144  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_153  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_163  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_177  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_188  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_199  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_210  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_219  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_228  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_237  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_245  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_254  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_263  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_273  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_283  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_293  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_303  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_313  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_321  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_331  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_342  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_350  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_361  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_372  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_380  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_388  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_405  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_413  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_421  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_437  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_447  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_459  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_466  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_476  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_487  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_89 -> m14_494  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken value"];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_92  [key=0, style=solid];
m14_92 -> m14_93  [key=0, style=solid];
m14_92 -> m14_94  [key=0, style=solid];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_94 -> m14_95  [key=0, style=solid];
m14_91 -> m14_96  [key=0, style=solid];
m14_91 -> m14_97  [key=2, style=dotted];
m14_95 -> m14_96  [key=0, style=solid];
m14_96 -> m14_89  [key=0, style=bold, color=blue];
m14_781 -> m14_782  [key=0, style=solid, color=green];
m14_781 -> m14_773  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m14_781 -> m14_748  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken Load"];
m14_781 -> m14_795  [key=2, style=dotted, color=green];
m14_781 -> m14_783  [key=1, style=dashed, color=green, label=v];
m14_782 -> m14_783  [key=0, style=solid, color=green];
m14_782 -> m14_748  [key=2, style=dotted];
m14_782 -> m14_784  [key=2, style=dotted, color=green];
m14_783 -> m14_781  [key=0, style=bold, color=blue];
m14_783 -> m14_764  [key=0, style=solid, color=green];
m14_790 -> m14_791  [key=0, style=solid];
m14_790 -> m14_792  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_791 -> m14_792  [key=0, style=solid];
m14_792 -> m14_793  [key=0, style=solid];
m14_793 -> m14_790  [key=0, style=bold, color=blue];
m14_574 -> m14_575  [key=0, style=solid];
m14_575 -> m14_576  [key=0, style=solid];
m14_575 -> m14_517  [key=2, style=dotted];
m14_576 -> m14_574  [key=0, style=bold, color=blue];
m14_602 -> m14_603  [key=0, style=solid];
m14_603 -> m14_604  [key=0, style=solid];
m14_603 -> m14_605  [key=2, style=dotted];
m14_604 -> m14_602  [key=0, style=bold, color=blue];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_4  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken node"];
m14_3 -> m14_2  [key=0, style=bold, color=blue];
m14_620 -> m14_621  [key=0, style=solid];
m14_621 -> m14_622  [key=0, style=solid];
m14_621 -> m14_623  [key=2, style=dotted];
m14_622 -> m14_620  [key=0, style=bold, color=blue];
m14_739 -> m14_740  [key=0, style=solid];
m14_739 -> m14_738  [key=3, color=darkorchid, style=bold, label="method methodReturn T ToObject"];
m14_740 -> m14_741  [key=0, style=solid];
m14_740 -> m14_738  [key=2, style=dotted];
m14_741 -> m14_739  [key=0, style=bold, color=blue];
m14_812 -> m14_813  [key=0, style=solid];
m14_812 -> m14_815  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken> SelectTokens"];
m14_813 -> m14_814  [key=0, style=solid];
m14_813 -> m14_815  [key=2, style=dotted];
m14_814 -> m14_812  [key=0, style=bold, color=blue];
m14_548 -> m14_549  [key=0, style=solid];
m14_549 -> m14_550  [key=0, style=solid];
m14_549 -> m14_513  [key=2, style=dotted];
m14_550 -> m14_548  [key=0, style=bold, color=blue];
m14_770 -> m14_771  [key=0, style=solid, color=green];
m14_770 -> m14_784  [key=2, style=dotted, color=green];
m14_303 -> m14_304  [key=0, style=solid];
m14_303 -> m14_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_303 -> m14_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_304 -> m14_305  [key=0, style=solid];
m14_304 -> m14_306  [key=0, style=solid];
m14_306 -> m14_307  [key=0, style=solid];
m14_306 -> m14_89  [key=2, style=dotted];
m14_306 -> m14_309  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_306 -> m14_310  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_306 -> m14_311  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_308 -> m14_312  [key=0, style=solid];
m14_308 -> m14_118  [key=2, style=dotted];
m14_308 -> m14_98  [key=2, style=dotted];
m14_308 -> m14_61  [key=2, style=dotted];
m14_305 -> m14_312  [key=0, style=solid];
m14_307 -> m14_308  [key=0, style=solid];
m14_307 -> m14_309  [key=0, style=solid];
m14_307 -> m14_106  [key=2, style=dotted];
m14_309 -> m14_310  [key=0, style=solid];
m14_309 -> m14_311  [key=0, style=solid];
m14_310 -> m14_312  [key=0, style=solid];
m14_311 -> m14_312  [key=0, style=solid];
m14_311 -> m14_253  [key=2, style=dotted];
m14_312 -> m14_303  [key=0, style=bold, color=blue];
m14_44 -> m14_45  [key=0, style=solid];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_493  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JToken token"];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_48  [key=2, style=dotted];
m14_47 -> m14_44  [key=0, style=bold, color=blue];
m14_62 -> m14_63  [key=0, style=solid];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_65  [key=0, style=solid];
m14_64 -> m14_66  [key=0, style=solid];
m14_64 -> m14_15  [key=2, style=dotted];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_67  [key=2, style=dotted];
m14_66 -> m14_62  [key=0, style=bold, color=blue];
m14_524 -> m14_525  [key=0, style=solid];
m14_525 -> m14_526  [key=0, style=solid];
m14_525 -> m14_517  [key=2, style=dotted];
m14_526 -> m14_524  [key=0, style=bold, color=blue];
m14_527 -> m14_528  [key=0, style=solid];
m14_528 -> m14_529  [key=0, style=solid];
m14_528 -> m14_513  [key=2, style=dotted];
m14_529 -> m14_527  [key=0, style=bold, color=blue];
m14_321 -> m14_322  [key=0, style=solid];
m14_321 -> m14_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_321 -> m14_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_322 -> m14_323  [key=0, style=solid];
m14_322 -> m14_324  [key=0, style=solid];
m14_324 -> m14_325  [key=0, style=solid];
m14_324 -> m14_89  [key=2, style=dotted];
m14_324 -> m14_327  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_324 -> m14_328  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_324 -> m14_329  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_326 -> m14_330  [key=0, style=solid];
m14_326 -> m14_118  [key=2, style=dotted];
m14_326 -> m14_98  [key=2, style=dotted];
m14_326 -> m14_61  [key=2, style=dotted];
m14_323 -> m14_330  [key=0, style=solid];
m14_325 -> m14_326  [key=0, style=solid];
m14_325 -> m14_327  [key=0, style=solid];
m14_325 -> m14_106  [key=2, style=dotted];
m14_327 -> m14_328  [key=0, style=solid];
m14_327 -> m14_329  [key=0, style=solid];
m14_328 -> m14_330  [key=0, style=solid];
m14_329 -> m14_330  [key=0, style=solid];
m14_329 -> m14_152  [key=2, style=dotted];
m14_330 -> m14_321  [key=0, style=bold, color=blue];
m14_571 -> m14_572  [key=0, style=solid];
m14_572 -> m14_573  [key=0, style=solid];
m14_572 -> m14_517  [key=2, style=dotted];
m14_573 -> m14_571  [key=0, style=bold, color=blue];
m14_815 -> m14_816  [key=0, style=solid];
m14_815 -> m14_817  [key=1, style=dashed, color=darkseagreen4, label=bool];
m14_815 -> m14_812  [key=3, color=darkorchid, style=bold, label="Parameter variable string path"];
m14_815 -> m14_13  [key=3, color=darkorchid, style=bold, label="Parameter variable bool errorWhenNoMatch"];
m14_816 -> m14_817  [key=0, style=solid];
m14_816 -> m14_809  [key=2, style=dotted];
m14_817 -> m14_818  [key=0, style=solid];
m14_817 -> m14_810  [key=2, style=dotted];
m14_818 -> m14_815  [key=0, style=bold, color=blue];
m14_121 -> m14_122  [key=0, style=solid];
m14_121 -> m14_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_122 -> m14_123  [key=0, style=solid];
m14_122 -> m14_89  [key=2, style=dotted];
m14_122 -> m14_125  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_122 -> m14_126  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_122 -> m14_127  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_122 -> m14_128  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_122 -> m14_129  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_124 -> m14_130  [key=0, style=solid];
m14_124 -> m14_118  [key=2, style=dotted];
m14_124 -> m14_98  [key=2, style=dotted];
m14_124 -> m14_61  [key=2, style=dotted];
m14_123 -> m14_124  [key=0, style=solid];
m14_123 -> m14_125  [key=0, style=solid];
m14_123 -> m14_106  [key=2, style=dotted];
m14_125 -> m14_126  [key=0, style=solid];
m14_125 -> m14_127  [key=0, style=solid];
m14_126 -> m14_130  [key=0, style=solid];
m14_127 -> m14_128  [key=0, style=solid];
m14_127 -> m14_129  [key=0, style=solid];
m14_128 -> m14_130  [key=0, style=solid];
m14_128 -> m14_131  [key=2, style=dotted];
m14_129 -> m14_130  [key=0, style=solid];
m14_129 -> m14_132  [key=2, style=dotted];
m14_129 -> m14_133  [key=2, style=dotted];
m14_130 -> m14_121  [key=0, style=bold, color=blue];
m14_413 -> m14_414  [key=0, style=solid];
m14_413 -> m14_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_414 -> m14_415  [key=0, style=solid];
m14_414 -> m14_89  [key=2, style=dotted];
m14_414 -> m14_417  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_414 -> m14_418  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_414 -> m14_419  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_416 -> m14_420  [key=0, style=solid];
m14_416 -> m14_118  [key=2, style=dotted];
m14_416 -> m14_98  [key=2, style=dotted];
m14_416 -> m14_61  [key=2, style=dotted];
m14_415 -> m14_416  [key=0, style=solid];
m14_415 -> m14_417  [key=0, style=solid];
m14_415 -> m14_106  [key=2, style=dotted];
m14_417 -> m14_418  [key=0, style=solid];
m14_417 -> m14_419  [key=0, style=solid];
m14_418 -> m14_420  [key=0, style=solid];
m14_419 -> m14_420  [key=0, style=solid];
m14_419 -> m14_371  [key=2, style=dotted];
m14_420 -> m14_413  [key=0, style=bold, color=blue];
m14_584 -> m14_585  [key=0, style=solid];
m14_585 -> m14_586  [key=0, style=solid];
m14_585 -> m14_587  [key=2, style=dotted];
m14_586 -> m14_584  [key=0, style=bold, color=blue];
m14_624 -> m14_625  [key=0, style=solid];
m14_625 -> m14_626  [key=0, style=solid];
m14_625 -> m14_49  [key=2, style=dotted];
m14_625 -> m14_627  [key=2, style=dotted];
m14_626 -> m14_624  [key=0, style=bold, color=blue];
m14_771 -> m14_764  [key=0, style=solid, color=green];
m14_49 -> m14_50  [key=0, style=solid];
m14_50 -> m14_51  [key=0, style=solid];
m14_51 -> m14_49  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m14_380 -> m14_381  [key=0, style=solid];
m14_380 -> m14_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_381 -> m14_382  [key=0, style=solid];
m14_381 -> m14_89  [key=2, style=dotted];
m14_381 -> m14_384  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_381 -> m14_385  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_381 -> m14_386  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_383 -> m14_387  [key=0, style=solid];
m14_383 -> m14_118  [key=2, style=dotted];
m14_383 -> m14_98  [key=2, style=dotted];
m14_383 -> m14_61  [key=2, style=dotted];
m14_382 -> m14_383  [key=0, style=solid];
m14_382 -> m14_384  [key=0, style=solid];
m14_382 -> m14_106  [key=2, style=dotted];
m14_384 -> m14_385  [key=0, style=solid];
m14_384 -> m14_386  [key=0, style=solid];
m14_385 -> m14_387  [key=0, style=solid];
m14_386 -> m14_387  [key=0, style=solid];
m14_386 -> m14_341  [key=2, style=dotted];
m14_387 -> m14_380  [key=0, style=bold, color=blue];
m14_273 -> m14_274  [key=0, style=solid];
m14_273 -> m14_276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_273 -> m14_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_274 -> m14_275  [key=0, style=solid];
m14_274 -> m14_276  [key=0, style=solid];
m14_276 -> m14_277  [key=0, style=solid];
m14_276 -> m14_89  [key=2, style=dotted];
m14_276 -> m14_279  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_276 -> m14_280  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_276 -> m14_281  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_278 -> m14_282  [key=0, style=solid];
m14_278 -> m14_118  [key=2, style=dotted];
m14_278 -> m14_98  [key=2, style=dotted];
m14_278 -> m14_61  [key=2, style=dotted];
m14_275 -> m14_282  [key=0, style=solid];
m14_277 -> m14_278  [key=0, style=solid];
m14_277 -> m14_279  [key=0, style=solid];
m14_277 -> m14_106  [key=2, style=dotted];
m14_279 -> m14_280  [key=0, style=solid];
m14_279 -> m14_281  [key=0, style=solid];
m14_280 -> m14_282  [key=0, style=solid];
m14_281 -> m14_282  [key=0, style=solid];
m14_281 -> m14_227  [key=2, style=dotted];
m14_282 -> m14_273  [key=0, style=bold, color=blue];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_27  [key=0, style=bold, color=crimson];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label=parent];
m14_25 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label=parent];
m14_27 -> m14_28  [key=0, style=solid];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_29  [key=0, style=solid];
m14_28 -> m14_26  [key=0, style=solid];
m14_28 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label=parent];
m14_29 -> m14_24  [key=0, style=bold, color=blue];
m14_539 -> m14_540  [key=0, style=solid];
m14_540 -> m14_541  [key=0, style=solid];
m14_540 -> m14_517  [key=2, style=dotted];
m14_541 -> m14_539  [key=0, style=bold, color=blue];
m14_510 -> m14_511  [key=0, style=solid];
m14_511 -> m14_512  [key=0, style=solid];
m14_511 -> m14_513  [key=2, style=dotted];
m14_512 -> m14_510  [key=0, style=bold, color=blue];
m14_350 -> m14_351  [key=0, style=solid];
m14_350 -> m14_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_350 -> m14_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_351 -> m14_352  [key=0, style=solid];
m14_351 -> m14_353  [key=0, style=solid];
m14_353 -> m14_354  [key=0, style=solid];
m14_353 -> m14_89  [key=2, style=dotted];
m14_353 -> m14_356  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_353 -> m14_357  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_353 -> m14_358  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_355 -> m14_359  [key=0, style=solid];
m14_355 -> m14_118  [key=2, style=dotted];
m14_355 -> m14_98  [key=2, style=dotted];
m14_355 -> m14_61  [key=2, style=dotted];
m14_352 -> m14_359  [key=0, style=solid];
m14_354 -> m14_355  [key=0, style=solid];
m14_354 -> m14_356  [key=0, style=solid];
m14_354 -> m14_106  [key=2, style=dotted];
m14_356 -> m14_357  [key=0, style=solid];
m14_356 -> m14_358  [key=0, style=solid];
m14_357 -> m14_359  [key=0, style=solid];
m14_358 -> m14_359  [key=0, style=solid];
m14_358 -> m14_360  [key=2, style=dotted];
m14_359 -> m14_350  [key=0, style=bold, color=blue];
m14_595 -> m14_596  [key=0, style=solid];
m14_596 -> m14_597  [key=0, style=solid];
m14_596 -> m14_598  [key=2, style=dotted];
m14_597 -> m14_595  [key=0, style=bold, color=blue];
m14_237 -> m14_238  [key=0, style=solid];
m14_237 -> m14_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_238 -> m14_239  [key=0, style=solid];
m14_238 -> m14_89  [key=2, style=dotted];
m14_238 -> m14_241  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_238 -> m14_242  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_238 -> m14_243  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_240 -> m14_244  [key=0, style=solid];
m14_240 -> m14_118  [key=2, style=dotted];
m14_240 -> m14_98  [key=2, style=dotted];
m14_240 -> m14_61  [key=2, style=dotted];
m14_239 -> m14_240  [key=0, style=solid];
m14_239 -> m14_241  [key=0, style=solid];
m14_239 -> m14_106  [key=2, style=dotted];
m14_241 -> m14_242  [key=0, style=solid];
m14_241 -> m14_243  [key=0, style=solid];
m14_242 -> m14_244  [key=0, style=solid];
m14_243 -> m14_244  [key=0, style=solid];
m14_243 -> m14_209  [key=2, style=dotted];
m14_244 -> m14_237  [key=0, style=bold, color=blue];
m14_767 -> m14_768  [key=0, style=solid, color=green];
m14_283 -> m14_284  [key=0, style=solid];
m14_283 -> m14_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_283 -> m14_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_284 -> m14_285  [key=0, style=solid];
m14_284 -> m14_286  [key=0, style=solid];
m14_286 -> m14_287  [key=0, style=solid];
m14_286 -> m14_89  [key=2, style=dotted];
m14_286 -> m14_289  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_286 -> m14_290  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_286 -> m14_291  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_288 -> m14_292  [key=0, style=solid];
m14_288 -> m14_118  [key=2, style=dotted];
m14_288 -> m14_98  [key=2, style=dotted];
m14_288 -> m14_61  [key=2, style=dotted];
m14_285 -> m14_292  [key=0, style=solid];
m14_287 -> m14_288  [key=0, style=solid];
m14_287 -> m14_289  [key=0, style=solid];
m14_287 -> m14_106  [key=2, style=dotted];
m14_289 -> m14_290  [key=0, style=solid];
m14_289 -> m14_291  [key=0, style=solid];
m14_290 -> m14_292  [key=0, style=solid];
m14_291 -> m14_292  [key=0, style=solid];
m14_291 -> m14_236  [key=2, style=dotted];
m14_292 -> m14_283  [key=0, style=bold, color=blue];
m14_466 -> m14_467  [key=0, style=solid];
m14_466 -> m14_469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_466 -> m14_471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_467 -> m14_468  [key=0, style=solid];
m14_467 -> m14_469  [key=0, style=solid];
m14_469 -> m14_470  [key=0, style=solid];
m14_469 -> m14_89  [key=2, style=dotted];
m14_469 -> m14_472  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_469 -> m14_474  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_471 -> m14_475  [key=0, style=solid];
m14_471 -> m14_118  [key=2, style=dotted];
m14_471 -> m14_98  [key=2, style=dotted];
m14_471 -> m14_61  [key=2, style=dotted];
m14_468 -> m14_475  [key=0, style=solid];
m14_470 -> m14_471  [key=0, style=solid];
m14_470 -> m14_472  [key=0, style=solid];
m14_470 -> m14_106  [key=2, style=dotted];
m14_472 -> m14_473  [key=0, style=solid];
m14_472 -> m14_474  [key=0, style=solid];
m14_474 -> m14_475  [key=0, style=solid];
m14_474 -> m14_404  [key=2, style=dotted];
m14_474 -> m14_465  [key=2, style=dotted];
m14_473 -> m14_475  [key=0, style=solid];
m14_475 -> m14_466  [key=0, style=bold, color=blue];
m14_219 -> m14_220  [key=0, style=solid];
m14_219 -> m14_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_220 -> m14_221  [key=0, style=solid];
m14_220 -> m14_89  [key=2, style=dotted];
m14_220 -> m14_223  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_220 -> m14_224  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_220 -> m14_225  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_222 -> m14_226  [key=0, style=solid];
m14_222 -> m14_118  [key=2, style=dotted];
m14_222 -> m14_98  [key=2, style=dotted];
m14_222 -> m14_61  [key=2, style=dotted];
m14_221 -> m14_222  [key=0, style=solid];
m14_221 -> m14_223  [key=0, style=solid];
m14_221 -> m14_106  [key=2, style=dotted];
m14_223 -> m14_224  [key=0, style=solid];
m14_223 -> m14_225  [key=0, style=solid];
m14_224 -> m14_226  [key=0, style=solid];
m14_225 -> m14_226  [key=0, style=solid];
m14_225 -> m14_227  [key=2, style=dotted];
m14_226 -> m14_219  [key=0, style=bold, color=blue];
m14_610 -> m14_611  [key=0, style=solid];
m14_611 -> m14_612  [key=0, style=solid];
m14_611 -> m14_517  [key=2, style=dotted];
m14_612 -> m14_610  [key=0, style=bold, color=blue];
m14_188 -> m14_189  [key=0, style=solid];
m14_188 -> m14_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_188 -> m14_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_189 -> m14_190  [key=0, style=solid];
m14_189 -> m14_191  [key=0, style=solid];
m14_191 -> m14_192  [key=0, style=solid];
m14_191 -> m14_89  [key=2, style=dotted];
m14_191 -> m14_194  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_191 -> m14_195  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_191 -> m14_196  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_193 -> m14_197  [key=0, style=solid];
m14_193 -> m14_118  [key=2, style=dotted];
m14_193 -> m14_98  [key=2, style=dotted];
m14_193 -> m14_61  [key=2, style=dotted];
m14_190 -> m14_197  [key=0, style=solid];
m14_192 -> m14_193  [key=0, style=solid];
m14_192 -> m14_194  [key=0, style=solid];
m14_192 -> m14_106  [key=2, style=dotted];
m14_194 -> m14_195  [key=0, style=solid];
m14_194 -> m14_196  [key=0, style=solid];
m14_195 -> m14_197  [key=0, style=solid];
m14_196 -> m14_197  [key=0, style=solid];
m14_196 -> m14_198  [key=2, style=dotted];
m14_197 -> m14_188  [key=0, style=bold, color=blue];
m14_772 -> m14_773  [key=0, style=solid, color=green];
m14_772 -> m14_774  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken Parse"];
m14_773 -> m14_774  [key=0, style=solid, color=green];
m14_773 -> m14_779  [key=2, style=dotted];
m14_773 -> m14_780  [key=2, style=dotted];
m14_773 -> m14_775  [key=1, style=dashed, color=green, label=v];
m14_773 -> m14_776  [key=1, style=dashed, color=darkseagreen4, label=reader];
m14_773 -> m14_793  [key=2, style=dotted, color=green];
m14_773 -> m14_794  [key=2, style=dotted, color=green];
m14_774 -> m14_775  [key=0, style=solid, color=green];
m14_774 -> m14_781  [key=2, style=dotted];
m14_774 -> m14_777  [key=1, style=dashed, color=darkseagreen4, label=t];
m14_774 -> m14_784  [key=2, style=dotted, color=green];
m14_775 -> m14_776  [key=0, style=solid];
m14_775 -> m14_777  [key=0, style=solid];
m14_775 -> m14_765  [key=2, style=dotted];
m14_775 -> m14_764  [key=0, style=solid, color=green];
m14_776 -> m14_778  [key=0, style=solid];
m14_776 -> m14_766  [key=2, style=dotted];
m14_776 -> m14_777  [key=0, style=solid, color=green];
m14_777 -> m14_778  [key=0, style=solid, color=green];
m14_777 -> m14_795  [key=2, style=dotted, color=green];
m14_777 -> m14_779  [key=1, style=dashed, color=green, label=v];
m14_778 -> m14_772  [key=0, style=bold, color=blue];
m14_778 -> m14_779  [key=0, style=solid, color=green];
m14_778 -> m14_784  [key=2, style=dotted, color=green];
m14_177 -> m14_178  [key=0, style=solid];
m14_177 -> m14_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_177 -> m14_182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_178 -> m14_179  [key=0, style=solid];
m14_178 -> m14_180  [key=0, style=solid];
m14_180 -> m14_181  [key=0, style=solid];
m14_180 -> m14_89  [key=2, style=dotted];
m14_180 -> m14_183  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_180 -> m14_184  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_180 -> m14_185  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_182 -> m14_186  [key=0, style=solid];
m14_182 -> m14_118  [key=2, style=dotted];
m14_182 -> m14_98  [key=2, style=dotted];
m14_182 -> m14_61  [key=2, style=dotted];
m14_179 -> m14_186  [key=0, style=solid];
m14_181 -> m14_182  [key=0, style=solid];
m14_181 -> m14_183  [key=0, style=solid];
m14_181 -> m14_106  [key=2, style=dotted];
m14_183 -> m14_184  [key=0, style=solid];
m14_183 -> m14_185  [key=0, style=solid];
m14_184 -> m14_186  [key=0, style=solid];
m14_185 -> m14_186  [key=0, style=solid];
m14_185 -> m14_187  [key=2, style=dotted];
m14_186 -> m14_177  [key=0, style=bold, color=blue];
m14_447 -> m14_448  [key=0, style=solid];
m14_447 -> m14_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_447 -> m14_452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_448 -> m14_449  [key=0, style=solid];
m14_448 -> m14_450  [key=0, style=solid];
m14_450 -> m14_451  [key=0, style=solid];
m14_450 -> m14_89  [key=2, style=dotted];
m14_450 -> m14_453  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_450 -> m14_455  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_450 -> m14_456  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_450 -> m14_457  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_452 -> m14_458  [key=0, style=solid];
m14_452 -> m14_118  [key=2, style=dotted];
m14_452 -> m14_98  [key=2, style=dotted];
m14_452 -> m14_61  [key=2, style=dotted];
m14_449 -> m14_458  [key=0, style=solid];
m14_451 -> m14_452  [key=0, style=solid];
m14_451 -> m14_453  [key=0, style=solid];
m14_451 -> m14_106  [key=2, style=dotted];
m14_453 -> m14_454  [key=0, style=solid];
m14_453 -> m14_455  [key=0, style=solid];
m14_455 -> m14_456  [key=0, style=solid];
m14_455 -> m14_457  [key=0, style=solid];
m14_456 -> m14_458  [key=0, style=solid];
m14_456 -> m14_445  [key=2, style=dotted];
m14_457 -> m14_458  [key=0, style=solid];
m14_457 -> m14_446  [key=2, style=dotted];
m14_457 -> m14_404  [key=2, style=dotted];
m14_454 -> m14_458  [key=0, style=solid];
m14_458 -> m14_447  [key=0, style=bold, color=blue];
m14_144 -> m14_145  [key=0, style=solid];
m14_144 -> m14_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_145 -> m14_146  [key=0, style=solid];
m14_145 -> m14_89  [key=2, style=dotted];
m14_145 -> m14_148  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_145 -> m14_149  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_145 -> m14_150  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_147 -> m14_151  [key=0, style=solid];
m14_147 -> m14_118  [key=2, style=dotted];
m14_147 -> m14_98  [key=2, style=dotted];
m14_147 -> m14_61  [key=2, style=dotted];
m14_146 -> m14_147  [key=0, style=solid];
m14_146 -> m14_148  [key=0, style=solid];
m14_146 -> m14_106  [key=2, style=dotted];
m14_148 -> m14_149  [key=0, style=solid];
m14_148 -> m14_150  [key=0, style=solid];
m14_149 -> m14_151  [key=0, style=solid];
m14_150 -> m14_151  [key=0, style=solid];
m14_150 -> m14_152  [key=2, style=dotted];
m14_151 -> m14_144  [key=0, style=bold, color=blue];
m14_545 -> m14_546  [key=0, style=solid];
m14_546 -> m14_547  [key=0, style=solid];
m14_546 -> m14_513  [key=2, style=dotted];
m14_547 -> m14_545  [key=0, style=bold, color=blue];
m14_613 -> m14_614  [key=0, style=solid];
m14_614 -> m14_615  [key=0, style=solid];
m14_614 -> m14_616  [key=2, style=dotted];
m14_615 -> m14_613  [key=0, style=bold, color=blue];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Formatting"];
m14_79 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label="params Newtonsoft.Json.JsonConverter[]"];
m14_79 -> m14_77  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Formatting formatting"];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_86  [key=2, style=dotted];
m14_80 -> m14_84  [key=1, style=dashed, color=darkseagreen4, label=sw];
m14_82 -> m14_83  [key=0, style=solid];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_74  [key=2, style=dotted];
m14_81 -> m14_82  [key=0, style=solid];
m14_81 -> m14_87  [key=2, style=dotted];
m14_81 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label=jw];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_88  [key=2, style=dotted];
m14_85 -> m14_79  [key=0, style=bold, color=blue];
m14_7 -> m14_8  [key=0, style=solid];
m14_8 -> m14_7  [key=0, style=bold, color=blue];
m14_592 -> m14_593  [key=0, style=solid];
m14_593 -> m14_594  [key=0, style=solid];
m14_593 -> m14_513  [key=2, style=dotted];
m14_594 -> m14_592  [key=0, style=bold, color=blue];
m14_342 -> m14_343  [key=0, style=solid];
m14_342 -> m14_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_343 -> m14_344  [key=0, style=solid];
m14_343 -> m14_89  [key=2, style=dotted];
m14_343 -> m14_346  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_343 -> m14_347  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_343 -> m14_348  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_345 -> m14_349  [key=0, style=solid];
m14_345 -> m14_118  [key=2, style=dotted];
m14_345 -> m14_98  [key=2, style=dotted];
m14_345 -> m14_61  [key=2, style=dotted];
m14_344 -> m14_345  [key=0, style=solid];
m14_344 -> m14_346  [key=0, style=solid];
m14_344 -> m14_106  [key=2, style=dotted];
m14_346 -> m14_347  [key=0, style=solid];
m14_346 -> m14_348  [key=0, style=solid];
m14_347 -> m14_349  [key=0, style=solid];
m14_348 -> m14_349  [key=0, style=solid];
m14_348 -> m14_187  [key=2, style=dotted];
m14_349 -> m14_342  [key=0, style=bold, color=blue];
m14_163 -> m14_164  [key=0, style=solid];
m14_163 -> m14_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_163 -> m14_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_164 -> m14_165  [key=0, style=solid];
m14_164 -> m14_166  [key=0, style=solid];
m14_166 -> m14_167  [key=0, style=solid];
m14_166 -> m14_89  [key=2, style=dotted];
m14_166 -> m14_169  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_166 -> m14_171  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_166 -> m14_172  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_166 -> m14_173  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_166 -> m14_174  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_166 -> m14_175  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_168 -> m14_176  [key=0, style=solid];
m14_168 -> m14_118  [key=2, style=dotted];
m14_168 -> m14_98  [key=2, style=dotted];
m14_168 -> m14_61  [key=2, style=dotted];
m14_165 -> m14_176  [key=0, style=solid];
m14_167 -> m14_168  [key=0, style=solid];
m14_167 -> m14_169  [key=0, style=solid];
m14_167 -> m14_106  [key=2, style=dotted];
m14_169 -> m14_170  [key=0, style=solid];
m14_169 -> m14_171  [key=0, style=solid];
m14_171 -> m14_172  [key=0, style=solid];
m14_171 -> m14_173  [key=0, style=solid];
m14_172 -> m14_176  [key=0, style=solid];
m14_173 -> m14_174  [key=0, style=solid];
m14_173 -> m14_175  [key=0, style=solid];
m14_174 -> m14_176  [key=0, style=solid];
m14_174 -> m14_131  [key=2, style=dotted];
m14_175 -> m14_176  [key=0, style=solid];
m14_175 -> m14_132  [key=2, style=dotted];
m14_175 -> m14_133  [key=2, style=dotted];
m14_170 -> m14_176  [key=0, style=solid];
m14_176 -> m14_163  [key=0, style=bold, color=blue];
m14_779 -> m14_764  [key=0, style=solid, color=green];
m14_421 -> m14_422  [key=0, style=solid];
m14_421 -> m14_424  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_421 -> m14_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_421 -> m14_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_422 -> m14_423  [key=0, style=solid];
m14_422 -> m14_424  [key=0, style=solid];
m14_424 -> m14_425  [key=0, style=solid];
m14_424 -> m14_89  [key=2, style=dotted];
m14_424 -> m14_427  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_424 -> m14_428  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_424 -> m14_429  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_424 -> m14_430  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_424 -> m14_431  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_424 -> m14_432  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_426 -> m14_434  [key=0, style=solid];
m14_426 -> m14_118  [key=2, style=dotted];
m14_426 -> m14_98  [key=2, style=dotted];
m14_426 -> m14_61  [key=2, style=dotted];
m14_433 -> m14_434  [key=0, style=solid];
m14_433 -> m14_118  [key=2, style=dotted];
m14_433 -> m14_98  [key=2, style=dotted];
m14_433 -> m14_61  [key=2, style=dotted];
m14_423 -> m14_434  [key=0, style=solid];
m14_425 -> m14_426  [key=0, style=solid];
m14_425 -> m14_427  [key=0, style=solid];
m14_425 -> m14_106  [key=2, style=dotted];
m14_427 -> m14_428  [key=0, style=solid];
m14_427 -> m14_429  [key=0, style=solid];
m14_428 -> m14_434  [key=0, style=solid];
m14_428 -> m14_404  [key=2, style=dotted];
m14_428 -> m14_435  [key=2, style=dotted];
m14_429 -> m14_430  [key=0, style=solid];
m14_429 -> m14_431  [key=0, style=solid];
m14_430 -> m14_434  [key=0, style=solid];
m14_430 -> m14_436  [key=2, style=dotted];
m14_431 -> m14_432  [key=0, style=solid];
m14_431 -> m14_433  [key=0, style=solid];
m14_432 -> m14_434  [key=0, style=solid];
m14_434 -> m14_421  [key=0, style=bold, color=blue];
m14_645 -> m14_646  [key=0, style=solid];
m14_645 -> m14_634  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken FromObject"];
m14_646 -> m14_647  [key=0, style=solid];
m14_646 -> m14_648  [key=2, style=dotted];
m14_646 -> m14_634  [key=2, style=dotted];
m14_647 -> m14_645  [key=0, style=bold, color=blue];
m14_824 -> m14_825  [key=0, style=solid];
m14_824 -> m14_819  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Dynamic.DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject"];
m14_825 -> m14_826  [key=0, style=solid];
m14_825 -> m14_819  [key=2, style=dotted];
m14_826 -> m14_824  [key=0, style=bold, color=blue];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_111 -> m14_112  [key=0, style=solid];
m14_111 -> m14_89  [key=2, style=dotted];
m14_111 -> m14_114  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_111 -> m14_115  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_111 -> m14_116  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_113 -> m14_117  [key=0, style=solid];
m14_113 -> m14_118  [key=2, style=dotted];
m14_113 -> m14_98  [key=2, style=dotted];
m14_113 -> m14_61  [key=2, style=dotted];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_114  [key=0, style=solid];
m14_112 -> m14_106  [key=2, style=dotted];
m14_114 -> m14_115  [key=0, style=solid];
m14_114 -> m14_116  [key=0, style=solid];
m14_115 -> m14_117  [key=0, style=solid];
m14_115 -> m14_119  [key=2, style=dotted];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_120  [key=2, style=dotted];
m14_117 -> m14_110  [key=0, style=bold, color=blue];
m14_405 -> m14_406  [key=0, style=solid];
m14_405 -> m14_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_406 -> m14_407  [key=0, style=solid];
m14_406 -> m14_89  [key=2, style=dotted];
m14_406 -> m14_409  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_406 -> m14_410  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_406 -> m14_411  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_408 -> m14_412  [key=0, style=solid];
m14_408 -> m14_118  [key=2, style=dotted];
m14_408 -> m14_98  [key=2, style=dotted];
m14_408 -> m14_61  [key=2, style=dotted];
m14_407 -> m14_408  [key=0, style=solid];
m14_407 -> m14_409  [key=0, style=solid];
m14_407 -> m14_106  [key=2, style=dotted];
m14_409 -> m14_410  [key=0, style=solid];
m14_409 -> m14_411  [key=0, style=solid];
m14_410 -> m14_412  [key=0, style=solid];
m14_411 -> m14_412  [key=0, style=solid];
m14_411 -> m14_360  [key=2, style=dotted];
m14_412 -> m14_405  [key=0, style=bold, color=blue];
m14_634 -> m14_635  [key=0, style=solid];
m14_634 -> m14_636  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m14_634 -> m14_639  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_634 -> m14_637  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken FromObjectInternal"];
m14_634 -> m14_645  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m14_634 -> m14_649  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonSerializer jsonSerializer"];
m14_635 -> m14_636  [key=0, style=solid];
m14_635 -> m14_104  [key=2, style=dotted];
m14_636 -> m14_637  [key=0, style=solid];
m14_636 -> m14_104  [key=2, style=dotted];
m14_639 -> m14_640  [key=0, style=solid];
m14_639 -> m14_644  [key=2, style=dotted];
m14_637 -> m14_638  [key=0, style=solid];
m14_638 -> m14_639  [key=0, style=solid];
m14_638 -> m14_643  [key=2, style=dotted];
m14_638 -> m14_640  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m14_640 -> m14_641  [key=0, style=solid];
m14_641 -> m14_642  [key=0, style=solid];
m14_642 -> m14_634  [key=0, style=bold, color=blue];
m14_606 -> m14_607  [key=0, style=solid];
m14_607 -> m14_608  [key=0, style=solid];
m14_607 -> m14_609  [key=2, style=dotted];
m14_608 -> m14_606  [key=0, style=bold, color=blue];
m14_459 -> m14_460  [key=0, style=solid];
m14_459 -> m14_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_460 -> m14_461  [key=0, style=solid];
m14_460 -> m14_89  [key=2, style=dotted];
m14_460 -> m14_463  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_462 -> m14_464  [key=0, style=solid];
m14_462 -> m14_118  [key=2, style=dotted];
m14_462 -> m14_98  [key=2, style=dotted];
m14_462 -> m14_61  [key=2, style=dotted];
m14_461 -> m14_462  [key=0, style=solid];
m14_461 -> m14_463  [key=0, style=solid];
m14_461 -> m14_106  [key=2, style=dotted];
m14_463 -> m14_464  [key=0, style=solid];
m14_463 -> m14_404  [key=2, style=dotted];
m14_463 -> m14_465  [key=2, style=dotted];
m14_464 -> m14_459  [key=0, style=bold, color=blue];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_21  [key=0, style=solid];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_17  [key=2, style=dotted];
m14_20 -> m14_23  [key=0, style=solid];
m14_20 -> m14_15  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_16  [key=2, style=dotted];
m14_23 -> m14_18  [key=0, style=bold, color=blue];
m14_564 -> m14_565  [key=0, style=solid];
m14_565 -> m14_566  [key=0, style=solid];
m14_565 -> m14_567  [key=2, style=dotted];
m14_566 -> m14_564  [key=0, style=bold, color=blue];
m14_652 -> m14_653  [key=0, style=solid];
m14_652 -> m14_655  [key=3, color=darkorchid, style=bold, label="method methodReturn T ToObject"];
m14_653 -> m14_654  [key=0, style=solid];
m14_653 -> m14_655  [key=2, style=dotted];
m14_654 -> m14_652  [key=0, style=bold, color=blue];
m14_437 -> m14_438  [key=0, style=solid];
m14_437 -> m14_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_438 -> m14_439  [key=0, style=solid];
m14_438 -> m14_89  [key=2, style=dotted];
m14_438 -> m14_441  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_438 -> m14_442  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_438 -> m14_443  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_440 -> m14_444  [key=0, style=solid];
m14_440 -> m14_118  [key=2, style=dotted];
m14_440 -> m14_98  [key=2, style=dotted];
m14_440 -> m14_61  [key=2, style=dotted];
m14_439 -> m14_440  [key=0, style=solid];
m14_439 -> m14_441  [key=0, style=solid];
m14_439 -> m14_106  [key=2, style=dotted];
m14_441 -> m14_442  [key=0, style=solid];
m14_441 -> m14_443  [key=0, style=solid];
m14_442 -> m14_444  [key=0, style=solid];
m14_442 -> m14_445  [key=2, style=dotted];
m14_443 -> m14_444  [key=0, style=solid];
m14_443 -> m14_446  [key=2, style=dotted];
m14_443 -> m14_404  [key=2, style=dotted];
m14_444 -> m14_437  [key=0, style=bold, color=blue];
m14_599 -> m14_600  [key=0, style=solid];
m14_600 -> m14_601  [key=0, style=solid];
m14_600 -> m14_517  [key=2, style=dotted];
m14_601 -> m14_599  [key=0, style=bold, color=blue];
m14_210 -> m14_211  [key=0, style=solid];
m14_210 -> m14_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_211 -> m14_212  [key=0, style=solid];
m14_211 -> m14_89  [key=2, style=dotted];
m14_211 -> m14_214  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_211 -> m14_215  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_211 -> m14_216  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_213 -> m14_217  [key=0, style=solid];
m14_213 -> m14_118  [key=2, style=dotted];
m14_213 -> m14_98  [key=2, style=dotted];
m14_213 -> m14_61  [key=2, style=dotted];
m14_212 -> m14_213  [key=0, style=solid];
m14_212 -> m14_214  [key=0, style=solid];
m14_212 -> m14_106  [key=2, style=dotted];
m14_214 -> m14_215  [key=0, style=solid];
m14_214 -> m14_216  [key=0, style=solid];
m14_215 -> m14_217  [key=0, style=solid];
m14_216 -> m14_217  [key=0, style=solid];
m14_216 -> m14_218  [key=2, style=dotted];
m14_217 -> m14_210  [key=0, style=bold, color=blue];
m14_765 -> m14_766  [key=0, style=solid, color=green];
m14_542 -> m14_543  [key=0, style=solid];
m14_543 -> m14_544  [key=0, style=solid];
m14_543 -> m14_513  [key=2, style=dotted];
m14_544 -> m14_542  [key=0, style=bold, color=blue];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_79  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToString"];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_79  [key=2, style=dotted];
m14_78 -> m14_76  [key=0, style=bold, color=blue];
m14_797 -> m14_798  [key=0, style=solid];
m14_797 -> m14_800  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken SelectToken"];
m14_798 -> m14_799  [key=0, style=solid];
m14_798 -> m14_800  [key=2, style=dotted];
m14_799 -> m14_797  [key=0, style=bold, color=blue];
m14_655 -> m14_656  [key=0, style=solid];
m14_655 -> m14_657  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_655 -> m14_735  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_655 -> m14_494  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToObject"];
m14_655 -> m14_487  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToObject"];
m14_655 -> m14_738  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToObject"];
m14_656 -> m14_657  [key=0, style=solid];
m14_656 -> m14_735  [key=0, style=solid];
m14_657 -> m14_658  [key=0, style=solid];
m14_657 -> m14_737  [key=2, style=dotted];
m14_735 -> m14_736  [key=0, style=solid];
m14_735 -> m14_648  [key=2, style=dotted];
m14_735 -> m14_738  [key=2, style=dotted];
m14_658 -> m14_659  [key=0, style=solid];
m14_658 -> m14_661  [key=0, style=solid];
m14_658 -> m14_663  [key=0, style=solid];
m14_658 -> m14_665  [key=0, style=solid];
m14_658 -> m14_667  [key=0, style=solid];
m14_658 -> m14_669  [key=0, style=solid];
m14_658 -> m14_671  [key=0, style=solid];
m14_658 -> m14_673  [key=0, style=solid];
m14_658 -> m14_675  [key=0, style=solid];
m14_658 -> m14_677  [key=0, style=solid];
m14_658 -> m14_679  [key=0, style=solid];
m14_658 -> m14_681  [key=0, style=solid];
m14_658 -> m14_683  [key=0, style=solid];
m14_658 -> m14_685  [key=0, style=solid];
m14_658 -> m14_687  [key=0, style=solid];
m14_658 -> m14_689  [key=0, style=solid];
m14_658 -> m14_691  [key=0, style=solid];
m14_658 -> m14_693  [key=0, style=solid];
m14_658 -> m14_695  [key=0, style=solid];
m14_658 -> m14_697  [key=0, style=solid];
m14_658 -> m14_699  [key=0, style=solid];
m14_658 -> m14_701  [key=0, style=solid];
m14_658 -> m14_703  [key=0, style=solid];
m14_658 -> m14_705  [key=0, style=solid];
m14_658 -> m14_707  [key=0, style=solid];
m14_658 -> m14_709  [key=0, style=solid];
m14_658 -> m14_711  [key=0, style=solid];
m14_658 -> m14_713  [key=0, style=solid];
m14_658 -> m14_715  [key=0, style=solid];
m14_658 -> m14_717  [key=0, style=solid];
m14_658 -> m14_719  [key=0, style=solid];
m14_658 -> m14_721  [key=0, style=solid];
m14_658 -> m14_723  [key=0, style=solid];
m14_658 -> m14_725  [key=0, style=solid];
m14_658 -> m14_727  [key=0, style=solid];
m14_658 -> m14_729  [key=0, style=solid];
m14_658 -> m14_731  [key=0, style=solid];
m14_658 -> m14_733  [key=0, style=solid];
m14_659 -> m14_660  [key=0, style=solid];
m14_661 -> m14_662  [key=0, style=solid];
m14_663 -> m14_664  [key=0, style=solid];
m14_665 -> m14_666  [key=0, style=solid];
m14_667 -> m14_668  [key=0, style=solid];
m14_669 -> m14_670  [key=0, style=solid];
m14_671 -> m14_672  [key=0, style=solid];
m14_673 -> m14_674  [key=0, style=solid];
m14_675 -> m14_676  [key=0, style=solid];
m14_677 -> m14_678  [key=0, style=solid];
m14_679 -> m14_680  [key=0, style=solid];
m14_681 -> m14_682  [key=0, style=solid];
m14_683 -> m14_684  [key=0, style=solid];
m14_685 -> m14_686  [key=0, style=solid];
m14_687 -> m14_688  [key=0, style=solid];
m14_689 -> m14_690  [key=0, style=solid];
m14_691 -> m14_692  [key=0, style=solid];
m14_693 -> m14_694  [key=0, style=solid];
m14_695 -> m14_696  [key=0, style=solid];
m14_697 -> m14_698  [key=0, style=solid];
m14_699 -> m14_700  [key=0, style=solid];
m14_701 -> m14_702  [key=0, style=solid];
m14_703 -> m14_704  [key=0, style=solid];
m14_705 -> m14_706  [key=0, style=solid];
m14_707 -> m14_708  [key=0, style=solid];
m14_709 -> m14_710  [key=0, style=solid];
m14_711 -> m14_712  [key=0, style=solid];
m14_713 -> m14_714  [key=0, style=solid];
m14_715 -> m14_716  [key=0, style=solid];
m14_717 -> m14_718  [key=0, style=solid];
m14_719 -> m14_720  [key=0, style=solid];
m14_721 -> m14_722  [key=0, style=solid];
m14_723 -> m14_724  [key=0, style=solid];
m14_725 -> m14_726  [key=0, style=solid];
m14_727 -> m14_728  [key=0, style=solid];
m14_729 -> m14_730  [key=0, style=solid];
m14_731 -> m14_732  [key=0, style=solid];
m14_733 -> m14_734  [key=0, style=solid];
m14_660 -> m14_736  [key=0, style=solid];
m14_662 -> m14_736  [key=0, style=solid];
m14_664 -> m14_736  [key=0, style=solid];
m14_666 -> m14_736  [key=0, style=solid];
m14_668 -> m14_736  [key=0, style=solid];
m14_670 -> m14_736  [key=0, style=solid];
m14_672 -> m14_736  [key=0, style=solid];
m14_674 -> m14_736  [key=0, style=solid];
m14_676 -> m14_736  [key=0, style=solid];
m14_678 -> m14_736  [key=0, style=solid];
m14_680 -> m14_736  [key=0, style=solid];
m14_682 -> m14_736  [key=0, style=solid];
m14_684 -> m14_736  [key=0, style=solid];
m14_686 -> m14_736  [key=0, style=solid];
m14_688 -> m14_736  [key=0, style=solid];
m14_690 -> m14_736  [key=0, style=solid];
m14_692 -> m14_736  [key=0, style=solid];
m14_694 -> m14_736  [key=0, style=solid];
m14_696 -> m14_736  [key=0, style=solid];
m14_698 -> m14_736  [key=0, style=solid];
m14_700 -> m14_736  [key=0, style=solid];
m14_702 -> m14_736  [key=0, style=solid];
m14_704 -> m14_736  [key=0, style=solid];
m14_706 -> m14_736  [key=0, style=solid];
m14_708 -> m14_736  [key=0, style=solid];
m14_710 -> m14_736  [key=0, style=solid];
m14_712 -> m14_736  [key=0, style=solid];
m14_714 -> m14_736  [key=0, style=solid];
m14_716 -> m14_736  [key=0, style=solid];
m14_718 -> m14_736  [key=0, style=solid];
m14_720 -> m14_736  [key=0, style=solid];
m14_722 -> m14_736  [key=0, style=solid];
m14_724 -> m14_736  [key=0, style=solid];
m14_726 -> m14_736  [key=0, style=solid];
m14_728 -> m14_736  [key=0, style=solid];
m14_730 -> m14_736  [key=0, style=solid];
m14_732 -> m14_736  [key=0, style=solid];
m14_732 -> m14_494  [key=2, style=dotted];
m14_734 -> m14_736  [key=0, style=solid];
m14_734 -> m14_487  [key=2, style=dotted];
m14_736 -> m14_655  [key=0, style=bold, color=blue];
m14_628 -> m14_629  [key=0, style=solid];
m14_629 -> m14_628  [key=0, style=bold, color=blue];
m14_738 -> m14_742  [key=0, style=solid];
m14_738 -> m14_744  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_738 -> m14_655  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m14_738 -> m14_739  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonSerializer jsonSerializer"];
m14_742 -> m14_743  [key=0, style=solid];
m14_742 -> m14_104  [key=2, style=dotted];
m14_744 -> m14_745  [key=0, style=solid];
m14_744 -> m14_747  [key=2, style=dotted];
m14_743 -> m14_744  [key=0, style=solid];
m14_743 -> m14_746  [key=2, style=dotted];
m14_745 -> m14_738  [key=0, style=bold, color=blue];
m14_630 -> m14_631  [key=0, style=solid];
m14_631 -> m14_632  [key=0, style=solid];
m14_631 -> m14_633  [key=2, style=dotted];
m14_632 -> m14_630  [key=0, style=bold, color=blue];
m14_536 -> m14_537  [key=0, style=solid];
m14_537 -> m14_538  [key=0, style=solid];
m14_537 -> m14_517  [key=2, style=dotted];
m14_538 -> m14_536  [key=0, style=bold, color=blue];
m14_502 -> m14_503  [key=0, style=solid];
m14_503 -> m14_504  [key=0, style=solid];
m14_503 -> m14_505  [key=2, style=dotted];
m14_504 -> m14_502  [key=0, style=bold, color=blue];
m14_568 -> m14_569  [key=0, style=solid];
m14_569 -> m14_570  [key=0, style=solid];
m14_569 -> m14_517  [key=2, style=dotted];
m14_570 -> m14_568  [key=0, style=bold, color=blue];
m14_153 -> m14_154  [key=0, style=solid];
m14_153 -> m14_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_153 -> m14_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_154 -> m14_155  [key=0, style=solid];
m14_154 -> m14_156  [key=0, style=solid];
m14_156 -> m14_157  [key=0, style=solid];
m14_156 -> m14_89  [key=2, style=dotted];
m14_156 -> m14_159  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_156 -> m14_160  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_156 -> m14_161  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_158 -> m14_162  [key=0, style=solid];
m14_158 -> m14_118  [key=2, style=dotted];
m14_158 -> m14_98  [key=2, style=dotted];
m14_158 -> m14_61  [key=2, style=dotted];
m14_155 -> m14_162  [key=0, style=solid];
m14_157 -> m14_158  [key=0, style=solid];
m14_157 -> m14_159  [key=0, style=solid];
m14_157 -> m14_106  [key=2, style=dotted];
m14_159 -> m14_160  [key=0, style=solid];
m14_159 -> m14_161  [key=0, style=solid];
m14_160 -> m14_162  [key=0, style=solid];
m14_161 -> m14_162  [key=0, style=solid];
m14_161 -> m14_133  [key=2, style=dotted];
m14_162 -> m14_153  [key=0, style=bold, color=blue];
m14_819 -> m14_820  [key=0, style=solid];
m14_819 -> m14_824  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression parameter"];
m14_820 -> m14_821  [key=0, style=solid];
m14_820 -> m14_822  [key=2, style=dotted];
m14_820 -> m14_823  [key=2, style=dotted];
m14_821 -> m14_819  [key=0, style=bold, color=blue];
m14_521 -> m14_522  [key=0, style=solid];
m14_522 -> m14_523  [key=0, style=solid];
m14_522 -> m14_517  [key=2, style=dotted];
m14_523 -> m14_521  [key=0, style=bold, color=blue];
m14_487 -> m14_488  [key=0, style=solid];
m14_487 -> m14_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_488 -> m14_489  [key=0, style=solid];
m14_488 -> m14_89  [key=2, style=dotted];
m14_488 -> m14_491  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_490 -> m14_492  [key=0, style=solid];
m14_490 -> m14_118  [key=2, style=dotted];
m14_490 -> m14_98  [key=2, style=dotted];
m14_490 -> m14_61  [key=2, style=dotted];
m14_489 -> m14_490  [key=0, style=solid];
m14_489 -> m14_491  [key=0, style=solid];
m14_489 -> m14_106  [key=2, style=dotted];
m14_491 -> m14_492  [key=0, style=solid];
m14_491 -> m14_493  [key=2, style=dotted];
m14_492 -> m14_487  [key=0, style=bold, color=blue];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_41  [key=0, style=bold, color=crimson];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label=o];
m14_39 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label=o];
m14_41 -> m14_42  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_43  [key=0, style=solid];
m14_42 -> m14_40  [key=0, style=solid];
m14_42 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label=o];
m14_43 -> m14_38  [key=0, style=bold, color=blue];
m14_533 -> m14_534  [key=0, style=solid];
m14_534 -> m14_535  [key=0, style=solid];
m14_534 -> m14_517  [key=2, style=dotted];
m14_535 -> m14_533  [key=0, style=bold, color=blue];
m14_530 -> m14_531  [key=0, style=solid];
m14_531 -> m14_532  [key=0, style=solid];
m14_531 -> m14_517  [key=2, style=dotted];
m14_532 -> m14_530  [key=0, style=bold, color=blue];
m14_388 -> m14_389  [key=0, style=solid];
m14_388 -> m14_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_388 -> m14_393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_389 -> m14_390  [key=0, style=solid];
m14_389 -> m14_391  [key=0, style=solid];
m14_391 -> m14_392  [key=0, style=solid];
m14_391 -> m14_89  [key=2, style=dotted];
m14_391 -> m14_394  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_391 -> m14_396  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_391 -> m14_397  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_391 -> m14_398  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_391 -> m14_399  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_391 -> m14_400  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_393 -> m14_401  [key=0, style=solid];
m14_393 -> m14_118  [key=2, style=dotted];
m14_393 -> m14_98  [key=2, style=dotted];
m14_393 -> m14_61  [key=2, style=dotted];
m14_390 -> m14_401  [key=0, style=solid];
m14_392 -> m14_393  [key=0, style=solid];
m14_392 -> m14_394  [key=0, style=solid];
m14_392 -> m14_106  [key=2, style=dotted];
m14_394 -> m14_395  [key=0, style=solid];
m14_394 -> m14_396  [key=0, style=solid];
m14_396 -> m14_397  [key=0, style=solid];
m14_396 -> m14_398  [key=0, style=solid];
m14_397 -> m14_401  [key=0, style=solid];
m14_397 -> m14_402  [key=2, style=dotted];
m14_398 -> m14_399  [key=0, style=solid];
m14_398 -> m14_400  [key=0, style=solid];
m14_399 -> m14_401  [key=0, style=solid];
m14_399 -> m14_403  [key=2, style=dotted];
m14_400 -> m14_401  [key=0, style=solid];
m14_400 -> m14_404  [key=2, style=dotted];
m14_395 -> m14_401  [key=0, style=solid];
m14_401 -> m14_388  [key=0, style=bold, color=blue];
m14_768 -> m14_769  [key=0, style=solid, color=green];
m14_372 -> m14_373  [key=0, style=solid];
m14_372 -> m14_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_373 -> m14_374  [key=0, style=solid];
m14_373 -> m14_89  [key=2, style=dotted];
m14_373 -> m14_376  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_373 -> m14_377  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_373 -> m14_378  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_375 -> m14_379  [key=0, style=solid];
m14_375 -> m14_118  [key=2, style=dotted];
m14_375 -> m14_98  [key=2, style=dotted];
m14_375 -> m14_61  [key=2, style=dotted];
m14_374 -> m14_375  [key=0, style=solid];
m14_374 -> m14_376  [key=0, style=solid];
m14_374 -> m14_106  [key=2, style=dotted];
m14_376 -> m14_377  [key=0, style=solid];
m14_376 -> m14_378  [key=0, style=solid];
m14_377 -> m14_379  [key=0, style=solid];
m14_378 -> m14_379  [key=0, style=solid];
m14_378 -> m14_198  [key=2, style=dotted];
m14_379 -> m14_372  [key=0, style=bold, color=blue];
m14_827 -> m14_828  [key=0, style=solid];
m14_827 -> m14_830  [key=3, color=darkorchid, style=bold, label="method methodReturn object System.ICloneable.Clone"];
m14_828 -> m14_829  [key=0, style=solid];
m14_828 -> m14_830  [key=2, style=dotted];
m14_829 -> m14_827  [key=0, style=bold, color=blue];
m14_57 -> m14_58  [key=0, style=solid];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_15  [key=2, style=dotted];
m14_58 -> m14_60  [key=2, style=dotted];
m14_58 -> m14_61  [key=2, style=dotted];
m14_59 -> m14_57  [key=0, style=bold, color=blue];
m14_361 -> m14_362  [key=0, style=solid];
m14_361 -> m14_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_361 -> m14_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_362 -> m14_363  [key=0, style=solid];
m14_362 -> m14_364  [key=0, style=solid];
m14_364 -> m14_365  [key=0, style=solid];
m14_364 -> m14_89  [key=2, style=dotted];
m14_364 -> m14_367  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_364 -> m14_368  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_364 -> m14_369  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_366 -> m14_370  [key=0, style=solid];
m14_366 -> m14_118  [key=2, style=dotted];
m14_366 -> m14_98  [key=2, style=dotted];
m14_366 -> m14_61  [key=2, style=dotted];
m14_363 -> m14_370  [key=0, style=solid];
m14_365 -> m14_366  [key=0, style=solid];
m14_365 -> m14_367  [key=0, style=solid];
m14_365 -> m14_106  [key=2, style=dotted];
m14_367 -> m14_368  [key=0, style=solid];
m14_367 -> m14_369  [key=0, style=solid];
m14_368 -> m14_370  [key=0, style=solid];
m14_369 -> m14_370  [key=0, style=solid];
m14_369 -> m14_371  [key=2, style=dotted];
m14_370 -> m14_361  [key=0, style=bold, color=blue];
m14_766 -> m14_767  [key=0, style=solid, color=green];
m14_199 -> m14_200  [key=0, style=solid];
m14_199 -> m14_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_199 -> m14_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_200 -> m14_201  [key=0, style=solid];
m14_200 -> m14_202  [key=0, style=solid];
m14_202 -> m14_203  [key=0, style=solid];
m14_202 -> m14_89  [key=2, style=dotted];
m14_202 -> m14_205  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_202 -> m14_206  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_202 -> m14_207  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_204 -> m14_208  [key=0, style=solid];
m14_204 -> m14_118  [key=2, style=dotted];
m14_204 -> m14_98  [key=2, style=dotted];
m14_204 -> m14_61  [key=2, style=dotted];
m14_201 -> m14_208  [key=0, style=solid];
m14_203 -> m14_204  [key=0, style=solid];
m14_203 -> m14_205  [key=0, style=solid];
m14_203 -> m14_106  [key=2, style=dotted];
m14_205 -> m14_206  [key=0, style=solid];
m14_205 -> m14_207  [key=0, style=solid];
m14_206 -> m14_208  [key=0, style=solid];
m14_207 -> m14_208  [key=0, style=solid];
m14_207 -> m14_209  [key=2, style=dotted];
m14_208 -> m14_199  [key=0, style=bold, color=blue];
m14_748 -> m14_749  [key=0, style=solid];
m14_748 -> m14_750  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_751  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_752  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_753  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_754  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_755  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_756  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_757  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_758  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_759  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_760  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_761  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_762  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_763  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_781  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m14_748 -> m14_769  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_773  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_748 -> m14_784  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m14_749 -> m14_750  [key=0, style=solid];
m14_749 -> m14_104  [key=2, style=dotted];
m14_750 -> m14_751  [key=0, style=solid];
m14_750 -> m14_753  [key=0, style=solid, color=green];
m14_751 -> m14_752  [key=0, style=solid];
m14_751 -> m14_753  [key=0, style=solid, color=green];
m14_751 -> m14_765  [key=2, style=dotted];
m14_752 -> m14_764  [key=0, style=solid];
m14_752 -> m14_766  [key=2, style=dotted];
m14_753 -> m14_754  [key=0, style=solid, color=green];
m14_753 -> m14_755  [key=0, style=solid, color=red];
m14_753 -> m14_770  [key=1, style=dashed, color=green, label=lineInfo];
m14_753 -> m14_774  [key=1, style=dashed, color=green, label=lineInfo];
m14_753 -> m14_778  [key=1, style=dashed, color=green, label=lineInfo];
m14_753 -> m14_782  [key=1, style=dashed, color=green, label=lineInfo];
m14_754 -> m14_764  [key=0, style=solid, color=red];
m14_754 -> m14_767  [key=2, style=dotted, color=red];
m14_754 -> m14_755  [key=0, style=solid, color=green];
m14_754 -> m14_757  [key=0, style=solid, color=green];
m14_754 -> m14_759  [key=0, style=solid, color=green];
m14_754 -> m14_761  [key=0, style=solid, color=green];
m14_754 -> m14_763  [key=0, style=solid, color=green];
m14_754 -> m14_772  [key=0, style=solid, color=green];
m14_754 -> m14_776  [key=0, style=solid, color=green];
m14_754 -> m14_780  [key=0, style=solid, color=green];
m14_754 -> m14_784  [key=0, style=solid, color=green];
m14_755 -> m14_756  [key=0, style=solid, color=green];
m14_755 -> m14_757  [key=0, style=solid, color=red];
m14_756 -> m14_764  [key=0, style=solid, color=green];
m14_756 -> m14_768  [key=2, style=dotted, color=red];
m14_756 -> m14_767  [key=2, style=dotted, color=green];
m14_757 -> m14_758  [key=0, style=solid, color=green];
m14_757 -> m14_759  [key=0, style=solid, color=red];
m14_758 -> m14_764  [key=0, style=solid, color=green];
m14_758 -> m14_769  [key=2, style=dotted, color=red];
m14_758 -> m14_768  [key=2, style=dotted, color=green];
m14_759 -> m14_760  [key=0, style=solid, color=green];
m14_759 -> m14_761  [key=0, style=solid, color=red];
m14_760 -> m14_764  [key=0, style=solid, color=green];
m14_760 -> m14_770  [key=2, style=dotted, color=green];
m14_761 -> m14_762  [key=0, style=solid, color=green];
m14_761 -> m14_763  [key=0, style=solid, color=red];
m14_761 -> m14_771  [key=2, style=dotted, color=red];
m14_762 -> m14_764  [key=0, style=solid, color=green];
m14_762 -> m14_517  [key=2, style=dotted, color=red];
m14_762 -> m14_769  [key=2, style=dotted, color=green];
m14_763 -> m14_764  [key=0, style=solid, color=green];
m14_763 -> m14_61  [key=2, style=dotted, color=red];
m14_763 -> m14_766  [key=2, style=dotted, color=red];
m14_780 -> m14_781  [key=0, style=solid, color=green];
m14_769 -> m14_770  [key=0, style=solid, color=green];
m14_769 -> m14_517  [key=2, style=dotted, color=green];
m14_769 -> m14_771  [key=1, style=dashed, color=green, label=v];
m14_764 -> m14_765  [key=0, style=solid, color=green];
m14_764 -> m14_748  [key=0, style=bold, color=blue];
m14_580 -> m14_581  [key=0, style=solid];
m14_581 -> m14_582  [key=0, style=solid];
m14_581 -> m14_583  [key=2, style=dotted];
m14_582 -> m14_580  [key=0, style=bold, color=blue];
m14_561 -> m14_562  [key=0, style=solid];
m14_562 -> m14_563  [key=0, style=solid];
m14_562 -> m14_517  [key=2, style=dotted];
m14_563 -> m14_561  [key=0, style=bold, color=blue];
m14_506 -> m14_507  [key=0, style=solid];
m14_507 -> m14_508  [key=0, style=solid];
m14_507 -> m14_509  [key=2, style=dotted];
m14_508 -> m14_506  [key=0, style=bold, color=blue];
m14_331 -> m14_332  [key=0, style=solid];
m14_331 -> m14_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_331 -> m14_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_332 -> m14_333  [key=0, style=solid];
m14_332 -> m14_334  [key=0, style=solid];
m14_334 -> m14_335  [key=0, style=solid];
m14_334 -> m14_89  [key=2, style=dotted];
m14_334 -> m14_337  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_334 -> m14_338  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_334 -> m14_339  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_336 -> m14_340  [key=0, style=solid];
m14_336 -> m14_118  [key=2, style=dotted];
m14_336 -> m14_98  [key=2, style=dotted];
m14_336 -> m14_61  [key=2, style=dotted];
m14_333 -> m14_340  [key=0, style=solid];
m14_335 -> m14_336  [key=0, style=solid];
m14_335 -> m14_337  [key=0, style=solid];
m14_335 -> m14_106  [key=2, style=dotted];
m14_337 -> m14_338  [key=0, style=solid];
m14_337 -> m14_339  [key=0, style=solid];
m14_338 -> m14_340  [key=0, style=solid];
m14_339 -> m14_340  [key=0, style=solid];
m14_339 -> m14_341  [key=2, style=dotted];
m14_340 -> m14_331  [key=0, style=bold, color=blue];
m14_558 -> m14_559  [key=0, style=solid];
m14_559 -> m14_560  [key=0, style=solid];
m14_559 -> m14_517  [key=2, style=dotted];
m14_560 -> m14_558  [key=0, style=bold, color=blue];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_71  [key=0, style=solid];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_73  [key=2, style=dotted];
m14_70 -> m14_72  [key=0, style=solid];
m14_70 -> m14_15  [key=2, style=dotted];
m14_72 -> m14_68  [key=0, style=bold, color=blue];
m14_617 -> m14_618  [key=0, style=solid];
m14_618 -> m14_619  [key=0, style=solid];
m14_618 -> m14_517  [key=2, style=dotted];
m14_619 -> m14_617  [key=0, style=bold, color=blue];
m14_518 -> m14_519  [key=0, style=solid];
m14_519 -> m14_520  [key=0, style=solid];
m14_519 -> m14_513  [key=2, style=dotted];
m14_520 -> m14_518  [key=0, style=bold, color=blue];
m14_830 -> m14_831  [key=0, style=solid];
m14_830 -> m14_0  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken DeepClone"];
m14_831 -> m14_832  [key=0, style=solid];
m14_831 -> m14_0  [key=2, style=dotted];
m14_832 -> m14_830  [key=0, style=bold, color=blue];
m14_476 -> m14_477  [key=0, style=solid];
m14_476 -> m14_479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_476 -> m14_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_477 -> m14_478  [key=0, style=solid];
m14_477 -> m14_479  [key=0, style=solid];
m14_479 -> m14_480  [key=0, style=solid];
m14_479 -> m14_89  [key=2, style=dotted];
m14_479 -> m14_482  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_479 -> m14_484  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_481 -> m14_485  [key=0, style=solid];
m14_481 -> m14_118  [key=2, style=dotted];
m14_481 -> m14_98  [key=2, style=dotted];
m14_481 -> m14_61  [key=2, style=dotted];
m14_478 -> m14_485  [key=0, style=solid];
m14_480 -> m14_481  [key=0, style=solid];
m14_480 -> m14_482  [key=0, style=solid];
m14_480 -> m14_106  [key=2, style=dotted];
m14_482 -> m14_483  [key=0, style=solid];
m14_482 -> m14_484  [key=0, style=solid];
m14_484 -> m14_485  [key=0, style=solid];
m14_484 -> m14_486  [key=2, style=dotted];
m14_484 -> m14_404  [key=2, style=dotted];
m14_483 -> m14_485  [key=0, style=solid];
m14_485 -> m14_476  [key=0, style=bold, color=blue];
m14_494 -> m14_495  [key=0, style=solid];
m14_494 -> m14_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_495 -> m14_496  [key=0, style=solid];
m14_495 -> m14_89  [key=2, style=dotted];
m14_495 -> m14_498  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_495 -> m14_500  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_497 -> m14_501  [key=0, style=solid];
m14_497 -> m14_118  [key=2, style=dotted];
m14_497 -> m14_98  [key=2, style=dotted];
m14_497 -> m14_61  [key=2, style=dotted];
m14_496 -> m14_497  [key=0, style=solid];
m14_496 -> m14_498  [key=0, style=solid];
m14_496 -> m14_106  [key=2, style=dotted];
m14_498 -> m14_499  [key=0, style=solid];
m14_498 -> m14_500  [key=0, style=solid];
m14_500 -> m14_501  [key=0, style=solid];
m14_500 -> m14_493  [key=2, style=dotted];
m14_499 -> m14_501  [key=0, style=solid];
m14_501 -> m14_494  [key=0, style=bold, color=blue];
m14_577 -> m14_578  [key=0, style=solid];
m14_578 -> m14_579  [key=0, style=solid];
m14_578 -> m14_517  [key=2, style=dotted];
m14_579 -> m14_577  [key=0, style=bold, color=blue];
m14_551 -> m14_552  [key=0, style=solid];
m14_552 -> m14_553  [key=0, style=solid];
m14_552 -> m14_517  [key=2, style=dotted];
m14_553 -> m14_551  [key=0, style=bold, color=blue];
m14_627 -> m14_790  [key=3, color=darkorchid, style=bold, label="Field variable int? _lineNumber"];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_111  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_122  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_137  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_145  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_156  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_166  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_180  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_191  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_202  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_211  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_220  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_229  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_238  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_246  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_255  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_266  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_276  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_286  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_296  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_306  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_314  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_324  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_334  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_343  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_353  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_364  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_373  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_381  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_391  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_406  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_414  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_424  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_438  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_450  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_460  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_469  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_479  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_488  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_495  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JToken o"];
m14_106 -> m14_513  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType[] validTypes"];
m14_106 -> m14_779  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType[] validTypes"];
m14_106 -> m14_643  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType[] validTypes"];
m14_106 -> m14_13  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nullable"];
m14_106 -> m14_138  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nullable"];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_109  [key=2, style=dotted];
m14_108 -> m14_106  [key=0, style=bold, color=blue];
m14_795 -> m14_796  [key=0, style=solid];
m14_794 -> m14_795  [key=0, style=solid];
m14_52 -> m14_53  [key=0, style=solid];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_55  [key=2, style=dotted];
m14_53 -> m14_49  [key=2, style=dotted];
m14_53 -> m14_56  [key=2, style=dotted];
m14_54 -> m14_52  [key=0, style=bold, color=blue];
m14_649 -> m14_650  [key=0, style=solid];
m14_649 -> m14_634  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken FromObject"];
m14_650 -> m14_651  [key=0, style=solid];
m14_650 -> m14_634  [key=2, style=dotted];
m14_651 -> m14_649  [key=0, style=bold, color=blue];
m14_554 -> m14_555  [key=0, style=solid];
m14_555 -> m14_556  [key=0, style=solid];
m14_555 -> m14_557  [key=2, style=dotted];
m14_556 -> m14_554  [key=0, style=bold, color=blue];
m14_796 -> m14_794  [key=0, style=bold, color=blue];
m14_134 -> m14_135  [key=0, style=solid];
m14_134 -> m14_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_134 -> m14_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_135 -> m14_136  [key=0, style=solid];
m14_135 -> m14_137  [key=0, style=solid];
m14_137 -> m14_138  [key=0, style=solid];
m14_137 -> m14_89  [key=2, style=dotted];
m14_137 -> m14_140  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_137 -> m14_141  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_137 -> m14_142  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_139 -> m14_143  [key=0, style=solid];
m14_139 -> m14_118  [key=2, style=dotted];
m14_139 -> m14_98  [key=2, style=dotted];
m14_139 -> m14_61  [key=2, style=dotted];
m14_136 -> m14_143  [key=0, style=solid];
m14_138 -> m14_139  [key=0, style=solid];
m14_138 -> m14_140  [key=0, style=solid];
m14_138 -> m14_106  [key=2, style=dotted];
m14_140 -> m14_141  [key=0, style=solid];
m14_140 -> m14_142  [key=0, style=solid];
m14_141 -> m14_143  [key=0, style=solid];
m14_141 -> m14_119  [key=2, style=dotted];
m14_142 -> m14_143  [key=0, style=solid];
m14_142 -> m14_120  [key=2, style=dotted];
m14_143 -> m14_134  [key=0, style=bold, color=blue];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_32  [key=0, style=bold, color=crimson];
m14_30 -> m14_35  [key=0, style=bold, color=crimson];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_33  [key=0, style=solid];
m14_32 -> m14_33  [key=0, style=solid];
m14_35 -> m14_36  [key=0, style=solid];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label=o];
m14_33 -> m14_36  [key=1, style=dashed, color=darkseagreen4, label=o];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_37  [key=0, style=solid];
m14_36 -> m14_34  [key=0, style=solid];
m14_36 -> m14_36  [key=1, style=dashed, color=darkseagreen4, label=o];
m14_37 -> m14_30  [key=0, style=bold, color=blue];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_81  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonWriter writer"];
m14_74 -> m14_79  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter[] converters"];
m14_75 -> m14_74  [key=0, style=bold, color=blue];
m14_228 -> m14_229  [key=0, style=solid];
m14_228 -> m14_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_229 -> m14_230  [key=0, style=solid];
m14_229 -> m14_89  [key=2, style=dotted];
m14_229 -> m14_232  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_229 -> m14_233  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_229 -> m14_234  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_231 -> m14_235  [key=0, style=solid];
m14_231 -> m14_118  [key=2, style=dotted];
m14_231 -> m14_98  [key=2, style=dotted];
m14_231 -> m14_61  [key=2, style=dotted];
m14_230 -> m14_231  [key=0, style=solid];
m14_230 -> m14_232  [key=0, style=solid];
m14_230 -> m14_106  [key=2, style=dotted];
m14_232 -> m14_233  [key=0, style=solid];
m14_232 -> m14_234  [key=0, style=solid];
m14_233 -> m14_235  [key=0, style=solid];
m14_234 -> m14_235  [key=0, style=solid];
m14_234 -> m14_236  [key=2, style=dotted];
m14_235 -> m14_228  [key=0, style=bold, color=blue];
m14_254 -> m14_255  [key=0, style=solid];
m14_254 -> m14_257  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_255 -> m14_256  [key=0, style=solid];
m14_255 -> m14_89  [key=2, style=dotted];
m14_255 -> m14_258  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_255 -> m14_259  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_255 -> m14_260  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_257 -> m14_261  [key=0, style=solid];
m14_257 -> m14_118  [key=2, style=dotted];
m14_257 -> m14_98  [key=2, style=dotted];
m14_257 -> m14_61  [key=2, style=dotted];
m14_256 -> m14_257  [key=0, style=solid];
m14_256 -> m14_258  [key=0, style=solid];
m14_256 -> m14_106  [key=2, style=dotted];
m14_258 -> m14_259  [key=0, style=solid];
m14_258 -> m14_260  [key=0, style=solid];
m14_259 -> m14_261  [key=0, style=solid];
m14_260 -> m14_261  [key=0, style=solid];
m14_260 -> m14_262  [key=2, style=dotted];
m14_261 -> m14_254  [key=0, style=bold, color=blue];
m14_514 -> m14_515  [key=0, style=solid];
m14_515 -> m14_516  [key=0, style=solid];
m14_515 -> m14_517  [key=2, style=dotted];
m14_516 -> m14_514  [key=0, style=bold, color=blue];
m14_800 -> m14_801  [key=0, style=solid];
m14_800 -> m14_803  [key=1, style=dashed, color=darkseagreen4, label=bool];
m14_800 -> m14_797  [key=3, color=darkorchid, style=bold, label="Parameter variable string path"];
m14_800 -> m14_13  [key=3, color=darkorchid, style=bold, label="Parameter variable bool errorWhenNoMatch"];
m14_800 -> m14_802  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken SelectToken"];
m14_801 -> m14_802  [key=0, style=solid];
m14_801 -> m14_809  [key=2, style=dotted];
m14_801 -> m14_803  [key=1, style=dashed, color=darkseagreen4, label=p];
m14_803 -> m14_804  [key=0, style=solid];
m14_803 -> m14_807  [key=0, style=solid];
m14_803 -> m14_810  [key=2, style=dotted];
m14_803 -> m14_806  [key=1, style=dashed, color=darkseagreen4, label=t];
m14_802 -> m14_803  [key=0, style=solid];
m14_802 -> m14_804  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_802 -> m14_807  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_804 -> m14_805  [key=0, style=solid];
m14_804 -> m14_806  [key=0, style=solid];
m14_807 -> m14_808  [key=0, style=solid];
m14_806 -> m14_803  [key=0, style=solid];
m14_806 -> m14_807  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_805 -> m14_808  [key=0, style=solid];
m14_805 -> m14_811  [key=2, style=dotted];
m14_808 -> m14_800  [key=0, style=bold, color=blue];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_12  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_17  [key=2, style=dotted];
m14_11 -> m14_14  [key=0, style=solid];
m14_11 -> m14_15  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_16  [key=2, style=dotted];
m14_14 -> m14_9  [key=0, style=bold, color=blue];
m14_313 -> m14_314  [key=0, style=solid];
m14_313 -> m14_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_314 -> m14_315  [key=0, style=solid];
m14_314 -> m14_89  [key=2, style=dotted];
m14_314 -> m14_317  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_314 -> m14_318  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_314 -> m14_319  [key=1, style=dashed, color=darkseagreen4, label=v];
m14_316 -> m14_320  [key=0, style=solid];
m14_316 -> m14_118  [key=2, style=dotted];
m14_316 -> m14_98  [key=2, style=dotted];
m14_316 -> m14_61  [key=2, style=dotted];
m14_315 -> m14_316  [key=0, style=solid];
m14_315 -> m14_317  [key=0, style=solid];
m14_315 -> m14_106  [key=2, style=dotted];
m14_317 -> m14_318  [key=0, style=solid];
m14_317 -> m14_319  [key=0, style=solid];
m14_318 -> m14_320  [key=0, style=solid];
m14_319 -> m14_320  [key=0, style=solid];
m14_319 -> m14_133  [key=2, style=dotted];
m14_320 -> m14_313  [key=0, style=bold, color=blue];
m14_588 -> m14_589  [key=0, style=solid];
m14_589 -> m14_590  [key=0, style=solid];
m14_589 -> m14_591  [key=2, style=dotted];
m14_590 -> m14_588  [key=0, style=bold, color=blue];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_2  [key=2, style=dotted];
m14_6 -> m14_4  [key=0, style=bold, color=blue];
m14_833 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_653  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_664  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_666  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_668  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_672  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_674  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_676  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_678  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_680  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_682  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_684  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_686  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_688  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_690  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_692  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_694  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_696  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_700  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_702  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_704  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_706  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_708  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_710  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_712  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_714  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_716  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_718  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_720  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_722  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_724  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_726  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_732  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_740  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_743  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_787  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_791  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_795  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_798  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_803  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_813  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_817  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_820  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_825  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_828  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m14_833 -> m14_831  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m15_741 -> m15_742  [key=0, style=solid];
m15_742 -> m15_743  [key=0, style=solid];
m15_742 -> m15_70  [key=2, style=dotted];
m15_742 -> m15_110  [key=2, style=dotted];
m15_742 -> m15_74  [key=2, style=dotted];
m15_742 -> m15_75  [key=2, style=dotted];
m15_742 -> m15_250  [key=2, style=dotted];
m15_742 -> m15_263  [key=2, style=dotted];
m15_742 -> m15_76  [key=2, style=dotted];
m15_742 -> m15_747  [key=2, style=dotted];
m15_742 -> m15_745  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_743 -> m15_744  [key=0, style=solid];
m15_743 -> m15_748  [key=2, style=dotted];
m15_743 -> m15_745  [key=1, style=dashed, color=darkseagreen4, label=a2];
m15_745 -> m15_746  [key=0, style=solid];
m15_745 -> m15_750  [key=2, style=dotted];
m15_745 -> m15_36  [key=2, style=dotted];
m15_744 -> m15_745  [key=0, style=solid];
m15_744 -> m15_702  [key=2, style=dotted];
m15_744 -> m15_749  [key=2, style=dotted];
m15_746 -> m15_741  [key=0, style=bold, color=blue];
m15_768 -> m15_769  [key=0, style=solid];
m15_769 -> m15_770  [key=0, style=solid];
m15_769 -> m15_316  [key=2, style=dotted];
m15_769 -> m15_771  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_769 -> m15_769  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m15_770 -> m15_768  [key=0, style=bold, color=blue];
m15_721 -> m15_722  [key=0, style=solid];
m15_722 -> m15_723  [key=0, style=solid];
m15_722 -> m15_70  [key=2, style=dotted];
m15_722 -> m15_110  [key=2, style=dotted];
m15_722 -> m15_724  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_725  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_726  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_727  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_728  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_729  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_730  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_731  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_732  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_733  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_734  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_735  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_736  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_737  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_722 -> m15_738  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_723 -> m15_724  [key=0, style=solid];
m15_723 -> m15_740  [key=2, style=dotted];
m15_724 -> m15_725  [key=0, style=solid];
m15_724 -> m15_30  [key=2, style=dotted];
m15_725 -> m15_726  [key=0, style=solid];
m15_725 -> m15_30  [key=2, style=dotted];
m15_726 -> m15_727  [key=0, style=solid];
m15_726 -> m15_30  [key=2, style=dotted];
m15_727 -> m15_728  [key=0, style=solid];
m15_727 -> m15_30  [key=2, style=dotted];
m15_728 -> m15_729  [key=0, style=solid];
m15_728 -> m15_81  [key=2, style=dotted];
m15_728 -> m15_30  [key=2, style=dotted];
m15_729 -> m15_730  [key=0, style=solid];
m15_729 -> m15_740  [key=2, style=dotted];
m15_730 -> m15_731  [key=0, style=solid];
m15_730 -> m15_30  [key=2, style=dotted];
m15_731 -> m15_732  [key=0, style=solid];
m15_731 -> m15_30  [key=2, style=dotted];
m15_732 -> m15_733  [key=0, style=solid];
m15_732 -> m15_30  [key=2, style=dotted];
m15_733 -> m15_734  [key=0, style=solid];
m15_733 -> m15_30  [key=2, style=dotted];
m15_734 -> m15_735  [key=0, style=solid];
m15_734 -> m15_30  [key=2, style=dotted];
m15_735 -> m15_736  [key=0, style=solid];
m15_735 -> m15_81  [key=2, style=dotted];
m15_735 -> m15_30  [key=2, style=dotted];
m15_736 -> m15_737  [key=0, style=solid];
m15_736 -> m15_740  [key=2, style=dotted];
m15_737 -> m15_738  [key=0, style=solid];
m15_737 -> m15_30  [key=2, style=dotted];
m15_738 -> m15_739  [key=0, style=solid];
m15_738 -> m15_81  [key=2, style=dotted];
m15_738 -> m15_30  [key=2, style=dotted];
m15_739 -> m15_721  [key=0, style=bold, color=blue];
m15_775 -> m15_776  [key=0, style=solid];
m15_776 -> m15_777  [key=0, style=solid];
m15_776 -> m15_74  [key=2, style=dotted];
m15_776 -> m15_75  [key=2, style=dotted];
m15_776 -> m15_70  [key=2, style=dotted];
m15_776 -> m15_636  [key=2, style=dotted];
m15_776 -> m15_747  [key=2, style=dotted];
m15_776 -> m15_779  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_776 -> m15_781  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_776 -> m15_783  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_776 -> m15_785  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_776 -> m15_789  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_777 -> m15_778  [key=0, style=solid];
m15_777 -> m15_795  [key=2, style=dotted];
m15_779 -> m15_780  [key=0, style=solid];
m15_779 -> m15_795  [key=2, style=dotted];
m15_781 -> m15_782  [key=0, style=solid];
m15_781 -> m15_795  [key=2, style=dotted];
m15_783 -> m15_784  [key=0, style=solid];
m15_783 -> m15_795  [key=2, style=dotted];
m15_785 -> m15_786  [key=0, style=solid];
m15_785 -> m15_795  [key=2, style=dotted];
m15_785 -> m15_787  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_789 -> m15_790  [key=0, style=solid];
m15_789 -> m15_795  [key=2, style=dotted];
m15_778 -> m15_779  [key=0, style=solid];
m15_778 -> m15_30  [key=2, style=dotted];
m15_780 -> m15_781  [key=0, style=solid];
m15_780 -> m15_30  [key=2, style=dotted];
m15_782 -> m15_783  [key=0, style=solid];
m15_782 -> m15_30  [key=2, style=dotted];
m15_784 -> m15_785  [key=0, style=solid];
m15_784 -> m15_30  [key=2, style=dotted];
m15_786 -> m15_787  [key=0, style=solid];
m15_786 -> m15_30  [key=2, style=dotted];
m15_787 -> m15_788  [key=0, style=solid];
m15_787 -> m15_748  [key=2, style=dotted];
m15_787 -> m15_787  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_788 -> m15_789  [key=0, style=solid];
m15_788 -> m15_30  [key=2, style=dotted];
m15_790 -> m15_791  [key=0, style=solid];
m15_790 -> m15_30  [key=2, style=dotted];
m15_791 -> m15_792  [key=0, style=solid];
m15_791 -> m15_110  [key=2, style=dotted];
m15_791 -> m15_793  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_792 -> m15_793  [key=0, style=solid];
m15_792 -> m15_30  [key=2, style=dotted];
m15_793 -> m15_794  [key=0, style=solid];
m15_793 -> m15_30  [key=2, style=dotted];
m15_794 -> m15_775  [key=0, style=bold, color=blue];
m15_751 -> m15_752  [key=0, style=solid];
m15_752 -> m15_753  [key=0, style=solid];
m15_752 -> m15_70  [key=2, style=dotted];
m15_752 -> m15_110  [key=2, style=dotted];
m15_752 -> m15_74  [key=2, style=dotted];
m15_752 -> m15_75  [key=2, style=dotted];
m15_752 -> m15_250  [key=2, style=dotted];
m15_752 -> m15_263  [key=2, style=dotted];
m15_752 -> m15_76  [key=2, style=dotted];
m15_752 -> m15_747  [key=2, style=dotted];
m15_752 -> m15_755  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_753 -> m15_754  [key=0, style=solid];
m15_753 -> m15_752  [key=3, color=darkorchid, style=bold, label="Local variable System.ICloneable c"];
m15_755 -> m15_756  [key=0, style=solid];
m15_755 -> m15_750  [key=2, style=dotted];
m15_755 -> m15_36  [key=2, style=dotted];
m15_754 -> m15_755  [key=0, style=solid];
m15_754 -> m15_757  [key=2, style=dotted];
m15_756 -> m15_751  [key=0, style=bold, color=blue];
m15_652 -> m15_653  [key=0, style=solid];
m15_653 -> m15_654  [key=0, style=solid];
m15_653 -> m15_70  [key=2, style=dotted];
m15_653 -> m15_110  [key=2, style=dotted];
m15_653 -> m15_656  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_653 -> m15_657  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_654 -> m15_655  [key=0, style=solid];
m15_654 -> m15_658  [key=1, style=dashed, color=darkseagreen4, label=first];
m15_654 -> m15_659  [key=1, style=dashed, color=darkseagreen4, label=first];
m15_656 -> m15_657  [key=0, style=solid];
m15_656 -> m15_661  [key=2, style=dotted];
m15_657 -> m15_658  [key=0, style=solid];
m15_657 -> m15_81  [key=2, style=dotted];
m15_657 -> m15_30  [key=2, style=dotted];
m15_655 -> m15_656  [key=0, style=solid];
m15_655 -> m15_30  [key=2, style=dotted];
m15_658 -> m15_659  [key=0, style=solid];
m15_658 -> m15_93  [key=2, style=dotted];
m15_659 -> m15_660  [key=0, style=solid];
m15_659 -> m15_93  [key=2, style=dotted];
m15_660 -> m15_652  [key=0, style=bold, color=blue];
m15_662 -> m15_663  [key=0, style=solid];
m15_663 -> m15_664  [key=0, style=solid];
m15_663 -> m15_316  [key=2, style=dotted];
m15_663 -> m15_665  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_664 -> m15_662  [key=0, style=bold, color=blue];
m15_112 -> m15_113  [key=0, style=solid];
m15_113 -> m15_114  [key=0, style=solid];
m15_113 -> m15_70  [key=2, style=dotted];
m15_113 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_114 -> m15_115  [key=0, style=solid];
m15_114 -> m15_30  [key=2, style=dotted];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_117  [key=2, style=dotted];
m15_115 -> m15_81  [key=2, style=dotted];
m15_115 -> m15_30  [key=2, style=dotted];
m15_116 -> m15_112  [key=0, style=bold, color=blue];
m15_445 -> m15_446  [key=0, style=solid];
m15_446 -> m15_447  [key=0, style=solid];
m15_446 -> m15_32  [key=2, style=dotted];
m15_446 -> m15_486  [key=2, style=dotted];
m15_446 -> m15_30  [key=2, style=dotted];
m15_447 -> m15_448  [key=0, style=solid, color=green];
m15_447 -> m15_32  [key=2, style=dotted];
m15_447 -> m15_486  [key=2, style=dotted];
m15_447 -> m15_30  [key=2, style=dotted];
m15_448 -> m15_449  [key=0, style=solid, color=green];
m15_448 -> m15_250  [key=2, style=dotted, color=green];
m15_448 -> m15_486  [key=2, style=dotted, color=green];
m15_448 -> m15_30  [key=2, style=dotted, color=green];
m15_449 -> m15_450  [key=0, style=solid];
m15_449 -> m15_32  [key=2, style=dotted];
m15_449 -> m15_486  [key=2, style=dotted];
m15_449 -> m15_30  [key=2, style=dotted];
m15_450 -> m15_451  [key=0, style=solid];
m15_450 -> m15_32  [key=2, style=dotted];
m15_450 -> m15_486  [key=2, style=dotted];
m15_450 -> m15_30  [key=2, style=dotted];
m15_451 -> m15_452  [key=0, style=solid];
m15_451 -> m15_32  [key=2, style=dotted];
m15_451 -> m15_486  [key=2, style=dotted];
m15_451 -> m15_30  [key=2, style=dotted];
m15_452 -> m15_453  [key=0, style=solid];
m15_452 -> m15_32  [key=2, style=dotted];
m15_452 -> m15_486  [key=2, style=dotted];
m15_452 -> m15_30  [key=2, style=dotted];
m15_453 -> m15_454  [key=0, style=solid];
m15_453 -> m15_32  [key=2, style=dotted];
m15_453 -> m15_486  [key=2, style=dotted];
m15_453 -> m15_30  [key=2, style=dotted];
m15_454 -> m15_455  [key=0, style=solid];
m15_454 -> m15_32  [key=2, style=dotted];
m15_454 -> m15_486  [key=2, style=dotted];
m15_454 -> m15_30  [key=2, style=dotted];
m15_455 -> m15_456  [key=0, style=solid];
m15_455 -> m15_32  [key=2, style=dotted];
m15_455 -> m15_486  [key=2, style=dotted];
m15_455 -> m15_30  [key=2, style=dotted];
m15_456 -> m15_457  [key=0, style=solid];
m15_456 -> m15_32  [key=2, style=dotted];
m15_456 -> m15_486  [key=2, style=dotted];
m15_456 -> m15_30  [key=2, style=dotted];
m15_457 -> m15_458  [key=0, style=solid];
m15_457 -> m15_32  [key=2, style=dotted];
m15_457 -> m15_486  [key=2, style=dotted];
m15_457 -> m15_30  [key=2, style=dotted];
m15_458 -> m15_459  [key=0, style=solid];
m15_458 -> m15_32  [key=2, style=dotted];
m15_458 -> m15_486  [key=2, style=dotted];
m15_458 -> m15_30  [key=2, style=dotted];
m15_459 -> m15_460  [key=0, style=solid];
m15_459 -> m15_32  [key=2, style=dotted];
m15_459 -> m15_486  [key=2, style=dotted];
m15_459 -> m15_30  [key=2, style=dotted];
m15_460 -> m15_461  [key=0, style=solid];
m15_460 -> m15_32  [key=2, style=dotted];
m15_460 -> m15_486  [key=2, style=dotted];
m15_460 -> m15_30  [key=2, style=dotted];
m15_461 -> m15_462  [key=0, style=solid];
m15_461 -> m15_32  [key=2, style=dotted];
m15_461 -> m15_486  [key=2, style=dotted];
m15_461 -> m15_30  [key=2, style=dotted];
m15_462 -> m15_463  [key=0, style=solid];
m15_462 -> m15_32  [key=2, style=dotted];
m15_462 -> m15_486  [key=2, style=dotted];
m15_462 -> m15_30  [key=2, style=dotted];
m15_463 -> m15_464  [key=0, style=solid];
m15_463 -> m15_32  [key=2, style=dotted];
m15_463 -> m15_486  [key=2, style=dotted];
m15_463 -> m15_30  [key=2, style=dotted];
m15_464 -> m15_465  [key=0, style=solid];
m15_464 -> m15_32  [key=2, style=dotted];
m15_464 -> m15_486  [key=2, style=dotted];
m15_464 -> m15_30  [key=2, style=dotted];
m15_465 -> m15_466  [key=0, style=solid];
m15_465 -> m15_252  [key=2, style=dotted];
m15_465 -> m15_486  [key=2, style=dotted];
m15_465 -> m15_30  [key=2, style=dotted];
m15_466 -> m15_467  [key=0, style=solid];
m15_466 -> m15_252  [key=2, style=dotted];
m15_466 -> m15_486  [key=2, style=dotted];
m15_466 -> m15_30  [key=2, style=dotted];
m15_467 -> m15_468  [key=0, style=solid];
m15_467 -> m15_252  [key=2, style=dotted];
m15_467 -> m15_486  [key=2, style=dotted];
m15_467 -> m15_30  [key=2, style=dotted];
m15_468 -> m15_469  [key=0, style=solid];
m15_468 -> m15_252  [key=2, style=dotted];
m15_468 -> m15_486  [key=2, style=dotted];
m15_468 -> m15_30  [key=2, style=dotted];
m15_469 -> m15_470  [key=0, style=solid];
m15_469 -> m15_32  [key=2, style=dotted];
m15_469 -> m15_486  [key=2, style=dotted];
m15_469 -> m15_30  [key=2, style=dotted];
m15_470 -> m15_471  [key=0, style=solid];
m15_470 -> m15_32  [key=2, style=dotted];
m15_470 -> m15_486  [key=2, style=dotted];
m15_470 -> m15_30  [key=2, style=dotted];
m15_471 -> m15_472  [key=0, style=solid];
m15_471 -> m15_251  [key=2, style=dotted];
m15_471 -> m15_486  [key=2, style=dotted];
m15_471 -> m15_30  [key=2, style=dotted];
m15_472 -> m15_473  [key=0, style=solid];
m15_472 -> m15_251  [key=2, style=dotted];
m15_472 -> m15_486  [key=2, style=dotted];
m15_472 -> m15_30  [key=2, style=dotted];
m15_473 -> m15_474  [key=0, style=solid];
m15_473 -> m15_487  [key=2, style=dotted];
m15_473 -> m15_486  [key=2, style=dotted];
m15_473 -> m15_30  [key=2, style=dotted];
m15_474 -> m15_475  [key=0, style=solid];
m15_474 -> m15_487  [key=2, style=dotted];
m15_474 -> m15_486  [key=2, style=dotted];
m15_474 -> m15_30  [key=2, style=dotted];
m15_475 -> m15_476  [key=0, style=solid];
m15_475 -> m15_258  [key=2, style=dotted];
m15_475 -> m15_486  [key=2, style=dotted];
m15_475 -> m15_30  [key=2, style=dotted];
m15_476 -> m15_477  [key=0, style=solid];
m15_476 -> m15_258  [key=2, style=dotted];
m15_476 -> m15_486  [key=2, style=dotted];
m15_476 -> m15_30  [key=2, style=dotted];
m15_477 -> m15_478  [key=0, style=solid];
m15_477 -> m15_72  [key=2, style=dotted];
m15_477 -> m15_486  [key=2, style=dotted];
m15_477 -> m15_30  [key=2, style=dotted];
m15_478 -> m15_479  [key=0, style=solid];
m15_478 -> m15_72  [key=2, style=dotted];
m15_478 -> m15_486  [key=2, style=dotted];
m15_478 -> m15_30  [key=2, style=dotted];
m15_479 -> m15_480  [key=0, style=solid];
m15_479 -> m15_249  [key=2, style=dotted];
m15_479 -> m15_486  [key=2, style=dotted];
m15_479 -> m15_30  [key=2, style=dotted];
m15_480 -> m15_481  [key=0, style=solid];
m15_480 -> m15_249  [key=2, style=dotted];
m15_480 -> m15_486  [key=2, style=dotted];
m15_480 -> m15_30  [key=2, style=dotted];
m15_481 -> m15_482  [key=0, style=solid];
m15_481 -> m15_255  [key=2, style=dotted];
m15_481 -> m15_486  [key=2, style=dotted];
m15_481 -> m15_30  [key=2, style=dotted];
m15_482 -> m15_483  [key=0, style=solid];
m15_482 -> m15_260  [key=2, style=dotted];
m15_482 -> m15_259  [key=2, style=dotted];
m15_482 -> m15_486  [key=2, style=dotted];
m15_482 -> m15_30  [key=2, style=dotted];
m15_483 -> m15_484  [key=0, style=solid];
m15_483 -> m15_260  [key=2, style=dotted];
m15_483 -> m15_259  [key=2, style=dotted];
m15_483 -> m15_486  [key=2, style=dotted];
m15_483 -> m15_30  [key=2, style=dotted];
m15_484 -> m15_485  [key=0, style=solid];
m15_484 -> m15_262  [key=2, style=dotted];
m15_484 -> m15_261  [key=2, style=dotted];
m15_484 -> m15_486  [key=2, style=dotted];
m15_484 -> m15_30  [key=2, style=dotted];
m15_485 -> m15_445  [key=0, style=bold, color=blue];
m15_544 -> m15_545  [key=0, style=solid];
m15_545 -> m15_546  [key=0, style=solid];
m15_545 -> m15_70  [key=2, style=dotted];
m15_545 -> m15_547  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_545 -> m15_548  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_546 -> m15_547  [key=0, style=solid];
m15_546 -> m15_30  [key=2, style=dotted];
m15_547 -> m15_548  [key=0, style=solid];
m15_547 -> m15_30  [key=2, style=dotted];
m15_548 -> m15_549  [key=0, style=solid];
m15_548 -> m15_30  [key=2, style=dotted];
m15_549 -> m15_544  [key=0, style=bold, color=blue];
m15_709 -> m15_710  [key=0, style=solid];
m15_710 -> m15_711  [key=0, style=solid];
m15_710 -> m15_70  [key=2, style=dotted];
m15_710 -> m15_110  [key=2, style=dotted];
m15_710 -> m15_712  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_710 -> m15_713  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_710 -> m15_714  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_710 -> m15_715  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_710 -> m15_716  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_710 -> m15_717  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_710 -> m15_718  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_711 -> m15_712  [key=0, style=solid];
m15_711 -> m15_720  [key=2, style=dotted];
m15_712 -> m15_713  [key=0, style=solid];
m15_712 -> m15_30  [key=2, style=dotted];
m15_713 -> m15_714  [key=0, style=solid];
m15_713 -> m15_81  [key=2, style=dotted];
m15_713 -> m15_30  [key=2, style=dotted];
m15_714 -> m15_715  [key=0, style=solid];
m15_714 -> m15_30  [key=2, style=dotted];
m15_715 -> m15_716  [key=0, style=solid];
m15_715 -> m15_81  [key=2, style=dotted];
m15_715 -> m15_30  [key=2, style=dotted];
m15_716 -> m15_717  [key=0, style=solid];
m15_716 -> m15_720  [key=2, style=dotted];
m15_717 -> m15_718  [key=0, style=solid];
m15_717 -> m15_30  [key=2, style=dotted];
m15_718 -> m15_719  [key=0, style=solid];
m15_718 -> m15_30  [key=2, style=dotted];
m15_719 -> m15_709  [key=0, style=bold, color=blue];
m15_591 -> m15_592  [key=0, style=solid];
m15_592 -> m15_593  [key=0, style=solid];
m15_592 -> m15_70  [key=2, style=dotted];
m15_592 -> m15_110  [key=2, style=dotted];
m15_593 -> m15_594  [key=0, style=solid];
m15_593 -> m15_36  [key=2, style=dotted];
m15_594 -> m15_591  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_27  [key=2, style=dotted];
m15_1 -> m15_28  [key=2, style=dotted];
m15_1 -> m15_29  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_30  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_27  [key=2, style=dotted];
m15_3 -> m15_28  [key=2, style=dotted];
m15_3 -> m15_29  [key=2, style=dotted];
m15_3 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_3 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_30  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_30  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_30  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_27  [key=2, style=dotted];
m15_7 -> m15_28  [key=2, style=dotted];
m15_7 -> m15_9  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_7 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_31  [key=2, style=dotted];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_31  [key=2, style=dotted];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_29  [key=2, style=dotted];
m15_10 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_30  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_30  [key=2, style=dotted];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_27  [key=2, style=dotted];
m15_13 -> m15_28  [key=2, style=dotted];
m15_13 -> m15_29  [key=2, style=dotted];
m15_13 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label=c];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_30  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_32  [key=2, style=dotted];
m15_15 -> m15_33  [key=2, style=dotted];
m15_15 -> m15_34  [key=2, style=dotted];
m15_15 -> m15_35  [key=2, style=dotted];
m15_15 -> m15_36  [key=2, style=dotted];
m15_16 -> m15_17  [key=0, style=solid];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_27  [key=2, style=dotted];
m15_17 -> m15_28  [key=2, style=dotted];
m15_17 -> m15_29  [key=2, style=dotted];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_30  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_27  [key=2, style=dotted];
m15_19 -> m15_28  [key=2, style=dotted];
m15_19 -> m15_29  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_30  [key=2, style=dotted];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_27  [key=2, style=dotted];
m15_21 -> m15_28  [key=2, style=dotted];
m15_21 -> m15_29  [key=2, style=dotted];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_30  [key=2, style=dotted];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_27  [key=2, style=dotted];
m15_23 -> m15_28  [key=2, style=dotted];
m15_23 -> m15_29  [key=2, style=dotted];
m15_23 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_37  [key=2, style=dotted];
m15_24 -> m15_30  [key=2, style=dotted];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_38  [key=2, style=dotted];
m15_25 -> m15_39  [key=2, style=dotted];
m15_25 -> m15_30  [key=2, style=dotted];
m15_26 -> m15_0  [key=0, style=bold, color=blue];
m15_637 -> m15_638  [key=0, style=solid];
m15_638 -> m15_639  [key=0, style=solid];
m15_638 -> m15_70  [key=2, style=dotted];
m15_638 -> m15_110  [key=2, style=dotted];
m15_638 -> m15_640  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_641  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_642  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_643  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_644  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_645  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_646  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_647  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_648  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_638 -> m15_649  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_639 -> m15_640  [key=0, style=solid];
m15_639 -> m15_651  [key=2, style=dotted];
m15_640 -> m15_641  [key=0, style=solid];
m15_640 -> m15_30  [key=2, style=dotted];
m15_641 -> m15_642  [key=0, style=solid];
m15_641 -> m15_30  [key=2, style=dotted];
m15_642 -> m15_643  [key=0, style=solid];
m15_642 -> m15_30  [key=2, style=dotted];
m15_643 -> m15_644  [key=0, style=solid];
m15_643 -> m15_81  [key=2, style=dotted];
m15_643 -> m15_30  [key=2, style=dotted];
m15_644 -> m15_645  [key=0, style=solid];
m15_644 -> m15_651  [key=2, style=dotted];
m15_645 -> m15_646  [key=0, style=solid];
m15_645 -> m15_30  [key=2, style=dotted];
m15_646 -> m15_647  [key=0, style=solid];
m15_646 -> m15_30  [key=2, style=dotted];
m15_647 -> m15_648  [key=0, style=solid];
m15_647 -> m15_30  [key=2, style=dotted];
m15_648 -> m15_649  [key=0, style=solid];
m15_648 -> m15_81  [key=2, style=dotted];
m15_648 -> m15_30  [key=2, style=dotted];
m15_649 -> m15_650  [key=0, style=solid];
m15_649 -> m15_30  [key=2, style=dotted];
m15_650 -> m15_637  [key=0, style=bold, color=blue];
m15_50 -> m15_51  [key=0, style=solid];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_70  [key=2, style=dotted];
m15_51 -> m15_71  [key=2, style=dotted];
m15_51 -> m15_72  [key=2, style=dotted];
m15_51 -> m15_73  [key=2, style=dotted];
m15_51 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_51 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_51 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_51 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_51 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_51 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_51 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_30  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_74  [key=2, style=dotted];
m15_53 -> m15_75  [key=2, style=dotted];
m15_53 -> m15_76  [key=2, style=dotted];
m15_53 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_53 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_53 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_53 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_53 -> m15_62  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_53 -> m15_63  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_53 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_77  [key=2, style=dotted];
m15_54 -> m15_30  [key=2, style=dotted];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_75  [key=2, style=dotted];
m15_55 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_55 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_77  [key=2, style=dotted];
m15_56 -> m15_30  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_78  [key=2, style=dotted];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_30  [key=2, style=dotted];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_30  [key=2, style=dotted];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_30  [key=2, style=dotted];
m15_61 -> m15_62  [key=0, style=solid];
m15_61 -> m15_75  [key=2, style=dotted];
m15_61 -> m15_65  [key=1, style=dashed, color=darkseagreen4, label=o1];
m15_61 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=o1];
m15_61 -> m15_67  [key=1, style=dashed, color=darkseagreen4, label=o1];
m15_61 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label=o1];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_30  [key=2, style=dotted];
m15_63 -> m15_64  [key=0, style=solid];
m15_63 -> m15_79  [key=2, style=dotted];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_75  [key=2, style=dotted];
m15_64 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=o2];
m15_64 -> m15_67  [key=1, style=dashed, color=darkseagreen4, label=o2];
m15_64 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label=o2];
m15_65 -> m15_66  [key=0, style=solid];
m15_65 -> m15_78  [key=2, style=dotted];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_80  [key=2, style=dotted];
m15_66 -> m15_81  [key=2, style=dotted];
m15_66 -> m15_30  [key=2, style=dotted];
m15_67 -> m15_68  [key=0, style=solid];
m15_67 -> m15_35  [key=2, style=dotted];
m15_67 -> m15_30  [key=2, style=dotted];
m15_68 -> m15_69  [key=0, style=solid];
m15_68 -> m15_35  [key=2, style=dotted];
m15_68 -> m15_30  [key=2, style=dotted];
m15_69 -> m15_50  [key=0, style=bold, color=blue];
m15_604 -> m15_605  [key=0, style=solid];
m15_605 -> m15_606  [key=0, style=solid];
m15_605 -> m15_70  [key=2, style=dotted];
m15_605 -> m15_110  [key=2, style=dotted];
m15_606 -> m15_607  [key=0, style=solid];
m15_606 -> m15_614  [key=2, style=dotted];
m15_606 -> m15_582  [key=2, style=dotted];
m15_606 -> m15_608  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m15_606 -> m15_609  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m15_606 -> m15_610  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m15_606 -> m15_611  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m15_606 -> m15_612  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m15_607 -> m15_608  [key=0, style=solid];
m15_607 -> m15_81  [key=2, style=dotted];
m15_607 -> m15_30  [key=2, style=dotted];
m15_608 -> m15_609  [key=0, style=solid];
m15_608 -> m15_30  [key=2, style=dotted];
m15_609 -> m15_610  [key=0, style=solid];
m15_609 -> m15_70  [key=2, style=dotted];
m15_609 -> m15_35  [key=2, style=dotted];
m15_609 -> m15_36  [key=2, style=dotted];
m15_610 -> m15_611  [key=0, style=solid];
m15_610 -> m15_30  [key=2, style=dotted];
m15_611 -> m15_612  [key=0, style=solid];
m15_611 -> m15_30  [key=2, style=dotted];
m15_612 -> m15_613  [key=0, style=solid];
m15_612 -> m15_30  [key=2, style=dotted];
m15_613 -> m15_604  [key=0, style=bold, color=blue];
m15_615 -> m15_616  [key=0, style=solid];
m15_616 -> m15_617  [key=0, style=solid];
m15_616 -> m15_70  [key=2, style=dotted];
m15_616 -> m15_110  [key=2, style=dotted];
m15_616 -> m15_619  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_616 -> m15_621  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_616 -> m15_622  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_616 -> m15_627  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_616 -> m15_628  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_617 -> m15_618  [key=0, style=solid];
m15_617 -> m15_630  [key=2, style=dotted];
m15_617 -> m15_620  [key=1, style=dashed, color=darkseagreen4, label=writer];
m15_617 -> m15_623  [key=1, style=dashed, color=darkseagreen4, label=writer];
m15_617 -> m15_624  [key=1, style=dashed, color=darkseagreen4, label=writer];
m15_617 -> m15_625  [key=1, style=dashed, color=darkseagreen4, label=writer];
m15_617 -> m15_626  [key=1, style=dashed, color=darkseagreen4, label=writer];
m15_619 -> m15_620  [key=0, style=solid];
m15_619 -> m15_81  [key=2, style=dotted];
m15_619 -> m15_30  [key=2, style=dotted];
m15_621 -> m15_622  [key=0, style=solid];
m15_621 -> m15_81  [key=2, style=dotted];
m15_621 -> m15_30  [key=2, style=dotted];
m15_622 -> m15_623  [key=0, style=solid];
m15_622 -> m15_30  [key=2, style=dotted];
m15_627 -> m15_628  [key=0, style=solid];
m15_627 -> m15_81  [key=2, style=dotted];
m15_627 -> m15_30  [key=2, style=dotted];
m15_628 -> m15_629  [key=0, style=solid];
m15_628 -> m15_636  [key=2, style=dotted];
m15_628 -> m15_75  [key=2, style=dotted];
m15_628 -> m15_35  [key=2, style=dotted];
m15_628 -> m15_36  [key=2, style=dotted];
m15_618 -> m15_619  [key=0, style=solid];
m15_618 -> m15_631  [key=2, style=dotted];
m15_620 -> m15_621  [key=0, style=solid];
m15_620 -> m15_632  [key=2, style=dotted];
m15_623 -> m15_624  [key=0, style=solid];
m15_623 -> m15_633  [key=2, style=dotted];
m15_624 -> m15_625  [key=0, style=solid];
m15_624 -> m15_634  [key=2, style=dotted];
m15_625 -> m15_626  [key=0, style=solid];
m15_625 -> m15_632  [key=2, style=dotted];
m15_626 -> m15_627  [key=0, style=solid];
m15_626 -> m15_635  [key=2, style=dotted];
m15_629 -> m15_615  [key=0, style=bold, color=blue];
m15_758 -> m15_759  [key=0, style=solid];
m15_759 -> m15_760  [key=0, style=solid];
m15_759 -> m15_70  [key=2, style=dotted];
m15_759 -> m15_761  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_760 -> m15_761  [key=0, style=solid];
m15_760 -> m15_748  [key=2, style=dotted];
m15_761 -> m15_762  [key=0, style=solid];
m15_761 -> m15_750  [key=2, style=dotted];
m15_761 -> m15_36  [key=2, style=dotted];
m15_762 -> m15_763  [key=0, style=solid];
m15_762 -> m15_762  [key=3, color=darkorchid, style=bold, label="Local variable double d"];
m15_763 -> m15_764  [key=0, style=solid];
m15_763 -> m15_252  [key=2, style=dotted];
m15_763 -> m15_765  [key=1, style=dashed, color=darkseagreen4, label=v1];
m15_764 -> m15_765  [key=0, style=solid];
m15_764 -> m15_252  [key=2, style=dotted];
m15_765 -> m15_766  [key=0, style=solid];
m15_765 -> m15_767  [key=2, style=dotted];
m15_765 -> m15_36  [key=2, style=dotted];
m15_766 -> m15_758  [key=0, style=bold, color=blue];
m15_488 -> m15_489  [key=0, style=solid];
m15_489 -> m15_490  [key=0, style=solid];
m15_489 -> m15_72  [key=2, style=dotted];
m15_489 -> m15_73  [key=2, style=dotted];
m15_489 -> m15_35  [key=2, style=dotted];
m15_489 -> m15_36  [key=2, style=dotted];
m15_490 -> m15_491  [key=0, style=solid];
m15_490 -> m15_249  [key=2, style=dotted];
m15_490 -> m15_247  [key=2, style=dotted];
m15_490 -> m15_35  [key=2, style=dotted];
m15_490 -> m15_36  [key=2, style=dotted];
m15_491 -> m15_492  [key=0, style=solid];
m15_491 -> m15_250  [key=2, style=dotted];
m15_491 -> m15_35  [key=2, style=dotted];
m15_491 -> m15_36  [key=2, style=dotted];
m15_492 -> m15_493  [key=0, style=solid];
m15_492 -> m15_268  [key=2, style=dotted];
m15_492 -> m15_270  [key=2, style=dotted];
m15_492 -> m15_35  [key=2, style=dotted];
m15_492 -> m15_36  [key=2, style=dotted];
m15_493 -> m15_494  [key=0, style=solid];
m15_493 -> m15_268  [key=2, style=dotted];
m15_493 -> m15_35  [key=2, style=dotted];
m15_493 -> m15_36  [key=2, style=dotted];
m15_494 -> m15_495  [key=0, style=solid];
m15_494 -> m15_251  [key=2, style=dotted];
m15_494 -> m15_35  [key=2, style=dotted];
m15_494 -> m15_36  [key=2, style=dotted];
m15_495 -> m15_496  [key=0, style=solid];
m15_495 -> m15_251  [key=2, style=dotted];
m15_495 -> m15_35  [key=2, style=dotted];
m15_495 -> m15_36  [key=2, style=dotted];
m15_496 -> m15_497  [key=0, style=solid];
m15_496 -> m15_251  [key=2, style=dotted];
m15_496 -> m15_35  [key=2, style=dotted];
m15_496 -> m15_36  [key=2, style=dotted];
m15_497 -> m15_498  [key=0, style=solid];
m15_497 -> m15_250  [key=2, style=dotted];
m15_497 -> m15_35  [key=2, style=dotted];
m15_497 -> m15_36  [key=2, style=dotted];
m15_498 -> m15_499  [key=0, style=solid];
m15_498 -> m15_32  [key=2, style=dotted];
m15_498 -> m15_35  [key=2, style=dotted];
m15_498 -> m15_36  [key=2, style=dotted];
m15_499 -> m15_500  [key=0, style=solid];
m15_499 -> m15_250  [key=2, style=dotted];
m15_499 -> m15_35  [key=2, style=dotted];
m15_499 -> m15_36  [key=2, style=dotted];
m15_500 -> m15_501  [key=0, style=solid];
m15_500 -> m15_250  [key=2, style=dotted];
m15_500 -> m15_35  [key=2, style=dotted];
m15_500 -> m15_36  [key=2, style=dotted];
m15_501 -> m15_502  [key=0, style=solid];
m15_501 -> m15_32  [key=2, style=dotted];
m15_501 -> m15_35  [key=2, style=dotted];
m15_501 -> m15_36  [key=2, style=dotted];
m15_502 -> m15_503  [key=0, style=solid];
m15_502 -> m15_250  [key=2, style=dotted];
m15_502 -> m15_35  [key=2, style=dotted];
m15_502 -> m15_36  [key=2, style=dotted];
m15_503 -> m15_504  [key=0, style=solid];
m15_503 -> m15_250  [key=2, style=dotted];
m15_503 -> m15_35  [key=2, style=dotted];
m15_503 -> m15_36  [key=2, style=dotted];
m15_504 -> m15_505  [key=0, style=solid];
m15_504 -> m15_250  [key=2, style=dotted];
m15_504 -> m15_35  [key=2, style=dotted];
m15_504 -> m15_36  [key=2, style=dotted];
m15_505 -> m15_506  [key=0, style=solid];
m15_505 -> m15_250  [key=2, style=dotted];
m15_505 -> m15_35  [key=2, style=dotted];
m15_505 -> m15_36  [key=2, style=dotted];
m15_506 -> m15_507  [key=0, style=solid];
m15_506 -> m15_250  [key=2, style=dotted];
m15_506 -> m15_35  [key=2, style=dotted];
m15_506 -> m15_36  [key=2, style=dotted];
m15_507 -> m15_508  [key=0, style=solid];
m15_507 -> m15_250  [key=2, style=dotted];
m15_507 -> m15_35  [key=2, style=dotted];
m15_507 -> m15_36  [key=2, style=dotted];
m15_508 -> m15_509  [key=0, style=solid];
m15_508 -> m15_250  [key=2, style=dotted];
m15_508 -> m15_35  [key=2, style=dotted];
m15_508 -> m15_36  [key=2, style=dotted];
m15_509 -> m15_510  [key=0, style=solid];
m15_509 -> m15_32  [key=2, style=dotted];
m15_509 -> m15_35  [key=2, style=dotted];
m15_509 -> m15_36  [key=2, style=dotted];
m15_510 -> m15_511  [key=0, style=solid];
m15_510 -> m15_250  [key=2, style=dotted];
m15_510 -> m15_35  [key=2, style=dotted];
m15_510 -> m15_36  [key=2, style=dotted];
m15_511 -> m15_512  [key=0, style=solid];
m15_511 -> m15_32  [key=2, style=dotted];
m15_511 -> m15_35  [key=2, style=dotted];
m15_511 -> m15_36  [key=2, style=dotted];
m15_512 -> m15_513  [key=0, style=solid];
m15_512 -> m15_250  [key=2, style=dotted];
m15_512 -> m15_35  [key=2, style=dotted];
m15_512 -> m15_36  [key=2, style=dotted];
m15_513 -> m15_514  [key=0, style=solid];
m15_513 -> m15_32  [key=2, style=dotted];
m15_513 -> m15_35  [key=2, style=dotted];
m15_513 -> m15_36  [key=2, style=dotted];
m15_514 -> m15_515  [key=0, style=solid];
m15_514 -> m15_32  [key=2, style=dotted];
m15_514 -> m15_35  [key=2, style=dotted];
m15_514 -> m15_36  [key=2, style=dotted];
m15_515 -> m15_516  [key=0, style=solid];
m15_515 -> m15_253  [key=2, style=dotted];
m15_515 -> m15_35  [key=2, style=dotted];
m15_515 -> m15_36  [key=2, style=dotted];
m15_516 -> m15_517  [key=0, style=solid];
m15_516 -> m15_253  [key=2, style=dotted];
m15_516 -> m15_35  [key=2, style=dotted];
m15_516 -> m15_36  [key=2, style=dotted];
m15_517 -> m15_518  [key=0, style=solid];
m15_517 -> m15_252  [key=2, style=dotted];
m15_517 -> m15_35  [key=2, style=dotted];
m15_517 -> m15_36  [key=2, style=dotted];
m15_518 -> m15_519  [key=0, style=solid];
m15_518 -> m15_32  [key=2, style=dotted];
m15_518 -> m15_35  [key=2, style=dotted];
m15_518 -> m15_36  [key=2, style=dotted];
m15_519 -> m15_520  [key=0, style=solid];
m15_519 -> m15_254  [key=2, style=dotted];
m15_519 -> m15_35  [key=2, style=dotted];
m15_519 -> m15_36  [key=2, style=dotted];
m15_520 -> m15_521  [key=0, style=solid];
m15_520 -> m15_254  [key=2, style=dotted];
m15_520 -> m15_35  [key=2, style=dotted];
m15_520 -> m15_36  [key=2, style=dotted];
m15_521 -> m15_522  [key=0, style=solid];
m15_521 -> m15_255  [key=2, style=dotted];
m15_521 -> m15_35  [key=2, style=dotted];
m15_521 -> m15_36  [key=2, style=dotted];
m15_522 -> m15_523  [key=0, style=solid];
m15_522 -> m15_250  [key=2, style=dotted];
m15_522 -> m15_35  [key=2, style=dotted];
m15_522 -> m15_36  [key=2, style=dotted];
m15_523 -> m15_524  [key=0, style=solid];
m15_523 -> m15_256  [key=2, style=dotted];
m15_523 -> m15_35  [key=2, style=dotted];
m15_523 -> m15_36  [key=2, style=dotted];
m15_524 -> m15_525  [key=0, style=solid];
m15_524 -> m15_256  [key=2, style=dotted];
m15_524 -> m15_35  [key=2, style=dotted];
m15_524 -> m15_36  [key=2, style=dotted];
m15_525 -> m15_526  [key=0, style=solid];
m15_525 -> m15_256  [key=2, style=dotted];
m15_525 -> m15_35  [key=2, style=dotted];
m15_525 -> m15_36  [key=2, style=dotted];
m15_526 -> m15_527  [key=0, style=solid];
m15_526 -> m15_253  [key=2, style=dotted];
m15_526 -> m15_35  [key=2, style=dotted];
m15_526 -> m15_36  [key=2, style=dotted];
m15_527 -> m15_528  [key=0, style=solid, color=green];
m15_527 -> m15_252  [key=2, style=dotted];
m15_527 -> m15_35  [key=2, style=dotted];
m15_527 -> m15_36  [key=2, style=dotted];
m15_528 -> m15_529  [key=0, style=solid, color=green];
m15_528 -> m15_250  [key=2, style=dotted, color=green];
m15_528 -> m15_35  [key=2, style=dotted, color=green];
m15_528 -> m15_36  [key=2, style=dotted, color=green];
m15_529 -> m15_530  [key=0, style=solid, color=green];
m15_529 -> m15_251  [key=2, style=dotted];
m15_529 -> m15_35  [key=2, style=dotted];
m15_529 -> m15_543  [key=2, style=dotted];
m15_530 -> m15_531  [key=0, style=solid, color=green];
m15_530 -> m15_250  [key=2, style=dotted, color=green];
m15_530 -> m15_35  [key=2, style=dotted, color=green];
m15_530 -> m15_543  [key=2, style=dotted, color=green];
m15_531 -> m15_532  [key=0, style=solid];
m15_531 -> m15_533  [key=1, style=dashed, color=darkseagreen4, label=emptyData];
m15_532 -> m15_533  [key=0, style=solid];
m15_532 -> m15_250  [key=2, style=dotted];
m15_532 -> m15_35  [key=2, style=dotted];
m15_532 -> m15_36  [key=2, style=dotted];
m15_533 -> m15_534  [key=0, style=solid];
m15_533 -> m15_250  [key=2, style=dotted];
m15_533 -> m15_35  [key=2, style=dotted];
m15_533 -> m15_543  [key=2, style=dotted];
m15_534 -> m15_535  [key=0, style=solid];
m15_534 -> m15_250  [key=2, style=dotted];
m15_534 -> m15_263  [key=2, style=dotted];
m15_534 -> m15_35  [key=2, style=dotted];
m15_534 -> m15_36  [key=2, style=dotted];
m15_535 -> m15_536  [key=0, style=solid, color=green];
m15_535 -> m15_258  [key=2, style=dotted];
m15_535 -> m15_257  [key=2, style=dotted];
m15_535 -> m15_35  [key=2, style=dotted];
m15_535 -> m15_36  [key=2, style=dotted];
m15_536 -> m15_537  [key=0, style=solid, color=green];
m15_536 -> m15_250  [key=2, style=dotted, color=green];
m15_536 -> m15_35  [key=2, style=dotted, color=green];
m15_536 -> m15_36  [key=2, style=dotted, color=green];
m15_537 -> m15_538  [key=0, style=solid];
m15_537 -> m15_258  [key=2, style=dotted];
m15_537 -> m15_257  [key=2, style=dotted];
m15_537 -> m15_35  [key=2, style=dotted];
m15_537 -> m15_36  [key=2, style=dotted];
m15_538 -> m15_539  [key=0, style=solid];
m15_538 -> m15_259  [key=2, style=dotted];
m15_538 -> m15_260  [key=2, style=dotted];
m15_538 -> m15_35  [key=2, style=dotted];
m15_538 -> m15_36  [key=2, style=dotted];
m15_539 -> m15_540  [key=0, style=solid, color=green];
m15_539 -> m15_261  [key=2, style=dotted];
m15_539 -> m15_262  [key=2, style=dotted];
m15_539 -> m15_35  [key=2, style=dotted];
m15_539 -> m15_36  [key=2, style=dotted];
m15_540 -> m15_541  [key=0, style=solid, color=green];
m15_540 -> m15_250  [key=2, style=dotted, color=green];
m15_540 -> m15_35  [key=2, style=dotted, color=green];
m15_540 -> m15_36  [key=2, style=dotted, color=green];
m15_541 -> m15_542  [key=0, style=solid, color=green];
m15_541 -> m15_250  [key=2, style=dotted, color=green];
m15_541 -> m15_35  [key=2, style=dotted, color=green];
m15_541 -> m15_36  [key=2, style=dotted, color=green];
m15_542 -> m15_488  [key=0, style=bold, color=blue];
m15_681 -> m15_682  [key=0, style=solid];
m15_682 -> m15_683  [key=0, style=solid];
m15_682 -> m15_70  [key=2, style=dotted];
m15_682 -> m15_110  [key=2, style=dotted];
m15_682 -> m15_684  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_682 -> m15_685  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_682 -> m15_686  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_682 -> m15_687  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_682 -> m15_688  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_682 -> m15_689  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_682 -> m15_690  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_682 -> m15_691  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_683 -> m15_684  [key=0, style=solid];
m15_683 -> m15_32  [key=2, style=dotted];
m15_683 -> m15_693  [key=2, style=dotted];
m15_684 -> m15_685  [key=0, style=solid];
m15_684 -> m15_30  [key=2, style=dotted];
m15_685 -> m15_686  [key=0, style=solid];
m15_685 -> m15_81  [key=2, style=dotted];
m15_685 -> m15_30  [key=2, style=dotted];
m15_686 -> m15_687  [key=0, style=solid];
m15_686 -> m15_255  [key=2, style=dotted];
m15_686 -> m15_693  [key=2, style=dotted];
m15_687 -> m15_688  [key=0, style=solid];
m15_687 -> m15_30  [key=2, style=dotted];
m15_688 -> m15_689  [key=0, style=solid];
m15_688 -> m15_32  [key=2, style=dotted];
m15_688 -> m15_693  [key=2, style=dotted];
m15_689 -> m15_690  [key=0, style=solid];
m15_689 -> m15_30  [key=2, style=dotted];
m15_690 -> m15_691  [key=0, style=solid];
m15_690 -> m15_81  [key=2, style=dotted];
m15_690 -> m15_30  [key=2, style=dotted];
m15_691 -> m15_692  [key=0, style=solid];
m15_691 -> m15_70  [key=2, style=dotted];
m15_691 -> m15_110  [key=2, style=dotted];
m15_691 -> m15_35  [key=2, style=dotted];
m15_691 -> m15_36  [key=2, style=dotted];
m15_692 -> m15_681  [key=0, style=bold, color=blue];
m15_272 -> m15_273  [key=0, style=solid];
m15_273 -> m15_274  [key=0, style=solid];
m15_273 -> m15_316  [key=2, style=dotted];
m15_273 -> m15_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_274 -> m15_275  [key=0, style=solid];
m15_274 -> m15_316  [key=2, style=dotted];
m15_274 -> m15_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_275 -> m15_276  [key=0, style=solid];
m15_275 -> m15_316  [key=2, style=dotted];
m15_275 -> m15_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_276 -> m15_277  [key=0, style=solid];
m15_276 -> m15_316  [key=2, style=dotted];
m15_276 -> m15_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_277 -> m15_278  [key=0, style=solid];
m15_277 -> m15_316  [key=2, style=dotted];
m15_277 -> m15_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_278 -> m15_279  [key=0, style=solid, color=green];
m15_278 -> m15_316  [key=2, style=dotted];
m15_278 -> m15_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_279 -> m15_280  [key=0, style=solid, color=green];
m15_279 -> m15_316  [key=2, style=dotted, color=green];
m15_279 -> m15_336  [key=1, style=dashed, color=green, label="lambda expression"];
m15_280 -> m15_281  [key=0, style=solid];
m15_280 -> m15_316  [key=2, style=dotted];
m15_280 -> m15_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_281 -> m15_282  [key=0, style=solid];
m15_281 -> m15_316  [key=2, style=dotted];
m15_281 -> m15_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_282 -> m15_283  [key=0, style=solid];
m15_282 -> m15_316  [key=2, style=dotted];
m15_282 -> m15_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_283 -> m15_284  [key=0, style=solid];
m15_283 -> m15_316  [key=2, style=dotted];
m15_283 -> m15_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_284 -> m15_285  [key=0, style=solid];
m15_284 -> m15_316  [key=2, style=dotted];
m15_284 -> m15_352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_285 -> m15_286  [key=0, style=solid];
m15_285 -> m15_316  [key=2, style=dotted];
m15_285 -> m15_355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_286 -> m15_287  [key=0, style=solid];
m15_286 -> m15_316  [key=2, style=dotted];
m15_286 -> m15_358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_287 -> m15_288  [key=0, style=solid];
m15_287 -> m15_316  [key=2, style=dotted];
m15_287 -> m15_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_288 -> m15_289  [key=0, style=solid];
m15_288 -> m15_316  [key=2, style=dotted];
m15_288 -> m15_364  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_289 -> m15_290  [key=0, style=solid];
m15_289 -> m15_316  [key=2, style=dotted];
m15_289 -> m15_367  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_290 -> m15_291  [key=0, style=solid];
m15_290 -> m15_316  [key=2, style=dotted];
m15_290 -> m15_370  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_291 -> m15_292  [key=0, style=solid];
m15_291 -> m15_316  [key=2, style=dotted];
m15_291 -> m15_373  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_292 -> m15_293  [key=0, style=solid, color=green];
m15_292 -> m15_316  [key=2, style=dotted];
m15_292 -> m15_376  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_293 -> m15_294  [key=0, style=solid, color=green];
m15_293 -> m15_316  [key=2, style=dotted, color=green];
m15_293 -> m15_379  [key=1, style=dashed, color=green, label="lambda expression"];
m15_294 -> m15_295  [key=0, style=solid];
m15_294 -> m15_316  [key=2, style=dotted];
m15_294 -> m15_382  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_295 -> m15_296  [key=0, style=solid];
m15_295 -> m15_316  [key=2, style=dotted];
m15_295 -> m15_385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_296 -> m15_297  [key=0, style=solid];
m15_296 -> m15_316  [key=2, style=dotted];
m15_296 -> m15_388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_297 -> m15_298  [key=0, style=solid];
m15_297 -> m15_316  [key=2, style=dotted];
m15_297 -> m15_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_298 -> m15_299  [key=0, style=solid];
m15_298 -> m15_316  [key=2, style=dotted];
m15_298 -> m15_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_299 -> m15_300  [key=0, style=solid];
m15_299 -> m15_316  [key=2, style=dotted];
m15_299 -> m15_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_300 -> m15_301  [key=0, style=solid];
m15_300 -> m15_316  [key=2, style=dotted];
m15_300 -> m15_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_301 -> m15_302  [key=0, style=solid, color=green];
m15_301 -> m15_316  [key=2, style=dotted];
m15_301 -> m15_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_302 -> m15_303  [key=0, style=solid, color=green];
m15_302 -> m15_316  [key=2, style=dotted, color=green];
m15_302 -> m15_406  [key=1, style=dashed, color=green, label="lambda expression"];
m15_303 -> m15_304  [key=0, style=solid];
m15_303 -> m15_316  [key=2, style=dotted];
m15_303 -> m15_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_304 -> m15_305  [key=0, style=solid];
m15_304 -> m15_316  [key=2, style=dotted];
m15_304 -> m15_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_305 -> m15_306  [key=0, style=solid];
m15_305 -> m15_316  [key=2, style=dotted];
m15_305 -> m15_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_306 -> m15_307  [key=0, style=solid];
m15_306 -> m15_316  [key=2, style=dotted];
m15_306 -> m15_418  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_307 -> m15_308  [key=0, style=solid];
m15_307 -> m15_316  [key=2, style=dotted];
m15_307 -> m15_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_308 -> m15_309  [key=0, style=solid];
m15_308 -> m15_316  [key=2, style=dotted];
m15_308 -> m15_424  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_309 -> m15_310  [key=0, style=solid, color=green];
m15_309 -> m15_317  [key=2, style=dotted];
m15_309 -> m15_427  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_310 -> m15_311  [key=0, style=solid, color=green];
m15_310 -> m15_317  [key=2, style=dotted, color=green];
m15_310 -> m15_430  [key=1, style=dashed, color=green, label="lambda expression"];
m15_311 -> m15_312  [key=0, style=solid];
m15_311 -> m15_317  [key=2, style=dotted];
m15_311 -> m15_433  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_312 -> m15_313  [key=0, style=solid];
m15_312 -> m15_317  [key=2, style=dotted];
m15_312 -> m15_436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_313 -> m15_314  [key=0, style=solid];
m15_313 -> m15_316  [key=2, style=dotted];
m15_313 -> m15_439  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_314 -> m15_315  [key=0, style=solid];
m15_314 -> m15_316  [key=2, style=dotted];
m15_314 -> m15_442  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_315 -> m15_272  [key=0, style=bold, color=blue];
m15_704 -> m15_705  [key=0, style=solid];
m15_705 -> m15_706  [key=0, style=solid];
m15_705 -> m15_110  [key=2, style=dotted];
m15_705 -> m15_72  [key=2, style=dotted];
m15_705 -> m15_248  [key=2, style=dotted];
m15_706 -> m15_707  [key=0, style=solid];
m15_706 -> m15_701  [key=2, style=dotted];
m15_706 -> m15_702  [key=2, style=dotted];
m15_707 -> m15_708  [key=0, style=solid];
m15_707 -> m15_30  [key=2, style=dotted];
m15_708 -> m15_704  [key=0, style=bold, color=blue];
m15_82 -> m15_83  [key=0, style=solid];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_70  [key=2, style=dotted];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_86  [key=1, style=dashed, color=darkseagreen4, label=next];
m15_85 -> m15_86  [key=0, style=solid];
m15_85 -> m15_30  [key=2, style=dotted];
m15_86 -> m15_87  [key=0, style=solid];
m15_86 -> m15_86  [key=1, style=dashed, color=darkseagreen4, label=next];
m15_86 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label=next];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_70  [key=2, style=dotted];
m15_87 -> m15_35  [key=2, style=dotted];
m15_87 -> m15_36  [key=2, style=dotted];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label=next];
m15_88 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label=next];
m15_89 -> m15_90  [key=0, style=solid];
m15_89 -> m15_70  [key=2, style=dotted];
m15_89 -> m15_35  [key=2, style=dotted];
m15_89 -> m15_36  [key=2, style=dotted];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label=next];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_93  [key=2, style=dotted];
m15_92 -> m15_82  [key=0, style=bold, color=blue];
m15_94 -> m15_95  [key=0, style=solid];
m15_95 -> m15_96  [key=0, style=solid];
m15_95 -> m15_70  [key=2, style=dotted];
m15_96 -> m15_97  [key=0, style=solid];
m15_96 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=previous];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_70  [key=2, style=dotted];
m15_97 -> m15_35  [key=2, style=dotted];
m15_97 -> m15_36  [key=2, style=dotted];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=previous];
m15_98 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label=previous];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> m15_30  [key=2, style=dotted];
m15_100 -> m15_101  [key=0, style=solid];
m15_100 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label=previous];
m15_100 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label=previous];
m15_101 -> m15_102  [key=0, style=solid];
m15_101 -> m15_30  [key=2, style=dotted];
m15_102 -> m15_103  [key=0, style=solid];
m15_102 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label=previous];
m15_103 -> m15_104  [key=0, style=solid];
m15_103 -> m15_93  [key=2, style=dotted];
m15_104 -> m15_94  [key=0, style=bold, color=blue];
m15_694 -> m15_695  [key=0, style=solid];
m15_695 -> m15_696  [key=0, style=solid];
m15_695 -> m15_110  [key=2, style=dotted];
m15_695 -> m15_72  [key=2, style=dotted];
m15_695 -> m15_248  [key=2, style=dotted];
m15_695 -> m15_698  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_696 -> m15_697  [key=0, style=solid];
m15_696 -> m15_701  [key=2, style=dotted];
m15_696 -> m15_702  [key=2, style=dotted];
m15_698 -> m15_699  [key=0, style=solid];
m15_698 -> m15_701  [key=2, style=dotted];
m15_698 -> m15_703  [key=2, style=dotted];
m15_697 -> m15_698  [key=0, style=solid];
m15_697 -> m15_30  [key=2, style=dotted];
m15_699 -> m15_700  [key=0, style=solid];
m15_699 -> m15_30  [key=2, style=dotted];
m15_700 -> m15_694  [key=0, style=bold, color=blue];
m15_105 -> m15_106  [key=0, style=solid];
m15_106 -> m15_107  [key=0, style=solid];
m15_106 -> m15_70  [key=2, style=dotted];
m15_106 -> m15_110  [key=2, style=dotted];
m15_106 -> m15_108  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_81  [key=2, style=dotted];
m15_107 -> m15_30  [key=2, style=dotted];
m15_108 -> m15_109  [key=0, style=solid];
m15_108 -> m15_111  [key=2, style=dotted];
m15_108 -> m15_81  [key=2, style=dotted];
m15_108 -> m15_30  [key=2, style=dotted];
m15_109 -> m15_105  [key=0, style=bold, color=blue];
m15_771 -> m15_772  [key=0, style=solid];
m15_318 -> m15_319  [key=0, style=solid];
m15_321 -> m15_322  [key=0, style=solid];
m15_324 -> m15_325  [key=0, style=solid];
m15_327 -> m15_328  [key=0, style=solid];
m15_330 -> m15_331  [key=0, style=solid];
m15_333 -> m15_334  [key=0, style=solid];
m15_336 -> m15_337  [key=0, style=solid, color=green];
m15_339 -> m15_340  [key=0, style=solid];
m15_343 -> m15_344  [key=0, style=solid];
m15_346 -> m15_347  [key=0, style=solid];
m15_349 -> m15_350  [key=0, style=solid];
m15_352 -> m15_353  [key=0, style=solid];
m15_355 -> m15_356  [key=0, style=solid];
m15_358 -> m15_359  [key=0, style=solid];
m15_361 -> m15_362  [key=0, style=solid];
m15_364 -> m15_365  [key=0, style=solid];
m15_367 -> m15_368  [key=0, style=solid];
m15_370 -> m15_371  [key=0, style=solid];
m15_373 -> m15_374  [key=0, style=solid];
m15_376 -> m15_377  [key=0, style=solid];
m15_379 -> m15_380  [key=0, style=solid, color=green];
m15_382 -> m15_383  [key=0, style=solid];
m15_385 -> m15_386  [key=0, style=solid];
m15_388 -> m15_389  [key=0, style=solid];
m15_391 -> m15_392  [key=0, style=solid];
m15_394 -> m15_395  [key=0, style=solid];
m15_397 -> m15_398  [key=0, style=solid];
m15_400 -> m15_401  [key=0, style=solid];
m15_403 -> m15_404  [key=0, style=solid];
m15_406 -> m15_407  [key=0, style=solid, color=green];
m15_409 -> m15_410  [key=0, style=solid];
m15_412 -> m15_413  [key=0, style=solid];
m15_415 -> m15_416  [key=0, style=solid];
m15_418 -> m15_419  [key=0, style=solid];
m15_421 -> m15_422  [key=0, style=solid];
m15_424 -> m15_425  [key=0, style=solid];
m15_427 -> m15_428  [key=0, style=solid];
m15_430 -> m15_431  [key=0, style=solid, color=green];
m15_433 -> m15_434  [key=0, style=solid];
m15_436 -> m15_437  [key=0, style=solid];
m15_439 -> m15_440  [key=0, style=solid];
m15_442 -> m15_443  [key=0, style=solid];
m15_319 -> m15_320  [key=0, style=solid];
m15_319 -> m15_251  [key=2, style=dotted];
m15_320 -> m15_318  [key=0, style=bold, color=blue];
m15_322 -> m15_323  [key=0, style=solid];
m15_322 -> m15_32  [key=2, style=dotted];
m15_323 -> m15_321  [key=0, style=bold, color=blue];
m15_325 -> m15_326  [key=0, style=solid];
m15_325 -> m15_252  [key=2, style=dotted];
m15_326 -> m15_324  [key=0, style=bold, color=blue];
m15_328 -> m15_329  [key=0, style=solid];
m15_328 -> m15_256  [key=2, style=dotted];
m15_329 -> m15_327  [key=0, style=bold, color=blue];
m15_331 -> m15_332  [key=0, style=solid];
m15_331 -> m15_258  [key=2, style=dotted];
m15_332 -> m15_330  [key=0, style=bold, color=blue];
m15_334 -> m15_335  [key=0, style=solid];
m15_334 -> m15_261  [key=2, style=dotted];
m15_334 -> m15_262  [key=2, style=dotted];
m15_335 -> m15_333  [key=0, style=bold, color=blue];
m15_337 -> m15_338  [key=0, style=solid, color=green];
m15_337 -> m15_250  [key=2, style=dotted, color=green];
m15_338 -> m15_336  [key=0, style=bold, color=blue];
m15_340 -> m15_341  [key=0, style=solid];
m15_340 -> m15_259  [key=2, style=dotted];
m15_340 -> m15_342  [key=2, style=dotted];
m15_341 -> m15_339  [key=0, style=bold, color=blue];
m15_344 -> m15_345  [key=0, style=solid];
m15_344 -> m15_251  [key=2, style=dotted];
m15_345 -> m15_343  [key=0, style=bold, color=blue];
m15_347 -> m15_348  [key=0, style=solid];
m15_347 -> m15_32  [key=2, style=dotted];
m15_348 -> m15_346  [key=0, style=bold, color=blue];
m15_350 -> m15_351  [key=0, style=solid];
m15_350 -> m15_252  [key=2, style=dotted];
m15_351 -> m15_349  [key=0, style=bold, color=blue];
m15_353 -> m15_354  [key=0, style=solid];
m15_353 -> m15_256  [key=2, style=dotted];
m15_354 -> m15_352  [key=0, style=bold, color=blue];
m15_356 -> m15_357  [key=0, style=solid];
m15_356 -> m15_258  [key=2, style=dotted];
m15_357 -> m15_355  [key=0, style=bold, color=blue];
m15_359 -> m15_360  [key=0, style=solid];
m15_359 -> m15_259  [key=2, style=dotted];
m15_359 -> m15_342  [key=2, style=dotted];
m15_360 -> m15_358  [key=0, style=bold, color=blue];
m15_362 -> m15_363  [key=0, style=solid];
m15_362 -> m15_72  [key=2, style=dotted];
m15_363 -> m15_361  [key=0, style=bold, color=blue];
m15_365 -> m15_366  [key=0, style=solid];
m15_365 -> m15_249  [key=2, style=dotted];
m15_366 -> m15_364  [key=0, style=bold, color=blue];
m15_368 -> m15_369  [key=0, style=solid];
m15_368 -> m15_251  [key=2, style=dotted];
m15_369 -> m15_367  [key=0, style=bold, color=blue];
m15_371 -> m15_372  [key=0, style=solid];
m15_371 -> m15_32  [key=2, style=dotted];
m15_372 -> m15_370  [key=0, style=bold, color=blue];
m15_374 -> m15_375  [key=0, style=solid];
m15_374 -> m15_252  [key=2, style=dotted];
m15_375 -> m15_373  [key=0, style=bold, color=blue];
m15_377 -> m15_378  [key=0, style=solid];
m15_377 -> m15_256  [key=2, style=dotted];
m15_378 -> m15_376  [key=0, style=bold, color=blue];
m15_380 -> m15_381  [key=0, style=solid, color=green];
m15_380 -> m15_250  [key=2, style=dotted, color=green];
m15_381 -> m15_379  [key=0, style=bold, color=blue];
m15_383 -> m15_384  [key=0, style=solid];
m15_383 -> m15_259  [key=2, style=dotted];
m15_383 -> m15_342  [key=2, style=dotted];
m15_384 -> m15_382  [key=0, style=bold, color=blue];
m15_386 -> m15_387  [key=0, style=solid];
m15_386 -> m15_72  [key=2, style=dotted];
m15_387 -> m15_385  [key=0, style=bold, color=blue];
m15_389 -> m15_390  [key=0, style=solid];
m15_389 -> m15_249  [key=2, style=dotted];
m15_390 -> m15_388  [key=0, style=bold, color=blue];
m15_392 -> m15_393  [key=0, style=solid];
m15_392 -> m15_261  [key=2, style=dotted];
m15_392 -> m15_262  [key=2, style=dotted];
m15_393 -> m15_391  [key=0, style=bold, color=blue];
m15_395 -> m15_396  [key=0, style=solid];
m15_395 -> m15_251  [key=2, style=dotted];
m15_396 -> m15_394  [key=0, style=bold, color=blue];
m15_398 -> m15_399  [key=0, style=solid];
m15_398 -> m15_32  [key=2, style=dotted];
m15_399 -> m15_397  [key=0, style=bold, color=blue];
m15_401 -> m15_402  [key=0, style=solid];
m15_401 -> m15_252  [key=2, style=dotted];
m15_402 -> m15_400  [key=0, style=bold, color=blue];
m15_404 -> m15_405  [key=0, style=solid];
m15_404 -> m15_256  [key=2, style=dotted];
m15_405 -> m15_403  [key=0, style=bold, color=blue];
m15_407 -> m15_408  [key=0, style=solid, color=green];
m15_407 -> m15_250  [key=2, style=dotted, color=green];
m15_408 -> m15_406  [key=0, style=bold, color=blue];
m15_410 -> m15_411  [key=0, style=solid];
m15_410 -> m15_72  [key=2, style=dotted];
m15_411 -> m15_409  [key=0, style=bold, color=blue];
m15_413 -> m15_414  [key=0, style=solid];
m15_413 -> m15_249  [key=2, style=dotted];
m15_414 -> m15_412  [key=0, style=bold, color=blue];
m15_416 -> m15_417  [key=0, style=solid];
m15_416 -> m15_258  [key=2, style=dotted];
m15_416 -> m15_257  [key=2, style=dotted];
m15_417 -> m15_415  [key=0, style=bold, color=blue];
m15_419 -> m15_420  [key=0, style=solid];
m15_419 -> m15_261  [key=2, style=dotted];
m15_419 -> m15_262  [key=2, style=dotted];
m15_420 -> m15_418  [key=0, style=bold, color=blue];
m15_422 -> m15_423  [key=0, style=solid];
m15_422 -> m15_251  [key=2, style=dotted];
m15_423 -> m15_421  [key=0, style=bold, color=blue];
m15_425 -> m15_426  [key=0, style=solid];
m15_425 -> m15_251  [key=2, style=dotted];
m15_426 -> m15_424  [key=0, style=bold, color=blue];
m15_428 -> m15_429  [key=0, style=solid];
m15_428 -> m15_261  [key=2, style=dotted];
m15_428 -> m15_262  [key=2, style=dotted];
m15_428 -> m15_269  [key=2, style=dotted];
m15_429 -> m15_427  [key=0, style=bold, color=blue];
m15_431 -> m15_432  [key=0, style=solid, color=green];
m15_431 -> m15_250  [key=2, style=dotted, color=green];
m15_431 -> m15_269  [key=2, style=dotted, color=green];
m15_432 -> m15_430  [key=0, style=bold, color=blue];
m15_434 -> m15_435  [key=0, style=solid];
m15_434 -> m15_259  [key=2, style=dotted];
m15_434 -> m15_342  [key=2, style=dotted];
m15_434 -> m15_269  [key=2, style=dotted];
m15_435 -> m15_433  [key=0, style=bold, color=blue];
m15_437 -> m15_438  [key=0, style=solid];
m15_437 -> m15_259  [key=2, style=dotted];
m15_437 -> m15_342  [key=2, style=dotted];
m15_437 -> m15_269  [key=2, style=dotted];
m15_438 -> m15_436  [key=0, style=bold, color=blue];
m15_440 -> m15_441  [key=0, style=solid];
m15_440 -> m15_72  [key=2, style=dotted];
m15_441 -> m15_439  [key=0, style=bold, color=blue];
m15_443 -> m15_444  [key=0, style=solid];
m15_443 -> m15_72  [key=2, style=dotted];
m15_444 -> m15_442  [key=0, style=bold, color=blue];
m15_665 -> m15_666  [key=0, style=solid];
m15_666 -> m15_667  [key=0, style=solid];
m15_666 -> m15_669  [key=2, style=dotted];
m15_667 -> m15_668  [key=0, style=solid];
m15_667 -> m15_670  [key=2, style=dotted];
m15_667 -> m15_671  [key=2, style=dotted];
m15_668 -> m15_665  [key=0, style=bold, color=blue];
m15_675 -> m15_676  [key=0, style=solid];
m15_676 -> m15_677  [key=0, style=solid];
m15_676 -> m15_679  [key=2, style=dotted];
m15_677 -> m15_678  [key=0, style=solid];
m15_677 -> m15_680  [key=2, style=dotted];
m15_678 -> m15_675  [key=0, style=bold, color=blue];
m15_772 -> m15_773  [key=0, style=solid];
m15_773 -> m15_774  [key=0, style=solid];
m15_773 -> m15_49  [key=2, style=dotted];
m15_774 -> m15_771  [key=0, style=bold, color=blue];
m15_550 -> m15_551  [key=0, style=solid];
m15_551 -> m15_552  [key=0, style=solid];
m15_552 -> m15_553  [key=0, style=solid];
m15_552 -> m15_70  [key=2, style=dotted];
m15_552 -> m15_554  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_552 -> m15_555  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_552 -> m15_556  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_552 -> m15_557  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_552 -> m15_558  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_552 -> m15_559  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_552 -> m15_561  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_552 -> m15_565  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_552 -> m15_567  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_553 -> m15_554  [key=0, style=solid];
m15_553 -> m15_572  [key=2, style=dotted];
m15_554 -> m15_555  [key=0, style=solid];
m15_554 -> m15_30  [key=2, style=dotted];
m15_555 -> m15_556  [key=0, style=solid];
m15_555 -> m15_572  [key=2, style=dotted];
m15_556 -> m15_557  [key=0, style=solid];
m15_556 -> m15_30  [key=2, style=dotted];
m15_557 -> m15_558  [key=0, style=solid];
m15_557 -> m15_70  [key=2, style=dotted];
m15_557 -> m15_35  [key=2, style=dotted];
m15_557 -> m15_36  [key=2, style=dotted];
m15_558 -> m15_559  [key=0, style=solid];
m15_558 -> m15_81  [key=2, style=dotted];
m15_558 -> m15_30  [key=2, style=dotted];
m15_559 -> m15_560  [key=0, style=solid];
m15_559 -> m15_562  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_559 -> m15_563  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_559 -> m15_564  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_561 -> m15_562  [key=0, style=solid];
m15_561 -> m15_30  [key=2, style=dotted];
m15_565 -> m15_566  [key=0, style=solid];
m15_565 -> m15_568  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_565 -> m15_569  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_565 -> m15_570  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_567 -> m15_568  [key=0, style=solid];
m15_567 -> m15_81  [key=2, style=dotted];
m15_567 -> m15_30  [key=2, style=dotted];
m15_560 -> m15_561  [key=0, style=solid];
m15_560 -> m15_572  [key=2, style=dotted];
m15_562 -> m15_563  [key=0, style=solid];
m15_562 -> m15_93  [key=2, style=dotted];
m15_563 -> m15_564  [key=0, style=solid];
m15_563 -> m15_93  [key=2, style=dotted];
m15_564 -> m15_565  [key=0, style=solid];
m15_564 -> m15_93  [key=2, style=dotted];
m15_566 -> m15_567  [key=0, style=solid];
m15_566 -> m15_572  [key=2, style=dotted];
m15_568 -> m15_569  [key=0, style=solid];
m15_568 -> m15_93  [key=2, style=dotted];
m15_569 -> m15_570  [key=0, style=solid];
m15_569 -> m15_93  [key=2, style=dotted];
m15_570 -> m15_571  [key=0, style=solid];
m15_570 -> m15_93  [key=2, style=dotted];
m15_571 -> m15_550  [key=0, style=bold, color=blue];
m15_583 -> m15_584  [key=0, style=solid];
m15_584 -> m15_585  [key=0, style=solid];
m15_584 -> m15_70  [key=2, style=dotted];
m15_584 -> m15_110  [key=2, style=dotted];
m15_585 -> m15_586  [key=0, style=solid];
m15_586 -> m15_587  [key=0, style=solid];
m15_586 -> m15_117  [key=2, style=dotted];
m15_586 -> m15_582  [key=2, style=dotted];
m15_586 -> m15_588  [key=1, style=dashed, color=darkseagreen4, label=beforeTokens];
m15_586 -> m15_589  [key=1, style=dashed, color=darkseagreen4, label=beforeTokens];
m15_587 -> m15_588  [key=0, style=solid];
m15_587 -> m15_30  [key=2, style=dotted];
m15_588 -> m15_589  [key=0, style=solid];
m15_588 -> m15_32  [key=2, style=dotted];
m15_588 -> m15_35  [key=2, style=dotted];
m15_588 -> m15_36  [key=2, style=dotted];
m15_589 -> m15_590  [key=0, style=solid];
m15_589 -> m15_110  [key=2, style=dotted];
m15_589 -> m15_35  [key=2, style=dotted];
m15_589 -> m15_36  [key=2, style=dotted];
m15_590 -> m15_583  [key=0, style=bold, color=blue];
m15_573 -> m15_574  [key=0, style=solid];
m15_574 -> m15_575  [key=0, style=solid];
m15_574 -> m15_70  [key=2, style=dotted];
m15_574 -> m15_110  [key=2, style=dotted];
m15_575 -> m15_576  [key=0, style=solid];
m15_576 -> m15_577  [key=0, style=solid];
m15_576 -> m15_581  [key=2, style=dotted];
m15_576 -> m15_582  [key=2, style=dotted];
m15_576 -> m15_578  [key=1, style=dashed, color=darkseagreen4, label=afterTokens];
m15_576 -> m15_579  [key=1, style=dashed, color=darkseagreen4, label=afterTokens];
m15_577 -> m15_578  [key=0, style=solid];
m15_577 -> m15_30  [key=2, style=dotted];
m15_578 -> m15_579  [key=0, style=solid];
m15_578 -> m15_70  [key=2, style=dotted];
m15_578 -> m15_35  [key=2, style=dotted];
m15_578 -> m15_36  [key=2, style=dotted];
m15_579 -> m15_580  [key=0, style=solid];
m15_579 -> m15_70  [key=2, style=dotted];
m15_579 -> m15_35  [key=2, style=dotted];
m15_579 -> m15_36  [key=2, style=dotted];
m15_580 -> m15_573  [key=0, style=bold, color=blue];
m15_595 -> m15_596  [key=0, style=solid];
m15_596 -> m15_597  [key=0, style=solid];
m15_596 -> m15_70  [key=2, style=dotted];
m15_596 -> m15_110  [key=2, style=dotted];
m15_596 -> m15_600  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_596 -> m15_601  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_597 -> m15_598  [key=0, style=solid];
m15_600 -> m15_601  [key=0, style=solid];
m15_600 -> m15_30  [key=2, style=dotted];
m15_601 -> m15_602  [key=0, style=solid];
m15_601 -> m15_30  [key=2, style=dotted];
m15_598 -> m15_599  [key=0, style=solid];
m15_598 -> m15_603  [key=2, style=dotted];
m15_598 -> m15_582  [key=2, style=dotted];
m15_598 -> m15_600  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m15_598 -> m15_601  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m15_599 -> m15_600  [key=0, style=solid];
m15_599 -> m15_81  [key=2, style=dotted];
m15_599 -> m15_30  [key=2, style=dotted];
m15_602 -> m15_595  [key=0, style=bold, color=blue];
m15_45 -> m15_46  [key=0, style=solid];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_49  [key=2, style=dotted];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_30  [key=2, style=dotted];
m15_48 -> m15_45  [key=0, style=bold, color=blue];
m15_118 -> m15_119  [key=0, style=solid];
m15_119 -> m15_120  [key=0, style=solid];
m15_119 -> m15_32  [key=2, style=dotted];
m15_119 -> m15_30  [key=2, style=dotted];
m15_120 -> m15_121  [key=0, style=solid];
m15_120 -> m15_70  [key=2, style=dotted];
m15_120 -> m15_30  [key=2, style=dotted];
m15_121 -> m15_122  [key=0, style=solid];
m15_121 -> m15_73  [key=2, style=dotted];
m15_121 -> m15_72  [key=2, style=dotted];
m15_121 -> m15_30  [key=2, style=dotted];
m15_122 -> m15_123  [key=0, style=solid];
m15_122 -> m15_247  [key=2, style=dotted];
m15_122 -> m15_72  [key=2, style=dotted];
m15_122 -> m15_248  [key=2, style=dotted];
m15_122 -> m15_30  [key=2, style=dotted];
m15_123 -> m15_124  [key=0, style=solid];
m15_123 -> m15_247  [key=2, style=dotted];
m15_123 -> m15_249  [key=2, style=dotted];
m15_123 -> m15_30  [key=2, style=dotted];
m15_124 -> m15_125  [key=0, style=solid];
m15_124 -> m15_250  [key=2, style=dotted];
m15_124 -> m15_30  [key=2, style=dotted];
m15_125 -> m15_126  [key=0, style=solid];
m15_125 -> m15_30  [key=2, style=dotted];
m15_126 -> m15_127  [key=0, style=solid];
m15_126 -> m15_251  [key=2, style=dotted];
m15_126 -> m15_30  [key=2, style=dotted];
m15_127 -> m15_128  [key=0, style=solid];
m15_127 -> m15_251  [key=2, style=dotted];
m15_127 -> m15_30  [key=2, style=dotted];
m15_128 -> m15_129  [key=0, style=solid, color=green];
m15_128 -> m15_30  [key=2, style=dotted];
m15_129 -> m15_130  [key=0, style=solid, color=green];
m15_129 -> m15_250  [key=2, style=dotted, color=green];
m15_129 -> m15_30  [key=2, style=dotted, color=green];
m15_130 -> m15_131  [key=0, style=solid];
m15_130 -> m15_32  [key=2, style=dotted];
m15_130 -> m15_30  [key=2, style=dotted];
m15_131 -> m15_132  [key=0, style=solid];
m15_131 -> m15_250  [key=2, style=dotted];
m15_131 -> m15_30  [key=2, style=dotted];
m15_132 -> m15_133  [key=0, style=solid];
m15_132 -> m15_30  [key=2, style=dotted];
m15_133 -> m15_134  [key=0, style=solid];
m15_133 -> m15_250  [key=2, style=dotted];
m15_133 -> m15_30  [key=2, style=dotted];
m15_134 -> m15_135  [key=0, style=solid];
m15_134 -> m15_30  [key=2, style=dotted];
m15_135 -> m15_136  [key=0, style=solid];
m15_135 -> m15_250  [key=2, style=dotted];
m15_135 -> m15_30  [key=2, style=dotted];
m15_136 -> m15_137  [key=0, style=solid];
m15_136 -> m15_30  [key=2, style=dotted];
m15_137 -> m15_138  [key=0, style=solid];
m15_137 -> m15_250  [key=2, style=dotted];
m15_137 -> m15_30  [key=2, style=dotted];
m15_138 -> m15_139  [key=0, style=solid];
m15_138 -> m15_30  [key=2, style=dotted];
m15_139 -> m15_140  [key=0, style=solid];
m15_139 -> m15_250  [key=2, style=dotted];
m15_139 -> m15_30  [key=2, style=dotted];
m15_140 -> m15_141  [key=0, style=solid];
m15_140 -> m15_30  [key=2, style=dotted];
m15_141 -> m15_142  [key=0, style=solid];
m15_141 -> m15_250  [key=2, style=dotted];
m15_141 -> m15_30  [key=2, style=dotted];
m15_142 -> m15_143  [key=0, style=solid];
m15_142 -> m15_30  [key=2, style=dotted];
m15_143 -> m15_144  [key=0, style=solid];
m15_143 -> m15_250  [key=2, style=dotted];
m15_143 -> m15_30  [key=2, style=dotted];
m15_144 -> m15_145  [key=0, style=solid];
m15_144 -> m15_30  [key=2, style=dotted];
m15_145 -> m15_146  [key=0, style=solid];
m15_145 -> m15_250  [key=2, style=dotted];
m15_145 -> m15_30  [key=2, style=dotted];
m15_146 -> m15_147  [key=0, style=solid];
m15_146 -> m15_30  [key=2, style=dotted];
m15_147 -> m15_148  [key=0, style=solid];
m15_147 -> m15_250  [key=2, style=dotted];
m15_147 -> m15_30  [key=2, style=dotted];
m15_148 -> m15_149  [key=0, style=solid];
m15_148 -> m15_30  [key=2, style=dotted];
m15_149 -> m15_150  [key=0, style=solid];
m15_149 -> m15_250  [key=2, style=dotted];
m15_149 -> m15_30  [key=2, style=dotted];
m15_150 -> m15_151  [key=0, style=solid];
m15_150 -> m15_30  [key=2, style=dotted];
m15_151 -> m15_152  [key=0, style=solid];
m15_151 -> m15_250  [key=2, style=dotted];
m15_151 -> m15_30  [key=2, style=dotted];
m15_152 -> m15_153  [key=0, style=solid];
m15_152 -> m15_30  [key=2, style=dotted];
m15_153 -> m15_154  [key=0, style=solid];
m15_153 -> m15_250  [key=2, style=dotted];
m15_153 -> m15_30  [key=2, style=dotted];
m15_154 -> m15_155  [key=0, style=solid];
m15_154 -> m15_30  [key=2, style=dotted];
m15_155 -> m15_156  [key=0, style=solid];
m15_155 -> m15_252  [key=2, style=dotted];
m15_155 -> m15_30  [key=2, style=dotted];
m15_156 -> m15_157  [key=0, style=solid];
m15_156 -> m15_253  [key=2, style=dotted];
m15_156 -> m15_30  [key=2, style=dotted];
m15_157 -> m15_158  [key=0, style=solid];
m15_157 -> m15_252  [key=2, style=dotted];
m15_157 -> m15_30  [key=2, style=dotted];
m15_158 -> m15_159  [key=0, style=solid];
m15_158 -> m15_32  [key=2, style=dotted];
m15_158 -> m15_30  [key=2, style=dotted];
m15_159 -> m15_160  [key=0, style=solid];
m15_159 -> m15_254  [key=2, style=dotted];
m15_159 -> m15_30  [key=2, style=dotted];
m15_160 -> m15_161  [key=0, style=solid];
m15_160 -> m15_75  [key=2, style=dotted];
m15_160 -> m15_254  [key=2, style=dotted];
m15_160 -> m15_30  [key=2, style=dotted];
m15_161 -> m15_162  [key=0, style=solid];
m15_161 -> m15_255  [key=2, style=dotted];
m15_161 -> m15_30  [key=2, style=dotted];
m15_162 -> m15_163  [key=0, style=solid];
m15_162 -> m15_32  [key=2, style=dotted];
m15_162 -> m15_30  [key=2, style=dotted];
m15_163 -> m15_164  [key=0, style=solid];
m15_163 -> m15_32  [key=2, style=dotted];
m15_163 -> m15_30  [key=2, style=dotted];
m15_164 -> m15_165  [key=0, style=solid];
m15_164 -> m15_32  [key=2, style=dotted];
m15_164 -> m15_30  [key=2, style=dotted];
m15_165 -> m15_166  [key=0, style=solid];
m15_165 -> m15_256  [key=2, style=dotted];
m15_165 -> m15_30  [key=2, style=dotted];
m15_166 -> m15_167  [key=0, style=solid];
m15_166 -> m15_256  [key=2, style=dotted];
m15_166 -> m15_30  [key=2, style=dotted];
m15_167 -> m15_168  [key=0, style=solid, color=green];
m15_167 -> m15_32  [key=2, style=dotted];
m15_167 -> m15_30  [key=2, style=dotted];
m15_168 -> m15_169  [key=0, style=solid, color=green];
m15_168 -> m15_250  [key=2, style=dotted, color=green];
m15_168 -> m15_30  [key=2, style=dotted, color=green];
m15_169 -> m15_170  [key=0, style=solid];
m15_169 -> m15_32  [key=2, style=dotted];
m15_169 -> m15_30  [key=2, style=dotted];
m15_170 -> m15_171  [key=0, style=solid];
m15_170 -> m15_252  [key=2, style=dotted];
m15_170 -> m15_30  [key=2, style=dotted];
m15_171 -> m15_172  [key=0, style=solid];
m15_171 -> m15_256  [key=2, style=dotted];
m15_171 -> m15_30  [key=2, style=dotted];
m15_172 -> m15_173  [key=0, style=solid, color=green];
m15_172 -> m15_251  [key=2, style=dotted];
m15_172 -> m15_30  [key=2, style=dotted];
m15_173 -> m15_174  [key=0, style=solid, color=green];
m15_173 -> m15_250  [key=2, style=dotted, color=green];
m15_173 -> m15_30  [key=2, style=dotted, color=green];
m15_174 -> m15_175  [key=0, style=solid];
m15_174 -> m15_30  [key=2, style=dotted];
m15_175 -> m15_176  [key=0, style=solid];
m15_175 -> m15_72  [key=2, style=dotted];
m15_175 -> m15_248  [key=2, style=dotted];
m15_175 -> m15_30  [key=2, style=dotted];
m15_176 -> m15_177  [key=0, style=solid];
m15_176 -> m15_249  [key=2, style=dotted];
m15_176 -> m15_247  [key=2, style=dotted];
m15_176 -> m15_30  [key=2, style=dotted];
m15_177 -> m15_178  [key=0, style=solid];
m15_177 -> m15_32  [key=2, style=dotted];
m15_177 -> m15_30  [key=2, style=dotted];
m15_178 -> m15_179  [key=0, style=solid];
m15_178 -> m15_252  [key=2, style=dotted];
m15_178 -> m15_30  [key=2, style=dotted];
m15_179 -> m15_180  [key=0, style=solid];
m15_179 -> m15_255  [key=2, style=dotted];
m15_179 -> m15_30  [key=2, style=dotted];
m15_180 -> m15_181  [key=0, style=solid];
m15_180 -> m15_251  [key=2, style=dotted];
m15_180 -> m15_30  [key=2, style=dotted];
m15_181 -> m15_182  [key=0, style=solid];
m15_181 -> m15_32  [key=2, style=dotted];
m15_181 -> m15_30  [key=2, style=dotted];
m15_182 -> m15_183  [key=0, style=solid];
m15_182 -> m15_252  [key=2, style=dotted];
m15_182 -> m15_30  [key=2, style=dotted];
m15_183 -> m15_184  [key=0, style=solid];
m15_183 -> m15_255  [key=2, style=dotted];
m15_183 -> m15_30  [key=2, style=dotted];
m15_184 -> m15_185  [key=0, style=solid];
m15_184 -> m15_251  [key=2, style=dotted];
m15_184 -> m15_30  [key=2, style=dotted];
m15_185 -> m15_186  [key=0, style=solid];
m15_185 -> m15_32  [key=2, style=dotted];
m15_185 -> m15_30  [key=2, style=dotted];
m15_186 -> m15_187  [key=0, style=solid];
m15_186 -> m15_252  [key=2, style=dotted];
m15_186 -> m15_30  [key=2, style=dotted];
m15_187 -> m15_188  [key=0, style=solid];
m15_187 -> m15_255  [key=2, style=dotted];
m15_187 -> m15_30  [key=2, style=dotted];
m15_188 -> m15_189  [key=0, style=solid];
m15_188 -> m15_251  [key=2, style=dotted];
m15_188 -> m15_30  [key=2, style=dotted];
m15_189 -> m15_190  [key=0, style=solid];
m15_189 -> m15_257  [key=2, style=dotted];
m15_189 -> m15_258  [key=2, style=dotted];
m15_189 -> m15_30  [key=2, style=dotted];
m15_190 -> m15_191  [key=0, style=solid];
m15_190 -> m15_258  [key=2, style=dotted];
m15_190 -> m15_257  [key=2, style=dotted];
m15_190 -> m15_30  [key=2, style=dotted];
m15_191 -> m15_192  [key=0, style=solid];
m15_191 -> m15_257  [key=2, style=dotted];
m15_191 -> m15_255  [key=2, style=dotted];
m15_191 -> m15_30  [key=2, style=dotted];
m15_192 -> m15_193  [key=0, style=solid];
m15_192 -> m15_259  [key=2, style=dotted];
m15_192 -> m15_260  [key=2, style=dotted];
m15_192 -> m15_30  [key=2, style=dotted];
m15_193 -> m15_194  [key=0, style=solid];
m15_193 -> m15_261  [key=2, style=dotted];
m15_193 -> m15_262  [key=2, style=dotted];
m15_193 -> m15_30  [key=2, style=dotted];
m15_194 -> m15_195  [key=0, style=solid];
m15_194 -> m15_260  [key=2, style=dotted];
m15_194 -> m15_255  [key=2, style=dotted];
m15_194 -> m15_30  [key=2, style=dotted];
m15_195 -> m15_196  [key=0, style=solid];
m15_195 -> m15_260  [key=2, style=dotted];
m15_195 -> m15_259  [key=2, style=dotted];
m15_195 -> m15_30  [key=2, style=dotted];
m15_196 -> m15_197  [key=0, style=solid];
m15_196 -> m15_262  [key=2, style=dotted];
m15_196 -> m15_255  [key=2, style=dotted];
m15_196 -> m15_30  [key=2, style=dotted];
m15_197 -> m15_198  [key=0, style=solid, color=green];
m15_197 -> m15_262  [key=2, style=dotted];
m15_197 -> m15_261  [key=2, style=dotted];
m15_197 -> m15_30  [key=2, style=dotted];
m15_198 -> m15_199  [key=0, style=solid, color=green];
m15_198 -> m15_250  [key=2, style=dotted, color=green];
m15_198 -> m15_30  [key=2, style=dotted, color=green];
m15_199 -> m15_200  [key=0, style=solid];
m15_199 -> m15_263  [key=2, style=dotted];
m15_199 -> m15_264  [key=2, style=dotted];
m15_199 -> m15_250  [key=2, style=dotted];
m15_199 -> m15_30  [key=2, style=dotted];
m15_200 -> m15_201  [key=0, style=solid];
m15_200 -> m15_263  [key=2, style=dotted];
m15_200 -> m15_255  [key=2, style=dotted];
m15_200 -> m15_264  [key=2, style=dotted];
m15_200 -> m15_265  [key=2, style=dotted];
m15_201 -> m15_202  [key=0, style=solid];
m15_201 -> m15_260  [key=2, style=dotted];
m15_201 -> m15_250  [key=2, style=dotted];
m15_201 -> m15_266  [key=2, style=dotted];
m15_201 -> m15_30  [key=2, style=dotted];
m15_202 -> m15_203  [key=0, style=solid];
m15_202 -> m15_260  [key=2, style=dotted];
m15_202 -> m15_250  [key=2, style=dotted];
m15_202 -> m15_266  [key=2, style=dotted];
m15_202 -> m15_30  [key=2, style=dotted];
m15_203 -> m15_204  [key=0, style=solid];
m15_203 -> m15_250  [key=2, style=dotted];
m15_203 -> m15_30  [key=2, style=dotted];
m15_204 -> m15_205  [key=0, style=solid];
m15_204 -> m15_30  [key=2, style=dotted];
m15_205 -> m15_206  [key=0, style=solid];
m15_205 -> m15_30  [key=2, style=dotted];
m15_206 -> m15_207  [key=0, style=solid];
m15_206 -> m15_30  [key=2, style=dotted];
m15_207 -> m15_208  [key=0, style=solid];
m15_207 -> m15_30  [key=2, style=dotted];
m15_208 -> m15_209  [key=0, style=solid];
m15_208 -> m15_30  [key=2, style=dotted];
m15_209 -> m15_210  [key=0, style=solid];
m15_209 -> m15_30  [key=2, style=dotted];
m15_210 -> m15_211  [key=0, style=solid];
m15_210 -> m15_30  [key=2, style=dotted];
m15_211 -> m15_212  [key=0, style=solid];
m15_211 -> m15_30  [key=2, style=dotted];
m15_212 -> m15_213  [key=0, style=solid];
m15_212 -> m15_30  [key=2, style=dotted];
m15_213 -> m15_214  [key=0, style=solid];
m15_213 -> m15_30  [key=2, style=dotted];
m15_214 -> m15_215  [key=0, style=solid];
m15_214 -> m15_30  [key=2, style=dotted];
m15_215 -> m15_216  [key=0, style=solid];
m15_215 -> m15_30  [key=2, style=dotted];
m15_216 -> m15_217  [key=0, style=solid];
m15_216 -> m15_30  [key=2, style=dotted];
m15_217 -> m15_218  [key=0, style=solid];
m15_217 -> m15_30  [key=2, style=dotted];
m15_218 -> m15_219  [key=0, style=solid];
m15_218 -> m15_30  [key=2, style=dotted];
m15_219 -> m15_220  [key=0, style=solid];
m15_219 -> m15_30  [key=2, style=dotted];
m15_220 -> m15_221  [key=0, style=solid];
m15_220 -> m15_30  [key=2, style=dotted];
m15_221 -> m15_222  [key=0, style=solid];
m15_221 -> m15_30  [key=2, style=dotted];
m15_222 -> m15_223  [key=0, style=solid];
m15_222 -> m15_30  [key=2, style=dotted];
m15_223 -> m15_224  [key=0, style=solid];
m15_223 -> m15_30  [key=2, style=dotted];
m15_224 -> m15_225  [key=0, style=solid];
m15_225 -> m15_226  [key=0, style=solid];
m15_225 -> m15_250  [key=2, style=dotted];
m15_225 -> m15_30  [key=2, style=dotted];
m15_226 -> m15_227  [key=0, style=solid];
m15_226 -> m15_250  [key=2, style=dotted];
m15_226 -> m15_30  [key=2, style=dotted];
m15_227 -> m15_228  [key=0, style=solid];
m15_227 -> m15_229  [key=1, style=dashed, color=darkseagreen4, label=bigIntegerText];
m15_227 -> m15_237  [key=1, style=dashed, color=darkseagreen4, label=bigIntegerText];
m15_227 -> m15_238  [key=1, style=dashed, color=darkseagreen4, label=bigIntegerText];
m15_227 -> m15_227  [key=3, color=darkorchid, style=bold, label="Local variable string bigIntegerText"];
m15_228 -> m15_229  [key=0, style=solid];
m15_228 -> m15_267  [key=2, style=dotted];
m15_228 -> m15_268  [key=2, style=dotted];
m15_228 -> m15_30  [key=2, style=dotted];
m15_229 -> m15_230  [key=0, style=solid];
m15_229 -> m15_267  [key=2, style=dotted];
m15_229 -> m15_255  [key=2, style=dotted];
m15_229 -> m15_269  [key=2, style=dotted];
m15_229 -> m15_30  [key=2, style=dotted];
m15_237 -> m15_238  [key=0, style=solid];
m15_237 -> m15_267  [key=2, style=dotted];
m15_237 -> m15_271  [key=2, style=dotted];
m15_238 -> m15_239  [key=0, style=solid];
m15_238 -> m15_267  [key=2, style=dotted];
m15_238 -> m15_250  [key=2, style=dotted];
m15_238 -> m15_269  [key=2, style=dotted];
m15_238 -> m15_30  [key=2, style=dotted];
m15_230 -> m15_231  [key=0, style=solid];
m15_230 -> m15_270  [key=2, style=dotted];
m15_230 -> m15_32  [key=2, style=dotted];
m15_230 -> m15_269  [key=2, style=dotted];
m15_230 -> m15_30  [key=2, style=dotted];
m15_231 -> m15_232  [key=0, style=solid];
m15_231 -> m15_270  [key=2, style=dotted];
m15_231 -> m15_252  [key=2, style=dotted];
m15_231 -> m15_269  [key=2, style=dotted];
m15_231 -> m15_30  [key=2, style=dotted];
m15_232 -> m15_233  [key=0, style=solid];
m15_232 -> m15_270  [key=2, style=dotted];
m15_232 -> m15_253  [key=2, style=dotted];
m15_232 -> m15_269  [key=2, style=dotted];
m15_232 -> m15_30  [key=2, style=dotted];
m15_233 -> m15_234  [key=0, style=solid];
m15_233 -> m15_270  [key=2, style=dotted];
m15_233 -> m15_32  [key=2, style=dotted];
m15_233 -> m15_269  [key=2, style=dotted];
m15_233 -> m15_30  [key=2, style=dotted];
m15_234 -> m15_235  [key=0, style=solid];
m15_234 -> m15_270  [key=2, style=dotted];
m15_234 -> m15_32  [key=2, style=dotted];
m15_234 -> m15_269  [key=2, style=dotted];
m15_234 -> m15_30  [key=2, style=dotted];
m15_235 -> m15_236  [key=0, style=solid, color=green];
m15_235 -> m15_270  [key=2, style=dotted];
m15_235 -> m15_32  [key=2, style=dotted];
m15_235 -> m15_269  [key=2, style=dotted];
m15_235 -> m15_30  [key=2, style=dotted];
m15_236 -> m15_237  [key=0, style=solid, color=green];
m15_236 -> m15_250  [key=2, style=dotted, color=green];
m15_236 -> m15_269  [key=2, style=dotted, color=green];
m15_236 -> m15_30  [key=2, style=dotted, color=green];
m15_239 -> m15_240  [key=0, style=solid];
m15_239 -> m15_268  [key=2, style=dotted];
m15_239 -> m15_270  [key=2, style=dotted];
m15_239 -> m15_30  [key=2, style=dotted];
m15_240 -> m15_241  [key=0, style=solid];
m15_240 -> m15_268  [key=2, style=dotted];
m15_240 -> m15_270  [key=2, style=dotted];
m15_240 -> m15_30  [key=2, style=dotted];
m15_241 -> m15_242  [key=0, style=solid];
m15_241 -> m15_268  [key=2, style=dotted];
m15_241 -> m15_270  [key=2, style=dotted];
m15_241 -> m15_30  [key=2, style=dotted];
m15_242 -> m15_243  [key=0, style=solid];
m15_242 -> m15_268  [key=2, style=dotted];
m15_242 -> m15_270  [key=2, style=dotted];
m15_242 -> m15_30  [key=2, style=dotted];
m15_243 -> m15_244  [key=0, style=solid];
m15_243 -> m15_268  [key=2, style=dotted];
m15_243 -> m15_270  [key=2, style=dotted];
m15_243 -> m15_30  [key=2, style=dotted];
m15_244 -> m15_245  [key=0, style=solid];
m15_244 -> m15_268  [key=2, style=dotted];
m15_244 -> m15_270  [key=2, style=dotted];
m15_245 -> m15_246  [key=0, style=solid];
m15_245 -> m15_30  [key=2, style=dotted];
m15_246 -> m15_118  [key=0, style=bold, color=blue];
m15_40 -> m15_41  [key=0, style=solid];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_27  [key=2, style=dotted];
m15_41 -> m15_28  [key=2, style=dotted];
m15_41 -> m15_44  [key=2, style=dotted];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_30  [key=2, style=dotted];
m15_43 -> m15_40  [key=0, style=bold, color=blue];
m15_672 -> m15_673  [key=0, style=solid];
m15_673 -> m15_674  [key=0, style=solid];
m15_673 -> m15_316  [key=2, style=dotted];
m15_673 -> m15_675  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_674 -> m15_672  [key=0, style=bold, color=blue];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_132  [key=1, style=dashed, color=darkseagreen4, label=bool];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_134  [key=2, style=dotted];
m16_132 -> m16_133  [key=0, style=solid];
m16_132 -> m16_53  [key=2, style=dotted];
m16_133 -> m16_130  [key=0, style=bold, color=blue];
m16_8 -> m16_9  [key=0, style=solid];
m16_9 -> m16_8  [key=0, style=bold, color=blue];
m16_95 -> m16_96  [key=0, style=solid];
m16_95 -> m16_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_99  [key=2, style=dotted];
m16_97 -> m16_98  [key=0, style=solid];
m16_97 -> m16_53  [key=2, style=dotted];
m16_98 -> m16_95  [key=0, style=bold, color=blue];
m16_125 -> m16_126  [key=0, style=solid];
m16_125 -> m16_127  [key=1, style=dashed, color=darkseagreen4, label=double];
m16_126 -> m16_127  [key=0, style=solid];
m16_126 -> m16_129  [key=2, style=dotted];
m16_127 -> m16_128  [key=0, style=solid];
m16_127 -> m16_53  [key=2, style=dotted];
m16_128 -> m16_125  [key=0, style=bold, color=blue];
m16_145 -> m16_146  [key=0, style=solid];
m16_145 -> m16_148  [key=1, style=dashed, color=darkseagreen4, label=char];
m16_146 -> m16_147  [key=0, style=solid];
m16_146 -> m16_151  [key=2, style=dotted];
m16_148 -> m16_149  [key=0, style=solid];
m16_148 -> m16_152  [key=2, style=dotted];
m16_147 -> m16_148  [key=0, style=solid];
m16_147 -> m16_75  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_53  [key=2, style=dotted];
m16_150 -> m16_145  [key=0, style=bold, color=blue];
m16_27 -> m16_28  [key=0, style=solid];
m16_28 -> m16_29  [key=0, style=solid];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_31  [key=0, style=solid];
m16_30 -> m16_31  [key=0, style=solid];
m16_31 -> m16_27  [key=0, style=bold, color=blue];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label=short];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_139  [key=2, style=dotted];
m16_137 -> m16_138  [key=0, style=solid];
m16_137 -> m16_53  [key=2, style=dotted];
m16_138 -> m16_135  [key=0, style=bold, color=blue];
m16_120 -> m16_121  [key=0, style=solid];
m16_120 -> m16_122  [key=1, style=dashed, color=darkseagreen4, label=float];
m16_121 -> m16_122  [key=0, style=solid];
m16_121 -> m16_124  [key=2, style=dotted];
m16_122 -> m16_123  [key=0, style=solid];
m16_122 -> m16_53  [key=2, style=dotted];
m16_123 -> m16_120  [key=0, style=bold, color=blue];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_87  [key=2, style=dotted];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_88  [key=2, style=dotted];
m16_85 -> m16_57  [key=2, style=dotted];
m16_86 -> m16_83  [key=0, style=bold, color=blue];
m16_185 -> m16_186  [key=0, style=solid];
m16_185 -> m16_187  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m16_186 -> m16_187  [key=0, style=solid];
m16_186 -> m16_189  [key=2, style=dotted];
m16_187 -> m16_188  [key=0, style=solid];
m16_187 -> m16_53  [key=2, style=dotted];
m16_188 -> m16_185  [key=0, style=bold, color=blue];
m16_195 -> m16_196  [key=0, style=solid];
m16_195 -> m16_197  [key=1, style=dashed, color=darkseagreen4, label="System.Uri"];
m16_196 -> m16_197  [key=0, style=solid];
m16_196 -> m16_199  [key=2, style=dotted];
m16_197 -> m16_198  [key=0, style=solid];
m16_197 -> m16_53  [key=2, style=dotted];
m16_198 -> m16_195  [key=0, style=bold, color=blue];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_102  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_101 -> m16_102  [key=0, style=solid];
m16_101 -> m16_104  [key=2, style=dotted];
m16_102 -> m16_103  [key=0, style=solid];
m16_102 -> m16_53  [key=2, style=dotted];
m16_103 -> m16_100  [key=0, style=bold, color=blue];
m16_14 -> m16_15  [key=0, style=solid];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_18  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_19  [key=2, style=dotted];
m16_16 -> m16_20  [key=2, style=dotted];
m16_17 -> m16_14  [key=0, style=bold, color=blue];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_68  [key=1, style=dashed, color=darkseagreen4, label=object];
m16_65 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=object];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_69  [key=0, style=solid];
m16_68 -> m16_70  [key=0, style=solid];
m16_68 -> m16_53  [key=2, style=dotted];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_72  [key=2, style=dotted];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_71  [key=2, style=dotted];
m16_70 -> m16_65  [key=0, style=bold, color=blue];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_51  [key=2, style=dotted];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_52  [key=2, style=dotted];
m16_49 -> m16_20  [key=2, style=dotted];
m16_50 -> m16_47  [key=0, style=bold, color=blue];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_93  [key=2, style=dotted];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_94  [key=2, style=dotted];
m16_91 -> m16_57  [key=2, style=dotted];
m16_92 -> m16_89  [key=0, style=bold, color=blue];
m16_10 -> m16_11  [key=0, style=solid];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_13  [key=2, style=dotted];
m16_12 -> m16_10  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m16_0 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_5  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_0  [key=0, style=bold, color=blue];
m16_44 -> m16_45  [key=0, style=solid];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_27  [key=2, style=dotted];
m16_46 -> m16_44  [key=0, style=bold, color=blue];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_112  [key=1, style=dashed, color=darkseagreen4, label=long];
m16_111 -> m16_112  [key=0, style=solid];
m16_111 -> m16_114  [key=2, style=dotted];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_53  [key=2, style=dotted];
m16_113 -> m16_110  [key=0, style=bold, color=blue];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_160  [key=1, style=dashed, color=darkseagreen4, label=sbyte];
m16_159 -> m16_160  [key=0, style=solid];
m16_159 -> m16_162  [key=2, style=dotted];
m16_160 -> m16_161  [key=0, style=solid];
m16_160 -> m16_53  [key=2, style=dotted];
m16_161 -> m16_158  [key=0, style=bold, color=blue];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_107  [key=1, style=dashed, color=darkseagreen4, label=uint];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_109  [key=2, style=dotted];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_53  [key=2, style=dotted];
m16_108 -> m16_105  [key=0, style=bold, color=blue];
m16_115 -> m16_116  [key=0, style=solid];
m16_115 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_119  [key=2, style=dotted];
m16_117 -> m16_118  [key=0, style=solid];
m16_117 -> m16_53  [key=2, style=dotted];
m16_118 -> m16_115  [key=0, style=bold, color=blue];
m16_153 -> m16_154  [key=0, style=solid];
m16_153 -> m16_155  [key=1, style=dashed, color=darkseagreen4, label=byte];
m16_154 -> m16_155  [key=0, style=solid];
m16_154 -> m16_157  [key=2, style=dotted];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_53  [key=2, style=dotted];
m16_156 -> m16_153  [key=0, style=bold, color=blue];
m16_78 -> m16_79  [key=0, style=solid];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_82  [key=2, style=dotted];
m16_80 -> m16_81  [key=0, style=solid];
m16_80 -> m16_57  [key=2, style=dotted];
m16_81 -> m16_78  [key=0, style=bold, color=blue];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_42  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_43  [key=2, style=dotted];
m16_40 -> m16_20  [key=2, style=dotted];
m16_41 -> m16_38  [key=0, style=bold, color=blue];
m16_73 -> m16_74  [key=0, style=solid];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_77  [key=2, style=dotted];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_57  [key=2, style=dotted];
m16_76 -> m16_73  [key=0, style=bold, color=blue];
m16_168 -> m16_169  [key=0, style=solid];
m16_168 -> m16_170  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m16_169 -> m16_170  [key=0, style=solid];
m16_169 -> m16_173  [key=2, style=dotted];
m16_170 -> m16_171  [key=0, style=solid];
m16_170 -> m16_174  [key=2, style=dotted];
m16_170 -> m16_170  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m16_171 -> m16_172  [key=0, style=solid];
m16_171 -> m16_53  [key=2, style=dotted];
m16_172 -> m16_168  [key=0, style=bold, color=blue];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m16_57 -> m16_62  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Linq.JValue"];
m16_57 -> m16_75  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_57 -> m16_53  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_57 -> m16_80  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_57 -> m16_85  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_57 -> m16_91  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_62  [key=0, style=solid, color=red];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_64  [key=2, style=dotted];
m16_62 -> m16_63  [key=0, style=solid, color=red];
m16_62 -> m16_56  [key=2, style=dotted, color=red];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_63  [key=0, style=solid];
m16_61 -> m16_63  [key=0, style=solid];
m16_63 -> m16_57  [key=0, style=bold, color=blue];
m16_163 -> m16_164  [key=0, style=solid];
m16_163 -> m16_165  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m16_164 -> m16_165  [key=0, style=solid];
m16_164 -> m16_167  [key=2, style=dotted];
m16_165 -> m16_166  [key=0, style=solid];
m16_165 -> m16_53  [key=2, style=dotted];
m16_166 -> m16_163  [key=0, style=bold, color=blue];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_6  [key=0, style=bold, color=blue];
m16_180 -> m16_181  [key=0, style=solid];
m16_180 -> m16_182  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m16_181 -> m16_182  [key=0, style=solid];
m16_181 -> m16_184  [key=2, style=dotted];
m16_182 -> m16_183  [key=0, style=solid];
m16_182 -> m16_53  [key=2, style=dotted];
m16_183 -> m16_180  [key=0, style=bold, color=blue];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> m16_192  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m16_191 -> m16_192  [key=0, style=solid];
m16_191 -> m16_194  [key=2, style=dotted];
m16_192 -> m16_193  [key=0, style=solid];
m16_192 -> m16_53  [key=2, style=dotted];
m16_193 -> m16_190  [key=0, style=bold, color=blue];
m16_175 -> m16_176  [key=0, style=solid];
m16_175 -> m16_177  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m16_176 -> m16_177  [key=0, style=solid];
m16_176 -> m16_179  [key=2, style=dotted];
m16_177 -> m16_178  [key=0, style=solid];
m16_177 -> m16_53  [key=2, style=dotted];
m16_178 -> m16_175  [key=0, style=bold, color=blue];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_65  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_95  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_100  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_105  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_110  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_115  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_120  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_125  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_130  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_135  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_140  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_147  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_153  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_158  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_163  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_168  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_51  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_180  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_185  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_190  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_195  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m16_53 -> m16_67  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_53 -> m16_97  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_53 -> m16_122  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_53 -> m16_132  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_53 -> m16_171  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_53 -> m16_182  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken token"];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_56  [key=2, style=dotted];
m16_54 -> m16_57  [key=2, style=dotted];
m16_55 -> m16_53  [key=0, style=bold, color=blue];
m16_140 -> m16_141  [key=0, style=solid];
m16_140 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label=ushort];
m16_141 -> m16_142  [key=0, style=solid];
m16_141 -> m16_144  [key=2, style=dotted];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_53  [key=2, style=dotted];
m16_143 -> m16_140  [key=0, style=bold, color=blue];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m16_20 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m16_20 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_23  [key=0, style=solid];
m16_22 -> m16_24  [key=0, style=solid];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_26  [key=2, style=dotted];
m16_24 -> m16_25  [key=0, style=solid];
m16_25 -> m16_20  [key=0, style=bold, color=blue];
m16_32 -> m16_33  [key=0, style=solid];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_36  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_37  [key=2, style=dotted];
m16_34 -> m16_20  [key=2, style=dotted];
m16_35 -> m16_32  [key=0, style=bold, color=blue];
m16_200 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_62  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m16_200 -> m16_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenWriter"];
m17_7 -> m17_6  [key=0, style=bold, color=blue];
m17_59 -> m17_57  [key=0, style=bold, color=blue];
m17_457 -> m17_458  [key=0, style=solid];
m17_457 -> m17_459  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.BinaryOperationBinder"];
m17_457 -> m17_461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_457 -> m17_464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_457 -> m17_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_457 -> m17_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_457 -> m17_473  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_457 -> m17_476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_457 -> m17_486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_457 -> m17_39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryBinaryOperation"];
m17_457 -> m17_37  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryBinaryOperation"];
m17_457 -> m17_466  [key=2, style=dotted];
m17_458 -> m17_459  [key=0, style=solid];
m17_458 -> m17_461  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_458 -> m17_464  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_458 -> m17_467  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_458 -> m17_470  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_458 -> m17_473  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_458 -> m17_476  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_458 -> m17_486  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m17_458 -> m17_309  [key=2, style=dotted];
m17_459 -> m17_460  [key=0, style=solid];
m17_459 -> m17_463  [key=0, style=solid];
m17_459 -> m17_466  [key=0, style=solid];
m17_459 -> m17_469  [key=0, style=solid];
m17_459 -> m17_472  [key=0, style=solid];
m17_459 -> m17_475  [key=0, style=solid];
m17_459 -> m17_478  [key=0, style=solid];
m17_459 -> m17_381  [key=2, style=dotted];
m17_461 -> m17_462  [key=0, style=solid];
m17_461 -> m17_64  [key=2, style=dotted];
m17_461 -> m17_463  [key=0, style=solid];
m17_461 -> m17_271  [key=2, style=dotted];
m17_464 -> m17_465  [key=0, style=solid];
m17_464 -> m17_64  [key=2, style=dotted];
m17_464 -> m17_471  [key=0, style=solid];
m17_464 -> m17_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_467 -> m17_468  [key=0, style=solid];
m17_467 -> m17_64  [key=2, style=dotted];
m17_470 -> m17_471  [key=0, style=solid];
m17_470 -> m17_64  [key=2, style=dotted];
m17_473 -> m17_474  [key=0, style=solid];
m17_473 -> m17_64  [key=2, style=dotted];
m17_473 -> m17_475  [key=0, style=solid];
m17_476 -> m17_477  [key=0, style=solid];
m17_476 -> m17_64  [key=2, style=dotted];
m17_476 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_476 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_476 -> m17_483  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_476 -> m17_488  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_476 -> m17_496  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_476 -> m17_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_476 -> m17_482  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_476 -> m17_489  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_476 -> m17_501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_476 -> m17_503  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_486 -> m17_487  [key=0, style=solid];
m17_486 -> m17_489  [key=0, style=solid];
m17_486 -> m17_169  [key=2, style=dotted];
m17_486 -> m17_132  [key=2, style=dotted];
m17_486 -> m17_495  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_486 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_486 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_486 -> m17_504  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_486 -> m17_507  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_460 -> m17_461  [key=0, style=solid];
m17_460 -> m17_466  [key=2, style=dotted];
m17_463 -> m17_464  [key=0, style=solid];
m17_463 -> m17_270  [key=0, style=bold, color=blue];
m17_466 -> m17_467  [key=0, style=solid];
m17_469 -> m17_470  [key=0, style=solid];
m17_472 -> m17_473  [key=0, style=solid];
m17_472 -> m17_471  [key=0, style=solid];
m17_475 -> m17_476  [key=0, style=solid];
m17_475 -> m17_464  [key=0, style=bold, color=blue];
m17_478 -> m17_479  [key=0, style=solid];
m17_478 -> m17_508  [key=0, style=solid];
m17_462 -> m17_491  [key=0, style=solid];
m17_462 -> m17_463  [key=0, style=solid];
m17_462 -> m17_339  [key=2, style=dotted];
m17_465 -> m17_491  [key=0, style=solid];
m17_465 -> m17_800  [key=0, style=solid];
m17_468 -> m17_491  [key=0, style=solid];
m17_471 -> m17_491  [key=0, style=solid];
m17_471 -> m17_472  [key=0, style=solid];
m17_471 -> m17_474  [key=0, style=solid];
m17_474 -> m17_491  [key=0, style=solid];
m17_474 -> m17_475  [key=0, style=solid];
m17_477 -> m17_491  [key=0, style=solid];
m17_477 -> m17_479  [key=0, style=solid];
m17_477 -> m17_478  [key=0, style=solid];
m17_479 -> m17_480  [key=0, style=solid];
m17_479 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label=manager];
m17_479 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label=manager];
m17_479 -> m17_266  [key=2, style=dotted];
m17_479 -> m17_267  [key=2, style=dotted];
m17_480 -> m17_481  [key=0, style=solid];
m17_480 -> m17_495  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_480 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_480 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_480 -> m17_504  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_480 -> m17_507  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_481 -> m17_482  [key=0, style=solid];
m17_481 -> m17_495  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m17_481 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m17_481 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m17_482 -> m17_483  [key=0, style=solid];
m17_482 -> m17_488  [key=0, style=solid];
m17_482 -> m17_509  [key=2, style=dotted];
m17_483 -> m17_484  [key=0, style=solid];
m17_483 -> m17_485  [key=0, style=solid];
m17_484 -> m17_485  [key=0, style=solid];
m17_484 -> m17_508  [key=0, style=solid];
m17_484 -> m17_510  [key=2, style=dotted];
m17_485 -> m17_486  [key=0, style=solid];
m17_485 -> m17_511  [key=2, style=dotted];
m17_487 -> m17_488  [key=0, style=solid];
m17_487 -> m17_32  [key=2, style=dotted];
m17_487 -> m17_487  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m17_487 -> m17_495  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m17_487 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m17_487 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m17_489 -> m17_490  [key=0, style=solid];
m17_489 -> m17_491  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m17_488 -> m17_491  [key=0, style=solid];
m17_488 -> m17_495  [key=0, style=solid];
m17_488 -> m17_489  [key=0, style=solid];
m17_488 -> m17_509  [key=2, style=dotted];
m17_490 -> m17_491  [key=0, style=solid];
m17_490 -> m17_508  [key=0, style=solid];
m17_490 -> m17_510  [key=2, style=dotted];
m17_491 -> m17_457  [key=0, style=bold, color=blue];
m17_491 -> m17_492  [key=0, style=solid];
m17_491 -> m17_512  [key=2, style=dotted];
m17_534 -> m17_535  [key=0, style=solid];
m17_534 -> m17_513  [key=2, style=dotted];
m17_535 -> m17_536  [key=0, style=solid];
m17_535 -> m17_517  [key=0, style=bold, color=blue];
m17_536 -> m17_534  [key=0, style=bold, color=blue];
m17_175 -> m17_176  [key=0, style=solid];
m17_175 -> m17_178  [key=0, style=solid];
m17_516 -> m17_517  [key=0, style=solid];
m17_517 -> m17_518  [key=0, style=solid];
m17_517 -> m17_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_517 -> m17_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_517 -> m17_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_517 -> m17_534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_517 -> m17_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_517 -> m17_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_517 -> m17_524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_517 -> m17_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_517 -> m17_527  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_517 -> m17_529  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_517 -> m17_531  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_518 -> m17_516  [key=0, style=bold, color=blue];
m17_518 -> m17_527  [key=0, style=solid];
m17_518 -> m17_519  [key=0, style=solid];
m17_518 -> m17_521  [key=0, style=solid];
m17_518 -> m17_523  [key=0, style=solid];
m17_518 -> m17_525  [key=0, style=solid];
m17_595 -> m17_605  [key=0, style=solid];
m17_595 -> m17_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_608  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_610  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_611  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_612  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_613  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_618  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_619  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_620  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_595 -> m17_626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_605 -> m17_606  [key=0, style=solid];
m17_605 -> m17_607  [key=0, style=solid];
m17_606 -> m17_536  [key=2, style=dotted];
m17_606 -> m17_627  [key=0, style=solid];
m17_607 -> m17_608  [key=0, style=solid];
m17_607 -> m17_611  [key=0, style=solid];
m17_608 -> m17_609  [key=0, style=solid];
m17_608 -> m17_610  [key=0, style=solid];
m17_609 -> m17_627  [key=0, style=solid];
m17_609 -> m17_628  [key=2, style=dotted];
m17_610 -> m17_627  [key=0, style=solid];
m17_610 -> m17_629  [key=2, style=dotted];
m17_610 -> m17_628  [key=2, style=dotted];
m17_611 -> m17_612  [key=0, style=solid];
m17_611 -> m17_617  [key=0, style=solid];
m17_612 -> m17_613  [key=0, style=solid];
m17_612 -> m17_614  [key=0, style=solid];
m17_613 -> m17_627  [key=0, style=solid];
m17_613 -> m17_628  [key=2, style=dotted];
m17_614 -> m17_615  [key=0, style=solid];
m17_614 -> m17_616  [key=0, style=solid];
m17_615 -> m17_627  [key=0, style=solid];
m17_615 -> m17_628  [key=2, style=dotted];
m17_616 -> m17_627  [key=0, style=solid];
m17_616 -> m17_630  [key=2, style=dotted];
m17_616 -> m17_628  [key=2, style=dotted];
m17_617 -> m17_618  [key=0, style=solid];
m17_617 -> m17_619  [key=0, style=solid];
m17_618 -> m17_627  [key=0, style=solid];
m17_618 -> m17_631  [key=2, style=dotted];
m17_618 -> m17_628  [key=2, style=dotted];
m17_619 -> m17_620  [key=0, style=solid];
m17_619 -> m17_624  [key=0, style=solid];
m17_620 -> m17_621  [key=0, style=solid];
m17_620 -> m17_622  [key=0, style=solid];
m17_621 -> m17_627  [key=0, style=solid];
m17_621 -> m17_628  [key=2, style=dotted];
m17_622 -> m17_623  [key=0, style=solid];
m17_622 -> m17_632  [key=2, style=dotted];
m17_624 -> m17_625  [key=0, style=solid];
m17_624 -> m17_626  [key=0, style=solid];
m17_626 -> m17_567  [key=2, style=dotted];
m17_626 -> m17_627  [key=0, style=solid];
m17_626 -> m17_604  [key=2, style=dotted];
m17_623 -> m17_627  [key=0, style=solid];
m17_623 -> m17_633  [key=2, style=dotted];
m17_623 -> m17_628  [key=2, style=dotted];
m17_625 -> m17_627  [key=0, style=solid];
m17_627 -> m17_595  [key=0, style=bold, color=blue];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_37  [key=3, color=darkorchid, style=bold, label="method methodReturn bool DeepEquals"];
m17_34 -> m17_39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool DeepEquals"];
m17_34 -> m17_42  [key=3, color=darkorchid, style=bold, label="method methodReturn bool DeepEquals"];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_6  [key=2, style=dotted];
m17_35 -> m17_37  [key=2, style=dotted];
m17_35 -> m17_38  [key=1, style=dashed, color=darkseagreen4, label=other];
m17_35 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label=other];
m17_36 -> m17_34  [key=0, style=bold, color=blue];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_38  [key=0, style=solid];
m17_538 -> m17_539  [key=0, style=solid];
m17_276 -> m17_277  [key=0, style=solid];
m17_276 -> m17_278  [key=0, style=solid];
m17_277 -> m17_278  [key=0, style=solid];
m17_277 -> m17_0  [key=2, style=dotted];
m17_277 -> m17_279  [key=0, style=solid];
m17_277 -> m17_78  [key=2, style=dotted];
m17_278 -> m17_276  [key=0, style=bold, color=blue];
m17_278 -> m17_279  [key=0, style=solid];
m17_278 -> m17_280  [key=2, style=dotted];
m17_278 -> m17_281  [key=2, style=dotted];
m17_384 -> m17_388  [key=0, style=solid];
m17_384 -> m17_385  [key=0, style=solid];
m17_384 -> m17_414  [key=0, style=solid];
m17_384 -> m17_417  [key=0, style=solid];
m17_384 -> m17_431  [key=0, style=solid];
m17_384 -> m17_445  [key=0, style=solid];
m17_384 -> m17_462  [key=0, style=solid];
m17_375 -> m17_373  [key=0, style=solid];
m17_375 -> m17_375  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_96 -> m17_97  [key=0, style=solid];
m17_96 -> m17_148  [key=2, style=dotted];
m17_97 -> m17_96  [key=0, style=bold, color=blue];
m17_97 -> m17_141  [key=0, style=solid];
m17_97 -> m17_149  [key=2, style=dotted];
m17_540 -> m17_541  [key=0, style=solid];
m17_540 -> m17_635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_540 -> m17_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_540 -> m17_642  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_540 -> m17_647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_540 -> m17_634  [key=0, style=solid];
m17_540 -> m17_636  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_540 -> m17_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_540 -> m17_646  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_541 -> m17_542  [key=0, style=solid];
m17_541 -> m17_543  [key=0, style=solid];
m17_541 -> m17_309  [key=2, style=dotted];
m17_542 -> m17_540  [key=0, style=bold, color=blue];
m17_542 -> m17_566  [key=0, style=solid];
m17_542 -> m17_567  [key=2, style=dotted];
m17_110 -> m17_111  [key=0, style=solid];
m17_110 -> m17_152  [key=2, style=dotted];
m17_110 -> m17_150  [key=2, style=dotted];
m17_111 -> m17_110  [key=0, style=bold, color=blue];
m17_111 -> m17_141  [key=0, style=solid];
m17_111 -> m17_153  [key=2, style=dotted];
m17_111 -> m17_111  [key=1, style=dashed, color=darkseagreen4, label=date1];
m17_386 -> m17_387  [key=0, style=solid];
m17_503 -> m17_504  [key=0, style=solid];
m17_503 -> m17_66  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode"];
m17_503 -> m17_305  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode"];
m17_503 -> m17_68  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode"];
m17_503 -> m17_507  [key=0, style=solid];
m17_504 -> m17_505  [key=0, style=solid];
m17_504 -> m17_506  [key=0, style=solid];
m17_505 -> m17_511  [key=0, style=solid];
m17_505 -> m17_506  [key=0, style=solid];
m17_505 -> m17_516  [key=2, style=dotted];
m17_506 -> m17_507  [key=0, style=solid];
m17_506 -> m17_508  [key=0, style=solid];
m17_507 -> m17_511  [key=0, style=solid];
m17_507 -> m17_508  [key=0, style=solid];
m17_508 -> m17_509  [key=0, style=solid];
m17_508 -> m17_510  [key=0, style=solid];
m17_508 -> m17_476  [key=0, style=bold, color=blue];
m17_509 -> m17_511  [key=0, style=solid];
m17_510 -> m17_511  [key=0, style=solid];
m17_510 -> m17_311  [key=2, style=dotted];
m17_510 -> m17_512  [key=2, style=dotted];
m17_511 -> m17_503  [key=0, style=bold, color=blue];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_6  [key=2, style=dotted];
m17_4 -> m17_7  [key=2, style=dotted];
m17_5 -> m17_4  [key=0, style=bold, color=blue];
m17_5 -> m17_3  [key=0, style=bold, color=blue];
m17_157 -> m17_158  [key=0, style=solid];
m17_158 -> m17_129  [key=2, style=dotted];
m17_158 -> m17_159  [key=0, style=solid];
m17_158 -> m17_160  [key=2, style=dotted];
m17_159 -> m17_157  [key=0, style=bold, color=blue];
m17_201 -> m17_205  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m17_201 -> m17_220  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m17_201 -> m17_202  [key=0, style=solid];
m17_201 -> m17_208  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m17_201 -> m17_211  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m17_201 -> m17_214  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_201 -> m17_217  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m17_201 -> m17_223  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m17_201 -> m17_226  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m17_201 -> m17_142  [key=2, style=dotted];
m17_201 -> m17_206  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_201 -> m17_210  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_201 -> m17_218  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_207 -> m17_169  [key=2, style=dotted];
m17_207 -> m17_227  [key=0, style=solid];
m17_207 -> m17_268  [key=0, style=solid];
m17_222 -> m17_180  [key=2, style=dotted];
m17_222 -> m17_227  [key=0, style=solid];
m17_222 -> m17_223  [key=0, style=solid];
m17_205 -> m17_207  [key=1, style=dashed, color=darkseagreen4, label=element];
m17_205 -> m17_206  [key=0, style=solid];
m17_206 -> m17_207  [key=0, style=solid];
m17_206 -> m17_208  [key=0, style=solid];
m17_220 -> m17_222  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m17_220 -> m17_221  [key=0, style=solid];
m17_220 -> m17_243  [key=0, style=solid];
m17_221 -> m17_222  [key=0, style=solid];
m17_221 -> m17_223  [key=0, style=solid];
m17_221 -> m17_224  [key=0, style=solid];
m17_203 -> m17_205  [key=0, style=solid];
m17_203 -> m17_204  [key=0, style=solid];
m17_203 -> m17_208  [key=0, style=solid];
m17_203 -> m17_212  [key=0, style=solid];
m17_203 -> m17_216  [key=0, style=solid];
m17_208 -> m17_209  [key=0, style=solid];
m17_208 -> m17_210  [key=1, style=dashed, color=darkseagreen4, label=container];
m17_226 -> m17_227  [key=0, style=solid];
m17_226 -> m17_228  [key=2, style=dotted];
m17_226 -> m17_231  [key=0, style=solid];
m17_226 -> m17_235  [key=0, style=solid];
m17_226 -> m17_239  [key=0, style=solid];
m17_204 -> m17_227  [key=0, style=solid];
m17_204 -> m17_132  [key=2, style=dotted];
m17_204 -> m17_205  [key=0, style=solid];
m17_210 -> m17_227  [key=0, style=solid];
m17_210 -> m17_199  [key=2, style=dotted];
m17_210 -> m17_211  [key=0, style=solid];
m17_213 -> m17_227  [key=0, style=solid];
m17_213 -> m17_164  [key=2, style=dotted];
m17_213 -> m17_214  [key=0, style=solid];
m17_216 -> m17_227  [key=0, style=solid];
m17_216 -> m17_194  [key=2, style=dotted];
m17_216 -> m17_217  [key=0, style=solid];
m17_219 -> m17_227  [key=0, style=solid];
m17_219 -> m17_196  [key=2, style=dotted];
m17_219 -> m17_268  [key=0, style=solid];
m17_225 -> m17_227  [key=0, style=solid];
m17_225 -> m17_129  [key=2, style=dotted];
m17_225 -> m17_226  [key=0, style=solid];
m17_225 -> m17_60  [key=2, style=dotted];
m17_225 -> m17_229  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_225 -> m17_233  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_225 -> m17_237  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_225 -> m17_241  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_218 -> m17_220  [key=0, style=solid];
m17_218 -> m17_219  [key=0, style=solid];
m17_223 -> m17_225  [key=1, style=dashed, color=darkseagreen4, label=type];
m17_223 -> m17_224  [key=0, style=solid];
m17_223 -> m17_268  [key=0, style=solid];
m17_202 -> m17_203  [key=0, style=solid];
m17_202 -> m17_204  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_202 -> m17_142  [key=2, style=dotted];
m17_202 -> m17_206  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_202 -> m17_210  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_202 -> m17_214  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_202 -> m17_218  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_211 -> m17_213  [key=1, style=dashed, color=darkseagreen4, label=pi];
m17_211 -> m17_212  [key=0, style=solid];
m17_211 -> m17_268  [key=0, style=solid];
m17_214 -> m17_216  [key=1, style=dashed, color=darkseagreen4, label=text];
m17_214 -> m17_215  [key=0, style=solid];
m17_217 -> m17_219  [key=1, style=dashed, color=darkseagreen4, label=comment];
m17_217 -> m17_218  [key=0, style=solid];
m17_209 -> m17_210  [key=0, style=solid];
m17_209 -> m17_211  [key=0, style=solid];
m17_224 -> m17_226  [key=0, style=solid];
m17_224 -> m17_225  [key=0, style=solid];
m17_224 -> m17_60  [key=2, style=dotted];
m17_224 -> m17_229  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_224 -> m17_233  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_224 -> m17_237  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_224 -> m17_241  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_212 -> m17_213  [key=0, style=solid];
m17_212 -> m17_214  [key=0, style=solid];
m17_215 -> m17_216  [key=0, style=solid];
m17_215 -> m17_217  [key=0, style=solid];
m17_215 -> m17_268  [key=0, style=solid];
m17_227 -> m17_201  [key=0, style=bold, color=blue];
m17_227 -> m17_228  [key=0, style=solid];
m17_171 -> m17_172  [key=0, style=solid, color=green];
m17_171 -> m17_173  [key=1, style=dashed, color=green, label=string];
m17_171 -> m17_174  [key=0, style=solid];
m17_172 -> m17_173  [key=0, style=solid, color=green];
m17_172 -> m17_175  [key=2, style=dotted, color=green];
m17_172 -> m17_269  [key=2, style=dotted];
m17_173 -> m17_174  [key=0, style=solid, color=green];
m17_173 -> m17_169  [key=2, style=dotted, color=green];
m17_173 -> m17_170  [key=2, style=dotted, color=green];
m17_173 -> m17_176  [key=2, style=dotted, color=green];
m17_173 -> m17_268  [key=0, style=solid];
m17_174 -> m17_171  [key=0, style=bold, color=blue];
m17_174 -> m17_175  [key=0, style=solid];
m17_174 -> m17_197  [key=0, style=solid];
m17_513 -> m17_541  [key=0, style=solid];
m17_513 -> m17_542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_513 -> m17_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_513 -> m17_544  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_513 -> m17_545  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_513 -> m17_546  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_513 -> m17_548  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_513 -> m17_550  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_513 -> m17_551  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_513 -> m17_553  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_513 -> m17_554  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_513 -> m17_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_513 -> m17_562  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_513 -> m17_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_513 -> m17_565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_513 -> m17_514  [key=0, style=solid];
m17_543 -> m17_544  [key=0, style=solid];
m17_543 -> m17_568  [key=2, style=dotted];
m17_543 -> m17_555  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m17_543 -> m17_565  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m17_555 -> m17_556  [key=0, style=solid];
m17_555 -> m17_573  [key=2, style=dotted];
m17_565 -> m17_566  [key=0, style=solid];
m17_565 -> m17_573  [key=2, style=dotted];
m17_544 -> m17_565  [key=1, style=dashed, color=darkseagreen4, label=elementPrefix];
m17_544 -> m17_545  [key=0, style=solid];
m17_544 -> m17_569  [key=2, style=dotted];
m17_545 -> m17_546  [key=0, style=solid];
m17_545 -> m17_550  [key=0, style=solid];
m17_545 -> m17_570  [key=2, style=dotted];
m17_545 -> m17_543  [key=0, style=bold, color=blue];
m17_546 -> m17_547  [key=0, style=solid];
m17_546 -> m17_571  [key=2, style=dotted];
m17_546 -> m17_548  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_548 -> m17_549  [key=0, style=solid];
m17_548 -> m17_572  [key=2, style=dotted];
m17_548 -> m17_546  [key=0, style=bold, color=blue];
m17_550 -> m17_565  [key=0, style=solid];
m17_550 -> m17_551  [key=0, style=solid];
m17_550 -> m17_570  [key=2, style=dotted];
m17_551 -> m17_552  [key=0, style=solid];
m17_551 -> m17_557  [key=0, style=solid];
m17_551 -> m17_549  [key=0, style=bold, color=blue];
m17_553 -> m17_555  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_553 -> m17_565  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_553 -> m17_553  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_553 -> m17_554  [key=0, style=solid];
m17_553 -> m17_571  [key=2, style=dotted];
m17_553 -> m17_561  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_553 -> m17_563  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_554 -> m17_555  [key=0, style=solid];
m17_554 -> m17_565  [key=1, style=dashed, color=darkseagreen4, label=elementPrefix];
m17_554 -> m17_308  [key=2, style=dotted];
m17_554 -> m17_552  [key=0, style=bold, color=blue];
m17_562 -> m17_563  [key=0, style=solid];
m17_562 -> m17_308  [key=2, style=dotted];
m17_563 -> m17_564  [key=0, style=solid];
m17_563 -> m17_572  [key=2, style=dotted];
m17_556 -> m17_566  [key=0, style=solid];
m17_556 -> m17_557  [key=0, style=solid];
m17_556 -> m17_558  [key=2, style=dotted];
m17_549 -> m17_566  [key=0, style=solid];
m17_549 -> m17_550  [key=0, style=solid];
m17_564 -> m17_566  [key=0, style=solid];
m17_547 -> m17_548  [key=0, style=solid];
m17_547 -> m17_569  [key=2, style=dotted];
m17_552 -> m17_553  [key=0, style=solid];
m17_557 -> m17_558  [key=0, style=solid];
m17_557 -> m17_555  [key=0, style=bold, color=blue];
m17_561 -> m17_562  [key=0, style=solid];
m17_561 -> m17_563  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_561 -> m17_571  [key=2, style=dotted];
m17_558 -> m17_559  [key=0, style=solid];
m17_560 -> m17_561  [key=0, style=solid];
m17_559 -> m17_560  [key=0, style=solid];
m17_559 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_327  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_346  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_350  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_394  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_415  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_517  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_523  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_535  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_550  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_553  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_559 -> m17_556  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_566 -> m17_513  [key=0, style=bold, color=blue];
m17_51 -> m17_52  [key=0, style=solid];
m17_51 -> m17_60  [key=2, style=dotted];
m17_118 -> m17_119  [key=0, style=solid];
m17_118 -> m17_141  [key=0, style=solid];
m17_119 -> m17_118  [key=0, style=bold, color=blue];
m17_119 -> m17_120  [key=0, style=solid];
m17_119 -> m17_121  [key=0, style=solid];
m17_143 -> m17_162  [key=0, style=solid];
m17_143 -> m17_163  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_143 -> m17_64  [key=3, color=darkorchid, style=bold, label="Parameter variable object objB"];
m17_143 -> m17_66  [key=3, color=darkorchid, style=bold, label="method methodReturn int CompareFloat"];
m17_162 -> m17_163  [key=0, style=solid];
m17_162 -> m17_60  [key=2, style=dotted];
m17_162 -> m17_164  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_162 -> m17_166  [key=1, style=dashed, color=darkseagreen4, label=d1];
m17_162 -> m17_165  [key=2, style=dotted];
m17_163 -> m17_164  [key=0, style=solid];
m17_163 -> m17_60  [key=2, style=dotted];
m17_163 -> m17_166  [key=1, style=dashed, color=darkseagreen4, label=d2];
m17_163 -> m17_161  [key=0, style=bold, color=blue];
m17_164 -> m17_165  [key=0, style=solid];
m17_164 -> m17_166  [key=0, style=solid];
m17_164 -> m17_168  [key=2, style=dotted];
m17_164 -> m17_198  [key=0, style=solid];
m17_166 -> m17_167  [key=0, style=solid, color=green];
m17_166 -> m17_63  [key=2, style=dotted];
m17_165 -> m17_167  [key=0, style=solid];
m17_167 -> m17_143  [key=0, style=bold, color=blue];
m17_167 -> m17_168  [key=0, style=solid, color=green];
m17_167 -> m17_169  [key=2, style=dotted, color=green];
m17_167 -> m17_170  [key=2, style=dotted, color=green];
m17_247 -> m17_248  [key=0, style=solid];
m17_247 -> m17_144  [key=2, style=dotted];
m17_247 -> m17_252  [key=1, style=dashed, color=darkseagreen4, label=l1];
m17_247 -> m17_256  [key=1, style=dashed, color=darkseagreen4, label=l1];
m17_247 -> m17_260  [key=1, style=dashed, color=darkseagreen4, label=l1];
m17_247 -> m17_264  [key=1, style=dashed, color=darkseagreen4, label=l1];
m17_248 -> m17_249  [key=0, style=solid];
m17_248 -> m17_193  [key=2, style=dotted];
m17_248 -> m17_250  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_248 -> m17_144  [key=2, style=dotted];
m17_248 -> m17_252  [key=1, style=dashed, color=darkseagreen4, label=l2];
m17_248 -> m17_256  [key=1, style=dashed, color=darkseagreen4, label=l2];
m17_248 -> m17_260  [key=1, style=dashed, color=darkseagreen4, label=l2];
m17_248 -> m17_264  [key=1, style=dashed, color=darkseagreen4, label=l2];
m17_249 -> m17_250  [key=0, style=solid];
m17_249 -> m17_254  [key=0, style=solid];
m17_249 -> m17_258  [key=0, style=solid];
m17_249 -> m17_262  [key=0, style=solid];
m17_250 -> m17_251  [key=0, style=solid];
m17_251 -> m17_247  [key=0, style=bold, color=blue];
m17_251 -> m17_252  [key=0, style=solid];
m17_180 -> m17_240  [key=0, style=solid];
m17_180 -> m17_181  [key=0, style=solid];
m17_180 -> m17_185  [key=0, style=solid];
m17_180 -> m17_189  [key=0, style=solid];
m17_180 -> m17_193  [key=0, style=solid];
m17_240 -> m17_180  [key=0, style=bold, color=blue];
m17_240 -> m17_241  [key=0, style=solid];
m17_339 -> m17_373  [key=0, style=solid];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_16  [key=0, style=bold, color=blue];
m17_19 -> m17_18  [key=0, style=bold, color=blue];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_24  [key=0, style=bold, color=blue];
m17_27 -> m17_26  [key=0, style=bold, color=blue];
m17_75 -> m17_76  [key=0, style=solid];
m17_75 -> m17_77  [key=0, style=solid];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> m17_141  [key=0, style=solid];
m17_76 -> m17_43  [key=2, style=dotted];
m17_77 -> m17_75  [key=0, style=bold, color=blue];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_79  [key=0, style=solid];
m17_348 -> m17_353  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_348 -> m17_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_348 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_348 -> m17_349  [key=0, style=solid];
m17_348 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_348 -> m17_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_348 -> m17_369  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_348 -> m17_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_348 -> m17_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_348 -> m17_376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_348 -> m17_350  [key=0, style=solid];
m17_353 -> m17_354  [key=0, style=solid];
m17_353 -> m17_311  [key=2, style=dotted];
m17_353 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m17_353 -> m17_357  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m17_353 -> m17_373  [key=0, style=solid];
m17_364 -> m17_366  [key=0, style=solid];
m17_364 -> m17_340  [key=2, style=dotted];
m17_364 -> m17_373  [key=0, style=solid];
m17_367 -> m17_360  [key=0, style=solid];
m17_367 -> m17_270  [key=2, style=dotted];
m17_367 -> m17_373  [key=0, style=solid];
m17_374 -> m17_375  [key=0, style=solid];
m17_374 -> m17_270  [key=2, style=dotted];
m17_374 -> m17_373  [key=0, style=solid];
m17_374 -> m17_161  [key=2, style=dotted];
m17_352 -> m17_353  [key=0, style=solid];
m17_352 -> m17_358  [key=1, style=dashed, color=darkseagreen4, label=childNode];
m17_352 -> m17_60  [key=2, style=dotted];
m17_352 -> m17_385  [key=2, style=dotted];
m17_354 -> m17_355  [key=0, style=solid];
m17_355 -> m17_356  [key=0, style=solid];
m17_355 -> m17_358  [key=0, style=solid];
m17_355 -> m17_379  [key=2, style=dotted];
m17_355 -> m17_269  [key=2, style=dotted];
m17_355 -> m17_387  [key=2, style=dotted];
m17_357 -> m17_358  [key=0, style=solid];
m17_357 -> m17_380  [key=2, style=dotted];
m17_361 -> m17_364  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m17_361 -> m17_367  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m17_361 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m17_361 -> m17_361  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m17_361 -> m17_362  [key=0, style=solid];
m17_361 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m17_361 -> m17_368  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m17_361 -> m17_373  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m17_363 -> m17_364  [key=0, style=solid];
m17_363 -> m17_365  [key=0, style=solid];
m17_363 -> m17_150  [key=2, style=dotted];
m17_363 -> m17_390  [key=2, style=dotted];
m17_366 -> m17_367  [key=0, style=solid];
m17_366 -> m17_368  [key=0, style=solid];
m17_366 -> m17_391  [key=2, style=dotted];
m17_360 -> m17_361  [key=0, style=solid];
m17_360 -> m17_377  [key=0, style=solid];
m17_373 -> m17_374  [key=0, style=solid];
m17_373 -> m17_376  [key=0, style=solid];
m17_373 -> m17_321  [key=0, style=bold, color=blue];
m17_372 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_372 -> m17_373  [key=0, style=solid];
m17_372 -> m17_375  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_349 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m17_349 -> m17_357  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m17_349 -> m17_360  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m17_349 -> m17_350  [key=0, style=solid];
m17_349 -> m17_378  [key=2, style=dotted];
m17_349 -> m17_353  [key=0, style=solid];
m17_349 -> m17_385  [key=2, style=dotted];
m17_351 -> m17_352  [key=0, style=solid];
m17_351 -> m17_360  [key=0, style=solid];
m17_351 -> m17_353  [key=0, style=solid];
m17_351 -> m17_386  [key=2, style=dotted];
m17_369 -> m17_370  [key=0, style=solid];
m17_369 -> m17_371  [key=0, style=solid];
m17_370 -> m17_381  [key=2, style=dotted];
m17_370 -> m17_371  [key=0, style=solid];
m17_371 -> m17_372  [key=0, style=solid];
m17_371 -> m17_382  [key=2, style=dotted];
m17_371 -> m17_269  [key=2, style=dotted];
m17_371 -> m17_387  [key=2, style=dotted];
m17_376 -> m17_360  [key=0, style=solid];
m17_376 -> m17_383  [key=2, style=dotted];
m17_350 -> m17_352  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_350 -> m17_351  [key=0, style=solid];
m17_350 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_358 -> m17_359  [key=0, style=solid];
m17_358 -> m17_298  [key=2, style=dotted];
m17_358 -> m17_148  [key=2, style=dotted];
m17_358 -> m17_388  [key=2, style=dotted];
m17_356 -> m17_357  [key=0, style=solid];
m17_356 -> m17_358  [key=1, style=dashed, color=darkseagreen4, label=nodes];
m17_356 -> m17_297  [key=2, style=dotted];
m17_356 -> m17_373  [key=0, style=solid];
m17_362 -> m17_363  [key=0, style=solid];
m17_362 -> m17_364  [key=0, style=solid];
m17_362 -> m17_389  [key=2, style=dotted];
m17_368 -> m17_369  [key=0, style=solid];
m17_368 -> m17_370  [key=1, style=dashed, color=darkseagreen4, label=elementNames];
m17_368 -> m17_368  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m17_365 -> m17_366  [key=0, style=solid];
m17_359 -> m17_351  [key=0, style=solid];
m17_359 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_359 -> m17_373  [key=0, style=solid];
m17_377 -> m17_348  [key=0, style=bold, color=blue];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_32  [key=2, style=dotted];
m17_30 -> m17_33  [key=2, style=dotted];
m17_31 -> m17_30  [key=0, style=bold, color=blue];
m17_31 -> m17_29  [key=0, style=bold, color=blue];
m17_57 -> m17_58  [key=0, style=solid];
m17_58 -> m17_59  [key=0, style=solid];
m17_11 -> m17_10  [key=0, style=bold, color=blue];
m17_78 -> m17_79  [key=0, style=solid];
m17_78 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m17_78 -> m17_83  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m17_78 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m17_78 -> m17_86  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m17_78 -> m17_141  [key=0, style=solid];
m17_78 -> m17_142  [key=2, style=dotted];
m17_78 -> m17_59  [key=2, style=dotted];
m17_79 -> m17_80  [key=0, style=solid];
m17_79 -> m17_82  [key=0, style=solid];
m17_79 -> m17_84  [key=0, style=solid];
m17_79 -> m17_86  [key=0, style=solid];
m17_79 -> m17_81  [key=0, style=solid];
m17_81 -> m17_87  [key=0, style=solid];
m17_81 -> m17_57  [key=2, style=dotted];
m17_81 -> m17_141  [key=0, style=solid];
m17_81 -> m17_144  [key=2, style=dotted];
m17_81 -> m17_145  [key=2, style=dotted];
m17_83 -> m17_87  [key=0, style=solid];
m17_83 -> m17_69  [key=2, style=dotted];
m17_83 -> m17_84  [key=0, style=solid];
m17_83 -> m17_85  [key=0, style=solid];
m17_85 -> m17_87  [key=0, style=solid];
m17_85 -> m17_72  [key=2, style=dotted];
m17_85 -> m17_86  [key=0, style=solid];
m17_86 -> m17_87  [key=0, style=solid];
m17_86 -> m17_75  [key=2, style=dotted];
m17_86 -> m17_141  [key=0, style=solid];
m17_86 -> m17_43  [key=2, style=dotted];
m17_80 -> m17_81  [key=0, style=solid];
m17_80 -> m17_141  [key=0, style=solid];
m17_80 -> m17_143  [key=2, style=dotted];
m17_82 -> m17_83  [key=0, style=solid];
m17_84 -> m17_85  [key=0, style=solid];
m17_84 -> m17_141  [key=0, style=solid];
m17_84 -> m17_43  [key=2, style=dotted];
m17_87 -> m17_78  [key=0, style=bold, color=blue];
m17_87 -> m17_141  [key=0, style=solid];
m17_87 -> m17_143  [key=2, style=dotted];
m17_69 -> m17_70  [key=0, style=solid];
m17_69 -> m17_71  [key=0, style=solid];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_141  [key=0, style=solid];
m17_71 -> m17_69  [key=0, style=bold, color=blue];
m17_71 -> m17_72  [key=0, style=solid];
m17_71 -> m17_82  [key=0, style=solid];
m17_71 -> m17_88  [key=0, style=solid];
m17_71 -> m17_94  [key=0, style=solid];
m17_71 -> m17_98  [key=0, style=solid];
m17_71 -> m17_112  [key=0, style=solid];
m17_71 -> m17_122  [key=0, style=solid];
m17_71 -> m17_128  [key=0, style=solid];
m17_71 -> m17_134  [key=0, style=solid];
m17_71 -> m17_140  [key=0, style=solid];
m17_98 -> m17_99  [key=0, style=solid];
m17_99 -> m17_98  [key=0, style=bold, color=blue];
m17_99 -> m17_100  [key=0, style=solid];
m17_99 -> m17_106  [key=0, style=solid];
m17_400 -> m17_401  [key=0, style=solid];
m17_400 -> m17_403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_400 -> m17_37  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m17_400 -> m17_42  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m17_400 -> m17_408  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JValue other"];
m17_400 -> m17_413  [key=0, style=solid];
m17_400 -> m17_466  [key=2, style=dotted];
m17_401 -> m17_402  [key=0, style=solid];
m17_401 -> m17_403  [key=0, style=solid];
m17_401 -> m17_406  [key=0, style=solid];
m17_401 -> m17_467  [key=2, style=dotted];
m17_403 -> m17_404  [key=0, style=solid];
m17_403 -> m17_42  [key=2, style=dotted];
m17_403 -> m17_405  [key=0, style=solid];
m17_402 -> m17_404  [key=0, style=solid];
m17_402 -> m17_403  [key=0, style=solid];
m17_404 -> m17_400  [key=0, style=bold, color=blue];
m17_404 -> m17_413  [key=0, style=solid];
m17_404 -> m17_380  [key=2, style=dotted];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_69  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m17_64 -> m17_73  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_74  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_76  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_78  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_79  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_83  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_84  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_86  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_92  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_96  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_99  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_100  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_102  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_103  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_104  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_106  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_108  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_109  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_110  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_113  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_115  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_116  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_123  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_125  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_126  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_129  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_131  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_132  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_135  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_137  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_138  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_64 -> m17_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m17_64 -> m17_66  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
m17_64 -> m17_68  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
m17_64 -> m17_70  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
m17_64 -> m17_43  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
m17_64 -> m17_143  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
m17_64 -> m17_458  [key=3, color=darkorchid, style=bold, label="Parameter variable object objB"];
m17_64 -> m17_495  [key=3, color=darkorchid, style=bold, label="Parameter variable object objB"];
m17_186 -> m17_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_186 -> m17_187  [key=0, style=solid];
m17_191 -> m17_193  [key=2, style=dotted];
m17_191 -> m17_192  [key=0, style=solid];
m17_188 -> m17_191  [key=0, style=solid];
m17_188 -> m17_189  [key=0, style=solid];
m17_188 -> m17_268  [key=0, style=solid];
m17_189 -> m17_190  [key=0, style=solid];
m17_187 -> m17_188  [key=0, style=solid];
m17_187 -> m17_189  [key=1, style=dashed, color=darkseagreen4, label=declarationWrapper];
m17_187 -> m17_190  [key=1, style=dashed, color=darkseagreen4, label=declarationWrapper];
m17_190 -> m17_192  [key=0, style=solid];
m17_190 -> m17_191  [key=0, style=solid];
m17_192 -> m17_186  [key=0, style=bold, color=blue];
m17_192 -> m17_268  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_27  [key=2, style=dotted];
m17_25 -> m17_28  [key=2, style=dotted];
m17_25 -> m17_24  [key=0, style=bold, color=blue];
m17_182 -> m17_183  [key=0, style=solid, color=green];
m17_182 -> m17_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_183 -> m17_184  [key=0, style=solid, color=green];
m17_183 -> m17_175  [key=2, style=dotted, color=green];
m17_184 -> m17_176  [key=2, style=dotted];
m17_184 -> m17_180  [key=2, style=dotted];
m17_184 -> m17_181  [key=2, style=dotted];
m17_184 -> m17_185  [key=0, style=solid];
m17_184 -> m17_268  [key=0, style=solid];
m17_185 -> m17_182  [key=0, style=bold, color=blue];
m17_185 -> m17_186  [key=0, style=solid];
m17_61 -> m17_62  [key=0, style=solid];
m17_20 -> m17_21  [key=0, style=solid];
m17_21 -> m17_20  [key=0, style=bold, color=blue];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_6  [key=2, style=dotted];
m17_21 -> m17_23  [key=2, style=dotted];
m17_233 -> m17_234  [key=0, style=solid];
m17_531 -> m17_532  [key=0, style=solid];
m17_531 -> m17_534  [key=0, style=solid];
m17_532 -> m17_533  [key=0, style=solid];
m17_532 -> m17_540  [key=2, style=dotted];
m17_533 -> m17_531  [key=0, style=bold, color=blue];
m17_533 -> m17_535  [key=0, style=solid];
m17_279 -> m17_280  [key=0, style=solid];
m17_279 -> m17_282  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_284  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m17_279 -> m17_286  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_290  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_292  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_294  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_296  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_298  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_300  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_302  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_304  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_306  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_308  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_279 -> m17_32  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m17_279 -> m17_281  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_310  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_287  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_293  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_295  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_299  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_301  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_303  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_305  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_307  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType"];
m17_279 -> m17_265  [key=0, style=bold, color=blue];
m17_280 -> m17_281  [key=0, style=solid];
m17_280 -> m17_282  [key=0, style=solid];
m17_282 -> m17_283  [key=0, style=solid];
m17_282 -> m17_284  [key=0, style=solid];
m17_282 -> m17_286  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m17_282 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m17_282 -> m17_289  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m17_282 -> m17_290  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m17_282 -> m17_291  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m17_284 -> m17_285  [key=0, style=solid];
m17_284 -> m17_286  [key=0, style=solid];
m17_284 -> m17_289  [key=0, style=solid];
m17_284 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label=parent];
m17_284 -> m17_284  [key=1, style=dashed, color=darkseagreen4, label=parent];
m17_285 -> m17_309  [key=0, style=solid];
m17_285 -> m17_310  [key=2, style=dotted];
m17_285 -> m17_286  [key=0, style=solid];
m17_285 -> m17_284  [key=0, style=solid];
m17_286 -> m17_287  [key=0, style=solid];
m17_286 -> m17_288  [key=0, style=solid];
m17_288 -> m17_289  [key=0, style=solid];
m17_288 -> m17_290  [key=0, style=solid];
m17_288 -> m17_284  [key=0, style=solid];
m17_288 -> m17_298  [key=2, style=dotted];
m17_290 -> m17_291  [key=0, style=solid];
m17_290 -> m17_292  [key=0, style=solid];
m17_290 -> m17_299  [key=2, style=dotted];
m17_292 -> m17_293  [key=0, style=solid];
m17_292 -> m17_294  [key=0, style=solid];
m17_292 -> m17_300  [key=2, style=dotted];
m17_294 -> m17_295  [key=0, style=solid];
m17_294 -> m17_296  [key=0, style=solid];
m17_294 -> m17_293  [key=0, style=solid];
m17_296 -> m17_297  [key=0, style=solid];
m17_296 -> m17_298  [key=0, style=solid];
m17_296 -> m17_268  [key=0, style=bold, color=blue];
m17_298 -> m17_299  [key=0, style=solid];
m17_298 -> m17_300  [key=0, style=solid];
m17_300 -> m17_301  [key=0, style=solid];
m17_300 -> m17_302  [key=0, style=solid];
m17_302 -> m17_303  [key=0, style=solid];
m17_302 -> m17_304  [key=0, style=solid];
m17_302 -> m17_305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_302 -> m17_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_304 -> m17_305  [key=0, style=solid];
m17_304 -> m17_306  [key=0, style=solid];
m17_304 -> m17_309  [key=2, style=dotted];
m17_306 -> m17_307  [key=0, style=solid];
m17_306 -> m17_308  [key=0, style=solid];
m17_306 -> m17_310  [key=2, style=dotted];
m17_308 -> m17_309  [key=0, style=solid];
m17_308 -> m17_154  [key=2, style=dotted];
m17_308 -> m17_311  [key=2, style=dotted];
m17_308 -> m17_160  [key=2, style=dotted];
m17_281 -> m17_309  [key=0, style=solid];
m17_283 -> m17_309  [key=0, style=solid];
m17_283 -> m17_284  [key=0, style=solid];
m17_287 -> m17_309  [key=0, style=solid];
m17_287 -> m17_289  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m17_287 -> m17_291  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m17_287 -> m17_288  [key=0, style=solid];
m17_287 -> m17_290  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m17_287 -> m17_297  [key=2, style=dotted];
m17_289 -> m17_309  [key=0, style=solid];
m17_289 -> m17_296  [key=0, style=solid];
m17_289 -> m17_290  [key=0, style=solid];
m17_291 -> m17_309  [key=0, style=solid];
m17_291 -> m17_296  [key=0, style=solid];
m17_291 -> m17_292  [key=0, style=solid];
m17_291 -> m17_293  [key=1, style=dashed, color=darkseagreen4, label=parentElement];
m17_293 -> m17_309  [key=0, style=solid];
m17_293 -> m17_295  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m17_293 -> m17_291  [key=0, style=solid];
m17_293 -> m17_294  [key=0, style=solid];
m17_295 -> m17_309  [key=0, style=solid];
m17_295 -> m17_293  [key=0, style=solid];
m17_295 -> m17_301  [key=2, style=dotted];
m17_297 -> m17_309  [key=0, style=solid];
m17_299 -> m17_309  [key=0, style=solid];
m17_301 -> m17_309  [key=0, style=solid];
m17_303 -> m17_309  [key=0, style=solid];
m17_303 -> m17_304  [key=0, style=solid];
m17_303 -> m17_308  [key=2, style=dotted];
m17_303 -> m17_305  [key=1, style=dashed, color=darkseagreen4, label=prefix];
m17_305 -> m17_309  [key=0, style=solid];
m17_305 -> m17_307  [key=0, style=solid];
m17_305 -> m17_310  [key=2, style=dotted];
m17_307 -> m17_309  [key=0, style=solid];
m17_307 -> m17_302  [key=0, style=bold, color=blue];
m17_309 -> m17_279  [key=0, style=bold, color=blue];
m17_539 -> m17_732  [key=0, style=solid];
m17_539 -> m17_736  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_737  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_739  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_740  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_742  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_743  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_748  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_749  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_750  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_539 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_539 -> m17_752  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_539 -> m17_537  [key=0, style=bold, color=blue];
m17_736 -> m17_514  [key=2, style=dotted];
m17_736 -> m17_737  [key=0, style=solid];
m17_736 -> m17_751  [key=0, style=solid];
m17_739 -> m17_514  [key=2, style=dotted];
m17_739 -> m17_740  [key=0, style=solid];
m17_742 -> m17_514  [key=2, style=dotted];
m17_742 -> m17_743  [key=0, style=solid];
m17_745 -> m17_514  [key=2, style=dotted];
m17_745 -> m17_746  [key=0, style=solid];
m17_748 -> m17_514  [key=2, style=dotted];
m17_748 -> m17_749  [key=0, style=solid];
m17_732 -> m17_733  [key=0, style=solid];
m17_732 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label=name];
m17_737 -> m17_536  [key=2, style=dotted];
m17_737 -> m17_738  [key=0, style=solid];
m17_737 -> m17_741  [key=0, style=solid];
m17_737 -> m17_744  [key=0, style=solid];
m17_737 -> m17_747  [key=0, style=solid];
m17_737 -> m17_750  [key=0, style=solid];
m17_740 -> m17_736  [key=0, style=solid];
m17_740 -> m17_536  [key=2, style=dotted];
m17_740 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label=name];
m17_743 -> m17_736  [key=0, style=solid];
m17_743 -> m17_536  [key=2, style=dotted];
m17_743 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label=publicId];
m17_746 -> m17_736  [key=0, style=solid];
m17_746 -> m17_536  [key=2, style=dotted];
m17_746 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label=systemId];
m17_749 -> m17_736  [key=0, style=solid];
m17_749 -> m17_536  [key=2, style=dotted];
m17_749 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label=internalSubset];
m17_750 -> m17_567  [key=2, style=dotted];
m17_750 -> m17_753  [key=0, style=solid];
m17_751 -> m17_752  [key=0, style=solid];
m17_751 -> m17_108  [key=2, style=dotted];
m17_752 -> m17_124  [key=2, style=dotted];
m17_752 -> m17_753  [key=0, style=solid];
m17_735 -> m17_736  [key=0, style=solid];
m17_735 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label=internalSubset];
m17_738 -> m17_739  [key=0, style=solid];
m17_741 -> m17_742  [key=0, style=solid];
m17_744 -> m17_745  [key=0, style=solid];
m17_747 -> m17_748  [key=0, style=solid];
m17_733 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label=publicId];
m17_733 -> m17_734  [key=0, style=solid];
m17_734 -> m17_751  [key=1, style=dashed, color=darkseagreen4, label=systemId];
m17_734 -> m17_735  [key=0, style=solid];
m17_753 -> m17_539  [key=0, style=bold, color=blue];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_67  [key=0, style=solid];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_69  [key=0, style=solid];
m17_67 -> m17_65  [key=0, style=bold, color=blue];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_75  [key=0, style=solid];
m17_74 -> m17_141  [key=0, style=solid];
m17_74 -> m17_43  [key=2, style=dotted];
m17_74 -> m17_72  [key=0, style=bold, color=blue];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_146  [key=2, style=dotted];
m17_91 -> m17_93  [key=1, style=dashed, color=darkseagreen4, label=s1];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_146  [key=2, style=dotted];
m17_95 -> m17_96  [key=0, style=solid];
m17_95 -> m17_148  [key=2, style=dotted];
m17_95 -> m17_97  [key=1, style=dashed, color=darkseagreen4, label=b1];
m17_100 -> m17_101  [key=0, style=solid];
m17_100 -> m17_105  [key=1, style=dashed, color=darkseagreen4, label=date1];
m17_102 -> m17_103  [key=0, style=solid];
m17_102 -> m17_104  [key=0, style=solid];
m17_103 -> m17_105  [key=0, style=solid];
m17_103 -> m17_102  [key=0, style=bold, color=blue];
m17_104 -> m17_105  [key=0, style=solid];
m17_104 -> m17_150  [key=2, style=dotted];
m17_106 -> m17_107  [key=0, style=solid];
m17_106 -> m17_111  [key=1, style=dashed, color=darkseagreen4, label=date1];
m17_108 -> m17_109  [key=0, style=solid];
m17_108 -> m17_110  [key=0, style=solid];
m17_109 -> m17_111  [key=0, style=solid];
m17_109 -> m17_108  [key=0, style=bold, color=blue];
m17_113 -> m17_114  [key=0, style=solid];
m17_113 -> m17_115  [key=0, style=solid];
m17_113 -> m17_112  [key=0, style=bold, color=blue];
m17_115 -> m17_116  [key=0, style=solid];
m17_115 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=bytes1];
m17_115 -> m17_121  [key=1, style=dashed, color=darkseagreen4, label=bytes1];
m17_115 -> m17_114  [key=0, style=bold, color=blue];
m17_116 -> m17_117  [key=0, style=solid];
m17_116 -> m17_119  [key=1, style=dashed, color=darkseagreen4, label=bytes2];
m17_116 -> m17_121  [key=1, style=dashed, color=darkseagreen4, label=bytes2];
m17_123 -> m17_124  [key=0, style=solid];
m17_123 -> m17_125  [key=0, style=solid];
m17_123 -> m17_122  [key=0, style=bold, color=blue];
m17_125 -> m17_126  [key=0, style=solid];
m17_125 -> m17_127  [key=1, style=dashed, color=darkseagreen4, label=guid1];
m17_125 -> m17_124  [key=0, style=bold, color=blue];
m17_126 -> m17_127  [key=0, style=solid];
m17_129 -> m17_130  [key=0, style=solid];
m17_129 -> m17_131  [key=0, style=solid];
m17_131 -> m17_132  [key=0, style=solid];
m17_131 -> m17_133  [key=1, style=dashed, color=darkseagreen4, label=uri1];
m17_131 -> m17_129  [key=0, style=bold, color=blue];
m17_132 -> m17_133  [key=0, style=solid];
m17_135 -> m17_136  [key=0, style=solid];
m17_135 -> m17_137  [key=0, style=solid];
m17_137 -> m17_138  [key=0, style=solid];
m17_137 -> m17_139  [key=1, style=dashed, color=darkseagreen4, label=ts1];
m17_138 -> m17_139  [key=0, style=solid];
m17_140 -> m17_141  [key=0, style=solid];
m17_140 -> m17_160  [key=2, style=dotted];
m17_140 -> m17_161  [key=2, style=dotted];
m17_66 -> m17_141  [key=0, style=solid];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_68  [key=2, style=dotted];
m17_68 -> m17_141  [key=0, style=solid];
m17_72 -> m17_73  [key=0, style=solid];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> m17_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_94 -> m17_95  [key=0, style=solid];
m17_94 -> m17_88  [key=0, style=bold, color=blue];
m17_112 -> m17_113  [key=0, style=solid];
m17_122 -> m17_123  [key=0, style=solid];
m17_128 -> m17_129  [key=0, style=solid];
m17_134 -> m17_135  [key=0, style=solid];
m17_89 -> m17_90  [key=0, style=solid];
m17_90 -> m17_91  [key=0, style=solid];
m17_90 -> m17_95  [key=2, style=dotted];
m17_93 -> m17_141  [key=0, style=solid];
m17_93 -> m17_147  [key=2, style=dotted];
m17_93 -> m17_94  [key=0, style=solid];
m17_101 -> m17_102  [key=0, style=solid];
m17_101 -> m17_100  [key=0, style=bold, color=blue];
m17_105 -> m17_141  [key=0, style=solid];
m17_105 -> m17_151  [key=2, style=dotted];
m17_105 -> m17_104  [key=0, style=bold, color=blue];
m17_107 -> m17_108  [key=0, style=solid];
m17_107 -> m17_106  [key=0, style=bold, color=blue];
m17_114 -> m17_141  [key=0, style=solid];
m17_114 -> m17_154  [key=2, style=dotted];
m17_114 -> m17_115  [key=0, style=solid];
m17_117 -> m17_118  [key=0, style=solid];
m17_117 -> m17_119  [key=0, style=solid];
m17_117 -> m17_116  [key=0, style=bold, color=blue];
m17_121 -> m17_141  [key=0, style=solid];
m17_121 -> m17_155  [key=2, style=dotted];
m17_121 -> m17_120  [key=0, style=bold, color=blue];
m17_120 -> m17_141  [key=0, style=solid];
m17_120 -> m17_121  [key=0, style=solid];
m17_124 -> m17_141  [key=0, style=solid];
m17_124 -> m17_154  [key=2, style=dotted];
m17_124 -> m17_125  [key=0, style=solid];
m17_127 -> m17_141  [key=0, style=solid];
m17_127 -> m17_156  [key=2, style=dotted];
m17_127 -> m17_127  [key=1, style=dashed, color=darkseagreen4, label=guid1];
m17_130 -> m17_141  [key=0, style=solid];
m17_130 -> m17_154  [key=2, style=dotted];
m17_130 -> m17_131  [key=0, style=solid];
m17_133 -> m17_141  [key=0, style=solid];
m17_133 -> m17_157  [key=2, style=dotted];
m17_133 -> m17_158  [key=2, style=dotted];
m17_133 -> m17_132  [key=0, style=bold, color=blue];
m17_136 -> m17_141  [key=0, style=solid];
m17_136 -> m17_154  [key=2, style=dotted];
m17_139 -> m17_141  [key=0, style=solid];
m17_139 -> m17_159  [key=2, style=dotted];
m17_139 -> m17_139  [key=1, style=dashed, color=darkseagreen4, label=ts1];
m17_141 -> m17_64  [key=0, style=bold, color=blue];
m17_438 -> m17_309  [key=2, style=dotted];
m17_438 -> m17_439  [key=0, style=solid];
m17_438 -> m17_441  [key=0, style=solid];
m17_60 -> m17_61  [key=0, style=solid];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_64  [key=2, style=dotted];
m17_63 -> m17_60  [key=0, style=bold, color=blue];
m17_427 -> m17_431  [key=0, style=solid];
m17_427 -> m17_435  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_427 -> m17_424  [key=3, color=darkorchid, style=bold, label="Parameter variable string format"];
m17_427 -> m17_428  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider formatProvider"];
m17_427 -> m17_463  [key=0, style=solid];
m17_431 -> m17_432  [key=0, style=solid];
m17_431 -> m17_433  [key=0, style=solid];
m17_435 -> m17_437  [key=0, style=solid];
m17_435 -> m17_438  [key=2, style=dotted];
m17_435 -> m17_309  [key=2, style=dotted];
m17_435 -> m17_436  [key=0, style=solid];
m17_432 -> m17_437  [key=0, style=solid];
m17_432 -> m17_433  [key=0, style=solid];
m17_432 -> m17_435  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m17_432 -> m17_438  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m17_432 -> m17_440  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m17_432 -> m17_441  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m17_432 -> m17_443  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m17_433 -> m17_434  [key=0, style=solid];
m17_433 -> m17_435  [key=1, style=dashed, color=darkseagreen4, label=formattable];
m17_433 -> m17_311  [key=2, style=dotted];
m17_433 -> m17_381  [key=2, style=dotted];
m17_434 -> m17_435  [key=0, style=solid];
m17_434 -> m17_436  [key=0, style=solid];
m17_434 -> m17_269  [key=2, style=dotted];
m17_436 -> m17_437  [key=0, style=solid];
m17_436 -> m17_269  [key=2, style=dotted];
m17_436 -> m17_381  [key=2, style=dotted];
m17_437 -> m17_427  [key=0, style=bold, color=blue];
m17_437 -> m17_438  [key=0, style=solid];
m17_437 -> m17_466  [key=2, style=dotted];
m17_537 -> m17_711  [key=0, style=solid];
m17_537 -> m17_715  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_716  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_718  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_719  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_721  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_722  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_724  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_725  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_726  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_727  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_537 -> m17_728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_537 -> m17_729  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_537 -> m17_730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_537 -> m17_538  [key=0, style=solid];
m17_715 -> m17_514  [key=2, style=dotted];
m17_715 -> m17_716  [key=0, style=solid];
m17_715 -> m17_727  [key=0, style=solid];
m17_718 -> m17_514  [key=2, style=dotted];
m17_718 -> m17_719  [key=0, style=solid];
m17_721 -> m17_514  [key=2, style=dotted];
m17_721 -> m17_722  [key=0, style=solid];
m17_724 -> m17_514  [key=2, style=dotted];
m17_724 -> m17_725  [key=0, style=solid];
m17_711 -> m17_712  [key=0, style=solid];
m17_711 -> m17_729  [key=0, style=solid];
m17_716 -> m17_536  [key=2, style=dotted];
m17_716 -> m17_717  [key=0, style=solid];
m17_716 -> m17_720  [key=0, style=solid];
m17_716 -> m17_723  [key=0, style=solid];
m17_716 -> m17_726  [key=0, style=solid];
m17_719 -> m17_715  [key=0, style=solid];
m17_719 -> m17_536  [key=2, style=dotted];
m17_719 -> m17_727  [key=1, style=dashed, color=darkseagreen4, label=version];
m17_722 -> m17_715  [key=0, style=solid];
m17_722 -> m17_536  [key=2, style=dotted];
m17_722 -> m17_727  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m17_725 -> m17_715  [key=0, style=solid];
m17_725 -> m17_536  [key=2, style=dotted];
m17_725 -> m17_727  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m17_726 -> m17_567  [key=2, style=dotted];
m17_726 -> m17_731  [key=0, style=solid];
m17_727 -> m17_728  [key=0, style=solid];
m17_727 -> m17_106  [key=2, style=dotted];
m17_728 -> m17_124  [key=2, style=dotted];
m17_728 -> m17_731  [key=0, style=solid];
m17_729 -> m17_571  [key=2, style=dotted];
m17_729 -> m17_536  [key=2, style=dotted];
m17_729 -> m17_730  [key=0, style=solid];
m17_729 -> m17_110  [key=2, style=dotted];
m17_730 -> m17_124  [key=2, style=dotted];
m17_730 -> m17_731  [key=0, style=solid];
m17_714 -> m17_715  [key=0, style=solid];
m17_714 -> m17_727  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m17_717 -> m17_718  [key=0, style=solid];
m17_720 -> m17_721  [key=0, style=solid];
m17_723 -> m17_724  [key=0, style=solid];
m17_712 -> m17_727  [key=1, style=dashed, color=darkseagreen4, label=version];
m17_712 -> m17_713  [key=0, style=solid];
m17_713 -> m17_727  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m17_713 -> m17_714  [key=0, style=solid];
m17_731 -> m17_537  [key=0, style=bold, color=blue];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_6  [key=2, style=dotted];
m17_9 -> m17_11  [key=2, style=dotted];
m17_9 -> m17_8  [key=0, style=bold, color=blue];
m17_10 -> m17_8  [key=0, style=bold, color=blue];
m17_10 -> m17_11  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_13 -> m17_12  [key=0, style=bold, color=blue];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_6  [key=2, style=dotted];
m17_13 -> m17_15  [key=2, style=dotted];
m17_310 -> m17_312  [key=0, style=solid];
m17_310 -> m17_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m17_310 -> m17_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m17_310 -> m17_279  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenType? current"];
m17_310 -> m17_313  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetStringValueType"];
m17_312 -> m17_313  [key=0, style=solid];
m17_312 -> m17_314  [key=0, style=solid];
m17_312 -> m17_325  [key=0, style=solid];
m17_312 -> m17_327  [key=0, style=solid];
m17_312 -> m17_317  [key=0, style=solid];
m17_312 -> m17_319  [key=0, style=solid];
m17_312 -> m17_321  [key=0, style=solid];
m17_312 -> m17_329  [key=0, style=solid];
m17_312 -> m17_331  [key=0, style=solid];
m17_312 -> m17_333  [key=0, style=solid];
m17_312 -> m17_335  [key=0, style=solid];
m17_312 -> m17_337  [key=0, style=solid];
m17_314 -> m17_315  [key=0, style=solid];
m17_314 -> m17_319  [key=0, style=solid];
m17_314 -> m17_316  [key=0, style=solid];
m17_318 -> m17_320  [key=0, style=solid];
m17_318 -> m17_338  [key=0, style=solid];
m17_313 -> m17_320  [key=0, style=solid];
m17_313 -> m17_314  [key=0, style=solid];
m17_315 -> m17_316  [key=0, style=solid];
m17_315 -> m17_338  [key=0, style=solid];
m17_319 -> m17_320  [key=0, style=solid];
m17_316 -> m17_317  [key=0, style=solid];
m17_316 -> m17_338  [key=0, style=solid];
m17_316 -> m17_302  [key=2, style=dotted];
m17_317 -> m17_318  [key=0, style=solid];
m17_320 -> m17_310  [key=0, style=bold, color=blue];
m17_320 -> m17_338  [key=0, style=solid];
m17_389 -> m17_390  [key=0, style=solid];
m17_389 -> m17_391  [key=0, style=solid];
m17_389 -> m17_340  [key=2, style=dotted];
m17_389 -> m17_464  [key=2, style=dotted];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m17_1 -> m17_2  [key=0, style=solid];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_2 -> m17_3  [key=0, style=solid];
m17_414 -> m17_415  [key=0, style=solid];
m17_414 -> m17_66  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetHashCode"];
m17_415 -> m17_416  [key=0, style=solid];
m17_415 -> m17_417  [key=0, style=solid];
m17_415 -> m17_463  [key=0, style=solid];
m17_416 -> m17_418  [key=0, style=solid];
m17_416 -> m17_463  [key=0, style=solid];
m17_416 -> m17_470  [key=2, style=dotted];
m17_417 -> m17_418  [key=0, style=solid];
m17_417 -> m17_396  [key=2, style=dotted];
m17_418 -> m17_414  [key=0, style=bold, color=blue];
m17_418 -> m17_419  [key=0, style=solid];
m17_28 -> m17_29  [key=0, style=solid];
m17_42 -> m17_398  [key=0, style=solid];
m17_42 -> m17_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JValue v2"];
m17_42 -> m17_400  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JValue v2"];
m17_398 -> m17_399  [key=0, style=solid];
m17_398 -> m17_64  [key=2, style=dotted];
m17_398 -> m17_311  [key=2, style=dotted];
m17_398 -> m17_381  [key=2, style=dotted];
m17_399 -> m17_42  [key=0, style=bold, color=blue];
m17_399 -> m17_400  [key=0, style=solid];
m17_399 -> m17_401  [key=0, style=solid];
m17_399 -> m17_465  [key=2, style=dotted];
m17_439 -> m17_440  [key=0, style=solid];
m17_439 -> m17_381  [key=2, style=dotted];
m17_440 -> m17_441  [key=0, style=solid];
m17_440 -> m17_442  [key=2, style=dotted];
m17_440 -> m17_443  [key=2, style=dotted];
m17_440 -> m17_466  [key=2, style=dotted];
m17_441 -> m17_439  [key=0, style=bold, color=blue];
m17_441 -> m17_309  [key=2, style=dotted];
m17_441 -> m17_442  [key=0, style=solid];
m17_441 -> m17_444  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_0  [key=0, style=bold, color=blue];
m17_442 -> m17_381  [key=2, style=dotted];
m17_442 -> m17_443  [key=0, style=solid];
m17_16 -> m17_17  [key=0, style=solid];
m17_17 -> m17_16  [key=0, style=bold, color=blue];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_6  [key=2, style=dotted];
m17_17 -> m17_19  [key=2, style=dotted];
m17_528 -> m17_535  [key=0, style=solid];
m17_528 -> m17_537  [key=2, style=dotted];
m17_528 -> m17_529  [key=0, style=solid];
m17_530 -> m17_535  [key=0, style=solid];
m17_530 -> m17_539  [key=2, style=dotted];
m17_530 -> m17_528  [key=0, style=bold, color=blue];
m17_527 -> m17_528  [key=0, style=solid];
m17_527 -> m17_309  [key=2, style=dotted];
m17_527 -> m17_529  [key=0, style=solid];
m17_527 -> m17_525  [key=0, style=bold, color=blue];
m17_529 -> m17_530  [key=0, style=solid];
m17_529 -> m17_531  [key=0, style=solid];
m17_529 -> m17_538  [key=2, style=dotted];
m17_520 -> m17_535  [key=0, style=solid];
m17_520 -> m17_536  [key=2, style=dotted];
m17_520 -> m17_124  [key=2, style=dotted];
m17_520 -> m17_98  [key=2, style=dotted];
m17_520 -> m17_521  [key=0, style=solid];
m17_522 -> m17_535  [key=0, style=solid];
m17_522 -> m17_536  [key=2, style=dotted];
m17_522 -> m17_124  [key=2, style=dotted];
m17_522 -> m17_100  [key=2, style=dotted];
m17_522 -> m17_523  [key=0, style=solid];
m17_524 -> m17_535  [key=0, style=solid];
m17_524 -> m17_536  [key=2, style=dotted];
m17_524 -> m17_124  [key=2, style=dotted];
m17_524 -> m17_102  [key=2, style=dotted];
m17_524 -> m17_522  [key=0, style=bold, color=blue];
m17_526 -> m17_535  [key=0, style=solid];
m17_526 -> m17_536  [key=2, style=dotted];
m17_526 -> m17_124  [key=2, style=dotted];
m17_526 -> m17_104  [key=2, style=dotted];
m17_526 -> m17_527  [key=0, style=solid];
m17_519 -> m17_520  [key=0, style=solid];
m17_521 -> m17_522  [key=0, style=solid];
m17_521 -> m17_519  [key=0, style=bold, color=blue];
m17_523 -> m17_524  [key=0, style=solid];
m17_525 -> m17_526  [key=0, style=solid];
m17_22 -> m17_20  [key=0, style=bold, color=blue];
m17_22 -> m17_23  [key=0, style=solid];
m17_6 -> m17_7  [key=0, style=solid];
m17_196 -> m17_197  [key=0, style=solid];
m17_196 -> m17_268  [key=0, style=solid];
m17_197 -> m17_196  [key=0, style=bold, color=blue];
m17_197 -> m17_198  [key=0, style=solid];
m17_197 -> m17_220  [key=0, style=solid];
m17_347 -> m17_353  [key=0, style=solid];
m17_347 -> m17_384  [key=2, style=dotted];
m17_169 -> m17_241  [key=0, style=solid];
m17_169 -> m17_170  [key=0, style=solid];
m17_169 -> m17_171  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_169 -> m17_172  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_174  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_175  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_178  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_179  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_180  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_169 -> m17_197  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_198  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_201  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_202  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_203  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_169 -> m17_220  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_221  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_224  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_225  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_226  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_169 -> m17_243  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_244  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_247  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_169 -> m17_249  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ExpressionType"];
m17_169 -> m17_39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Operation"];
m17_169 -> m17_37  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Operation"];
m17_169 -> m17_458  [key=3, color=darkorchid, style=bold, label="Parameter variable object objB"];
m17_169 -> m17_457  [key=3, color=darkorchid, style=bold, label="Parameter variable object result"];
m17_241 -> m17_169  [key=0, style=bold, color=blue];
m17_241 -> m17_242  [key=0, style=solid];
m17_252 -> m17_253  [key=0, style=solid];
m17_253 -> m17_68  [key=2, style=dotted];
m17_253 -> m17_254  [key=0, style=solid];
m17_253 -> m17_268  [key=0, style=solid];
m17_254 -> m17_252  [key=0, style=bold, color=blue];
m17_254 -> m17_255  [key=0, style=solid];
m17_56 -> m17_52  [key=0, style=bold, color=blue];
m17_388 -> m17_389  [key=0, style=solid];
m17_193 -> m17_229  [key=0, style=solid];
m17_193 -> m17_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_193 -> m17_194  [key=0, style=solid];
m17_229 -> m17_233  [key=2, style=dotted];
m17_229 -> m17_230  [key=0, style=solid];
m17_231 -> m17_232  [key=0, style=solid];
m17_230 -> m17_231  [key=0, style=solid];
m17_230 -> m17_268  [key=0, style=solid];
m17_232 -> m17_193  [key=0, style=bold, color=blue];
m17_232 -> m17_233  [key=0, style=solid];
m17_340 -> m17_341  [key=0, style=solid];
m17_340 -> m17_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_341 -> m17_342  [key=0, style=solid];
m17_341 -> m17_345  [key=0, style=solid];
m17_341 -> m17_343  [key=0, style=solid];
m17_342 -> m17_343  [key=0, style=solid];
m17_342 -> m17_345  [key=0, style=solid];
m17_342 -> m17_344  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m17_342 -> m17_382  [key=2, style=dotted];
m17_345 -> m17_346  [key=0, style=solid];
m17_344 -> m17_346  [key=0, style=solid];
m17_344 -> m17_347  [key=2, style=dotted];
m17_344 -> m17_373  [key=0, style=solid];
m17_343 -> m17_342  [key=0, style=solid];
m17_343 -> m17_344  [key=0, style=solid];
m17_343 -> m17_144  [key=2, style=dotted];
m17_343 -> m17_383  [key=2, style=dotted];
m17_346 -> m17_340  [key=0, style=bold, color=blue];
m17_346 -> m17_347  [key=0, style=solid];
m17_346 -> m17_348  [key=0, style=solid];
m17_514 -> m17_515  [key=0, style=solid];
m17_515 -> m17_513  [key=0, style=bold, color=blue];
m17_515 -> m17_759  [key=0, style=solid];
m17_515 -> m17_761  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_515 -> m17_762  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_763  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_764  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_765  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_768  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_515 -> m17_774  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_515 -> m17_775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_777  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_778  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_781  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_785  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_515 -> m17_786  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_443 -> m17_444  [key=0, style=solid];
m17_443 -> m17_466  [key=2, style=dotted];
m17_161 -> m17_162  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_33 -> m17_32  [key=0, style=bold, color=blue];
m17_23 -> m17_22  [key=0, style=bold, color=blue];
m17_170 -> m17_171  [key=0, style=solid];
m17_170 -> m17_174  [key=0, style=solid];
m17_178 -> m17_179  [key=0, style=solid, color=green];
m17_178 -> m17_55  [key=2, style=dotted];
m17_178 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label=i1];
m17_178 -> m17_187  [key=1, style=dashed, color=darkseagreen4, label=i1];
m17_178 -> m17_191  [key=1, style=dashed, color=darkseagreen4, label=i1];
m17_178 -> m17_195  [key=1, style=dashed, color=darkseagreen4, label=i1];
m17_178 -> m17_180  [key=2, style=dotted, color=green];
m17_178 -> m17_181  [key=2, style=dotted, color=green];
m17_179 -> m17_180  [key=0, style=solid];
m17_179 -> m17_55  [key=2, style=dotted];
m17_179 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label=i2];
m17_179 -> m17_187  [key=1, style=dashed, color=darkseagreen4, label=i2];
m17_179 -> m17_191  [key=1, style=dashed, color=darkseagreen4, label=i2];
m17_179 -> m17_195  [key=1, style=dashed, color=darkseagreen4, label=i2];
m17_179 -> m17_177  [key=0, style=bold, color=blue];
m17_198 -> m17_199  [key=0, style=solid];
m17_198 -> m17_201  [key=0, style=solid];
m17_198 -> m17_164  [key=0, style=bold, color=blue];
m17_243 -> m17_244  [key=0, style=solid];
m17_243 -> m17_266  [key=0, style=solid];
m17_244 -> m17_245  [key=0, style=solid];
m17_244 -> m17_247  [key=0, style=solid];
m17_244 -> m17_233  [key=2, style=dotted];
m17_176 -> m17_177  [key=0, style=solid];
m17_177 -> m17_268  [key=0, style=solid];
m17_177 -> m17_178  [key=0, style=solid, color=green];
m17_195 -> m17_196  [key=0, style=solid];
m17_195 -> m17_194  [key=0, style=bold, color=blue];
m17_181 -> m17_182  [key=0, style=solid];
m17_194 -> m17_195  [key=0, style=solid];
m17_199 -> m17_200  [key=0, style=solid];
m17_200 -> m17_268  [key=0, style=solid];
m17_200 -> m17_199  [key=0, style=bold, color=blue];
m17_237 -> m17_238  [key=0, style=solid];
m17_235 -> m17_236  [key=0, style=solid];
m17_235 -> m17_228  [key=0, style=bold, color=blue];
m17_239 -> m17_240  [key=0, style=solid];
m17_228 -> m17_229  [key=0, style=solid];
m17_228 -> m17_234  [key=0, style=solid];
m17_234 -> m17_268  [key=0, style=solid];
m17_234 -> m17_235  [key=0, style=solid];
m17_236 -> m17_237  [key=0, style=solid];
m17_238 -> m17_268  [key=0, style=solid];
m17_242 -> m17_268  [key=0, style=solid];
m17_242 -> m17_243  [key=0, style=solid];
m17_266 -> m17_267  [key=0, style=solid];
m17_266 -> m17_268  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m17_245 -> m17_246  [key=0, style=solid];
m17_246 -> m17_268  [key=0, style=solid];
m17_246 -> m17_242  [key=0, style=bold, color=blue];
m17_256 -> m17_257  [key=0, style=solid];
m17_256 -> m17_265  [key=2, style=dotted];
m17_256 -> m17_258  [key=1, style=dashed, color=darkseagreen4, label=node];
m17_256 -> m17_261  [key=1, style=dashed, color=darkseagreen4, label=node];
m17_260 -> m17_261  [key=0, style=solid];
m17_260 -> m17_269  [key=2, style=dotted];
m17_264 -> m17_265  [key=0, style=solid];
m17_264 -> m17_255  [key=0, style=bold, color=blue];
m17_258 -> m17_259  [key=0, style=solid];
m17_258 -> m17_268  [key=2, style=dotted];
m17_262 -> m17_263  [key=0, style=solid];
m17_262 -> m17_264  [key=0, style=solid];
m17_255 -> m17_256  [key=0, style=solid];
m17_255 -> m17_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_255 -> m17_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_255 -> m17_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_257 -> m17_268  [key=0, style=solid];
m17_257 -> m17_258  [key=0, style=solid];
m17_257 -> m17_266  [key=2, style=dotted];
m17_257 -> m17_267  [key=2, style=dotted];
m17_257 -> m17_261  [key=1, style=dashed, color=darkseagreen4, label=manager];
m17_259 -> m17_260  [key=0, style=solid];
m17_259 -> m17_261  [key=0, style=solid];
m17_261 -> m17_268  [key=0, style=solid];
m17_261 -> m17_262  [key=0, style=solid];
m17_261 -> m17_270  [key=2, style=dotted];
m17_263 -> m17_264  [key=0, style=solid];
m17_263 -> m17_271  [key=2, style=dotted];
m17_265 -> m17_268  [key=0, style=solid];
m17_265 -> m17_272  [key=0, style=solid];
m17_265 -> m17_275  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_265 -> m17_278  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_267 -> m17_268  [key=0, style=solid];
m17_268 -> m17_169  [key=0, style=bold, color=blue];
m17_268 -> m17_282  [key=0, style=solid];
m17_268 -> m17_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_268 -> m17_292  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_268 -> m17_295  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_41 -> m17_34  [key=0, style=bold, color=blue];
m17_55 -> m17_56  [key=0, style=solid];
m17_311 -> m17_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_311 -> m17_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_311 -> m17_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_311 -> m17_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_311 -> m17_312  [key=0, style=solid];
m17_311 -> m17_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_311 -> m17_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_311 -> m17_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_311 -> m17_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_311 -> m17_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_324 -> m17_338  [key=0, style=solid];
m17_324 -> m17_302  [key=2, style=dotted];
m17_324 -> m17_325  [key=0, style=solid];
m17_324 -> m17_327  [key=0, style=solid];
m17_326 -> m17_338  [key=0, style=solid];
m17_326 -> m17_302  [key=2, style=dotted];
m17_326 -> m17_373  [key=0, style=solid];
m17_328 -> m17_338  [key=0, style=solid];
m17_328 -> m17_302  [key=2, style=dotted];
m17_328 -> m17_329  [key=0, style=solid];
m17_322 -> m17_324  [key=0, style=solid];
m17_322 -> m17_323  [key=0, style=solid];
m17_322 -> m17_327  [key=0, style=solid];
m17_325 -> m17_326  [key=0, style=solid];
m17_325 -> m17_376  [key=2, style=dotted];
m17_325 -> m17_377  [key=2, style=dotted];
m17_327 -> m17_328  [key=0, style=solid];
m17_327 -> m17_331  [key=0, style=solid];
m17_327 -> m17_334  [key=0, style=solid];
m17_327 -> m17_337  [key=0, style=solid];
m17_327 -> m17_340  [key=0, style=solid];
m17_327 -> m17_345  [key=0, style=solid];
m17_327 -> m17_354  [key=0, style=solid];
m17_327 -> m17_357  [key=0, style=solid];
m17_327 -> m17_360  [key=0, style=solid];
m17_327 -> m17_365  [key=0, style=solid];
m17_327 -> m17_368  [key=0, style=solid];
m17_323 -> m17_338  [key=0, style=solid];
m17_323 -> m17_324  [key=0, style=solid];
m17_323 -> m17_311  [key=2, style=dotted];
m17_323 -> m17_375  [key=2, style=dotted];
m17_323 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label=matchingConverter];
m17_337 -> m17_338  [key=0, style=solid];
m17_337 -> m17_339  [key=2, style=dotted];
m17_330 -> m17_338  [key=0, style=solid];
m17_330 -> m17_373  [key=0, style=solid];
m17_332 -> m17_338  [key=0, style=solid];
m17_332 -> m17_333  [key=0, style=solid];
m17_332 -> m17_269  [key=2, style=dotted];
m17_332 -> m17_379  [key=2, style=dotted];
m17_334 -> m17_338  [key=0, style=solid];
m17_334 -> m17_335  [key=0, style=solid];
m17_336 -> m17_338  [key=0, style=solid];
m17_336 -> m17_373  [key=0, style=solid];
m17_321 -> m17_322  [key=0, style=solid];
m17_321 -> m17_323  [key=1, style=dashed, color=darkseagreen4, label="params Newtonsoft.Json.JsonConverter[]"];
m17_321 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_321 -> m17_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_329 -> m17_330  [key=0, style=solid];
m17_329 -> m17_269  [key=2, style=dotted];
m17_329 -> m17_378  [key=2, style=dotted];
m17_331 -> m17_332  [key=0, style=solid];
m17_333 -> m17_334  [key=0, style=solid];
m17_333 -> m17_373  [key=0, style=solid];
m17_335 -> m17_336  [key=0, style=solid];
m17_335 -> m17_380  [key=2, style=dotted];
m17_338 -> m17_311  [key=0, style=bold, color=blue];
m17_338 -> m17_339  [key=0, style=solid];
m17_338 -> m17_381  [key=2, style=dotted];
m17_413 -> m17_463  [key=0, style=solid];
m17_413 -> m17_469  [key=2, style=dotted];
m17_168 -> m17_166  [key=0, style=bold, color=blue];
m17_495 -> m17_496  [key=0, style=solid];
m17_495 -> m17_497  [key=0, style=solid];
m17_500 -> m17_503  [key=0, style=solid];
m17_500 -> m17_513  [key=2, style=dotted];
m17_500 -> m17_502  [key=0, style=solid];
m17_502 -> m17_503  [key=0, style=solid];
m17_502 -> m17_515  [key=2, style=dotted];
m17_502 -> m17_498  [key=0, style=bold, color=blue];
m17_493 -> m17_495  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_493 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_493 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_493 -> m17_504  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_493 -> m17_507  [key=1, style=dashed, color=darkseagreen4, label=document];
m17_493 -> m17_494  [key=0, style=solid];
m17_493 -> m17_0  [key=2, style=dotted];
m17_494 -> m17_495  [key=0, style=solid];
m17_494 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m17_494 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m17_494 -> m17_497  [key=0, style=solid];
m17_496 -> m17_508  [key=0, style=solid];
m17_496 -> m17_510  [key=2, style=dotted];
m17_496 -> m17_497  [key=0, style=solid];
m17_496 -> m17_64  [key=2, style=dotted];
m17_497 -> m17_498  [key=0, style=solid];
m17_497 -> m17_499  [key=0, style=solid];
m17_497 -> m17_492  [key=0, style=bold, color=blue];
m17_499 -> m17_500  [key=0, style=solid];
m17_499 -> m17_501  [key=0, style=solid];
m17_499 -> m17_309  [key=2, style=dotted];
m17_501 -> m17_502  [key=0, style=solid];
m17_501 -> m17_514  [key=2, style=dotted];
m17_501 -> m17_64  [key=2, style=dotted];
m17_492 -> m17_493  [key=0, style=solid];
m17_492 -> m17_492  [key=1, style=dashed, color=darkseagreen4, label=d];
m17_492 -> m17_495  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_492 -> m17_68  [key=3, color=darkorchid, style=bold, label="method methodReturn int System.IComparable.CompareTo"];
m17_492 -> m17_64  [key=3, color=darkorchid, style=bold, label="method methodReturn int System.IComparable.CompareTo"];
m17_498 -> m17_508  [key=0, style=solid];
m17_498 -> m17_510  [key=2, style=dotted];
m17_498 -> m17_499  [key=0, style=solid];
m17_498 -> m17_501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_498 -> m17_68  [key=3, color=darkorchid, style=bold, label="method methodReturn int CompareTo"];
m17_498 -> m17_64  [key=3, color=darkorchid, style=bold, label="method methodReturn int CompareTo"];
m17_270 -> m17_271  [key=0, style=solid];
m17_270 -> m17_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_384  [key=0, style=solid];
m17_270 -> m17_391  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_270 -> m17_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_396  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_270 -> m17_397  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_270 -> m17_400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_404  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_413  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_270 -> m17_415  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_270 -> m17_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_428  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_270 -> m17_430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_270 -> m17_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m17_270 -> m17_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_271 -> m17_272  [key=0, style=solid];
m17_271 -> m17_4  [key=2, style=dotted];
m17_272 -> m17_270  [key=0, style=bold, color=blue];
m17_272 -> m17_274  [key=1, style=dashed, color=darkseagreen4, label=xObject];
m17_272 -> m17_273  [key=0, style=solid];
m17_444 -> m17_445  [key=0, style=solid];
m17_444 -> m17_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_444 -> m17_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_444 -> m17_451  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.ConvertBinder"];
m17_444 -> m17_452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m17_444 -> m17_444  [key=3, color=darkorchid, style=bold, label="Parameter variable object result"];
m17_444 -> m17_39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvert"];
m17_444 -> m17_463  [key=0, style=solid];
m17_444 -> m17_271  [key=2, style=dotted];
m17_445 -> m17_446  [key=0, style=solid];
m17_445 -> m17_448  [key=0, style=solid];
m17_446 -> m17_447  [key=0, style=solid];
m17_446 -> m17_449  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m17_446 -> m17_451  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m17_446 -> m17_452  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m17_446 -> m17_454  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m17_446 -> m17_455  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m17_446 -> m17_457  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m17_446 -> m17_458  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m17_446 -> m17_460  [key=1, style=dashed, color=darkseagreen4, label=documentType];
m17_448 -> m17_449  [key=0, style=solid];
m17_448 -> m17_269  [key=2, style=dotted];
m17_451 -> m17_454  [key=0, style=solid];
m17_451 -> m17_455  [key=2, style=dotted];
m17_451 -> m17_452  [key=0, style=solid];
m17_451 -> m17_466  [key=2, style=dotted];
m17_452 -> m17_453  [key=0, style=solid];
m17_452 -> m17_456  [key=2, style=dotted];
m17_452 -> m17_454  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m17_452 -> m17_309  [key=2, style=dotted];
m17_452 -> m17_455  [key=0, style=solid];
m17_447 -> m17_454  [key=0, style=solid];
m17_447 -> m17_448  [key=0, style=solid];
m17_447 -> m17_311  [key=2, style=dotted];
m17_447 -> m17_381  [key=2, style=dotted];
m17_449 -> m17_450  [key=0, style=solid];
m17_449 -> m17_452  [key=0, style=solid];
m17_449 -> m17_309  [key=2, style=dotted];
m17_450 -> m17_451  [key=0, style=solid];
m17_450 -> m17_381  [key=2, style=dotted];
m17_453 -> m17_454  [key=0, style=solid];
m17_453 -> m17_381  [key=2, style=dotted];
m17_454 -> m17_444  [key=0, style=bold, color=blue];
m17_454 -> m17_455  [key=0, style=solid];
m17_454 -> m17_466  [key=2, style=dotted];
m17_573 -> m17_574  [key=0, style=solid];
m17_573 -> m17_582  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_573 -> m17_588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_573 -> m17_575  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_573 -> m17_576  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m17_573 -> m17_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_573 -> m17_581  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_573 -> m17_584  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_573 -> m17_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_573 -> m17_586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_573 -> m17_587  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_573 -> m17_589  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_573 -> m17_590  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_574 -> m17_575  [key=0, style=solid];
m17_574 -> m17_592  [key=2, style=dotted];
m17_574 -> m17_580  [key=1, style=dashed, color=darkseagreen4, label=element];
m17_574 -> m17_584  [key=1, style=dashed, color=darkseagreen4, label=element];
m17_574 -> m17_588  [key=1, style=dashed, color=darkseagreen4, label=element];
m17_582 -> m17_583  [key=0, style=solid];
m17_582 -> m17_595  [key=2, style=dotted];
m17_582 -> m17_584  [key=1, style=dashed, color=darkseagreen4, label=text];
m17_588 -> m17_515  [key=2, style=dotted];
m17_588 -> m17_589  [key=0, style=solid];
m17_575 -> m17_576  [key=0, style=solid];
m17_575 -> m17_124  [key=2, style=dotted];
m17_580 -> m17_576  [key=0, style=solid];
m17_580 -> m17_120  [key=2, style=dotted];
m17_584 -> m17_591  [key=0, style=solid];
m17_584 -> m17_98  [key=2, style=dotted];
m17_584 -> m17_124  [key=2, style=dotted];
m17_581 -> m17_582  [key=0, style=solid];
m17_581 -> m17_585  [key=0, style=solid];
m17_583 -> m17_584  [key=0, style=solid];
m17_583 -> m17_591  [key=0, style=solid];
m17_587 -> m17_588  [key=0, style=solid];
m17_587 -> m17_300  [key=2, style=dotted];
m17_589 -> m17_590  [key=0, style=solid];
m17_589 -> m17_469  [key=2, style=dotted];
m17_579 -> m17_309  [key=2, style=dotted];
m17_579 -> m17_580  [key=0, style=solid];
m17_579 -> m17_579  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m17_579 -> m17_594  [key=2, style=dotted];
m17_579 -> m17_51  [key=2, style=dotted];
m17_579 -> m17_116  [key=2, style=dotted];
m17_576 -> m17_581  [key=0, style=solid];
m17_576 -> m17_577  [key=0, style=solid];
m17_585 -> m17_591  [key=0, style=solid];
m17_585 -> m17_586  [key=0, style=solid];
m17_586 -> m17_587  [key=0, style=solid];
m17_586 -> m17_590  [key=0, style=solid];
m17_590 -> m17_591  [key=0, style=solid];
m17_590 -> m17_596  [key=2, style=dotted];
m17_577 -> m17_579  [key=1, style=dashed, color=darkseagreen4, label=encodedName];
m17_577 -> m17_577  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m17_577 -> m17_578  [key=0, style=solid];
m17_577 -> m17_593  [key=2, style=dotted];
m17_578 -> m17_579  [key=0, style=solid];
m17_578 -> m17_569  [key=2, style=dotted];
m17_578 -> m17_578  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m17_591 -> m17_573  [key=0, style=bold, color=blue];
m17_387 -> m17_463  [key=0, style=solid];
m17_387 -> m17_348  [key=2, style=dotted];
m17_635 -> m17_636  [key=0, style=solid];
m17_635 -> m17_592  [key=2, style=dotted];
m17_635 -> m17_639  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m17_635 -> m17_642  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m17_635 -> m17_644  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m17_639 -> m17_640  [key=0, style=solid];
m17_639 -> m17_517  [key=2, style=dotted];
m17_641 -> m17_642  [key=0, style=solid];
m17_641 -> m17_643  [key=0, style=solid];
m17_642 -> m17_643  [key=0, style=solid];
m17_642 -> m17_649  [key=2, style=dotted];
m17_643 -> m17_644  [key=0, style=solid];
m17_643 -> m17_648  [key=0, style=solid];
m17_647 -> m17_648  [key=0, style=solid];
m17_647 -> m17_649  [key=2, style=dotted];
m17_634 -> m17_635  [key=0, style=solid];
m17_634 -> m17_569  [key=2, style=dotted];
m17_636 -> m17_637  [key=0, style=solid];
m17_636 -> m17_124  [key=2, style=dotted];
m17_644 -> m17_645  [key=0, style=solid];
m17_644 -> m17_648  [key=0, style=solid];
m17_638 -> m17_639  [key=0, style=solid];
m17_638 -> m17_641  [key=0, style=solid];
m17_638 -> m17_514  [key=2, style=dotted];
m17_640 -> m17_643  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_640 -> m17_638  [key=0, style=solid];
m17_640 -> m17_640  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_637 -> m17_643  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_637 -> m17_638  [key=0, style=solid];
m17_637 -> m17_640  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_646 -> m17_647  [key=0, style=solid];
m17_646 -> m17_644  [key=0, style=solid];
m17_645 -> m17_647  [key=1, style=dashed, color=darkseagreen4, label=element];
m17_645 -> m17_646  [key=0, style=solid];
m17_648 -> m17_540  [key=0, style=bold, color=blue];
m17_391 -> m17_392  [key=0, style=solid];
m17_391 -> m17_300  [key=2, style=dotted];
m17_29 -> m17_28  [key=0, style=bold, color=blue];
m17_29 -> m17_30  [key=0, style=solid];
m17_390 -> m17_463  [key=0, style=solid];
m17_390 -> m17_348  [key=2, style=dotted];
m17_424 -> m17_425  [key=0, style=solid];
m17_424 -> m17_427  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToString"];
m17_424 -> m17_463  [key=0, style=solid];
m17_425 -> m17_426  [key=0, style=solid];
m17_425 -> m17_427  [key=2, style=dotted];
m17_425 -> m17_428  [key=0, style=solid];
m17_426 -> m17_424  [key=0, style=bold, color=blue];
m17_426 -> m17_428  [key=0, style=solid];
m17_426 -> m17_427  [key=0, style=solid];
m17_708 -> m17_788  [key=0, style=solid];
m17_708 -> m17_789  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_708 -> m17_792  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_708 -> m17_793  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_788 -> m17_789  [key=0, style=solid];
m17_788 -> m17_795  [key=0, style=solid];
m17_788 -> m17_798  [key=2, style=dotted];
m17_789 -> m17_790  [key=0, style=solid];
m17_789 -> m17_792  [key=0, style=solid];
m17_792 -> m17_793  [key=0, style=solid];
m17_792 -> m17_795  [key=0, style=solid];
m17_793 -> m17_794  [key=0, style=solid];
m17_793 -> m17_799  [key=2, style=dotted];
m17_795 -> m17_797  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m17_795 -> m17_796  [key=0, style=solid];
m17_791 -> m17_797  [key=0, style=solid];
m17_794 -> m17_797  [key=0, style=solid];
m17_796 -> m17_797  [key=0, style=solid];
m17_790 -> m17_791  [key=0, style=solid];
m17_797 -> m17_708  [key=0, style=bold, color=blue];
m17_14 -> m17_12  [key=0, style=bold, color=blue];
m17_14 -> m17_15  [key=0, style=solid];
m17_455 -> m17_309  [key=2, style=dotted];
m17_455 -> m17_456  [key=0, style=solid];
m17_455 -> m17_458  [key=0, style=solid];
m17_800 -> m17_801  [key=0, style=solid];
m17_800 -> m17_803  [key=0, style=solid];
m17_803 -> m17_804  [key=0, style=solid];
m17_802 -> m17_804  [key=0, style=solid];
m17_801 -> m17_800  [key=0, style=solid];
m17_801 -> m17_802  [key=0, style=solid];
m17_804 -> m17_465  [key=0, style=bold, color=blue];
m17_805 -> m17_806  [key=0, style=solid];
m17_805 -> m17_808  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_806 -> m17_509  [key=2, style=dotted];
m17_806 -> m17_807  [key=0, style=solid];
m17_806 -> m17_808  [key=0, style=solid];
m17_808 -> m17_509  [key=2, style=dotted];
m17_808 -> m17_809  [key=0, style=solid];
m17_808 -> m17_810  [key=0, style=solid];
m17_807 -> m17_811  [key=0, style=solid];
m17_809 -> m17_811  [key=0, style=solid];
m17_810 -> m17_811  [key=0, style=solid];
m17_811 -> m17_805  [key=0, style=bold, color=blue];
m17_52 -> m17_53  [key=0, style=solid];
m17_52 -> m17_54  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_52 -> m17_61  [key=2, style=dotted];
m17_52 -> m17_62  [key=2, style=dotted];
m17_52 -> m17_63  [key=2, style=dotted];
m17_53 -> m17_51  [key=2, style=dotted];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_6  [key=2, style=dotted];
m17_53 -> m17_55  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_43  [key=0, style=bold, color=blue];
m17_649 -> m17_650  [key=0, style=solid];
m17_649 -> m17_651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m17_649 -> m17_652  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m17_649 -> m17_653  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m17_650 -> m17_120  [key=2, style=dotted];
m17_650 -> m17_651  [key=0, style=solid];
m17_650 -> m17_118  [key=2, style=dotted];
m17_651 -> m17_654  [key=0, style=solid];
m17_651 -> m17_652  [key=0, style=solid];
m17_652 -> m17_654  [key=0, style=solid];
m17_652 -> m17_653  [key=0, style=solid];
m17_652 -> m17_122  [key=2, style=dotted];
m17_653 -> m17_120  [key=2, style=dotted];
m17_653 -> m17_654  [key=0, style=solid];
m17_653 -> m17_118  [key=2, style=dotted];
m17_654 -> m17_649  [key=0, style=bold, color=blue];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_47  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_43 -> m17_48  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_43 -> m17_50  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_43 -> m17_51  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_43 -> m17_64  [key=3, color=darkorchid, style=bold, label="Parameter variable object i2"];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_55  [key=2, style=dotted];
m17_44 -> m17_56  [key=2, style=dotted];
m17_44 -> m17_46  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_44 -> m17_53  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_44 -> m17_41  [key=2, style=dotted];
m17_44 -> m17_42  [key=2, style=dotted];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_50  [key=0, style=solid];
m17_47 -> m17_51  [key=2, style=dotted];
m17_47 -> m17_6  [key=2, style=dotted];
m17_47 -> m17_49  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m17_48 -> m17_49  [key=0, style=solid];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_53  [key=0, style=solid];
m17_50 -> m17_46  [key=0, style=bold, color=blue];
m17_45 -> m17_46  [key=0, style=solid];
m17_45 -> m17_47  [key=0, style=solid];
m17_45 -> m17_43  [key=0, style=bold, color=blue];
m17_46 -> m17_54  [key=0, style=solid];
m17_46 -> m17_47  [key=0, style=solid];
m17_46 -> m17_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_49 -> m17_54  [key=0, style=solid];
m17_49 -> m17_57  [key=2, style=dotted];
m17_49 -> m17_58  [key=2, style=dotted];
m17_49 -> m17_59  [key=2, style=dotted];
m17_49 -> m17_50  [key=0, style=solid];
m17_397 -> m17_398  [key=0, style=solid];
m17_397 -> m17_399  [key=0, style=solid];
m17_572 -> m17_601  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_572 -> m17_597  [key=0, style=solid];
m17_572 -> m17_598  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_572 -> m17_599  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_572 -> m17_600  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_572 -> m17_602  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m17_601 -> m17_309  [key=2, style=dotted];
m17_601 -> m17_602  [key=0, style=solid];
m17_601 -> m17_594  [key=2, style=dotted];
m17_601 -> m17_51  [key=2, style=dotted];
m17_601 -> m17_116  [key=2, style=dotted];
m17_599 -> m17_601  [key=1, style=dashed, color=darkseagreen4, label=encodedName];
m17_599 -> m17_600  [key=0, style=solid];
m17_599 -> m17_593  [key=2, style=dotted];
m17_600 -> m17_601  [key=0, style=solid];
m17_600 -> m17_536  [key=2, style=dotted];
m17_602 -> m17_120  [key=2, style=dotted];
m17_602 -> m17_603  [key=0, style=solid];
m17_598 -> m17_567  [key=2, style=dotted];
m17_598 -> m17_603  [key=0, style=solid];
m17_598 -> m17_604  [key=2, style=dotted];
m17_597 -> m17_599  [key=0, style=solid];
m17_597 -> m17_598  [key=0, style=solid];
m17_603 -> m17_572  [key=0, style=bold, color=blue];
m17_396 -> m17_392  [key=0, style=solid];
m17_396 -> m17_301  [key=2, style=dotted];
m17_38 -> m17_39  [key=0, style=solid];
m17_38 -> m17_40  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_41  [key=2, style=dotted];
m17_39 -> m17_42  [key=2, style=dotted];
m17_40 -> m17_38  [key=0, style=bold, color=blue];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_42  [key=2, style=dotted];
m17_15 -> m17_14  [key=0, style=bold, color=blue];
m17_273 -> m17_274  [key=0, style=solid];
m17_273 -> m17_275  [key=0, style=solid];
m17_274 -> m17_275  [key=0, style=solid];
m17_274 -> m17_0  [key=2, style=dotted];
m17_274 -> m17_201  [key=2, style=dotted];
m17_274 -> m17_279  [key=0, style=solid];
m17_275 -> m17_273  [key=0, style=bold, color=blue];
m17_275 -> m17_276  [key=0, style=solid];
m17_275 -> m17_277  [key=1, style=dashed, color=darkseagreen4, label=node];
m17_37 -> m17_41  [key=0, style=solid];
m17_428 -> m17_429  [key=0, style=solid];
m17_428 -> m17_427  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToString"];
m17_428 -> m17_430  [key=0, style=solid];
m17_429 -> m17_430  [key=0, style=solid];
m17_429 -> m17_427  [key=2, style=dotted];
m17_429 -> m17_311  [key=2, style=dotted];
m17_429 -> m17_381  [key=2, style=dotted];
m17_430 -> m17_428  [key=0, style=bold, color=blue];
m17_430 -> m17_463  [key=0, style=solid];
m17_430 -> m17_466  [key=2, style=dotted];
m17_392 -> m17_393  [key=0, style=solid];
m17_392 -> m17_397  [key=0, style=solid];
m17_392 -> m17_394  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m17_392 -> m17_395  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m17_393 -> m17_394  [key=0, style=solid];
m17_393 -> m17_396  [key=2, style=dotted];
m17_393 -> m17_392  [key=0, style=solid];
m17_394 -> m17_395  [key=0, style=solid];
m17_394 -> m17_397  [key=2, style=dotted];
m17_394 -> m17_396  [key=1, style=dashed, color=darkseagreen4, label=namespacePrefix];
m17_394 -> m17_310  [key=2, style=dotted];
m17_395 -> m17_392  [key=0, style=bold, color=blue];
m17_395 -> m17_396  [key=0, style=solid];
m17_592 -> m17_754  [key=0, style=solid];
m17_592 -> m17_755  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_592 -> m17_756  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m17_755 -> m17_309  [key=2, style=dotted];
m17_755 -> m17_756  [key=0, style=solid];
m17_755 -> m17_594  [key=2, style=dotted];
m17_756 -> m17_309  [key=2, style=dotted];
m17_756 -> m17_757  [key=0, style=solid];
m17_756 -> m17_114  [key=2, style=dotted];
m17_756 -> m17_112  [key=2, style=dotted];
m17_754 -> m17_755  [key=0, style=solid];
m17_754 -> m17_756  [key=1, style=dashed, color=darkseagreen4, label=encodeName];
m17_754 -> m17_593  [key=2, style=dotted];
m17_757 -> m17_758  [key=0, style=solid];
m17_758 -> m17_592  [key=0, style=bold, color=blue];
m17_385 -> m17_386  [key=0, style=solid];
m17_405 -> m17_406  [key=0, style=solid];
m17_405 -> m17_408  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_405 -> m17_411  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_405 -> m17_37  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m17_405 -> m17_400  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m17_405 -> m17_413  [key=0, style=solid];
m17_405 -> m17_466  [key=2, style=dotted];
m17_406 -> m17_407  [key=0, style=solid];
m17_406 -> m17_408  [key=0, style=solid];
m17_406 -> m17_269  [key=2, style=dotted];
m17_408 -> m17_409  [key=0, style=solid];
m17_408 -> m17_410  [key=1, style=dashed, color=darkseagreen4, label=otherValue];
m17_408 -> m17_411  [key=0, style=solid];
m17_411 -> m17_412  [key=0, style=solid];
m17_411 -> m17_413  [key=2, style=dotted];
m17_411 -> m17_348  [key=2, style=dotted];
m17_407 -> m17_412  [key=0, style=solid];
m17_407 -> m17_409  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_407 -> m17_408  [key=0, style=solid];
m17_407 -> m17_410  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_409 -> m17_410  [key=0, style=solid];
m17_409 -> m17_411  [key=0, style=solid];
m17_409 -> m17_270  [key=2, style=dotted];
m17_410 -> m17_412  [key=0, style=solid];
m17_410 -> m17_400  [key=2, style=dotted];
m17_410 -> m17_408  [key=0, style=solid];
m17_410 -> m17_410  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_412 -> m17_405  [key=0, style=bold, color=blue];
m17_412 -> m17_413  [key=0, style=solid];
m17_412 -> m17_271  [key=2, style=dotted];
m17_423 -> m17_424  [key=0, style=solid];
m17_423 -> m17_425  [key=0, style=solid];
m17_423 -> m17_419  [key=0, style=bold, color=blue];
m17_456 -> m17_381  [key=2, style=dotted];
m17_456 -> m17_457  [key=0, style=solid];
m17_422 -> m17_423  [key=0, style=solid];
m17_422 -> m17_269  [key=2, style=dotted];
m17_421 -> m17_422  [key=0, style=solid];
m17_421 -> m17_423  [key=0, style=solid];
m17_419 -> m17_420  [key=0, style=solid];
m17_420 -> m17_421  [key=0, style=solid];
m17_420 -> m17_422  [key=0, style=solid];
m17_568 -> m17_670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_655  [key=0, style=solid];
m17_568 -> m17_658  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_669  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_674  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_568 -> m17_682  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_568 -> m17_685  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_568 -> m17_689  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m17_568 -> m17_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_694  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_695  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_696  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_568 -> m17_705  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m17_670 -> m17_671  [key=0, style=solid];
m17_670 -> m17_595  [key=2, style=dotted];
m17_670 -> m17_674  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
m17_673 -> m17_674  [key=0, style=solid];
m17_673 -> m17_659  [key=0, style=solid];
m17_673 -> m17_708  [key=2, style=dotted];
m17_669 -> m17_670  [key=0, style=solid];
m17_669 -> m17_514  [key=2, style=dotted];
m17_671 -> m17_672  [key=0, style=solid];
m17_671 -> m17_380  [key=2, style=dotted];
m17_674 -> m17_659  [key=0, style=solid];
m17_674 -> m17_301  [key=2, style=dotted];
m17_668 -> m17_673  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_668 -> m17_669  [key=0, style=solid];
m17_668 -> m17_671  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_668 -> m17_668  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_668 -> m17_571  [key=2, style=dotted];
m17_668 -> m17_676  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_668 -> m17_690  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_668 -> m17_692  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_672 -> m17_673  [key=0, style=solid];
m17_659 -> m17_514  [key=2, style=dotted];
m17_659 -> m17_660  [key=0, style=solid];
m17_659 -> m17_706  [key=0, style=solid];
m17_663 -> m17_309  [key=2, style=dotted];
m17_663 -> m17_664  [key=0, style=solid];
m17_663 -> m17_700  [key=0, style=solid];
m17_693 -> m17_514  [key=2, style=dotted];
m17_693 -> m17_694  [key=0, style=solid];
m17_655 -> m17_671  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m17_655 -> m17_656  [key=0, style=solid];
m17_655 -> m17_378  [key=2, style=dotted];
m17_655 -> m17_688  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m17_655 -> m17_697  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m17_655 -> m17_706  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m17_658 -> m17_659  [key=0, style=solid];
m17_658 -> m17_706  [key=0, style=solid];
m17_660 -> m17_661  [key=0, style=solid];
m17_660 -> m17_701  [key=0, style=solid];
m17_660 -> m17_703  [key=0, style=solid];
m17_660 -> m17_705  [key=0, style=solid];
m17_662 -> m17_668  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_662 -> m17_663  [key=0, style=solid];
m17_662 -> m17_536  [key=2, style=dotted];
m17_662 -> m17_664  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_682 -> m17_308  [key=2, style=dotted];
m17_682 -> m17_683  [key=0, style=solid];
m17_682 -> m17_697  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m17_685 -> m17_686  [key=0, style=solid];
m17_685 -> m17_687  [key=0, style=solid];
m17_685 -> m17_594  [key=2, style=dotted];
m17_689 -> m17_690  [key=0, style=solid];
m17_689 -> m17_301  [key=2, style=dotted];
m17_694 -> m17_695  [key=0, style=solid];
m17_694 -> m17_696  [key=0, style=solid];
m17_694 -> m17_710  [key=2, style=dotted];
m17_695 -> m17_567  [key=2, style=dotted];
m17_695 -> m17_707  [key=0, style=solid];
m17_696 -> m17_536  [key=2, style=dotted];
m17_696 -> m17_697  [key=0, style=solid];
m17_705 -> m17_567  [key=2, style=dotted];
m17_705 -> m17_707  [key=0, style=solid];
m17_667 -> m17_668  [key=0, style=solid];
m17_676 -> m17_677  [key=0, style=solid];
m17_676 -> m17_698  [key=0, style=solid];
m17_690 -> m17_691  [key=0, style=solid];
m17_690 -> m17_692  [key=0, style=solid];
m17_692 -> m17_571  [key=2, style=dotted];
m17_692 -> m17_693  [key=0, style=solid];
m17_692 -> m17_692  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_692 -> m17_697  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m17_656 -> m17_659  [key=1, style=dashed, color=darkseagreen4, label=finishedAttributes];
m17_656 -> m17_657  [key=0, style=solid];
m17_697 -> m17_659  [key=0, style=solid];
m17_697 -> m17_380  [key=2, style=dotted];
m17_657 -> m17_659  [key=1, style=dashed, color=darkseagreen4, label=finishedElement];
m17_657 -> m17_658  [key=0, style=solid];
m17_700 -> m17_659  [key=0, style=solid];
m17_699 -> m17_659  [key=0, style=solid];
m17_698 -> m17_659  [key=0, style=solid];
m17_691 -> m17_659  [key=0, style=solid];
m17_702 -> m17_659  [key=0, style=solid];
m17_704 -> m17_659  [key=0, style=solid];
m17_706 -> m17_707  [key=0, style=solid];
m17_664 -> m17_665  [key=0, style=solid];
m17_664 -> m17_666  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_688 -> m17_380  [key=2, style=dotted];
m17_688 -> m17_689  [key=0, style=solid];
m17_661 -> m17_662  [key=0, style=solid];
m17_701 -> m17_702  [key=0, style=solid];
m17_703 -> m17_704  [key=0, style=solid];
m17_681 -> m17_682  [key=0, style=solid];
m17_683 -> m17_690  [key=0, style=solid];
m17_683 -> m17_684  [key=0, style=solid];
m17_684 -> m17_685  [key=0, style=solid];
m17_684 -> m17_686  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_684 -> m17_687  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_686 -> m17_685  [key=0, style=solid];
m17_686 -> m17_686  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_686 -> m17_709  [key=2, style=dotted];
m17_686 -> m17_687  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_687 -> m17_689  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m17_687 -> m17_697  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m17_687 -> m17_688  [key=0, style=solid];
m17_666 -> m17_667  [key=0, style=solid];
m17_666 -> m17_699  [key=0, style=solid];
m17_666 -> m17_675  [key=0, style=solid];
m17_675 -> m17_676  [key=0, style=solid];
m17_677 -> m17_678  [key=0, style=solid];
m17_665 -> m17_666  [key=0, style=solid];
m17_680 -> m17_681  [key=0, style=solid];
m17_678 -> m17_679  [key=0, style=solid];
m17_679 -> m17_680  [key=0, style=solid];
m17_707 -> m17_568  [key=0, style=bold, color=blue];
m17_768 -> m17_769  [key=0, style=solid];
m17_768 -> m17_517  [key=2, style=dotted];
m17_770 -> m17_771  [key=0, style=solid];
m17_770 -> m17_786  [key=0, style=solid];
m17_774 -> m17_786  [key=0, style=solid];
m17_774 -> m17_649  [key=2, style=dotted];
m17_775 -> m17_786  [key=0, style=solid];
m17_775 -> m17_517  [key=2, style=dotted];
m17_779 -> m17_778  [key=0, style=solid];
m17_779 -> m17_517  [key=2, style=dotted];
m17_786 -> m17_515  [key=0, style=solid];
m17_786 -> m17_514  [key=2, style=dotted];
m17_786 -> m17_787  [key=0, style=solid];
m17_759 -> m17_760  [key=0, style=solid];
m17_759 -> m17_776  [key=0, style=solid];
m17_759 -> m17_780  [key=0, style=solid];
m17_759 -> m17_782  [key=0, style=solid];
m17_759 -> m17_785  [key=0, style=solid];
m17_761 -> m17_762  [key=0, style=solid];
m17_761 -> m17_763  [key=0, style=solid];
m17_762 -> m17_787  [key=0, style=solid];
m17_762 -> m17_567  [key=2, style=dotted];
m17_763 -> m17_768  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m17_763 -> m17_775  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m17_763 -> m17_764  [key=0, style=solid];
m17_763 -> m17_536  [key=2, style=dotted];
m17_763 -> m17_773  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m17_764 -> m17_514  [key=2, style=dotted];
m17_764 -> m17_765  [key=0, style=solid];
m17_765 -> m17_775  [key=0, style=solid];
m17_765 -> m17_766  [key=0, style=solid];
m17_767 -> m17_768  [key=0, style=solid];
m17_767 -> m17_770  [key=0, style=solid];
m17_767 -> m17_514  [key=2, style=dotted];
m17_771 -> m17_786  [key=0, style=solid];
m17_771 -> m17_772  [key=0, style=solid];
m17_777 -> m17_779  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m17_777 -> m17_778  [key=0, style=solid];
m17_777 -> m17_536  [key=2, style=dotted];
m17_778 -> m17_779  [key=0, style=solid];
m17_778 -> m17_514  [key=2, style=dotted];
m17_778 -> m17_786  [key=0, style=solid];
m17_781 -> m17_786  [key=0, style=solid];
m17_781 -> m17_96  [key=2, style=dotted];
m17_781 -> m17_124  [key=2, style=dotted];
m17_785 -> m17_787  [key=0, style=solid];
m17_785 -> m17_567  [key=2, style=dotted];
m17_769 -> m17_770  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_769 -> m17_767  [key=0, style=solid];
m17_769 -> m17_769  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_766 -> m17_770  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_766 -> m17_767  [key=0, style=solid];
m17_766 -> m17_769  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_773 -> m17_774  [key=0, style=solid];
m17_773 -> m17_771  [key=0, style=solid];
m17_772 -> m17_774  [key=1, style=dashed, color=darkseagreen4, label=element];
m17_772 -> m17_773  [key=0, style=solid];
m17_784 -> m17_787  [key=0, style=solid];
m17_760 -> m17_761  [key=0, style=solid];
m17_776 -> m17_777  [key=0, style=solid];
m17_780 -> m17_781  [key=0, style=solid];
m17_782 -> m17_783  [key=0, style=solid];
m17_783 -> m17_784  [key=0, style=solid];
m17_787 -> m17_515  [key=0, style=bold, color=blue];
m17_821 -> m17_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XObjectWrapper"];
m17_818 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentTypeWrapper"];
m17_823 -> m17_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_582  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_642  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_643  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_768  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_770  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_774  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_823 -> m17_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m17_812 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_812 -> m17_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m17_813 -> m17_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m17_813 -> m17_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m17_813 -> m17_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m17_814 -> m17_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper"];
m17_815 -> m17_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper"];
m17_816 -> m17_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m17_816 -> m17_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m17_816 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m17_816 -> m17_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m17_822 -> m17_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m17_822 -> m17_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m17_822 -> m17_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m17_822 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m17_822 -> m17_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m17_820 -> m17_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XContainerWrapper"];
m17_820 -> m17_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XContainerWrapper"];
m17_819 -> m17_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentWrapper"];
m17_819 -> m17_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentWrapper"];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_22  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_23  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_24  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_25  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_22  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_26  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_27  [key=2, style=dotted];
m18_10 -> m18_28  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_29  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_22  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid, color=red];
m18_15 -> m18_30  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid, color=red];
m18_16 -> m18_31  [key=2, style=dotted, color=red];
m18_16 -> m18_19  [key=1, style=dashed, color=red, label=v6];
m18_17 -> m18_18  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_32  [key=2, style=dotted];
m18_18 -> m18_29  [key=2, style=dotted];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_33  [key=2, style=dotted];
m18_20 -> m18_29  [key=2, style=dotted];
m18_21 -> m18_0  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid, color=green];
m19_1 -> m19_2  [key=0, style=solid, color=green];
m19_1 -> m19_9  [key=2, style=dotted];
m19_1 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label=stringComparisons];
m19_2 -> m19_3  [key=0, style=solid, color=green];
m19_2 -> m19_8  [key=2, style=dotted, color=green];
m19_2 -> m19_10  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid, color=green];
m19_3 -> m19_11  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid, color=green];
m19_4 -> m19_9  [key=2, style=dotted, color=green];
m19_4 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=jsonWithConverter];
m19_4 -> m19_12  [key=2, style=dotted];
m19_4 -> m19_13  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid, color=green];
m19_5 -> m19_11  [key=2, style=dotted, color=green];
m19_6 -> m19_7  [key=0, style=solid, color=green];
m19_6 -> m19_11  [key=2, style=dotted, color=green];
m19_6 -> m19_12  [key=2, style=dotted];
m19_6 -> m19_14  [key=2, style=dotted];
m19_7 -> m19_0  [key=0, style=bold, color=blue];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_15  [key=2, style=dotted];
m19_7 -> m19_16  [key=2, style=dotted];
m19_7 -> m19_11  [key=2, style=dotted];
m19_7 -> m19_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_8 -> m19_0  [key=0, style=bold, color=blue];
m19_17 -> m19_18  [key=0, style=solid];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_20  [key=2, style=dotted];
m19_19 -> m19_17  [key=0, style=bold, color=blue];
m22_12 -> m22_13  [key=0, style=solid];
m22_13 -> m22_14  [key=0, style=solid];
m22_13 -> m22_15  [key=2, style=dotted];
m22_14 -> m22_12  [key=0, style=bold, color=blue];
m22_249 -> m22_250  [key=0, style=solid];
m22_250 -> m22_251  [key=0, style=solid];
m22_251 -> m22_249  [key=0, style=bold, color=blue];
m22_8 -> m22_9  [key=0, style=solid];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_11  [key=2, style=dotted];
m22_10 -> m22_8  [key=0, style=bold, color=blue];
m22_64 -> m22_65  [key=0, style=solid];
m22_65 -> m22_66  [key=0, style=solid];
m22_66 -> m22_64  [key=0, style=bold, color=blue];
m22_139 -> m22_140  [key=0, style=solid];
m22_142 -> m22_63  [key=2, style=dotted];
m22_142 -> m22_143  [key=0, style=solid];
m22_143 -> m22_63  [key=2, style=dotted];
m22_143 -> m22_144  [key=0, style=solid];
m22_144 -> m22_63  [key=2, style=dotted];
m22_144 -> m22_145  [key=0, style=solid];
m22_141 -> m22_142  [key=0, style=solid];
m22_141 -> m22_143  [key=1, style=dashed, color=darkseagreen4, label=account];
m22_141 -> m22_144  [key=1, style=dashed, color=darkseagreen4, label=account];
m22_141 -> m22_62  [key=2, style=dotted];
m22_140 -> m22_141  [key=0, style=solid];
m22_140 -> m22_140  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_145 -> m22_139  [key=0, style=bold, color=blue];
m22_225 -> m22_226  [key=0, style=solid];
m22_227 -> m22_63  [key=2, style=dotted];
m22_227 -> m22_228  [key=0, style=solid];
m22_228 -> m22_63  [key=2, style=dotted];
m22_228 -> m22_229  [key=0, style=solid];
m22_229 -> m22_63  [key=2, style=dotted];
m22_229 -> m22_230  [key=0, style=solid];
m22_229 -> m22_220  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_230 -> m22_63  [key=2, style=dotted];
m22_230 -> m22_231  [key=0, style=solid];
m22_226 -> m22_227  [key=0, style=solid];
m22_226 -> m22_228  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_226 -> m22_229  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_226 -> m22_230  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_226 -> m22_62  [key=2, style=dotted];
m22_231 -> m22_225  [key=0, style=bold, color=blue];
m22_176 -> m22_177  [key=0, style=solid];
m22_181 -> m22_63  [key=2, style=dotted];
m22_181 -> m22_181  [key=3, color=darkorchid, style=bold, label="Local variable int maxDepth"];
m22_181 -> m22_182  [key=0, style=solid];
m22_179 -> m22_63  [key=2, style=dotted];
m22_179 -> m22_180  [key=0, style=solid];
m22_180 -> m22_181  [key=0, style=solid];
m22_180 -> m22_180  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m22_178 -> m22_95  [key=2, style=dotted];
m22_178 -> m22_179  [key=0, style=solid];
m22_178 -> m22_96  [key=2, style=dotted];
m22_178 -> m22_180  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_177 -> m22_178  [key=0, style=solid];
m22_177 -> m22_168  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_182 -> m22_176  [key=0, style=bold, color=blue];
m22_122 -> m22_123  [key=0, style=solid];
m22_125 -> m22_63  [key=2, style=dotted];
m22_125 -> m22_126  [key=0, style=solid];
m22_126 -> m22_63  [key=2, style=dotted];
m22_126 -> m22_127  [key=0, style=solid];
m22_127 -> m22_63  [key=2, style=dotted];
m22_127 -> m22_128  [key=0, style=solid];
m22_128 -> m22_63  [key=2, style=dotted];
m22_128 -> m22_129  [key=0, style=solid];
m22_129 -> m22_63  [key=2, style=dotted];
m22_129 -> m22_130  [key=0, style=solid];
m22_130 -> m22_63  [key=2, style=dotted];
m22_130 -> m22_131  [key=0, style=solid];
m22_131 -> m22_63  [key=2, style=dotted];
m22_131 -> m22_132  [key=0, style=solid];
m22_134 -> m22_63  [key=2, style=dotted];
m22_134 -> m22_135  [key=0, style=solid];
m22_124 -> m22_125  [key=0, style=solid];
m22_124 -> m22_126  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_124 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_124 -> m22_128  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_124 -> m22_129  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_124 -> m22_130  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_124 -> m22_131  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_124 -> m22_134  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_124 -> m22_62  [key=2, style=dotted];
m22_124 -> m22_132  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_124 -> m22_133  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_132 -> m22_133  [key=0, style=solid];
m22_132 -> m22_119  [key=2, style=dotted];
m22_132 -> m22_120  [key=2, style=dotted];
m22_132 -> m22_121  [key=2, style=dotted];
m22_133 -> m22_134  [key=0, style=solid];
m22_133 -> m22_119  [key=2, style=dotted];
m22_133 -> m22_120  [key=2, style=dotted];
m22_133 -> m22_121  [key=2, style=dotted];
m22_123 -> m22_124  [key=0, style=solid];
m22_123 -> m22_123  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_135 -> m22_122  [key=0, style=bold, color=blue];
m22_155 -> m22_156  [key=0, style=solid];
m22_157 -> m22_63  [key=2, style=dotted];
m22_157 -> m22_158  [key=0, style=solid];
m22_156 -> m22_157  [key=0, style=solid];
m22_156 -> m22_78  [key=2, style=dotted];
m22_156 -> m22_159  [key=2, style=dotted];
m22_156 -> m22_89  [key=2, style=dotted];
m22_158 -> m22_155  [key=0, style=bold, color=blue];
m22_232 -> m22_233  [key=0, style=solid];
m22_234 -> m22_63  [key=2, style=dotted];
m22_234 -> m22_235  [key=0, style=solid];
m22_235 -> m22_63  [key=2, style=dotted];
m22_235 -> m22_236  [key=0, style=solid];
m22_236 -> m22_63  [key=2, style=dotted];
m22_236 -> m22_237  [key=0, style=solid];
m22_237 -> m22_63  [key=2, style=dotted];
m22_237 -> m22_238  [key=0, style=solid];
m22_238 -> m22_63  [key=2, style=dotted];
m22_238 -> m22_239  [key=0, style=solid];
m22_233 -> m22_234  [key=0, style=solid];
m22_233 -> m22_235  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_233 -> m22_236  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_233 -> m22_237  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_233 -> m22_238  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_233 -> m22_62  [key=2, style=dotted];
m22_239 -> m22_232  [key=0, style=bold, color=blue];
m22_300 -> m22_301  [key=0, style=solid];
m22_301 -> m22_300  [key=0, style=bold, color=blue];
m22_258 -> m22_259  [key=0, style=solid];
m22_260 -> m22_63  [key=2, style=dotted];
m22_260 -> m22_261  [key=0, style=solid];
m22_259 -> m22_260  [key=0, style=solid];
m22_259 -> m22_249  [key=2, style=dotted];
m22_259 -> m22_89  [key=2, style=dotted];
m22_261 -> m22_258  [key=0, style=bold, color=blue];
m22_213 -> m22_214  [key=0, style=solid];
m22_216 -> m22_63  [key=2, style=dotted];
m22_216 -> m22_217  [key=0, style=solid];
m22_215 -> m22_216  [key=0, style=solid];
m22_215 -> m22_89  [key=2, style=dotted];
m22_214 -> m22_78  [key=2, style=dotted];
m22_214 -> m22_215  [key=0, style=solid];
m22_214 -> m22_218  [key=2, style=dotted];
m22_217 -> m22_213  [key=0, style=bold, color=blue];
m22_164 -> m22_165  [key=0, style=solid];
m22_173 -> m22_174  [key=0, style=solid, color=green];
m22_173 -> m22_63  [key=2, style=dotted, color=green];
m22_171 -> m22_173  [key=1, style=dashed, color=green, label=bizzaroC2];
m22_171 -> m22_172  [key=0, style=solid];
m22_172 -> m22_173  [key=0, style=solid, color=green];
m22_172 -> m22_63  [key=2, style=dotted];
m22_169 -> m22_171  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_169 -> m22_172  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_169 -> m22_95  [key=2, style=dotted];
m22_169 -> m22_170  [key=0, style=solid];
m22_169 -> m22_96  [key=2, style=dotted];
m22_170 -> m22_171  [key=0, style=solid];
m22_170 -> m22_63  [key=2, style=dotted];
m22_167 -> m22_95  [key=2, style=dotted];
m22_167 -> m22_175  [key=2, style=dotted];
m22_167 -> m22_169  [key=1, style=dashed, color=darkseagreen4, label=json];
m22_167 -> m22_168  [key=0, style=solid];
m22_168 -> m22_169  [key=0, style=solid];
m22_168 -> m22_61  [key=2, style=dotted];
m22_165 -> m22_150  [key=2, style=dotted];
m22_165 -> m22_78  [key=2, style=dotted];
m22_165 -> m22_167  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_165 -> m22_166  [key=0, style=solid];
m22_166 -> m22_167  [key=0, style=solid];
m22_174 -> m22_164  [key=0, style=bold, color=blue];
m22_160 -> m22_161  [key=0, style=solid];
m22_162 -> m22_63  [key=2, style=dotted];
m22_162 -> m22_163  [key=0, style=solid];
m22_161 -> m22_162  [key=0, style=solid];
m22_161 -> m22_62  [key=2, style=dotted];
m22_163 -> m22_160  [key=0, style=bold, color=blue];
m22_203 -> m22_204  [key=0, style=solid];
m22_206 -> m22_63  [key=2, style=dotted];
m22_206 -> m22_207  [key=0, style=solid];
m22_207 -> m22_63  [key=2, style=dotted];
m22_207 -> m22_208  [key=0, style=solid];
m22_208 -> m22_63  [key=2, style=dotted];
m22_208 -> m22_209  [key=0, style=solid];
m22_210 -> m22_63  [key=2, style=dotted];
m22_210 -> m22_211  [key=0, style=solid];
m22_205 -> m22_206  [key=0, style=solid];
m22_205 -> m22_207  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_205 -> m22_208  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_205 -> m22_62  [key=2, style=dotted];
m22_205 -> m22_209  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_209 -> m22_210  [key=0, style=solid];
m22_209 -> m22_211  [key=1, style=dashed, color=darkseagreen4, label=o];
m22_211 -> m22_212  [key=0, style=solid];
m22_211 -> m22_118  [key=2, style=dotted];
m22_211 -> m22_120  [key=2, style=dotted];
m22_211 -> m22_121  [key=2, style=dotted];
m22_204 -> m22_205  [key=0, style=solid];
m22_204 -> m22_204  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_212 -> m22_203  [key=0, style=bold, color=blue];
m22_24 -> m22_25  [key=0, style=solid];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_27  [key=2, style=dotted];
m22_26 -> m22_24  [key=0, style=bold, color=blue];
m22_280 -> m22_281  [key=0, style=solid];
m22_288 -> m22_63  [key=2, style=dotted];
m22_288 -> m22_289  [key=0, style=solid];
m22_289 -> m22_63  [key=2, style=dotted];
m22_289 -> m22_290  [key=0, style=solid];
m22_287 -> m22_63  [key=2, style=dotted];
m22_287 -> m22_288  [key=0, style=solid];
m22_285 -> m22_288  [key=1, style=dashed, color=darkseagreen4, label=deserialize];
m22_285 -> m22_289  [key=1, style=dashed, color=darkseagreen4, label=deserialize];
m22_285 -> m22_286  [key=0, style=solid];
m22_285 -> m22_297  [key=2, style=dotted];
m22_285 -> m22_298  [key=2, style=dotted];
m22_285 -> m22_299  [key=2, style=dotted];
m22_286 -> m22_287  [key=0, style=solid];
m22_281 -> m22_285  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m22_281 -> m22_282  [key=0, style=solid];
m22_281 -> m22_291  [key=2, style=dotted];
m22_281 -> m22_283  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m22_284 -> m22_285  [key=0, style=solid];
m22_284 -> m22_295  [key=2, style=dotted];
m22_284 -> m22_296  [key=2, style=dotted];
m22_282 -> m22_284  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m22_282 -> m22_292  [key=2, style=dotted];
m22_282 -> m22_283  [key=0, style=solid];
m22_283 -> m22_284  [key=0, style=solid];
m22_283 -> m22_294  [key=2, style=dotted];
m22_283 -> m22_293  [key=2, style=dotted];
m22_290 -> m22_280  [key=0, style=bold, color=blue];
m22_266 -> m22_267  [key=0, style=solid];
m22_269 -> m22_63  [key=2, style=dotted];
m22_269 -> m22_270  [key=0, style=solid];
m22_270 -> m22_63  [key=2, style=dotted];
m22_270 -> m22_271  [key=0, style=solid];
m22_268 -> m22_269  [key=0, style=solid];
m22_267 -> m22_268  [key=0, style=solid];
m22_267 -> m22_271  [key=0, style=solid];
m22_267 -> m22_62  [key=2, style=dotted];
m22_271 -> m22_266  [key=0, style=bold, color=blue];
m22_28 -> m22_29  [key=0, style=solid];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_31  [key=2, style=dotted];
m22_30 -> m22_28  [key=0, style=bold, color=blue];
m22_302 -> m22_303  [key=0, style=solid];
m22_310 -> m22_63  [key=2, style=dotted];
m22_310 -> m22_311  [key=0, style=solid];
m22_311 -> m22_63  [key=2, style=dotted];
m22_311 -> m22_312  [key=0, style=solid];
m22_309 -> m22_63  [key=2, style=dotted];
m22_309 -> m22_310  [key=0, style=solid];
m22_306 -> m22_207  [key=3, color=darkorchid, style=bold, label="Field variable int _position"];
m22_306 -> m22_307  [key=0, style=solid];
m22_306 -> m22_295  [key=2, style=dotted];
m22_306 -> m22_296  [key=2, style=dotted];
m22_307 -> m22_310  [key=1, style=dashed, color=darkseagreen4, label=deserialize];
m22_307 -> m22_311  [key=1, style=dashed, color=darkseagreen4, label=deserialize];
m22_307 -> m22_307  [key=3, color=darkorchid, style=bold, label="Field variable string element"];
m22_307 -> m22_308  [key=0, style=solid];
m22_307 -> m22_297  [key=2, style=dotted];
m22_307 -> m22_298  [key=2, style=dotted];
m22_307 -> m22_299  [key=2, style=dotted];
m22_308 -> m22_309  [key=0, style=solid];
m22_304 -> m22_306  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m22_304 -> m22_305  [key=0, style=solid];
m22_304 -> m22_292  [key=2, style=dotted];
m22_305 -> m22_306  [key=0, style=solid];
m22_305 -> m22_300  [key=2, style=dotted];
m22_305 -> m22_294  [key=2, style=dotted];
m22_303 -> m22_307  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m22_303 -> m22_304  [key=0, style=solid];
m22_303 -> m22_305  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m22_303 -> m22_291  [key=2, style=dotted];
m22_312 -> m22_302  [key=0, style=bold, color=blue];
m22_262 -> m22_263  [key=0, style=solid];
m22_264 -> m22_63  [key=2, style=dotted];
m22_264 -> m22_265  [key=0, style=solid];
m22_263 -> m22_264  [key=0, style=solid];
m22_263 -> m22_62  [key=2, style=dotted];
m22_265 -> m22_262  [key=0, style=bold, color=blue];
m22_97 -> m22_98  [key=0, style=solid];
m22_102 -> m22_63  [key=2, style=dotted];
m22_102 -> m22_103  [key=0, style=solid];
m22_101 -> m22_102  [key=0, style=solid];
m22_101 -> m22_89  [key=2, style=dotted];
m22_99 -> m22_101  [key=1, style=dashed, color=darkseagreen4, label=invoice];
m22_99 -> m22_62  [key=2, style=dotted];
m22_99 -> m22_100  [key=0, style=solid];
m22_100 -> m22_101  [key=0, style=solid];
m22_98 -> m22_99  [key=0, style=solid];
m22_98 -> m22_98  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_103 -> m22_97  [key=0, style=bold, color=blue];
m22_190 -> m22_191  [key=0, style=solid, color=green];
m22_190 -> m22_190  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m22_191 -> m22_184  [key=3, color=green, style=bold, label="Local variable string json"];
m22_191 -> m22_192  [key=0, style=solid, color=green];
m22_191 -> m22_181  [key=3, color=green, style=bold, label="Local variable int maxDepth"];
m22_192 -> m22_193  [key=0, style=solid];
m22_192 -> m22_95  [key=2, style=dotted];
m22_192 -> m22_96  [key=2, style=dotted];
m22_192 -> m22_194  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_193 -> m22_63  [key=2, style=dotted];
m22_193 -> m22_194  [key=0, style=solid];
m22_195 -> m22_63  [key=2, style=dotted];
m22_195 -> m22_196  [key=0, style=solid];
m22_194 -> m22_195  [key=0, style=solid];
m22_196 -> m22_190  [key=0, style=bold, color=blue];
m22_80 -> m22_81  [key=0, style=solid];
m22_83 -> m22_63  [key=2, style=dotted];
m22_83 -> m22_84  [key=0, style=solid];
m22_84 -> m22_63  [key=2, style=dotted];
m22_84 -> m22_85  [key=0, style=solid];
m22_84 -> m22_88  [key=2, style=dotted];
m22_86 -> m22_63  [key=2, style=dotted];
m22_86 -> m22_87  [key=0, style=solid];
m22_82 -> m22_83  [key=0, style=solid];
m22_82 -> m22_84  [key=1, style=dashed, color=darkseagreen4, label=invoice];
m22_82 -> m22_62  [key=2, style=dotted];
m22_82 -> m22_85  [key=1, style=dashed, color=darkseagreen4, label=invoice];
m22_85 -> m22_86  [key=0, style=solid];
m22_85 -> m22_89  [key=2, style=dotted];
m22_81 -> m22_82  [key=0, style=solid];
m22_81 -> m22_81  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_87 -> m22_80  [key=0, style=bold, color=blue];
m22_151 -> m22_152  [key=0, style=solid];
m22_153 -> m22_63  [key=2, style=dotted];
m22_153 -> m22_154  [key=0, style=solid];
m22_152 -> m22_153  [key=0, style=solid];
m22_152 -> m22_150  [key=2, style=dotted];
m22_152 -> m22_89  [key=2, style=dotted];
m22_154 -> m22_151  [key=0, style=bold, color=blue];
m22_197 -> m22_198  [key=0, style=solid];
m22_199 -> m22_200  [key=0, style=solid, color=green];
m22_199 -> m22_95  [key=2, style=dotted, color=green];
m22_199 -> m22_175  [key=2, style=dotted, color=green];
m22_198 -> m22_199  [key=0, style=solid, color=green];
m22_198 -> m22_198  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_198 -> m22_150  [key=2, style=dotted];
m22_198 -> m22_78  [key=2, style=dotted];
m22_198 -> m22_202  [key=2, style=dotted];
m22_200 -> m22_201  [key=0, style=solid];
m22_200 -> m22_61  [key=2, style=dotted];
m22_201 -> m22_197  [key=0, style=bold, color=blue];
m22_90 -> m22_91  [key=0, style=solid];
m22_93 -> m22_63  [key=2, style=dotted];
m22_93 -> m22_94  [key=0, style=solid];
m22_93 -> m22_88  [key=2, style=dotted];
m22_92 -> m22_95  [key=2, style=dotted];
m22_92 -> m22_93  [key=0, style=solid];
m22_92 -> m22_96  [key=2, style=dotted];
m22_91 -> m22_92  [key=0, style=solid];
m22_91 -> m22_81  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_94 -> m22_90  [key=0, style=bold, color=blue];
m22_108 -> m22_109  [key=0, style=solid];
m22_114 -> m22_63  [key=2, style=dotted];
m22_114 -> m22_115  [key=0, style=solid];
m22_113 -> m22_114  [key=0, style=solid];
m22_113 -> m22_62  [key=2, style=dotted];
m22_113 -> m22_115  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_115 -> m22_116  [key=0, style=solid];
m22_115 -> m22_120  [key=2, style=dotted];
m22_115 -> m22_121  [key=2, style=dotted];
m22_112 -> m22_113  [key=0, style=solid];
m22_112 -> m22_60  [key=2, style=dotted];
m22_109 -> m22_115  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_109 -> m22_112  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_109 -> m22_110  [key=0, style=solid];
m22_109 -> m22_117  [key=2, style=dotted];
m22_109 -> m22_111  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_111 -> m22_112  [key=0, style=solid];
m22_111 -> m22_119  [key=2, style=dotted];
m22_111 -> m22_118  [key=2, style=dotted];
m22_110 -> m22_111  [key=0, style=solid];
m22_116 -> m22_108  [key=0, style=bold, color=blue];
m22_40 -> m22_41  [key=0, style=solid];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_39  [key=2, style=dotted];
m22_42 -> m22_40  [key=0, style=bold, color=blue];
m22_146 -> m22_147  [key=0, style=solid];
m22_148 -> m22_63  [key=2, style=dotted];
m22_148 -> m22_148  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_148 -> m22_149  [key=0, style=solid];
m22_147 -> m22_148  [key=0, style=solid];
m22_147 -> m22_150  [key=2, style=dotted];
m22_147 -> m22_78  [key=2, style=dotted];
m22_147 -> m22_89  [key=2, style=dotted];
m22_149 -> m22_146  [key=0, style=bold, color=blue];
m22_43 -> m22_44  [key=0, style=solid];
m22_44 -> m22_45  [key=0, style=solid];
m22_44 -> m22_46  [key=2, style=dotted];
m22_45 -> m22_43  [key=0, style=bold, color=blue];
m22_20 -> m22_21  [key=0, style=solid];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_23  [key=2, style=dotted];
m22_22 -> m22_20  [key=0, style=bold, color=blue];
m22_67 -> m22_68  [key=0, style=solid];
m22_73 -> m22_63  [key=2, style=dotted];
m22_73 -> m22_74  [key=0, style=solid];
m22_75 -> m22_63  [key=2, style=dotted];
m22_75 -> m22_76  [key=0, style=solid];
m22_76 -> m22_63  [key=2, style=dotted];
m22_76 -> m22_77  [key=0, style=solid];
m22_72 -> m22_73  [key=0, style=solid];
m22_72 -> m22_75  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_72 -> m22_76  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_72 -> m22_62  [key=2, style=dotted];
m22_72 -> m22_74  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_74 -> m22_75  [key=0, style=solid];
m22_74 -> m22_79  [key=2, style=dotted];
m22_69 -> m22_78  [key=2, style=dotted];
m22_69 -> m22_70  [key=0, style=solid];
m22_71 -> m22_61  [key=2, style=dotted];
m22_71 -> m22_72  [key=0, style=solid];
m22_70 -> m22_72  [key=1, style=dashed, color=darkseagreen4, label=json];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_60  [key=2, style=dotted];
m22_68 -> m22_69  [key=0, style=solid];
m22_68 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_68 -> m22_64  [key=2, style=dotted];
m22_77 -> m22_67  [key=0, style=bold, color=blue];
m22_240 -> m22_241  [key=0, style=solid];
m22_243 -> m22_63  [key=2, style=dotted];
m22_243 -> m22_244  [key=0, style=solid];
m22_244 -> m22_63  [key=2, style=dotted];
m22_244 -> m22_245  [key=0, style=solid];
m22_245 -> m22_63  [key=2, style=dotted];
m22_245 -> m22_246  [key=0, style=solid];
m22_242 -> m22_243  [key=0, style=solid];
m22_242 -> m22_244  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_242 -> m22_245  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_242 -> m22_62  [key=2, style=dotted];
m22_241 -> m22_242  [key=0, style=solid];
m22_241 -> m22_241  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_246 -> m22_240  [key=0, style=bold, color=blue];
m22_276 -> m22_277  [key=0, style=solid];
m22_277 -> m22_89  [key=2, style=dotted];
m22_277 -> m22_278  [key=0, style=solid];
m22_277 -> m22_279  [key=2, style=dotted];
m22_278 -> m22_276  [key=0, style=bold, color=blue];
m22_16 -> m22_17  [key=0, style=solid];
m22_17 -> m22_18  [key=0, style=solid];
m22_17 -> m22_19  [key=2, style=dotted];
m22_18 -> m22_16  [key=0, style=bold, color=blue];
m22_183 -> m22_184  [key=0, style=solid, color=green];
m22_184 -> m22_184  [key=3, color=green, style=bold, label="Local variable string json"];
m22_184 -> m22_185  [key=0, style=solid, color=green];
m22_185 -> m22_186  [key=0, style=solid];
m22_185 -> m22_95  [key=2, style=dotted];
m22_185 -> m22_96  [key=2, style=dotted];
m22_185 -> m22_187  [key=1, style=dashed, color=darkseagreen4, label=c2];
m22_186 -> m22_63  [key=2, style=dotted];
m22_186 -> m22_187  [key=0, style=solid];
m22_188 -> m22_63  [key=2, style=dotted];
m22_188 -> m22_189  [key=0, style=solid];
m22_187 -> m22_188  [key=0, style=solid];
m22_189 -> m22_183  [key=0, style=bold, color=blue];
m22_47 -> m22_48  [key=0, style=solid];
m22_54 -> m22_63  [key=2, style=dotted];
m22_54 -> m22_55  [key=0, style=solid];
m22_55 -> m22_63  [key=2, style=dotted];
m22_55 -> m22_56  [key=0, style=solid];
m22_56 -> m22_63  [key=2, style=dotted];
m22_56 -> m22_57  [key=0, style=solid];
m22_57 -> m22_63  [key=2, style=dotted];
m22_57 -> m22_58  [key=0, style=solid];
m22_58 -> m22_63  [key=2, style=dotted];
m22_58 -> m22_59  [key=0, style=solid];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_55  [key=1, style=dashed, color=darkseagreen4, label=o1];
m22_53 -> m22_56  [key=1, style=dashed, color=darkseagreen4, label=o1];
m22_53 -> m22_57  [key=1, style=dashed, color=darkseagreen4, label=o1];
m22_53 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label=o1];
m22_51 -> m22_61  [key=2, style=dotted];
m22_51 -> m22_52  [key=0, style=solid];
m22_52 -> m22_53  [key=0, style=solid];
m22_52 -> m22_62  [key=2, style=dotted];
m22_50 -> m22_51  [key=0, style=solid];
m22_50 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label=json];
m22_50 -> m22_60  [key=2, style=dotted];
m22_48 -> m22_50  [key=1, style=dashed, color=darkseagreen4, label=e];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_43  [key=2, style=dotted];
m22_49 -> m22_50  [key=0, style=solid];
m22_49 -> m22_3  [key=2, style=dotted];
m22_59 -> m22_47  [key=0, style=bold, color=blue];
m22_4 -> m22_5  [key=0, style=solid];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_7  [key=2, style=dotted];
m22_6 -> m22_4  [key=0, style=bold, color=blue];
m22_32 -> m22_33  [key=0, style=solid];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_35  [key=2, style=dotted];
m22_34 -> m22_32  [key=0, style=bold, color=blue];
m22_36 -> m22_37  [key=0, style=solid];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_39  [key=2, style=dotted];
m22_38 -> m22_36  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_3  [key=2, style=dotted];
m22_1 -> m22_2  [key=0, style=solid];
m22_2 -> m22_0  [key=0, style=bold, color=blue];
m22_272 -> m22_273  [key=0, style=solid];
m22_273 -> m22_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_273 -> m22_274  [key=0, style=solid];
m22_273 -> m22_275  [key=2, style=dotted];
m22_274 -> m22_272  [key=0, style=bold, color=blue];
m22_252 -> m22_253  [key=0, style=solid];
m22_254 -> m22_63  [key=2, style=dotted];
m22_254 -> m22_255  [key=0, style=solid];
m22_253 -> m22_254  [key=0, style=solid];
m22_253 -> m22_249  [key=2, style=dotted];
m22_253 -> m22_256  [key=2, style=dotted];
m22_253 -> m22_257  [key=2, style=dotted];
m22_253 -> m22_89  [key=2, style=dotted];
m22_255 -> m22_252  [key=0, style=bold, color=blue];
m22_219 -> m22_220  [key=0, style=solid];
m22_221 -> m22_63  [key=2, style=dotted];
m22_221 -> m22_222  [key=0, style=solid];
m22_222 -> m22_63  [key=2, style=dotted];
m22_222 -> m22_223  [key=0, style=solid];
m22_223 -> m22_63  [key=2, style=dotted];
m22_223 -> m22_224  [key=0, style=solid];
m22_220 -> m22_221  [key=0, style=solid];
m22_220 -> m22_222  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_220 -> m22_223  [key=1, style=dashed, color=darkseagreen4, label=c];
m22_220 -> m22_220  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_220 -> m22_62  [key=2, style=dotted];
m22_224 -> m22_219  [key=0, style=bold, color=blue];
m22_318 -> m22_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DocNoSetter"];
m22_315 -> m22_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor"];
m22_314 -> m22_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.Example"];
m22_313 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m22_313 -> m22_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.CustomDictionary"];
m24_137 -> m24_138  [key=0, style=solid];
m24_138 -> m24_139  [key=0, style=solid];
m24_138 -> m24_0  [key=2, style=dotted];
m24_139 -> m24_137  [key=0, style=bold, color=blue];
m24_4 -> m24_5  [key=0, style=solid];
m24_5 -> m24_4  [key=0, style=bold, color=blue];
m24_103 -> m24_122  [key=0, style=solid];
m24_103 -> m24_123  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_122 -> m24_123  [key=0, style=solid];
m24_122 -> m24_128  [key=2, style=dotted];
m24_122 -> m24_124  [key=1, style=dashed, color=darkseagreen4, label=d1];
m24_122 -> m24_126  [key=1, style=dashed, color=darkseagreen4, label=d1];
m24_123 -> m24_124  [key=0, style=solid];
m24_123 -> m24_128  [key=2, style=dotted];
m24_123 -> m24_126  [key=1, style=dashed, color=darkseagreen4, label=d2];
m24_124 -> m24_125  [key=0, style=solid];
m24_124 -> m24_126  [key=0, style=solid];
m24_124 -> m24_129  [key=2, style=dotted];
m24_126 -> m24_127  [key=0, style=solid];
m24_126 -> m24_130  [key=2, style=dotted];
m24_125 -> m24_127  [key=0, style=solid];
m24_127 -> m24_103  [key=0, style=bold, color=blue];
m24_18 -> m24_19  [key=0, style=solid];
m24_18 -> m24_11  [key=0, style=bold, color=blue];
m24_19 -> m24_18  [key=0, style=bold, color=blue];
m24_24 -> m24_25  [key=0, style=solid];
m24_25 -> m24_24  [key=0, style=bold, color=blue];
m24_28 -> m24_29  [key=0, style=solid];
m24_29 -> m24_28  [key=0, style=bold, color=blue];
m24_272 -> m24_273  [key=0, style=solid];
m24_272 -> m24_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_273 -> m24_274  [key=0, style=solid];
m24_273 -> m24_275  [key=0, style=solid];
m24_275 -> m24_276  [key=0, style=solid];
m24_275 -> m24_40  [key=2, style=dotted];
m24_274 -> m24_276  [key=0, style=solid];
m24_276 -> m24_272  [key=0, style=bold, color=blue];
m24_146 -> m24_147  [key=0, style=solid];
m24_146 -> m24_149  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m24_146 -> m24_151  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_153  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_155  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_157  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_159  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_161  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_163  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_165  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_167  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_146 -> m24_169  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_147 -> m24_148  [key=0, style=solid];
m24_147 -> m24_149  [key=0, style=solid];
m24_149 -> m24_150  [key=0, style=solid];
m24_149 -> m24_151  [key=0, style=solid];
m24_150 -> m24_170  [key=0, style=solid];
m24_150 -> m24_171  [key=2, style=dotted];
m24_151 -> m24_152  [key=0, style=solid];
m24_151 -> m24_153  [key=0, style=solid];
m24_153 -> m24_154  [key=0, style=solid];
m24_153 -> m24_155  [key=0, style=solid];
m24_155 -> m24_156  [key=0, style=solid];
m24_155 -> m24_157  [key=0, style=solid];
m24_157 -> m24_158  [key=0, style=solid];
m24_157 -> m24_159  [key=0, style=solid];
m24_159 -> m24_160  [key=0, style=solid];
m24_159 -> m24_161  [key=0, style=solid];
m24_161 -> m24_162  [key=0, style=solid];
m24_161 -> m24_163  [key=0, style=solid];
m24_163 -> m24_164  [key=0, style=solid];
m24_163 -> m24_165  [key=0, style=solid];
m24_165 -> m24_166  [key=0, style=solid];
m24_165 -> m24_167  [key=0, style=solid];
m24_167 -> m24_168  [key=0, style=solid];
m24_167 -> m24_169  [key=0, style=solid];
m24_169 -> m24_170  [key=0, style=solid];
m24_169 -> m24_112  [key=2, style=dotted];
m24_169 -> m24_172  [key=2, style=dotted];
m24_169 -> m24_120  [key=2, style=dotted];
m24_148 -> m24_170  [key=0, style=solid];
m24_152 -> m24_170  [key=0, style=solid];
m24_154 -> m24_170  [key=0, style=solid];
m24_156 -> m24_170  [key=0, style=solid];
m24_158 -> m24_170  [key=0, style=solid];
m24_160 -> m24_170  [key=0, style=solid];
m24_162 -> m24_170  [key=0, style=solid];
m24_164 -> m24_170  [key=0, style=solid];
m24_166 -> m24_170  [key=0, style=solid];
m24_168 -> m24_170  [key=0, style=solid];
m24_170 -> m24_146  [key=0, style=bold, color=blue];
m24_41 -> m24_42  [key=0, style=solid];
m24_41 -> m24_44  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_46  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m24_41 -> m24_50  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_51  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_52  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_53  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_54  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_56  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_57  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_58  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_62  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_63  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_66  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_70  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_72  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_78  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_82  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_84  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_85  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_88  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_91  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_94  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_96  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_97  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_41 -> m24_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m24_42 -> m24_43  [key=0, style=solid];
m24_42 -> m24_44  [key=0, style=solid];
m24_44 -> m24_45  [key=0, style=solid];
m24_44 -> m24_46  [key=0, style=solid];
m24_46 -> m24_47  [key=0, style=solid];
m24_46 -> m24_48  [key=0, style=solid];
m24_48 -> m24_49  [key=0, style=solid];
m24_48 -> m24_55  [key=0, style=solid];
m24_48 -> m24_59  [key=0, style=solid];
m24_48 -> m24_65  [key=0, style=solid];
m24_48 -> m24_69  [key=0, style=solid];
m24_48 -> m24_74  [key=0, style=solid];
m24_48 -> m24_81  [key=0, style=solid];
m24_48 -> m24_87  [key=0, style=solid];
m24_48 -> m24_93  [key=0, style=solid];
m24_48 -> m24_99  [key=0, style=solid];
m24_50 -> m24_51  [key=0, style=solid];
m24_50 -> m24_52  [key=0, style=solid];
m24_51 -> m24_100  [key=0, style=solid];
m24_51 -> m24_101  [key=2, style=dotted];
m24_51 -> m24_102  [key=2, style=dotted];
m24_52 -> m24_53  [key=0, style=solid];
m24_52 -> m24_54  [key=0, style=solid];
m24_53 -> m24_100  [key=0, style=solid];
m24_53 -> m24_103  [key=2, style=dotted];
m24_54 -> m24_100  [key=0, style=solid];
m24_54 -> m24_104  [key=2, style=dotted];
m24_54 -> m24_105  [key=2, style=dotted];
m24_56 -> m24_57  [key=0, style=solid];
m24_56 -> m24_58  [key=0, style=solid];
m24_57 -> m24_100  [key=0, style=solid];
m24_57 -> m24_101  [key=2, style=dotted];
m24_57 -> m24_102  [key=2, style=dotted];
m24_58 -> m24_100  [key=0, style=solid];
m24_58 -> m24_103  [key=2, style=dotted];
m24_62 -> m24_63  [key=0, style=solid];
m24_62 -> m24_106  [key=2, style=dotted];
m24_62 -> m24_64  [key=1, style=dashed, color=darkseagreen4, label=s1];
m24_63 -> m24_64  [key=0, style=solid];
m24_63 -> m24_106  [key=2, style=dotted];
m24_66 -> m24_67  [key=0, style=solid];
m24_66 -> m24_108  [key=2, style=dotted];
m24_66 -> m24_68  [key=1, style=dashed, color=darkseagreen4, label=b1];
m24_67 -> m24_68  [key=0, style=solid];
m24_67 -> m24_108  [key=2, style=dotted];
m24_70 -> m24_71  [key=0, style=solid];
m24_70 -> m24_73  [key=1, style=dashed, color=darkseagreen4, label=date1];
m24_72 -> m24_73  [key=0, style=solid];
m24_72 -> m24_110  [key=2, style=dotted];
m24_75 -> m24_76  [key=0, style=solid];
m24_75 -> m24_80  [key=1, style=dashed, color=darkseagreen4, label=bytes2];
m24_78 -> m24_79  [key=0, style=solid];
m24_78 -> m24_80  [key=1, style=dashed, color=darkseagreen4, label=bytes1];
m24_82 -> m24_83  [key=0, style=solid];
m24_82 -> m24_84  [key=0, style=solid];
m24_84 -> m24_85  [key=0, style=solid];
m24_84 -> m24_86  [key=1, style=dashed, color=darkseagreen4, label=guid1];
m24_85 -> m24_86  [key=0, style=solid];
m24_88 -> m24_89  [key=0, style=solid];
m24_88 -> m24_92  [key=1, style=dashed, color=darkseagreen4, label=uri2];
m24_91 -> m24_92  [key=0, style=solid];
m24_94 -> m24_95  [key=0, style=solid];
m24_94 -> m24_96  [key=0, style=solid];
m24_96 -> m24_97  [key=0, style=solid];
m24_96 -> m24_98  [key=1, style=dashed, color=darkseagreen4, label=ts1];
m24_97 -> m24_98  [key=0, style=solid];
m24_99 -> m24_100  [key=0, style=solid];
m24_99 -> m24_119  [key=2, style=dotted];
m24_99 -> m24_120  [key=2, style=dotted];
m24_99 -> m24_121  [key=2, style=dotted];
m24_43 -> m24_100  [key=0, style=solid];
m24_45 -> m24_100  [key=0, style=solid];
m24_47 -> m24_100  [key=0, style=solid];
m24_49 -> m24_50  [key=0, style=solid];
m24_55 -> m24_56  [key=0, style=solid];
m24_59 -> m24_60  [key=0, style=solid];
m24_65 -> m24_66  [key=0, style=solid];
m24_69 -> m24_70  [key=0, style=solid];
m24_74 -> m24_75  [key=0, style=solid];
m24_81 -> m24_82  [key=0, style=solid];
m24_87 -> m24_88  [key=0, style=solid];
m24_93 -> m24_94  [key=0, style=solid];
m24_60 -> m24_61  [key=0, style=solid];
m24_61 -> m24_62  [key=0, style=solid];
m24_64 -> m24_100  [key=0, style=solid];
m24_64 -> m24_107  [key=2, style=dotted];
m24_68 -> m24_100  [key=0, style=solid];
m24_68 -> m24_109  [key=2, style=dotted];
m24_71 -> m24_72  [key=0, style=solid];
m24_73 -> m24_100  [key=0, style=solid];
m24_73 -> m24_111  [key=2, style=dotted];
m24_76 -> m24_77  [key=0, style=solid];
m24_76 -> m24_78  [key=0, style=solid];
m24_80 -> m24_100  [key=0, style=solid];
m24_80 -> m24_114  [key=2, style=dotted];
m24_77 -> m24_100  [key=0, style=solid];
m24_77 -> m24_112  [key=2, style=dotted];
m24_79 -> m24_80  [key=0, style=solid];
m24_79 -> m24_113  [key=2, style=dotted];
m24_83 -> m24_100  [key=0, style=solid];
m24_83 -> m24_112  [key=2, style=dotted];
m24_86 -> m24_100  [key=0, style=solid];
m24_86 -> m24_115  [key=2, style=dotted];
m24_86 -> m24_86  [key=1, style=dashed, color=darkseagreen4, label=guid1];
m24_89 -> m24_90  [key=0, style=solid];
m24_89 -> m24_91  [key=0, style=solid];
m24_92 -> m24_100  [key=0, style=solid];
m24_92 -> m24_116  [key=2, style=dotted];
m24_92 -> m24_117  [key=2, style=dotted];
m24_90 -> m24_100  [key=0, style=solid];
m24_90 -> m24_112  [key=2, style=dotted];
m24_95 -> m24_100  [key=0, style=solid];
m24_95 -> m24_112  [key=2, style=dotted];
m24_98 -> m24_100  [key=0, style=solid];
m24_98 -> m24_118  [key=2, style=dotted];
m24_98 -> m24_98  [key=1, style=dashed, color=darkseagreen4, label=ts1];
m24_100 -> m24_41  [key=0, style=bold, color=blue];
m24_22 -> m24_23  [key=0, style=solid];
m24_293 -> m24_297  [key=0, style=solid];
m24_293 -> m24_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_297 -> m24_298  [key=0, style=solid];
m24_297 -> m24_299  [key=0, style=solid];
m24_301 -> m24_303  [key=0, style=solid];
m24_301 -> m24_304  [key=2, style=dotted];
m24_298 -> m24_303  [key=0, style=solid];
m24_299 -> m24_300  [key=0, style=solid];
m24_299 -> m24_301  [key=1, style=dashed, color=darkseagreen4, label=formattable];
m24_300 -> m24_301  [key=0, style=solid];
m24_300 -> m24_302  [key=0, style=solid];
m24_302 -> m24_303  [key=0, style=solid];
m24_302 -> m24_246  [key=2, style=dotted];
m24_303 -> m24_293  [key=0, style=bold, color=blue];
m24_12 -> m24_13  [key=0, style=solid, color=green];
m24_12 -> m24_19  [key=2, style=dotted, color=green];
m24_12 -> m24_20  [key=2, style=dotted, color=green];
m24_12 -> m24_14  [key=1, style=dashed, color=green, label=knownTypesBinder];
m24_12 -> m24_16  [key=1, style=dashed, color=green, label=knownTypesBinder];
m24_13 -> m24_12  [key=0, style=bold, color=blue];
m24_13 -> m24_14  [key=0, style=solid, color=green];
m24_13 -> m24_21  [key=2, style=dotted, color=green];
m24_171 -> m24_173  [key=0, style=solid];
m24_171 -> m24_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m24_171 -> m24_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m24_173 -> m24_174  [key=0, style=solid];
m24_173 -> m24_175  [key=0, style=solid];
m24_175 -> m24_176  [key=0, style=solid];
m24_175 -> m24_180  [key=0, style=solid];
m24_175 -> m24_182  [key=2, style=dotted];
m24_179 -> m24_181  [key=0, style=solid];
m24_179 -> m24_182  [key=2, style=dotted];
m24_174 -> m24_181  [key=0, style=solid];
m24_176 -> m24_177  [key=0, style=solid];
m24_180 -> m24_181  [key=0, style=solid];
m24_177 -> m24_178  [key=0, style=solid];
m24_178 -> m24_179  [key=0, style=solid];
m24_181 -> m24_171  [key=0, style=bold, color=blue];
m24_280 -> m24_281  [key=0, style=solid];
m24_281 -> m24_282  [key=0, style=solid];
m24_281 -> m24_283  [key=0, style=solid];
m24_282 -> m24_284  [key=0, style=solid];
m24_283 -> m24_284  [key=0, style=solid];
m24_283 -> m24_268  [key=2, style=dotted];
m24_284 -> m24_280  [key=0, style=bold, color=blue];
m24_7 -> m24_8  [key=0, style=solid, color=green];
m24_7 -> m24_9  [key=1, style=dashed, color=green, label="System.Type"];
m24_7 -> m24_6  [key=0, style=bold, color=blue];
m24_8 -> m24_9  [key=0, style=solid, color=green];
m24_8 -> m24_10  [key=1, style=dashed, color=green, label="out string"];
m24_9 -> m24_10  [key=0, style=solid, color=green];
m24_9 -> m24_8  [key=0, style=bold, color=blue];
m24_10 -> m24_7  [key=0, style=bold, color=blue];
m24_10 -> m24_11  [key=0, style=solid];
m24_40 -> m24_270  [key=0, style=solid];
m24_270 -> m24_271  [key=0, style=solid];
m24_270 -> m24_41  [key=2, style=dotted];
m24_271 -> m24_40  [key=0, style=bold, color=blue];
m24_16 -> m24_17  [key=0, style=solid];
m24_16 -> m24_22  [key=2, style=dotted];
m24_16 -> m24_25  [key=2, style=dotted];
m24_17 -> m24_16  [key=0, style=bold, color=blue];
m24_17 -> m24_18  [key=0, style=solid];
m24_17 -> m24_26  [key=2, style=dotted];
m24_17 -> m24_24  [key=2, style=dotted];
m24_6 -> m24_7  [key=0, style=solid];
m24_11 -> m24_12  [key=0, style=solid, color=green];
m24_11 -> m24_10  [key=0, style=bold, color=blue];
m24_14 -> m24_14  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m24_14 -> m24_15  [key=0, style=solid];
m24_14 -> m24_22  [key=2, style=dotted];
m24_14 -> m24_23  [key=2, style=dotted];
m24_14 -> m24_16  [key=1, style=dashed, color=darkseagreen4, label=json];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_24  [key=2, style=dotted];
m24_15 -> m24_14  [key=0, style=bold, color=blue];
m24_30 -> m24_31  [key=0, style=solid];
m24_31 -> m24_30  [key=0, style=bold, color=blue];
m24_23 -> m24_22  [key=0, style=bold, color=blue];
m24_131 -> m24_132  [key=0, style=solid];
m24_132 -> m24_133  [key=0, style=solid];
m24_132 -> m24_4  [key=2, style=dotted];
m24_133 -> m24_131  [key=0, style=bold, color=blue];
m24_26 -> m24_27  [key=0, style=solid];
m24_27 -> m24_26  [key=0, style=bold, color=blue];
m24_290 -> m24_291  [key=0, style=solid];
m24_291 -> m24_292  [key=0, style=solid];
m24_291 -> m24_293  [key=2, style=dotted];
m24_292 -> m24_290  [key=0, style=bold, color=blue];
m24_183 -> m24_184  [key=0, style=solid];
m24_183 -> m24_185  [key=1, style=dashed, color=darkseagreen4, label="params Newtonsoft.Json.JsonConverter[]"];
m24_183 -> m24_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_183 -> m24_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m24_184 -> m24_185  [key=0, style=solid];
m24_184 -> m24_189  [key=0, style=solid];
m24_185 -> m24_186  [key=0, style=solid];
m24_185 -> m24_172  [key=2, style=dotted];
m24_185 -> m24_243  [key=2, style=dotted];
m24_185 -> m24_187  [key=1, style=dashed, color=darkseagreen4, label=matchingConverter];
m24_187 -> m24_188  [key=0, style=solid];
m24_187 -> m24_244  [key=2, style=dotted];
m24_187 -> m24_245  [key=2, style=dotted];
m24_191 -> m24_192  [key=0, style=solid];
m24_191 -> m24_246  [key=2, style=dotted];
m24_191 -> m24_247  [key=2, style=dotted];
m24_194 -> m24_195  [key=0, style=solid];
m24_194 -> m24_246  [key=2, style=dotted];
m24_194 -> m24_248  [key=2, style=dotted];
m24_197 -> m24_198  [key=0, style=solid];
m24_197 -> m24_249  [key=2, style=dotted];
m24_200 -> m24_201  [key=0, style=solid];
m24_200 -> m24_250  [key=2, style=dotted];
m24_204 -> m24_210  [key=0, style=solid];
m24_204 -> m24_251  [key=2, style=dotted];
m24_206 -> m24_210  [key=0, style=solid];
m24_206 -> m24_252  [key=2, style=dotted];
m24_208 -> m24_210  [key=0, style=solid];
m24_208 -> m24_253  [key=2, style=dotted];
m24_209 -> m24_210  [key=0, style=solid];
m24_209 -> m24_104  [key=2, style=dotted];
m24_209 -> m24_252  [key=2, style=dotted];
m24_213 -> m24_219  [key=0, style=solid];
m24_213 -> m24_254  [key=2, style=dotted];
m24_215 -> m24_219  [key=0, style=solid];
m24_215 -> m24_255  [key=2, style=dotted];
m24_217 -> m24_219  [key=0, style=solid];
m24_217 -> m24_256  [key=2, style=dotted];
m24_218 -> m24_219  [key=0, style=solid];
m24_218 -> m24_128  [key=2, style=dotted];
m24_218 -> m24_255  [key=2, style=dotted];
m24_221 -> m24_222  [key=0, style=solid];
m24_221 -> m24_246  [key=2, style=dotted];
m24_221 -> m24_257  [key=2, style=dotted];
m24_224 -> m24_225  [key=0, style=solid];
m24_224 -> m24_108  [key=2, style=dotted];
m24_224 -> m24_258  [key=2, style=dotted];
m24_227 -> m24_228  [key=0, style=solid];
m24_227 -> m24_110  [key=2, style=dotted];
m24_227 -> m24_259  [key=2, style=dotted];
m24_230 -> m24_231  [key=0, style=solid];
m24_230 -> m24_260  [key=2, style=dotted];
m24_233 -> m24_234  [key=0, style=solid];
m24_233 -> m24_261  [key=2, style=dotted];
m24_236 -> m24_237  [key=0, style=solid];
m24_236 -> m24_262  [key=2, style=dotted];
m24_239 -> m24_240  [key=0, style=solid];
m24_239 -> m24_263  [key=2, style=dotted];
m24_189 -> m24_190  [key=0, style=solid];
m24_189 -> m24_193  [key=0, style=solid];
m24_189 -> m24_196  [key=0, style=solid];
m24_189 -> m24_199  [key=0, style=solid];
m24_189 -> m24_202  [key=0, style=solid];
m24_189 -> m24_211  [key=0, style=solid];
m24_189 -> m24_220  [key=0, style=solid];
m24_189 -> m24_223  [key=0, style=solid];
m24_189 -> m24_226  [key=0, style=solid];
m24_189 -> m24_229  [key=0, style=solid];
m24_189 -> m24_232  [key=0, style=solid];
m24_189 -> m24_235  [key=0, style=solid];
m24_189 -> m24_238  [key=0, style=solid];
m24_186 -> m24_187  [key=0, style=solid];
m24_186 -> m24_189  [key=0, style=solid];
m24_188 -> m24_241  [key=0, style=solid];
m24_190 -> m24_191  [key=0, style=solid];
m24_193 -> m24_194  [key=0, style=solid];
m24_196 -> m24_197  [key=0, style=solid];
m24_199 -> m24_200  [key=0, style=solid];
m24_202 -> m24_203  [key=0, style=solid];
m24_211 -> m24_212  [key=0, style=solid];
m24_220 -> m24_221  [key=0, style=solid];
m24_223 -> m24_224  [key=0, style=solid];
m24_226 -> m24_227  [key=0, style=solid];
m24_229 -> m24_230  [key=0, style=solid];
m24_232 -> m24_233  [key=0, style=solid];
m24_235 -> m24_236  [key=0, style=solid];
m24_238 -> m24_239  [key=0, style=solid];
m24_192 -> m24_241  [key=0, style=solid];
m24_195 -> m24_241  [key=0, style=solid];
m24_198 -> m24_241  [key=0, style=solid];
m24_201 -> m24_241  [key=0, style=solid];
m24_203 -> m24_204  [key=0, style=solid];
m24_203 -> m24_205  [key=0, style=solid];
m24_205 -> m24_206  [key=0, style=solid];
m24_205 -> m24_207  [key=0, style=solid];
m24_207 -> m24_208  [key=0, style=solid];
m24_207 -> m24_209  [key=0, style=solid];
m24_210 -> m24_241  [key=0, style=solid];
m24_212 -> m24_213  [key=0, style=solid];
m24_212 -> m24_214  [key=0, style=solid];
m24_214 -> m24_215  [key=0, style=solid];
m24_214 -> m24_216  [key=0, style=solid];
m24_216 -> m24_217  [key=0, style=solid];
m24_216 -> m24_218  [key=0, style=solid];
m24_219 -> m24_241  [key=0, style=solid];
m24_222 -> m24_241  [key=0, style=solid];
m24_225 -> m24_241  [key=0, style=solid];
m24_228 -> m24_241  [key=0, style=solid];
m24_231 -> m24_241  [key=0, style=solid];
m24_234 -> m24_241  [key=0, style=solid];
m24_237 -> m24_241  [key=0, style=solid];
m24_240 -> m24_241  [key=0, style=solid];
m24_242 -> m24_241  [key=0, style=solid];
m24_242 -> m24_119  [key=2, style=dotted];
m24_242 -> m24_121  [key=2, style=dotted];
m24_241 -> m24_183  [key=0, style=bold, color=blue];
m24_20 -> m24_21  [key=0, style=solid];
m24_21 -> m24_20  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m24_1 -> m24_2  [key=0, style=solid];
m24_2 -> m24_3  [key=0, style=solid];
m24_3 -> m24_0  [key=0, style=bold, color=blue];
m24_134 -> m24_135  [key=0, style=solid];
m24_135 -> m24_136  [key=0, style=solid];
m24_135 -> m24_0  [key=2, style=dotted];
m24_136 -> m24_134  [key=0, style=bold, color=blue];
m24_294 -> m24_295  [key=0, style=solid];
m24_295 -> m24_296  [key=0, style=solid];
m24_295 -> m24_293  [key=2, style=dotted];
m24_296 -> m24_294  [key=0, style=bold, color=blue];
m24_264 -> m24_265  [key=0, style=solid];
m24_265 -> m24_266  [key=0, style=solid];
m24_265 -> m24_268  [key=2, style=dotted];
m24_266 -> m24_267  [key=0, style=solid];
m24_266 -> m24_269  [key=2, style=dotted];
m24_267 -> m24_264  [key=0, style=bold, color=blue];
m24_318 -> m24_319  [key=0, style=solid];
m24_318 -> m24_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_318 -> m24_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_319 -> m24_320  [key=0, style=solid];
m24_319 -> m24_321  [key=0, style=solid];
m24_321 -> m24_322  [key=0, style=solid];
m24_322 -> m24_323  [key=0, style=solid];
m24_322 -> m24_41  [key=2, style=dotted];
m24_320 -> m24_323  [key=0, style=solid];
m24_323 -> m24_318  [key=0, style=bold, color=blue];
m24_32 -> m24_33  [key=0, style=solid];
m24_33 -> m24_34  [key=0, style=solid];
m24_33 -> m24_36  [key=1, style=dashed, color=darkseagreen4, label=other];
m24_33 -> m24_38  [key=1, style=dashed, color=darkseagreen4, label=other];
m24_34 -> m24_35  [key=0, style=solid];
m24_34 -> m24_36  [key=0, style=solid];
m24_36 -> m24_37  [key=0, style=solid];
m24_36 -> m24_38  [key=0, style=solid];
m24_38 -> m24_39  [key=0, style=solid];
m24_38 -> m24_40  [key=2, style=dotted];
m24_35 -> m24_39  [key=0, style=solid];
m24_37 -> m24_39  [key=0, style=solid];
m24_39 -> m24_32  [key=0, style=bold, color=blue];
m24_140 -> m24_141  [key=0, style=solid];
m24_141 -> m24_142  [key=0, style=solid];
m24_141 -> m24_0  [key=2, style=dotted];
m24_142 -> m24_140  [key=0, style=bold, color=blue];
m24_277 -> m24_278  [key=0, style=solid];
m24_278 -> m24_279  [key=0, style=solid];
m24_278 -> m24_272  [key=2, style=dotted];
m24_279 -> m24_277  [key=0, style=bold, color=blue];
m24_285 -> m24_286  [key=0, style=solid];
m24_286 -> m24_287  [key=0, style=solid];
m24_286 -> m24_288  [key=0, style=solid];
m24_287 -> m24_289  [key=0, style=solid];
m24_288 -> m24_289  [key=0, style=solid];
m24_288 -> m24_246  [key=2, style=dotted];
m24_289 -> m24_285  [key=0, style=bold, color=blue];
m24_305 -> m24_306  [key=0, style=solid];
m24_305 -> m24_308  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_305 -> m24_314  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_306 -> m24_307  [key=0, style=solid];
m24_306 -> m24_308  [key=0, style=solid];
m24_308 -> m24_309  [key=0, style=solid];
m24_308 -> m24_311  [key=1, style=dashed, color=darkseagreen4, label=value];
m24_308 -> m24_312  [key=1, style=dashed, color=darkseagreen4, label=value];
m24_308 -> m24_313  [key=1, style=dashed, color=darkseagreen4, label=value];
m24_314 -> m24_315  [key=0, style=solid];
m24_314 -> m24_316  [key=1, style=dashed, color=darkseagreen4, label=otherValue];
m24_307 -> m24_317  [key=0, style=solid];
m24_309 -> m24_310  [key=0, style=solid];
m24_311 -> m24_312  [key=0, style=solid];
m24_311 -> m24_314  [key=0, style=solid];
m24_312 -> m24_313  [key=0, style=solid];
m24_312 -> m24_316  [key=1, style=dashed, color=darkseagreen4, label=otherValue];
m24_313 -> m24_316  [key=0, style=solid];
m24_310 -> m24_311  [key=0, style=solid];
m24_316 -> m24_317  [key=0, style=solid];
m24_316 -> m24_41  [key=2, style=dotted];
m24_315 -> m24_316  [key=0, style=solid];
m24_317 -> m24_305  [key=0, style=bold, color=blue];
m24_143 -> m24_144  [key=0, style=solid];
m24_144 -> m24_145  [key=0, style=solid];
m24_144 -> m24_0  [key=2, style=dotted];
m24_145 -> m24_143  [key=0, style=bold, color=blue];
m24_324 -> m24_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m24_324 -> m24_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m25_144 -> m25_145  [key=0, style=solid];
m25_145 -> m25_146  [key=0, style=solid];
m25_145 -> m25_147  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_145 -> m25_157  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_145 -> m25_145  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_146 -> m25_147  [key=0, style=solid];
m25_146 -> m25_96  [key=2, style=dotted];
m25_146 -> m25_157  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_146 -> m25_148  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_146 -> m25_149  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_146 -> m25_150  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_146 -> m25_151  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_146 -> m25_152  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_146 -> m25_153  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_146 -> m25_154  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_147 -> m25_148  [key=0, style=solid];
m25_147 -> m25_140  [key=2, style=dotted];
m25_147 -> m25_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_19  [key=2, style=dotted];
m25_149 -> m25_150  [key=0, style=solid];
m25_149 -> m25_19  [key=2, style=dotted];
m25_150 -> m25_151  [key=0, style=solid];
m25_150 -> m25_19  [key=2, style=dotted];
m25_151 -> m25_152  [key=0, style=solid];
m25_151 -> m25_19  [key=2, style=dotted];
m25_152 -> m25_153  [key=0, style=solid];
m25_152 -> m25_19  [key=2, style=dotted];
m25_153 -> m25_154  [key=0, style=solid];
m25_153 -> m25_19  [key=2, style=dotted];
m25_154 -> m25_155  [key=0, style=solid];
m25_154 -> m25_19  [key=2, style=dotted];
m25_155 -> m25_144  [key=0, style=bold, color=blue];
m25_221 -> m25_222  [key=0, style=solid];
m25_222 -> m25_223  [key=0, style=solid];
m25_222 -> m25_224  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_222 -> m25_222  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_223 -> m25_224  [key=0, style=solid];
m25_223 -> m25_96  [key=2, style=dotted];
m25_223 -> m25_225  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_223 -> m25_226  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_223 -> m25_227  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_223 -> m25_228  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_224 -> m25_225  [key=0, style=solid];
m25_224 -> m25_39  [key=2, style=dotted];
m25_224 -> m25_40  [key=2, style=dotted];
m25_224 -> m25_63  [key=2, style=dotted];
m25_225 -> m25_226  [key=0, style=solid];
m25_225 -> m25_19  [key=2, style=dotted];
m25_226 -> m25_227  [key=0, style=solid];
m25_226 -> m25_19  [key=2, style=dotted];
m25_227 -> m25_228  [key=0, style=solid];
m25_227 -> m25_19  [key=2, style=dotted];
m25_228 -> m25_229  [key=0, style=solid];
m25_228 -> m25_19  [key=2, style=dotted];
m25_229 -> m25_221  [key=0, style=bold, color=blue];
m25_549 -> m25_550  [key=0, style=solid];
m25_550 -> m25_551  [key=0, style=solid];
m25_550 -> m25_555  [key=2, style=dotted];
m25_550 -> m25_552  [key=1, style=dashed, color=darkseagreen4, label=sb];
m25_550 -> m25_553  [key=1, style=dashed, color=darkseagreen4, label=sb];
m25_551 -> m25_552  [key=0, style=solid];
m25_551 -> m25_553  [key=0, style=solid];
m25_552 -> m25_551  [key=0, style=solid];
m25_552 -> m25_556  [key=2, style=dotted];
m25_553 -> m25_554  [key=0, style=solid];
m25_553 -> m25_557  [key=2, style=dotted];
m25_554 -> m25_549  [key=0, style=bold, color=blue];
m25_20 -> m25_21  [key=0, style=solid];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_35  [key=2, style=dotted];
m25_21 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label=staff];
m25_21 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label=staff];
m25_21 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=staff];
m25_22 -> m25_23  [key=0, style=solid];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_36  [key=2, style=dotted];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_37  [key=2, style=dotted];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_39  [key=2, style=dotted];
m25_26 -> m25_40  [key=2, style=dotted];
m25_26 -> m25_41  [key=2, style=dotted];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_38  [key=2, style=dotted];
m25_25 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_25 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_27 -> m25_28  [key=0, style=solid];
m25_27 -> m25_42  [key=2, style=dotted];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=memoryTraceWriter];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_43  [key=2, style=dotted];
m25_29 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label=output];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_44  [key=2, style=dotted];
m25_31 -> m25_45  [key=2, style=dotted];
m25_31 -> m25_19  [key=2, style=dotted];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_19  [key=2, style=dotted];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_46  [key=2, style=dotted];
m25_33 -> m25_47  [key=2, style=dotted];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_32  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_34 -> m25_20  [key=0, style=bold, color=blue];
m25_230 -> m25_231  [key=0, style=solid];
m25_231 -> m25_232  [key=0, style=solid];
m25_231 -> m25_96  [key=2, style=dotted];
m25_231 -> m25_233  [key=1, style=dashed, color=green, label=traceWriter];
m25_231 -> m25_234  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_235  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_236  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_237  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_238  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_239  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_240  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_241  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_242  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_231 -> m25_243  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_232 -> m25_233  [key=0, style=solid, color=green];
m25_232 -> m25_232  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_233 -> m25_234  [key=0, style=solid, color=green];
m25_233 -> m25_39  [key=2, style=dotted, color=green];
m25_233 -> m25_245  [key=2, style=dotted, color=green];
m25_234 -> m25_235  [key=0, style=solid];
m25_234 -> m25_19  [key=2, style=dotted];
m25_235 -> m25_236  [key=0, style=solid];
m25_235 -> m25_19  [key=2, style=dotted];
m25_236 -> m25_237  [key=0, style=solid];
m25_236 -> m25_19  [key=2, style=dotted];
m25_237 -> m25_238  [key=0, style=solid];
m25_237 -> m25_19  [key=2, style=dotted];
m25_238 -> m25_239  [key=0, style=solid];
m25_238 -> m25_126  [key=2, style=dotted];
m25_238 -> m25_47  [key=2, style=dotted];
m25_239 -> m25_240  [key=0, style=solid];
m25_239 -> m25_19  [key=2, style=dotted];
m25_240 -> m25_241  [key=0, style=solid];
m25_240 -> m25_19  [key=2, style=dotted];
m25_241 -> m25_242  [key=0, style=solid];
m25_241 -> m25_126  [key=2, style=dotted];
m25_241 -> m25_47  [key=2, style=dotted];
m25_242 -> m25_243  [key=0, style=solid];
m25_242 -> m25_126  [key=2, style=dotted];
m25_242 -> m25_47  [key=2, style=dotted];
m25_243 -> m25_244  [key=0, style=solid];
m25_243 -> m25_126  [key=2, style=dotted];
m25_243 -> m25_47  [key=2, style=dotted];
m25_244 -> m25_230  [key=0, style=bold, color=blue];
m25_246 -> m25_247  [key=0, style=solid];
m25_247 -> m25_248  [key=0, style=solid];
m25_247 -> m25_96  [key=2, style=dotted];
m25_247 -> m25_255  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_247 -> m25_249  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_247 -> m25_250  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_247 -> m25_251  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_247 -> m25_252  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_248 -> m25_249  [key=0, style=solid];
m25_248 -> m25_140  [key=2, style=dotted];
m25_248 -> m25_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_249 -> m25_250  [key=0, style=solid];
m25_249 -> m25_126  [key=2, style=dotted];
m25_249 -> m25_47  [key=2, style=dotted];
m25_250 -> m25_251  [key=0, style=solid];
m25_250 -> m25_19  [key=2, style=dotted];
m25_251 -> m25_252  [key=0, style=solid];
m25_251 -> m25_19  [key=2, style=dotted];
m25_252 -> m25_253  [key=0, style=solid];
m25_252 -> m25_19  [key=2, style=dotted];
m25_253 -> m25_246  [key=0, style=bold, color=blue];
m25_48 -> m25_49  [key=0, style=solid];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_55  [key=1, style=dashed, color=green, label=json];
m25_49 -> m25_61  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_49 -> m25_49  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_35  [key=2, style=dotted];
m25_50 -> m25_52  [key=1, style=dashed, color=darkseagreen4, label=staff];
m25_50 -> m25_53  [key=1, style=dashed, color=darkseagreen4, label=staff];
m25_55 -> m25_56  [key=0, style=solid, color=green];
m25_55 -> m25_39  [key=2, style=dotted, color=green];
m25_55 -> m25_40  [key=2, style=dotted, color=green];
m25_55 -> m25_63  [key=2, style=dotted, color=green];
m25_61 -> m25_62  [key=0, style=solid];
m25_61 -> m25_46  [key=2, style=dotted];
m25_61 -> m25_47  [key=2, style=dotted];
m25_51 -> m25_52  [key=0, style=solid];
m25_52 -> m25_53  [key=0, style=solid];
m25_52 -> m25_36  [key=2, style=dotted];
m25_53 -> m25_54  [key=0, style=solid];
m25_53 -> m25_37  [key=2, style=dotted];
m25_54 -> m25_55  [key=0, style=solid, color=green];
m25_54 -> m25_38  [key=2, style=dotted];
m25_54 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_54 -> m25_57  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_42  [key=2, style=dotted];
m25_57 -> m25_58  [key=0, style=solid];
m25_57 -> m25_60  [key=1, style=dashed, color=darkseagreen4, label=memoryTraceWriter];
m25_58 -> m25_59  [key=0, style=solid];
m25_58 -> m25_43  [key=2, style=dotted];
m25_58 -> m25_61  [key=1, style=dashed, color=darkseagreen4, label=output];
m25_60 -> m25_61  [key=0, style=solid];
m25_60 -> m25_44  [key=2, style=dotted];
m25_60 -> m25_45  [key=2, style=dotted];
m25_60 -> m25_19  [key=2, style=dotted];
m25_59 -> m25_60  [key=0, style=solid];
m25_59 -> m25_19  [key=2, style=dotted];
m25_62 -> m25_48  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_13  [key=2, style=dotted];
m25_1 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=sw];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_14  [key=2, style=dotted];
m25_2 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label=listener];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_18  [key=2, style=dotted];
m25_11 -> m25_19  [key=2, style=dotted];
m25_11 -> m25_530  [key=3, color=green, style=bold, label="Local variable System.Reflection.Emit.DynamicMethod dynamicMethod"];
m25_3 -> m25_4  [key=0, style=solid];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_15  [key=2, style=dotted];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_16  [key=2, style=dotted];
m25_5 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_5 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_5 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_5 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_5 -> m25_530  [key=3, color=green, style=bold, label="Local variable System.Reflection.Emit.DynamicMethod dynamicMethod"];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_17  [key=2, style=dotted];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_17  [key=2, style=dotted];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_17  [key=2, style=dotted];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_17  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_17  [key=2, style=dotted];
m25_12 -> m25_0  [key=0, style=bold, color=blue];
m25_198 -> m25_199  [key=0, style=solid];
m25_199 -> m25_200  [key=0, style=solid];
m25_199 -> m25_96  [key=2, style=dotted];
m25_199 -> m25_201  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_202  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_203  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_204  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_205  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_206  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_207  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_208  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_209  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_199 -> m25_210  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_200 -> m25_201  [key=0, style=solid];
m25_200 -> m25_36  [key=2, style=dotted];
m25_200 -> m25_99  [key=2, style=dotted];
m25_200 -> m25_98  [key=2, style=dotted];
m25_201 -> m25_202  [key=0, style=solid];
m25_201 -> m25_39  [key=2, style=dotted];
m25_201 -> m25_171  [key=2, style=dotted];
m25_202 -> m25_203  [key=0, style=solid];
m25_202 -> m25_19  [key=2, style=dotted];
m25_203 -> m25_204  [key=0, style=solid];
m25_203 -> m25_19  [key=2, style=dotted];
m25_204 -> m25_205  [key=0, style=solid];
m25_204 -> m25_19  [key=2, style=dotted];
m25_205 -> m25_206  [key=0, style=solid];
m25_205 -> m25_19  [key=2, style=dotted];
m25_206 -> m25_207  [key=0, style=solid];
m25_206 -> m25_19  [key=2, style=dotted];
m25_207 -> m25_208  [key=0, style=solid];
m25_207 -> m25_19  [key=2, style=dotted];
m25_208 -> m25_209  [key=0, style=solid];
m25_208 -> m25_19  [key=2, style=dotted];
m25_209 -> m25_210  [key=0, style=solid];
m25_209 -> m25_19  [key=2, style=dotted];
m25_210 -> m25_211  [key=0, style=solid];
m25_210 -> m25_19  [key=2, style=dotted];
m25_211 -> m25_198  [key=0, style=bold, color=blue];
m25_538 -> m25_539  [key=0, style=solid];
m25_539 -> m25_540  [key=0, style=solid];
m25_540 -> m25_538  [key=0, style=bold, color=blue];
m25_96 -> m25_541  [key=0, style=solid];
m25_541 -> m25_542  [key=0, style=solid];
m25_542 -> m25_543  [key=0, style=solid];
m25_542 -> m25_36  [key=2, style=dotted];
m25_543 -> m25_96  [key=0, style=bold, color=blue];
m25_337 -> m25_338  [key=0, style=solid];
m25_338 -> m25_339  [key=0, style=solid];
m25_338 -> m25_399  [key=2, style=dotted];
m25_339 -> m25_340  [key=0, style=solid];
m25_339 -> m25_400  [key=2, style=dotted];
m25_340 -> m25_341  [key=0, style=solid];
m25_340 -> m25_401  [key=2, style=dotted];
m25_340 -> m25_342  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_343  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_344  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_345  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_346  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_347  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_348  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_349  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_350  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_351  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_352  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_353  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_354  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_355  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_356  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_357  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_358  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_359  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_360  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_361  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_362  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_363  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_364  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_365  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_366  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_367  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_368  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_369  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_370  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_371  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_372  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_373  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_374  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_375  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_376  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_377  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_378  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_379  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_380  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_381  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_382  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_383  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_384  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_385  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_386  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_387  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_388  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_389  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_390  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_391  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_392  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_393  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_394  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_395  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_396  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_340 -> m25_397  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_341 -> m25_342  [key=0, style=solid];
m25_341 -> m25_402  [key=2, style=dotted];
m25_342 -> m25_343  [key=0, style=solid];
m25_342 -> m25_403  [key=2, style=dotted];
m25_343 -> m25_344  [key=0, style=solid];
m25_343 -> m25_404  [key=2, style=dotted];
m25_344 -> m25_345  [key=0, style=solid];
m25_344 -> m25_405  [key=2, style=dotted];
m25_345 -> m25_346  [key=0, style=solid];
m25_345 -> m25_37  [key=2, style=dotted];
m25_345 -> m25_406  [key=2, style=dotted];
m25_346 -> m25_347  [key=0, style=solid];
m25_346 -> m25_407  [key=2, style=dotted];
m25_346 -> m25_408  [key=2, style=dotted];
m25_346 -> m25_409  [key=2, style=dotted];
m25_347 -> m25_348  [key=0, style=solid];
m25_347 -> m25_410  [key=2, style=dotted];
m25_348 -> m25_349  [key=0, style=solid];
m25_348 -> m25_411  [key=2, style=dotted];
m25_349 -> m25_350  [key=0, style=solid];
m25_349 -> m25_412  [key=2, style=dotted];
m25_350 -> m25_351  [key=0, style=solid];
m25_350 -> m25_413  [key=2, style=dotted];
m25_351 -> m25_352  [key=0, style=solid];
m25_351 -> m25_414  [key=2, style=dotted];
m25_352 -> m25_353  [key=0, style=solid];
m25_352 -> m25_415  [key=2, style=dotted];
m25_353 -> m25_354  [key=0, style=solid];
m25_353 -> m25_416  [key=2, style=dotted];
m25_354 -> m25_355  [key=0, style=solid];
m25_354 -> m25_413  [key=2, style=dotted];
m25_355 -> m25_356  [key=0, style=solid];
m25_355 -> m25_417  [key=2, style=dotted];
m25_356 -> m25_357  [key=0, style=solid];
m25_356 -> m25_418  [key=2, style=dotted];
m25_357 -> m25_358  [key=0, style=solid];
m25_357 -> m25_419  [key=2, style=dotted];
m25_358 -> m25_359  [key=0, style=solid];
m25_358 -> m25_420  [key=2, style=dotted];
m25_359 -> m25_360  [key=0, style=solid];
m25_359 -> m25_421  [key=2, style=dotted];
m25_360 -> m25_361  [key=0, style=solid];
m25_360 -> m25_422  [key=2, style=dotted];
m25_361 -> m25_362  [key=0, style=solid];
m25_361 -> m25_37  [key=2, style=dotted];
m25_361 -> m25_423  [key=2, style=dotted];
m25_362 -> m25_363  [key=0, style=solid];
m25_362 -> m25_407  [key=2, style=dotted];
m25_362 -> m25_408  [key=2, style=dotted];
m25_362 -> m25_424  [key=2, style=dotted];
m25_363 -> m25_364  [key=0, style=solid];
m25_363 -> m25_425  [key=2, style=dotted];
m25_364 -> m25_365  [key=0, style=solid];
m25_364 -> m25_426  [key=2, style=dotted];
m25_365 -> m25_366  [key=0, style=solid];
m25_365 -> m25_427  [key=2, style=dotted];
m25_366 -> m25_367  [key=0, style=solid];
m25_366 -> m25_428  [key=2, style=dotted];
m25_367 -> m25_368  [key=0, style=solid];
m25_367 -> m25_429  [key=2, style=dotted];
m25_368 -> m25_369  [key=0, style=solid];
m25_368 -> m25_430  [key=2, style=dotted];
m25_369 -> m25_370  [key=0, style=solid];
m25_369 -> m25_431  [key=2, style=dotted];
m25_370 -> m25_371  [key=0, style=solid];
m25_370 -> m25_428  [key=2, style=dotted];
m25_371 -> m25_372  [key=0, style=solid];
m25_371 -> m25_432  [key=2, style=dotted];
m25_372 -> m25_373  [key=0, style=solid];
m25_372 -> m25_433  [key=2, style=dotted];
m25_373 -> m25_374  [key=0, style=solid];
m25_373 -> m25_434  [key=2, style=dotted];
m25_374 -> m25_375  [key=0, style=solid];
m25_374 -> m25_435  [key=2, style=dotted];
m25_375 -> m25_376  [key=0, style=solid];
m25_375 -> m25_436  [key=2, style=dotted];
m25_376 -> m25_377  [key=0, style=solid];
m25_376 -> m25_437  [key=2, style=dotted];
m25_377 -> m25_378  [key=0, style=solid];
m25_377 -> m25_438  [key=2, style=dotted];
m25_377 -> m25_439  [key=2, style=dotted];
m25_378 -> m25_379  [key=0, style=solid];
m25_378 -> m25_440  [key=2, style=dotted];
m25_379 -> m25_380  [key=0, style=solid];
m25_379 -> m25_441  [key=2, style=dotted];
m25_379 -> m25_442  [key=2, style=dotted];
m25_380 -> m25_381  [key=0, style=solid];
m25_380 -> m25_443  [key=2, style=dotted];
m25_381 -> m25_382  [key=0, style=solid];
m25_381 -> m25_444  [key=2, style=dotted];
m25_381 -> m25_445  [key=2, style=dotted];
m25_382 -> m25_383  [key=0, style=solid];
m25_382 -> m25_446  [key=2, style=dotted];
m25_382 -> m25_447  [key=2, style=dotted];
m25_383 -> m25_384  [key=0, style=solid];
m25_383 -> m25_448  [key=2, style=dotted];
m25_384 -> m25_385  [key=0, style=solid];
m25_384 -> m25_449  [key=2, style=dotted];
m25_385 -> m25_386  [key=0, style=solid];
m25_385 -> m25_450  [key=2, style=dotted];
m25_386 -> m25_387  [key=0, style=solid];
m25_386 -> m25_451  [key=2, style=dotted];
m25_387 -> m25_388  [key=0, style=solid];
m25_387 -> m25_452  [key=2, style=dotted];
m25_388 -> m25_389  [key=0, style=solid];
m25_388 -> m25_413  [key=2, style=dotted];
m25_389 -> m25_390  [key=0, style=solid];
m25_389 -> m25_453  [key=2, style=dotted];
m25_390 -> m25_391  [key=0, style=solid];
m25_390 -> m25_454  [key=2, style=dotted];
m25_391 -> m25_392  [key=0, style=solid];
m25_391 -> m25_455  [key=2, style=dotted];
m25_392 -> m25_393  [key=0, style=solid];
m25_392 -> m25_456  [key=2, style=dotted];
m25_393 -> m25_394  [key=0, style=solid];
m25_393 -> m25_457  [key=2, style=dotted];
m25_394 -> m25_395  [key=0, style=solid];
m25_394 -> m25_458  [key=2, style=dotted];
m25_395 -> m25_396  [key=0, style=solid];
m25_395 -> m25_459  [key=2, style=dotted];
m25_396 -> m25_397  [key=0, style=solid];
m25_396 -> m25_460  [key=2, style=dotted];
m25_396 -> m25_461  [key=2, style=dotted];
m25_397 -> m25_398  [key=0, style=solid];
m25_397 -> m25_460  [key=2, style=dotted];
m25_397 -> m25_19  [key=2, style=dotted];
m25_398 -> m25_337  [key=0, style=bold, color=blue];
m25_81 -> m25_82  [key=0, style=solid];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_96  [key=2, style=dotted];
m25_82 -> m25_84  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_85  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_86  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_87  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_88  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_89  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_91  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_92  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_93  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_94  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_82 -> m25_530  [key=3, color=green, style=bold, label="Local variable System.Reflection.Emit.DynamicMethod dynamicMethod"];
m25_83 -> m25_84  [key=0, style=solid];
m25_83 -> m25_97  [key=2, style=dotted];
m25_83 -> m25_36  [key=2, style=dotted];
m25_83 -> m25_98  [key=2, style=dotted];
m25_83 -> m25_99  [key=2, style=dotted];
m25_83 -> m25_39  [key=2, style=dotted];
m25_83 -> m25_41  [key=2, style=dotted];
m25_83 -> m25_82  [key=3, color=green, style=bold, label="Parameter variable System.Type type"];
m25_83 -> m25_83  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.Emit.ILGenerator generator"];
m25_84 -> m25_85  [key=0, style=solid];
m25_84 -> m25_19  [key=2, style=dotted];
m25_85 -> m25_86  [key=0, style=solid];
m25_85 -> m25_19  [key=2, style=dotted];
m25_86 -> m25_87  [key=0, style=solid];
m25_86 -> m25_19  [key=2, style=dotted];
m25_87 -> m25_88  [key=0, style=solid];
m25_87 -> m25_19  [key=2, style=dotted];
m25_88 -> m25_89  [key=0, style=solid];
m25_88 -> m25_19  [key=2, style=dotted];
m25_89 -> m25_90  [key=0, style=solid];
m25_89 -> m25_19  [key=2, style=dotted];
m25_90 -> m25_91  [key=0, style=solid];
m25_90 -> m25_19  [key=2, style=dotted];
m25_91 -> m25_92  [key=0, style=solid];
m25_91 -> m25_19  [key=2, style=dotted];
m25_92 -> m25_93  [key=0, style=solid];
m25_92 -> m25_19  [key=2, style=dotted];
m25_93 -> m25_94  [key=0, style=solid];
m25_93 -> m25_19  [key=2, style=dotted];
m25_94 -> m25_95  [key=0, style=solid];
m25_94 -> m25_100  [key=2, style=dotted];
m25_94 -> m25_101  [key=2, style=dotted];
m25_94 -> m25_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_94 -> m25_530  [key=3, color=green, style=bold, label="Local variable System.Reflection.Emit.DynamicMethod dynamicMethod"];
m25_95 -> m25_81  [key=0, style=bold, color=blue];
m25_181 -> m25_182  [key=0, style=solid];
m25_182 -> m25_183  [key=0, style=solid];
m25_182 -> m25_184  [key=1, style=dashed, color=green, label=json];
m25_182 -> m25_182  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_183 -> m25_184  [key=0, style=solid, color=green];
m25_183 -> m25_96  [key=2, style=dotted];
m25_183 -> m25_185  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_183 -> m25_186  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_183 -> m25_187  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_184 -> m25_185  [key=0, style=solid, color=green];
m25_184 -> m25_39  [key=2, style=dotted, color=green];
m25_184 -> m25_63  [key=2, style=dotted, color=green];
m25_185 -> m25_186  [key=0, style=solid];
m25_185 -> m25_100  [key=2, style=dotted];
m25_185 -> m25_47  [key=2, style=dotted];
m25_185 -> m25_189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_186 -> m25_187  [key=0, style=solid];
m25_186 -> m25_100  [key=2, style=dotted];
m25_186 -> m25_47  [key=2, style=dotted];
m25_186 -> m25_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_187 -> m25_188  [key=0, style=solid];
m25_187 -> m25_100  [key=2, style=dotted];
m25_187 -> m25_47  [key=2, style=dotted];
m25_187 -> m25_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_188 -> m25_181  [key=0, style=bold, color=blue];
m25_447 -> m25_11  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.Emit.ILGenerator generator"];
m25_447 -> m25_4  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.MethodBase method"];
m25_447 -> m25_6  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.Emit.ILGenerator generator"];
m25_447 -> m25_8  [key=3, color=green, style=bold, label="Parameter variable int argsIndex"];
m25_447 -> m25_43  [key=3, color=green, style=bold, label="Parameter variable int argsIndex"];
m25_64 -> m25_65  [key=0, style=solid];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> m25_38  [key=2, style=dotted];
m25_65 -> m25_68  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_65 -> m25_70  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_66 -> m25_67  [key=0, style=solid];
m25_66 -> m25_68  [key=1, style=dashed, color=darkseagreen4, label=i];
m25_66 -> m25_69  [key=1, style=dashed, color=darkseagreen4, label=i];
m25_66 -> m25_10  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m25_68 -> m25_69  [key=0, style=solid];
m25_68 -> m25_75  [key=2, style=dotted];
m25_68 -> m25_76  [key=2, style=dotted];
m25_70 -> m25_71  [key=0, style=solid];
m25_70 -> m25_44  [key=2, style=dotted];
m25_70 -> m25_77  [key=2, style=dotted];
m25_70 -> m25_72  [key=1, style=dashed, color=darkseagreen4, label=traceMessages];
m25_70 -> m25_73  [key=1, style=dashed, color=darkseagreen4, label=traceMessages];
m25_67 -> m25_68  [key=0, style=solid];
m25_67 -> m25_70  [key=0, style=solid];
m25_69 -> m25_67  [key=0, style=solid];
m25_69 -> m25_69  [key=1, style=dashed, color=darkseagreen4, label=i];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_19  [key=2, style=dotted];
m25_72 -> m25_73  [key=0, style=solid];
m25_72 -> m25_78  [key=2, style=dotted];
m25_72 -> m25_79  [key=2, style=dotted];
m25_72 -> m25_47  [key=2, style=dotted];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_80  [key=2, style=dotted];
m25_73 -> m25_79  [key=2, style=dotted];
m25_73 -> m25_47  [key=2, style=dotted];
m25_74 -> m25_64  [key=0, style=bold, color=blue];
m25_105 -> m25_106  [key=0, style=solid];
m25_106 -> m25_107  [key=0, style=solid];
m25_106 -> m25_96  [key=2, style=dotted];
m25_106 -> m25_113  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_114  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_115  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_116  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_117  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_118  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_119  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_120  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_121  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_122  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_123  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_124  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_106 -> m25_93  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.PropertyInfo propertyInfo"];
m25_107 -> m25_108  [key=0, style=solid];
m25_107 -> m25_39  [key=2, style=dotted];
m25_107 -> m25_63  [key=2, style=dotted];
m25_107 -> m25_109  [key=1, style=dashed, color=darkseagreen4, label=o2];
m25_107 -> m25_110  [key=1, style=dashed, color=darkseagreen4, label=o2];
m25_107 -> m25_111  [key=1, style=dashed, color=darkseagreen4, label=o2];
m25_107 -> m25_112  [key=1, style=dashed, color=darkseagreen4, label=o2];
m25_107 -> m25_107  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.Emit.ILGenerator generator"];
m25_107 -> m25_530  [key=3, color=green, style=bold, label="Local variable System.Reflection.Emit.DynamicMethod dynamicMethod"];
m25_113 -> m25_114  [key=0, style=solid];
m25_113 -> m25_19  [key=2, style=dotted];
m25_114 -> m25_115  [key=0, style=solid];
m25_114 -> m25_19  [key=2, style=dotted];
m25_115 -> m25_116  [key=0, style=solid];
m25_115 -> m25_126  [key=2, style=dotted];
m25_115 -> m25_47  [key=2, style=dotted];
m25_116 -> m25_117  [key=0, style=solid];
m25_116 -> m25_19  [key=2, style=dotted];
m25_117 -> m25_118  [key=0, style=solid];
m25_117 -> m25_126  [key=2, style=dotted];
m25_117 -> m25_47  [key=2, style=dotted];
m25_117 -> m25_530  [key=3, color=green, style=bold, label="Local variable System.Reflection.Emit.DynamicMethod dynamicMethod"];
m25_118 -> m25_119  [key=0, style=solid];
m25_118 -> m25_19  [key=2, style=dotted];
m25_119 -> m25_120  [key=0, style=solid];
m25_119 -> m25_126  [key=2, style=dotted];
m25_119 -> m25_47  [key=2, style=dotted];
m25_120 -> m25_121  [key=0, style=solid];
m25_120 -> m25_126  [key=2, style=dotted];
m25_120 -> m25_47  [key=2, style=dotted];
m25_121 -> m25_122  [key=0, style=solid];
m25_121 -> m25_19  [key=2, style=dotted];
m25_122 -> m25_123  [key=0, style=solid];
m25_122 -> m25_126  [key=2, style=dotted];
m25_122 -> m25_47  [key=2, style=dotted];
m25_123 -> m25_124  [key=0, style=solid];
m25_123 -> m25_126  [key=2, style=dotted];
m25_123 -> m25_47  [key=2, style=dotted];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_100  [key=2, style=dotted];
m25_124 -> m25_101  [key=2, style=dotted];
m25_124 -> m25_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_124 -> m25_115  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.FieldInfo fieldInfo"];
m25_124 -> m25_118  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.Emit.ILGenerator generator"];
m25_108 -> m25_109  [key=0, style=solid];
m25_108 -> m25_19  [key=2, style=dotted];
m25_109 -> m25_110  [key=0, style=solid];
m25_109 -> m25_19  [key=2, style=dotted];
m25_110 -> m25_111  [key=0, style=solid];
m25_110 -> m25_19  [key=2, style=dotted];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> m25_19  [key=2, style=dotted];
m25_112 -> m25_113  [key=0, style=solid];
m25_112 -> m25_19  [key=2, style=dotted];
m25_125 -> m25_105  [key=0, style=bold, color=blue];
m25_289 -> m25_290  [key=0, style=solid];
m25_290 -> m25_291  [key=0, style=solid];
m25_290 -> m25_334  [key=2, style=dotted];
m25_290 -> m25_292  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_290 -> m25_293  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_290 -> m25_295  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_290 -> m25_313  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_290 -> m25_314  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_290 -> m25_315  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_290 -> m25_316  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_290 -> m25_317  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_291 -> m25_292  [key=0, style=solid];
m25_292 -> m25_293  [key=0, style=solid];
m25_293 -> m25_294  [key=0, style=solid];
m25_295 -> m25_296  [key=0, style=solid];
m25_295 -> m25_39  [key=2, style=dotted];
m25_295 -> m25_171  [key=2, style=dotted];
m25_295 -> m25_302  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_295 -> m25_304  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_313 -> m25_314  [key=0, style=solid];
m25_314 -> m25_315  [key=0, style=solid];
m25_315 -> m25_316  [key=0, style=solid];
m25_316 -> m25_317  [key=0, style=solid];
m25_317 -> m25_318  [key=0, style=solid];
m25_317 -> m25_336  [key=2, style=dotted];
m25_317 -> m25_320  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_294 -> m25_295  [key=0, style=solid];
m25_294 -> m25_96  [key=2, style=dotted];
m25_294 -> m25_296  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_294 -> m25_297  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_294 -> m25_298  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_294 -> m25_299  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_294 -> m25_300  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_294 -> m25_301  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_296 -> m25_297  [key=0, style=solid];
m25_296 -> m25_19  [key=2, style=dotted];
m25_297 -> m25_298  [key=0, style=solid];
m25_297 -> m25_19  [key=2, style=dotted];
m25_298 -> m25_299  [key=0, style=solid];
m25_298 -> m25_19  [key=2, style=dotted];
m25_299 -> m25_300  [key=0, style=solid];
m25_299 -> m25_19  [key=2, style=dotted];
m25_300 -> m25_301  [key=0, style=solid];
m25_300 -> m25_19  [key=2, style=dotted];
m25_301 -> m25_302  [key=0, style=solid];
m25_301 -> m25_19  [key=2, style=dotted];
m25_302 -> m25_303  [key=0, style=solid];
m25_302 -> m25_19  [key=2, style=dotted];
m25_304 -> m25_305  [key=0, style=solid];
m25_304 -> m25_39  [key=2, style=dotted];
m25_304 -> m25_63  [key=2, style=dotted];
m25_304 -> m25_307  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_304 -> m25_308  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_304 -> m25_309  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_304 -> m25_310  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_304 -> m25_311  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_304 -> m25_312  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_303 -> m25_304  [key=0, style=solid];
m25_303 -> m25_96  [key=2, style=dotted];
m25_303 -> m25_305  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_303 -> m25_306  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_305 -> m25_306  [key=0, style=solid];
m25_305 -> m25_19  [key=2, style=dotted];
m25_306 -> m25_307  [key=0, style=solid];
m25_306 -> m25_126  [key=2, style=dotted];
m25_306 -> m25_47  [key=2, style=dotted];
m25_307 -> m25_308  [key=0, style=solid];
m25_307 -> m25_335  [key=2, style=dotted];
m25_308 -> m25_309  [key=0, style=solid];
m25_308 -> m25_101  [key=2, style=dotted];
m25_309 -> m25_310  [key=0, style=solid];
m25_309 -> m25_101  [key=2, style=dotted];
m25_310 -> m25_311  [key=0, style=solid];
m25_310 -> m25_101  [key=2, style=dotted];
m25_311 -> m25_312  [key=0, style=solid];
m25_311 -> m25_101  [key=2, style=dotted];
m25_312 -> m25_313  [key=0, style=solid];
m25_312 -> m25_19  [key=2, style=dotted];
m25_318 -> m25_319  [key=0, style=solid];
m25_318 -> m25_19  [key=2, style=dotted];
m25_320 -> m25_321  [key=0, style=solid];
m25_320 -> m25_39  [key=2, style=dotted];
m25_320 -> m25_63  [key=2, style=dotted];
m25_320 -> m25_326  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_320 -> m25_327  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_320 -> m25_328  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_320 -> m25_329  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_320 -> m25_330  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_320 -> m25_331  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_320 -> m25_332  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m25_319 -> m25_320  [key=0, style=solid];
m25_319 -> m25_96  [key=2, style=dotted];
m25_319 -> m25_321  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_319 -> m25_322  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_319 -> m25_323  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_319 -> m25_324  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_319 -> m25_325  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_321 -> m25_322  [key=0, style=solid];
m25_321 -> m25_19  [key=2, style=dotted];
m25_322 -> m25_323  [key=0, style=solid];
m25_322 -> m25_19  [key=2, style=dotted];
m25_323 -> m25_324  [key=0, style=solid];
m25_323 -> m25_19  [key=2, style=dotted];
m25_324 -> m25_325  [key=0, style=solid];
m25_324 -> m25_19  [key=2, style=dotted];
m25_325 -> m25_326  [key=0, style=solid];
m25_325 -> m25_126  [key=2, style=dotted];
m25_325 -> m25_47  [key=2, style=dotted];
m25_326 -> m25_327  [key=0, style=solid];
m25_326 -> m25_19  [key=2, style=dotted];
m25_327 -> m25_328  [key=0, style=solid];
m25_327 -> m25_47  [key=2, style=dotted];
m25_328 -> m25_329  [key=0, style=solid];
m25_328 -> m25_47  [key=2, style=dotted];
m25_329 -> m25_330  [key=0, style=solid];
m25_329 -> m25_47  [key=2, style=dotted];
m25_330 -> m25_331  [key=0, style=solid];
m25_330 -> m25_47  [key=2, style=dotted];
m25_331 -> m25_332  [key=0, style=solid];
m25_331 -> m25_19  [key=2, style=dotted];
m25_332 -> m25_333  [key=0, style=solid];
m25_332 -> m25_19  [key=2, style=dotted];
m25_333 -> m25_289  [key=0, style=bold, color=blue];
m25_544 -> m25_545  [key=0, style=solid];
m25_545 -> m25_546  [key=0, style=solid];
m25_545 -> m25_547  [key=2, style=dotted];
m25_545 -> m25_548  [key=2, style=dotted];
m25_546 -> m25_544  [key=0, style=bold, color=blue];
m25_530 -> m25_82  [key=3, color=green, style=bold, label="Parameter variable System.Type owner"];
m25_530 -> m25_117  [key=3, color=green, style=bold, label="Parameter variable System.Type returnType"];
m25_462 -> m25_463  [key=0, style=solid];
m25_463 -> m25_464  [key=0, style=solid];
m25_463 -> m25_524  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_463 -> m25_463  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_464 -> m25_465  [key=0, style=solid];
m25_464 -> m25_526  [key=2, style=dotted];
m25_524 -> m25_525  [key=0, style=solid];
m25_524 -> m25_537  [key=2, style=dotted];
m25_524 -> m25_19  [key=2, style=dotted];
m25_465 -> m25_466  [key=0, style=solid];
m25_465 -> m25_527  [key=2, style=dotted];
m25_466 -> m25_467  [key=0, style=solid];
m25_466 -> m25_528  [key=2, style=dotted];
m25_466 -> m25_468  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_469  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_470  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_471  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_472  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_473  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_474  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_475  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_476  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_477  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_478  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_479  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_480  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_481  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_482  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_483  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_484  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_485  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_486  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_487  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_488  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_489  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_490  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_491  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_492  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_493  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_494  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_495  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_496  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_497  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_498  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_499  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_500  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_501  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_502  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_503  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_504  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_505  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_506  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_507  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_508  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_509  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_510  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_511  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_512  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_513  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_514  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_515  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_516  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_517  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_518  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_519  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_520  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_521  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_522  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_523  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_466 -> m25_524  [key=1, style=dashed, color=darkseagreen4, label=traceReader];
m25_467 -> m25_468  [key=0, style=solid];
m25_467 -> m25_529  [key=2, style=dotted];
m25_468 -> m25_469  [key=0, style=solid];
m25_468 -> m25_19  [key=2, style=dotted];
m25_469 -> m25_470  [key=0, style=solid];
m25_469 -> m25_529  [key=2, style=dotted];
m25_470 -> m25_471  [key=0, style=solid];
m25_470 -> m25_19  [key=2, style=dotted];
m25_471 -> m25_472  [key=0, style=solid];
m25_471 -> m25_19  [key=2, style=dotted];
m25_472 -> m25_473  [key=0, style=solid];
m25_472 -> m25_529  [key=2, style=dotted];
m25_473 -> m25_474  [key=0, style=solid];
m25_473 -> m25_19  [key=2, style=dotted];
m25_474 -> m25_475  [key=0, style=solid];
m25_474 -> m25_19  [key=2, style=dotted];
m25_475 -> m25_476  [key=0, style=solid];
m25_475 -> m25_530  [key=2, style=dotted];
m25_476 -> m25_477  [key=0, style=solid];
m25_476 -> m25_19  [key=2, style=dotted];
m25_477 -> m25_478  [key=0, style=solid];
m25_477 -> m25_19  [key=2, style=dotted];
m25_478 -> m25_479  [key=0, style=solid];
m25_478 -> m25_19  [key=2, style=dotted];
m25_479 -> m25_480  [key=0, style=solid];
m25_480 -> m25_481  [key=0, style=solid];
m25_480 -> m25_19  [key=2, style=dotted];
m25_481 -> m25_482  [key=0, style=solid];
m25_481 -> m25_530  [key=2, style=dotted];
m25_482 -> m25_483  [key=0, style=solid];
m25_482 -> m25_19  [key=2, style=dotted];
m25_483 -> m25_484  [key=0, style=solid];
m25_483 -> m25_19  [key=2, style=dotted];
m25_484 -> m25_485  [key=0, style=solid];
m25_484 -> m25_531  [key=2, style=dotted];
m25_485 -> m25_486  [key=0, style=solid];
m25_485 -> m25_19  [key=2, style=dotted];
m25_486 -> m25_487  [key=0, style=solid];
m25_486 -> m25_37  [key=2, style=dotted];
m25_486 -> m25_19  [key=2, style=dotted];
m25_487 -> m25_488  [key=0, style=solid];
m25_487 -> m25_532  [key=2, style=dotted];
m25_488 -> m25_489  [key=0, style=solid];
m25_488 -> m25_19  [key=2, style=dotted];
m25_489 -> m25_490  [key=0, style=solid];
m25_489 -> m25_407  [key=2, style=dotted];
m25_489 -> m25_19  [key=2, style=dotted];
m25_490 -> m25_491  [key=0, style=solid];
m25_490 -> m25_533  [key=2, style=dotted];
m25_491 -> m25_492  [key=0, style=solid];
m25_491 -> m25_19  [key=2, style=dotted];
m25_492 -> m25_493  [key=0, style=solid];
m25_492 -> m25_446  [key=2, style=dotted];
m25_492 -> m25_19  [key=2, style=dotted];
m25_493 -> m25_494  [key=0, style=solid];
m25_493 -> m25_534  [key=2, style=dotted];
m25_494 -> m25_495  [key=0, style=solid];
m25_494 -> m25_19  [key=2, style=dotted];
m25_495 -> m25_496  [key=0, style=solid];
m25_495 -> m25_19  [key=2, style=dotted];
m25_496 -> m25_497  [key=0, style=solid];
m25_496 -> m25_535  [key=2, style=dotted];
m25_497 -> m25_498  [key=0, style=solid];
m25_497 -> m25_19  [key=2, style=dotted];
m25_498 -> m25_499  [key=0, style=solid];
m25_498 -> m25_19  [key=2, style=dotted];
m25_499 -> m25_500  [key=0, style=solid];
m25_499 -> m25_529  [key=2, style=dotted];
m25_500 -> m25_501  [key=0, style=solid];
m25_500 -> m25_19  [key=2, style=dotted];
m25_501 -> m25_502  [key=0, style=solid];
m25_501 -> m25_19  [key=2, style=dotted];
m25_502 -> m25_503  [key=0, style=solid];
m25_502 -> m25_438  [key=2, style=dotted];
m25_502 -> m25_19  [key=2, style=dotted];
m25_503 -> m25_504  [key=0, style=solid];
m25_503 -> m25_529  [key=2, style=dotted];
m25_504 -> m25_505  [key=0, style=solid];
m25_504 -> m25_19  [key=2, style=dotted];
m25_505 -> m25_506  [key=0, style=solid];
m25_505 -> m25_529  [key=2, style=dotted];
m25_506 -> m25_507  [key=0, style=solid];
m25_506 -> m25_19  [key=2, style=dotted];
m25_507 -> m25_508  [key=0, style=solid];
m25_507 -> m25_529  [key=2, style=dotted];
m25_508 -> m25_509  [key=0, style=solid];
m25_508 -> m25_19  [key=2, style=dotted];
m25_509 -> m25_510  [key=0, style=solid];
m25_509 -> m25_529  [key=2, style=dotted];
m25_510 -> m25_511  [key=0, style=solid];
m25_510 -> m25_19  [key=2, style=dotted];
m25_511 -> m25_512  [key=0, style=solid];
m25_511 -> m25_19  [key=2, style=dotted];
m25_512 -> m25_513  [key=0, style=solid];
m25_512 -> m25_529  [key=2, style=dotted];
m25_513 -> m25_514  [key=0, style=solid];
m25_513 -> m25_19  [key=2, style=dotted];
m25_514 -> m25_515  [key=0, style=solid];
m25_514 -> m25_529  [key=2, style=dotted];
m25_515 -> m25_516  [key=0, style=solid];
m25_515 -> m25_19  [key=2, style=dotted];
m25_516 -> m25_517  [key=0, style=solid];
m25_516 -> m25_19  [key=2, style=dotted];
m25_517 -> m25_518  [key=0, style=solid];
m25_517 -> m25_529  [key=2, style=dotted];
m25_518 -> m25_519  [key=0, style=solid];
m25_518 -> m25_19  [key=2, style=dotted];
m25_519 -> m25_520  [key=0, style=solid];
m25_519 -> m25_529  [key=2, style=dotted];
m25_520 -> m25_521  [key=0, style=solid];
m25_520 -> m25_19  [key=2, style=dotted];
m25_521 -> m25_522  [key=0, style=solid];
m25_521 -> m25_529  [key=2, style=dotted];
m25_521 -> m25_101  [key=2, style=dotted];
m25_522 -> m25_523  [key=0, style=solid];
m25_522 -> m25_536  [key=2, style=dotted];
m25_523 -> m25_524  [key=0, style=solid];
m25_523 -> m25_537  [key=2, style=dotted];
m25_523 -> m25_461  [key=2, style=dotted];
m25_525 -> m25_462  [key=0, style=bold, color=blue];
m25_254 -> m25_255  [key=0, style=solid];
m25_102 -> m25_103  [key=0, style=solid];
m25_103 -> m25_104  [key=0, style=solid];
m25_104 -> m25_102  [key=0, style=bold, color=blue];
m25_127 -> m25_128  [key=0, style=solid];
m25_128 -> m25_129  [key=0, style=solid];
m25_129 -> m25_127  [key=0, style=bold, color=blue];
m25_142 -> m25_143  [key=0, style=solid];
m25_142 -> m25_39  [key=2, style=dotted];
m25_142 -> m25_63  [key=2, style=dotted];
m25_141 -> m25_142  [key=0, style=solid];
m25_143 -> m25_141  [key=0, style=bold, color=blue];
m25_157 -> m25_158  [key=0, style=solid];
m25_157 -> m25_39  [key=2, style=dotted];
m25_157 -> m25_63  [key=2, style=dotted];
m25_156 -> m25_157  [key=0, style=solid];
m25_158 -> m25_156  [key=0, style=bold, color=blue];
m25_172 -> m25_173  [key=0, style=solid];
m25_175 -> m25_176  [key=0, style=solid];
m25_178 -> m25_179  [key=0, style=solid];
m25_173 -> m25_174  [key=0, style=solid];
m25_174 -> m25_172  [key=0, style=bold, color=blue];
m25_176 -> m25_177  [key=0, style=solid];
m25_177 -> m25_175  [key=0, style=bold, color=blue];
m25_179 -> m25_180  [key=0, style=solid];
m25_180 -> m25_178  [key=0, style=bold, color=blue];
m25_189 -> m25_190  [key=0, style=solid];
m25_192 -> m25_193  [key=0, style=solid];
m25_195 -> m25_196  [key=0, style=solid];
m25_190 -> m25_191  [key=0, style=solid];
m25_191 -> m25_189  [key=0, style=bold, color=blue];
m25_193 -> m25_194  [key=0, style=solid];
m25_194 -> m25_192  [key=0, style=bold, color=blue];
m25_196 -> m25_197  [key=0, style=solid];
m25_196 -> m25_126  [key=2, style=dotted];
m25_197 -> m25_195  [key=0, style=bold, color=blue];
m25_255 -> m25_256  [key=0, style=solid];
m25_255 -> m25_39  [key=2, style=dotted];
m25_255 -> m25_63  [key=2, style=dotted];
m25_256 -> m25_254  [key=0, style=bold, color=blue];
m25_159 -> m25_160  [key=0, style=solid];
m25_160 -> m25_161  [key=0, style=solid];
m25_160 -> m25_169  [key=2, style=dotted];
m25_160 -> m25_162  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m25_160 -> m25_164  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m25_161 -> m25_162  [key=0, style=solid];
m25_161 -> m25_169  [key=2, style=dotted];
m25_161 -> m25_170  [key=2, style=dotted];
m25_162 -> m25_163  [key=0, style=solid];
m25_162 -> m25_170  [key=2, style=dotted];
m25_164 -> m25_165  [key=0, style=solid];
m25_164 -> m25_39  [key=2, style=dotted];
m25_164 -> m25_171  [key=2, style=dotted];
m25_163 -> m25_164  [key=0, style=solid];
m25_163 -> m25_96  [key=2, style=dotted];
m25_163 -> m25_165  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_163 -> m25_166  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_163 -> m25_167  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_165 -> m25_166  [key=0, style=solid];
m25_165 -> m25_100  [key=2, style=dotted];
m25_165 -> m25_47  [key=2, style=dotted];
m25_165 -> m25_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_166 -> m25_167  [key=0, style=solid];
m25_166 -> m25_100  [key=2, style=dotted];
m25_166 -> m25_47  [key=2, style=dotted];
m25_166 -> m25_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_167 -> m25_168  [key=0, style=solid];
m25_167 -> m25_100  [key=2, style=dotted];
m25_167 -> m25_47  [key=2, style=dotted];
m25_167 -> m25_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_168 -> m25_159  [key=0, style=bold, color=blue];
m25_264 -> m25_265  [key=0, style=solid];
m25_265 -> m25_266  [key=0, style=solid];
m25_265 -> m25_96  [key=2, style=dotted];
m25_265 -> m25_267  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_265 -> m25_268  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_265 -> m25_269  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_265 -> m25_270  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_265 -> m25_271  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_266 -> m25_267  [key=0, style=solid];
m25_266 -> m25_266  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_267 -> m25_268  [key=0, style=solid];
m25_267 -> m25_39  [key=2, style=dotted];
m25_267 -> m25_63  [key=2, style=dotted];
m25_268 -> m25_269  [key=0, style=solid];
m25_268 -> m25_19  [key=2, style=dotted];
m25_269 -> m25_270  [key=0, style=solid];
m25_269 -> m25_19  [key=2, style=dotted];
m25_270 -> m25_271  [key=0, style=solid];
m25_270 -> m25_126  [key=2, style=dotted];
m25_270 -> m25_47  [key=2, style=dotted];
m25_271 -> m25_272  [key=0, style=solid];
m25_271 -> m25_126  [key=2, style=dotted];
m25_271 -> m25_47  [key=2, style=dotted];
m25_272 -> m25_264  [key=0, style=bold, color=blue];
m25_212 -> m25_213  [key=0, style=solid];
m25_213 -> m25_214  [key=0, style=solid];
m25_213 -> m25_96  [key=2, style=dotted];
m25_213 -> m25_215  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_213 -> m25_216  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_213 -> m25_217  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_213 -> m25_218  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_213 -> m25_219  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_214 -> m25_215  [key=0, style=solid];
m25_214 -> m25_36  [key=2, style=dotted];
m25_214 -> m25_37  [key=2, style=dotted];
m25_215 -> m25_216  [key=0, style=solid];
m25_215 -> m25_39  [key=2, style=dotted];
m25_215 -> m25_40  [key=2, style=dotted];
m25_215 -> m25_171  [key=2, style=dotted];
m25_216 -> m25_217  [key=0, style=solid];
m25_216 -> m25_19  [key=2, style=dotted];
m25_217 -> m25_218  [key=0, style=solid];
m25_217 -> m25_19  [key=2, style=dotted];
m25_218 -> m25_219  [key=0, style=solid];
m25_218 -> m25_19  [key=2, style=dotted];
m25_219 -> m25_220  [key=0, style=solid];
m25_219 -> m25_19  [key=2, style=dotted];
m25_220 -> m25_212  [key=0, style=bold, color=blue];
m25_130 -> m25_131  [key=0, style=solid];
m25_131 -> m25_132  [key=0, style=solid];
m25_131 -> m25_133  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_131 -> m25_142  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_131 -> m25_131  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m25_132 -> m25_133  [key=0, style=solid];
m25_132 -> m25_96  [key=2, style=dotted];
m25_132 -> m25_142  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_132 -> m25_134  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_132 -> m25_135  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_132 -> m25_136  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_132 -> m25_137  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_132 -> m25_138  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_133 -> m25_134  [key=0, style=solid];
m25_133 -> m25_140  [key=2, style=dotted];
m25_133 -> m25_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_133 -> m25_530  [key=3, color=green, style=bold, label="Local variable System.Reflection.Emit.DynamicMethod dynamicMethod"];
m25_134 -> m25_135  [key=0, style=solid];
m25_134 -> m25_19  [key=2, style=dotted];
m25_135 -> m25_136  [key=0, style=solid];
m25_135 -> m25_19  [key=2, style=dotted];
m25_136 -> m25_137  [key=0, style=solid];
m25_136 -> m25_19  [key=2, style=dotted];
m25_137 -> m25_138  [key=0, style=solid];
m25_137 -> m25_19  [key=2, style=dotted];
m25_138 -> m25_139  [key=0, style=solid];
m25_138 -> m25_19  [key=2, style=dotted];
m25_139 -> m25_130  [key=0, style=bold, color=blue];
m25_273 -> m25_274  [key=0, style=solid];
m25_274 -> m25_275  [key=0, style=solid];
m25_274 -> m25_288  [key=2, style=dotted];
m25_274 -> m25_276  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_274 -> m25_277  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_274 -> m25_279  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_274 -> m25_283  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_274 -> m25_284  [key=1, style=dashed, color=darkseagreen4, label=c];
m25_275 -> m25_276  [key=0, style=solid];
m25_276 -> m25_277  [key=0, style=solid];
m25_277 -> m25_278  [key=0, style=solid];
m25_279 -> m25_280  [key=0, style=solid];
m25_279 -> m25_39  [key=2, style=dotted];
m25_279 -> m25_41  [key=2, style=dotted];
m25_283 -> m25_284  [key=0, style=solid];
m25_284 -> m25_285  [key=0, style=solid];
m25_284 -> m25_39  [key=2, style=dotted];
m25_284 -> m25_41  [key=2, style=dotted];
m25_278 -> m25_279  [key=0, style=solid];
m25_278 -> m25_96  [key=2, style=dotted];
m25_278 -> m25_280  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_278 -> m25_281  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_280 -> m25_281  [key=0, style=solid];
m25_280 -> m25_19  [key=2, style=dotted];
m25_281 -> m25_282  [key=0, style=solid];
m25_281 -> m25_19  [key=2, style=dotted];
m25_282 -> m25_283  [key=0, style=solid];
m25_282 -> m25_96  [key=2, style=dotted];
m25_282 -> m25_284  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_282 -> m25_285  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_282 -> m25_286  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_285 -> m25_286  [key=0, style=solid];
m25_285 -> m25_19  [key=2, style=dotted];
m25_286 -> m25_287  [key=0, style=solid];
m25_286 -> m25_19  [key=2, style=dotted];
m25_287 -> m25_273  [key=0, style=bold, color=blue];
m25_257 -> m25_258  [key=0, style=solid];
m25_258 -> m25_259  [key=0, style=solid];
m25_258 -> m25_96  [key=2, style=dotted];
m25_258 -> m25_260  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_258 -> m25_261  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_258 -> m25_262  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_259 -> m25_260  [key=0, style=solid];
m25_259 -> m25_39  [key=2, style=dotted];
m25_259 -> m25_63  [key=2, style=dotted];
m25_260 -> m25_261  [key=0, style=solid];
m25_260 -> m25_19  [key=2, style=dotted];
m25_261 -> m25_262  [key=0, style=solid];
m25_261 -> m25_19  [key=2, style=dotted];
m25_262 -> m25_263  [key=0, style=solid];
m25_262 -> m25_126  [key=2, style=dotted];
m25_262 -> m25_47  [key=2, style=dotted];
m25_263 -> m25_257  [key=0, style=bold, color=blue];
m25_558 -> m25_142  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_559 -> m25_142  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_560 -> m25_157  [key=1, style=dashed, color=darkseagreen4, label=json];
m25_561 -> m25_157  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_562 -> m25_255  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m25_563 -> m25_539  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TraceRecord"];
m25_564 -> m25_541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter"];
m25_564 -> m25_542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter"];
m25_564 -> m25_545  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter"];
m25_564 -> m25_551  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.InMemoryTraceWriter"];
m26_318 -> m26_319  [key=0, style=solid];
m26_319 -> m26_320  [key=0, style=solid];
m26_319 -> m26_311  [key=2, style=dotted];
m26_320 -> m26_318  [key=0, style=bold, color=blue];
m26_616 -> m26_617  [key=0, style=solid];
m26_617 -> m26_618  [key=0, style=solid];
m26_617 -> m26_617  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m26_618 -> m26_619  [key=0, style=solid];
m26_618 -> m26_7  [key=2, style=dotted];
m26_618 -> m26_160  [key=2, style=dotted];
m26_619 -> m26_620  [key=0, style=solid];
m26_620 -> m26_621  [key=0, style=solid];
m26_620 -> m26_9  [key=2, style=dotted];
m26_621 -> m26_616  [key=0, style=bold, color=blue];
m26_183 -> m26_184  [key=0, style=solid];
m26_184 -> m26_185  [key=0, style=solid];
m26_184 -> m26_82  [key=2, style=dotted];
m26_184 -> m26_187  [key=1, style=dashed, color=darkseagreen4, label=listRef];
m26_185 -> m26_186  [key=0, style=solid];
m26_185 -> m26_181  [key=2, style=dotted];
m26_185 -> m26_15  [key=2, style=dotted];
m26_187 -> m26_188  [key=0, style=solid];
m26_187 -> m26_9  [key=2, style=dotted];
m26_186 -> m26_187  [key=0, style=solid];
m26_186 -> m26_182  [key=2, style=dotted];
m26_186 -> m26_188  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_188 -> m26_189  [key=0, style=solid];
m26_188 -> m26_75  [key=2, style=dotted];
m26_188 -> m26_190  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m26_188 -> m26_191  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m26_189 -> m26_190  [key=0, style=solid];
m26_189 -> m26_9  [key=2, style=dotted];
m26_190 -> m26_191  [key=0, style=solid];
m26_190 -> m26_57  [key=2, style=dotted];
m26_191 -> m26_192  [key=0, style=solid];
m26_191 -> m26_193  [key=1, style=dashed, color=darkseagreen4, label=nested];
m26_191 -> m26_194  [key=1, style=dashed, color=darkseagreen4, label=nested];
m26_191 -> m26_195  [key=1, style=dashed, color=darkseagreen4, label=nested];
m26_191 -> m26_196  [key=1, style=dashed, color=darkseagreen4, label=nested];
m26_191 -> m26_197  [key=1, style=dashed, color=darkseagreen4, label=nested];
m26_192 -> m26_193  [key=0, style=solid];
m26_192 -> m26_9  [key=2, style=dotted];
m26_193 -> m26_194  [key=0, style=solid];
m26_193 -> m26_9  [key=2, style=dotted];
m26_194 -> m26_195  [key=0, style=solid];
m26_194 -> m26_9  [key=2, style=dotted];
m26_195 -> m26_196  [key=0, style=solid];
m26_195 -> m26_9  [key=2, style=dotted];
m26_196 -> m26_197  [key=0, style=solid];
m26_196 -> m26_9  [key=2, style=dotted];
m26_197 -> m26_198  [key=0, style=solid];
m26_197 -> m26_9  [key=2, style=dotted];
m26_198 -> m26_183  [key=0, style=bold, color=blue];
m26_279 -> m26_280  [key=0, style=solid];
m26_280 -> m26_281  [key=0, style=solid];
m26_280 -> m26_287  [key=2, style=dotted];
m26_280 -> m26_282  [key=1, style=dashed, color=darkseagreen4, label=message];
m26_280 -> m26_283  [key=1, style=dashed, color=darkseagreen4, label=message];
m26_281 -> m26_282  [key=0, style=solid];
m26_282 -> m26_283  [key=0, style=solid];
m26_282 -> m26_288  [key=2, style=dotted];
m26_283 -> m26_284  [key=0, style=solid];
m26_283 -> m26_182  [key=2, style=dotted];
m26_284 -> m26_285  [key=0, style=solid];
m26_284 -> m26_75  [key=2, style=dotted];
m26_285 -> m26_286  [key=0, style=solid];
m26_286 -> m26_279  [key=0, style=bold, color=blue];
m26_653 -> m26_654  [key=0, style=solid];
m26_653 -> m26_656  [key=1, style=dashed, color=darkseagreen4, label=object];
m26_653 -> m26_658  [key=1, style=dashed, color=darkseagreen4, label=object];
m26_653 -> m26_659  [key=1, style=dashed, color=darkseagreen4, label=object];
m26_653 -> m26_634  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m26_654 -> m26_655  [key=0, style=solid];
m26_654 -> m26_656  [key=0, style=solid];
m26_656 -> m26_657  [key=0, style=solid];
m26_656 -> m26_658  [key=0, style=solid];
m26_656 -> m26_662  [key=2, style=dotted];
m26_658 -> m26_659  [key=0, style=solid];
m26_658 -> m26_660  [key=0, style=solid];
m26_659 -> m26_661  [key=0, style=solid];
m26_659 -> m26_663  [key=2, style=dotted];
m26_655 -> m26_661  [key=0, style=solid];
m26_657 -> m26_661  [key=0, style=solid];
m26_660 -> m26_661  [key=0, style=solid];
m26_661 -> m26_653  [key=0, style=bold, color=blue];
m26_580 -> m26_581  [key=0, style=solid];
m26_581 -> m26_582  [key=0, style=solid];
m26_581 -> m26_578  [key=2, style=dotted];
m26_581 -> m26_590  [key=2, style=dotted];
m26_581 -> m26_583  [key=1, style=dashed, color=darkseagreen4, label=p];
m26_582 -> m26_583  [key=0, style=solid];
m26_582 -> m26_7  [key=2, style=dotted];
m26_582 -> m26_585  [key=1, style=dashed, color=darkseagreen4, label=settings];
m26_583 -> m26_584  [key=0, style=solid];
m26_583 -> m26_568  [key=2, style=dotted];
m26_583 -> m26_585  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_585 -> m26_586  [key=0, style=solid];
m26_585 -> m26_160  [key=2, style=dotted];
m26_585 -> m26_587  [key=1, style=dashed, color=darkseagreen4, label=p2];
m26_585 -> m26_588  [key=1, style=dashed, color=darkseagreen4, label=p2];
m26_584 -> m26_585  [key=0, style=solid];
m26_584 -> m26_9  [key=2, style=dotted];
m26_586 -> m26_587  [key=0, style=solid];
m26_586 -> m26_57  [key=2, style=dotted];
m26_587 -> m26_588  [key=0, style=solid];
m26_587 -> m26_9  [key=2, style=dotted];
m26_588 -> m26_589  [key=0, style=solid];
m26_588 -> m26_9  [key=2, style=dotted];
m26_589 -> m26_580  [key=0, style=bold, color=blue];
m26_17 -> m26_18  [key=0, style=solid];
m26_18 -> m26_19  [key=0, style=solid];
m26_18 -> m26_25  [key=2, style=dotted];
m26_18 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label=sb];
m26_18 -> m26_23  [key=1, style=dashed, color=red, label=sb];
m26_18 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label=sb];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m26_19 -> m26_19  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_26  [key=2, style=dotted];
m26_23 -> m26_24  [key=0, style=solid, color=red];
m26_23 -> m26_27  [key=2, style=dotted, color=red];
m26_23 -> m26_28  [key=1, style=dashed, color=red, label="lambda expression"];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_23  [key=0, style=solid, color=red];
m26_22 -> m26_20  [key=0, style=solid];
m26_22 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m26_24 -> m26_17  [key=0, style=bold, color=blue];
m26_627 -> m26_628  [key=0, style=solid];
m26_628 -> m26_629  [key=0, style=solid];
m26_628 -> m26_630  [key=2, style=dotted];
m26_629 -> m26_627  [key=0, style=bold, color=blue];
m26_289 -> m26_290  [key=0, style=solid];
m26_290 -> m26_291  [key=0, style=solid];
m26_290 -> m26_5  [key=2, style=dotted];
m26_290 -> m26_302  [key=2, style=dotted];
m26_290 -> m26_15  [key=2, style=dotted];
m26_291 -> m26_292  [key=0, style=solid];
m26_291 -> m26_7  [key=2, style=dotted];
m26_291 -> m26_8  [key=2, style=dotted];
m26_291 -> m26_293  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_291 -> m26_294  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_292 -> m26_293  [key=0, style=solid];
m26_292 -> m26_82  [key=2, style=dotted];
m26_293 -> m26_294  [key=0, style=solid];
m26_293 -> m26_9  [key=2, style=dotted];
m26_294 -> m26_295  [key=0, style=solid];
m26_294 -> m26_7  [key=2, style=dotted];
m26_294 -> m26_303  [key=2, style=dotted];
m26_294 -> m26_296  [key=1, style=dashed, color=darkseagreen4, label=c];
m26_295 -> m26_296  [key=0, style=solid];
m26_295 -> m26_57  [key=2, style=dotted];
m26_296 -> m26_297  [key=0, style=solid];
m26_296 -> m26_298  [key=1, style=dashed, color=darkseagreen4, label=newCollection];
m26_296 -> m26_299  [key=1, style=dashed, color=darkseagreen4, label=newCollection];
m26_297 -> m26_298  [key=0, style=solid];
m26_297 -> m26_9  [key=2, style=dotted];
m26_298 -> m26_299  [key=0, style=solid];
m26_298 -> m26_9  [key=2, style=dotted];
m26_299 -> m26_300  [key=0, style=solid];
m26_300 -> m26_301  [key=0, style=solid];
m26_300 -> m26_9  [key=2, style=dotted];
m26_301 -> m26_289  [key=0, style=bold, color=blue];
m26_631 -> m26_632  [key=0, style=solid];
m26_631 -> m26_634  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m26_632 -> m26_633  [key=0, style=solid];
m26_632 -> m26_635  [key=1, style=dashed, color=darkseagreen4, label=w];
m26_633 -> m26_634  [key=0, style=solid];
m26_633 -> m26_635  [key=0, style=solid];
m26_635 -> m26_636  [key=0, style=solid];
m26_635 -> m26_637  [key=2, style=dotted];
m26_634 -> m26_636  [key=0, style=solid];
m26_636 -> m26_631  [key=0, style=bold, color=blue];
m26_569 -> m26_570  [key=0, style=solid];
m26_570 -> m26_571  [key=0, style=solid];
m26_570 -> m26_578  [key=2, style=dotted];
m26_570 -> m26_579  [key=2, style=dotted];
m26_570 -> m26_572  [key=1, style=dashed, color=darkseagreen4, label=p];
m26_571 -> m26_572  [key=0, style=solid];
m26_571 -> m26_7  [key=2, style=dotted];
m26_571 -> m26_574  [key=1, style=dashed, color=darkseagreen4, label=settings];
m26_572 -> m26_573  [key=0, style=solid];
m26_572 -> m26_568  [key=2, style=dotted];
m26_572 -> m26_574  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_574 -> m26_575  [key=0, style=solid];
m26_574 -> m26_160  [key=2, style=dotted];
m26_574 -> m26_576  [key=1, style=dashed, color=darkseagreen4, label=p2];
m26_573 -> m26_574  [key=0, style=solid];
m26_573 -> m26_9  [key=2, style=dotted];
m26_575 -> m26_576  [key=0, style=solid];
m26_575 -> m26_57  [key=2, style=dotted];
m26_576 -> m26_577  [key=0, style=solid];
m26_576 -> m26_9  [key=2, style=dotted];
m26_577 -> m26_569  [key=0, style=bold, color=blue];
m26_664 -> m26_665  [key=0, style=solid];
m26_664 -> m26_19  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetHashCode"];
m26_665 -> m26_666  [key=0, style=solid];
m26_665 -> m26_667  [key=0, style=solid];
m26_666 -> m26_668  [key=0, style=solid];
m26_667 -> m26_668  [key=0, style=solid];
m26_667 -> m26_669  [key=2, style=dotted];
m26_668 -> m26_664  [key=0, style=bold, color=blue];
m26_39 -> m26_40  [key=0, style=solid];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_37  [key=2, style=dotted];
m26_40 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m26_40 -> m26_47  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_50  [key=2, style=dotted];
m26_41 -> m26_43  [key=1, style=dashed, color=darkseagreen4, label=sw];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_51  [key=2, style=dotted];
m26_42 -> m26_52  [key=2, style=dotted];
m26_42 -> m26_53  [key=2, style=dotted];
m26_47 -> m26_48  [key=0, style=solid];
m26_47 -> m26_38  [key=2, style=dotted];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_54  [key=2, style=dotted];
m26_43 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=result];
m26_43 -> m26_46  [key=1, style=dashed, color=darkseagreen4, label=result];
m26_44 -> m26_45  [key=0, style=solid];
m26_44 -> m26_9  [key=2, style=dotted];
m26_45 -> m26_46  [key=0, style=solid];
m26_45 -> m26_55  [key=2, style=dotted];
m26_45 -> m26_56  [key=2, style=dotted];
m26_46 -> m26_47  [key=0, style=solid];
m26_46 -> m26_34  [key=2, style=dotted];
m26_46 -> m26_35  [key=2, style=dotted];
m26_48 -> m26_49  [key=0, style=solid];
m26_48 -> m26_57  [key=2, style=dotted];
m26_49 -> m26_39  [key=0, style=bold, color=blue];
m26_199 -> m26_200  [key=0, style=solid];
m26_200 -> m26_201  [key=0, style=solid];
m26_200 -> m26_200  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m26_201 -> m26_202  [key=0, style=solid];
m26_201 -> m26_7  [key=2, style=dotted];
m26_201 -> m26_206  [key=2, style=dotted];
m26_201 -> m26_90  [key=2, style=dotted];
m26_201 -> m26_203  [key=1, style=dashed, color=darkseagreen4, label=p];
m26_202 -> m26_203  [key=0, style=solid];
m26_202 -> m26_57  [key=2, style=dotted];
m26_203 -> m26_204  [key=0, style=solid];
m26_204 -> m26_205  [key=0, style=solid];
m26_204 -> m26_9  [key=2, style=dotted];
m26_205 -> m26_199  [key=0, style=bold, color=blue];
m26_207 -> m26_208  [key=0, style=solid];
m26_208 -> m26_209  [key=0, style=solid];
m26_209 -> m26_207  [key=0, style=bold, color=blue];
m26_210 -> m26_211  [key=0, style=solid];
m26_211 -> m26_212  [key=0, style=solid];
m26_211 -> m26_223  [key=2, style=dotted];
m26_211 -> m26_213  [key=1, style=dashed, color=darkseagreen4, label=binder];
m26_212 -> m26_213  [key=0, style=solid];
m26_212 -> m26_15  [key=2, style=dotted];
m26_212 -> m26_224  [key=2, style=dotted];
m26_212 -> m26_225  [key=2, style=dotted];
m26_213 -> m26_214  [key=0, style=solid];
m26_213 -> m26_7  [key=2, style=dotted];
m26_213 -> m26_8  [key=2, style=dotted];
m26_213 -> m26_215  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_214 -> m26_215  [key=0, style=solid];
m26_214 -> m26_9  [key=2, style=dotted];
m26_215 -> m26_216  [key=0, style=solid];
m26_215 -> m26_7  [key=2, style=dotted];
m26_215 -> m26_223  [key=2, style=dotted];
m26_215 -> m26_160  [key=2, style=dotted];
m26_215 -> m26_217  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m26_215 -> m26_219  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m26_215 -> m26_220  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m26_216 -> m26_217  [key=0, style=solid];
m26_216 -> m26_57  [key=2, style=dotted];
m26_217 -> m26_218  [key=0, style=solid];
m26_219 -> m26_220  [key=0, style=solid];
m26_219 -> m26_57  [key=2, style=dotted];
m26_220 -> m26_221  [key=0, style=solid];
m26_218 -> m26_219  [key=0, style=solid];
m26_218 -> m26_9  [key=2, style=dotted];
m26_221 -> m26_222  [key=0, style=solid];
m26_221 -> m26_9  [key=2, style=dotted];
m26_222 -> m26_210  [key=0, style=bold, color=blue];
m26_106 -> m26_107  [key=0, style=solid];
m26_107 -> m26_108  [key=0, style=solid];
m26_107 -> m26_109  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m26_108 -> m26_109  [key=0, style=solid];
m26_109 -> m26_110  [key=0, style=solid];
m26_110 -> m26_111  [key=0, style=solid];
m26_110 -> m26_7  [key=2, style=dotted];
m26_110 -> m26_90  [key=2, style=dotted];
m26_110 -> m26_112  [key=1, style=dashed, color=darkseagreen4, label=values];
m26_110 -> m26_113  [key=1, style=dashed, color=darkseagreen4, label=values];
m26_110 -> m26_119  [key=1, style=dashed, color=darkseagreen4, label=values];
m26_110 -> m26_120  [key=1, style=dashed, color=darkseagreen4, label=values];
m26_111 -> m26_112  [key=0, style=solid];
m26_111 -> m26_9  [key=2, style=dotted];
m26_112 -> m26_113  [key=0, style=solid];
m26_112 -> m26_114  [key=1, style=dashed, color=darkseagreen4, label=e];
m26_112 -> m26_115  [key=1, style=dashed, color=darkseagreen4, label=e];
m26_113 -> m26_114  [key=0, style=solid];
m26_113 -> m26_116  [key=1, style=dashed, color=darkseagreen4, label=p];
m26_113 -> m26_117  [key=1, style=dashed, color=darkseagreen4, label=p];
m26_113 -> m26_118  [key=1, style=dashed, color=darkseagreen4, label=p];
m26_119 -> m26_120  [key=0, style=solid];
m26_119 -> m26_9  [key=2, style=dotted];
m26_120 -> m26_121  [key=0, style=solid];
m26_120 -> m26_9  [key=2, style=dotted];
m26_114 -> m26_115  [key=0, style=solid];
m26_114 -> m26_9  [key=2, style=dotted];
m26_115 -> m26_116  [key=0, style=solid];
m26_115 -> m26_9  [key=2, style=dotted];
m26_116 -> m26_117  [key=0, style=solid];
m26_116 -> m26_9  [key=2, style=dotted];
m26_117 -> m26_118  [key=0, style=solid];
m26_117 -> m26_105  [key=2, style=dotted];
m26_117 -> m26_9  [key=2, style=dotted];
m26_118 -> m26_119  [key=0, style=solid];
m26_118 -> m26_105  [key=2, style=dotted];
m26_118 -> m26_9  [key=2, style=dotted];
m26_121 -> m26_106  [key=0, style=bold, color=blue];
m26_122 -> m26_123  [key=0, style=solid];
m26_123 -> m26_124  [key=0, style=solid];
m26_123 -> m26_125  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m26_123 -> m26_128  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m26_124 -> m26_125  [key=0, style=solid];
m26_124 -> m26_128  [key=1, style=dashed, color=darkseagreen4, label=personRef];
m26_125 -> m26_126  [key=0, style=solid];
m26_128 -> m26_129  [key=0, style=solid];
m26_128 -> m26_130  [key=2, style=dotted];
m26_128 -> m26_56  [key=2, style=dotted];
m26_126 -> m26_127  [key=0, style=solid];
m26_126 -> m26_129  [key=0, style=solid];
m26_126 -> m26_7  [key=2, style=dotted];
m26_126 -> m26_90  [key=2, style=dotted];
m26_127 -> m26_128  [key=0, style=solid];
m26_129 -> m26_122  [key=0, style=bold, color=blue];
m26_161 -> m26_162  [key=0, style=solid];
m26_162 -> m26_163  [key=0, style=solid];
m26_162 -> m26_166  [key=1, style=dashed, color=darkseagreen4, label=containerTypeName];
m26_163 -> m26_164  [key=0, style=solid];
m26_163 -> m26_166  [key=1, style=dashed, color=darkseagreen4, label=productListTypeName];
m26_166 -> m26_167  [key=0, style=solid];
m26_166 -> m26_9  [key=2, style=dotted];
m26_164 -> m26_165  [key=0, style=solid];
m26_164 -> m26_168  [key=2, style=dotted];
m26_164 -> m26_15  [key=2, style=dotted];
m26_165 -> m26_166  [key=0, style=solid];
m26_165 -> m26_7  [key=2, style=dotted];
m26_165 -> m26_8  [key=2, style=dotted];
m26_167 -> m26_161  [key=0, style=bold, color=blue];
m26_238 -> m26_239  [key=0, style=solid];
m26_239 -> m26_240  [key=0, style=solid];
m26_239 -> m26_273  [key=2, style=dotted];
m26_239 -> m26_241  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m26_239 -> m26_242  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m26_239 -> m26_243  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m26_239 -> m26_244  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m26_239 -> m26_251  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m26_240 -> m26_241  [key=0, style=solid];
m26_240 -> m26_274  [key=2, style=dotted];
m26_241 -> m26_242  [key=0, style=solid];
m26_241 -> m26_5  [key=2, style=dotted];
m26_242 -> m26_243  [key=0, style=solid];
m26_242 -> m26_15  [key=2, style=dotted];
m26_242 -> m26_275  [key=2, style=dotted];
m26_243 -> m26_244  [key=0, style=solid];
m26_243 -> m26_274  [key=2, style=dotted];
m26_243 -> m26_276  [key=2, style=dotted];
m26_244 -> m26_245  [key=0, style=solid];
m26_244 -> m26_274  [key=2, style=dotted];
m26_251 -> m26_252  [key=0, style=solid];
m26_251 -> m26_277  [key=2, style=dotted];
m26_245 -> m26_246  [key=0, style=solid];
m26_245 -> m26_37  [key=2, style=dotted];
m26_245 -> m26_250  [key=1, style=dashed, color=darkseagreen4, label=serializingTester];
m26_245 -> m26_251  [key=1, style=dashed, color=darkseagreen4, label=serializingTester];
m26_246 -> m26_247  [key=0, style=solid];
m26_250 -> m26_251  [key=0, style=solid];
m26_247 -> m26_248  [key=0, style=solid];
m26_247 -> m26_50  [key=2, style=dotted];
m26_247 -> m26_252  [key=1, style=dashed, color=darkseagreen4, label=sw];
m26_248 -> m26_249  [key=0, style=solid];
m26_248 -> m26_51  [key=2, style=dotted];
m26_248 -> m26_251  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m26_252 -> m26_253  [key=0, style=solid];
m26_252 -> m26_54  [key=2, style=dotted];
m26_252 -> m26_257  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_252 -> m26_258  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_249 -> m26_250  [key=0, style=solid];
m26_253 -> m26_254  [key=0, style=solid];
m26_253 -> m26_82  [key=2, style=dotted];
m26_253 -> m26_256  [key=1, style=dashed, color=darkseagreen4, label=contentSubClassRef];
m26_257 -> m26_258  [key=0, style=solid];
m26_257 -> m26_9  [key=2, style=dotted];
m26_258 -> m26_259  [key=0, style=solid];
m26_258 -> m26_35  [key=2, style=dotted];
m26_258 -> m26_261  [key=1, style=dashed, color=darkseagreen4, label=sr];
m26_254 -> m26_255  [key=0, style=solid];
m26_254 -> m26_82  [key=2, style=dotted];
m26_254 -> m26_256  [key=1, style=dashed, color=darkseagreen4, label=dictionaryRef];
m26_256 -> m26_257  [key=0, style=solid];
m26_255 -> m26_256  [key=0, style=solid];
m26_255 -> m26_82  [key=2, style=dotted];
m26_259 -> m26_260  [key=0, style=solid];
m26_259 -> m26_37  [key=2, style=dotted];
m26_259 -> m26_262  [key=1, style=dashed, color=darkseagreen4, label=deserializingTester];
m26_259 -> m26_263  [key=1, style=dashed, color=darkseagreen4, label=deserializingTester];
m26_261 -> m26_262  [key=0, style=solid];
m26_261 -> m26_34  [key=2, style=dotted];
m26_261 -> m26_263  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m26_260 -> m26_261  [key=0, style=solid];
m26_262 -> m26_263  [key=0, style=solid];
m26_263 -> m26_264  [key=0, style=solid];
m26_263 -> m26_38  [key=2, style=dotted];
m26_263 -> m26_265  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m26_263 -> m26_266  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m26_263 -> m26_267  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m26_263 -> m26_268  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m26_264 -> m26_265  [key=0, style=solid];
m26_264 -> m26_278  [key=2, style=dotted];
m26_265 -> m26_266  [key=0, style=solid];
m26_265 -> m26_57  [key=2, style=dotted];
m26_266 -> m26_267  [key=0, style=solid];
m26_266 -> m26_57  [key=2, style=dotted];
m26_267 -> m26_268  [key=0, style=solid];
m26_267 -> m26_9  [key=2, style=dotted];
m26_268 -> m26_269  [key=0, style=solid];
m26_268 -> m26_270  [key=1, style=dashed, color=darkseagreen4, label=list];
m26_268 -> m26_271  [key=1, style=dashed, color=darkseagreen4, label=list];
m26_269 -> m26_270  [key=0, style=solid];
m26_269 -> m26_57  [key=2, style=dotted];
m26_270 -> m26_271  [key=0, style=solid];
m26_270 -> m26_9  [key=2, style=dotted];
m26_271 -> m26_272  [key=0, style=solid];
m26_271 -> m26_57  [key=2, style=dotted];
m26_272 -> m26_238  [key=0, style=bold, color=blue];
m26_362 -> m26_363  [key=0, style=solid];
m26_362 -> m26_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.TypeNameHandling"];
m26_362 -> m26_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m26_362 -> m26_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m26_362 -> m26_355  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.Serialization.SerializableWrapper e"];
m26_362 -> m26_356  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag"];
m26_362 -> m26_357  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag"];
m26_362 -> m26_2  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag"];
m26_363 -> m26_364  [key=0, style=solid];
m26_363 -> m26_373  [key=2, style=dotted];
m26_363 -> m26_374  [key=2, style=dotted];
m26_366 -> m26_367  [key=0, style=solid];
m26_367 -> m26_368  [key=0, style=solid];
m26_367 -> m26_51  [key=2, style=dotted];
m26_367 -> m26_277  [key=2, style=dotted];
m26_371 -> m26_372  [key=0, style=solid];
m26_371 -> m26_9  [key=2, style=dotted];
m26_364 -> m26_365  [key=0, style=solid];
m26_364 -> m26_50  [key=2, style=dotted];
m26_364 -> m26_367  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_364 -> m26_368  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_364 -> m26_370  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_365 -> m26_366  [key=0, style=solid];
m26_365 -> m26_37  [key=2, style=dotted];
m26_365 -> m26_367  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m26_365 -> m26_370  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m26_368 -> m26_369  [key=0, style=solid];
m26_368 -> m26_54  [key=2, style=dotted];
m26_368 -> m26_374  [key=2, style=dotted];
m26_370 -> m26_371  [key=0, style=solid];
m26_370 -> m26_34  [key=2, style=dotted];
m26_370 -> m26_35  [key=2, style=dotted];
m26_370 -> m26_54  [key=2, style=dotted];
m26_370 -> m26_38  [key=2, style=dotted];
m26_369 -> m26_370  [key=0, style=solid];
m26_369 -> m26_375  [key=2, style=dotted];
m26_372 -> m26_362  [key=0, style=bold, color=blue];
m26_435 -> m26_436  [key=0, style=solid];
m26_436 -> m26_437  [key=0, style=solid];
m26_436 -> m26_453  [key=2, style=dotted];
m26_436 -> m26_438  [key=1, style=dashed, color=darkseagreen4, label=o1];
m26_436 -> m26_439  [key=1, style=dashed, color=darkseagreen4, label=o1];
m26_436 -> m26_440  [key=1, style=dashed, color=darkseagreen4, label=o1];
m26_436 -> m26_441  [key=1, style=dashed, color=darkseagreen4, label=o1];
m26_436 -> m26_442  [key=1, style=dashed, color=darkseagreen4, label=o1];
m26_437 -> m26_438  [key=0, style=solid];
m26_437 -> m26_418  [key=2, style=dotted];
m26_438 -> m26_439  [key=0, style=solid];
m26_439 -> m26_440  [key=0, style=solid];
m26_439 -> m26_418  [key=2, style=dotted];
m26_440 -> m26_441  [key=0, style=solid];
m26_441 -> m26_442  [key=0, style=solid];
m26_442 -> m26_443  [key=0, style=solid];
m26_442 -> m26_182  [key=2, style=dotted];
m26_442 -> m26_444  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_442 -> m26_445  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_443 -> m26_444  [key=0, style=solid];
m26_443 -> m26_443  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m26_444 -> m26_445  [key=0, style=solid];
m26_444 -> m26_9  [key=2, style=dotted];
m26_445 -> m26_446  [key=0, style=solid];
m26_445 -> m26_75  [key=2, style=dotted];
m26_445 -> m26_447  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_445 -> m26_448  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_445 -> m26_449  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_445 -> m26_450  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_445 -> m26_451  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_446 -> m26_447  [key=0, style=solid];
m26_446 -> m26_278  [key=2, style=dotted];
m26_447 -> m26_448  [key=0, style=solid];
m26_447 -> m26_57  [key=2, style=dotted];
m26_448 -> m26_449  [key=0, style=solid];
m26_448 -> m26_9  [key=2, style=dotted];
m26_449 -> m26_450  [key=0, style=solid];
m26_449 -> m26_57  [key=2, style=dotted];
m26_450 -> m26_451  [key=0, style=solid];
m26_450 -> m26_57  [key=2, style=dotted];
m26_451 -> m26_452  [key=0, style=solid];
m26_451 -> m26_454  [key=2, style=dotted];
m26_451 -> m26_9  [key=2, style=dotted];
m26_452 -> m26_435  [key=0, style=bold, color=blue];
m26_321 -> m26_322  [key=0, style=solid];
m26_321 -> m26_323  [key=0, style=bold, color=crimson];
m26_321 -> m26_324  [key=0, style=bold, color=crimson];
m26_321 -> m26_328  [key=0, style=bold, color=crimson];
m26_322 -> m26_323  [key=0, style=solid];
m26_322 -> m26_324  [key=0, style=solid];
m26_323 -> m26_324  [key=0, style=solid];
m26_324 -> m26_325  [key=0, style=solid];
m26_328 -> m26_329  [key=0, style=solid];
m26_325 -> m26_326  [key=0, style=solid];
m26_325 -> m26_327  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m26_325 -> m26_328  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m26_325 -> m26_329  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m26_326 -> m26_327  [key=0, style=solid];
m26_326 -> m26_330  [key=0, style=solid];
m26_327 -> m26_328  [key=0, style=solid];
m26_327 -> m26_329  [key=0, style=solid];
m26_329 -> m26_326  [key=0, style=solid];
m26_329 -> m26_329  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m26_330 -> m26_321  [key=0, style=bold, color=blue];
m26_455 -> m26_456  [key=0, style=solid];
m26_456 -> m26_457  [key=0, style=solid];
m26_456 -> m26_468  [key=2, style=dotted];
m26_456 -> m26_458  [key=1, style=dashed, color=darkseagreen4, label=c1];
m26_457 -> m26_458  [key=0, style=solid];
m26_457 -> m26_15  [key=2, style=dotted];
m26_457 -> m26_418  [key=2, style=dotted];
m26_458 -> m26_459  [key=0, style=solid];
m26_458 -> m26_182  [key=2, style=dotted];
m26_458 -> m26_460  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_459 -> m26_460  [key=0, style=solid];
m26_459 -> m26_9  [key=2, style=dotted];
m26_460 -> m26_461  [key=0, style=solid];
m26_460 -> m26_75  [key=2, style=dotted];
m26_460 -> m26_462  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_460 -> m26_463  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_460 -> m26_464  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_460 -> m26_465  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_461 -> m26_462  [key=0, style=solid];
m26_461 -> m26_9  [key=2, style=dotted];
m26_462 -> m26_463  [key=0, style=solid];
m26_462 -> m26_57  [key=2, style=dotted];
m26_463 -> m26_464  [key=0, style=solid];
m26_463 -> m26_57  [key=2, style=dotted];
m26_464 -> m26_465  [key=0, style=solid];
m26_464 -> m26_57  [key=2, style=dotted];
m26_465 -> m26_466  [key=0, style=solid];
m26_466 -> m26_467  [key=0, style=solid];
m26_466 -> m26_9  [key=2, style=dotted];
m26_467 -> m26_455  [key=0, style=bold, color=blue];
m26_91 -> m26_92  [key=0, style=solid];
m26_92 -> m26_93  [key=0, style=solid];
m26_92 -> m26_82  [key=2, style=dotted];
m26_93 -> m26_94  [key=0, style=solid];
m26_94 -> m26_95  [key=0, style=solid];
m26_94 -> m26_7  [key=2, style=dotted];
m26_94 -> m26_90  [key=2, style=dotted];
m26_95 -> m26_96  [key=0, style=solid];
m26_95 -> m26_57  [key=2, style=dotted];
m26_96 -> m26_91  [key=0, style=bold, color=blue];
m26_304 -> m26_305  [key=0, style=solid];
m26_305 -> m26_306  [key=0, style=solid];
m26_305 -> m26_82  [key=2, style=dotted];
m26_305 -> m26_308  [key=1, style=dashed, color=darkseagreen4, label=productClassRef];
m26_306 -> m26_307  [key=0, style=solid];
m26_306 -> m26_310  [key=2, style=dotted];
m26_308 -> m26_309  [key=0, style=solid];
m26_308 -> m26_9  [key=2, style=dotted];
m26_307 -> m26_308  [key=0, style=solid];
m26_307 -> m26_7  [key=2, style=dotted];
m26_307 -> m26_8  [key=2, style=dotted];
m26_309 -> m26_304  [key=0, style=bold, color=blue];
m26_670 -> m26_671  [key=0, style=solid];
m26_671 -> m26_672  [key=0, style=solid];
m26_671 -> m26_673  [key=2, style=dotted];
m26_672 -> m26_670  [key=0, style=bold, color=blue];
m26_353 -> m26_354  [key=0, style=solid];
m26_354 -> m26_355  [key=0, style=solid];
m26_354 -> m26_360  [key=2, style=dotted];
m26_355 -> m26_356  [key=0, style=solid];
m26_355 -> m26_361  [key=2, style=dotted];
m26_355 -> m26_357  [key=1, style=dashed, color=darkseagreen4, label=w];
m26_355 -> m26_358  [key=1, style=dashed, color=darkseagreen4, label=w];
m26_356 -> m26_357  [key=0, style=solid];
m26_356 -> m26_362  [key=2, style=dotted];
m26_357 -> m26_358  [key=0, style=solid];
m26_357 -> m26_362  [key=2, style=dotted];
m26_358 -> m26_359  [key=0, style=solid];
m26_358 -> m26_362  [key=2, style=dotted];
m26_359 -> m26_353  [key=0, style=bold, color=blue];
m26_331 -> m26_332  [key=0, style=solid];
m26_331 -> m26_321  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m26_332 -> m26_333  [key=0, style=solid];
m26_332 -> m26_321  [key=2, style=dotted];
m26_333 -> m26_331  [key=0, style=bold, color=blue];
m26_63 -> m26_64  [key=0, style=solid];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_73  [key=2, style=dotted];
m26_64 -> m26_66  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m26_64 -> m26_67  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m26_65 -> m26_66  [key=0, style=solid];
m26_65 -> m26_15  [key=2, style=dotted];
m26_65 -> m26_74  [key=2, style=dotted];
m26_66 -> m26_67  [key=0, style=solid];
m26_66 -> m26_5  [key=2, style=dotted];
m26_66 -> m26_74  [key=2, style=dotted];
m26_67 -> m26_68  [key=0, style=solid];
m26_67 -> m26_7  [key=2, style=dotted];
m26_67 -> m26_8  [key=2, style=dotted];
m26_67 -> m26_69  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_68 -> m26_69  [key=0, style=solid];
m26_68 -> m26_9  [key=2, style=dotted];
m26_69 -> m26_70  [key=0, style=solid];
m26_69 -> m26_75  [key=2, style=dotted];
m26_69 -> m26_71  [key=1, style=dashed, color=darkseagreen4, label=w2];
m26_70 -> m26_71  [key=0, style=solid];
m26_70 -> m26_57  [key=2, style=dotted];
m26_71 -> m26_72  [key=0, style=solid];
m26_71 -> m26_57  [key=2, style=dotted];
m26_72 -> m26_63  [key=0, style=bold, color=blue];
m26_650 -> m26_651  [key=0, style=solid];
m26_651 -> m26_652  [key=0, style=solid];
m26_651 -> m26_630  [key=2, style=dotted];
m26_652 -> m26_650  [key=0, style=bold, color=blue];
m26_469 -> m26_470  [key=0, style=solid];
m26_470 -> m26_471  [key=0, style=solid];
m26_470 -> m26_468  [key=2, style=dotted];
m26_470 -> m26_15  [key=2, style=dotted];
m26_470 -> m26_418  [key=2, style=dotted];
m26_471 -> m26_472  [key=0, style=solid];
m26_471 -> m26_182  [key=2, style=dotted];
m26_471 -> m26_473  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_472 -> m26_473  [key=0, style=solid];
m26_472 -> m26_9  [key=2, style=dotted];
m26_473 -> m26_474  [key=0, style=solid];
m26_473 -> m26_75  [key=2, style=dotted];
m26_473 -> m26_475  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_473 -> m26_476  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_473 -> m26_477  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_474 -> m26_475  [key=0, style=solid];
m26_474 -> m26_9  [key=2, style=dotted];
m26_475 -> m26_476  [key=0, style=solid];
m26_475 -> m26_57  [key=2, style=dotted];
m26_476 -> m26_477  [key=0, style=solid];
m26_476 -> m26_57  [key=2, style=dotted];
m26_477 -> m26_478  [key=0, style=solid];
m26_478 -> m26_479  [key=0, style=solid];
m26_478 -> m26_57  [key=2, style=dotted];
m26_479 -> m26_480  [key=0, style=solid];
m26_480 -> m26_481  [key=0, style=solid];
m26_480 -> m26_75  [key=2, style=dotted];
m26_480 -> m26_482  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_480 -> m26_483  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_480 -> m26_484  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_481 -> m26_482  [key=0, style=solid];
m26_481 -> m26_9  [key=2, style=dotted];
m26_482 -> m26_483  [key=0, style=solid];
m26_482 -> m26_57  [key=2, style=dotted];
m26_483 -> m26_484  [key=0, style=solid];
m26_483 -> m26_57  [key=2, style=dotted];
m26_484 -> m26_485  [key=0, style=solid];
m26_484 -> m26_486  [key=1, style=dashed, color=darkseagreen4, label=c];
m26_485 -> m26_486  [key=0, style=solid];
m26_485 -> m26_57  [key=2, style=dotted];
m26_486 -> m26_487  [key=0, style=solid];
m26_487 -> m26_488  [key=0, style=solid];
m26_487 -> m26_9  [key=2, style=dotted];
m26_488 -> m26_469  [key=0, style=bold, color=blue];
m26_83 -> m26_84  [key=0, style=solid];
m26_84 -> m26_85  [key=0, style=solid];
m26_84 -> m26_82  [key=2, style=dotted];
m26_85 -> m26_86  [key=0, style=solid];
m26_86 -> m26_87  [key=0, style=solid];
m26_86 -> m26_7  [key=2, style=dotted];
m26_86 -> m26_90  [key=2, style=dotted];
m26_86 -> m26_88  [key=1, style=dashed, color=darkseagreen4, label=employee];
m26_87 -> m26_88  [key=0, style=solid];
m26_87 -> m26_57  [key=2, style=dotted];
m26_88 -> m26_89  [key=0, style=solid];
m26_88 -> m26_9  [key=2, style=dotted];
m26_89 -> m26_83  [key=0, style=bold, color=blue];
m26_420 -> m26_421  [key=0, style=solid];
m26_421 -> m26_422  [key=0, style=solid];
m26_421 -> m26_434  [key=2, style=dotted];
m26_421 -> m26_423  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_421 -> m26_424  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_421 -> m26_425  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_422 -> m26_423  [key=0, style=solid];
m26_422 -> m26_418  [key=2, style=dotted];
m26_422 -> m26_275  [key=2, style=dotted];
m26_423 -> m26_424  [key=0, style=solid];
m26_423 -> m26_275  [key=2, style=dotted];
m26_424 -> m26_425  [key=0, style=solid];
m26_424 -> m26_275  [key=2, style=dotted];
m26_425 -> m26_426  [key=0, style=solid];
m26_425 -> m26_182  [key=2, style=dotted];
m26_425 -> m26_427  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_426 -> m26_427  [key=0, style=solid];
m26_426 -> m26_9  [key=2, style=dotted];
m26_427 -> m26_428  [key=0, style=solid];
m26_427 -> m26_75  [key=2, style=dotted];
m26_427 -> m26_429  [key=1, style=dashed, color=darkseagreen4, label=l2];
m26_427 -> m26_430  [key=1, style=dashed, color=darkseagreen4, label=l2];
m26_427 -> m26_431  [key=1, style=dashed, color=darkseagreen4, label=l2];
m26_427 -> m26_432  [key=1, style=dashed, color=darkseagreen4, label=l2];
m26_428 -> m26_429  [key=0, style=solid];
m26_428 -> m26_9  [key=2, style=dotted];
m26_429 -> m26_430  [key=0, style=solid];
m26_429 -> m26_57  [key=2, style=dotted];
m26_430 -> m26_431  [key=0, style=solid];
m26_430 -> m26_9  [key=2, style=dotted];
m26_431 -> m26_432  [key=0, style=solid];
m26_431 -> m26_57  [key=2, style=dotted];
m26_432 -> m26_433  [key=0, style=solid];
m26_432 -> m26_57  [key=2, style=dotted];
m26_433 -> m26_420  [key=0, style=bold, color=blue];
m26_376 -> m26_377  [key=0, style=solid];
m26_377 -> m26_378  [key=0, style=solid];
m26_377 -> m26_287  [key=2, style=dotted];
m26_377 -> m26_381  [key=2, style=dotted];
m26_378 -> m26_379  [key=0, style=solid];
m26_378 -> m26_7  [key=2, style=dotted];
m26_378 -> m26_382  [key=2, style=dotted];
m26_378 -> m26_383  [key=2, style=dotted];
m26_378 -> m26_8  [key=2, style=dotted];
m26_379 -> m26_380  [key=0, style=solid];
m26_379 -> m26_9  [key=2, style=dotted];
m26_380 -> m26_376  [key=0, style=bold, color=blue];
m26_150 -> m26_151  [key=0, style=solid];
m26_151 -> m26_152  [key=0, style=solid];
m26_152 -> m26_153  [key=0, style=solid];
m26_153 -> m26_154  [key=0, style=solid];
m26_153 -> m26_7  [key=2, style=dotted];
m26_153 -> m26_160  [key=2, style=dotted];
m26_153 -> m26_155  [key=1, style=dashed, color=darkseagreen4, label=message];
m26_154 -> m26_155  [key=0, style=solid];
m26_154 -> m26_57  [key=2, style=dotted];
m26_155 -> m26_156  [key=0, style=solid];
m26_155 -> m26_157  [key=1, style=dashed, color=darkseagreen4, label=request];
m26_155 -> m26_158  [key=1, style=dashed, color=darkseagreen4, label=request];
m26_156 -> m26_157  [key=0, style=solid];
m26_156 -> m26_9  [key=2, style=dotted];
m26_157 -> m26_158  [key=0, style=solid];
m26_157 -> m26_9  [key=2, style=dotted];
m26_158 -> m26_159  [key=0, style=solid];
m26_158 -> m26_9  [key=2, style=dotted];
m26_159 -> m26_150  [key=0, style=bold, color=blue];
m26_334 -> m26_335  [key=0, style=solid];
m26_335 -> m26_336  [key=0, style=solid];
m26_335 -> m26_351  [key=2, style=dotted];
m26_335 -> m26_338  [key=1, style=dashed, color=darkseagreen4, label=testerObject];
m26_335 -> m26_342  [key=1, style=dashed, color=darkseagreen4, label=testerObject];
m26_336 -> m26_337  [key=0, style=solid];
m26_336 -> m26_105  [key=2, style=dotted];
m26_338 -> m26_339  [key=0, style=solid];
m26_342 -> m26_343  [key=0, style=solid];
m26_342 -> m26_8  [key=2, style=dotted];
m26_342 -> m26_344  [key=1, style=dashed, color=darkseagreen4, label=output];
m26_342 -> m26_345  [key=1, style=dashed, color=darkseagreen4, label=output];
m26_337 -> m26_338  [key=0, style=solid];
m26_337 -> m26_349  [key=1, style=dashed, color=darkseagreen4, label=data];
m26_349 -> m26_350  [key=0, style=solid];
m26_349 -> m26_352  [key=2, style=dotted];
m26_339 -> m26_340  [key=0, style=solid];
m26_339 -> m26_7  [key=2, style=dotted];
m26_339 -> m26_341  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m26_339 -> m26_342  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m26_339 -> m26_345  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m26_340 -> m26_341  [key=0, style=solid];
m26_341 -> m26_342  [key=0, style=solid];
m26_345 -> m26_346  [key=0, style=solid];
m26_345 -> m26_160  [key=2, style=dotted];
m26_345 -> m26_347  [key=1, style=dashed, color=darkseagreen4, label=obj];
m26_345 -> m26_348  [key=1, style=dashed, color=darkseagreen4, label=obj];
m26_343 -> m26_344  [key=0, style=solid];
m26_343 -> m26_82  [key=2, style=dotted];
m26_344 -> m26_345  [key=0, style=solid];
m26_344 -> m26_9  [key=2, style=dotted];
m26_346 -> m26_347  [key=0, style=solid];
m26_346 -> m26_278  [key=2, style=dotted];
m26_347 -> m26_348  [key=0, style=solid];
m26_347 -> m26_56  [key=2, style=dotted];
m26_348 -> m26_349  [key=0, style=solid];
m26_350 -> m26_334  [key=0, style=bold, color=blue];
m26_97 -> m26_98  [key=0, style=solid];
m26_98 -> m26_99  [key=0, style=solid];
m26_98 -> m26_102  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m26_99 -> m26_100  [key=0, style=solid];
m26_99 -> m26_102  [key=1, style=dashed, color=darkseagreen4, label=personRef];
m26_102 -> m26_103  [key=0, style=solid];
m26_102 -> m26_9  [key=2, style=dotted];
m26_100 -> m26_101  [key=0, style=solid];
m26_100 -> m26_15  [key=2, style=dotted];
m26_100 -> m26_74  [key=2, style=dotted];
m26_100 -> m26_104  [key=2, style=dotted];
m26_100 -> m26_105  [key=2, style=dotted];
m26_101 -> m26_102  [key=0, style=solid];
m26_101 -> m26_7  [key=2, style=dotted];
m26_101 -> m26_8  [key=2, style=dotted];
m26_103 -> m26_97  [key=0, style=bold, color=blue];
m26_556 -> m26_557  [key=0, style=solid];
m26_557 -> m26_558  [key=0, style=solid];
m26_557 -> m26_560  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m26_557 -> m26_565  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m26_557 -> m26_557  [key=3, color=darkorchid, style=bold, label="Local variable string contextKey"];
m26_558 -> m26_559  [key=0, style=solid];
m26_558 -> m26_567  [key=2, style=dotted];
m26_558 -> m26_560  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m26_558 -> m26_565  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m26_560 -> m26_561  [key=0, style=solid];
m26_560 -> m26_275  [key=2, style=dotted];
m26_565 -> m26_566  [key=0, style=solid];
m26_565 -> m26_9  [key=2, style=dotted];
m26_559 -> m26_560  [key=0, style=solid];
m26_559 -> m26_5  [key=2, style=dotted];
m26_559 -> m26_562  [key=1, style=dashed, color=darkseagreen4, label=inputContext];
m26_562 -> m26_563  [key=0, style=solid];
m26_562 -> m26_568  [key=2, style=dotted];
m26_562 -> m26_564  [key=1, style=dashed, color=darkseagreen4, label=serializedString];
m26_561 -> m26_562  [key=0, style=solid];
m26_561 -> m26_7  [key=2, style=dotted];
m26_561 -> m26_564  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerSettings];
m26_564 -> m26_565  [key=0, style=solid];
m26_564 -> m26_303  [key=2, style=dotted];
m26_563 -> m26_564  [key=0, style=solid];
m26_563 -> m26_374  [key=2, style=dotted];
m26_566 -> m26_556  [key=0, style=bold, color=blue];
m26_131 -> m26_132  [key=0, style=solid];
m26_132 -> m26_133  [key=0, style=solid];
m26_133 -> m26_134  [key=0, style=solid];
m26_134 -> m26_135  [key=0, style=solid];
m26_134 -> m26_137  [key=2, style=dotted];
m26_135 -> m26_136  [key=0, style=solid];
m26_135 -> m26_138  [key=2, style=dotted];
m26_135 -> m26_9  [key=2, style=dotted];
m26_136 -> m26_131  [key=0, style=bold, color=blue];
m26_384 -> m26_385  [key=0, style=solid];
m26_384 -> m26_77  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Type BindToType"];
m26_385 -> m26_386  [key=0, style=solid];
m26_386 -> m26_384  [key=0, style=bold, color=blue];
m26_228 -> m26_229  [key=0, style=solid];
m26_228 -> m26_230  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m26_229 -> m26_230  [key=0, style=solid];
m26_229 -> m26_231  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m26_230 -> m26_231  [key=0, style=solid];
m26_231 -> m26_228  [key=0, style=bold, color=blue];
m26_139 -> m26_140  [key=0, style=solid];
m26_140 -> m26_141  [key=0, style=solid];
m26_140 -> m26_144  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_140 -> m26_140  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m26_141 -> m26_142  [key=0, style=solid];
m26_141 -> m26_27  [key=2, style=dotted];
m26_141 -> m26_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_142 -> m26_139  [key=0, style=bold, color=blue];
m26_310 -> m26_316  [key=0, style=solid];
m26_316 -> m26_317  [key=0, style=solid];
m26_317 -> m26_310  [key=0, style=bold, color=blue];
m26_223 -> m26_226  [key=0, style=solid];
m26_226 -> m26_227  [key=0, style=solid];
m26_227 -> m26_223  [key=0, style=bold, color=blue];
m26_146 -> m26_147  [key=0, style=solid];
m26_147 -> m26_148  [key=0, style=solid];
m26_148 -> m26_149  [key=0, style=solid];
m26_149 -> m26_146  [key=0, style=bold, color=blue];
m26_143 -> m26_144  [key=0, style=solid];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_34  [key=2, style=dotted];
m26_29 -> m26_35  [key=2, style=dotted];
m26_29 -> m26_36  [key=2, style=dotted];
m26_29 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label=reader];
m26_28 -> m26_29  [key=0, style=solid];
m26_30 -> m26_31  [key=0, style=solid, color=red];
m26_30 -> m26_37  [key=2, style=dotted];
m26_30 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label=ser];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_38  [key=2, style=dotted];
m26_31 -> m26_32  [key=0, style=solid, color=red];
m26_33 -> m26_28  [key=0, style=bold, color=blue];
m26_144 -> m26_145  [key=0, style=solid];
m26_144 -> m26_7  [key=2, style=dotted];
m26_144 -> m26_90  [key=2, style=dotted];
m26_145 -> m26_143  [key=0, style=bold, color=blue];
m26_58 -> m26_59  [key=0, style=solid];
m26_59 -> m26_60  [key=0, style=solid];
m26_59 -> m26_52  [key=2, style=dotted];
m26_59 -> m26_7  [key=2, style=dotted];
m26_59 -> m26_62  [key=2, style=dotted];
m26_60 -> m26_61  [key=0, style=solid];
m26_60 -> m26_9  [key=2, style=dotted];
m26_61 -> m26_58  [key=0, style=bold, color=blue];
m26_169 -> m26_170  [key=0, style=solid];
m26_170 -> m26_171  [key=0, style=solid];
m26_170 -> m26_82  [key=2, style=dotted];
m26_170 -> m26_173  [key=1, style=dashed, color=darkseagreen4, label=typeNamePropertyRef];
m26_171 -> m26_172  [key=0, style=solid];
m26_171 -> m26_181  [key=2, style=dotted];
m26_173 -> m26_174  [key=0, style=solid];
m26_173 -> m26_9  [key=2, style=dotted];
m26_172 -> m26_173  [key=0, style=solid];
m26_172 -> m26_182  [key=2, style=dotted];
m26_172 -> m26_174  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_174 -> m26_175  [key=0, style=solid];
m26_174 -> m26_75  [key=2, style=dotted];
m26_174 -> m26_176  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m26_174 -> m26_177  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m26_175 -> m26_176  [key=0, style=solid];
m26_175 -> m26_9  [key=2, style=dotted];
m26_176 -> m26_177  [key=0, style=solid];
m26_176 -> m26_57  [key=2, style=dotted];
m26_177 -> m26_178  [key=0, style=solid];
m26_177 -> m26_179  [key=1, style=dashed, color=darkseagreen4, label=nested];
m26_178 -> m26_179  [key=0, style=solid];
m26_178 -> m26_9  [key=2, style=dotted];
m26_179 -> m26_180  [key=0, style=solid];
m26_179 -> m26_9  [key=2, style=dotted];
m26_180 -> m26_169  [key=0, style=bold, color=blue];
m26_392 -> m26_393  [key=0, style=solid];
m26_393 -> m26_394  [key=0, style=solid];
m26_393 -> m26_400  [key=2, style=dotted];
m26_393 -> m26_395  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_393 -> m26_396  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_393 -> m26_397  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_394 -> m26_395  [key=0, style=solid];
m26_394 -> m26_401  [key=2, style=dotted];
m26_395 -> m26_396  [key=0, style=solid];
m26_395 -> m26_401  [key=2, style=dotted];
m26_396 -> m26_397  [key=0, style=solid];
m26_396 -> m26_401  [key=2, style=dotted];
m26_397 -> m26_398  [key=0, style=solid];
m26_397 -> m26_182  [key=2, style=dotted];
m26_398 -> m26_399  [key=0, style=solid];
m26_398 -> m26_9  [key=2, style=dotted];
m26_399 -> m26_392  [key=0, style=bold, color=blue];
m26_76 -> m26_77  [key=0, style=solid];
m26_77 -> m26_78  [key=0, style=solid];
m26_77 -> m26_82  [key=2, style=dotted];
m26_77 -> m26_80  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m26_78 -> m26_79  [key=0, style=solid];
m26_78 -> m26_74  [key=2, style=dotted];
m26_80 -> m26_81  [key=0, style=solid];
m26_80 -> m26_9  [key=2, style=dotted];
m26_79 -> m26_80  [key=0, style=solid];
m26_79 -> m26_7  [key=2, style=dotted];
m26_79 -> m26_8  [key=2, style=dotted];
m26_81 -> m26_76  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_5  [key=2, style=dotted];
m26_1 -> m26_6  [key=2, style=dotted];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_7  [key=2, style=dotted];
m26_2 -> m26_8  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_9  [key=2, style=dotted];
m26_4 -> m26_0  [key=0, style=bold, color=blue];
m26_528 -> m26_529  [key=0, style=solid];
m26_529 -> m26_530  [key=0, style=solid];
m26_529 -> m26_554  [key=2, style=dotted];
m26_529 -> m26_535  [key=1, style=dashed, color=darkseagreen4, label=d1];
m26_529 -> m26_536  [key=1, style=dashed, color=darkseagreen4, label=d1];
m26_530 -> m26_531  [key=0, style=solid];
m26_530 -> m26_555  [key=2, style=dotted];
m26_530 -> m26_534  [key=1, style=dashed, color=darkseagreen4, label=data];
m26_530 -> m26_535  [key=1, style=dashed, color=darkseagreen4, label=data];
m26_535 -> m26_536  [key=0, style=solid];
m26_536 -> m26_537  [key=0, style=solid];
m26_536 -> m26_182  [key=2, style=dotted];
m26_536 -> m26_538  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_531 -> m26_532  [key=0, style=solid];
m26_531 -> m26_418  [key=2, style=dotted];
m26_534 -> m26_535  [key=0, style=solid];
m26_532 -> m26_533  [key=0, style=solid];
m26_532 -> m26_555  [key=2, style=dotted];
m26_532 -> m26_534  [key=1, style=dashed, color=darkseagreen4, label=data2];
m26_533 -> m26_534  [key=0, style=solid];
m26_533 -> m26_418  [key=2, style=dotted];
m26_537 -> m26_538  [key=0, style=solid];
m26_537 -> m26_9  [key=2, style=dotted];
m26_538 -> m26_539  [key=0, style=solid];
m26_538 -> m26_75  [key=2, style=dotted];
m26_538 -> m26_540  [key=1, style=dashed, color=darkseagreen4, label=d2];
m26_538 -> m26_541  [key=1, style=dashed, color=darkseagreen4, label=d2];
m26_539 -> m26_540  [key=0, style=solid];
m26_539 -> m26_278  [key=2, style=dotted];
m26_540 -> m26_541  [key=0, style=solid];
m26_540 -> m26_278  [key=2, style=dotted];
m26_541 -> m26_542  [key=0, style=solid];
m26_541 -> m26_544  [key=1, style=dashed, color=darkseagreen4, label=data3];
m26_542 -> m26_543  [key=0, style=solid];
m26_544 -> m26_545  [key=0, style=solid];
m26_543 -> m26_544  [key=0, style=solid];
m26_543 -> m26_9  [key=2, style=dotted];
m26_545 -> m26_546  [key=0, style=solid];
m26_546 -> m26_547  [key=0, style=solid];
m26_546 -> m26_9  [key=2, style=dotted];
m26_547 -> m26_548  [key=0, style=solid];
m26_548 -> m26_549  [key=0, style=solid];
m26_548 -> m26_75  [key=2, style=dotted];
m26_549 -> m26_550  [key=0, style=solid];
m26_550 -> m26_551  [key=0, style=solid];
m26_551 -> m26_552  [key=0, style=solid];
m26_552 -> m26_553  [key=0, style=solid];
m26_552 -> m26_9  [key=2, style=dotted];
m26_553 -> m26_528  [key=0, style=bold, color=blue];
m26_578 -> m26_626  [key=0, style=solid];
m26_626 -> m26_578  [key=0, style=bold, color=blue];
m26_591 -> m26_592  [key=0, style=solid];
m26_592 -> m26_593  [key=0, style=solid];
m26_592 -> m26_602  [key=2, style=dotted];
m26_592 -> m26_595  [key=1, style=dashed, color=darkseagreen4, label=pp];
m26_593 -> m26_594  [key=0, style=solid];
m26_593 -> m26_578  [key=2, style=dotted];
m26_593 -> m26_579  [key=2, style=dotted];
m26_595 -> m26_596  [key=0, style=solid];
m26_595 -> m26_568  [key=2, style=dotted];
m26_595 -> m26_597  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_594 -> m26_595  [key=0, style=solid];
m26_594 -> m26_7  [key=2, style=dotted];
m26_594 -> m26_597  [key=1, style=dashed, color=darkseagreen4, label=settings];
m26_597 -> m26_598  [key=0, style=solid];
m26_597 -> m26_160  [key=2, style=dotted];
m26_596 -> m26_597  [key=0, style=solid];
m26_596 -> m26_9  [key=2, style=dotted];
m26_598 -> m26_599  [key=0, style=solid];
m26_598 -> m26_600  [key=1, style=dashed, color=darkseagreen4, label=p2];
m26_599 -> m26_600  [key=0, style=solid];
m26_599 -> m26_57  [key=2, style=dotted];
m26_600 -> m26_601  [key=0, style=solid];
m26_600 -> m26_9  [key=2, style=dotted];
m26_601 -> m26_591  [key=0, style=bold, color=blue];
m26_387 -> m26_388  [key=0, style=solid];
m26_387 -> m26_389  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m26_388 -> m26_389  [key=0, style=solid];
m26_388 -> m26_390  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m26_389 -> m26_390  [key=0, style=solid];
m26_389 -> m26_391  [key=2, style=dotted];
m26_390 -> m26_387  [key=0, style=bold, color=blue];
m26_603 -> m26_604  [key=0, style=solid];
m26_604 -> m26_605  [key=0, style=solid];
m26_604 -> m26_15  [key=2, style=dotted];
m26_604 -> m26_606  [key=1, style=dashed, color=darkseagreen4, label=input];
m26_604 -> m26_607  [key=1, style=dashed, color=darkseagreen4, label=input];
m26_604 -> m26_608  [key=1, style=dashed, color=darkseagreen4, label=input];
m26_605 -> m26_606  [key=0, style=solid];
m26_605 -> m26_615  [key=2, style=dotted];
m26_605 -> m26_15  [key=2, style=dotted];
m26_605 -> m26_401  [key=2, style=dotted];
m26_606 -> m26_607  [key=0, style=solid];
m26_606 -> m26_615  [key=2, style=dotted];
m26_606 -> m26_15  [key=2, style=dotted];
m26_606 -> m26_401  [key=2, style=dotted];
m26_607 -> m26_608  [key=0, style=solid];
m26_607 -> m26_615  [key=2, style=dotted];
m26_607 -> m26_15  [key=2, style=dotted];
m26_607 -> m26_401  [key=2, style=dotted];
m26_608 -> m26_609  [key=0, style=solid];
m26_608 -> m26_7  [key=2, style=dotted];
m26_608 -> m26_8  [key=2, style=dotted];
m26_608 -> m26_610  [key=1, style=dashed, color=darkseagreen4, label=serialized];
m26_609 -> m26_610  [key=0, style=solid];
m26_609 -> m26_374  [key=2, style=dotted];
m26_610 -> m26_611  [key=0, style=solid];
m26_610 -> m26_7  [key=2, style=dotted];
m26_610 -> m26_160  [key=2, style=dotted];
m26_611 -> m26_612  [key=0, style=solid];
m26_611 -> m26_614  [key=0, style=solid];
m26_612 -> m26_613  [key=0, style=solid];
m26_612 -> m26_611  [key=0, style=solid];
m26_613 -> m26_612  [key=0, style=solid];
m26_613 -> m26_374  [key=2, style=dotted];
m26_614 -> m26_603  [key=0, style=bold, color=blue];
m26_489 -> m26_490  [key=0, style=solid];
m26_490 -> m26_491  [key=0, style=solid];
m26_490 -> m26_509  [key=2, style=dotted];
m26_490 -> m26_5  [key=2, style=dotted];
m26_490 -> m26_418  [key=2, style=dotted];
m26_491 -> m26_492  [key=0, style=solid];
m26_491 -> m26_182  [key=2, style=dotted];
m26_491 -> m26_493  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_492 -> m26_493  [key=0, style=solid];
m26_492 -> m26_9  [key=2, style=dotted];
m26_493 -> m26_494  [key=0, style=solid];
m26_493 -> m26_75  [key=2, style=dotted];
m26_493 -> m26_495  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_493 -> m26_496  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_493 -> m26_497  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_494 -> m26_495  [key=0, style=solid];
m26_494 -> m26_9  [key=2, style=dotted];
m26_495 -> m26_496  [key=0, style=solid];
m26_495 -> m26_57  [key=2, style=dotted];
m26_496 -> m26_497  [key=0, style=solid];
m26_496 -> m26_57  [key=2, style=dotted];
m26_497 -> m26_498  [key=0, style=solid];
m26_498 -> m26_499  [key=0, style=solid];
m26_498 -> m26_57  [key=2, style=dotted];
m26_499 -> m26_500  [key=0, style=solid];
m26_500 -> m26_501  [key=0, style=solid];
m26_500 -> m26_75  [key=2, style=dotted];
m26_500 -> m26_502  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_500 -> m26_503  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_500 -> m26_504  [key=1, style=dashed, color=darkseagreen4, label=c2];
m26_501 -> m26_502  [key=0, style=solid];
m26_501 -> m26_9  [key=2, style=dotted];
m26_502 -> m26_503  [key=0, style=solid];
m26_502 -> m26_57  [key=2, style=dotted];
m26_503 -> m26_504  [key=0, style=solid];
m26_503 -> m26_57  [key=2, style=dotted];
m26_504 -> m26_505  [key=0, style=solid];
m26_504 -> m26_506  [key=1, style=dashed, color=darkseagreen4, label=c];
m26_505 -> m26_506  [key=0, style=solid];
m26_505 -> m26_57  [key=2, style=dotted];
m26_506 -> m26_507  [key=0, style=solid];
m26_507 -> m26_508  [key=0, style=solid];
m26_507 -> m26_9  [key=2, style=dotted];
m26_508 -> m26_489  [key=0, style=bold, color=blue];
m26_10 -> m26_11  [key=0, style=solid];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_15  [key=2, style=dotted];
m26_11 -> m26_16  [key=2, style=dotted];
m26_11 -> m26_6  [key=2, style=dotted];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_7  [key=2, style=dotted];
m26_12 -> m26_8  [key=2, style=dotted];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_9  [key=2, style=dotted];
m26_14 -> m26_10  [key=0, style=bold, color=blue];
m26_510 -> m26_511  [key=0, style=solid];
m26_511 -> m26_512  [key=0, style=solid];
m26_511 -> m26_525  [key=2, style=dotted];
m26_511 -> m26_526  [key=2, style=dotted];
m26_511 -> m26_15  [key=2, style=dotted];
m26_511 -> m26_418  [key=2, style=dotted];
m26_511 -> m26_527  [key=2, style=dotted];
m26_512 -> m26_513  [key=0, style=solid];
m26_512 -> m26_182  [key=2, style=dotted];
m26_512 -> m26_514  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_513 -> m26_514  [key=0, style=solid];
m26_513 -> m26_9  [key=2, style=dotted];
m26_514 -> m26_515  [key=0, style=solid];
m26_514 -> m26_75  [key=2, style=dotted];
m26_514 -> m26_516  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_514 -> m26_517  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_514 -> m26_518  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_514 -> m26_519  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_514 -> m26_520  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_514 -> m26_521  [key=1, style=dashed, color=darkseagreen4, label=o2];
m26_515 -> m26_516  [key=0, style=solid];
m26_515 -> m26_278  [key=2, style=dotted];
m26_516 -> m26_517  [key=0, style=solid];
m26_516 -> m26_278  [key=2, style=dotted];
m26_517 -> m26_518  [key=0, style=solid];
m26_517 -> m26_57  [key=2, style=dotted];
m26_518 -> m26_519  [key=0, style=solid];
m26_518 -> m26_57  [key=2, style=dotted];
m26_519 -> m26_520  [key=0, style=solid];
m26_519 -> m26_57  [key=2, style=dotted];
m26_520 -> m26_521  [key=0, style=solid];
m26_520 -> m26_57  [key=2, style=dotted];
m26_521 -> m26_522  [key=0, style=solid];
m26_522 -> m26_523  [key=0, style=solid];
m26_523 -> m26_524  [key=0, style=solid];
m26_523 -> m26_9  [key=2, style=dotted];
m26_524 -> m26_510  [key=0, style=bold, color=blue];
m26_360 -> m26_644  [key=0, style=solid];
m26_644 -> m26_645  [key=0, style=solid];
m26_645 -> m26_360  [key=0, style=bold, color=blue];
m26_311 -> m26_312  [key=0, style=solid];
m26_311 -> m26_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_312 -> m26_313  [key=0, style=solid];
m26_313 -> m26_314  [key=0, style=solid];
m26_314 -> m26_315  [key=0, style=solid];
m26_315 -> m26_311  [key=0, style=bold, color=blue];
m26_638 -> m26_639  [key=0, style=solid];
m26_638 -> m26_19  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetHashCode"];
m26_639 -> m26_640  [key=0, style=solid];
m26_639 -> m26_641  [key=0, style=solid];
m26_640 -> m26_642  [key=0, style=solid];
m26_641 -> m26_642  [key=0, style=solid];
m26_641 -> m26_643  [key=2, style=dotted];
m26_642 -> m26_638  [key=0, style=bold, color=blue];
m26_402 -> m26_403  [key=0, style=solid];
m26_403 -> m26_404  [key=0, style=solid];
m26_403 -> m26_418  [key=2, style=dotted];
m26_403 -> m26_405  [key=1, style=dashed, color=darkseagreen4, label=c1];
m26_404 -> m26_405  [key=0, style=solid];
m26_404 -> m26_400  [key=2, style=dotted];
m26_404 -> m26_406  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_404 -> m26_407  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_404 -> m26_408  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_404 -> m26_409  [key=1, style=dashed, color=darkseagreen4, label=l];
m26_405 -> m26_406  [key=0, style=solid];
m26_405 -> m26_401  [key=2, style=dotted];
m26_406 -> m26_407  [key=0, style=solid];
m26_406 -> m26_419  [key=2, style=dotted];
m26_406 -> m26_105  [key=2, style=dotted];
m26_406 -> m26_401  [key=2, style=dotted];
m26_407 -> m26_408  [key=0, style=solid];
m26_407 -> m26_401  [key=2, style=dotted];
m26_408 -> m26_409  [key=0, style=solid];
m26_408 -> m26_401  [key=2, style=dotted];
m26_409 -> m26_410  [key=0, style=solid];
m26_409 -> m26_182  [key=2, style=dotted];
m26_409 -> m26_411  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_410 -> m26_411  [key=0, style=solid];
m26_410 -> m26_9  [key=2, style=dotted];
m26_411 -> m26_412  [key=0, style=solid];
m26_411 -> m26_75  [key=2, style=dotted];
m26_411 -> m26_413  [key=1, style=dashed, color=darkseagreen4, label=l2];
m26_411 -> m26_414  [key=1, style=dashed, color=darkseagreen4, label=l2];
m26_411 -> m26_415  [key=1, style=dashed, color=darkseagreen4, label=l2];
m26_411 -> m26_416  [key=1, style=dashed, color=darkseagreen4, label=l2];
m26_412 -> m26_413  [key=0, style=solid];
m26_412 -> m26_9  [key=2, style=dotted];
m26_413 -> m26_414  [key=0, style=solid];
m26_413 -> m26_57  [key=2, style=dotted];
m26_414 -> m26_415  [key=0, style=solid];
m26_414 -> m26_57  [key=2, style=dotted];
m26_415 -> m26_416  [key=0, style=solid];
m26_415 -> m26_57  [key=2, style=dotted];
m26_416 -> m26_417  [key=0, style=solid];
m26_416 -> m26_57  [key=2, style=dotted];
m26_417 -> m26_402  [key=0, style=bold, color=blue];
m26_622 -> m26_623  [key=0, style=solid];
m26_623 -> m26_624  [key=0, style=solid];
m26_623 -> m26_625  [key=2, style=dotted];
m26_624 -> m26_622  [key=0, style=bold, color=blue];
m26_646 -> m26_647  [key=0, style=solid];
m26_647 -> m26_648  [key=0, style=solid];
m26_647 -> m26_649  [key=2, style=dotted];
m26_648 -> m26_646  [key=0, style=bold, color=blue];
m26_232 -> m26_233  [key=0, style=solid];
m26_233 -> m26_234  [key=0, style=solid];
m26_233 -> m26_236  [key=2, style=dotted];
m26_234 -> m26_235  [key=0, style=solid];
m26_234 -> m26_237  [key=2, style=dotted];
m26_235 -> m26_232  [key=0, style=bold, color=blue];
m26_674 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label=sb];
m26_675 -> m26_144  [key=1, style=dashed, color=darkseagreen4, label=json];
m26_676 -> m26_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest"];
m26_676 -> m26_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest"];
m26_677 -> m26_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder"];
m26_677 -> m26_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder"];
m26_678 -> m26_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_678 -> m26_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_678 -> m26_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_678 -> m26_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_678 -> m26_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_678 -> m26_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_678 -> m26_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_678 -> m26_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_678 -> m26_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m26_679 -> m26_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m26_679 -> m26_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m26_679 -> m26_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m26_680 -> m26_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MyParent"];
m26_680 -> m26_628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MyParent"];
m26_681 -> m26_635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m26_681 -> m26_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m26_681 -> m26_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m26_682 -> m26_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m26_682 -> m26_647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m26_682 -> m26_651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m26_682 -> m26_656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m26_682 -> m26_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m26_682 -> m26_665  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m26_682 -> m26_667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m26_683 -> m26_671  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GroupingInfo"];
m27_356 -> m27_357  [key=0, style=solid];
m27_357 -> m27_358  [key=0, style=solid];
m27_357 -> m27_361  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_357 -> m27_357  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_358 -> m27_359  [key=0, style=solid];
m27_358 -> m27_354  [key=2, style=dotted];
m27_358 -> m27_360  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m27_358 -> m27_363  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m27_361 -> m27_362  [key=0, style=solid];
m27_361 -> m27_355  [key=2, style=dotted];
m27_359 -> m27_360  [key=0, style=solid];
m27_359 -> m27_366  [key=2, style=dotted];
m27_360 -> m27_361  [key=0, style=solid];
m27_360 -> m27_366  [key=2, style=dotted];
m27_360 -> m27_23  [key=2, style=dotted];
m27_363 -> m27_364  [key=0, style=solid];
m27_363 -> m27_113  [key=2, style=dotted];
m27_362 -> m27_363  [key=0, style=solid];
m27_362 -> m27_51  [key=2, style=dotted];
m27_362 -> m27_366  [key=2, style=dotted];
m27_362 -> m27_23  [key=2, style=dotted];
m27_364 -> m27_365  [key=0, style=solid];
m27_364 -> m27_135  [key=2, style=dotted];
m27_365 -> m27_356  [key=0, style=bold, color=blue];
m27_528 -> m27_531  [key=0, style=solid];
m27_528 -> m27_534  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m27_528 -> m27_538  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m27_528 -> m27_519  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream json"];
m27_528 -> m27_520  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream xml"];
m27_531 -> m27_532  [key=0, style=solid];
m27_531 -> m27_65  [key=2, style=dotted];
m27_531 -> m27_533  [key=1, style=dashed, color=darkseagreen4, label=settings];
m27_534 -> m27_535  [key=0, style=solid];
m27_534 -> m27_45  [key=2, style=dotted];
m27_534 -> m27_542  [key=2, style=dotted];
m27_534 -> m27_536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_538 -> m27_539  [key=0, style=solid];
m27_538 -> m27_222  [key=2, style=dotted];
m27_532 -> m27_533  [key=0, style=solid];
m27_532 -> m27_48  [key=2, style=dotted];
m27_532 -> m27_541  [key=2, style=dotted];
m27_533 -> m27_534  [key=0, style=solid];
m27_533 -> m27_515  [key=2, style=dotted];
m27_533 -> m27_535  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_535 -> m27_536  [key=0, style=solid];
m27_535 -> m27_517  [key=2, style=dotted];
m27_535 -> m27_539  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_536 -> m27_537  [key=0, style=solid];
m27_536 -> m27_538  [key=0, style=solid];
m27_536 -> m27_47  [key=2, style=dotted];
m27_539 -> m27_540  [key=0, style=solid];
m27_539 -> m27_223  [key=2, style=dotted];
m27_537 -> m27_540  [key=0, style=solid];
m27_537 -> m27_543  [key=2, style=dotted];
m27_540 -> m27_528  [key=0, style=bold, color=blue];
m27_460 -> m27_461  [key=0, style=solid];
m27_461 -> m27_462  [key=0, style=solid];
m27_461 -> m27_468  [key=2, style=dotted];
m27_461 -> m27_469  [key=2, style=dotted];
m27_461 -> m27_456  [key=2, style=dotted];
m27_462 -> m27_463  [key=0, style=solid];
m27_462 -> m27_458  [key=2, style=dotted];
m27_462 -> m27_459  [key=2, style=dotted];
m27_463 -> m27_464  [key=0, style=solid];
m27_463 -> m27_377  [key=2, style=dotted];
m27_463 -> m27_465  [key=1, style=dashed, color=darkseagreen4, label=xmlProduct];
m27_464 -> m27_465  [key=0, style=solid];
m27_464 -> m27_366  [key=2, style=dotted];
m27_464 -> m27_23  [key=2, style=dotted];
m27_465 -> m27_466  [key=0, style=solid];
m27_465 -> m27_113  [key=2, style=dotted];
m27_466 -> m27_467  [key=0, style=solid];
m27_466 -> m27_23  [key=2, style=dotted];
m27_467 -> m27_460  [key=0, style=bold, color=blue];
m27_124 -> m27_125  [key=0, style=solid];
m27_125 -> m27_126  [key=0, style=solid];
m27_125 -> m27_127  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_125 -> m27_125  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_126 -> m27_127  [key=0, style=solid];
m27_126 -> m27_111  [key=2, style=dotted];
m27_126 -> m27_128  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_127 -> m27_128  [key=0, style=solid];
m27_127 -> m27_112  [key=2, style=dotted];
m27_128 -> m27_129  [key=0, style=solid];
m27_128 -> m27_113  [key=2, style=dotted];
m27_128 -> m27_130  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_128 -> m27_132  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_129 -> m27_130  [key=0, style=solid];
m27_129 -> m27_129  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_130 -> m27_131  [key=0, style=solid];
m27_130 -> m27_23  [key=2, style=dotted];
m27_132 -> m27_133  [key=0, style=solid];
m27_132 -> m27_135  [key=2, style=dotted];
m27_131 -> m27_132  [key=0, style=solid];
m27_131 -> m27_135  [key=2, style=dotted];
m27_133 -> m27_134  [key=0, style=solid];
m27_133 -> m27_136  [key=2, style=dotted];
m27_134 -> m27_124  [key=0, style=bold, color=blue];
m27_544 -> m27_545  [key=0, style=solid];
m27_545 -> m27_546  [key=0, style=solid];
m27_545 -> m27_545  [key=3, color=darkorchid, style=bold, label="Local variable string xaml"];
m27_546 -> m27_547  [key=0, style=solid];
m27_546 -> m27_92  [key=2, style=dotted];
m27_546 -> m27_93  [key=2, style=dotted];
m27_546 -> m27_548  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_546 -> m27_549  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_547 -> m27_548  [key=0, style=solid];
m27_547 -> m27_547  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m27_548 -> m27_549  [key=0, style=solid];
m27_548 -> m27_23  [key=2, style=dotted];
m27_549 -> m27_550  [key=0, style=solid];
m27_549 -> m27_94  [key=2, style=dotted];
m27_550 -> m27_551  [key=0, style=solid];
m27_550 -> m27_51  [key=2, style=dotted];
m27_550 -> m27_552  [key=1, style=dashed, color=darkseagreen4, label=xaml2];
m27_551 -> m27_552  [key=0, style=solid];
m27_551 -> m27_551  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXaml"];
m27_552 -> m27_553  [key=0, style=solid];
m27_552 -> m27_23  [key=2, style=dotted];
m27_553 -> m27_544  [key=0, style=bold, color=blue];
m27_518 -> m27_519  [key=0, style=solid];
m27_519 -> m27_520  [key=0, style=solid];
m27_519 -> m27_525  [key=2, style=dotted];
m27_519 -> m27_526  [key=2, style=dotted];
m27_519 -> m27_521  [key=1, style=dashed, color=darkseagreen4, label=ms];
m27_520 -> m27_521  [key=0, style=solid];
m27_520 -> m27_527  [key=2, style=dotted];
m27_520 -> m27_522  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_521 -> m27_522  [key=0, style=solid];
m27_521 -> m27_528  [key=2, style=dotted];
m27_522 -> m27_523  [key=0, style=solid];
m27_522 -> m27_529  [key=2, style=dotted];
m27_522 -> m27_530  [key=2, style=dotted];
m27_523 -> m27_524  [key=0, style=solid];
m27_523 -> m27_23  [key=2, style=dotted];
m27_524 -> m27_518  [key=0, style=bold, color=blue];
m27_114 -> m27_115  [key=0, style=solid];
m27_115 -> m27_116  [key=0, style=solid];
m27_115 -> m27_115  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m27_116 -> m27_117  [key=0, style=solid];
m27_116 -> m27_92  [key=2, style=dotted];
m27_116 -> m27_119  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_117 -> m27_118  [key=0, style=solid];
m27_117 -> m27_93  [key=2, style=dotted];
m27_119 -> m27_120  [key=0, style=solid];
m27_119 -> m27_122  [key=2, style=dotted];
m27_118 -> m27_119  [key=0, style=solid];
m27_118 -> m27_68  [key=2, style=dotted];
m27_120 -> m27_121  [key=0, style=solid];
m27_120 -> m27_123  [key=2, style=dotted];
m27_121 -> m27_114  [key=0, style=bold, color=blue];
m27_595 -> m27_596  [key=0, style=solid];
m27_596 -> m27_597  [key=0, style=solid];
m27_596 -> m27_596  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m27_597 -> m27_598  [key=0, style=solid];
m27_597 -> m27_92  [key=2, style=dotted];
m27_597 -> m27_600  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_598 -> m27_599  [key=0, style=solid];
m27_598 -> m27_93  [key=2, style=dotted];
m27_600 -> m27_601  [key=0, style=solid];
m27_600 -> m27_122  [key=2, style=dotted];
m27_599 -> m27_600  [key=0, style=solid];
m27_599 -> m27_68  [key=2, style=dotted];
m27_601 -> m27_602  [key=0, style=solid];
m27_601 -> m27_123  [key=2, style=dotted];
m27_602 -> m27_595  [key=0, style=bold, color=blue];
m27_392 -> m27_393  [key=0, style=solid];
m27_393 -> m27_394  [key=0, style=solid];
m27_393 -> m27_395  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_393 -> m27_393  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_394 -> m27_395  [key=0, style=solid];
m27_394 -> m27_111  [key=2, style=dotted];
m27_394 -> m27_396  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_395 -> m27_396  [key=0, style=solid];
m27_395 -> m27_112  [key=2, style=dotted];
m27_396 -> m27_397  [key=0, style=solid];
m27_396 -> m27_113  [key=2, style=dotted];
m27_396 -> m27_398  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_396 -> m27_399  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_397 -> m27_398  [key=0, style=solid];
m27_398 -> m27_399  [key=0, style=solid];
m27_398 -> m27_23  [key=2, style=dotted];
m27_399 -> m27_400  [key=0, style=solid];
m27_399 -> m27_24  [key=2, style=dotted];
m27_400 -> m27_401  [key=0, style=solid];
m27_400 -> m27_23  [key=2, style=dotted];
m27_401 -> m27_392  [key=0, style=bold, color=blue];
m27_489 -> m27_490  [key=0, style=solid];
m27_490 -> m27_491  [key=0, style=solid];
m27_490 -> m27_492  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_490 -> m27_490  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_491 -> m27_492  [key=0, style=solid];
m27_491 -> m27_111  [key=2, style=dotted];
m27_491 -> m27_493  [key=1, style=dashed, color=darkseagreen4, label=d];
m27_492 -> m27_493  [key=0, style=solid];
m27_492 -> m27_112  [key=2, style=dotted];
m27_493 -> m27_494  [key=0, style=solid];
m27_493 -> m27_113  [key=2, style=dotted];
m27_493 -> m27_495  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_494 -> m27_495  [key=0, style=solid];
m27_494 -> m27_23  [key=2, style=dotted];
m27_495 -> m27_496  [key=0, style=solid];
m27_495 -> m27_210  [key=2, style=dotted];
m27_496 -> m27_497  [key=0, style=solid];
m27_496 -> m27_211  [key=2, style=dotted];
m27_496 -> m27_23  [key=2, style=dotted];
m27_497 -> m27_489  [key=0, style=bold, color=blue];
m27_297 -> m27_298  [key=0, style=solid];
m27_298 -> m27_299  [key=0, style=solid];
m27_298 -> m27_293  [key=2, style=dotted];
m27_298 -> m27_300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_299 -> m27_297  [key=0, style=bold, color=blue];
m27_94 -> m27_94  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_275 -> m27_276  [key=0, style=solid];
m27_276 -> m27_277  [key=0, style=solid];
m27_276 -> m27_278  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_276 -> m27_276  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_277 -> m27_278  [key=0, style=solid];
m27_277 -> m27_111  [key=2, style=dotted];
m27_277 -> m27_279  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_277 -> m27_282  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_278 -> m27_279  [key=0, style=solid];
m27_278 -> m27_112  [key=2, style=dotted];
m27_279 -> m27_280  [key=0, style=solid];
m27_279 -> m27_113  [key=2, style=dotted];
m27_279 -> m27_281  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_282 -> m27_283  [key=0, style=solid];
m27_282 -> m27_23  [key=2, style=dotted];
m27_280 -> m27_281  [key=0, style=solid];
m27_280 -> m27_135  [key=2, style=dotted];
m27_281 -> m27_282  [key=0, style=solid];
m27_281 -> m27_24  [key=2, style=dotted];
m27_283 -> m27_275  [key=0, style=bold, color=blue];
m27_213 -> m27_214  [key=0, style=solid];
m27_214 -> m27_213  [key=0, style=bold, color=blue];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_27  [key=3, color=darkorchid, style=bold, label="method methodReturn XmlNode DeserializeXmlNode"];
m27_24 -> m27_234  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_246  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_271  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_279  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_285  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_304  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_396  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_406  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_415  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_24 -> m27_438  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_27  [key=2, style=dotted];
m27_26 -> m27_24  [key=0, style=bold, color=blue];
m27_195 -> m27_196  [key=0, style=solid];
m27_196 -> m27_197  [key=0, style=solid];
m27_196 -> m27_199  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_196 -> m27_203  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_196 -> m27_204  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_196 -> m27_208  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_196 -> m27_196  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_197 -> m27_198  [key=0, style=solid];
m27_197 -> m27_201  [key=1, style=dashed, color=darkseagreen4, label=expected];
m27_197 -> m27_206  [key=1, style=dashed, color=darkseagreen4, label=expected];
m27_197 -> m27_197  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_199 -> m27_200  [key=0, style=solid];
m27_199 -> m27_112  [key=2, style=dotted];
m27_203 -> m27_204  [key=0, style=solid];
m27_203 -> m27_211  [key=2, style=dotted];
m27_203 -> m27_23  [key=2, style=dotted];
m27_204 -> m27_205  [key=0, style=solid];
m27_204 -> m27_92  [key=2, style=dotted];
m27_208 -> m27_209  [key=0, style=solid];
m27_208 -> m27_212  [key=2, style=dotted];
m27_208 -> m27_23  [key=2, style=dotted];
m27_198 -> m27_199  [key=0, style=solid];
m27_198 -> m27_111  [key=2, style=dotted];
m27_198 -> m27_200  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m27_201 -> m27_202  [key=0, style=solid];
m27_201 -> m27_23  [key=2, style=dotted];
m27_206 -> m27_207  [key=0, style=solid];
m27_206 -> m27_23  [key=2, style=dotted];
m27_200 -> m27_201  [key=0, style=solid];
m27_200 -> m27_113  [key=2, style=dotted];
m27_200 -> m27_202  [key=1, style=dashed, color=darkseagreen4, label=json1];
m27_202 -> m27_203  [key=0, style=solid];
m27_202 -> m27_210  [key=2, style=dotted];
m27_205 -> m27_206  [key=0, style=solid];
m27_205 -> m27_93  [key=2, style=dotted];
m27_205 -> m27_207  [key=1, style=dashed, color=darkseagreen4, label=json2];
m27_207 -> m27_208  [key=0, style=solid];
m27_207 -> m27_94  [key=2, style=dotted];
m27_209 -> m27_195  [key=0, style=bold, color=blue];
m27_256 -> m27_257  [key=0, style=solid];
m27_256 -> m27_261  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m27_256 -> m27_426  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m27_257 -> m27_258  [key=0, style=solid];
m27_257 -> m27_221  [key=2, style=dotted];
m27_261 -> m27_262  [key=0, style=solid];
m27_261 -> m27_265  [key=2, style=dotted];
m27_258 -> m27_259  [key=0, style=solid];
m27_258 -> m27_258  [key=1, style=dashed, color=darkseagreen4, label=settings];
m27_258 -> m27_260  [key=1, style=dashed, color=darkseagreen4, label=settings];
m27_259 -> m27_260  [key=0, style=solid];
m27_259 -> m27_264  [key=2, style=dotted];
m27_259 -> m27_262  [key=1, style=dashed, color=darkseagreen4, label=sw];
m27_260 -> m27_261  [key=0, style=solid];
m27_260 -> m27_222  [key=2, style=dotted];
m27_262 -> m27_263  [key=0, style=solid];
m27_262 -> m27_266  [key=2, style=dotted];
m27_263 -> m27_256  [key=0, style=bold, color=blue];
m27_211 -> m27_225  [key=0, style=solid];
m27_211 -> m27_226  [key=1, style=dashed, color=darkseagreen4, label=bool];
m27_211 -> m27_227  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m27_211 -> m27_202  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlDocument doc"];
m27_211 -> m27_495  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlDocument doc"];
m27_211 -> m27_369  [key=3, color=darkorchid, style=bold, label="Parameter variable bool indent"];
m27_225 -> m27_226  [key=0, style=solid];
m27_225 -> m27_220  [key=2, style=dotted];
m27_225 -> m27_228  [key=1, style=dashed, color=darkseagreen4, label=builder];
m27_226 -> m27_227  [key=0, style=solid];
m27_226 -> m27_213  [key=2, style=dotted];
m27_226 -> m27_221  [key=2, style=dotted];
m27_226 -> m27_222  [key=2, style=dotted];
m27_227 -> m27_228  [key=0, style=solid];
m27_227 -> m27_223  [key=2, style=dotted];
m27_228 -> m27_229  [key=0, style=solid];
m27_228 -> m27_224  [key=2, style=dotted];
m27_229 -> m27_211  [key=0, style=bold, color=blue];
m27_386 -> m27_387  [key=0, style=solid];
m27_387 -> m27_388  [key=0, style=solid];
m27_387 -> m27_111  [key=2, style=dotted];
m27_387 -> m27_389  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_388 -> m27_389  [key=0, style=solid];
m27_388 -> m27_112  [key=2, style=dotted];
m27_389 -> m27_390  [key=0, style=solid];
m27_389 -> m27_113  [key=2, style=dotted];
m27_390 -> m27_391  [key=0, style=solid];
m27_390 -> m27_23  [key=2, style=dotted];
m27_391 -> m27_386  [key=0, style=bold, color=blue];
m27_444 -> m27_445  [key=0, style=solid];
m27_445 -> m27_446  [key=0, style=solid];
m27_445 -> m27_456  [key=2, style=dotted];
m27_445 -> m27_447  [key=1, style=dashed, color=darkseagreen4, label=product];
m27_445 -> m27_448  [key=1, style=dashed, color=darkseagreen4, label=product];
m27_445 -> m27_449  [key=1, style=dashed, color=darkseagreen4, label=product];
m27_445 -> m27_450  [key=1, style=dashed, color=darkseagreen4, label=product];
m27_446 -> m27_447  [key=0, style=solid];
m27_447 -> m27_448  [key=0, style=solid];
m27_447 -> m27_457  [key=2, style=dotted];
m27_448 -> m27_449  [key=0, style=solid];
m27_449 -> m27_450  [key=0, style=solid];
m27_450 -> m27_451  [key=0, style=solid];
m27_450 -> m27_458  [key=2, style=dotted];
m27_450 -> m27_459  [key=2, style=dotted];
m27_451 -> m27_452  [key=0, style=solid];
m27_451 -> m27_377  [key=2, style=dotted];
m27_451 -> m27_453  [key=1, style=dashed, color=darkseagreen4, label=xmlProduct];
m27_452 -> m27_453  [key=0, style=solid];
m27_452 -> m27_366  [key=2, style=dotted];
m27_452 -> m27_23  [key=2, style=dotted];
m27_453 -> m27_454  [key=0, style=solid];
m27_453 -> m27_113  [key=2, style=dotted];
m27_454 -> m27_455  [key=0, style=solid];
m27_454 -> m27_23  [key=2, style=dotted];
m27_455 -> m27_444  [key=0, style=bold, color=blue];
m27_267 -> m27_268  [key=0, style=solid];
m27_268 -> m27_269  [key=0, style=solid];
m27_268 -> m27_270  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_268 -> m27_268  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_269 -> m27_270  [key=0, style=solid];
m27_269 -> m27_111  [key=2, style=dotted];
m27_269 -> m27_271  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_269 -> m27_273  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_270 -> m27_271  [key=0, style=solid];
m27_270 -> m27_112  [key=2, style=dotted];
m27_271 -> m27_272  [key=0, style=solid];
m27_271 -> m27_113  [key=2, style=dotted];
m27_273 -> m27_274  [key=0, style=solid];
m27_273 -> m27_23  [key=2, style=dotted];
m27_272 -> m27_273  [key=0, style=solid];
m27_272 -> m27_24  [key=2, style=dotted];
m27_274 -> m27_267  [key=0, style=bold, color=blue];
m27_312 -> m27_313  [key=0, style=solid];
m27_313 -> m27_314  [key=0, style=solid];
m27_313 -> m27_315  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m27_314 -> m27_315  [key=0, style=solid];
m27_314 -> m27_111  [key=2, style=dotted];
m27_314 -> m27_316  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m27_315 -> m27_316  [key=0, style=solid];
m27_315 -> m27_112  [key=2, style=dotted];
m27_316 -> m27_317  [key=0, style=solid];
m27_316 -> m27_113  [key=2, style=dotted];
m27_316 -> m27_318  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m27_317 -> m27_318  [key=0, style=solid];
m27_317 -> m27_317  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_318 -> m27_319  [key=0, style=solid];
m27_318 -> m27_23  [key=2, style=dotted];
m27_319 -> m27_320  [key=0, style=solid];
m27_319 -> m27_321  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m27_320 -> m27_321  [key=0, style=solid];
m27_320 -> m27_111  [key=2, style=dotted];
m27_320 -> m27_322  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m27_321 -> m27_322  [key=0, style=solid];
m27_321 -> m27_112  [key=2, style=dotted];
m27_322 -> m27_323  [key=0, style=solid];
m27_322 -> m27_113  [key=2, style=dotted];
m27_322 -> m27_324  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m27_323 -> m27_324  [key=0, style=solid];
m27_324 -> m27_325  [key=0, style=solid];
m27_324 -> m27_23  [key=2, style=dotted];
m27_325 -> m27_326  [key=0, style=solid];
m27_325 -> m27_327  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m27_326 -> m27_327  [key=0, style=solid];
m27_326 -> m27_111  [key=2, style=dotted];
m27_326 -> m27_328  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m27_327 -> m27_328  [key=0, style=solid];
m27_327 -> m27_112  [key=2, style=dotted];
m27_328 -> m27_329  [key=0, style=solid];
m27_328 -> m27_113  [key=2, style=dotted];
m27_328 -> m27_330  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m27_329 -> m27_330  [key=0, style=solid];
m27_330 -> m27_331  [key=0, style=solid];
m27_330 -> m27_23  [key=2, style=dotted];
m27_331 -> m27_312  [key=0, style=bold, color=blue];
m27_367 -> m27_368  [key=0, style=solid];
m27_368 -> m27_369  [key=0, style=solid];
m27_368 -> m27_371  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_368 -> m27_375  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_368 -> m27_357  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_369 -> m27_370  [key=0, style=solid];
m27_369 -> m27_377  [key=2, style=dotted];
m27_369 -> m27_374  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m27_371 -> m27_372  [key=0, style=solid];
m27_371 -> m27_378  [key=2, style=dotted];
m27_371 -> m27_373  [key=1, style=dashed, color=darkseagreen4, label=newXDoc];
m27_375 -> m27_376  [key=0, style=solid];
m27_375 -> m27_23  [key=2, style=dotted];
m27_370 -> m27_371  [key=0, style=solid];
m27_370 -> m27_366  [key=2, style=dotted];
m27_370 -> m27_23  [key=2, style=dotted];
m27_374 -> m27_375  [key=0, style=solid];
m27_374 -> m27_113  [key=2, style=dotted];
m27_372 -> m27_373  [key=0, style=solid];
m27_372 -> m27_51  [key=2, style=dotted];
m27_372 -> m27_366  [key=2, style=dotted];
m27_372 -> m27_135  [key=2, style=dotted];
m27_373 -> m27_374  [key=0, style=solid];
m27_373 -> m27_51  [key=2, style=dotted];
m27_373 -> m27_366  [key=2, style=dotted];
m27_373 -> m27_23  [key=2, style=dotted];
m27_376 -> m27_367  [key=0, style=bold, color=blue];
m27_66 -> m27_66  [key=3, color=darkorchid, style=bold, label="Local variable string arrayXml"];
m27_437 -> m27_438  [key=0, style=solid];
m27_438 -> m27_439  [key=0, style=solid];
m27_438 -> m27_442  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_438 -> m27_438  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_439 -> m27_440  [key=0, style=solid];
m27_439 -> m27_336  [key=2, style=dotted];
m27_439 -> m27_441  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_440 -> m27_437  [key=0, style=bold, color=blue];
m27_402 -> m27_403  [key=0, style=solid];
m27_403 -> m27_404  [key=0, style=solid];
m27_403 -> m27_405  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_403 -> m27_403  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_404 -> m27_405  [key=0, style=solid];
m27_404 -> m27_111  [key=2, style=dotted];
m27_404 -> m27_406  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_404 -> m27_410  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_405 -> m27_406  [key=0, style=solid];
m27_405 -> m27_112  [key=2, style=dotted];
m27_406 -> m27_407  [key=0, style=solid];
m27_406 -> m27_113  [key=2, style=dotted];
m27_410 -> m27_411  [key=0, style=solid];
m27_410 -> m27_23  [key=2, style=dotted];
m27_407 -> m27_408  [key=0, style=solid];
m27_407 -> m27_412  [key=2, style=dotted];
m27_407 -> m27_413  [key=2, style=dotted];
m27_407 -> m27_407  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_407 -> m27_409  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_408 -> m27_409  [key=0, style=solid];
m27_408 -> m27_23  [key=2, style=dotted];
m27_409 -> m27_410  [key=0, style=solid];
m27_409 -> m27_24  [key=2, style=dotted];
m27_411 -> m27_402  [key=0, style=bold, color=blue];
m27_554 -> m27_555  [key=0, style=solid];
m27_555 -> m27_556  [key=0, style=solid];
m27_555 -> m27_557  [key=1, style=dashed, color=darkseagreen4, label=xaml];
m27_555 -> m27_545  [key=3, color=darkorchid, style=bold, label="Local variable string xaml"];
m27_556 -> m27_557  [key=0, style=solid];
m27_556 -> m27_111  [key=2, style=dotted];
m27_556 -> m27_558  [key=1, style=dashed, color=darkseagreen4, label=document];
m27_557 -> m27_558  [key=0, style=solid];
m27_557 -> m27_112  [key=2, style=dotted];
m27_558 -> m27_559  [key=0, style=solid];
m27_558 -> m27_113  [key=2, style=dotted];
m27_558 -> m27_560  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_558 -> m27_561  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_559 -> m27_560  [key=0, style=solid];
m27_559 -> m27_547  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m27_560 -> m27_561  [key=0, style=solid];
m27_560 -> m27_23  [key=2, style=dotted];
m27_561 -> m27_562  [key=0, style=solid];
m27_561 -> m27_210  [key=2, style=dotted];
m27_561 -> m27_564  [key=1, style=dashed, color=darkseagreen4, label=node];
m27_562 -> m27_563  [key=0, style=solid];
m27_562 -> m27_264  [key=2, style=dotted];
m27_562 -> m27_566  [key=1, style=dashed, color=darkseagreen4, label=sw];
m27_564 -> m27_565  [key=0, style=solid];
m27_564 -> m27_265  [key=2, style=dotted];
m27_563 -> m27_564  [key=0, style=solid];
m27_563 -> m27_221  [key=2, style=dotted];
m27_563 -> m27_222  [key=2, style=dotted];
m27_563 -> m27_565  [key=1, style=dashed, color=darkseagreen4, label=writer];
m27_566 -> m27_567  [key=0, style=solid];
m27_566 -> m27_266  [key=2, style=dotted];
m27_566 -> m27_568  [key=1, style=dashed, color=darkseagreen4, label=xaml2];
m27_565 -> m27_566  [key=0, style=solid];
m27_565 -> m27_481  [key=2, style=dotted];
m27_567 -> m27_568  [key=0, style=solid];
m27_567 -> m27_551  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXaml"];
m27_568 -> m27_569  [key=0, style=solid];
m27_568 -> m27_23  [key=2, style=dotted];
m27_569 -> m27_554  [key=0, style=bold, color=blue];
m27_414 -> m27_415  [key=0, style=solid];
m27_415 -> m27_416  [key=0, style=solid];
m27_415 -> m27_415  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_416 -> m27_417  [key=0, style=solid];
m27_416 -> m27_24  [key=2, style=dotted];
m27_417 -> m27_418  [key=0, style=solid];
m27_417 -> m27_419  [key=2, style=dotted];
m27_417 -> m27_23  [key=2, style=dotted];
m27_418 -> m27_414  [key=0, style=bold, color=blue];
m27_137 -> m27_138  [key=0, style=solid];
m27_138 -> m27_139  [key=0, style=solid];
m27_138 -> m27_111  [key=2, style=dotted];
m27_138 -> m27_153  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_138 -> m27_157  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_138 -> m27_161  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_138 -> m27_162  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_138 -> m27_163  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_138 -> m27_166  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_138 -> m27_171  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_139 -> m27_140  [key=0, style=solid];
m27_153 -> m27_154  [key=0, style=solid];
m27_153 -> m27_177  [key=2, style=dotted];
m27_153 -> m27_169  [key=1, style=dashed, color=darkseagreen4, label=instruction];
m27_157 -> m27_158  [key=0, style=solid];
m27_157 -> m27_178  [key=2, style=dotted];
m27_157 -> m27_170  [key=1, style=dashed, color=darkseagreen4, label=cDataSection];
m27_161 -> m27_162  [key=0, style=solid];
m27_161 -> m27_179  [key=2, style=dotted];
m27_161 -> m27_165  [key=1, style=dashed, color=darkseagreen4, label=element];
m27_161 -> m27_168  [key=1, style=dashed, color=darkseagreen4, label=element];
m27_161 -> m27_169  [key=1, style=dashed, color=darkseagreen4, label=element];
m27_161 -> m27_170  [key=1, style=dashed, color=darkseagreen4, label=element];
m27_161 -> m27_171  [key=1, style=dashed, color=darkseagreen4, label=element];
m27_161 -> m27_172  [key=1, style=dashed, color=darkseagreen4, label=element];
m27_162 -> m27_163  [key=0, style=solid];
m27_162 -> m27_180  [key=2, style=dotted];
m27_162 -> m27_181  [key=2, style=dotted];
m27_163 -> m27_164  [key=0, style=solid];
m27_163 -> m27_180  [key=2, style=dotted];
m27_163 -> m27_165  [key=1, style=dashed, color=darkseagreen4, label=aa];
m27_166 -> m27_167  [key=0, style=solid];
m27_166 -> m27_180  [key=2, style=dotted];
m27_166 -> m27_168  [key=1, style=dashed, color=darkseagreen4, label=aa];
m27_171 -> m27_172  [key=0, style=solid];
m27_171 -> m27_182  [key=2, style=dotted];
m27_140 -> m27_141  [key=0, style=solid];
m27_140 -> m27_135  [key=2, style=dotted];
m27_141 -> m27_142  [key=0, style=solid];
m27_141 -> m27_143  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_141 -> m27_149  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_141 -> m27_141  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_142 -> m27_143  [key=0, style=solid];
m27_142 -> m27_111  [key=2, style=dotted];
m27_142 -> m27_144  [key=1, style=dashed, color=darkseagreen4, label=document];
m27_143 -> m27_144  [key=0, style=solid];
m27_143 -> m27_112  [key=2, style=dotted];
m27_149 -> m27_150  [key=0, style=solid];
m27_149 -> m27_92  [key=2, style=dotted];
m27_144 -> m27_145  [key=0, style=solid];
m27_144 -> m27_146  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m27_145 -> m27_146  [key=0, style=solid];
m27_146 -> m27_147  [key=0, style=solid];
m27_146 -> m27_113  [key=2, style=dotted];
m27_146 -> m27_148  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_147 -> m27_148  [key=0, style=solid];
m27_147 -> m27_135  [key=2, style=dotted];
m27_148 -> m27_149  [key=0, style=solid];
m27_148 -> m27_23  [key=2, style=dotted];
m27_150 -> m27_151  [key=0, style=solid];
m27_150 -> m27_175  [key=2, style=dotted];
m27_150 -> m27_176  [key=2, style=dotted];
m27_151 -> m27_152  [key=0, style=solid];
m27_151 -> m27_93  [key=2, style=dotted];
m27_152 -> m27_153  [key=0, style=solid];
m27_152 -> m27_23  [key=2, style=dotted];
m27_154 -> m27_155  [key=0, style=solid];
m27_154 -> m27_113  [key=2, style=dotted];
m27_154 -> m27_156  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_169 -> m27_170  [key=0, style=solid];
m27_169 -> m27_182  [key=2, style=dotted];
m27_155 -> m27_156  [key=0, style=solid];
m27_155 -> m27_135  [key=2, style=dotted];
m27_156 -> m27_157  [key=0, style=solid];
m27_156 -> m27_23  [key=2, style=dotted];
m27_158 -> m27_159  [key=0, style=solid];
m27_158 -> m27_113  [key=2, style=dotted];
m27_158 -> m27_160  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_170 -> m27_171  [key=0, style=solid];
m27_170 -> m27_182  [key=2, style=dotted];
m27_159 -> m27_160  [key=0, style=solid];
m27_159 -> m27_135  [key=2, style=dotted];
m27_160 -> m27_161  [key=0, style=solid];
m27_160 -> m27_23  [key=2, style=dotted];
m27_165 -> m27_166  [key=0, style=solid];
m27_165 -> m27_181  [key=2, style=dotted];
m27_168 -> m27_169  [key=0, style=solid];
m27_168 -> m27_181  [key=2, style=dotted];
m27_172 -> m27_173  [key=0, style=solid];
m27_172 -> m27_113  [key=2, style=dotted];
m27_164 -> m27_165  [key=0, style=solid];
m27_167 -> m27_168  [key=0, style=solid];
m27_173 -> m27_174  [key=0, style=solid];
m27_173 -> m27_23  [key=2, style=dotted];
m27_174 -> m27_137  [key=0, style=bold, color=blue];
m27_69 -> m27_70  [key=0, style=solid];
m27_70 -> m27_71  [key=0, style=solid];
m27_70 -> m27_80  [key=2, style=dotted];
m27_70 -> m27_81  [key=2, style=dotted];
m27_70 -> m27_82  [key=2, style=dotted];
m27_70 -> m27_83  [key=2, style=dotted];
m27_71 -> m27_72  [key=0, style=solid];
m27_71 -> m27_84  [key=2, style=dotted];
m27_71 -> m27_78  [key=1, style=dashed, color=darkseagreen4, label=x];
m27_72 -> m27_73  [key=0, style=solid];
m27_72 -> m27_64  [key=2, style=dotted];
m27_78 -> m27_79  [key=0, style=solid];
m27_78 -> m27_23  [key=2, style=dotted];
m27_73 -> m27_74  [key=0, style=solid];
m27_73 -> m27_65  [key=2, style=dotted];
m27_73 -> m27_48  [key=2, style=dotted];
m27_73 -> m27_66  [key=2, style=dotted];
m27_73 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m27_74 -> m27_75  [key=0, style=solid];
m27_74 -> m27_51  [key=2, style=dotted];
m27_76 -> m27_77  [key=0, style=solid];
m27_76 -> m27_67  [key=2, style=dotted];
m27_75 -> m27_76  [key=0, style=solid];
m27_75 -> m27_23  [key=2, style=dotted];
m27_77 -> m27_78  [key=0, style=solid];
m27_77 -> m27_68  [key=2, style=dotted];
m27_79 -> m27_69  [key=0, style=bold, color=blue];
m27_284 -> m27_285  [key=0, style=solid];
m27_285 -> m27_286  [key=0, style=solid];
m27_285 -> m27_285  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m27_286 -> m27_287  [key=0, style=solid];
m27_286 -> m27_24  [key=2, style=dotted];
m27_286 -> m27_288  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m27_287 -> m27_288  [key=0, style=solid];
m27_287 -> m27_287  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_288 -> m27_289  [key=0, style=solid];
m27_288 -> m27_23  [key=2, style=dotted];
m27_289 -> m27_284  [key=0, style=bold, color=blue];
m27_340 -> m27_341  [key=0, style=solid];
m27_341 -> m27_342  [key=0, style=solid];
m27_341 -> m27_345  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_341 -> m27_333  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_342 -> m27_343  [key=0, style=solid];
m27_342 -> m27_336  [key=2, style=dotted];
m27_342 -> m27_344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_343 -> m27_340  [key=0, style=bold, color=blue];
m27_290 -> m27_291  [key=0, style=solid];
m27_291 -> m27_292  [key=0, style=solid];
m27_291 -> m27_293  [key=2, style=dotted];
m27_291 -> m27_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_292 -> m27_290  [key=0, style=bold, color=blue];
m27_575 -> m27_576  [key=0, style=solid];
m27_576 -> m27_577  [key=0, style=solid];
m27_576 -> m27_581  [key=1, style=dashed, color=darkseagreen4, label=xmlString];
m27_576 -> m27_576  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m27_577 -> m27_578  [key=0, style=solid];
m27_577 -> m27_92  [key=2, style=dotted];
m27_581 -> m27_582  [key=0, style=solid];
m27_581 -> m27_112  [key=2, style=dotted];
m27_578 -> m27_579  [key=0, style=solid];
m27_578 -> m27_67  [key=2, style=dotted];
m27_579 -> m27_580  [key=0, style=solid];
m27_579 -> m27_23  [key=2, style=dotted];
m27_580 -> m27_581  [key=0, style=solid];
m27_580 -> m27_111  [key=2, style=dotted];
m27_580 -> m27_582  [key=1, style=dashed, color=darkseagreen4, label=xml1];
m27_582 -> m27_583  [key=0, style=solid];
m27_582 -> m27_67  [key=2, style=dotted];
m27_583 -> m27_584  [key=0, style=solid];
m27_583 -> m27_23  [key=2, style=dotted];
m27_584 -> m27_575  [key=0, style=bold, color=blue];
m27_347 -> m27_348  [key=0, style=solid];
m27_348 -> m27_349  [key=0, style=solid];
m27_348 -> m27_351  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_348 -> m27_348  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_349 -> m27_350  [key=0, style=solid];
m27_349 -> m27_354  [key=2, style=dotted];
m27_351 -> m27_352  [key=0, style=solid];
m27_351 -> m27_355  [key=2, style=dotted];
m27_350 -> m27_351  [key=0, style=solid];
m27_350 -> m27_23  [key=2, style=dotted];
m27_352 -> m27_353  [key=0, style=solid];
m27_352 -> m27_51  [key=2, style=dotted];
m27_352 -> m27_23  [key=2, style=dotted];
m27_353 -> m27_347  [key=0, style=bold, color=blue];
m27_95 -> m27_96  [key=0, style=solid];
m27_96 -> m27_97  [key=0, style=solid];
m27_96 -> m27_111  [key=2, style=dotted];
m27_96 -> m27_98  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_97 -> m27_98  [key=0, style=solid];
m27_97 -> m27_112  [key=2, style=dotted];
m27_98 -> m27_99  [key=0, style=solid];
m27_98 -> m27_113  [key=2, style=dotted];
m27_99 -> m27_100  [key=0, style=solid];
m27_99 -> m27_23  [key=2, style=dotted];
m27_100 -> m27_101  [key=0, style=solid];
m27_100 -> m27_111  [key=2, style=dotted];
m27_100 -> m27_102  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_101 -> m27_102  [key=0, style=solid];
m27_101 -> m27_112  [key=2, style=dotted];
m27_102 -> m27_103  [key=0, style=solid];
m27_102 -> m27_113  [key=2, style=dotted];
m27_103 -> m27_104  [key=0, style=solid];
m27_103 -> m27_23  [key=2, style=dotted];
m27_104 -> m27_105  [key=0, style=solid];
m27_104 -> m27_92  [key=2, style=dotted];
m27_105 -> m27_106  [key=0, style=solid];
m27_105 -> m27_93  [key=2, style=dotted];
m27_106 -> m27_107  [key=0, style=solid];
m27_106 -> m27_23  [key=2, style=dotted];
m27_107 -> m27_108  [key=0, style=solid];
m27_107 -> m27_92  [key=2, style=dotted];
m27_108 -> m27_109  [key=0, style=solid];
m27_108 -> m27_93  [key=2, style=dotted];
m27_109 -> m27_110  [key=0, style=solid];
m27_109 -> m27_23  [key=2, style=dotted];
m27_110 -> m27_95  [key=0, style=bold, color=blue];
m27_585 -> m27_586  [key=0, style=solid];
m27_586 -> m27_587  [key=0, style=solid];
m27_586 -> m27_593  [key=2, style=dotted];
m27_586 -> m27_92  [key=2, style=dotted];
m27_586 -> m27_589  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_586 -> m27_590  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_586 -> m27_591  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_587 -> m27_588  [key=0, style=solid];
m27_587 -> m27_594  [key=2, style=dotted];
m27_589 -> m27_590  [key=0, style=solid];
m27_589 -> m27_23  [key=2, style=dotted];
m27_590 -> m27_591  [key=0, style=solid];
m27_590 -> m27_23  [key=2, style=dotted];
m27_591 -> m27_592  [key=0, style=solid];
m27_591 -> m27_51  [key=2, style=dotted];
m27_591 -> m27_23  [key=2, style=dotted];
m27_588 -> m27_589  [key=0, style=solid];
m27_588 -> m27_68  [key=2, style=dotted];
m27_588 -> m27_590  [key=1, style=dashed, color=darkseagreen4, label=w2];
m27_588 -> m27_591  [key=1, style=dashed, color=darkseagreen4, label=w2];
m27_592 -> m27_585  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m27_0 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m27_0 -> m27_6  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m27_0 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m27_0 -> m27_426  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_15  [key=2, style=dotted];
m27_1 -> m27_12  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_1 -> m27_13  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_16  [key=2, style=dotted];
m27_2 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_2 -> m27_9  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_2 -> m27_10  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_6  [key=0, style=solid];
m27_6 -> m27_7  [key=0, style=solid];
m27_6 -> m27_9  [key=0, style=solid];
m27_7 -> m27_8  [key=0, style=solid];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_23  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_5 -> m27_11  [key=0, style=solid];
m27_5 -> m27_17  [key=2, style=dotted];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_20  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_21  [key=2, style=dotted];
m27_8 -> m27_11  [key=0, style=solid];
m27_8 -> m27_18  [key=2, style=dotted];
m27_8 -> m27_19  [key=2, style=dotted];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_22  [key=2, style=dotted];
m27_14 -> m27_0  [key=0, style=bold, color=blue];
m27_441 -> m27_442  [key=0, style=solid];
m27_294 -> m27_295  [key=0, style=solid];
m27_295 -> m27_296  [key=0, style=solid];
m27_295 -> m27_210  [key=2, style=dotted];
m27_296 -> m27_294  [key=0, style=bold, color=blue];
m27_300 -> m27_301  [key=0, style=solid];
m27_301 -> m27_302  [key=0, style=solid];
m27_301 -> m27_210  [key=2, style=dotted];
m27_302 -> m27_300  [key=0, style=bold, color=blue];
m27_338 -> m27_339  [key=0, style=solid];
m27_338 -> m27_210  [key=2, style=dotted];
m27_337 -> m27_338  [key=0, style=solid];
m27_339 -> m27_337  [key=0, style=bold, color=blue];
m27_345 -> m27_346  [key=0, style=solid];
m27_345 -> m27_94  [key=2, style=dotted];
m27_344 -> m27_345  [key=0, style=solid];
m27_346 -> m27_344  [key=0, style=bold, color=blue];
m27_442 -> m27_443  [key=0, style=solid];
m27_442 -> m27_24  [key=2, style=dotted];
m27_443 -> m27_441  [key=0, style=bold, color=blue];
m27_505 -> m27_506  [key=0, style=solid];
m27_506 -> m27_507  [key=0, style=solid];
m27_506 -> m27_513  [key=2, style=dotted];
m27_507 -> m27_508  [key=0, style=solid];
m27_507 -> m27_514  [key=2, style=dotted];
m27_507 -> m27_509  [key=1, style=dashed, color=darkseagreen4, label=obj];
m27_508 -> m27_509  [key=0, style=solid];
m27_508 -> m27_65  [key=2, style=dotted];
m27_508 -> m27_48  [key=2, style=dotted];
m27_508 -> m27_515  [key=2, style=dotted];
m27_508 -> m27_510  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_509 -> m27_510  [key=0, style=solid];
m27_509 -> m27_516  [key=2, style=dotted];
m27_510 -> m27_511  [key=0, style=solid];
m27_510 -> m27_517  [key=2, style=dotted];
m27_511 -> m27_512  [key=0, style=solid];
m27_511 -> m27_23  [key=2, style=dotted];
m27_512 -> m27_505  [key=0, style=bold, color=blue];
m27_570 -> m27_571  [key=0, style=solid];
m27_571 -> m27_572  [key=0, style=solid];
m27_571 -> m27_571  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_572 -> m27_573  [key=0, style=solid];
m27_572 -> m27_210  [key=2, style=dotted];
m27_573 -> m27_574  [key=0, style=solid];
m27_573 -> m27_23  [key=2, style=dotted];
m27_574 -> m27_570  [key=0, style=bold, color=blue];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_27 -> m27_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_27 -> m27_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_27 -> m27_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_27 -> m27_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_27 -> m27_424  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m27_27 -> m27_25  [key=3, color=darkorchid, style=bold, label="Parameter variable string deserializeRootElementName"];
m27_27 -> m27_426  [key=3, color=darkorchid, style=bold, label="Parameter variable string deserializeRootElementName"];
m27_27 -> m27_34  [key=3, color=darkorchid, style=bold, label="method methodReturn XmlNode DeserializeXmlNode"];
m27_28 -> m27_29  [key=0, style=solid];
m27_29 -> m27_30  [key=0, style=solid];
m27_29 -> m27_45  [key=2, style=dotted];
m27_29 -> m27_46  [key=2, style=dotted];
m27_29 -> m27_34  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_34  [key=0, style=solid];
m27_33 -> m27_34  [key=0, style=solid];
m27_36 -> m27_37  [key=0, style=solid];
m27_36 -> m27_45  [key=2, style=dotted];
m27_36 -> m27_46  [key=2, style=dotted];
m27_36 -> m27_38  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_47  [key=2, style=dotted];
m27_34 -> m27_35  [key=0, style=solid];
m27_34 -> m27_49  [key=2, style=dotted];
m27_34 -> m27_50  [key=2, style=dotted];
m27_34 -> m27_43  [key=1, style=dashed, color=darkseagreen4, label=node];
m27_31 -> m27_32  [key=0, style=solid];
m27_31 -> m27_48  [key=2, style=dotted];
m27_31 -> m27_33  [key=1, style=dashed, color=darkseagreen4, label=converter];
m27_31 -> m27_34  [key=1, style=dashed, color=darkseagreen4, label=converter];
m27_31 -> m27_38  [key=1, style=dashed, color=darkseagreen4, label=converter];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_49  [key=2, style=dotted];
m27_38 -> m27_50  [key=2, style=dotted];
m27_38 -> m27_40  [key=1, style=dashed, color=darkseagreen4, label=d];
m27_38 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label=d];
m27_35 -> m27_36  [key=0, style=solid];
m27_35 -> m27_42  [key=1, style=dashed, color=darkseagreen4, label=xmlText];
m27_43 -> m27_44  [key=0, style=solid];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_23  [key=2, style=dotted];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_47  [key=2, style=dotted];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_51  [key=2, style=dotted];
m27_39 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label=linqXmlText];
m27_39 -> m27_42  [key=1, style=dashed, color=darkseagreen4, label=linqXmlText];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_42  [key=0, style=solid];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label=linqXmlText];
m27_44 -> m27_27  [key=0, style=bold, color=blue];
m27_379 -> m27_380  [key=0, style=solid];
m27_380 -> m27_381  [key=0, style=solid];
m27_380 -> m27_383  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_380 -> m27_380  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_381 -> m27_382  [key=0, style=solid];
m27_381 -> m27_354  [key=2, style=dotted];
m27_383 -> m27_384  [key=0, style=solid];
m27_383 -> m27_355  [key=2, style=dotted];
m27_382 -> m27_383  [key=0, style=solid];
m27_382 -> m27_23  [key=2, style=dotted];
m27_384 -> m27_385  [key=0, style=solid];
m27_384 -> m27_51  [key=2, style=dotted];
m27_384 -> m27_23  [key=2, style=dotted];
m27_385 -> m27_379  [key=0, style=bold, color=blue];
m27_303 -> m27_304  [key=0, style=solid];
m27_304 -> m27_305  [key=0, style=solid];
m27_304 -> m27_304  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m27_305 -> m27_306  [key=0, style=solid];
m27_305 -> m27_24  [key=2, style=dotted];
m27_305 -> m27_307  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m27_305 -> m27_308  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m27_306 -> m27_307  [key=0, style=solid];
m27_306 -> m27_306  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_307 -> m27_308  [key=0, style=solid];
m27_307 -> m27_23  [key=2, style=dotted];
m27_308 -> m27_309  [key=0, style=solid];
m27_308 -> m27_113  [key=2, style=dotted];
m27_308 -> m27_310  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_309 -> m27_310  [key=0, style=solid];
m27_310 -> m27_311  [key=0, style=solid];
m27_310 -> m27_23  [key=2, style=dotted];
m27_311 -> m27_303  [key=0, style=bold, color=blue];
m27_420 -> m27_421  [key=0, style=solid];
m27_421 -> m27_422  [key=0, style=solid];
m27_421 -> m27_434  [key=2, style=dotted];
m27_421 -> m27_423  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m27_421 -> m27_424  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m27_422 -> m27_423  [key=0, style=solid];
m27_422 -> m27_434  [key=2, style=dotted];
m27_422 -> m27_435  [key=2, style=dotted];
m27_423 -> m27_424  [key=0, style=solid];
m27_423 -> m27_435  [key=2, style=dotted];
m27_424 -> m27_425  [key=0, style=solid];
m27_424 -> m27_65  [key=2, style=dotted];
m27_424 -> m27_436  [key=2, style=dotted];
m27_424 -> m27_426  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_425 -> m27_426  [key=0, style=solid];
m27_425 -> m27_23  [key=2, style=dotted];
m27_426 -> m27_427  [key=0, style=solid];
m27_426 -> m27_27  [key=2, style=dotted];
m27_426 -> m27_430  [key=1, style=dashed, color=darkseagreen4, label=node];
m27_427 -> m27_428  [key=0, style=solid];
m27_427 -> m27_256  [key=2, style=dotted];
m27_427 -> m27_429  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_430 -> m27_431  [key=0, style=solid];
m27_430 -> m27_0  [key=2, style=dotted];
m27_430 -> m27_432  [key=1, style=dashed, color=darkseagreen4, label=xmlJson];
m27_428 -> m27_429  [key=0, style=solid];
m27_428 -> m27_428  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_429 -> m27_430  [key=0, style=solid];
m27_429 -> m27_23  [key=2, style=dotted];
m27_431 -> m27_432  [key=0, style=solid];
m27_431 -> m27_431  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXmlJson"];
m27_432 -> m27_433  [key=0, style=solid];
m27_432 -> m27_23  [key=2, style=dotted];
m27_433 -> m27_420  [key=0, style=bold, color=blue];
m27_212 -> m27_215  [key=0, style=solid];
m27_212 -> m27_216  [key=1, style=dashed, color=darkseagreen4, label=bool];
m27_212 -> m27_217  [key=1, style=dashed, color=darkseagreen4, label=XDocument];
m27_212 -> m27_207  [key=3, color=darkorchid, style=bold, label="Parameter variable XDocument doc"];
m27_215 -> m27_216  [key=0, style=solid];
m27_215 -> m27_220  [key=2, style=dotted];
m27_215 -> m27_218  [key=1, style=dashed, color=darkseagreen4, label=builder];
m27_216 -> m27_217  [key=0, style=solid];
m27_216 -> m27_213  [key=2, style=dotted];
m27_216 -> m27_221  [key=2, style=dotted];
m27_216 -> m27_222  [key=2, style=dotted];
m27_217 -> m27_218  [key=0, style=solid];
m27_217 -> m27_223  [key=2, style=dotted];
m27_218 -> m27_219  [key=0, style=solid];
m27_218 -> m27_224  [key=2, style=dotted];
m27_219 -> m27_212  [key=0, style=bold, color=blue];
m27_603 -> m27_604  [key=0, style=solid];
m27_604 -> m27_605  [key=0, style=solid];
m27_604 -> m27_606  [key=1, style=dashed, color=darkseagreen4, label=xmlString];
m27_604 -> m27_596  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m27_605 -> m27_606  [key=0, style=solid];
m27_605 -> m27_111  [key=2, style=dotted];
m27_605 -> m27_607  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_606 -> m27_607  [key=0, style=solid];
m27_606 -> m27_112  [key=2, style=dotted];
m27_607 -> m27_608  [key=0, style=solid];
m27_607 -> m27_113  [key=2, style=dotted];
m27_608 -> m27_609  [key=0, style=solid];
m27_608 -> m27_68  [key=2, style=dotted];
m27_609 -> m27_610  [key=0, style=solid];
m27_609 -> m27_23  [key=2, style=dotted];
m27_610 -> m27_603  [key=0, style=bold, color=blue];
m27_183 -> m27_184  [key=0, style=solid];
m27_184 -> m27_185  [key=0, style=solid];
m27_184 -> m27_111  [key=2, style=dotted];
m27_185 -> m27_186  [key=0, style=solid];
m27_185 -> m27_194  [key=2, style=dotted];
m27_186 -> m27_187  [key=0, style=solid];
m27_186 -> m27_186  [key=1, style=dashed, color=darkseagreen4, label=fragement];
m27_187 -> m27_188  [key=0, style=solid];
m27_187 -> m27_113  [key=2, style=dotted];
m27_187 -> m27_189  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_187 -> m27_191  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_188 -> m27_189  [key=0, style=solid];
m27_188 -> m27_188  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_189 -> m27_190  [key=0, style=solid];
m27_189 -> m27_23  [key=2, style=dotted];
m27_191 -> m27_192  [key=0, style=solid];
m27_191 -> m27_135  [key=2, style=dotted];
m27_190 -> m27_191  [key=0, style=solid];
m27_190 -> m27_135  [key=2, style=dotted];
m27_192 -> m27_193  [key=0, style=solid];
m27_192 -> m27_136  [key=2, style=dotted];
m27_193 -> m27_183  [key=0, style=bold, color=blue];
m27_470 -> m27_471  [key=0, style=solid];
m27_471 -> m27_472  [key=0, style=solid];
m27_471 -> m27_46  [key=2, style=dotted];
m27_471 -> m27_222  [key=2, style=dotted];
m27_471 -> m27_474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_471 -> m27_475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_472 -> m27_473  [key=0, style=solid];
m27_472 -> m27_264  [key=2, style=dotted];
m27_472 -> m27_477  [key=1, style=dashed, color=darkseagreen4, label=sw];
m27_474 -> m27_475  [key=0, style=solid];
m27_474 -> m27_476  [key=0, style=solid];
m27_474 -> m27_479  [key=2, style=dotted];
m27_475 -> m27_474  [key=0, style=solid];
m27_475 -> m27_480  [key=2, style=dotted];
m27_473 -> m27_474  [key=0, style=solid];
m27_473 -> m27_221  [key=2, style=dotted];
m27_473 -> m27_222  [key=2, style=dotted];
m27_473 -> m27_475  [key=1, style=dashed, color=darkseagreen4, label=writer];
m27_473 -> m27_476  [key=1, style=dashed, color=darkseagreen4, label=writer];
m27_477 -> m27_478  [key=0, style=solid];
m27_477 -> m27_266  [key=2, style=dotted];
m27_476 -> m27_477  [key=0, style=solid];
m27_476 -> m27_481  [key=2, style=dotted];
m27_478 -> m27_470  [key=0, style=bold, color=blue];
m27_52 -> m27_53  [key=0, style=solid];
m27_53 -> m27_54  [key=0, style=solid];
m27_53 -> m27_53  [key=3, color=darkorchid, style=bold, label="Local variable decimal d"];
m27_54 -> m27_55  [key=0, style=solid];
m27_54 -> m27_63  [key=2, style=dotted];
m27_54 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label=x];
m27_55 -> m27_56  [key=0, style=solid];
m27_55 -> m27_64  [key=2, style=dotted];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_23  [key=2, style=dotted];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_65  [key=2, style=dotted];
m27_56 -> m27_48  [key=2, style=dotted];
m27_56 -> m27_66  [key=2, style=dotted];
m27_56 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m27_57 -> m27_58  [key=0, style=solid];
m27_57 -> m27_51  [key=2, style=dotted];
m27_59 -> m27_60  [key=0, style=solid];
m27_59 -> m27_67  [key=2, style=dotted];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_23  [key=2, style=dotted];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_68  [key=2, style=dotted];
m27_62 -> m27_52  [key=0, style=bold, color=blue];
m27_85 -> m27_86  [key=0, style=solid];
m27_86 -> m27_87  [key=0, style=solid];
m27_86 -> m27_86  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_87 -> m27_88  [key=0, style=solid];
m27_87 -> m27_92  [key=2, style=dotted];
m27_87 -> m27_93  [key=2, style=dotted];
m27_87 -> m27_89  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_88 -> m27_89  [key=0, style=solid];
m27_88 -> m27_23  [key=2, style=dotted];
m27_89 -> m27_90  [key=0, style=solid];
m27_89 -> m27_94  [key=2, style=dotted];
m27_90 -> m27_91  [key=0, style=solid];
m27_90 -> m27_51  [key=2, style=dotted];
m27_90 -> m27_23  [key=2, style=dotted];
m27_91 -> m27_85  [key=0, style=bold, color=blue];
m27_498 -> m27_499  [key=0, style=solid];
m27_499 -> m27_500  [key=0, style=solid];
m27_499 -> m27_501  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_499 -> m27_499  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_500 -> m27_501  [key=0, style=solid];
m27_500 -> m27_111  [key=2, style=dotted];
m27_500 -> m27_502  [key=1, style=dashed, color=darkseagreen4, label=d];
m27_501 -> m27_502  [key=0, style=solid];
m27_501 -> m27_112  [key=2, style=dotted];
m27_502 -> m27_503  [key=0, style=solid];
m27_502 -> m27_113  [key=2, style=dotted];
m27_503 -> m27_504  [key=0, style=solid];
m27_503 -> m27_23  [key=2, style=dotted];
m27_504 -> m27_498  [key=0, style=bold, color=blue];
m27_482 -> m27_483  [key=0, style=solid];
m27_483 -> m27_484  [key=0, style=solid];
m27_483 -> m27_485  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_483 -> m27_483  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_484 -> m27_485  [key=0, style=solid];
m27_484 -> m27_111  [key=2, style=dotted];
m27_484 -> m27_486  [key=1, style=dashed, color=darkseagreen4, label=d];
m27_485 -> m27_486  [key=0, style=solid];
m27_485 -> m27_112  [key=2, style=dotted];
m27_486 -> m27_487  [key=0, style=solid];
m27_486 -> m27_113  [key=2, style=dotted];
m27_487 -> m27_488  [key=0, style=solid];
m27_487 -> m27_23  [key=2, style=dotted];
m27_488 -> m27_482  [key=0, style=bold, color=blue];
m27_230 -> m27_231  [key=0, style=solid];
m27_231 -> m27_232  [key=0, style=solid];
m27_231 -> m27_233  [key=1, style=dashed, color=darkseagreen4, label=xml];
m27_231 -> m27_231  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m27_232 -> m27_233  [key=0, style=solid];
m27_232 -> m27_111  [key=2, style=dotted];
m27_232 -> m27_234  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_232 -> m27_238  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_233 -> m27_234  [key=0, style=solid];
m27_233 -> m27_112  [key=2, style=dotted];
m27_234 -> m27_235  [key=0, style=solid];
m27_234 -> m27_113  [key=2, style=dotted];
m27_234 -> m27_236  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_234 -> m27_237  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_234 -> m27_240  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m27_238 -> m27_239  [key=0, style=solid];
m27_238 -> m27_23  [key=2, style=dotted];
m27_235 -> m27_236  [key=0, style=solid];
m27_235 -> m27_235  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_236 -> m27_237  [key=0, style=solid];
m27_236 -> m27_23  [key=2, style=dotted];
m27_237 -> m27_238  [key=0, style=solid];
m27_237 -> m27_24  [key=2, style=dotted];
m27_237 -> m27_241  [key=1, style=dashed, color=darkseagreen4, label=deserializedDoc];
m27_240 -> m27_241  [key=0, style=solid];
m27_240 -> m27_135  [key=2, style=dotted];
m27_241 -> m27_242  [key=0, style=solid];
m27_241 -> m27_244  [key=2, style=dotted];
m27_239 -> m27_240  [key=0, style=solid];
m27_239 -> m27_135  [key=2, style=dotted];
m27_242 -> m27_243  [key=0, style=solid];
m27_242 -> m27_136  [key=2, style=dotted];
m27_243 -> m27_230  [key=0, style=bold, color=blue];
m27_332 -> m27_333  [key=0, style=solid];
m27_333 -> m27_334  [key=0, style=solid];
m27_333 -> m27_338  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_333 -> m27_333  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_334 -> m27_335  [key=0, style=solid];
m27_334 -> m27_336  [key=2, style=dotted];
m27_334 -> m27_337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_335 -> m27_332  [key=0, style=bold, color=blue];
m27_245 -> m27_246  [key=0, style=solid];
m27_246 -> m27_247  [key=0, style=solid];
m27_246 -> m27_246  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m27_247 -> m27_248  [key=0, style=solid];
m27_247 -> m27_24  [key=2, style=dotted];
m27_247 -> m27_249  [key=1, style=dashed, color=darkseagreen4, label=doc];
m27_248 -> m27_249  [key=0, style=solid];
m27_248 -> m27_253  [key=1, style=dashed, color=darkseagreen4, label=expected];
m27_248 -> m27_248  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m27_249 -> m27_250  [key=0, style=solid];
m27_249 -> m27_255  [key=2, style=dotted];
m27_249 -> m27_251  [key=1, style=dashed, color=darkseagreen4, label=formattedXml];
m27_249 -> m27_253  [key=1, style=dashed, color=darkseagreen4, label=formattedXml];
m27_253 -> m27_254  [key=0, style=solid];
m27_253 -> m27_23  [key=2, style=dotted];
m27_250 -> m27_251  [key=0, style=solid];
m27_250 -> m27_135  [key=2, style=dotted];
m27_251 -> m27_252  [key=0, style=solid];
m27_251 -> m27_135  [key=2, style=dotted];
m27_252 -> m27_253  [key=0, style=solid];
m27_252 -> m27_136  [key=2, style=dotted];
m27_254 -> m27_245  [key=0, style=bold, color=blue];
m27_611 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_360  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_372  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_396  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_427  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_611 -> m27_464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m27_612 -> m27_338  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_613 -> m27_345  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_614 -> m27_442  [key=1, style=dashed, color=darkseagreen4, label=json];
}
