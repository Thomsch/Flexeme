digraph  {
m2_26 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", span="68-68", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", file="DeserializeBenchmarks.cs"];
m2_27 [label="return JsonConvert.DeserializeObject<IList<double>>(FloatArrayJson);", span="70-70", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", file="DeserializeBenchmarks.cs"];
m2_28 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", span="68-68", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", file="DeserializeBenchmarks.cs"];
m2_6 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="DeserializeBenchmarks.cs"];
m2_16 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", span="57-57", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs"];
m2_17 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="59-59", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs"];
m2_18 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="60-60", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs"];
m2_19 [label="JsonSerializer serializer = new JsonSerializer()", span="62-62", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs"];
m2_20 [label="return serializer.Deserialize<IList<RootObject>>(jsonTextReader);", span="63-63", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs"];
m2_21 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", span="57-57", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs"];
m2_8 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="433-433", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="DeserializeBenchmarks.cs"];
m2_23 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DeserializeBenchmarks.cs"];
m2_22 [label="Entry System.IO.File.OpenText(string)", span="0-0", cluster="System.IO.File.OpenText(string)", file="DeserializeBenchmarks.cs"];
m2_29 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", span="74-74", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", file="DeserializeBenchmarks.cs"];
m2_30 [label="return JsonConvert.DeserializeObject<IList<decimal>>(FloatArrayJson);", span="76-76", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", file="DeserializeBenchmarks.cs"];
m2_31 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", span="74-74", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", file="DeserializeBenchmarks.cs"];
m2_7 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DeserializeBenchmarks.cs"];
m2_24 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DeserializeBenchmarks.cs"];
m2_9 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="DeserializeBenchmarks.cs"];
m2_10 [label="i * 1.1m", span="47-47", cluster="lambda expression", file="DeserializeBenchmarks.cs"];
m2_11 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="DeserializeBenchmarks.cs"];
m2_15 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DeserializeBenchmarks.cs"];
m2_25 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="DeserializeBenchmarks.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", file="DeserializeBenchmarks.cs"];
m2_1 [label="LargeJsonText = System.IO.File.ReadAllText(''large.json'')", span="45-45", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", file="DeserializeBenchmarks.cs"];
m2_2 [label="FloatArrayJson = new JArray(Enumerable.Range(0, 5000).Select(i => i * 1.1m)).ToString(Formatting.None)", span="47-47", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", file="DeserializeBenchmarks.cs"];
m2_3 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", file="DeserializeBenchmarks.cs"];
m2_12 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", span="51-51", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", file="DeserializeBenchmarks.cs"];
m2_13 [label="return JsonConvert.DeserializeObject<IList<RootObject>>(LargeJsonText);", span="53-53", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", file="DeserializeBenchmarks.cs"];
m2_14 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", span="51-51", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", file="DeserializeBenchmarks.cs"];
m2_4 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="DeserializeBenchmarks.cs"];
m2_5 [label="Entry JArray.cstr", span="", cluster="JArray.cstr", file="DeserializeBenchmarks.cs"];
m3_110 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", span="220-220", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_114 [label="TestClass c = new TestClass()", span="222-222", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_115 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="224-224", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_124 [label="c.strings.Add((string)reader.Value)", span="237-237", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_129 [label="c.dictionary.Add(key, (await reader.ReadAsInt32Async()).GetValueOrDefault())", span="245-245", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_131 [label="c.Name = await reader.ReadAsStringAsync()", span="249-249", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_133 [label="c.Now = (await reader.ReadAsDateTimeAsync()).GetValueOrDefault()", span="252-252", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_135 [label="c.BigNumber = (await reader.ReadAsDecimalAsync()).GetValueOrDefault()", span="255-255", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_138 [label="c.Address1 = await CreateAddressAsync(reader)", span="259-259", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_143 [label="c.Addresses.Add(address)", span="266-266", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_144 [label="return c;", span="277-277", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_116 [label="await reader.ReadAsync()", span="225-225", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_117 [label="await reader.ReadAsync()", span="226-226", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_118 [label="reader.TokenType == JsonToken.PropertyName", span="228-228", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_119 [label="string propertyName = (string)reader.Value", span="230-230", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_122 [label="await reader.ReadAsync()", span="234-234", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_123 [label="await reader.ReadAsync() && reader.TokenType != JsonToken.EndArray", span="235-235", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_126 [label="await reader.ReadAsync()", span="241-241", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_127 [label="await reader.ReadAsync() && reader.TokenType != JsonToken.EndObject", span="242-242", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_128 [label="string key = (string)reader.Value", span="244-244", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_137 [label="await reader.ReadAsync()", span="258-258", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_140 [label="await reader.ReadAsync()", span="262-262", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_141 [label="await reader.ReadAsync() && reader.TokenType != JsonToken.EndArray", span="263-263", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_142 [label="var address = await CreateAddressAsync(reader)", span="265-265", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_120 [label=propertyName, span="231-231", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_121 [label="''strings''", span="233-233", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_125 [label="''dictionary''", span="240-240", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_130 [label="''Name''", span="248-248", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_132 [label="''Now''", span="251-251", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_134 [label="''BigNumber''", span="254-254", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_136 [label="''Address1''", span="257-257", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_139 [label="''Addresses''", span="261-261", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_145 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", span="220-220", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_35 [label="Entry Unk.>", span="", cluster="Unk.>", file="DeserializeComparisonBenchmarks.cs"];
m3_84 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_174 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="126-126", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="DeserializeComparisonBenchmarks.cs"];
m3_39 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", span="101-101", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", file="DeserializeComparisonBenchmarks.cs"];
m3_40 [label="return JsonConvert.DeserializeObject<TestClass>(BenchmarkConstants.JsonText);", span="103-103", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", file="DeserializeComparisonBenchmarks.cs"];
m3_41 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", span="101-101", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", file="DeserializeComparisonBenchmarks.cs"];
m3_18 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", span="70-70", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", file="DeserializeComparisonBenchmarks.cs"];
m3_19 [label="return DeserializeBinaryFormatter<TestClass>(BinaryFormatterData);", span="72-72", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", file="DeserializeComparisonBenchmarks.cs"];
m3_20 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", span="70-70", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", file="DeserializeComparisonBenchmarks.cs"];
m3_150 [label="Entry Unk.ReadAsStringAsync", span="", cluster="Unk.ReadAsStringAsync", file="DeserializeComparisonBenchmarks.cs"];
m3_26 [label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", span="0-0", cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", file="DeserializeComparisonBenchmarks.cs"];
m3_34 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="DeserializeComparisonBenchmarks.cs"];
m3_85 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="387-387", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="DeserializeComparisonBenchmarks.cs"];
m3_88 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="DeserializeComparisonBenchmarks.cs"];
m3_82 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestClass.TestClass()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.TestClass.TestClass()", file="DeserializeComparisonBenchmarks.cs"];
m3_25 [label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", span="0-0", cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", file="DeserializeComparisonBenchmarks.cs"];
m3_8 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="DeserializeComparisonBenchmarks.cs"];
m3_93 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", span="179-179", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_94 [label="Address a = new Address()", span="181-181", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_95 [label="reader.Read()", span="182-182", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_96 [label="reader.TokenType == JsonToken.PropertyName", span="184-184", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_97 [label="(string)reader.Value", span="186-186", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_99 [label="a.Street = reader.ReadAsString()", span="189-189", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_101 [label="a.Phone = reader.ReadAsString()", span="192-192", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_103 [label="a.Entered = reader.ReadAsDateTime().GetValueOrDefault()", span="195-195", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_104 [label="return a;", span="204-204", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_98 [label="''Street''", span="188-188", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_100 [label="''Phone''", span="191-191", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_102 [label="''Entered''", span="194-194", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_105 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", span="179-179", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_153 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", span="280-280", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_154 [label="Address a = new Address()", span="282-282", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_155 [label="await reader.ReadAsync()", span="283-283", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_156 [label="reader.TokenType == JsonToken.PropertyName", span="285-285", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_157 [label="(string)reader.Value", span="287-287", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_159 [label="a.Street = await reader.ReadAsStringAsync()", span="290-290", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_161 [label="a.Phone = await reader.ReadAsStringAsync()", span="293-293", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_163 [label="a.Entered = (await reader.ReadAsDateTimeAsync()).GetValueOrDefault()", span="296-296", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_164 [label="return a;", span="305-305", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_158 [label="''Street''", span="289-289", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_160 [label="''Phone''", span="292-292", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_162 [label="''Entered''", span="295-295", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_165 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", span="280-280", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_173 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_36 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", span="95-95", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_37 [label="return DeserializeDataContractJson<TestClass>(BenchmarkConstants.JsonText);", span="97-97", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_38 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", span="95-95", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_89 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DeserializeComparisonBenchmarks.cs"];
m3_107 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", span="209-209", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", file="DeserializeComparisonBenchmarks.cs"];
m3_108 [label="return DeserializeJsonNetManualAsync(BenchmarkConstants.JsonText);", span="211-211", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", file="DeserializeComparisonBenchmarks.cs"];
m3_109 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", span="209-209", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", file="DeserializeComparisonBenchmarks.cs"];
m3_92 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="1016-1016", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="DeserializeComparisonBenchmarks.cs"];
m3_49 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", span="119-119", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_50 [label="TestClass c = new TestClass()", span="121-121", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_51 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="123-123", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_60 [label="c.strings.Add((string)reader.Value)", span="136-136", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_65 [label="c.dictionary.Add(key, reader.ReadAsInt32().GetValueOrDefault())", span="144-144", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_67 [label="c.Name = reader.ReadAsString()", span="148-148", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_69 [label="c.Now = reader.ReadAsDateTime().GetValueOrDefault()", span="151-151", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_71 [label="c.BigNumber = reader.ReadAsDecimal().GetValueOrDefault()", span="154-154", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_74 [label="c.Address1 = CreateAddress(reader)", span="158-158", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_79 [label="c.Addresses.Add(address)", span="165-165", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_80 [label="return c;", span="176-176", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_52 [label="reader.Read()", span="124-124", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", color=green, community=0];
m3_53 [label="reader.Read()", span="125-125", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_54 [label="reader.TokenType == JsonToken.PropertyName", span="127-127", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_55 [label="string propertyName = (string)reader.Value", span="129-129", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_58 [label="reader.Read()", span="133-133", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_59 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="134-134", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_62 [label="reader.Read()", span="140-140", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_63 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="141-141", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_64 [label="string key = (string)reader.Value", span="143-143", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_73 [label="reader.Read()", span="157-157", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_76 [label="reader.Read()", span="161-161", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_77 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="162-162", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_78 [label="var address = CreateAddress(reader)", span="164-164", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_56 [label=propertyName, span="130-130", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_57 [label="''strings''", span="132-132", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_61 [label="''dictionary''", span="139-139", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_66 [label="''Name''", span="147-147", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_68 [label="''Now''", span="150-150", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_70 [label="''BigNumber''", span="153-153", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_72 [label="''Address1''", span="156-156", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_75 [label="''Addresses''", span="160-160", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_81 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", span="119-119", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_86 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DeserializeComparisonBenchmarks.cs"];
m3_169 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", span="315-315", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_170 [label="JsonSerializer serializer = new JsonSerializer()", span="317-317", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_171 [label="return (T)serializer.Deserialize(new BsonReader(new MemoryStream(bson)), typeof(T));", span="318-318", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_172 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", span="315-315", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_30 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", span="87-87", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_31 [label="JavaScriptSerializer ser = new JavaScriptSerializer { MaxJsonLength = int.MaxValue }", span="89-89", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_32 [label="return ser.Deserialize<T>(json);", span="91-91", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_33 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", span="87-87", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_3 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", span="53-53", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_4 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(T))", span="55-55", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_5 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(xml))", span="56-56", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_6 [label="return (T)serializer.ReadObject(ms);", span="58-58", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_7 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", span="53-53", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_166 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", span="310-310", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", file="DeserializeComparisonBenchmarks.cs"];
m3_167 [label="return DeserializeJsonNetBson<TestClass>(BsonData);", span="312-312", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", file="DeserializeComparisonBenchmarks.cs"];
m3_168 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", span="310-310", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", file="DeserializeComparisonBenchmarks.cs"];
m3_46 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", span="113-113", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", file="DeserializeComparisonBenchmarks.cs"];
m3_47 [label="return DeserializeJsonNetManual(BenchmarkConstants.JsonText);", span="115-115", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", file="DeserializeComparisonBenchmarks.cs"];
m3_48 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", span="113-113", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", file="DeserializeComparisonBenchmarks.cs"];
m3_151 [label="Entry Unk.ReadAsDateTimeAsync", span="", cluster="Unk.ReadAsDateTimeAsync", file="DeserializeComparisonBenchmarks.cs"];
m3_11 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="DeserializeComparisonBenchmarks.cs"];
m3_91 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="451-451", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="DeserializeComparisonBenchmarks.cs"];
m3_90 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="460-460", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="DeserializeComparisonBenchmarks.cs"];
m3_12 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", span="61-61", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_13 [label="DataContractJsonSerializer dataContractSerializer = new DataContractJsonSerializer(typeof(T))", span="63-63", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_14 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(json))", span="64-64", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_15 [label="return (T)dataContractSerializer.ReadObject(ms);", span="66-66", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_16 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", span="61-61", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_42 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_106 [label="Entry Newtonsoft.Json.Tests.TestObjects.Address.Address()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Address.Address()", file="DeserializeComparisonBenchmarks.cs"];
m3_43 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", span="107-107", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", file="DeserializeComparisonBenchmarks.cs"];
m3_44 [label="return JsonConvert.DeserializeObject<TestClass>(BenchmarkConstants.JsonIsoText);", span="109-109", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", file="DeserializeComparisonBenchmarks.cs"];
m3_45 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", span="107-107", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", file="DeserializeComparisonBenchmarks.cs"];
m3_83 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DeserializeComparisonBenchmarks.cs"];
m3_148 [label="Entry Unk.GetValueOrDefault", span="", cluster="Unk.GetValueOrDefault", file="DeserializeComparisonBenchmarks.cs"];
m3_17 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="DeserializeComparisonBenchmarks.cs"];
m3_87 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="442-442", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="DeserializeComparisonBenchmarks.cs"];
m3_9 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_149 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DeserializeComparisonBenchmarks.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", span="48-48", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_1 [label="return DeserializeDataContract<TestClass>(BenchmarkConstants.XmlText);", span="50-50", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_2 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", span="48-48", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_21 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", span="75-75", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_22 [label="BinaryFormatter formatter = new BinaryFormatter()", span="77-77", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_23 [label="return (T)formatter.Deserialize(new MemoryStream(bytes));", span="78-78", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_24 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", span="75-75", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", file="DeserializeComparisonBenchmarks.cs"];
m3_10 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="DeserializeComparisonBenchmarks.cs"];
m3_175 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="850-850", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="DeserializeComparisonBenchmarks.cs"];
m3_147 [label="Entry Unk.ReadAsInt32Async", span="", cluster="Unk.ReadAsInt32Async", file="DeserializeComparisonBenchmarks.cs"];
m3_27 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", span="82-82", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_28 [label="return DeserializeWebExtensions<TestClass>(BenchmarkConstants.JsonText);", span="84-84", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_29 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", span="82-82", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", file="DeserializeComparisonBenchmarks.cs"];
m3_111 [label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", span="215-215", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="DeserializeComparisonBenchmarks.cs"];
m3_112 [label="return DeserializeJsonNetManualAsync(BenchmarkConstants.JsonIndentedText);", span="217-217", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="DeserializeComparisonBenchmarks.cs"];
m3_113 [label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", span="215-215", cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="DeserializeComparisonBenchmarks.cs"];
m3_146 [label="Entry Unk.ReadAsync", span="", cluster="Unk.ReadAsync", file="DeserializeComparisonBenchmarks.cs"];
m3_152 [label="Entry Unk.ReadAsDecimalAsync", span="", cluster="Unk.ReadAsDecimalAsync", file="DeserializeComparisonBenchmarks.cs"];
m3_176 [label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", span="", file="DeserializeComparisonBenchmarks.cs"];
m4_281 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", span="446-446", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_283 [label="schema.Items = new List<JsonSchema>\r\n            {\r\n                new JsonSchema { Type = JsonSchemaType.Object },\r\n                new JsonSchema { Type = JsonSchemaType.Integer }\r\n            }", span="449-453", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_288 [label="Assert.AreEqual(0, errorMessages.Count)", span="459-459", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_282 [label="JsonSchema schema = new JsonSchema()", span="448-448", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_284 [label="schema.PositionalItemsValidation = true", span="454-454", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_287 [label="Assert.IsTrue(a.IsValid(schema, out errorMessages))", span="458-458", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_285 [label="JArray a = new JArray(new JObject(), 1)", span="456-456", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_286 [label="IList<string> errorMessages", span="457-457", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_289 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", span="446-446", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs"];
m4_79 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", span="132-132", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs"];
m4_81 [label="JsonSchema schema = JsonSchema.Parse(schemaJson)", span="157-157", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs"];
m4_80 [label="string schemaJson = @''\r\n{\r\n  ''''description'''': ''''A person schema'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="134-147", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs"];
m4_82 [label="JObject person = JObject.Parse(@''{\r\n        ''''name'''': ''''James'''',\r\n        ''''hobbies'''': [''''.NET'''', ''''Blogging'''', ''''Reading'''', ''''Xbox'''', ''''LOLCATS'''']\r\n      }'')", span="159-162", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs"];
m4_83 [label="bool valid = person.IsValid(schema)", span="164-164", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs"];
m4_84 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", span="132-132", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs"];
m4_136 [label="Entry Newtonsoft.Json.Tests.TestObjects.CircularReferenceWithIdClass.CircularReferenceWithIdClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.CircularReferenceWithIdClass.CircularReferenceWithIdClass()", file="JsonTextReaderBenchmarks.cs"];
m4_18 [label="Entry Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", span="55-55", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", file="JsonTextReaderBenchmarks.cs"];
m4_19 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(FloatArrayJson))", span="57-57", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", color=green, community=0, file="JsonTextReaderBenchmarks.cs"];
m4_20 [label="jsonTextReader.Read()", span="59-59", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", color=green, community=0, file="JsonTextReaderBenchmarks.cs"];
m4_22 [label="Exit Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", span="55-55", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", file="JsonTextReaderBenchmarks.cs"];
m4_25 [label="stringToken.Validate(schema, (sender, args) => errors.Add(args.Message))", span="78-78", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", file="JsonTextReaderBenchmarks.cs"];
m4_21 [label="jsonTextReader.ReadAsDecimal() != null", span="61-61", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", file="JsonTextReaderBenchmarks.cs"];
m4_23 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderBenchmarks.cs"];
m4_24 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="1016-1016", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderBenchmarks.cs"];
m4_26 [label="Assert.AreEqual(1, errors.Count)", span="79-79", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", file="JsonTextReaderBenchmarks.cs"];
m4_27 [label="Assert.AreEqual(''String 'pie' does not match regex pattern 'lol'.'', errors[0])", span="81-81", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", file="JsonTextReaderBenchmarks.cs"];
m4_28 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", span="67-67", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", file="JsonTextReaderBenchmarks.cs"];
m4_102 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderBenchmarks.cs"];
m4_48 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", span="97-97", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs"];
m4_49 [label="JsonSchema schema = JsonSchema.Parse(''{'pattern':'lol'}'')", span="99-99", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs"];
m4_50 [label="JToken stringToken = JToken.FromObject(''pie lol'')", span="100-100", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs"];
m4_51 [label="stringToken.Validate(schema)", span="101-101", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs"];
m4_52 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", span="97-97", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs"];
m4_5 [label="Assert.AreEqual(true, integerToken.IsValid(schema))", span="56-56", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs"];
m4_157 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", span="237-237", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_158 [label="ExceptionAssert.Throws<JsonSchemaException>(''Integer 10 equals maximum value of 10 and exclusive maximum is true.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.Maximum = 10;\r\n                    schema.ExclusiveMaximum = true;\r\n\r\n                    JValue v = new JValue(10);\r\n                    v.Validate(schema);\r\n                })", span="239-248", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_159 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", span="237-237", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_290 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonTextReaderBenchmarks.cs"];
m4_169 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", span="252-252", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", file="JsonTextReaderBenchmarks.cs"];
m4_170 [label="ExceptionAssert.Throws<JsonSchemaException>(''Float 10.1 equals maximum value of 10.1 and exclusive maximum is true.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.Maximum = 10.1;\r\n                    schema.ExclusiveMaximum = true;\r\n\r\n                    JValue v = new JValue(10.1);\r\n                    v.Validate(schema);\r\n                })", span="254-263", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", file="JsonTextReaderBenchmarks.cs"];
m4_171 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", span="252-252", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", file="JsonTextReaderBenchmarks.cs"];
m4_145 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonTextReaderBenchmarks.cs"];
m4_221 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonTextReaderBenchmarks.cs"];
m4_133 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonTextReaderBenchmarks.cs"];
m4_41 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="198-198", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonTextReaderBenchmarks.cs"];
m4_17 [label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", span="60-60", cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", file="JsonTextReaderBenchmarks.cs"];
m4_29 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonTextReaderBenchmarks.cs"];
m4_99 [label="Entry Newtonsoft.Json.Schema.JsonSchema.ToString()", span="338-338", cluster="Newtonsoft.Json.Schema.JsonSchema.ToString()", file="JsonTextReaderBenchmarks.cs"];
m4_131 [label="Entry System.Version.Version(string)", span="0-0", cluster="System.Version.Version(string)", file="JsonTextReaderBenchmarks.cs"];
m4_75 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="404-404", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonTextReaderBenchmarks.cs"];
m4_3 [label="JToken integerToken = JToken.FromObject(1)", span="53-53", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs"];
m4_74 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1959-1959", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JsonTextReaderBenchmarks.cs"];
m4_105 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="JsonTextReaderBenchmarks.cs"];
m4_180 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", span="267-267", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_181 [label="ExceptionAssert.Throws<JsonSchemaException>(''Integer 10 equals minimum value of 10 and exclusive minimum is true.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.Minimum = 10;\r\n                    schema.ExclusiveMinimum = true;\r\n\r\n                    JValue v = new JValue(10);\r\n                    v.Validate(schema);\r\n                })", span="269-278", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_182 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", span="267-267", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_222 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonTextReaderBenchmarks.cs"];
m4_15 [label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", span="44-44", cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", file="JsonTextReaderBenchmarks.cs"];
m4_167 [label="Entry Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", span="252-252", cluster="Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", file="JsonTextReaderBenchmarks.cs"];
m4_190 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", span="282-282", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", file="JsonTextReaderBenchmarks.cs"];
m4_191 [label="ExceptionAssert.Throws<JsonSchemaException>(''Float 10.1 equals minimum value of 10.1 and exclusive minimum is true.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.Minimum = 10.1;\r\n                    schema.ExclusiveMinimum = true;\r\n\r\n                    JValue v = new JValue(10.1);\r\n                    v.Validate(schema);\r\n                })", span="284-293", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", file="JsonTextReaderBenchmarks.cs"];
m4_192 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", span="282-282", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", file="JsonTextReaderBenchmarks.cs"];
m4_132 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonTextReaderBenchmarks.cs"];
m4_61 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextReaderBenchmarks.cs"];
m4_139 [label="Entry Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", file="JsonTextReaderBenchmarks.cs"];
m4_247 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", span="360-360", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_250 [label="schema.Items = new List<JsonSchema>\r\n            {\r\n                new JsonSchema\r\n                {\r\n                    UniqueItems = true\r\n                }\r\n            }", span="364-370", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_255 [label="Assert.AreEqual(4, errorMessages.Count)", span="382-382", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_256 [label="Assert.AreEqual(''Non-unique array item at index 1.'', errorMessages[0])", span="383-383", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_257 [label="Assert.AreEqual(''Non-unique array item at index 3.'', errorMessages[1])", span="384-384", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_258 [label="Assert.AreEqual(''Non-unique array item at index 1.'', errorMessages[2])", span="385-385", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_259 [label="Assert.AreEqual(''Non-unique array item at index 4.'', errorMessages[3])", span="386-386", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_248 [label="JsonSchema schema = new JsonSchema()", span="362-362", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_249 [label="schema.UniqueItems = true", span="363-363", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_251 [label="schema.PositionalItemsValidation = false", span="371-371", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_254 [label="Assert.IsFalse(a.IsValid(schema, out errorMessages))", span="381-381", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_252 [label="JArray a = new JArray(\r\n                new JArray(1, 2),\r\n                new JArray(1, 1),\r\n                new JArray(3, 4),\r\n                new JArray(1, 2),\r\n                new JArray(1, 1)\r\n                )", span="373-379", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_253 [label="IList<string> errorMessages", span="380-380", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_260 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", span="360-360", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_233 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonTextReaderBenchmarks.cs"];
m4_200 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", span="297-297", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_201 [label="ExceptionAssert.Throws<JsonSchemaException>(''Integer 10 is not evenly divisible by 3.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.DivisibleBy = 3;\r\n\r\n                    JValue v = new JValue(10);\r\n                    v.Validate(schema);\r\n                })", span="299-307", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_202 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", span="297-297", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", file="JsonTextReaderBenchmarks.cs"];
m4_34 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextReaderBenchmarks.cs"];
m4_140 [label="Entry DataSet.cstr", span="", cluster="DataSet.cstr", file="JsonTextReaderBenchmarks.cs"];
m4_30 [label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", span="86-86", cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", file="JsonTextReaderBenchmarks.cs"];
m4_223 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", span="331-331", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_229 [label="Assert.AreEqual(2, errorMessages.Count)", span="339-339", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_230 [label="Assert.AreEqual(''Non-unique array item at index 3.'', errorMessages[0])", span="340-340", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_231 [label="Assert.AreEqual(''Non-unique array item at index 4.'', errorMessages[1])", span="341-341", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_228 [label="Assert.IsFalse(a.IsValid(schema, out errorMessages))", span="338-338", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_224 [label="JsonSchema schema = new JsonSchema()", span="333-333", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_226 [label="JArray a = new JArray(1, 2, 3, 2, 2)", span="336-336", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_227 [label="IList<string> errorMessages", span="337-337", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_225 [label="schema.UniqueItems = true", span="334-334", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_232 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", span="331-331", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_246 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonTextReaderBenchmarks.cs"];
m4_10 [label="Assert.AreEqual(1, errorMessages.Count)", span="62-62", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs"];
m4_11 [label="Assert.AreEqual(''Invalid type. Expected Integer but got String.'', errorMessages[0])", span="63-63", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs"];
m4_12 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", span="49-49", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs"];
m4_13 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="288-288", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="JsonTextReaderBenchmarks.cs"];
m4_14 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1668-1668", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JsonTextReaderBenchmarks.cs"];
m4_110 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", span="187-187", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_111 [label="GenerateSchemaAndSerializeFromType(new List<string> { ''1'', ''Two'', ''III'' })", span="189-189", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_112 [label="GenerateSchemaAndSerializeFromType(new List<int> { 1 })", span="190-190", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_113 [label="GenerateSchemaAndSerializeFromType(new Version(''1.2.3.4''))", span="191-191", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_114 [label="GenerateSchemaAndSerializeFromType(new Store())", span="192-192", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_115 [label="GenerateSchemaAndSerializeFromType(new Person())", span="193-193", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_116 [label="GenerateSchemaAndSerializeFromType(new PersonRaw())", span="194-194", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_117 [label="GenerateSchemaAndSerializeFromType(new CircularReferenceClass() { Name = ''I'm required'' })", span="195-195", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_118 [label="GenerateSchemaAndSerializeFromType(new CircularReferenceWithIdClass())", span="196-196", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_119 [label="GenerateSchemaAndSerializeFromType(new ClassWithArray())", span="197-197", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_120 [label="GenerateSchemaAndSerializeFromType(new ClassWithGuid())", span="198-198", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_121 [label="GenerateSchemaAndSerializeFromType(new NullableDateTimeTestClass())", span="200-200", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_122 [label="GenerateSchemaAndSerializeFromType(new DataSet())", span="203-203", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_123 [label="GenerateSchemaAndSerializeFromType(new object())", span="205-205", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_124 [label="GenerateSchemaAndSerializeFromType(1)", span="206-206", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_125 [label="GenerateSchemaAndSerializeFromType(''Hi'')", span="207-207", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_126 [label="GenerateSchemaAndSerializeFromType(new DateTime(2000, 12, 29, 23, 59, 0, DateTimeKind.Utc))", span="208-208", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_127 [label="GenerateSchemaAndSerializeFromType(TimeSpan.FromTicks(1000000))", span="209-209", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_128 [label="GenerateSchemaAndSerializeFromType(DBNull.Value)", span="211-211", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_129 [label="GenerateSchemaAndSerializeFromType(new JsonPropertyWithHandlingValues())", span="213-213", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_130 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", span="187-187", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs"];
m4_272 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonTextReaderBenchmarks.cs"];
m4_144 [label="Entry System.TimeSpan.FromTicks(long)", span="0-0", cluster="System.TimeSpan.FromTicks(long)", file="JsonTextReaderBenchmarks.cs"];
m4_16 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderBenchmarks.cs"];
m4_6 [label="Assert.AreEqual(true, integerToken.IsValid(schema, out errorMessages))", span="57-57", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs"];
m4_53 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", span="105-105", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs"];
m4_54 [label="JsonSchema schema = JsonSchema.Parse(''{'properties':{'lol':{'required':true}}}'')", span="107-107", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs"];
m4_55 [label="JObject o = JObject.Parse(''{}'')", span="108-108", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs"];
m4_57 [label="o.Validate(schema, (sender, args) => errors.Add(args.Message))", span="111-111", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs"];
m4_56 [label="List<string> errors = new List<string>()", span="110-110", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs"];
m4_58 [label="Assert.AreEqual(''Required properties are missing from object: lol.'', errors[0])", span="113-113", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs"];
m4_59 [label="Assert.AreEqual(1, errors.Count)", span="114-114", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs"];
m4_60 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", span="105-105", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs"];
m4_100 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="511-511", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonTextReaderBenchmarks.cs"];
m4_104 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonTextReaderBenchmarks.cs"];
m4_134 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonTextReaderBenchmarks.cs"];
m4_137 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonTextReaderBenchmarks.cs"];
m4_215 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", span="321-321", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs"];
m4_219 [label="Assert.IsTrue(a.IsValid(schema))", span="327-327", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs"];
m4_216 [label="JsonSchema schema = new JsonSchema()", span="323-323", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs"];
m4_218 [label="JArray a = new JArray(1, 2, 3)", span="326-326", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs"];
m4_217 [label="schema.UniqueItems = true", span="324-324", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs"];
m4_220 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", span="321-321", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs"];
m4_261 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", span="390-390", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_263 [label="schema.Properties = new Dictionary<string, JsonSchema>\r\n            {\r\n                {\r\n                    ''bar'',\r\n                    new JsonSchema\r\n                    {\r\n                        Enum = new List<JToken>\r\n                        {\r\n                            new JValue(1),\r\n                            new JValue(2)\r\n                        }\r\n                    }\r\n                }\r\n            }", span="393-406", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_267 [label="Assert.AreEqual(0, errorMessages.Count)", span="413-413", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_270 [label="Assert.AreEqual(1, errorMessages.Count)", span="419-419", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_262 [label="JsonSchema schema = new JsonSchema()", span="392-392", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_264 [label="JObject o = new JObject(\r\n                new JProperty(''bar'', 1)\r\n                )", span="408-410", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_266 [label="Assert.IsTrue(o.IsValid(schema, out errorMessages))", span="412-412", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_269 [label="Assert.IsFalse(o.IsValid(schema, out errorMessages))", span="418-418", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_268 [label="o = new JObject(\r\n                new JProperty(''bar'', 3)\r\n                )", span="415-417", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_265 [label="IList<string> errorMessages", span="411-411", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_271 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", span="390-390", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs"];
m4_97 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="44-44", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="JsonTextReaderBenchmarks.cs"];
m4_65 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", span="118-118", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_66 [label="JsonSchema schema = JsonSchema.Parse(''{'properties':{'lol':{'type':'string'}}}'')", span="120-120", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_67 [label="JObject o = JObject.Parse(''{'lol':1}'')", span="121-121", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_69 [label="o.Validate(schema, (sender, args) => errors.Add(args.Path + '' - '' + args.Message))", span="124-124", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_68 [label="List<string> errors = new List<string>()", span="123-123", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_71 [label="Assert.AreEqual(''1'', o.SelectToken(''lol'').ToString())", span="127-127", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_70 [label="Assert.AreEqual(''lol - Invalid type. Expected String but got Integer. Line 1, position 8.'', errors[0])", span="126-126", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_72 [label="Assert.AreEqual(1, errors.Count)", span="128-128", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_73 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", span="118-118", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", span="37-37", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", file="JsonTextReaderBenchmarks.cs"];
m4_1 [label="FloatArrayJson = new JArray(Enumerable.Range(0, 5000).Select(i => i * 1.1m)).ToString(Formatting.None)", span="39-39", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", file="JsonTextReaderBenchmarks.cs"];
m4_2 [label="Exit Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", span="37-37", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", file="JsonTextReaderBenchmarks.cs"];
m4_8 [label="i * 1.1m", span="39-39", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_9 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_4 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="JsonTextReaderBenchmarks.cs"];
m4_7 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_98 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="122-122", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="JsonTextReaderBenchmarks.cs"];
m4_234 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", span="345-345", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_240 [label="Assert.AreEqual(3, errorMessages.Count)", span="353-353", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_241 [label="Assert.AreEqual(''Non-unique array item at index 4.'', errorMessages[0])", span="354-354", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_242 [label="Assert.AreEqual(''Non-unique array item at index 6.'', errorMessages[1])", span="355-355", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_243 [label="Assert.AreEqual(''Non-unique array item at index 7.'', errorMessages[2])", span="356-356", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_239 [label="Assert.IsFalse(a.IsValid(schema, out errorMessages))", span="352-352", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_235 [label="JsonSchema schema = new JsonSchema()", span="347-347", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_237 [label="JArray a = new JArray(1, new JObject(new JProperty(''value'', ''value!'')), 3, 2, new JObject(new JProperty(''value'', ''value!'')), 4, 2, new JObject(new JProperty(''value'', ''value!'')))", span="350-350", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_238 [label="IList<string> errorMessages", span="351-351", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_236 [label="schema.UniqueItems = true", span="348-348", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_244 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", span="345-345", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs"];
m4_38 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", span="85-85", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", file="JsonTextReaderBenchmarks.cs"];
m4_39 [label="ExceptionAssert.Throws<JsonSchemaException>(@''String 'pie' does not match regex pattern 'lol'.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = JsonSchema.Parse(''{'pattern':'lol'}'');\r\n                    JToken stringToken = JToken.FromObject(''pie'');\r\n                    stringToken.Validate(schema);\r\n                })", span="87-93", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", file="JsonTextReaderBenchmarks.cs"];
m4_40 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", span="85-85", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", file="JsonTextReaderBenchmarks.cs"];
m4_142 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonTextReaderBenchmarks.cs"];
m4_85 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", span="168-168", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_93 [label="token.Validate(typeSchema, (sender, args) => { errors.Add(args.Message); })", span="180-180", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_92 [label="List<string> errors = new List<string>()", span="178-178", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_88 [label="JsonSchema typeSchema = generator.Generate(typeof(T))", span="172-172", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_91 [label="JToken token = JToken.ReadFrom(new JsonTextReader(new StringReader(json)))", span="176-176", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_94 [label="errors.Count > 0", span="182-182", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_95 [label="Assert.Fail(''Schema generated for type '{0}' is not valid.'' + Environment.NewLine + string.Join(Environment.NewLine, errors.ToArray()), typeof(T))", span="183-183", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_86 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="170-170", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_87 [label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseAssemblyQualifiedName", span="171-171", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_89 [label="string schema = typeSchema.ToString()", span="173-173", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_90 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="175-175", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_96 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", span="168-168", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs"];
m4_209 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", span="311-311", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs"];
m4_213 [label="v.Validate(schema)", span="317-317", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs"];
m4_210 [label="JsonSchema schema = new JsonSchema()", span="313-313", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs"];
m4_212 [label="JValue v = new JValue(20.49)", span="316-316", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs"];
m4_211 [label="schema.DivisibleBy = 0.01", span="314-314", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs"];
m4_214 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", span="311-311", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs"];
m4_106 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonTextReaderBenchmarks.cs"];
m4_47 [label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema)", span="75-75", cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema)", file="JsonTextReaderBenchmarks.cs"];
m4_135 [label="Entry Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", file="JsonTextReaderBenchmarks.cs"];
m4_138 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonTextReaderBenchmarks.cs"];
m4_143 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReaderBenchmarks.cs"];
m4_101 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderBenchmarks.cs"];
m4_245 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonTextReaderBenchmarks.cs"];
m4_203 [label="Entry lambda expression", span="300-307", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_43 [label="JsonSchema schema = JsonSchema.Parse(''{'pattern':'lol'}'')", span="90-90", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_31 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_35 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_32 [label="errors.Add(args.Message)", span="73-73", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_36 [label="errors.Add(args.Message)", span="78-78", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_44 [label="JToken stringToken = JToken.FromObject(''pie'')", span="91-91", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_42 [label="Entry lambda expression", span="88-93", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_45 [label="stringToken.Validate(schema)", span="92-92", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_33 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_37 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_46 [label="Exit lambda expression", span="88-93", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_62 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_76 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_154 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_107 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_63 [label="errors.Add(args.Message)", span="111-111", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_77 [label="errors.Add(args.Path + '' - '' + args.Message)", span="124-124", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_108 [label="errors.Add(args.Message)", span="180-180", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_155 [label="errors.Add(args.Message)", span="230-230", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_165 [label="v.Validate(schema)", span="247-247", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_177 [label="v.Validate(schema)", span="262-262", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_188 [label="v.Validate(schema)", span="277-277", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_198 [label="v.Validate(schema)", span="292-292", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_207 [label="v.Validate(schema)", span="306-306", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_64 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_78 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_156 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_109 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_161 [label="JsonSchema schema = new JsonSchema()", span="242-242", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_173 [label="JsonSchema schema = new JsonSchema()", span="257-257", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_184 [label="JsonSchema schema = new JsonSchema()", span="272-272", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_194 [label="JsonSchema schema = new JsonSchema()", span="287-287", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_204 [label="JsonSchema schema = new JsonSchema()", span="302-302", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_164 [label="JValue v = new JValue(10)", span="246-246", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_187 [label="JValue v = new JValue(10)", span="276-276", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_206 [label="JValue v = new JValue(10)", span="305-305", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_166 [label="Exit lambda expression", span="240-248", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_176 [label="JValue v = new JValue(10.1)", span="261-261", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_178 [label="Exit lambda expression", span="255-263", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_189 [label="Exit lambda expression", span="270-278", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_197 [label="JValue v = new JValue(10.1)", span="291-291", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_199 [label="Exit lambda expression", span="285-293", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_160 [label="Entry lambda expression", span="240-248", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_162 [label="schema.Maximum = 10", span="243-243", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_163 [label="schema.ExclusiveMaximum = true", span="244-244", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_172 [label="Entry lambda expression", span="255-263", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_174 [label="schema.Maximum = 10.1", span="258-258", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_175 [label="schema.ExclusiveMaximum = true", span="259-259", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_183 [label="Entry lambda expression", span="270-278", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_185 [label="schema.Minimum = 10", span="273-273", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_186 [label="schema.ExclusiveMinimum = true", span="274-274", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_193 [label="Entry lambda expression", span="285-293", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_195 [label="schema.Minimum = 10.1", span="288-288", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_196 [label="schema.ExclusiveMinimum = true", span="289-289", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_205 [label="schema.DivisibleBy = 3", span="303-303", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_208 [label="Exit lambda expression", span="300-307", cluster="lambda expression", file="JsonTextReaderBenchmarks.cs"];
m4_146 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", span="217-217", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs"];
m4_147 [label="JsonSchema schema = JsonSchema.Parse(@''{\r\n  ''''description'''': ''''test'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n  }\r\n}'')", span="219-225", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs"];
m4_148 [label="JObject o = JObject.Parse(''{'g':1}'')", span="227-227", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs"];
m4_150 [label="o.Validate(schema, (sender, args) => errors.Add(args.Message))", span="230-230", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs"];
m4_149 [label="List<string> errors = new List<string>()", span="229-229", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs"];
m4_151 [label="Assert.AreEqual(1, errors.Count)", span="232-232", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs"];
m4_152 [label="Assert.AreEqual(''Property 'g' has not been defined and the schema does not allow additional properties. Line 1, position 5.'', errors[0])", span="233-233", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs"];
m4_153 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", span="217-217", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs"];
m4_273 [label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", span="423-423", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs"];
m4_279 [label="Assert.AreEqual(1, errorMessages.Count)", span="442-442", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs"];
m4_278 [label="Assert.IsFalse(o.IsValid(schema, out errorMessages))", span="441-441", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs"];
m4_274 [label="JsonSchema schema = new JsonSchema()", span="425-425", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs"];
m4_275 [label="schema.Properties = new Dictionary<string, JsonSchema>\r\n            {\r\n                {\r\n                    ''bar'',\r\n                    new JsonSchema\r\n                    {\r\n                        UniqueItems = true\r\n                    }\r\n                }\r\n            }", span="426-435", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs"];
m4_276 [label="JObject o = new JObject(\r\n                new JProperty(''bar'', new JArray(1, 2, 3, 3))\r\n                )", span="437-439", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs"];
m4_277 [label="IList<string> errorMessages", span="440-440", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs"];
m4_280 [label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", span="423-423", cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs"];
m4_103 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1843-1843", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonTextReaderBenchmarks.cs"];
m4_179 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JsonTextReaderBenchmarks.cs"];
m4_141 [label="Entry Unk.GenerateSchemaAndSerializeFromType", span="", cluster="Unk.GenerateSchemaAndSerializeFromType", file="JsonTextReaderBenchmarks.cs"];
m4_168 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JsonTextReaderBenchmarks.cs"];
m4_291 [label=errors, span="", file="JsonTextReaderBenchmarks.cs"];
m4_295 [label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", span="", file="JsonTextReaderBenchmarks.cs"];
m4_292 [label=errors, span="", file="JsonTextReaderBenchmarks.cs"];
m4_293 [label=errors, span="", file="JsonTextReaderBenchmarks.cs"];
m4_294 [label=errors, span="", file="JsonTextReaderBenchmarks.cs"];
m4_296 [label=errors, span="", file="JsonTextReaderBenchmarks.cs"];
m5_9 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="437-437", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriterBenchmarks.cs"];
m5_8 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterBenchmarks.cs"];
m5_7 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonTextWriterBenchmarks.cs"];
m5_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", span="36-36", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs"];
m5_1 [label="StringWriter sw = new StringWriter()", span="38-38", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs"];
m5_2 [label="JsonTextWriter jsonTextWriter = new JsonTextWriter(sw)", span="39-39", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs"];
m5_5 [label="return sw.ToString();", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs"];
m5_3 [label="jsonTextWriter.WriteValue(UnicodeCharsString)", span="40-40", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs"];
m5_4 [label="jsonTextWriter.Flush()", span="41-41", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs"];
m5_6 [label="Exit Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", span="36-36", cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs"];
m5_10 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriterBenchmarks.cs"];
m5_11 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonTextWriterBenchmarks.cs"];
m6_125 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JTokenBenchmarks.cs"];
m6_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="JTokenBenchmarks.cs"];
m6_159 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", span="447-447", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_160 [label="string json = @''{\r\n  ''''Customers'''': [\r\n    {\r\n      ''''CustomerID'''': ''''234''''\r\n    }\r\n  ]\r\n}''", span="449-455", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_161 [label="var ds = JsonConvert.DeserializeObject<CustomerDataSet>(json)", span="457-457", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_162 [label="Assert.AreEqual(''234'', ds.Customers[0].CustomerID)", span="459-459", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_163 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", span="447-447", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_59 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="773-773", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JTokenBenchmarks.cs"];
m6_44 [label="Entry Unk.AcceptChanges", span="", cluster="Unk.AcceptChanges", file="JTokenBenchmarks.cs"];
m6_157 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JTokenBenchmarks.cs"];
m6_48 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="106-106", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_49 [label="DataSet ds = new DataSet()", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_50 [label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="109-109", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_51 [label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="110-110", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_52 [label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented, new IsoDateTimeConverter())", span="112-112", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_53 [label="DataSet deserializedDs = JsonConvert.DeserializeObject<DataSet>(json, new IsoDateTimeConverter())", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_54 [label="Assert.AreEqual(@''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}'', json)", span="146-175", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_55 [label="Assert.IsNotNull(deserializedDs)", span="177-177", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_56 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="106-106", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_58 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JTokenBenchmarks.cs"];
m6_127 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", span="332-332", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_128 [label="DataSet ds = new DataSet()", span="334-334", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_129 [label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="335-335", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_130 [label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="336-336", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_131 [label="DataSetAndTableTestClass c = new DataSetAndTableTestClass\r\n            {\r\n                Before = ''Before'',\r\n                Set = ds,\r\n                Middle = ''Middle'',\r\n                Table = CreateDataTable(''LoneTable'', 2),\r\n                After = ''After''\r\n            }", span="338-345", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_132 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new IsoDateTimeConverter())", span="347-347", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_135 [label="Assert.AreEqual(c.Before, c2.Before)", span="405-405", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_136 [label="Assert.AreEqual(c.Set.Tables.Count, c2.Set.Tables.Count)", span="406-406", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_137 [label="Assert.AreEqual(c.Middle, c2.Middle)", span="407-407", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_138 [label="Assert.AreEqual(c.Table.Rows.Count, c2.Table.Rows.Count)", span="408-408", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_139 [label="Assert.AreEqual(c.After, c2.After)", span="409-409", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_133 [label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before'''',\r\n  ''''Set'''': {\r\n    ''''FirstTable'''': [\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      },\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 2,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      }\r\n    ],\r\n    ''''SecondTable'''': [\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      }\r\n    ]\r\n  },\r\n  ''''Middle'''': ''''Middle'''',\r\n  ''''Table'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''After'''': ''''After''''\r\n}'', json)", span="349-401", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_134 [label="DataSetAndTableTestClass c2 = JsonConvert.DeserializeObject<DataSetAndTableTestClass>(json, new IsoDateTimeConverter())", span="403-403", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_140 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", span="332-332", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs"];
m6_60 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="181-181", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_61 [label="string json = @''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}''", span="183-204", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_62 [label="DataSet ds = JsonConvert.DeserializeObject<DataSet>(json)", span="206-206", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_63 [label="Assert.IsNotNull(ds)", span="207-207", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_64 [label="Assert.AreEqual(2, ds.Tables.Count)", span="209-209", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_65 [label="Assert.AreEqual(''FirstTable'', ds.Tables[0].TableName)", span="210-210", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_66 [label="Assert.AreEqual(''SecondTable'', ds.Tables[1].TableName)", span="211-211", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_67 [label="DataTable dt = ds.Tables[0]", span="213-213", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_80 [label="Assert.AreEqual(1, ds.Tables[0].Rows.Count)", span="227-227", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_81 [label="Assert.AreEqual(1, ds.Tables[1].Rows.Count)", span="228-228", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_68 [label="Assert.AreEqual(''StringCol'', dt.Columns[0].ColumnName)", span="214-214", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_69 [label="Assert.AreEqual(typeof(string), dt.Columns[0].DataType)", span="215-215", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_70 [label="Assert.AreEqual(''Int32Col'', dt.Columns[1].ColumnName)", span="216-216", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_71 [label="Assert.AreEqual(typeof(long), dt.Columns[1].DataType)", span="217-217", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_72 [label="Assert.AreEqual(''BooleanCol'', dt.Columns[2].ColumnName)", span="218-218", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_73 [label="Assert.AreEqual(typeof(bool), dt.Columns[2].DataType)", span="219-219", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_74 [label="Assert.AreEqual(''TimeSpanCol'', dt.Columns[3].ColumnName)", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_75 [label="Assert.AreEqual(typeof(string), dt.Columns[3].DataType)", span="221-221", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_76 [label="Assert.AreEqual(''DateTimeCol'', dt.Columns[4].ColumnName)", span="222-222", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_77 [label="Assert.AreEqual(typeof(DateTime), dt.Columns[4].DataType)", span="223-223", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_78 [label="Assert.AreEqual(''DecimalCol'', dt.Columns[5].ColumnName)", span="224-224", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_79 [label="Assert.AreEqual(typeof(double), dt.Columns[5].DataType)", span="225-225", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_82 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="181-181", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs"];
m6_41 [label="Entry DataColumn.cstr", span="", cluster="DataColumn.cstr", file="JTokenBenchmarks.cs"];
m6_43 [label="Entry Unk.NewRow", span="", cluster="Unk.NewRow", file="JTokenBenchmarks.cs"];
m6_45 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JTokenBenchmarks.cs"];
m6_141 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DataSetAndTableTestClass.DataSetAndTableTestClass()", span="278-278", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DataSetAndTableTestClass.DataSetAndTableTestClass()", file="JTokenBenchmarks.cs"];
m6_143 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", span="413-413", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_144 [label="CustomerDataSet ds = new CustomerDataSet()", span="415-415", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_145 [label="ds.Customers.AddCustomersRow(''234'')", span="416-416", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_146 [label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented)", span="418-418", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_147 [label="Assert.AreEqual(@''{\r\n  ''''Customers'''': [\r\n    {\r\n      ''''CustomerID'''': ''''234''''\r\n    }\r\n  ]\r\n}'', json)", span="420-426", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_148 [label="CustomerDataSet ds1 = new CustomerDataSet()", span="428-428", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_149 [label="DataTable table = ds1.Tables[''Customers'']", span="429-429", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_150 [label="DataRow row = ds1.Tables[''Customers''].NewRow()", span="430-430", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_153 [label="string json1 = JsonConvert.SerializeObject(ds1, Formatting.Indented)", span="435-435", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_152 [label="table.Rows.Add(row)", span="433-433", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_151 [label="row[''CustomerID''] = ''234''", span="431-431", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_154 [label="Assert.AreEqual(@''{\r\n  ''''Customers'''': [\r\n    {\r\n      ''''CustomerID'''': ''''234''''\r\n    }\r\n  ]\r\n}'', json1)", span="437-443", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_155 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", span="413-413", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs"];
m6_142 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="538-538", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JTokenBenchmarks.cs"];
m6_118 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", span="288-288", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs"];
m6_119 [label="DataSet ds = new DataSet()", span="290-290", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs"];
m6_120 [label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="291-291", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs"];
m6_121 [label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="292-292", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs"];
m6_122 [label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="294-297", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs"];
m6_123 [label="Assert.AreEqual(@''{\r\n  ''''firstTable'''': [\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 1,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''decimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 2,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''decimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''secondTable'''': [\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 1,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''decimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}'', json)", span="299-328", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs"];
m6_124 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", span="288-288", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs"];
m6_126 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JTokenBenchmarks.cs"];
m6_39 [label="Entry DataSet.cstr", span="", cluster="DataSet.cstr", file="JTokenBenchmarks.cs"];
m6_8 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", span="51-51", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_9 [label="DataSet dataSet = new DataSet(''dataSet'')", span="53-53", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_10 [label="dataSet.Namespace = ''NetFrameWork''", span="54-54", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_11 [label="DataTable table = new DataTable()", span="55-55", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_17 [label="dataSet.Tables.Add(table)", span="62-62", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_24 [label="dataSet.AcceptChanges()", span="71-71", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_25 [label="string json = JsonConvert.SerializeObject(dataSet, Formatting.Indented)", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_12 [label="DataColumn idColumn = new DataColumn(''id'', typeof(int))", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_15 [label="table.Columns.Add(idColumn)", span="60-60", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_16 [label="table.Columns.Add(itemColumn)", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_20 [label="DataRow newRow = table.NewRow()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_22 [label="table.Rows.Add(newRow)", span="68-68", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_13 [label="idColumn.AutoIncrement = true", span="57-57", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_14 [label="DataColumn itemColumn = new DataColumn(''item'')", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_18 [label="int i = 0", span="64-64", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_19 [label="i < 2", span="64-64", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_21 [label="newRow[''item''] = ''item '' + i", span="67-67", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_23 [label="i++", span="64-64", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_26 [label="Assert.AreEqual(@''{\r\n  ''''Table1'''': [\r\n    {\r\n      ''''id'''': 0,\r\n      ''''item'''': ''''item 0''''\r\n    },\r\n    {\r\n      ''''id'''': 1,\r\n      ''''item'''': ''''item 1''''\r\n    }\r\n  ]\r\n}'', json)", span="75-86", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_27 [label="DataSet deserializedDataSet = JsonConvert.DeserializeObject<DataSet>(json)", span="88-88", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_28 [label="Assert.IsNotNull(deserializedDataSet)", span="89-89", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_29 [label="Assert.AreEqual(1, deserializedDataSet.Tables.Count)", span="91-91", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_30 [label="DataTable dt = deserializedDataSet.Tables[0]", span="93-93", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_31 [label="Assert.AreEqual(''Table1'', dt.TableName)", span="95-95", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_32 [label="Assert.AreEqual(2, dt.Columns.Count)", span="96-96", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", color=red, community=0, file="JTokenBenchmarks.cs"];
m6_33 [label="Assert.AreEqual(''id'', dt.Columns[0].ColumnName)", span="97-97", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_34 [label="Assert.AreEqual(typeof(long), dt.Columns[0].DataType)", span="98-98", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", color=green, community=0];
m6_35 [label="Assert.AreEqual(''item'', dt.Columns[1].ColumnName)", span="99-99", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", color=green, community=0];
m6_36 [label="Assert.AreEqual(typeof(string), dt.Columns[1].DataType)", span="100-100", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", color=green, community=0];
m6_37 [label="Assert.AreEqual(2, dt.Rows.Count)", span="102-102", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_38 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", span="51-51", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs"];
m6_46 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JTokenBenchmarks.cs"];
m6_156 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="JTokenBenchmarks.cs"];
m6_158 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="511-511", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JTokenBenchmarks.cs"];
m6_7 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="725-725", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JTokenBenchmarks.cs"];
m6_47 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JTokenBenchmarks.cs"];
m6_40 [label="Entry DataTable.cstr", span="", cluster="DataTable.cstr", file="JTokenBenchmarks.cs"];
m6_116 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JTokenBenchmarks.cs"];
m6_117 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenBenchmarks.cs"];
m6_4 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="JTokenBenchmarks.cs"];
m6_5 [label="JsonConvert.DeserializeObject<DataSet>(''{\''pending_count\'':23,\''completed_count\'':45}'')", span="47-47", cluster="lambda expression", file="JTokenBenchmarks.cs"];
m6_6 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="JTokenBenchmarks.cs"];
m6_42 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JTokenBenchmarks.cs"];
m6_57 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", span="231-231", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_83 [label="DataTable myTable = new DataTable(dataTableName)", span="234-234", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_104 [label="i <= rows", span="262-262", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_84 [label="DataColumn colString = new DataColumn(''StringCol'')", span="237-237", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_86 [label="myTable.Columns.Add(colString)", span="239-239", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_89 [label="myTable.Columns.Add(colInt32)", span="243-243", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_92 [label="myTable.Columns.Add(colBoolean)", span="247-247", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_95 [label="myTable.Columns.Add(colTimeSpan)", span="251-251", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_99 [label="myTable.Columns.Add(colDateTime)", span="256-256", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_102 [label="myTable.Columns.Add(colDecimal)", span="260-260", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_105 [label="DataRow myNewRow = myTable.NewRow()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_112 [label="myTable.Rows.Add(myNewRow)", span="272-272", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_114 [label="return myTable;", span="275-275", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_85 [label="colString.DataType = typeof(string)", span="238-238", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_87 [label="DataColumn colInt32 = new DataColumn(''Int32Col'')", span="241-241", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_88 [label="colInt32.DataType = typeof(int)", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_90 [label="DataColumn colBoolean = new DataColumn(''BooleanCol'')", span="245-245", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_91 [label="colBoolean.DataType = typeof(bool)", span="246-246", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_93 [label="DataColumn colTimeSpan = new DataColumn(''TimeSpanCol'')", span="249-249", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_94 [label="colTimeSpan.DataType = typeof(TimeSpan)", span="250-250", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_96 [label="DataColumn colDateTime = new DataColumn(''DateTimeCol'')", span="253-253", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_97 [label="colDateTime.DataType = typeof(DateTime)", span="254-254", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_98 [label="colDateTime.DateTimeMode = DataSetDateTime.Utc", span="255-255", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_100 [label="DataColumn colDecimal = new DataColumn(''DecimalCol'')", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_101 [label="colDecimal.DataType = typeof(decimal)", span="259-259", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_103 [label="int i = 1", span="262-262", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_107 [label="myNewRow[''Int32Col''] = i", span="267-267", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_113 [label="i++", span="262-262", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_106 [label="myNewRow[''StringCol''] = ''Item Name''", span="266-266", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_108 [label="myNewRow[''BooleanCol''] = true", span="268-268", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_109 [label="myNewRow[''TimeSpanCol''] = new TimeSpan(10, 22, 10, 15, 100)", span="269-269", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_110 [label="myNewRow[''DateTimeCol''] = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc)", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_111 [label="myNewRow[''DecimalCol''] = 64.0021", span="271-271", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_115 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", span="231-231", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", span="44-44", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", file="JTokenBenchmarks.cs"];
m6_1 [label="ExceptionAssert.Throws<JsonException>(''Unexpected JSON token when reading DataTable. Expected StartArray, got Integer. Path 'pending_count', line 1, position 19.'',\r\n                () => JsonConvert.DeserializeObject<DataSet>(''{\''pending_count\'':23,\''completed_count\'':45}''))", span="46-47", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", file="JTokenBenchmarks.cs"];
m6_2 [label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", span="44-44", cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", file="JTokenBenchmarks.cs"];
m6_164 [label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", span="", file="JTokenBenchmarks.cs"];
m7_4 [label="Entry Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", span="46-46", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", file="JValueConvertBenchmarks.cs"];
m7_5 [label="return (string)StringJValue.ToObject(typeof(string), new JsonSerializer());", span="48-48", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", file="JValueConvertBenchmarks.cs"];
m7_6 [label="Exit Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", span="46-46", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", file="JValueConvertBenchmarks.cs"];
m7_3 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1942-1942", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JValueConvertBenchmarks.cs"];
m7_9 [label="Entry Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", span="52-52", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", file="JValueConvertBenchmarks.cs"];
m7_10 [label="return StringJValue.Value<string>();", span="54-54", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", file="JValueConvertBenchmarks.cs"];
m7_11 [label="Exit Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", span="52-52", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", file="JValueConvertBenchmarks.cs"];
m7_13 [label="Entry Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", span="58-58", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", file="JValueConvertBenchmarks.cs"];
m7_14 [label="return (string)StringJValue;", span="60-60", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", file="JValueConvertBenchmarks.cs"];
m7_15 [label="Exit Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", span="58-58", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", file="JValueConvertBenchmarks.cs"];
m7_7 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JValueConvertBenchmarks.cs"];
m7_12 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="157-157", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="JValueConvertBenchmarks.cs"];
m7_8 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="2077-2077", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JValueConvertBenchmarks.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", span="40-40", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", file="JValueConvertBenchmarks.cs"];
m7_1 [label="return (string)StringJValue.ToObject(typeof(string));", span="42-42", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", file="JValueConvertBenchmarks.cs"];
m7_2 [label="Exit Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", span="40-40", cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", file="JValueConvertBenchmarks.cs"];
m8_17 [label="Entry Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", span="67-67", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", file="LargeJArrayBenchmarks.cs"];
m8_18 [label="_largeJArraySample.Add(1)", span="69-69", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", file="LargeJArrayBenchmarks.cs"];
m8_19 [label="_largeJArraySample.RemoveAt(_largeJArraySample.Count - 1)", span="70-70", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", file="LargeJArrayBenchmarks.cs"];
m8_20 [label="Exit Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", span="67-67", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", file="LargeJArrayBenchmarks.cs"];
m8_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", span="41-41", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs"];
m8_1 [label="_largeJArraySample = new JArray()", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs"];
m8_2 [label="int i = 0", span="44-44", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs"];
m8_3 [label="i < 100000", span="44-44", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs"];
m8_4 [label="_largeJArraySample.Add(i)", span="46-46", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs"];
m8_5 [label="i++", span="44-44", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs"];
m8_6 [label="Exit Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", span="41-41", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs"];
m8_7 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="LargeJArrayBenchmarks.cs"];
m8_8 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="345-345", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="LargeJArrayBenchmarks.cs"];
m8_13 [label="Entry Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", span="59-59", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", file="LargeJArrayBenchmarks.cs"];
m8_14 [label="JToken last = _largeJArraySample.Last", span="61-61", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", file="LargeJArrayBenchmarks.cs"];
m8_15 [label="return last.Path;", span="63-63", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", file="LargeJArrayBenchmarks.cs"];
m8_16 [label="Exit Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", span="59-59", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", file="LargeJArrayBenchmarks.cs"];
m8_21 [label="Entry Newtonsoft.Json.Linq.JArray.RemoveAt(int)", span="323-323", cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="LargeJArrayBenchmarks.cs"];
m8_9 [label="Entry Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", span="51-51", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", file="LargeJArrayBenchmarks.cs"];
m8_10 [label="JToken first = _largeJArraySample.First", span="53-53", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", file="LargeJArrayBenchmarks.cs"];
m8_11 [label="return first.Path;", span="55-55", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", file="LargeJArrayBenchmarks.cs"];
m8_12 [label="Exit Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", span="51-51", cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", file="LargeJArrayBenchmarks.cs"];
m8_22 [label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks", span="", file="LargeJArrayBenchmarks.cs"];
m9_5 [label="Entry Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", span="50-50", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", file="LowLevelBenchmarks.cs"];
m9_6 [label="decimal value", span="52-52", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", file="LowLevelBenchmarks.cs"];
m9_7 [label="ConvertUtils.DecimalTryParse(FloatChars, 0, FloatChars.Length, out value)", span="53-53", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", file="LowLevelBenchmarks.cs"];
m9_8 [label="Exit Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", span="50-50", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", file="LowLevelBenchmarks.cs"];
m9_9 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.DecimalTryParse(char[], int, int, out decimal)", span="1361-1361", cluster="Newtonsoft.Json.Utilities.ConvertUtils.DecimalTryParse(char[], int, int, out decimal)", file="LowLevelBenchmarks.cs"];
m9_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", file="LowLevelBenchmarks.cs"];
m9_1 [label="decimal value", span="45-45", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", file="LowLevelBenchmarks.cs"];
m9_2 [label="decimal.TryParse(FloatText, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="46-46", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", file="LowLevelBenchmarks.cs"];
m9_3 [label="Exit Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", file="LowLevelBenchmarks.cs"];
m9_16 [label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="106-106", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="LowLevelBenchmarks.cs"];
m9_4 [label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0", cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="LowLevelBenchmarks.cs"];
m9_17 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="143-143", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="LowLevelBenchmarks.cs"];
m9_10 [label="Entry Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", span="57-57", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs"];
m9_11 [label="string text = @''The general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n\r\nThe general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n\r\nThe general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n''", span="59-79", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs"];
m9_12 [label="StringWriter w = StringUtils.CreateStringWriter(text.Length)", span="81-81", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs"];
m9_14 [label="JavaScriptUtils.WriteEscapedJavaScriptString(w, text, '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, null, ref buffer)", span="84-84", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs"];
m9_13 [label="char[] buffer = null", span="83-83", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs"];
m9_15 [label="Exit Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", span="57-57", cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs"];
m10_3 [label="Entry BenchmarkSwitcher.cstr", span="", cluster="BenchmarkSwitcher.cstr", file="Runner.cs"];
m10_5 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="Runner.cs"];
m10_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", span="48-48", cluster="Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", file="Runner.cs"];
m10_1 [label="new BenchmarkSwitcher(typeof(Runner).GetTypeInfo().Assembly).Run(new []{ ''*'' })", span="50-50", cluster="Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", file="Runner.cs"];
m10_2 [label="Exit Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", span="48-48", cluster="Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", file="Runner.cs"];
m10_4 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="Runner.cs"];
m11_14 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="999-999", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="SerializeBenchmarks.cs"];
m11_6 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", span="51-51", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs"];
m11_7 [label="StreamWriter file = System.IO.File.CreateText(''largewrite.json'')", span="53-53", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs"];
m11_8 [label="JsonSerializer serializer = new JsonSerializer()", span="55-55", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs"];
m11_10 [label="serializer.Serialize(file, LargeCollection)", span="57-57", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs"];
m11_9 [label="serializer.Formatting = Formatting.Indented", span="56-56", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs"];
m11_11 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", span="51-51", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs"];
m11_13 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="SerializeBenchmarks.cs"];
m11_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", file="SerializeBenchmarks.cs"];
m11_1 [label="string json = System.IO.File.ReadAllText(''large.json'')", span="45-45", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", file="SerializeBenchmarks.cs"];
m11_2 [label="LargeCollection = JsonConvert.DeserializeObject<IList<RootObject>>(json)", span="47-47", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", file="SerializeBenchmarks.cs"];
m11_3 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", file="SerializeBenchmarks.cs"];
m11_5 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="SerializeBenchmarks.cs"];
m11_4 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="SerializeBenchmarks.cs"];
m11_12 [label="Entry System.IO.File.CreateText(string)", span="0-0", cluster="System.IO.File.CreateText(string)", file="SerializeBenchmarks.cs"];
m12_616 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs"];
m12_620 [label="Assert.AreEqual(1UL, item.WantedUnitID)", span="1767-1767", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs"];
m12_618 [label="GroupingInfo g = JsonConvert.DeserializeObject<GroupingInfo>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="1761-1764", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs"];
m12_619 [label="ReportItemKeys item = (ReportItemKeys)g.ItemIdentifier", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs"];
m12_617 [label="string json = @''{\r\n    ''''itemIdentifier'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.ReportItemKeys, Newtonsoft.Json.Tests'''',\r\n        ''''dataType'''': 0,\r\n        ''''wantedUnitID'''': 1,\r\n        ''''application'''': 3,\r\n        ''''id'''': 101,\r\n        ''''name'''': ''''Machine''''\r\n    },\r\n    ''''isBusinessEntity'''': false,\r\n    ''''isKeyItem'''': true,\r\n    ''''summarizeOnThisItem'''': false\r\n}''", span="1747-1759", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs"];
m12_621 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs"];
m12_318 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="SerializeComparisonBenchmarks.cs"];
m12_319 [label="return new CustomEnumerable<T>(newVal, this);", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="SerializeComparisonBenchmarks.cs"];
m12_320 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="SerializeComparisonBenchmarks.cs"];
m12_55 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="SerializeComparisonBenchmarks.cs"];
m12_206 [label="await writer.WritePropertyNameAsync(''Phone'')", span="297-297", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_219 [label="CustomAssert.IsInstanceOfType(typeof(Purchase), newValues[1])", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="SerializeComparisonBenchmarks.cs"];
m12_25 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractSerializer()", span="73-73", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractSerializer()", file="SerializeComparisonBenchmarks.cs"];
m12_56 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="SerializeComparisonBenchmarks.cs"];
m12_57 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="153-153", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="SerializeComparisonBenchmarks.cs"];
m12_58 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="SerializeComparisonBenchmarks.cs"];
m12_567 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_400 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", span="1950-1950", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", file="SerializeComparisonBenchmarks.cs"];
m12_183 [label="await writer.WriteValueAsync(keyValuePair.Value)", span="272-272", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_187 [label="await writer.WritePropertyNameAsync(''Now'')", span="277-277", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_189 [label="await writer.WritePropertyNameAsync(''BigNumber'')", span="279-279", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_192 [label="await writer.WriteStartObjectAsync()", span="282-282", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_193 [label="await writer.WritePropertyNameAsync(''Street'')", span="283-283", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_194 [label="await writer.WriteValueAsync(c.BigNumber)", span="284-284", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_195 [label="await writer.WritePropertyNameAsync(''Street'')", span="285-285", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_196 [label="await writer.WriteValueAsync(c.BigNumber)", span="286-286", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_197 [label="await writer.WritePropertyNameAsync(''Street'')", span="287-287", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_184 [label="await writer.WriteEndObjectAsync()", span="274-274", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_186 [label="await writer.WriteValueAsync(c.Name)", span="276-276", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_188 [label="await writer.WriteValueAsync(c.Now)", span="278-278", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_190 [label="await writer.WriteValueAsync(c.BigNumber)", span="280-280", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_191 [label="await writer.WritePropertyNameAsync(''Address1'')", span="281-281", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_185 [label="await writer.WritePropertyNameAsync(''Name'')", span="275-275", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_198 [label="await writer.WriteValueAsync(c.BigNumber)", span="288-288", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_152 [label="string json = @''{\r\n''''$type'''': '''''' + typeName + @'''''',\r\n''''RequestData'''': {\r\n''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib,Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n''''Id'''': ''''siedemnaście'''',\r\n''''X'''': ''''323''''\r\n},\r\n''''Method'''': ''''GET'''',\r\n''''Url'''': ''''http://www.onet.pl'''',\r\n''''RequestEncoding'''': ''''UTF-8'''',\r\n''''CorrelationId'''': ''''xyz''''\r\n}''", span="480-491", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_104 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", span="185-185", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_279 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs"];
m12_284 [label="Message deserialized = JsonConvert.DeserializeObject<Message>(json)", span="839-839", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs"];
m12_283 [label="string json = JsonConvert.SerializeObject(message, Formatting.Indented)", span="829-829", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs"];
m12_280 [label="Message message = new Message()", span="821-821", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs"];
m12_285 [label="SearchDetails searchDetails = (SearchDetails)deserialized.Body", span="841-841", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs"];
m12_282 [label="message.Body = new SearchDetails\r\n            {\r\n                Query = ''Json.NET'',\r\n                Language = ''en-us''\r\n            }", span="823-827", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs"];
m12_281 [label="message.Address = ''http://www.google.com''", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs"];
m12_286 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs"];
m12_653 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_656 [label="ReferenceEquals(this, obj)", span="1894-1894", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_659 [label="return Name.Equals(((IExample)obj).Name);", span="1897-1897", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_654 [label="obj == null", span="1893-1893", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_657 [label="return true;", span="1894-1894", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_658 [label="obj is IExample", span="1895-1895", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_655 [label="return false;", span="1893-1893", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_660 [label="return false;", span="1901-1901", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_661 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs"];
m12_580 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_584 [label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChildList, Newtonsoft.Json.Tests'''',\r\n    ''''$values'''': [\r\n      ''''string!''''\r\n    ]\r\n  }\r\n}'', json)", span="1659-1666", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_587 [label="Assert.AreEqual(1, ((MyChildList)p2.Child).Count)", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_588 [label="Assert.AreEqual(''string!'', ((MyChildList)p2.Child)[0])", span="1671-1671", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_582 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1647-1655", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_583 [label="string json = JsonConvert.SerializeObject(p, settings)", span="1657-1657", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_585 [label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1668-1668", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_586 [label="CustomAssert.IsInstanceOfType(typeof(MyChildList), p2.Child)", span="1669-1669", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_581 [label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChildList\r\n                {\r\n                    ''string!''\r\n                }\r\n            }", span="1639-1645", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_589 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_17 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", span="46-46", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs"];
m12_23 [label="Entry Newtonsoft.Json.Tests.TestObjects.Address.Address()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Address.Address()", color=green, community=0, file="SerializeComparisonBenchmarks.cs"];
m12_18 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestClass.TestClass()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.TestClass.TestClass()", file="SerializeComparisonBenchmarks.cs"];
m12_20 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SerializeComparisonBenchmarks.cs"];
m12_19 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_21 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SerializeComparisonBenchmarks.cs"];
m12_22 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SerializeComparisonBenchmarks.cs"];
m12_24 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SerializeComparisonBenchmarks.cs"];
m12_627 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1793-1793", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_628 [label="info.AddValue(''c'', Child)", span="1795-1795", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_629 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1793-1793", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_351 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", file="SerializeComparisonBenchmarks.cs"];
m12_288 [label="Entry Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", span="1822-1822", cluster="Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", file="SerializeComparisonBenchmarks.cs"];
m12_289 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_293 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n  ''''First'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 404,\r\n    ''''Url'''': ''''http://www.bing.com''''\r\n  },\r\n  ''''Second'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 400,\r\n    ''''Url'''': ''''http://www.google.com''''\r\n  },\r\n  ''''List'''': {\r\n    ''''$type'''': ''''System.Collections.Generic.List`1[['' + urlStatusTypeName + @'']], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 300,\r\n        ''''Url'''': ''''http://www.yahoo.com''''\r\n      },\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 200,\r\n        ''''Url'''': ''''http://www.askjeeves.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json)", span="876-903", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_297 [label="Assert.AreEqual(3, newCollection.Count)", span="914-914", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_298 [label="Assert.AreEqual(@''http://www.bing.com'', ((UrlStatus)newCollection[''First'']).Url)", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_300 [label="Assert.AreEqual(2, statues.Count)", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_291 [label="string json = JsonConvert.SerializeObject(collection, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n            })", span="868-872", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_294 [label="object c = JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n            })", span="905-909", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_290 [label="Dictionary<string, object> collection = new Dictionary<string, object>()\r\n            {\r\n                { ''First'', new UrlStatus { Status = 404, Url = @''http://www.bing.com'' } },\r\n                { ''Second'', new UrlStatus { Status = 400, Url = @''http://www.google.com'' } },\r\n                {\r\n                    ''List'', new List<UrlStatus>\r\n                    {\r\n                        new UrlStatus { Status = 300, Url = @''http://www.yahoo.com'' },\r\n                        new UrlStatus { Status = 200, Url = @''http://www.askjeeves.com'' }\r\n                    }\r\n                }\r\n            }", span="855-866", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_292 [label="string urlStatusTypeName = ReflectionUtils.GetTypeName(typeof(UrlStatus), FormatterAssemblyStyle.Simple, null)", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_296 [label="Dictionary<string, object> newCollection = (Dictionary<string, object>)c", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_299 [label="List<UrlStatus> statues = (List<UrlStatus>)newCollection[''List'']", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_295 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c)", span="911-911", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_301 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs"];
m12_274 [label="Entry Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", file="SerializeComparisonBenchmarks.cs"];
m12_82 [label="return SerializeJsonNetLinq(TestClass);", span="151-151", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetLinq()", file="SerializeComparisonBenchmarks.cs"];
m12_569 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1602-1602", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_573 [label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n    ''''p'''': ''''string!''''\r\n  }\r\n}'', json)", span="1624-1629", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_576 [label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1633-1633", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_571 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1612-1620", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_572 [label="string json = JsonConvert.SerializeObject(p, settings)", span="1622-1622", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_574 [label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1631-1631", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_575 [label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1632-1632", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_570 [label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1604-1610", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_577 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1602-1602", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_52 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="SerializeComparisonBenchmarks.cs"];
m12_361 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", span="1841-1841", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", file="SerializeComparisonBenchmarks.cs"];
m12_454 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="SerializeComparisonBenchmarks.cs"];
m12_42 [label="serializer.Serialize(new JsonTextWriter(sw) { Formatting = Formatting.Indented }, new WagePerson(), typeof(Person))", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_218 [label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="713-713", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="SerializeComparisonBenchmarks.cs"];
m12_383 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="182-182", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="SerializeComparisonBenchmarks.cs"];
m12_664 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1905-1905", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs"];
m12_665 [label="Name == null", span="1907-1907", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs"];
m12_667 [label="return Name.GetHashCode();", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs"];
m12_666 [label="return 0;", span="1908-1908", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs"];
m12_668 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1905-1905", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs"];
m12_39 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="SerializeComparisonBenchmarks.cs"];
m12_44 [label="return SerializeBinaryFormatter(TestClass);", span="96-96", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", file="SerializeComparisonBenchmarks.cs"];
m12_47 [label="MemoryStream ms = new MemoryStream(Buffer)", span="101-101", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs"];
m12_43 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", span="94-94", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", file="SerializeComparisonBenchmarks.cs"];
m12_45 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", span="94-94", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", file="SerializeComparisonBenchmarks.cs"];
m12_46 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", span="99-99", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs"];
m12_40 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="SerializeComparisonBenchmarks.cs"];
m12_48 [label="BinaryFormatter formatter = new BinaryFormatter()", span="102-102", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs"];
m12_41 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SerializeComparisonBenchmarks.cs"];
m12_49 [label="formatter.Serialize(ms, value)", span="103-103", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs"];
m12_225 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetBson()", span="312-312", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetBson()", file="SerializeComparisonBenchmarks.cs"];
m12_554 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", span="1922-1922", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_199 [label="await writer.WriteEndObjectAsync()", span="289-289", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_204 [label="await writer.WritePropertyNameAsync(''Street'')", span="295-295", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_201 [label="await writer.WriteStartArrayAsync()", span="291-291", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_203 [label="await writer.WriteStartObjectAsync()", span="294-294", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_200 [label="await writer.WritePropertyNameAsync(''Addresses'')", span="290-290", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_202 [label="c.Addresses", span="292-292", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_205 [label="await writer.WriteValueAsync(address.Street)", span="296-296", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_453 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", file="SerializeComparisonBenchmarks.cs"];
m12_234 [label="return Type.GetType(resolvedTypeName, true);", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="SerializeComparisonBenchmarks.cs"];
m12_419 [label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="63-63", cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="SerializeComparisonBenchmarks.cs"];
m12_88 [label="Assert.AreEqual(''Name!'', ((EmployeeReference)employee).Name)", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_54 [label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", span="0-0", cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", file="SerializeComparisonBenchmarks.cs"];
m12_162 [label="string containerTypeName = typeof(Container).AssemblyQualifiedName", span="510-510", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="SerializeComparisonBenchmarks.cs"];
m12_153 [label="ICorrelatedMessage message = JsonConvert.DeserializeObject<ICorrelatedMessage>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="493-497", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_155 [label="SendHttpRequest request = (SendHttpRequest)message", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_669 [label="Entry string.GetHashCode()", span="0-0", cluster="string.GetHashCode()", file="SerializeComparisonBenchmarks.cs"];
m12_101 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="304-308", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_102 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''2000-12-30T00:00:00Z'''',\r\n    ''''LastModified'''': ''''2000-12-30T00:00:00Z''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]'', json)", span="310-330", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_103 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_224 [label="return SerializeJsonNetBson(TestClass);", span="314-314", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetBson()", file="SerializeComparisonBenchmarks.cs"];
m12_210 [label="await writer.WriteEndObjectAsync()", span="301-301", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_214 [label="return sw.ToString();", span="307-307", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_221 [label="Entry Unk.WriteEndObjectAsync", span="", cluster="Unk.WriteEndObjectAsync", file="SerializeComparisonBenchmarks.cs"];
m12_213 [label="await writer.FlushAsync()", span="306-306", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_215 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", span="253-253", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_217 [label="Entry Unk.WritePropertyNameAsync", span="", cluster="Unk.WritePropertyNameAsync", file="SerializeComparisonBenchmarks.cs"];
m12_220 [label="Entry Unk.WriteEndArrayAsync", span="", cluster="Unk.WriteEndArrayAsync", file="SerializeComparisonBenchmarks.cs"];
m12_211 [label="await writer.WriteEndArrayAsync()", span="303-303", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_212 [label="await writer.WriteEndObjectAsync()", span="304-304", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_216 [label="Entry Unk.WriteStartObjectAsync", span="", cluster="Unk.WriteStartObjectAsync", file="SerializeComparisonBenchmarks.cs"];
m12_222 [label="Entry Unk.FlushAsync", span="", cluster="Unk.FlushAsync", file="SerializeComparisonBenchmarks.cs"];
m12_53 [label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", span="0-0", cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", file="SerializeComparisonBenchmarks.cs"];
m12_106 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="188-188", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_107 [label="writer.WriteStartObject()", span="189-189", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", color=green, community=0, file="SerializeComparisonBenchmarks.cs"];
m12_108 [label="writer.WritePropertyName(''strings'')", span="190-190", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", color=green, community=0, file="SerializeComparisonBenchmarks.cs"];
m12_109 [label="writer.WriteStartArray()", span="191-191", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_111 [label="writer.WriteValue(s)", span="194-194", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_119 [label="writer.WritePropertyName(''Name'')", span="205-205", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_120 [label="writer.WriteValue(c.Name)", span="206-206", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_114 [label="writer.WriteStartObject()", span="198-198", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_115 [label="c.dictionary", span="199-199", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_116 [label="writer.WritePropertyName(keyValuePair.Key)", span="201-201", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_117 [label="writer.WriteValue(keyValuePair.Value)", span="202-202", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_118 [label="writer.WriteEndObject()", span="204-204", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_110 [label="c.strings", span="192-192", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_112 [label="writer.WriteEndArray()", span="196-196", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_113 [label="writer.WritePropertyName(''dictionary'')", span="197-197", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_121 [label="writer.WritePropertyName(''Now'')", span="207-207", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_223 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="SerializeComparisonBenchmarks.cs"];
m12_236 [label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", span="", cluster="string.Format(string, object)", file="SerializeComparisonBenchmarks.cs"];
m12_434 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", span="1955-1955", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_7 [label="test.strings = new List<string>() { null, ''Markus egger ]><[, (2nd)'', null }", span="57-57", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs"];
m12_137 [label="writer.WriteStartObject()", span="224-224", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_527 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="SerializeComparisonBenchmarks.cs"];
m12_159 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_122 [label="writer.WriteValue(c.Now)", span="208-208", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_126 [label="writer.WriteStartObject()", span="212-212", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_125 [label="writer.WritePropertyName(''Address1'')", span="211-211", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_127 [label="writer.WritePropertyName(''Street'')", span="213-213", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_123 [label="writer.WritePropertyName(''BigNumber'')", span="209-209", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_124 [label="writer.WriteValue(c.BigNumber)", span="210-210", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_128 [label="writer.WriteValue(c.BigNumber)", span="214-214", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_129 [label="writer.WritePropertyName(''Street'')", span="215-215", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_649 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="SerializeComparisonBenchmarks.cs"];
m12_63 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="SerializeComparisonBenchmarks.cs"];
m12_161 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="SerializeComparisonBenchmarks.cs"];
m12_166 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", span="253-253", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_165 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", span="242-242", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", file="SerializeComparisonBenchmarks.cs"];
m12_163 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", span="242-242", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", file="SerializeComparisonBenchmarks.cs"];
m12_164 [label="return SerializeJsonNetManualAsync(TestClass, Formatting.None);", span="244-244", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", file="SerializeComparisonBenchmarks.cs"];
m12_167 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", span="248-248", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="SerializeComparisonBenchmarks.cs"];
m12_238 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_257 [label="Assert.AreEqual(expected, json)", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_267 [label="Assert.AreEqual(1, anotherTestObject.AnotherTestMember.Count)", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_270 [label="Assert.AreEqual(1, list.Count)", span="814-814", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_263 [label="anotherTestObject = deserializingTester.Deserialize<HolderClass>(jsonReader)", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_241 [label="testObject.AnotherTestMember = new Dictionary<int, IList<ContentBaseClass>>()", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_252 [label="string json = sw.ToString()", span="765-765", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_256 [label="string expected = @''{\r\n  ''''TestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''First One''''\r\n  },\r\n  ''''AnotherTestMember'''': {\r\n    ''''$type'''': '''''' + dictionaryRef + @'''''',\r\n    ''''1'''': [\r\n      {\r\n        ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n        ''''SomeString'''': ''''Second One''''\r\n      }\r\n    ]\r\n  },\r\n  ''''AThirdTestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''Third One''''\r\n  }\r\n}''", span="771-789", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_258 [label="StringReader sr = new StringReader(json)", span="793-793", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_266 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<int, IList<ContentBaseClass>>), anotherTestObject.AnotherTestMember)", span="808-808", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_268 [label="IList<ContentBaseClass> list = anotherTestObject.AnotherTestMember[1]", span="811-811", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_269 [label="CustomAssert.IsInstanceOfType(typeof(List<ContentBaseClass>), list)", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_271 [label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), list[0])", span="815-815", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_261 [label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="799-799", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_259 [label="JsonSerializer deserializingTester = new JsonSerializer()", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_262 [label="deserializingTester.TypeNameHandling = TypeNameHandling.Auto", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_264 [label="Assert.IsNotNull(anotherTestObject)", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_265 [label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), anotherTestObject.TestMember)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_242 [label="testObject.AnotherTestMember.Add(1, new List<ContentBaseClass>())", span="750-750", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_239 [label="HolderClass testObject = new HolderClass()", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_240 [label="testObject.TestMember = new ContentSubClass(''First One'')", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_253 [label="string contentSubClassRef = ReflectionUtils.GetTypeName(typeof(ContentSubClass), FormatterAssemblyStyle.Simple, null)", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_254 [label="string dictionaryRef = ReflectionUtils.GetTypeName(typeof(Dictionary<int, IList<ContentBaseClass>>), FormatterAssemblyStyle.Simple, null)", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_255 [label="string listRef = ReflectionUtils.GetTypeName(typeof(List<ContentBaseClass>), FormatterAssemblyStyle.Simple, null)", span="769-769", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_251 [label="serializingTester.Serialize(jsonWriter, testObject)", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_247 [label="StringWriter sw = new StringWriter()", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_260 [label="HolderClass anotherTestObject", span="797-797", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_248 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_243 [label="testObject.AnotherTestMember[1].Add(new ContentSubClass(''Second One''))", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_244 [label="testObject.AThirdTestMember = new ContentSubClass(''Third One'')", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_245 [label="JsonSerializer serializingTester = new JsonSerializer()", span="754-754", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_250 [label="serializingTester.TypeNameHandling = TypeNameHandling.Auto", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_246 [label="serializingTester.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_249 [label="jsonWriter.Formatting = Formatting.Indented", span="760-760", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_272 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs"];
m12_362 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_371 [label="Assert.AreEqual(e, f, ''Objects should be equal after round trip json serialization'')", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_370 [label="SerializableWrapper f = serializer.Deserialize<SerializableWrapper>(new JsonTextReader(new StringReader(writer.ToString())))", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_364 [label="StringWriter writer = new StringWriter()", span="1062-1062", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_365 [label="JsonSerializer serializer = new JsonSerializer()", span="1065-1065", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_369 [label="Console.WriteLine()", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_363 [label="Console.WriteLine(''Type Name Handling: '' + flag.ToString())", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_366 [label="serializer.TypeNameHandling = flag", span="1066-1066", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_367 [label="serializer.Serialize(new JsonTextWriter(writer), e)", span="1069-1069", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_368 [label="Console.WriteLine(writer.ToString())", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_372 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs"];
m12_435 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_444 [label="Assert.AreEqual(expected, json)", span="1250-1250", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_448 [label="Assert.AreEqual(1, ((TestComponentSimple)o2.Object1).MyProperty)", span="1256-1256", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_451 [label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': 2147483647\r\n}'', o2.ObjectNotHandled.ToString())", span="1259-1261", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_442 [label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_443 [label="string expected = @''{\r\n  ''''Object1'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Object2'''': 123,\r\n  ''''ObjectNotHandled'''': {\r\n    ''''MyProperty'''': 2147483647\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1238-1249", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_445 [label="TypeNameObject o2 = JsonConvert.DeserializeObject<TypeNameObject>(json)", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_447 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Object1)", span="1255-1255", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_449 [label="CustomAssert.IsInstanceOfType(typeof(long), o2.Object2)", span="1257-1257", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_450 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.ObjectNotHandled)", span="1258-1258", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_436 [label="TypeNameObject o1 = new TypeNameObject()", span="1229-1229", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_441 [label="o1.Integer = int.MaxValue", span="1235-1235", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_446 [label="Assert.IsNotNull(o2)", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_437 [label="o1.Object1 = new TestComponentSimple { MyProperty = 1 }", span="1231-1231", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_439 [label="o1.ObjectNotHandled = new TestComponentSimple { MyProperty = int.MaxValue }", span="1233-1233", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_438 [label="o1.Object2 = 123", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_440 [label="o1.String = ''String!''", span="1234-1234", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_452 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs"];
m12_303 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="SerializeComparisonBenchmarks.cs"];
m12_93 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + cookieRef + @''''''\r\n}''", span="267-270", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="SerializeComparisonBenchmarks.cs"];
m12_625 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="SerializeComparisonBenchmarks.cs"];
m12_237 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="SerializeComparisonBenchmarks.cs"];
m12_90 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="SerializeComparisonBenchmarks.cs"];
m12_321 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_322 [label="count == 0", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_324 [label="yield return value;", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_325 [label="var nextInLine = next", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_323 [label="yield break;", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_326 [label="nextInLine != null", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_327 [label="nextInLine.count != 0", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_328 [label="yield return nextInLine.value;", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_329 [label="nextInLine = nextInLine.next", span="972-972", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_330 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_525 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", span="1915-1915", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_275 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SerializeComparisonBenchmarks.cs"];
m12_455 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_459 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    1,\r\n    ''''two'''',\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="1276-1285", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_461 [label="Assert.AreEqual(3, c2.Data.Count)", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_466 [label="Assert.AreEqual(1, c.MyProperty)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_458 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1275-1275", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_460 [label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1287-1287", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_462 [label="CustomAssert.IsInstanceOfType(typeof(long), c2.Data[0])", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_465 [label="TestComponentSimple c = (TestComponentSimple)c2.Data[2]", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_457 [label="c1.Data = new List<object>\r\n            {\r\n                1,\r\n                ''two'',\r\n                new TestComponentSimple { MyProperty = 1 }\r\n            }", span="1268-1273", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_456 [label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling()", span="1267-1267", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_463 [label="CustomAssert.IsInstanceOfType(typeof(string), c2.Data[1])", span="1291-1291", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_464 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[2])", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_467 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_468 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", span="1943-1943", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs"];
m12_91 [label="Entry JObject.cstr", span="", cluster="JObject.cstr", file="SerializeComparisonBenchmarks.cs"];
m12_94 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="433-433", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="SerializeComparisonBenchmarks.cs"];
m12_95 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_92 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SerializeComparisonBenchmarks.cs"];
m12_96 [label="new JProperty(d.Key, d.Value)", span="159-159", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_304 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs"];
m12_308 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + productClassRef + @'''''',\r\n  ''''$values'''': []\r\n}'', json)", span="931-934", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs"];
m12_307 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs"];
m12_305 [label="string productClassRef = ReflectionUtils.GetTypeName(typeof(CustomEnumerable<Product>), FormatterAssemblyStyle.Simple, null)", span="925-925", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs"];
m12_306 [label="CustomEnumerable<Product> products = new CustomEnumerable<Product>()", span="927-927", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs"];
m12_309 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs"];
m12_81 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="221-221", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs"];
m12_83 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_28 [label="Entry lambda expression", span="120-126", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_29 [label="var reader = new JsonTextReader(new StringReader(sb.ToString()))", span="122-122", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_31 [label="ser.MetadataPropertyHandling = MetadataPropertyHandling.Default", span="124-124", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_30 [label="var ser = new JsonSerializer()", span="123-123", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_32 [label="ser.Deserialize<bool>(reader)", span="125-125", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", color=green, community=0];
m12_33 [label="Exit lambda expression", span="120-126", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_34 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="SerializeComparisonBenchmarks.cs"];
m12_35 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="SerializeComparisonBenchmarks.cs"];
m12_89 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="SerializeComparisonBenchmarks.cs"];
m12_555 [label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="829-829", cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_630 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="SerializeComparisonBenchmarks.cs"];
m12_273 [label="Entry Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", file="SerializeComparisonBenchmarks.cs"];
m12_662 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="SerializeComparisonBenchmarks.cs"];
m12_38 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="SerializeComparisonBenchmarks.cs"];
m12_77 [label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), FormatterAssemblyStyle.Simple, null)", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs"];
m12_78 [label="EmployeeReference employee = new EmployeeReference()", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs"];
m12_79 [label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="227-230", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs"];
m12_353 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs"];
m12_356 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.All)", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs"];
m12_357 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Auto)", span="1055-1055", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs"];
m12_358 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Objects)", span="1056-1056", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs"];
m12_355 [label="SerializableWrapper w = new SerializableWrapper\r\n            {\r\n                Content = e\r\n            }", span="1042-1045", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs"];
m12_354 [label="IExample e = new Example(''Rob'')", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs"];
m12_359 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs"];
m12_331 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_332 [label="return GetEnumerator();", span="978-978", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_333 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="SerializeComparisonBenchmarks.cs"];
m12_66 [label="return SerializeDataContractJson(TestClass);", span="124-124", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", color=green, community=0, file="SerializeComparisonBenchmarks.cs"];
m12_64 [label="Entry Unk.Serialize", span="", cluster="Unk.Serialize", file="SerializeComparisonBenchmarks.cs"];
m12_65 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", span="122-122", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", file="SerializeComparisonBenchmarks.cs"];
m12_67 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", span="122-122", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", file="SerializeComparisonBenchmarks.cs"];
m12_68 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", span="127-127", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs"];
m12_69 [label="DataContractJsonSerializer dataContractSerializer = new DataContractJsonSerializer(value.GetType())", span="129-129", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs"];
m12_70 [label="MemoryStream ms = new MemoryStream()", span="131-131", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs"];
m12_71 [label="dataContractSerializer.WriteObject(ms, value)", span="132-132", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs"];
m12_72 [label="ms.Seek(0, SeekOrigin.Begin)", span="134-134", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs"];
m12_650 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_651 [label="info.AddValue(''name'', Name)", span="1886-1886", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_652 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_469 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_472 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1316-1331", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_474 [label="Assert.AreEqual(2, c2.Data.Count)", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_481 [label="Assert.AreEqual(2, c2.Data.Count)", span="1360-1360", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_487 [label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_471 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_473 [label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1333-1333", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_475 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1336-1336", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_480 [label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1359-1359", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_482 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_486 [label="JObject o = (JObject)c[0]", span="1366-1366", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_470 [label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling\r\n            {\r\n                Data = new List<object>\r\n                {\r\n                    new TestComponentSimple { MyProperty = 1 },\r\n                    new List<object>\r\n                    {\r\n                        new List<object>\r\n                        {\r\n                            new List<object>()\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1300-1313", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_476 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_477 [label="List<object> c = (List<object>)c2.Data[1]", span="1338-1338", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_479 [label="json = @''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="1341-1357", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_483 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1363-1363", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_484 [label="c = (List<object>)c2.Data[1]", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_485 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[0])", span="1365-1365", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_478 [label="CustomAssert.IsInstanceOfType(typeof(JArray), c[0])", span="1339-1339", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_488 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs"];
m12_160 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="619-619", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="SerializeComparisonBenchmarks.cs"];
m12_130 [label="writer.WriteValue(c.BigNumber)", span="216-216", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_168 [label="return SerializeJsonNetManualAsync(TestClass, Formatting.Indented);", span="250-250", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="SerializeComparisonBenchmarks.cs"];
m12_6 [label="test.Now = DateTime.Now.AddHours(1)", span="56-56", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs"];
m12_226 [label="TypeFormat = typeFormat", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="SerializeComparisonBenchmarks.cs"];
m12_227 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="SerializeComparisonBenchmarks.cs"];
m12_230 [label="serializer.Serialize(writer, c)", span="324-324", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetBson(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_228 [label="JsonSerializer serializer = new JsonSerializer()", span="322-322", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetBson(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_229 [label="BsonWriter writer = new BsonWriter(ms)", span="323-323", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetBson(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_231 [label="return ms.ToArray();", span="326-326", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetBson(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_232 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="SerializeComparisonBenchmarks.cs"];
m12_568 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="556-556", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="SerializeComparisonBenchmarks.cs"];
m12_85 [label="JObject o = new JObject(\r\n                new JProperty(''strings'', new JArray(c.strings)),\r\n                new JProperty(''dictionary'', new JObject(c.dictionary.Select(d => new JProperty(d.Key, d.Value)))),\r\n                new JProperty(''Name'', c.Name),\r\n                new JProperty(''Now'', c.Now),\r\n                new JProperty(''BigNumber'', c.BigNumber),\r\n                new JProperty(''Address1'', new JObject(\r\n                    new JProperty(''Street'', c.Address1.Street),\r\n                    new JProperty(''Phone'', c.Address1.Phone),\r\n                    new JProperty(''Entered'', c.Address1.Entered))),\r\n                new JProperty(''Addresses'', new JArray(c.Addresses.Select(a =>\r\n                    new JObject(\r\n                        new JProperty(''Street'', a.Street),\r\n                        new JProperty(''Phone'', a.Phone),\r\n                        new JProperty(''Entered'', a.Entered)))))\r\n                )", span="157-172", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", color=green, community=0, file="SerializeComparisonBenchmarks.cs"];
m12_84 [label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", span="155-155", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_86 [label="return o.ToString(Formatting.None);", span="174-174", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_87 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", span="155-155", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_509 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", span="1937-1937", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_420 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1200-1200", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_426 [label="Assert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Second'''': ''''String!'''',\r\n  ''''Third'''': 9223372036854775807\r\n}'', json)", span="1208-1215", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_428 [label="Assert.AreEqual(3, l2.Count)", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_430 [label="Assert.AreEqual(1, ((TestComponentSimple)l2[''First'']).MyProperty)", span="1221-1221", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_425 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1207-1207", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_427 [label="TypeNameDictionary<object> l2 = JsonConvert.DeserializeObject<TypeNameDictionary<object>>(json)", span="1217-1217", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_429 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[''First''])", span="1220-1220", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_431 [label="CustomAssert.IsInstanceOfType(typeof(string), l2[''Second''])", span="1222-1222", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_421 [label="TypeNameDictionary<object> l = new TypeNameDictionary<object>()", span="1202-1202", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_424 [label="l.Add(''Third'', long.MaxValue)", span="1205-1205", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_432 [label="CustomAssert.IsInstanceOfType(typeof(long), l2[''Third''])", span="1223-1223", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_422 [label="l.Add(''First'', new TestComponentSimple { MyProperty = 1 })", span="1203-1203", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_423 [label="l.Add(''Second'', ''String!'')", span="1204-1204", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_433 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1200-1200", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs"];
m12_376 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs"];
m12_379 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''':::MESSAGE:::, AssemblyName'''',\r\n  ''''Address'''': ''''jamesnk@testtown.com'''',\r\n  ''''Body'''': {\r\n    ''''$type'''': '''':::VERSION:::, AssemblyName'''',\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  }\r\n}'', json)", span="1107-1119", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs"];
m12_378 [label="string json = JsonConvert.SerializeObject(message, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                Binder = new MetroBinder(),\r\n                ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(NETFX_CORE || PORTABLE)\r\n                    IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="1094-1105", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs"];
m12_377 [label="Message message = new Message\r\n            {\r\n                Address = ''jamesnk@testtown.com'',\r\n                Body = new Version(1, 2, 3, 4)\r\n            }", span="1088-1092", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs"];
m12_380 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs"];
m12_150 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="SerializeComparisonBenchmarks.cs"];
m12_156 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="SerializeComparisonBenchmarks.cs"];
m12_157 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="461-461", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="SerializeComparisonBenchmarks.cs"];
m12_158 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="426-426", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="SerializeComparisonBenchmarks.cs"];
m12_154 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="220-220", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="SerializeComparisonBenchmarks.cs"];
m12_151 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="SerializeComparisonBenchmarks.cs"];
m12_8 [label="Address address = new Address()", span="59-59", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs"];
m12_334 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_344 [label="Assert.AreEqual(output, @''{\r\n  ''''$type'''': '''''' + carClassRef + @'''''',\r\n  ''''Year'''': ''''2000-10-05T01:01:01Z'''',\r\n  ''''Objects'''': {\r\n    ''''$type'''': ''''System.Object[], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n        ''''$value'''': ''''S0FSSVJB''''\r\n      },\r\n      ''''prueba''''\r\n    ]\r\n  }\r\n}'')", span="1011-1024", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_339 [label="JsonSerializerSettings jsonSettings = new JsonSerializerSettings()", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_342 [label="string output = JsonConvert.SerializeObject(testerObject, Formatting.Indented, jsonSettings)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_343 [label="string carClassRef = ReflectionUtils.GetTypeName(typeof(Car), FormatterAssemblyStyle.Simple, null)", span="1009-1009", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_345 [label="Car obj = JsonConvert.DeserializeObject<Car>(output, jsonSettings)", span="1025-1025", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_338 [label="testerObject.Objects = new object[] { data, ''prueba'' }", span="1001-1001", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_340 [label="jsonSettings.NullValueHandling = NullValueHandling.Ignore", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_341 [label="jsonSettings.TypeNameHandling = TypeNameHandling.All", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_335 [label="Car testerObject = new Car()", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_336 [label="testerObject.Year = new DateTime(2000, 10, 5, 1, 1, 1, DateTimeKind.Utc)", span="999-999", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_346 [label="Assert.IsNotNull(obj)", span="1027-1027", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_347 [label="Assert.IsTrue(obj.Objects[0] is byte[])", span="1029-1029", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_348 [label="byte[] d = (byte[])obj.Objects[0]", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_337 [label="byte[] data = new byte[] { 75, 65, 82, 73, 82, 65 }", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_349 [label="CollectionAssert.AreEquivalent(data, d)", span="1032-1032", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_350 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs"];
m12_138 [label="writer.WritePropertyName(''Street'')", span="225-225", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_615 [label="Entry System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", file="SerializeComparisonBenchmarks.cs"];
m12_73 [label="StreamReader sr = new StreamReader(ms)", span="136-136", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs"];
m12_181 [label="c.dictionary", span="269-269", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_277 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="848-848", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="SerializeComparisonBenchmarks.cs"];
m12_235 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="SerializeComparisonBenchmarks.cs"];
m12_36 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="SerializeComparisonBenchmarks.cs"];
m12_233 [label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="SerializeComparisonBenchmarks.cs"];
m12_97 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_100 [label="Exit lambda expression", span="167-171", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_98 [label="Entry lambda expression", span="167-171", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_99 [label="new JObject(\r\n                        new JProperty(''Street'', a.Street),\r\n                        new JProperty(''Phone'', a.Phone),\r\n                        new JProperty(''Entered'', a.Entered))", span="168-171", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_302 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", file="SerializeComparisonBenchmarks.cs"];
m12_401 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SerializeComparisonBenchmarks.cs"];
m12_556 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_565 [label="Assert.AreEqual(someValue, deserializedObject[contextKey])", span="1598-1598", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_561 [label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            }", span="1587-1591", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_559 [label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_557 [label="string contextKey = ''k1''", span="1581-1581", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_558 [label="var someValue = Guid.NewGuid()", span="1582-1582", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_564 [label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="1596-1596", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_560 [label="inputContext.Add(contextKey, someValue)", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_562 [label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="1592-1592", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_563 [label="Console.WriteLine(serializedString)", span="1594-1594", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_566 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs"];
m12_131 [label="writer.WritePropertyName(''Street'')", span="217-217", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_135 [label="writer.WriteStartArray()", span="221-221", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_134 [label="writer.WritePropertyName(''Addresses'')", span="220-220", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_133 [label="writer.WriteEndObject()", span="219-219", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_132 [label="writer.WriteValue(c.BigNumber)", span="218-218", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_136 [label="c.Addresses", span="222-222", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_382 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", span="1122-1122", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", file="SerializeComparisonBenchmarks.cs"];
m12_374 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="SerializeComparisonBenchmarks.cs"];
m12_526 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", span="1929-1929", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", file="SerializeComparisonBenchmarks.cs"];
m12_5 [label="test.BigNumber = 34123123123.121M", span="55-55", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs"];
m12_9 [label="address.Entered = DateTime.Now.AddDays(-1)", span="60-60", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs"];
m12_352 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="SerializeComparisonBenchmarks.cs"];
m12_62 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeWebExtensions(object)", span="114-114", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeWebExtensions(object)", file="SerializeComparisonBenchmarks.cs"];
m12_278 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="SerializeComparisonBenchmarks.cs"];
m12_276 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SerializeComparisonBenchmarks.cs"];
m12_139 [label="writer.WriteValue(address.Street)", span="226-226", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_141 [label="writer.WriteValue(address.Phone)", span="228-228", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_140 [label="writer.WritePropertyName(''Phone'')", span="227-227", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_142 [label="writer.WritePropertyName(''Entered'')", span="229-229", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_310 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="SerializeComparisonBenchmarks.cs"];
m12_316 [label="count = 0", span="953-953", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="SerializeComparisonBenchmarks.cs"];
m12_317 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="SerializeComparisonBenchmarks.cs"];
m12_51 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", span="99-99", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs"];
m12_105 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="SerializeComparisonBenchmarks.cs"];
m12_148 [label="return sw.ToString();", span="237-237", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_143 [label="Entry lambda expression", span="442-448", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_144 [label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                    {\r\n                        TypeNameHandling = TypeNameHandling.Objects\r\n                    })", span="444-447", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_145 [label="Exit lambda expression", span="442-448", cluster="lambda expression", file="SerializeComparisonBenchmarks.cs"];
m12_146 [label="writer.WriteEndObject()", span="234-234", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_147 [label="writer.Flush()", span="236-236", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_149 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", span="185-185", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs"];
m12_76 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="221-221", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs"];
m12_37 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SerializeComparisonBenchmarks.cs"];
m12_0 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_1 [label="Dictionary<string, object> dic = new Dictionary<string, object>\r\n            {\r\n                { ''movie'', new Movie { Name = ''Die Hard''}}\r\n            }", span="59-62", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_2 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="64-67", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_3 [label="Assert.AreEqual(@''{\r\n  ''''movie'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n    ''''Name'''': ''''Die Hard'''',\r\n    ''''Description'''': null,\r\n    ''''Classification'''': null,\r\n    ''''Studio'''': null,\r\n    ''''ReleaseDate'''': null,\r\n    ''''ReleaseCountries'''': null\r\n  }\r\n}'', json)", span="69-79", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_4 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_11 [label="IList<KeyValuePair<string, object>> dic = new List<KeyValuePair<string, object>>\r\n            {\r\n                new KeyValuePair<string, object>(''movie'', new Movie { Name = ''Die Hard''})\r\n            }", span="85-88", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_15 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SerializeComparisonBenchmarks.cs"];
m12_16 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SerializeComparisonBenchmarks.cs"];
m12_10 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_12 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="90-93", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_13 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''movie'''',\r\n    ''''Value'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n      ''''Name'''': ''''Die Hard'''',\r\n      ''''Description'''': null,\r\n      ''''Classification'''': null,\r\n      ''''Studio'''': null,\r\n      ''''ReleaseDate'''': null,\r\n      ''''ReleaseCountries'''': null\r\n    }\r\n  }\r\n]'', json)", span="95-108", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs", color=green, community=0];
m12_14 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs"];
m12_59 [label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="160-163", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="SerializeComparisonBenchmarks.cs", color=green, community=0];
m12_60 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', json)", span="165-171", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="SerializeComparisonBenchmarks.cs"];
m12_61 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="SerializeComparisonBenchmarks.cs"];
m12_375 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="SerializeComparisonBenchmarks.cs"];
m12_169 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", span="248-248", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="SerializeComparisonBenchmarks.cs"];
m12_173 [label="await writer.WriteStartObjectAsync()", span="259-259", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_175 [label="await writer.WriteStartArrayAsync()", span="261-261", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_178 [label="await writer.WriteEndArrayAsync()", span="266-266", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_179 [label="await writer.WritePropertyNameAsync(''dictionary'')", span="267-267", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_170 [label="StringWriter sw = new StringWriter()", span="255-255", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_172 [label="writer.Formatting = formatting", span="257-257", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_174 [label="await writer.WritePropertyNameAsync(''strings'')", span="260-260", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_176 [label="c.strings", span="262-262", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_177 [label="await writer.WriteValueAsync(s)", span="264-264", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_171 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="256-256", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_180 [label="await writer.WriteStartObjectAsync()", span="268-268", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_392 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1142-1142", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs"];
m12_398 [label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1150-1154", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs"];
m12_397 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1149-1149", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs"];
m12_393 [label="TypeNameList<int> l = new TypeNameList<int>()", span="1144-1144", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs"];
m12_396 [label="l.Add(3)", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs"];
m12_394 [label="l.Add(1)", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs"];
m12_395 [label="l.Add(2)", span="1146-1146", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs"];
m12_399 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1142-1142", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs"];
m12_80 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="SerializeComparisonBenchmarks.cs"];
m12_528 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_537 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1526-1539", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_543 [label="Assert.AreEqual(1, c.MyProperty)", span="1547-1547", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_546 [label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1551-1551", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_552 [label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1573-1573", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_536 [label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="1525-1525", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_538 [label="PropertyItemTypeNameHandlingDynamic d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1541-1541", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_542 [label="TestComponentSimple c = (TestComponentSimple)data3.one", span="1546-1546", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_544 [label="dynamic data4 = data3.two", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_545 [label="JObject o = (JObject)data4.one", span="1550-1550", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_547 [label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}''", span="1553-1567", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_551 [label="o = (JObject)data4.one", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_529 [label="PropertyItemTypeNameHandlingDynamic d1 = new PropertyItemTypeNameHandlingDynamic()", span="1507-1507", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_535 [label="d1.Data = (DynamicDictionary)data", span="1523-1523", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_539 [label="Assert.IsNotNull(d2)", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_540 [label="Assert.IsNotNull(d2.Data)", span="1543-1543", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_541 [label="dynamic data3 = d2.Data", span="1545-1545", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_548 [label="d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1569-1569", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_550 [label="data4 = data3.two", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_531 [label="data.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 1\r\n            }", span="1510-1513", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_533 [label="data2.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 2\r\n            }", span="1516-1519", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_530 [label="dynamic data = new DynamicDictionary()", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_534 [label="data.two = data2", span="1521-1521", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_549 [label="data3 = d2.Data", span="1570-1570", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_532 [label="dynamic data2 = new DynamicDictionary()", span="1515-1515", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_553 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs"];
m12_381 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="SerializeComparisonBenchmarks.cs"];
m12_590 [label="Entry Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", file="SerializeComparisonBenchmarks.cs"];
m12_27 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractSerializer()", span="73-73", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractSerializer()", file="SerializeComparisonBenchmarks.cs"];
m12_579 [label="Entry Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", span="1799-1799", cluster="Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", file="SerializeComparisonBenchmarks.cs"];
m12_602 [label="Entry Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", file="SerializeComparisonBenchmarks.cs"];
m12_373 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="SerializeComparisonBenchmarks.cs"];
m12_578 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1789-1789", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="SerializeComparisonBenchmarks.cs"];
m12_626 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1789-1789", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="SerializeComparisonBenchmarks.cs"];
m12_182 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="511-511", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_207 [label="await writer.WriteValueAsync(address.Phone)", span="298-298", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_208 [label="await writer.WritePropertyNameAsync(''Entered'')", span="299-299", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_209 [label="await writer.WriteValueAsync(address.Entered)", span="300-300", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs"];
m12_50 [label="return ms.ToArray();", span="105-105", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs"];
m12_591 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1675-1675", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_596 [label="Assert.AreEqual(@''{\r\n  ''''ParentProp'''': {\r\n    ''''c'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n      ''''p'''': ''''string!''''\r\n    }\r\n  }\r\n}'', json)", span="1698-1705", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_600 [label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1710-1710", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_594 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1687-1694", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_595 [label="string json = JsonConvert.SerializeObject(pp, settings)", span="1696-1696", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_597 [label="ParentParent pp2 = JsonConvert.DeserializeObject<ParentParent>(json, settings)", span="1707-1707", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_598 [label="MyParent p2 = pp2.ParentProp", span="1708-1708", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_599 [label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_593 [label="pp.ParentProp = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1679-1685", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_592 [label="ParentParent pp = new ParentParent()", span="1677-1677", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_601 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1675-1675", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs"];
m12_287 [label="Entry Newtonsoft.Json.Tests.Serialization.Message.Message()", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.Message.Message()", file="SerializeComparisonBenchmarks.cs"];
m12_603 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1715-1715", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_608 [label="string serialized = JsonConvert.SerializeObject(input,\r\n                Newtonsoft.Json.Formatting.Indented,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All, TypeNameAssemblyFormat = FormatterAssemblyStyle.Full } // TypeNameHandling.Auto will work\r\n            )", span="1723-1726", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_610 [label="var output = JsonConvert.DeserializeObject<List<Stack<string>>>(serialized,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }\r\n            )", span="1730-1732", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_604 [label="var input = new List<Stack<string>>()", span="1717-1717", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_607 [label="input.Add(new Stack<string>(new List<string> { ''Seven'', ''Eight'', ''Nine'' }))", span="1721-1721", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_609 [label="Console.WriteLine(serialized)", span="1728-1728", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_611 [label=output, span="1734-1734", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_605 [label="input.Add(new Stack<string>(new List<string> { ''One'', ''Two'', ''Three'' }))", span="1719-1719", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_606 [label="input.Add(new Stack<string>(new List<string> { ''Four'', ''Five'', ''Six'' }))", span="1720-1720", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_612 [label=stack, span="1736-1736", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_613 [label="Console.WriteLine(value)", span="1738-1738", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_614 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1715-1715", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs"];
m12_489 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1371-1371", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_492 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''one'''': 1\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1395-1408", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_494 [label="Assert.AreEqual(2, c2.Data.Count)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_501 [label="Assert.AreEqual(2, c2.Data.Count)", span="1435-1435", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_507 [label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1443-1443", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_490 [label="PropertyItemTypeNameHandlingDictionary c1 = new PropertyItemTypeNameHandlingDictionary()\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    {\r\n                        ''one'', new TestComponentSimple { MyProperty = 1 }\r\n                    },\r\n                    {\r\n                        ''two'', new Dictionary<string, object>\r\n                        {\r\n                            {\r\n                                ''one'', new Dictionary<string, object>\r\n                                {\r\n                                    { ''one'', 1 }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1373-1392", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_491 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_493 [label="PropertyItemTypeNameHandlingDictionary c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1410-1410", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_495 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_500 [label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1434-1434", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_502 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_506 [label="JObject o = (JObject)c[''one'']", span="1442-1442", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_496 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_497 [label="Dictionary<string, object> c = (Dictionary<string, object>)c2.Data[''two'']", span="1415-1415", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_499 [label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 1\r\n      }\r\n    }\r\n  }\r\n}''", span="1418-1432", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_503 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_504 [label="c = (Dictionary<string, object>)c2.Data[''two'']", span="1439-1439", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_505 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1440-1440", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_498 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_508 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1371-1371", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs"];
m12_510 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_513 [label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''Prop3'''': 3,\r\n    ''''Prop4'''': {}\r\n  }\r\n}'', json)", span="1470-1487", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_523 [label="Assert.AreEqual(1, (int)j[''MyProperty''])", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_512 [label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1469-1469", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_514 [label="PropertyItemTypeNameHandlingObject o2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingObject>(json)", span="1489-1489", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_522 [label="JObject j = (JObject)o[0]", span="1499-1499", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_511 [label="PropertyItemTypeNameHandlingObject o1 = new PropertyItemTypeNameHandlingObject\r\n            {\r\n                Data = new TypeNameHandlingTestObject\r\n                {\r\n                    Prop1 = new List<object>\r\n                    {\r\n                        new TestComponentSimple\r\n                        {\r\n                            MyProperty = 1\r\n                        }\r\n                    },\r\n                    Prop2 = new TestComponentSimple\r\n                    {\r\n                        MyProperty = 1\r\n                    },\r\n                    Prop3 = 3,\r\n                    Prop4 = new JObject()\r\n                }\r\n            }", span="1449-1467", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_515 [label="Assert.IsNotNull(o2)", span="1490-1490", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_516 [label="Assert.IsNotNull(o2.Data)", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_517 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), o2.Data.Prop1)", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_518 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Data.Prop2)", span="1494-1494", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_519 [label="CustomAssert.IsInstanceOfType(typeof(long), o2.Data.Prop3)", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_520 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.Data.Prop4)", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_521 [label="List<object> o = (List<object>)o2.Data.Prop1", span="1498-1498", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_524 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs"];
m12_360 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="SerializeComparisonBenchmarks.cs"];
m12_644 [label="Name = name", span="1876-1876", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="SerializeComparisonBenchmarks.cs"];
m12_645 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="SerializeComparisonBenchmarks.cs"];
m12_26 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="SerializeComparisonBenchmarks.cs"];
m12_663 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="SerializeComparisonBenchmarks.cs"];
m12_75 [label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", span="127-127", cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs"];
m12_418 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", file="SerializeComparisonBenchmarks.cs"];
m12_311 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs"];
m12_312 [label="this.value = value", span="946-946", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs"];
m12_313 [label="this.next = next", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs"];
m12_314 [label="count = this.next.count + 1", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs"];
m12_315 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs"];
m12_402 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1158-1158", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_410 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee, Newtonsoft.Json.Tests'''',\r\n    ''''FirstName'''': null,\r\n    ''''LastName'''': null,\r\n    ''''BirthDate'''': ''''2000-12-12T12:12:12Z'''',\r\n    ''''Department'''': ''''Department!'''',\r\n    ''''JobTitle'''': null\r\n  },\r\n  ''''String!'''',\r\n  9223372036854775807\r\n]'', json)", span="1173-1188", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_412 [label="Assert.AreEqual(4, l2.Count)", span="1191-1191", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_409 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1172-1172", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_411 [label="TypeNameList<object> l2 = JsonConvert.DeserializeObject<TypeNameList<object>>(json)", span="1190-1190", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_413 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[0])", span="1193-1193", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_406 [label="l.Add(new Employee\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                Department = ''Department!''\r\n            })", span="1164-1168", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_404 [label="TypeNameList<object> l = new TypeNameList<object>()", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_408 [label="l.Add(long.MaxValue)", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_414 [label="CustomAssert.IsInstanceOfType(typeof(Employee), l2[1])", span="1194-1194", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_415 [label="CustomAssert.IsInstanceOfType(typeof(string), l2[2])", span="1195-1195", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_416 [label="CustomAssert.IsInstanceOfType(typeof(long), l2[3])", span="1196-1196", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_403 [label="var c1 = new TestComponentSimple()", span="1160-1160", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_405 [label="l.Add(c1)", span="1163-1163", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_407 [label="l.Add(''String!'')", span="1169-1169", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_417 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1158-1158", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs"];
m12_646 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1879-1879", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_647 [label="Name = info.GetString(''name'')", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_648 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1879-1879", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_622 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1784-1784", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_623 [label="Child = (ISomeBase)info.GetValue(''c'', typeof(ISomeBase))", span="1786-1786", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_624 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1784-1784", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs"];
m12_74 [label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="SerializeComparisonBenchmarks.cs"];
m12_674 [label=sb, span="", file="SerializeComparisonBenchmarks.cs"];
m12_675 [label=json, span="", file="SerializeComparisonBenchmarks.cs"];
m12_679 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", span="", file="SerializeComparisonBenchmarks.cs"];
m12_677 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", span="", file="SerializeComparisonBenchmarks.cs"];
m12_678 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", span="", file="SerializeComparisonBenchmarks.cs"];
m12_682 [label="Newtonsoft.Json.Tests.Serialization.Example", span="", file="SerializeComparisonBenchmarks.cs"];
m12_680 [label="Newtonsoft.Json.Tests.Serialization.MyParent", span="", file="SerializeComparisonBenchmarks.cs"];
m14_6 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="XmlNodeConverterBenchmarks.cs"];
m14_10 [label="Entry Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", span="53-53", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_11 [label="XDocument doc", span="55-55", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_12 [label="FileStream file = System.IO.File.OpenRead(''large_sample.xml'')", span="56-56", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_13 [label="doc = XDocument.Load(file)", span="58-58", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_14 [label="JsonConvert.SerializeXNode(doc)", span="61-61", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_15 [label="Exit Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", span="53-53", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_9 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="XmlNodeConverterBenchmarks.cs"];
m14_7 [label="Entry System.IO.File.OpenRead(string)", span="0-0", cluster="System.IO.File.OpenRead(string)", file="XmlNodeConverterBenchmarks.cs"];
m14_8 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="XmlNodeConverterBenchmarks.cs"];
m14_16 [label="Entry Unk.SerializeXNode", span="", cluster="Unk.SerializeXNode", file="XmlNodeConverterBenchmarks.cs"];
m14_0 [label="Entry Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", span="41-41", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_1 [label="XmlDocument doc = new XmlDocument()", span="43-43", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_2 [label="FileStream file = System.IO.File.OpenRead(''large_sample.xml'')", span="44-44", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_3 [label="doc.Load(file)", span="46-46", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_4 [label="JsonConvert.SerializeXmlNode(doc)", span="49-49", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs"];
m14_5 [label="Exit Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", span="41-41", cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs"];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_15  [key=2, style=dotted];
m2_28 -> m2_26  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_22  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_23  [key=2, style=dotted];
m2_18 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_24  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_25  [key=2, style=dotted];
m2_21 -> m2_16  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_15  [key=2, style=dotted];
m2_31 -> m2_29  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_9  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=2, style=dotted];
m2_14 -> m2_12  [key=0, style=bold, color=blue];
m3_110 -> m3_114  [key=0, style=solid];
m3_110 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_110 -> m3_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_110 -> m3_112  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_82  [key=2, style=dotted];
m3_114 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_114 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_114 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_114 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_114 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_114 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_114 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_114 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_83  [key=2, style=dotted];
m3_115 -> m3_84  [key=2, style=dotted];
m3_115 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_128  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_115 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_124 -> m3_123  [key=0, style=solid];
m3_124 -> m3_86  [key=2, style=dotted];
m3_129 -> m3_127  [key=0, style=solid];
m3_129 -> m3_147  [key=2, style=dotted];
m3_129 -> m3_148  [key=2, style=dotted];
m3_129 -> m3_149  [key=2, style=dotted];
m3_131 -> m3_117  [key=0, style=solid];
m3_131 -> m3_150  [key=2, style=dotted];
m3_133 -> m3_117  [key=0, style=solid];
m3_133 -> m3_151  [key=2, style=dotted];
m3_133 -> m3_148  [key=2, style=dotted];
m3_135 -> m3_117  [key=0, style=solid];
m3_135 -> m3_152  [key=2, style=dotted];
m3_135 -> m3_148  [key=2, style=dotted];
m3_138 -> m3_117  [key=0, style=solid];
m3_138 -> m3_153  [key=2, style=dotted];
m3_143 -> m3_141  [key=0, style=solid];
m3_143 -> m3_86  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_146  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_144  [key=0, style=solid];
m3_117 -> m3_146  [key=2, style=dotted];
m3_117 -> m3_31  [key=3, color=green, style=bold, label="Parameter variable string json"];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_144  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_146  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_117  [key=0, style=solid];
m3_123 -> m3_146  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_146  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_117  [key=0, style=solid];
m3_127 -> m3_146  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_146  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_146  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_117  [key=0, style=solid];
m3_141 -> m3_146  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_153  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_125  [key=0, style=solid];
m3_120 -> m3_130  [key=0, style=solid];
m3_120 -> m3_132  [key=0, style=solid];
m3_120 -> m3_134  [key=0, style=solid];
m3_120 -> m3_136  [key=0, style=solid];
m3_120 -> m3_139  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_130 -> m3_131  [key=0, style=solid];
m3_132 -> m3_133  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_136 -> m3_137  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_145 -> m3_110  [key=0, style=bold, color=blue];
m3_39 -> m3_40  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=2, style=dotted];
m3_41 -> m3_39  [key=0, style=bold, color=blue];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_21  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.TestObjects.TestClass BinaryFormatter"];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_20 -> m3_18  [key=0, style=bold, color=blue];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_93 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_93 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_93 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_93 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_93 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_93 -> m3_51  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonTextReader reader"];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_106  [key=2, style=dotted];
m3_94 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_94 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_94 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_94 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_104  [key=0, style=solid];
m3_95 -> m3_85  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_104  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_100  [key=0, style=solid];
m3_97 -> m3_102  [key=0, style=solid];
m3_99 -> m3_95  [key=0, style=solid];
m3_99 -> m3_90  [key=2, style=dotted];
m3_101 -> m3_95  [key=0, style=solid];
m3_101 -> m3_90  [key=2, style=dotted];
m3_103 -> m3_95  [key=0, style=solid];
m3_103 -> m3_91  [key=2, style=dotted];
m3_103 -> m3_88  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_105 -> m3_93  [key=0, style=bold, color=blue];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_153 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_153 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_153 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_153 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_153 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_153 -> m3_115  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonTextReader reader"];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_106  [key=2, style=dotted];
m3_154 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_154 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_154 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_154 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_164  [key=0, style=solid];
m3_155 -> m3_146  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_164  [key=0, style=solid];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_160  [key=0, style=solid];
m3_157 -> m3_162  [key=0, style=solid];
m3_159 -> m3_155  [key=0, style=solid];
m3_159 -> m3_150  [key=2, style=dotted];
m3_161 -> m3_155  [key=0, style=solid];
m3_161 -> m3_150  [key=2, style=dotted];
m3_163 -> m3_155  [key=0, style=solid];
m3_163 -> m3_151  [key=2, style=dotted];
m3_163 -> m3_148  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_158 -> m3_159  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_162 -> m3_163  [key=0, style=solid];
m3_165 -> m3_153  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_12  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.TestObjects.TestClass DataContractJsonSerializer"];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_12  [key=2, style=dotted];
m3_38 -> m3_36  [key=0, style=bold, color=blue];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_110  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Threading.Tasks.Task<Newtonsoft.Json.Tests.TestObjects.TestClass> JsonNetManualAsync"];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_110  [key=2, style=dotted];
m3_109 -> m3_107  [key=0, style=bold, color=blue];
m3_49 -> m3_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.TestObjects.TestClass JsonNetManual"];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_49 -> m3_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_82  [key=2, style=dotted];
m3_50 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_50 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_50 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_50 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_50 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_50 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_50 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_50 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_51 -> m3_52  [key=0, style=solid, color=green];
m3_51 -> m3_83  [key=2, style=dotted];
m3_51 -> m3_84  [key=2, style=dotted];
m3_51 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_51 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_60 -> m3_59  [key=0, style=solid];
m3_60 -> m3_86  [key=2, style=dotted];
m3_65 -> m3_63  [key=0, style=solid];
m3_65 -> m3_87  [key=2, style=dotted];
m3_65 -> m3_88  [key=2, style=dotted];
m3_65 -> m3_89  [key=2, style=dotted];
m3_67 -> m3_53  [key=0, style=solid];
m3_67 -> m3_90  [key=2, style=dotted];
m3_69 -> m3_53  [key=0, style=solid];
m3_69 -> m3_91  [key=2, style=dotted];
m3_69 -> m3_88  [key=2, style=dotted];
m3_71 -> m3_53  [key=0, style=solid];
m3_71 -> m3_92  [key=2, style=dotted];
m3_71 -> m3_88  [key=2, style=dotted];
m3_74 -> m3_53  [key=0, style=solid];
m3_74 -> m3_93  [key=2, style=dotted];
m3_79 -> m3_77  [key=0, style=solid];
m3_79 -> m3_86  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid, color=green];
m3_52 -> m3_85  [key=2, style=dotted, color=green];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_80  [key=0, style=solid];
m3_53 -> m3_85  [key=2, style=dotted];
m3_53 -> m3_31  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_80  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_85  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_53  [key=0, style=solid];
m3_59 -> m3_85  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_85  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_53  [key=0, style=solid];
m3_63 -> m3_85  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_85  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_85  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_53  [key=0, style=solid];
m3_77 -> m3_85  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_93  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_61  [key=0, style=solid];
m3_56 -> m3_66  [key=0, style=solid];
m3_56 -> m3_68  [key=0, style=solid];
m3_56 -> m3_70  [key=0, style=solid];
m3_56 -> m3_72  [key=0, style=solid];
m3_56 -> m3_75  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_68 -> m3_69  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_81 -> m3_49  [key=0, style=bold, color=blue];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_173  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_174  [key=2, style=dotted];
m3_171 -> m3_9  [key=2, style=dotted];
m3_171 -> m3_175  [key=2, style=dotted];
m3_172 -> m3_169  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_30 -> m3_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_35  [key=2, style=dotted];
m3_33 -> m3_30  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_3 -> m3_1  [key=3, color=darkorchid, style=bold, label="Parameter variable string xml"];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_11  [key=2, style=dotted];
m3_7 -> m3_3  [key=0, style=bold, color=blue];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_169  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.TestObjects.TestClass JsonNetBson"];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_169  [key=2, style=dotted];
m3_168 -> m3_166  [key=0, style=bold, color=blue];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_49  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.TestObjects.TestClass JsonNetManual"];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=2, style=dotted];
m3_48 -> m3_46  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_12 -> m3_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_17  [key=2, style=dotted];
m3_13 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=dataContractSerializer];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_9  [key=2, style=dotted];
m3_14 -> m3_10  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_11  [key=2, style=dotted];
m3_16 -> m3_12  [key=0, style=bold, color=blue];
m3_43 -> m3_44  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_42  [key=2, style=dotted];
m3_45 -> m3_43  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.TestObjects.TestClass DataContractSerializer"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_25  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_9  [key=2, style=dotted];
m3_23 -> m3_26  [key=2, style=dotted];
m3_24 -> m3_21  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_30  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.TestObjects.TestClass JavaScriptSerializer"];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_30  [key=2, style=dotted];
m3_29 -> m3_27  [key=0, style=bold, color=blue];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_110  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Threading.Tasks.Task<Newtonsoft.Json.Tests.TestObjects.TestClass> JsonNetManualIndentedAsync"];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_110  [key=2, style=dotted];
m3_113 -> m3_111  [key=0, style=bold, color=blue];
m3_176 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks"];
m3_176 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks"];
m3_176 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks"];
m3_176 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks"];
m3_176 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks"];
m3_176 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks"];
m3_176 -> m3_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks"];
m3_176 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks"];
m4_281 -> m4_282  [key=0, style=solid];
m4_283 -> m4_29  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_167  [key=2, style=dotted];
m4_288 -> m4_16  [key=2, style=dotted];
m4_288 -> m4_289  [key=0, style=solid];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_167  [key=2, style=dotted];
m4_282 -> m4_284  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_282 -> m4_287  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_284 -> m4_285  [key=0, style=solid];
m4_287 -> m4_17  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_222  [key=2, style=dotted];
m4_285 -> m4_287  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_221  [key=2, style=dotted];
m4_285 -> m4_290  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_289 -> m4_281  [key=0, style=bold, color=blue];
m4_79 -> m4_80  [key=0, style=solid];
m4_81 -> m4_13  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_80 -> m4_81  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_61  [key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_15  [key=2, style=dotted];
m4_84 -> m4_79  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid, color=green];
m4_19 -> m4_20  [key=0, style=solid, color=green];
m4_19 -> m4_13  [key=2, style=dotted, color=green];
m4_19 -> m4_22  [key=1, style=dashed, color=green, label=schema];
m4_19 -> m4_25  [key=1, style=dashed, color=green, label=schema];
m4_19 -> m4_16  [key=2, style=dotted];
m4_19 -> m4_23  [key=2, style=dotted];
m4_19 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m4_20 -> m4_21  [key=0, style=solid, color=green];
m4_20 -> m4_14  [key=2, style=dotted, color=green];
m4_20 -> m4_22  [key=1, style=dashed, color=green, label=stringToken];
m4_20 -> m4_17  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_30  [key=2, style=dotted];
m4_22 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_22 -> m4_18  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_30  [key=2, style=dotted];
m4_25 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_21 -> m4_29  [key=2, style=dotted];
m4_21 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_21 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_21 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_21 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_21 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_21 -> m4_21  [key=0, style=solid];
m4_21 -> m4_24  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_16  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_14  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_16  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_16  [key=2, style=dotted];
m4_28 -> m4_18  [key=0, style=bold, color=blue];
m4_48 -> m4_49  [key=0, style=solid];
m4_49 -> m4_13  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_50 -> m4_14  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_47  [key=2, style=dotted];
m4_52 -> m4_48  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_15  [key=2, style=dotted];
m4_5 -> m4_16  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_158 -> m4_41  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_159 -> m4_157  [key=0, style=bold, color=blue];
m4_169 -> m4_170  [key=0, style=solid];
m4_170 -> m4_41  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_171 -> m4_169  [key=0, style=bold, color=blue];
m4_3 -> m4_14  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=integerToken];
m4_3 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=integerToken];
m4_180 -> m4_181  [key=0, style=solid];
m4_181 -> m4_41  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_182 -> m4_180  [key=0, style=bold, color=blue];
m4_190 -> m4_191  [key=0, style=solid];
m4_191 -> m4_41  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_192 -> m4_190  [key=0, style=bold, color=blue];
m4_247 -> m4_248  [key=0, style=solid];
m4_250 -> m4_29  [key=2, style=dotted];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_167  [key=2, style=dotted];
m4_255 -> m4_16  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_256 -> m4_16  [key=2, style=dotted];
m4_256 -> m4_257  [key=0, style=solid];
m4_257 -> m4_16  [key=2, style=dotted];
m4_257 -> m4_258  [key=0, style=solid];
m4_258 -> m4_16  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_259 -> m4_16  [key=2, style=dotted];
m4_259 -> m4_260  [key=0, style=solid];
m4_248 -> m4_250  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_167  [key=2, style=dotted];
m4_248 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_248 -> m4_254  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_249 -> m4_250  [key=0, style=solid];
m4_251 -> m4_252  [key=0, style=solid];
m4_254 -> m4_17  [key=2, style=dotted];
m4_254 -> m4_255  [key=0, style=solid];
m4_254 -> m4_256  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_254 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_254 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_254 -> m4_259  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_254 -> m4_233  [key=2, style=dotted];
m4_252 -> m4_254  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_221  [key=2, style=dotted];
m4_253 -> m4_254  [key=0, style=solid];
m4_260 -> m4_247  [key=0, style=bold, color=blue];
m4_200 -> m4_201  [key=0, style=solid];
m4_201 -> m4_41  [key=2, style=dotted];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_202 -> m4_200  [key=0, style=bold, color=blue];
m4_223 -> m4_224  [key=0, style=solid];
m4_229 -> m4_16  [key=2, style=dotted];
m4_229 -> m4_230  [key=0, style=solid];
m4_230 -> m4_16  [key=2, style=dotted];
m4_230 -> m4_231  [key=0, style=solid];
m4_231 -> m4_16  [key=2, style=dotted];
m4_231 -> m4_232  [key=0, style=solid];
m4_228 -> m4_17  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_228 -> m4_231  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_228 -> m4_233  [key=2, style=dotted];
m4_224 -> m4_167  [key=2, style=dotted];
m4_224 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_224 -> m4_225  [key=0, style=solid];
m4_226 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_221  [key=2, style=dotted];
m4_227 -> m4_228  [key=0, style=solid];
m4_225 -> m4_226  [key=0, style=solid];
m4_232 -> m4_223  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_16  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_16  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_16  [key=2, style=dotted];
m4_12 -> m4_0  [key=0, style=bold, color=blue];
m4_13 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_17  [key=2, style=dotted];
m4_14 -> m4_10  [key=0, style=bold, color=blue];
m4_110 -> m4_111  [key=0, style=solid];
m4_111 -> m4_29  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_85  [key=2, style=dotted];
m4_112 -> m4_29  [key=2, style=dotted];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_85  [key=2, style=dotted];
m4_113 -> m4_85  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_131  [key=2, style=dotted];
m4_114 -> m4_85  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_132  [key=2, style=dotted];
m4_115 -> m4_85  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_133  [key=2, style=dotted];
m4_116 -> m4_85  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_134  [key=2, style=dotted];
m4_117 -> m4_85  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_135  [key=2, style=dotted];
m4_118 -> m4_85  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_136  [key=2, style=dotted];
m4_119 -> m4_85  [key=2, style=dotted];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_137  [key=2, style=dotted];
m4_120 -> m4_85  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_138  [key=2, style=dotted];
m4_121 -> m4_85  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_139  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_140  [key=2, style=dotted];
m4_122 -> m4_141  [key=2, style=dotted];
m4_123 -> m4_85  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_142  [key=2, style=dotted];
m4_124 -> m4_85  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_125 -> m4_85  [key=2, style=dotted];
m4_125 -> m4_126  [key=0, style=solid];
m4_126 -> m4_85  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_143  [key=2, style=dotted];
m4_127 -> m4_85  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_144  [key=2, style=dotted];
m4_128 -> m4_85  [key=2, style=dotted];
m4_128 -> m4_129  [key=0, style=solid];
m4_129 -> m4_85  [key=2, style=dotted];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_145  [key=2, style=dotted];
m4_130 -> m4_110  [key=0, style=bold, color=blue];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_17  [key=2, style=dotted];
m4_6 -> m4_16  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_13  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_61  [key=2, style=dotted];
m4_55 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_57 -> m4_30  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_56 -> m4_29  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_56 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_56 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_58 -> m4_16  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_59 -> m4_16  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_53  [key=0, style=bold, color=blue];
m4_215 -> m4_216  [key=0, style=solid];
m4_219 -> m4_15  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_219 -> m4_222  [key=2, style=dotted];
m4_216 -> m4_167  [key=2, style=dotted];
m4_216 -> m4_219  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_216 -> m4_217  [key=0, style=solid];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_221  [key=2, style=dotted];
m4_217 -> m4_218  [key=0, style=solid];
m4_220 -> m4_215  [key=0, style=bold, color=blue];
m4_261 -> m4_262  [key=0, style=solid];
m4_263 -> m4_29  [key=2, style=dotted];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_272  [key=2, style=dotted];
m4_263 -> m4_167  [key=2, style=dotted];
m4_263 -> m4_168  [key=2, style=dotted];
m4_267 -> m4_16  [key=2, style=dotted];
m4_267 -> m4_268  [key=0, style=solid];
m4_270 -> m4_16  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_167  [key=2, style=dotted];
m4_262 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_262 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_245  [key=2, style=dotted];
m4_264 -> m4_246  [key=2, style=dotted];
m4_264 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_266 -> m4_17  [key=2, style=dotted];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_222  [key=2, style=dotted];
m4_269 -> m4_17  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_233  [key=2, style=dotted];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_245  [key=2, style=dotted];
m4_268 -> m4_246  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_271 -> m4_261  [key=0, style=bold, color=blue];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_13  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_61  [key=2, style=dotted];
m4_67 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_67 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_69 -> m4_30  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_68 -> m4_29  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_68 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_68 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_71 -> m4_16  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_74  [key=2, style=dotted];
m4_71 -> m4_75  [key=2, style=dotted];
m4_70 -> m4_16  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_72 -> m4_16  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_73 -> m4_65  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_13  [key=2, style=dotted];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_1 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_1 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_1 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_1 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2 -> m4_14  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=stringToken];
m4_2 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=stringToken];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_15  [key=2, style=dotted];
m4_8 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_17  [key=2, style=dotted];
m4_9 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_9 -> m4_7  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_16  [key=2, style=dotted];
m4_234 -> m4_235  [key=0, style=solid];
m4_240 -> m4_16  [key=2, style=dotted];
m4_240 -> m4_241  [key=0, style=solid];
m4_241 -> m4_16  [key=2, style=dotted];
m4_241 -> m4_242  [key=0, style=solid];
m4_242 -> m4_16  [key=2, style=dotted];
m4_242 -> m4_243  [key=0, style=solid];
m4_243 -> m4_16  [key=2, style=dotted];
m4_243 -> m4_244  [key=0, style=solid];
m4_239 -> m4_17  [key=2, style=dotted];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_241  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_239 -> m4_242  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_239 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
m4_239 -> m4_233  [key=2, style=dotted];
m4_235 -> m4_167  [key=2, style=dotted];
m4_235 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_235 -> m4_236  [key=0, style=solid];
m4_237 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_237 -> m4_245  [key=2, style=dotted];
m4_237 -> m4_246  [key=2, style=dotted];
m4_237 -> m4_238  [key=0, style=solid];
m4_237 -> m4_221  [key=2, style=dotted];
m4_238 -> m4_239  [key=0, style=solid];
m4_236 -> m4_237  [key=0, style=solid];
m4_244 -> m4_234  [key=0, style=bold, color=blue];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=2, style=dotted];
m4_40 -> m4_38  [key=0, style=bold, color=blue];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_93 -> m4_30  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_92 -> m4_29  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_92 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_92 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_88 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=typeSchema];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_98  [key=2, style=dotted];
m4_91 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=token];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_101  [key=2, style=dotted];
m4_91 -> m4_102  [key=2, style=dotted];
m4_91 -> m4_103  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_96  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_104  [key=2, style=dotted];
m4_95 -> m4_105  [key=2, style=dotted];
m4_95 -> m4_106  [key=2, style=dotted];
m4_86 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label=generator];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_97  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_99  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_100  [key=2, style=dotted];
m4_96 -> m4_85  [key=0, style=bold, color=blue];
m4_209 -> m4_210  [key=0, style=solid];
m4_213 -> m4_47  [key=2, style=dotted];
m4_213 -> m4_214  [key=0, style=solid];
m4_210 -> m4_167  [key=2, style=dotted];
m4_210 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_210 -> m4_211  [key=0, style=solid];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_179  [key=2, style=dotted];
m4_211 -> m4_212  [key=0, style=solid];
m4_214 -> m4_209  [key=0, style=bold, color=blue];
m4_203 -> m4_204  [key=0, style=solid];
m4_43 -> m4_13  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_31 -> m4_32  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_34  [key=2, style=dotted];
m4_44 -> m4_14  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=2, style=dotted];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_37 -> m4_35  [key=0, style=bold, color=blue];
m4_46 -> m4_42  [key=0, style=bold, color=blue];
m4_62 -> m4_63  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_154 -> m4_155  [key=0, style=solid];
m4_107 -> m4_108  [key=0, style=solid];
m4_63 -> m4_34  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_77 -> m4_34  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_108 -> m4_34  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_155 -> m4_34  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_165 -> m4_47  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_177 -> m4_47  [key=2, style=dotted];
m4_177 -> m4_178  [key=0, style=solid];
m4_188 -> m4_47  [key=2, style=dotted];
m4_188 -> m4_189  [key=0, style=solid];
m4_198 -> m4_47  [key=2, style=dotted];
m4_198 -> m4_199  [key=0, style=solid];
m4_207 -> m4_47  [key=2, style=dotted];
m4_207 -> m4_208  [key=0, style=solid];
m4_64 -> m4_62  [key=0, style=bold, color=blue];
m4_78 -> m4_76  [key=0, style=bold, color=blue];
m4_156 -> m4_154  [key=0, style=bold, color=blue];
m4_109 -> m4_107  [key=0, style=bold, color=blue];
m4_161 -> m4_167  [key=2, style=dotted];
m4_161 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_173 -> m4_167  [key=2, style=dotted];
m4_173 -> m4_177  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_175  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_184 -> m4_167  [key=2, style=dotted];
m4_184 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_194 -> m4_167  [key=2, style=dotted];
m4_194 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_204 -> m4_167  [key=2, style=dotted];
m4_204 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_204 -> m4_205  [key=0, style=solid];
m4_164 -> m4_168  [key=2, style=dotted];
m4_164 -> m4_165  [key=0, style=solid];
m4_187 -> m4_168  [key=2, style=dotted];
m4_187 -> m4_188  [key=0, style=solid];
m4_206 -> m4_168  [key=2, style=dotted];
m4_206 -> m4_207  [key=0, style=solid];
m4_166 -> m4_160  [key=0, style=bold, color=blue];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_179  [key=2, style=dotted];
m4_178 -> m4_172  [key=0, style=bold, color=blue];
m4_189 -> m4_183  [key=0, style=bold, color=blue];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_179  [key=2, style=dotted];
m4_199 -> m4_193  [key=0, style=bold, color=blue];
m4_160 -> m4_161  [key=0, style=solid];
m4_162 -> m4_163  [key=0, style=solid];
m4_163 -> m4_164  [key=0, style=solid];
m4_172 -> m4_173  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_175 -> m4_176  [key=0, style=solid];
m4_183 -> m4_184  [key=0, style=solid];
m4_185 -> m4_186  [key=0, style=solid];
m4_186 -> m4_187  [key=0, style=solid];
m4_193 -> m4_194  [key=0, style=solid];
m4_195 -> m4_196  [key=0, style=solid];
m4_196 -> m4_197  [key=0, style=solid];
m4_205 -> m4_206  [key=0, style=solid];
m4_208 -> m4_203  [key=0, style=bold, color=blue];
m4_146 -> m4_147  [key=0, style=solid];
m4_147 -> m4_13  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_61  [key=2, style=dotted];
m4_148 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_150 -> m4_30  [key=2, style=dotted];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_149 -> m4_29  [key=2, style=dotted];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_149 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_149 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_151 -> m4_16  [key=2, style=dotted];
m4_151 -> m4_152  [key=0, style=solid];
m4_152 -> m4_16  [key=2, style=dotted];
m4_152 -> m4_153  [key=0, style=solid];
m4_153 -> m4_146  [key=0, style=bold, color=blue];
m4_273 -> m4_274  [key=0, style=solid];
m4_279 -> m4_16  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_278 -> m4_17  [key=2, style=dotted];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_233  [key=2, style=dotted];
m4_274 -> m4_167  [key=2, style=dotted];
m4_274 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label=schema];
m4_274 -> m4_275  [key=0, style=solid];
m4_275 -> m4_167  [key=2, style=dotted];
m4_275 -> m4_272  [key=2, style=dotted];
m4_275 -> m4_276  [key=0, style=solid];
m4_276 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_276 -> m4_245  [key=2, style=dotted];
m4_276 -> m4_246  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_221  [key=2, style=dotted];
m4_277 -> m4_278  [key=0, style=solid];
m4_280 -> m4_273  [key=0, style=bold, color=blue];
m4_291 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_291 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_295 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_295 -> m4_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests"];
m4_292 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_293 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_294 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_296 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label=errors];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_7  [key=2, style=dotted];
m5_1 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=sw];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=jsonTextWriter];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_11  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_9  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_0  [key=0, style=bold, color=blue];
m6_159 -> m6_160  [key=0, style=solid];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_160  [key=3, color=green, style=bold, label="Local variable string json"];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_7  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_46  [key=2, style=dotted];
m6_163 -> m6_159  [key=0, style=bold, color=blue];
m6_48 -> m6_49  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_39  [key=2, style=dotted];
m6_49 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_49 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_57  [key=2, style=dotted];
m6_50 -> m6_42  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_57  [key=2, style=dotted];
m6_51 -> m6_42  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_58  [key=2, style=dotted];
m6_52 -> m6_45  [key=2, style=dotted];
m6_52 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_58  [key=2, style=dotted];
m6_53 -> m6_59  [key=2, style=dotted];
m6_53 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=deserializedDs];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_46  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_47  [key=2, style=dotted];
m6_56 -> m6_48  [key=0, style=bold, color=blue];
m6_127 -> m6_128  [key=0, style=solid];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_39  [key=2, style=dotted];
m6_128 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_128 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_57  [key=2, style=dotted];
m6_129 -> m6_42  [key=2, style=dotted];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_57  [key=2, style=dotted];
m6_130 -> m6_42  [key=2, style=dotted];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_141  [key=2, style=dotted];
m6_131 -> m6_57  [key=2, style=dotted];
m6_131 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_131 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_131 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_131 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_131 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_58  [key=2, style=dotted];
m6_132 -> m6_142  [key=2, style=dotted];
m6_132 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_46  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_46  [key=2, style=dotted];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_46  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_46  [key=2, style=dotted];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_46  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_46  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_58  [key=2, style=dotted];
m6_134 -> m6_59  [key=2, style=dotted];
m6_134 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_134 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_134 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_134 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_140 -> m6_127  [key=0, style=bold, color=blue];
m6_60 -> m6_61  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_61  [key=3, color=green, style=bold, label="Local variable string json"];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_7  [key=2, style=dotted];
m6_62 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_62 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_62 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_62 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_62 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_62 -> m6_81  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_47  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_46  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_46  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_46  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_73  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_67 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_46  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_46  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_46  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_46  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_46  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_46  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_46  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_46  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_46  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_46  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_46  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_46  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_46  [key=2, style=dotted];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_46  [key=2, style=dotted];
m6_82 -> m6_60  [key=0, style=bold, color=blue];
m6_143 -> m6_144  [key=0, style=solid];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_156  [key=2, style=dotted];
m6_144 -> m6_146  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_157  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_158  [key=2, style=dotted];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_46  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_156  [key=2, style=dotted];
m6_148 -> m6_150  [key=1, style=dashed, color=darkseagreen4, label=ds1];
m6_148 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=ds1];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label=table];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_43  [key=2, style=dotted];
m6_150 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label=row];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_158  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_42  [key=2, style=dotted];
m6_151 -> m6_152  [key=0, style=solid];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_46  [key=2, style=dotted];
m6_155 -> m6_143  [key=0, style=bold, color=blue];
m6_118 -> m6_119  [key=0, style=solid];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_39  [key=2, style=dotted];
m6_119 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_119 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=ds];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_57  [key=2, style=dotted];
m6_120 -> m6_42  [key=2, style=dotted];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_57  [key=2, style=dotted];
m6_121 -> m6_42  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_125  [key=2, style=dotted];
m6_122 -> m6_126  [key=2, style=dotted];
m6_122 -> m6_45  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_46  [key=2, style=dotted];
m6_124 -> m6_118  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_39  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m6_10 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m6_10 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m6_10 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_40  [key=2, style=dotted];
m6_11 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=table];
m6_11 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=table];
m6_11 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=table];
m6_11 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=table];
m6_11 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=table];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_42  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_44  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_45  [key=2, style=dotted];
m6_25 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_41  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_42  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_42  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_43  [key=2, style=dotted];
m6_20 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=newRow];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_42  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=idColumn];
m6_13 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=idColumn];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_41  [key=2, style=dotted];
m6_14 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=itemColumn];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_18 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_18 -> m6_18  [key=3, color=green, style=bold, label="Local variable int i"];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_24  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_23 -> m6_19  [key=0, style=solid];
m6_23 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_46  [key=2, style=dotted];
m6_26 -> m6_26  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JArray JArrayNestedBuild"];
m6_26 -> m6_28  [key=3, color=green, style=bold, label="Local variable Newtonsoft.Json.Linq.JArray current"];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_7  [key=2, style=dotted];
m6_27 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label=deserializedDataSet];
m6_27 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label=deserializedDataSet];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_47  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_46  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_30 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_30 -> m6_34  [key=1, style=dashed, color=green, label=dt];
m6_30 -> m6_35  [key=1, style=dashed, color=green, label=dt];
m6_30 -> m6_36  [key=1, style=dashed, color=green, label=dt];
m6_30 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=dt];
m6_31 -> m6_32  [key=0, style=solid, color=red];
m6_31 -> m6_46  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid, color=red];
m6_32 -> m6_46  [key=2, style=dotted, color=red];
m6_33 -> m6_34  [key=0, style=solid, color=green];
m6_33 -> m6_46  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid, color=green];
m6_34 -> m6_46  [key=2, style=dotted, color=green];
m6_35 -> m6_36  [key=0, style=solid, color=green];
m6_35 -> m6_46  [key=2, style=dotted, color=green];
m6_36 -> m6_37  [key=0, style=solid, color=green];
m6_36 -> m6_46  [key=2, style=dotted, color=green];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_46  [key=2, style=dotted];
m6_38 -> m6_8  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_57 -> m6_83  [key=0, style=solid];
m6_57 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_57 -> m6_50  [key=3, color=green, style=bold, label="Parameter variable int rows"];
m6_57 -> m6_51  [key=3, color=green, style=bold, label="Parameter variable int rows"];
m6_57 -> m6_131  [key=3, color=green, style=bold, label="Parameter variable string dataTableName"];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_40  [key=2, style=dotted];
m6_83 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_83 -> m6_89  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_83 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_83 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_83 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_83 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_83 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_83 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_83 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=myTable];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_114  [key=0, style=solid];
m6_104 -> m6_51  [key=3, color=green, style=bold, label="Local variable int i"];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_41  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_42  [key=2, style=dotted];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_42  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_42  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_42  [key=2, style=dotted];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_42  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_42  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_43  [key=2, style=dotted];
m6_105 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m6_105 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m6_105 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m6_105 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m6_105 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m6_105 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=myNewRow];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_42  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_85  [key=1, style=dashed, color=darkseagreen4, label=colString];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_41  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_88  [key=1, style=dashed, color=darkseagreen4, label=colInt32];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_41  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label=colBoolean];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_41  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label=colTimeSpan];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_41  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label=colDateTime];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label=colDateTime];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_41  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label=colDecimal];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_103 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_107 -> m6_108  [key=0, style=solid];
m6_113 -> m6_104  [key=0, style=solid];
m6_113 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_106 -> m6_107  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_116  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_117  [key=2, style=dotted];
m6_111 -> m6_112  [key=0, style=solid];
m6_115 -> m6_57  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_1 -> m6_1  [key=3, color=green, style=bold, label="Local variable int i"];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_164 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m6_164 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m6_164 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m6_164 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m6_164 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m6_164 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m6_164 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests"];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=2, style=dotted];
m7_5 -> m7_8  [key=2, style=dotted];
m7_6 -> m7_4  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=2, style=dotted];
m7_11 -> m7_9  [key=0, style=bold, color=blue];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_15 -> m7_13  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_8  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_21  [key=2, style=dotted];
m8_20 -> m8_17  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_7  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_2 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_2 -> m8_2  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_6  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_8  [key=2, style=dotted];
m8_5 -> m8_3  [key=0, style=solid];
m8_5 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_6 -> m8_0  [key=0, style=bold, color=blue];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_13  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_9  [key=0, style=bold, color=blue];
m8_22 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks"];
m8_22 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks"];
m8_22 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks"];
m8_22 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks"];
m8_22 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks"];
m8_22 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks"];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_9  [key=2, style=dotted];
m9_8 -> m9_5  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [key=2, style=dotted];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label=text];
m9_11 -> m9_11  [key=3, color=darkorchid, style=bold, label="Local variable string text"];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_16  [key=2, style=dotted];
m9_12 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label=w];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_17  [key=2, style=dotted];
m9_14 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_13  [key=3, color=darkorchid, style=bold, label="Local variable char[] buffer"];
m9_15 -> m9_10  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_1 -> m10_4  [key=2, style=dotted];
m10_1 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_12  [key=2, style=dotted];
m11_7 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_13  [key=2, style=dotted];
m11_8 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_14  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_11 -> m11_6  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_4  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_5  [key=2, style=dotted];
m11_3 -> m11_0  [key=0, style=bold, color=blue];
m12_616 -> m12_617  [key=0, style=solid];
m12_620 -> m12_9  [key=2, style=dotted];
m12_620 -> m12_621  [key=0, style=solid];
m12_618 -> m12_7  [key=2, style=dotted];
m12_618 -> m12_619  [key=0, style=solid];
m12_618 -> m12_160  [key=2, style=dotted];
m12_619 -> m12_620  [key=0, style=solid];
m12_617 -> m12_618  [key=0, style=solid];
m12_621 -> m12_616  [key=0, style=bold, color=blue];
m12_318 -> m12_319  [key=0, style=solid];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_311  [key=2, style=dotted];
m12_320 -> m12_318  [key=0, style=bold, color=blue];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_217  [key=2, style=dotted];
m12_219 -> m12_220  [key=0, style=solid];
m12_219 -> m12_57  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_28  [key=3, color=darkorchid, style=bold, label="method methodReturn string DataContractSerializer"];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_59  [key=3, color=darkorchid, style=bold, label="method methodReturn string JavaScriptSerializer"];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_59  [key=2, style=dotted];
m12_58 -> m12_56  [key=0, style=bold, color=blue];
m12_58 -> m12_59  [key=0, style=solid, color=green];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_181  [key=0, style=solid];
m12_183 -> m12_219  [key=2, style=dotted];
m12_183 -> m12_183  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m12_187 -> m12_9  [key=2, style=dotted];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_217  [key=2, style=dotted];
m12_189 -> m12_9  [key=2, style=dotted];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_217  [key=2, style=dotted];
m12_192 -> m12_9  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_216  [key=2, style=dotted];
m12_193 -> m12_9  [key=2, style=dotted];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_217  [key=2, style=dotted];
m12_194 -> m12_9  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_219  [key=2, style=dotted];
m12_195 -> m12_9  [key=2, style=dotted];
m12_195 -> m12_196  [key=0, style=solid];
m12_195 -> m12_217  [key=2, style=dotted];
m12_196 -> m12_9  [key=2, style=dotted];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_219  [key=2, style=dotted];
m12_197 -> m12_9  [key=2, style=dotted];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_217  [key=2, style=dotted];
m12_184 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label=listRef];
m12_184 -> m12_82  [key=2, style=dotted];
m12_184 -> m12_185  [key=0, style=solid];
m12_184 -> m12_221  [key=2, style=dotted];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_182  [key=2, style=dotted];
m12_186 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_186 -> m12_219  [key=2, style=dotted];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_75  [key=2, style=dotted];
m12_188 -> m12_190  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m12_188 -> m12_191  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m12_188 -> m12_219  [key=2, style=dotted];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_57  [key=2, style=dotted];
m12_190 -> m12_219  [key=2, style=dotted];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label=nested];
m12_191 -> m12_194  [key=1, style=dashed, color=darkseagreen4, label=nested];
m12_191 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label=nested];
m12_191 -> m12_196  [key=1, style=dashed, color=darkseagreen4, label=nested];
m12_191 -> m12_197  [key=1, style=dashed, color=darkseagreen4, label=nested];
m12_191 -> m12_217  [key=2, style=dotted];
m12_185 -> m12_15  [key=2, style=dotted];
m12_185 -> m12_186  [key=0, style=solid];
m12_185 -> m12_181  [key=2, style=dotted];
m12_185 -> m12_217  [key=2, style=dotted];
m12_198 -> m12_183  [key=0, style=bold, color=blue];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_219  [key=2, style=dotted];
m12_152 -> m12_153  [key=0, style=solid];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_104 -> m12_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_104 -> m12_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_104 -> m12_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_104 -> m12_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_104 -> m12_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_104 -> m12_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_104 -> m12_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_104 -> m12_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_279 -> m12_280  [key=0, style=solid];
m12_284 -> m12_75  [key=2, style=dotted];
m12_284 -> m12_285  [key=0, style=solid];
m12_283 -> m12_182  [key=2, style=dotted];
m12_283 -> m12_284  [key=0, style=solid];
m12_280 -> m12_287  [key=2, style=dotted];
m12_280 -> m12_283  [key=1, style=dashed, color=darkseagreen4, label=message];
m12_280 -> m12_281  [key=0, style=solid];
m12_280 -> m12_282  [key=1, style=dashed, color=darkseagreen4, label=message];
m12_285 -> m12_286  [key=0, style=solid];
m12_282 -> m12_283  [key=0, style=solid];
m12_282 -> m12_288  [key=2, style=dotted];
m12_281 -> m12_282  [key=0, style=solid];
m12_286 -> m12_279  [key=0, style=bold, color=blue];
m12_653 -> m12_656  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_653 -> m12_659  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_653 -> m12_654  [key=0, style=solid];
m12_653 -> m12_658  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_656 -> m12_657  [key=0, style=solid];
m12_656 -> m12_658  [key=0, style=solid];
m12_656 -> m12_662  [key=2, style=dotted];
m12_659 -> m12_661  [key=0, style=solid];
m12_659 -> m12_663  [key=2, style=dotted];
m12_654 -> m12_656  [key=0, style=solid];
m12_654 -> m12_655  [key=0, style=solid];
m12_657 -> m12_661  [key=0, style=solid];
m12_658 -> m12_659  [key=0, style=solid];
m12_658 -> m12_660  [key=0, style=solid];
m12_655 -> m12_661  [key=0, style=solid];
m12_660 -> m12_661  [key=0, style=solid];
m12_661 -> m12_653  [key=0, style=bold, color=blue];
m12_580 -> m12_581  [key=0, style=solid];
m12_584 -> m12_9  [key=2, style=dotted];
m12_584 -> m12_585  [key=0, style=solid];
m12_587 -> m12_9  [key=2, style=dotted];
m12_587 -> m12_588  [key=0, style=solid];
m12_588 -> m12_9  [key=2, style=dotted];
m12_588 -> m12_589  [key=0, style=solid];
m12_582 -> m12_7  [key=2, style=dotted];
m12_582 -> m12_583  [key=0, style=solid];
m12_582 -> m12_585  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_583 -> m12_584  [key=0, style=solid];
m12_583 -> m12_568  [key=2, style=dotted];
m12_583 -> m12_585  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_585 -> m12_587  [key=1, style=dashed, color=darkseagreen4, label=p2];
m12_585 -> m12_588  [key=1, style=dashed, color=darkseagreen4, label=p2];
m12_585 -> m12_586  [key=0, style=solid];
m12_585 -> m12_160  [key=2, style=dotted];
m12_586 -> m12_587  [key=0, style=solid];
m12_586 -> m12_57  [key=2, style=dotted];
m12_581 -> m12_582  [key=0, style=solid];
m12_581 -> m12_583  [key=1, style=dashed, color=darkseagreen4, label=p];
m12_581 -> m12_578  [key=2, style=dotted];
m12_581 -> m12_590  [key=2, style=dotted];
m12_589 -> m12_580  [key=0, style=bold, color=blue];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_0  [key=0, style=bold, color=blue];
m12_23 -> m12_24  [key=0, style=solid, color=green];
m12_23 -> m12_27  [key=2, style=dotted, color=green];
m12_23 -> m12_28  [key=1, style=dashed, color=green, label="lambda expression"];
m12_18 -> m12_23  [key=1, style=dashed, color=green, label=sb];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_25  [key=2, style=dotted];
m12_18 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=sb];
m12_18 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=sb];
m12_20 -> m12_23  [key=0, style=solid, color=green];
m12_20 -> m12_21  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_26  [key=2, style=dotted];
m12_22 -> m12_20  [key=0, style=solid];
m12_22 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_24 -> m12_17  [key=0, style=bold, color=blue];
m12_627 -> m12_628  [key=0, style=solid];
m12_628 -> m12_630  [key=2, style=dotted];
m12_628 -> m12_629  [key=0, style=solid];
m12_629 -> m12_627  [key=0, style=bold, color=blue];
m12_289 -> m12_290  [key=0, style=solid];
m12_293 -> m12_9  [key=2, style=dotted];
m12_293 -> m12_294  [key=0, style=solid];
m12_297 -> m12_9  [key=2, style=dotted];
m12_297 -> m12_298  [key=0, style=solid];
m12_298 -> m12_9  [key=2, style=dotted];
m12_298 -> m12_299  [key=0, style=solid];
m12_300 -> m12_9  [key=2, style=dotted];
m12_300 -> m12_301  [key=0, style=solid];
m12_291 -> m12_7  [key=2, style=dotted];
m12_291 -> m12_8  [key=2, style=dotted];
m12_291 -> m12_293  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_291 -> m12_292  [key=0, style=solid];
m12_291 -> m12_294  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_294 -> m12_7  [key=2, style=dotted];
m12_294 -> m12_295  [key=0, style=solid];
m12_294 -> m12_303  [key=2, style=dotted];
m12_294 -> m12_296  [key=1, style=dashed, color=darkseagreen4, label=c];
m12_290 -> m12_5  [key=2, style=dotted];
m12_290 -> m12_291  [key=0, style=solid];
m12_290 -> m12_15  [key=2, style=dotted];
m12_290 -> m12_302  [key=2, style=dotted];
m12_292 -> m12_293  [key=0, style=solid];
m12_292 -> m12_82  [key=2, style=dotted];
m12_296 -> m12_297  [key=0, style=solid];
m12_296 -> m12_298  [key=1, style=dashed, color=darkseagreen4, label=newCollection];
m12_296 -> m12_299  [key=1, style=dashed, color=darkseagreen4, label=newCollection];
m12_299 -> m12_300  [key=0, style=solid];
m12_295 -> m12_296  [key=0, style=solid];
m12_295 -> m12_57  [key=2, style=dotted];
m12_301 -> m12_289  [key=0, style=bold, color=blue];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_84  [key=2, style=dotted];
m12_569 -> m12_570  [key=0, style=solid];
m12_573 -> m12_9  [key=2, style=dotted];
m12_573 -> m12_574  [key=0, style=solid];
m12_576 -> m12_9  [key=2, style=dotted];
m12_576 -> m12_577  [key=0, style=solid];
m12_571 -> m12_7  [key=2, style=dotted];
m12_571 -> m12_572  [key=0, style=solid];
m12_571 -> m12_574  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_572 -> m12_573  [key=0, style=solid];
m12_572 -> m12_568  [key=2, style=dotted];
m12_572 -> m12_574  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_574 -> m12_576  [key=1, style=dashed, color=darkseagreen4, label=p2];
m12_574 -> m12_575  [key=0, style=solid];
m12_574 -> m12_160  [key=2, style=dotted];
m12_575 -> m12_576  [key=0, style=solid];
m12_575 -> m12_57  [key=2, style=dotted];
m12_570 -> m12_571  [key=0, style=solid];
m12_570 -> m12_572  [key=1, style=dashed, color=darkseagreen4, label=p];
m12_570 -> m12_578  [key=2, style=dotted];
m12_570 -> m12_579  [key=2, style=dotted];
m12_577 -> m12_569  [key=0, style=bold, color=blue];
m12_42 -> m12_52  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_51  [key=2, style=dotted];
m12_42 -> m12_53  [key=2, style=dotted];
m12_218 -> m12_9  [key=2, style=dotted];
m12_218 -> m12_219  [key=0, style=solid];
m12_664 -> m12_665  [key=0, style=solid];
m12_665 -> m12_666  [key=0, style=solid];
m12_665 -> m12_667  [key=0, style=solid];
m12_667 -> m12_668  [key=0, style=solid];
m12_667 -> m12_669  [key=2, style=dotted];
m12_666 -> m12_668  [key=0, style=solid];
m12_668 -> m12_664  [key=0, style=bold, color=blue];
m12_39 -> m12_40  [key=0, style=solid];
m12_44 -> m12_9  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_46  [key=2, style=dotted];
m12_47 -> m12_38  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_52  [key=2, style=dotted];
m12_47 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label=ms];
m12_47 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label=ms];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_54  [key=2, style=dotted];
m12_43 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_43 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_55  [key=2, style=dotted];
m12_45 -> m12_56  [key=2, style=dotted];
m12_45 -> m12_43  [key=0, style=bold, color=blue];
m12_46 -> m12_34  [key=2, style=dotted];
m12_46 -> m12_35  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_40 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m12_40 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_233  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_57  [key=2, style=dotted];
m12_48 -> m12_53  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label=sw];
m12_41 -> m12_150  [key=2, style=dotted];
m12_49 -> m12_39  [key=0, style=bold, color=blue];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_54  [key=2, style=dotted];
m12_225 -> m12_223  [key=0, style=bold, color=blue];
m12_199 -> m12_200  [key=0, style=solid];
m12_199 -> m12_221  [key=2, style=dotted];
m12_204 -> m12_9  [key=2, style=dotted];
m12_204 -> m12_205  [key=0, style=solid];
m12_204 -> m12_217  [key=2, style=dotted];
m12_201 -> m12_7  [key=2, style=dotted];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_206  [key=2, style=dotted];
m12_201 -> m12_90  [key=2, style=dotted];
m12_201 -> m12_203  [key=1, style=dashed, color=darkseagreen4, label=p];
m12_201 -> m12_218  [key=2, style=dotted];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_216  [key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_200 -> m12_217  [key=2, style=dotted];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_57  [key=2, style=dotted];
m12_202 -> m12_211  [key=0, style=solid];
m12_202 -> m12_205  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_202 -> m12_207  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_202 -> m12_209  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_205 -> m12_199  [key=0, style=bold, color=blue];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_219  [key=2, style=dotted];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_237  [key=2, style=dotted];
m12_88 -> m12_9  [key=2, style=dotted];
m12_88 -> m12_89  [key=0, style=solid];
m12_162 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label=containerTypeName];
m12_162 -> m12_163  [key=0, style=solid];
m12_153 -> m12_7  [key=2, style=dotted];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_160  [key=2, style=dotted];
m12_153 -> m12_155  [key=1, style=dashed, color=darkseagreen4, label=message];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_157  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_155 -> m12_158  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_104  [key=3, color=darkorchid, style=bold, label="method methodReturn string JsonNetManual"];
m12_101 -> m12_7  [key=2, style=dotted];
m12_101 -> m12_8  [key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_104  [key=2, style=dotted];
m12_102 -> m12_9  [key=2, style=dotted];
m12_102 -> m12_102  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] JsonNetBson"];
m12_103 -> m12_101  [key=0, style=bold, color=blue];
m12_103 -> m12_97  [key=0, style=bold, color=blue];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_226  [key=2, style=dotted];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_202  [key=0, style=solid];
m12_210 -> m12_221  [key=2, style=dotted];
m12_214 -> m12_9  [key=2, style=dotted];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_162  [key=2, style=dotted];
m12_221 -> m12_9  [key=2, style=dotted];
m12_221 -> m12_222  [key=0, style=solid];
m12_213 -> m12_7  [key=2, style=dotted];
m12_213 -> m12_8  [key=2, style=dotted];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_215  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_213 -> m12_222  [key=2, style=dotted];
m12_215 -> m12_7  [key=2, style=dotted];
m12_215 -> m12_216  [key=0, style=solid];
m12_215 -> m12_223  [key=2, style=dotted];
m12_215 -> m12_160  [key=2, style=dotted];
m12_215 -> m12_217  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m12_215 -> m12_219  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m12_215 -> m12_220  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m12_215 -> m12_166  [key=0, style=bold, color=blue];
m12_217 -> m12_218  [key=0, style=solid];
m12_220 -> m12_221  [key=0, style=solid];
m12_211 -> m12_213  [key=1, style=dashed, color=darkseagreen4, label=binder];
m12_211 -> m12_212  [key=0, style=solid];
m12_211 -> m12_223  [key=2, style=dotted];
m12_211 -> m12_220  [key=2, style=dotted];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_15  [key=2, style=dotted];
m12_212 -> m12_224  [key=2, style=dotted];
m12_212 -> m12_225  [key=2, style=dotted];
m12_212 -> m12_221  [key=2, style=dotted];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_57  [key=2, style=dotted];
m12_222 -> m12_210  [key=0, style=bold, color=blue];
m12_106 -> m12_107  [key=0, style=solid, color=green];
m12_106 -> m12_151  [key=2, style=dotted];
m12_106 -> m12_108  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_109  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_111  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_112  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_113  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_114  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_116  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_118  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_119  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_120  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_121  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_122  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_123  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_124  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_125  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_126  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_127  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_128  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_129  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_130  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_131  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_132  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_133  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_134  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_135  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_137  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_138  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_139  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_140  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_141  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_142  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_143  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_144  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_145  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_146  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_106 -> m12_147  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_107 -> m12_108  [key=0, style=solid, color=green];
m12_107 -> m12_109  [key=1, style=dashed, color=green, label=employeeRef];
m12_107 -> m12_152  [key=2, style=dotted];
m12_108 -> m12_109  [key=0, style=solid, color=green];
m12_108 -> m12_153  [key=2, style=dotted];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_154  [key=2, style=dotted];
m12_111 -> m12_9  [key=2, style=dotted];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_110  [key=0, style=solid];
m12_111 -> m12_155  [key=2, style=dotted];
m12_119 -> m12_9  [key=2, style=dotted];
m12_119 -> m12_120  [key=0, style=solid];
m12_119 -> m12_153  [key=2, style=dotted];
m12_120 -> m12_9  [key=2, style=dotted];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_155  [key=2, style=dotted];
m12_114 -> m12_9  [key=2, style=dotted];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_152  [key=2, style=dotted];
m12_115 -> m12_9  [key=2, style=dotted];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_118  [key=0, style=solid];
m12_116 -> m12_9  [key=2, style=dotted];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_153  [key=2, style=dotted];
m12_116 -> m12_116  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m12_117 -> m12_9  [key=2, style=dotted];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_105  [key=2, style=dotted];
m12_117 -> m12_115  [key=0, style=solid];
m12_117 -> m12_157  [key=2, style=dotted];
m12_117 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m12_118 -> m12_9  [key=2, style=dotted];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_105  [key=2, style=dotted];
m12_118 -> m12_158  [key=2, style=dotted];
m12_110 -> m12_7  [key=2, style=dotted];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_119  [key=1, style=dashed, color=darkseagreen4, label=values];
m12_110 -> m12_120  [key=1, style=dashed, color=darkseagreen4, label=values];
m12_110 -> m12_90  [key=2, style=dotted];
m12_110 -> m12_112  [key=1, style=dashed, color=darkseagreen4, label=values];
m12_110 -> m12_113  [key=1, style=dashed, color=darkseagreen4, label=values];
m12_112 -> m12_114  [key=1, style=dashed, color=darkseagreen4, label=e];
m12_112 -> m12_115  [key=1, style=dashed, color=darkseagreen4, label=e];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_156  [key=2, style=dotted];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_116  [key=1, style=dashed, color=darkseagreen4, label=p];
m12_113 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label=p];
m12_113 -> m12_118  [key=1, style=dashed, color=darkseagreen4, label=p];
m12_113 -> m12_153  [key=2, style=dotted];
m12_121 -> m12_106  [key=0, style=bold, color=blue];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_153  [key=2, style=dotted];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_226  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] JsonNetBson"];
m12_236 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_236 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_236 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_236 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_236 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_236 -> m12_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_236 -> m12_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_236 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_236 -> m12_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks"];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_22  [key=2, style=dotted];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_152  [key=2, style=dotted];
m12_159 -> m12_150  [key=0, style=bold, color=blue];
m12_122 -> m12_123  [key=0, style=solid];
m12_122 -> m12_159  [key=2, style=dotted];
m12_126 -> m12_7  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_129  [key=0, style=solid];
m12_126 -> m12_90  [key=2, style=dotted];
m12_126 -> m12_152  [key=2, style=dotted];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_153  [key=2, style=dotted];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_153  [key=2, style=dotted];
m12_123 -> m12_125  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_128  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m12_123 -> m12_153  [key=2, style=dotted];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_128  [key=1, style=dashed, color=darkseagreen4, label=personRef];
m12_124 -> m12_160  [key=2, style=dotted];
m12_128 -> m12_129  [key=0, style=solid];
m12_128 -> m12_56  [key=2, style=dotted];
m12_128 -> m12_130  [key=2, style=dotted];
m12_128 -> m12_160  [key=2, style=dotted];
m12_129 -> m12_122  [key=0, style=bold, color=blue];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_153  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_161 -> m12_162  [key=0, style=solid];
m12_166 -> m12_9  [key=2, style=dotted];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_170  [key=0, style=solid];
m12_166 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Formatting"];
m12_166 -> m12_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_166 -> m12_86  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Formatting formatting"];
m12_166 -> m12_168  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Formatting formatting"];
m12_165 -> m12_7  [key=2, style=dotted];
m12_165 -> m12_8  [key=2, style=dotted];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_163  [key=0, style=bold, color=blue];
m12_163 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label=productListTypeName];
m12_163 -> m12_164  [key=0, style=solid];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_15  [key=2, style=dotted];
m12_164 -> m12_168  [key=2, style=dotted];
m12_164 -> m12_166  [key=2, style=dotted];
m12_167 -> m12_161  [key=0, style=bold, color=blue];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_166  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Threading.Tasks.Task<string> JsonNetManualIndentedAsync"];
m12_238 -> m12_239  [key=0, style=solid];
m12_257 -> m12_9  [key=2, style=dotted];
m12_257 -> m12_258  [key=0, style=solid];
m12_267 -> m12_9  [key=2, style=dotted];
m12_267 -> m12_268  [key=0, style=solid];
m12_270 -> m12_9  [key=2, style=dotted];
m12_270 -> m12_271  [key=0, style=solid];
m12_263 -> m12_38  [key=2, style=dotted];
m12_263 -> m12_267  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_265  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m12_263 -> m12_266  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m12_263 -> m12_268  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m12_241 -> m12_5  [key=2, style=dotted];
m12_241 -> m12_242  [key=0, style=solid];
m12_252 -> m12_257  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_54  [key=2, style=dotted];
m12_252 -> m12_258  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_256 -> m12_257  [key=0, style=solid];
m12_258 -> m12_35  [key=2, style=dotted];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_261  [key=1, style=dashed, color=darkseagreen4, label=sr];
m12_266 -> m12_267  [key=0, style=solid];
m12_266 -> m12_57  [key=2, style=dotted];
m12_268 -> m12_270  [key=1, style=dashed, color=darkseagreen4, label=list];
m12_268 -> m12_269  [key=0, style=solid];
m12_268 -> m12_271  [key=1, style=dashed, color=darkseagreen4, label=list];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_57  [key=2, style=dotted];
m12_271 -> m12_272  [key=0, style=solid];
m12_271 -> m12_57  [key=2, style=dotted];
m12_261 -> m12_34  [key=2, style=dotted];
m12_261 -> m12_263  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m12_261 -> m12_262  [key=0, style=solid];
m12_259 -> m12_263  [key=1, style=dashed, color=darkseagreen4, label=deserializingTester];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_233  [key=2, style=dotted];
m12_259 -> m12_262  [key=1, style=dashed, color=darkseagreen4, label=deserializingTester];
m12_262 -> m12_263  [key=0, style=solid];
m12_264 -> m12_265  [key=0, style=solid];
m12_264 -> m12_278  [key=2, style=dotted];
m12_265 -> m12_266  [key=0, style=solid];
m12_265 -> m12_57  [key=2, style=dotted];
m12_242 -> m12_15  [key=2, style=dotted];
m12_242 -> m12_243  [key=0, style=solid];
m12_242 -> m12_275  [key=2, style=dotted];
m12_239 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m12_239 -> m12_242  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m12_239 -> m12_240  [key=0, style=solid];
m12_239 -> m12_273  [key=2, style=dotted];
m12_239 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m12_239 -> m12_244  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m12_239 -> m12_251  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_274  [key=2, style=dotted];
m12_253 -> m12_82  [key=2, style=dotted];
m12_253 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label=contentSubClassRef];
m12_253 -> m12_254  [key=0, style=solid];
m12_254 -> m12_82  [key=2, style=dotted];
m12_254 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label=dictionaryRef];
m12_254 -> m12_255  [key=0, style=solid];
m12_255 -> m12_82  [key=2, style=dotted];
m12_255 -> m12_256  [key=0, style=solid];
m12_251 -> m12_252  [key=0, style=solid];
m12_251 -> m12_277  [key=2, style=dotted];
m12_247 -> m12_252  [key=1, style=dashed, color=darkseagreen4, label=sw];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_150  [key=2, style=dotted];
m12_260 -> m12_261  [key=0, style=solid];
m12_248 -> m12_51  [key=2, style=dotted];
m12_248 -> m12_251  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m12_248 -> m12_249  [key=0, style=solid];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_274  [key=2, style=dotted];
m12_243 -> m12_276  [key=2, style=dotted];
m12_244 -> m12_245  [key=0, style=solid];
m12_244 -> m12_274  [key=2, style=dotted];
m12_245 -> m12_251  [key=1, style=dashed, color=darkseagreen4, label=serializingTester];
m12_245 -> m12_246  [key=0, style=solid];
m12_245 -> m12_233  [key=2, style=dotted];
m12_245 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=serializingTester];
m12_250 -> m12_251  [key=0, style=solid];
m12_246 -> m12_247  [key=0, style=solid];
m12_249 -> m12_250  [key=0, style=solid];
m12_272 -> m12_238  [key=0, style=bold, color=blue];
m12_362 -> m12_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m12_362 -> m12_363  [key=0, style=solid];
m12_362 -> m12_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.TypeNameHandling"];
m12_362 -> m12_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m12_371 -> m12_9  [key=2, style=dotted];
m12_371 -> m12_372  [key=0, style=solid];
m12_370 -> m12_38  [key=2, style=dotted];
m12_370 -> m12_371  [key=0, style=solid];
m12_370 -> m12_34  [key=2, style=dotted];
m12_370 -> m12_35  [key=2, style=dotted];
m12_370 -> m12_54  [key=2, style=dotted];
m12_364 -> m12_370  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_364 -> m12_365  [key=0, style=solid];
m12_364 -> m12_150  [key=2, style=dotted];
m12_364 -> m12_367  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_364 -> m12_368  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_365 -> m12_370  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m12_365 -> m12_366  [key=0, style=solid];
m12_365 -> m12_233  [key=2, style=dotted];
m12_365 -> m12_367  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m12_369 -> m12_370  [key=0, style=solid];
m12_369 -> m12_375  [key=2, style=dotted];
m12_363 -> m12_364  [key=0, style=solid];
m12_363 -> m12_373  [key=2, style=dotted];
m12_363 -> m12_374  [key=2, style=dotted];
m12_366 -> m12_367  [key=0, style=solid];
m12_367 -> m12_51  [key=2, style=dotted];
m12_367 -> m12_368  [key=0, style=solid];
m12_367 -> m12_277  [key=2, style=dotted];
m12_368 -> m12_369  [key=0, style=solid];
m12_368 -> m12_54  [key=2, style=dotted];
m12_368 -> m12_374  [key=2, style=dotted];
m12_372 -> m12_362  [key=0, style=bold, color=blue];
m12_435 -> m12_436  [key=0, style=solid];
m12_444 -> m12_9  [key=2, style=dotted];
m12_444 -> m12_445  [key=0, style=solid];
m12_448 -> m12_9  [key=2, style=dotted];
m12_448 -> m12_449  [key=0, style=solid];
m12_451 -> m12_9  [key=2, style=dotted];
m12_451 -> m12_452  [key=0, style=solid];
m12_451 -> m12_454  [key=2, style=dotted];
m12_442 -> m12_444  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_442 -> m12_443  [key=0, style=solid];
m12_442 -> m12_182  [key=2, style=dotted];
m12_442 -> m12_445  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_443 -> m12_444  [key=0, style=solid];
m12_445 -> m12_448  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_445 -> m12_451  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_445 -> m12_446  [key=0, style=solid];
m12_445 -> m12_75  [key=2, style=dotted];
m12_445 -> m12_447  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_445 -> m12_449  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_445 -> m12_450  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_447 -> m12_448  [key=0, style=solid];
m12_447 -> m12_57  [key=2, style=dotted];
m12_449 -> m12_450  [key=0, style=solid];
m12_449 -> m12_57  [key=2, style=dotted];
m12_450 -> m12_451  [key=0, style=solid];
m12_450 -> m12_57  [key=2, style=dotted];
m12_436 -> m12_442  [key=1, style=dashed, color=darkseagreen4, label=o1];
m12_436 -> m12_437  [key=0, style=solid];
m12_436 -> m12_453  [key=2, style=dotted];
m12_436 -> m12_438  [key=1, style=dashed, color=darkseagreen4, label=o1];
m12_436 -> m12_439  [key=1, style=dashed, color=darkseagreen4, label=o1];
m12_436 -> m12_440  [key=1, style=dashed, color=darkseagreen4, label=o1];
m12_436 -> m12_441  [key=1, style=dashed, color=darkseagreen4, label=o1];
m12_441 -> m12_442  [key=0, style=solid];
m12_446 -> m12_447  [key=0, style=solid];
m12_446 -> m12_278  [key=2, style=dotted];
m12_437 -> m12_418  [key=2, style=dotted];
m12_437 -> m12_438  [key=0, style=solid];
m12_439 -> m12_418  [key=2, style=dotted];
m12_439 -> m12_440  [key=0, style=solid];
m12_438 -> m12_439  [key=0, style=solid];
m12_440 -> m12_441  [key=0, style=solid];
m12_452 -> m12_435  [key=0, style=bold, color=blue];
m12_93 -> m12_94  [key=0, style=solid];
m12_321 -> m12_322  [key=0, style=solid];
m12_321 -> m12_324  [key=0, style=bold, color=crimson];
m12_321 -> m12_323  [key=0, style=bold, color=crimson];
m12_321 -> m12_328  [key=0, style=bold, color=crimson];
m12_322 -> m12_323  [key=0, style=solid];
m12_322 -> m12_324  [key=0, style=solid];
m12_324 -> m12_325  [key=0, style=solid];
m12_325 -> m12_326  [key=0, style=solid];
m12_325 -> m12_327  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m12_325 -> m12_328  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m12_325 -> m12_329  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m12_323 -> m12_324  [key=0, style=solid];
m12_326 -> m12_327  [key=0, style=solid];
m12_326 -> m12_330  [key=0, style=solid];
m12_327 -> m12_328  [key=0, style=solid];
m12_327 -> m12_329  [key=0, style=solid];
m12_328 -> m12_329  [key=0, style=solid];
m12_329 -> m12_326  [key=0, style=solid];
m12_329 -> m12_329  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m12_330 -> m12_321  [key=0, style=bold, color=blue];
m12_455 -> m12_456  [key=0, style=solid];
m12_459 -> m12_9  [key=2, style=dotted];
m12_459 -> m12_460  [key=0, style=solid];
m12_461 -> m12_9  [key=2, style=dotted];
m12_461 -> m12_462  [key=0, style=solid];
m12_466 -> m12_9  [key=2, style=dotted];
m12_466 -> m12_467  [key=0, style=solid];
m12_458 -> m12_459  [key=0, style=solid];
m12_458 -> m12_182  [key=2, style=dotted];
m12_458 -> m12_460  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_460 -> m12_461  [key=0, style=solid];
m12_460 -> m12_75  [key=2, style=dotted];
m12_460 -> m12_462  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_460 -> m12_463  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_460 -> m12_464  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_460 -> m12_465  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_462 -> m12_463  [key=0, style=solid];
m12_462 -> m12_57  [key=2, style=dotted];
m12_465 -> m12_466  [key=0, style=solid];
m12_457 -> m12_15  [key=2, style=dotted];
m12_457 -> m12_458  [key=0, style=solid];
m12_457 -> m12_418  [key=2, style=dotted];
m12_456 -> m12_458  [key=1, style=dashed, color=darkseagreen4, label=c1];
m12_456 -> m12_457  [key=0, style=solid];
m12_456 -> m12_468  [key=2, style=dotted];
m12_463 -> m12_57  [key=2, style=dotted];
m12_463 -> m12_464  [key=0, style=solid];
m12_464 -> m12_465  [key=0, style=solid];
m12_464 -> m12_57  [key=2, style=dotted];
m12_467 -> m12_455  [key=0, style=bold, color=blue];
m12_91 -> m12_92  [key=0, style=solid];
m12_94 -> m12_7  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_90  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_57  [key=2, style=dotted];
m12_92 -> m12_82  [key=2, style=dotted];
m12_92 -> m12_93  [key=0, style=solid];
m12_96 -> m12_91  [key=0, style=bold, color=blue];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_89  [key=2, style=dotted];
m12_96 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, int>"];
m12_304 -> m12_305  [key=0, style=solid];
m12_308 -> m12_9  [key=2, style=dotted];
m12_308 -> m12_309  [key=0, style=solid];
m12_307 -> m12_7  [key=2, style=dotted];
m12_307 -> m12_8  [key=2, style=dotted];
m12_307 -> m12_308  [key=0, style=solid];
m12_305 -> m12_308  [key=1, style=dashed, color=darkseagreen4, label=productClassRef];
m12_305 -> m12_82  [key=2, style=dotted];
m12_305 -> m12_306  [key=0, style=solid];
m12_306 -> m12_307  [key=0, style=solid];
m12_306 -> m12_310  [key=2, style=dotted];
m12_309 -> m12_304  [key=0, style=bold, color=blue];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_84  [key=3, color=darkorchid, style=bold, label="method methodReturn string JsonNetLinq"];
m12_81 -> m12_76  [key=0, style=bold, color=blue];
m12_83 -> m12_81  [key=0, style=bold, color=blue];
m12_83 -> m12_84  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_36  [key=2, style=dotted];
m12_29 -> m12_37  [key=2, style=dotted];
m12_29 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=dataContractSerializer];
m12_29 -> m12_32  [key=1, style=dashed, color=green, label=reader];
m12_29 -> m12_34  [key=2, style=dotted];
m12_29 -> m12_35  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid, color=green];
m12_31 -> m12_39  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_38  [key=2, style=dotted];
m12_30 -> m12_32  [key=1, style=dashed, color=green, label=ser];
m12_30 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=ms];
m12_30 -> m12_233  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid, color=green];
m12_32 -> m12_40  [key=2, style=dotted];
m12_32 -> m12_38  [key=2, style=dotted, color=green];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_41  [key=2, style=dotted];
m12_33 -> m12_28  [key=0, style=bold, color=blue];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_42  [key=2, style=dotted];
m12_35 -> m12_28  [key=0, style=bold, color=blue];
m12_89 -> m12_83  [key=0, style=bold, color=blue];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_80  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m12_77 -> m12_82  [key=2, style=dotted];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_80  [key=2, style=dotted];
m12_78 -> m12_74  [key=2, style=dotted];
m12_79 -> m12_77  [key=0, style=bold, color=blue];
m12_79 -> m12_7  [key=2, style=dotted];
m12_79 -> m12_8  [key=2, style=dotted];
m12_79 -> m12_80  [key=0, style=solid];
m12_353 -> m12_354  [key=0, style=solid];
m12_356 -> m12_362  [key=2, style=dotted];
m12_356 -> m12_357  [key=0, style=solid];
m12_357 -> m12_362  [key=2, style=dotted];
m12_357 -> m12_358  [key=0, style=solid];
m12_358 -> m12_362  [key=2, style=dotted];
m12_358 -> m12_359  [key=0, style=solid];
m12_355 -> m12_356  [key=0, style=solid];
m12_355 -> m12_357  [key=1, style=dashed, color=darkseagreen4, label=w];
m12_355 -> m12_358  [key=1, style=dashed, color=darkseagreen4, label=w];
m12_355 -> m12_361  [key=2, style=dotted];
m12_354 -> m12_355  [key=0, style=solid];
m12_354 -> m12_360  [key=2, style=dotted];
m12_359 -> m12_353  [key=0, style=bold, color=blue];
m12_331 -> m12_332  [key=0, style=solid];
m12_332 -> m12_333  [key=0, style=solid];
m12_332 -> m12_321  [key=2, style=dotted];
m12_333 -> m12_331  [key=0, style=bold, color=blue];
m12_66 -> m12_67  [key=0, style=solid, color=green];
m12_66 -> m12_5  [key=2, style=dotted, color=green];
m12_66 -> m12_74  [key=2, style=dotted, color=green];
m12_66 -> m12_68  [key=2, style=dotted];
m12_64 -> m12_66  [key=1, style=dashed, color=green, label=wrapper];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_73  [key=2, style=dotted];
m12_64 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m12_65 -> m12_66  [key=0, style=solid, color=green];
m12_65 -> m12_15  [key=2, style=dotted];
m12_65 -> m12_74  [key=2, style=dotted];
m12_65 -> m12_68  [key=3, color=darkorchid, style=bold, label="method methodReturn string DataContractJsonSerializer"];
m12_67 -> m12_7  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_8  [key=2, style=dotted];
m12_67 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_67 -> m12_65  [key=0, style=bold, color=blue];
m12_68 -> m12_9  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_75  [key=2, style=dotted];
m12_69 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label=dataContractSerializer];
m12_69 -> m12_76  [key=2, style=dotted];
m12_69 -> m12_37  [key=2, style=dotted];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_57  [key=2, style=dotted];
m12_70 -> m12_38  [key=2, style=dotted];
m12_70 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=ms];
m12_70 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label=ms];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_57  [key=2, style=dotted];
m12_71 -> m12_39  [key=2, style=dotted];
m12_72 -> m12_63  [key=0, style=bold, color=blue];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_40  [key=2, style=dotted];
m12_650 -> m12_651  [key=0, style=solid];
m12_651 -> m12_652  [key=0, style=solid];
m12_651 -> m12_630  [key=2, style=dotted];
m12_652 -> m12_650  [key=0, style=bold, color=blue];
m12_469 -> m12_470  [key=0, style=solid];
m12_472 -> m12_9  [key=2, style=dotted];
m12_472 -> m12_473  [key=0, style=solid];
m12_474 -> m12_9  [key=2, style=dotted];
m12_474 -> m12_475  [key=0, style=solid];
m12_481 -> m12_9  [key=2, style=dotted];
m12_481 -> m12_482  [key=0, style=solid];
m12_487 -> m12_9  [key=2, style=dotted];
m12_487 -> m12_488  [key=0, style=solid];
m12_471 -> m12_472  [key=0, style=solid];
m12_471 -> m12_182  [key=2, style=dotted];
m12_471 -> m12_473  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_473 -> m12_474  [key=0, style=solid];
m12_473 -> m12_75  [key=2, style=dotted];
m12_473 -> m12_475  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_473 -> m12_476  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_473 -> m12_477  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_475 -> m12_476  [key=0, style=solid];
m12_475 -> m12_57  [key=2, style=dotted];
m12_480 -> m12_481  [key=0, style=solid];
m12_480 -> m12_75  [key=2, style=dotted];
m12_480 -> m12_482  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_480 -> m12_483  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_480 -> m12_484  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_482 -> m12_483  [key=0, style=solid];
m12_482 -> m12_57  [key=2, style=dotted];
m12_486 -> m12_487  [key=0, style=solid];
m12_470 -> m12_15  [key=2, style=dotted];
m12_470 -> m12_471  [key=0, style=solid];
m12_470 -> m12_468  [key=2, style=dotted];
m12_470 -> m12_418  [key=2, style=dotted];
m12_476 -> m12_57  [key=2, style=dotted];
m12_476 -> m12_477  [key=0, style=solid];
m12_477 -> m12_478  [key=0, style=solid];
m12_479 -> m12_480  [key=0, style=solid];
m12_483 -> m12_57  [key=2, style=dotted];
m12_483 -> m12_484  [key=0, style=solid];
m12_484 -> m12_486  [key=1, style=dashed, color=darkseagreen4, label=c];
m12_484 -> m12_485  [key=0, style=solid];
m12_485 -> m12_486  [key=0, style=solid];
m12_485 -> m12_57  [key=2, style=dotted];
m12_478 -> m12_57  [key=2, style=dotted];
m12_478 -> m12_479  [key=0, style=solid];
m12_488 -> m12_469  [key=0, style=bold, color=blue];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_160  [key=2, style=dotted];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_166  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_21  [key=2, style=dotted];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TestClass"];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_52  [key=2, style=dotted];
m12_227 -> m12_229  [key=1, style=dashed, color=darkseagreen4, label=ms];
m12_227 -> m12_231  [key=1, style=dashed, color=darkseagreen4, label=ms];
m12_227 -> m12_223  [key=0, style=bold, color=blue];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_235  [key=2, style=dotted];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_233  [key=2, style=dotted];
m12_228 -> m12_230  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_234  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_55  [key=2, style=dotted];
m12_232 -> m12_226  [key=0, style=bold, color=blue];
m12_232 -> m12_233  [key=0, style=solid];
m12_85 -> m12_86  [key=0, style=solid, color=green];
m12_85 -> m12_88  [key=2, style=dotted];
m12_85 -> m12_89  [key=2, style=dotted];
m12_85 -> m12_90  [key=2, style=dotted];
m12_85 -> m12_91  [key=2, style=dotted];
m12_85 -> m12_92  [key=2, style=dotted];
m12_85 -> m12_93  [key=2, style=dotted];
m12_85 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_85 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_84 -> m12_85  [key=0, style=solid, color=green];
m12_84 -> m12_82  [key=2, style=dotted];
m12_86 -> m12_7  [key=2, style=dotted];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_90  [key=2, style=dotted];
m12_86 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label=employee];
m12_86 -> m12_94  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_57  [key=2, style=dotted];
m12_87 -> m12_84  [key=0, style=bold, color=blue];
m12_420 -> m12_421  [key=0, style=solid];
m12_426 -> m12_9  [key=2, style=dotted];
m12_426 -> m12_427  [key=0, style=solid];
m12_428 -> m12_9  [key=2, style=dotted];
m12_428 -> m12_429  [key=0, style=solid];
m12_430 -> m12_9  [key=2, style=dotted];
m12_430 -> m12_431  [key=0, style=solid];
m12_425 -> m12_426  [key=0, style=solid];
m12_425 -> m12_182  [key=2, style=dotted];
m12_425 -> m12_427  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_427 -> m12_428  [key=0, style=solid];
m12_427 -> m12_430  [key=1, style=dashed, color=darkseagreen4, label=l2];
m12_427 -> m12_75  [key=2, style=dotted];
m12_427 -> m12_429  [key=1, style=dashed, color=darkseagreen4, label=l2];
m12_427 -> m12_431  [key=1, style=dashed, color=darkseagreen4, label=l2];
m12_427 -> m12_432  [key=1, style=dashed, color=darkseagreen4, label=l2];
m12_429 -> m12_430  [key=0, style=solid];
m12_429 -> m12_57  [key=2, style=dotted];
m12_431 -> m12_432  [key=0, style=solid];
m12_431 -> m12_57  [key=2, style=dotted];
m12_421 -> m12_425  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_421 -> m12_422  [key=0, style=solid];
m12_421 -> m12_434  [key=2, style=dotted];
m12_421 -> m12_423  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_421 -> m12_424  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_424 -> m12_425  [key=0, style=solid];
m12_424 -> m12_275  [key=2, style=dotted];
m12_432 -> m12_57  [key=2, style=dotted];
m12_432 -> m12_433  [key=0, style=solid];
m12_422 -> m12_418  [key=2, style=dotted];
m12_422 -> m12_275  [key=2, style=dotted];
m12_422 -> m12_423  [key=0, style=solid];
m12_423 -> m12_424  [key=0, style=solid];
m12_423 -> m12_275  [key=2, style=dotted];
m12_433 -> m12_420  [key=0, style=bold, color=blue];
m12_376 -> m12_377  [key=0, style=solid];
m12_379 -> m12_9  [key=2, style=dotted];
m12_379 -> m12_380  [key=0, style=solid];
m12_378 -> m12_7  [key=2, style=dotted];
m12_378 -> m12_8  [key=2, style=dotted];
m12_378 -> m12_379  [key=0, style=solid];
m12_378 -> m12_382  [key=2, style=dotted];
m12_378 -> m12_383  [key=2, style=dotted];
m12_377 -> m12_378  [key=0, style=solid];
m12_377 -> m12_287  [key=2, style=dotted];
m12_377 -> m12_381  [key=2, style=dotted];
m12_380 -> m12_376  [key=0, style=bold, color=blue];
m12_150 -> m12_151  [key=0, style=solid];
m12_156 -> m12_9  [key=2, style=dotted];
m12_156 -> m12_157  [key=0, style=solid];
m12_157 -> m12_9  [key=2, style=dotted];
m12_157 -> m12_158  [key=0, style=solid];
m12_158 -> m12_9  [key=2, style=dotted];
m12_158 -> m12_159  [key=0, style=solid];
m12_154 -> m12_155  [key=0, style=solid];
m12_154 -> m12_57  [key=2, style=dotted];
m12_151 -> m12_152  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_23  [key=2, style=dotted];
m12_8 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_8 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_334 -> m12_335  [key=0, style=solid];
m12_344 -> m12_9  [key=2, style=dotted];
m12_344 -> m12_345  [key=0, style=solid];
m12_339 -> m12_7  [key=2, style=dotted];
m12_339 -> m12_340  [key=0, style=solid];
m12_339 -> m12_341  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m12_339 -> m12_342  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m12_339 -> m12_345  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m12_342 -> m12_8  [key=2, style=dotted];
m12_342 -> m12_344  [key=1, style=dashed, color=darkseagreen4, label=output];
m12_342 -> m12_343  [key=0, style=solid];
m12_342 -> m12_345  [key=1, style=dashed, color=darkseagreen4, label=output];
m12_343 -> m12_344  [key=0, style=solid];
m12_343 -> m12_82  [key=2, style=dotted];
m12_345 -> m12_346  [key=0, style=solid];
m12_345 -> m12_160  [key=2, style=dotted];
m12_345 -> m12_347  [key=1, style=dashed, color=darkseagreen4, label=obj];
m12_345 -> m12_348  [key=1, style=dashed, color=darkseagreen4, label=obj];
m12_338 -> m12_339  [key=0, style=solid];
m12_340 -> m12_341  [key=0, style=solid];
m12_341 -> m12_342  [key=0, style=solid];
m12_335 -> m12_342  [key=1, style=dashed, color=darkseagreen4, label=testerObject];
m12_335 -> m12_338  [key=1, style=dashed, color=darkseagreen4, label=testerObject];
m12_335 -> m12_336  [key=0, style=solid];
m12_335 -> m12_351  [key=2, style=dotted];
m12_336 -> m12_105  [key=2, style=dotted];
m12_336 -> m12_337  [key=0, style=solid];
m12_346 -> m12_347  [key=0, style=solid];
m12_346 -> m12_278  [key=2, style=dotted];
m12_347 -> m12_56  [key=2, style=dotted];
m12_347 -> m12_348  [key=0, style=solid];
m12_348 -> m12_349  [key=0, style=solid];
m12_337 -> m12_338  [key=0, style=solid];
m12_337 -> m12_349  [key=1, style=dashed, color=darkseagreen4, label=data];
m12_349 -> m12_350  [key=0, style=solid];
m12_349 -> m12_352  [key=2, style=dotted];
m12_350 -> m12_334  [key=0, style=bold, color=blue];
m12_138 -> m12_139  [key=0, style=solid];
m12_138 -> m12_153  [key=2, style=dotted];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_41  [key=2, style=dotted];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_184  [key=0, style=solid];
m12_235 -> m12_232  [key=0, style=bold, color=blue];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_236  [key=2, style=dotted];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_95  [key=0, style=bold, color=blue];
m12_100 -> m12_74  [key=2, style=dotted];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_15  [key=2, style=dotted];
m12_100 -> m12_104  [key=2, style=dotted];
m12_100 -> m12_105  [key=2, style=dotted];
m12_100 -> m12_98  [key=0, style=bold, color=blue];
m12_98 -> m12_102  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m12_98 -> m12_99  [key=0, style=solid];
m12_99 -> m12_102  [key=1, style=dashed, color=darkseagreen4, label=personRef];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_88  [key=2, style=dotted];
m12_99 -> m12_89  [key=2, style=dotted];
m12_556 -> m12_557  [key=0, style=solid];
m12_565 -> m12_9  [key=2, style=dotted];
m12_565 -> m12_566  [key=0, style=solid];
m12_561 -> m12_7  [key=2, style=dotted];
m12_561 -> m12_562  [key=0, style=solid];
m12_561 -> m12_564  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerSettings];
m12_559 -> m12_5  [key=2, style=dotted];
m12_559 -> m12_560  [key=0, style=solid];
m12_559 -> m12_562  [key=1, style=dashed, color=darkseagreen4, label=inputContext];
m12_557 -> m12_565  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m12_557 -> m12_558  [key=0, style=solid];
m12_557 -> m12_560  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m12_558 -> m12_565  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m12_558 -> m12_559  [key=0, style=solid];
m12_558 -> m12_567  [key=2, style=dotted];
m12_558 -> m12_560  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m12_564 -> m12_565  [key=0, style=solid];
m12_564 -> m12_303  [key=2, style=dotted];
m12_560 -> m12_561  [key=0, style=solid];
m12_560 -> m12_275  [key=2, style=dotted];
m12_562 -> m12_564  [key=1, style=dashed, color=darkseagreen4, label=serializedString];
m12_562 -> m12_563  [key=0, style=solid];
m12_562 -> m12_568  [key=2, style=dotted];
m12_563 -> m12_564  [key=0, style=solid];
m12_563 -> m12_374  [key=2, style=dotted];
m12_566 -> m12_556  [key=0, style=bold, color=blue];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_153  [key=2, style=dotted];
m12_135 -> m12_9  [key=2, style=dotted];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_138  [key=2, style=dotted];
m12_135 -> m12_154  [key=2, style=dotted];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_137  [key=2, style=dotted];
m12_134 -> m12_153  [key=2, style=dotted];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_158  [key=2, style=dotted];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_160  [key=2, style=dotted];
m12_136 -> m12_131  [key=0, style=bold, color=blue];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_145  [key=0, style=solid];
m12_136 -> m12_139  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_136 -> m12_141  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_136 -> m12_143  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_5 -> m12_6  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_20  [key=2, style=dotted];
m12_62 -> m12_59  [key=0, style=bold, color=blue];
m12_139 -> m12_140  [key=0, style=solid];
m12_139 -> m12_155  [key=2, style=dotted];
m12_141 -> m12_27  [key=2, style=dotted];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_141 -> m12_155  [key=2, style=dotted];
m12_140 -> m12_141  [key=0, style=solid];
m12_140 -> m12_144  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_140 -> m12_153  [key=2, style=dotted];
m12_142 -> m12_139  [key=0, style=bold, color=blue];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_153  [key=2, style=dotted];
m12_310 -> m12_316  [key=0, style=solid];
m12_316 -> m12_317  [key=0, style=solid];
m12_317 -> m12_310  [key=0, style=bold, color=blue];
m12_51 -> m12_46  [key=0, style=bold, color=blue];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_150  [key=2, style=dotted];
m12_105 -> m12_148  [key=1, style=dashed, color=darkseagreen4, label=sw];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_162  [key=2, style=dotted];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_159  [key=2, style=dotted];
m12_144 -> m12_136  [key=0, style=solid];
m12_144 -> m12_158  [key=2, style=dotted];
m12_144 -> m12_7  [key=2, style=dotted];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_90  [key=2, style=dotted];
m12_145 -> m12_146  [key=0, style=solid];
m12_145 -> m12_156  [key=2, style=dotted];
m12_145 -> m12_143  [key=0, style=bold, color=blue];
m12_146 -> m12_147  [key=0, style=solid];
m12_146 -> m12_158  [key=2, style=dotted];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_161  [key=2, style=dotted];
m12_149 -> m12_104  [key=0, style=bold, color=blue];
m12_76 -> m12_77  [key=0, style=solid];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_18  [key=2, style=dotted];
m12_1 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label=test];
m12_1 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=test];
m12_1 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label=test];
m12_1 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=test];
m12_1 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=test];
m12_1 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=test];
m12_1 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=test];
m12_1 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=test];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_19  [key=2, style=dotted];
m12_2 -> m12_7  [key=2, style=dotted];
m12_2 -> m12_8  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_9  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_20  [key=2, style=dotted];
m12_4 -> m12_0  [key=0, style=bold, color=blue];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_24  [key=2, style=dotted];
m12_11 -> m12_15  [key=2, style=dotted];
m12_11 -> m12_16  [key=2, style=dotted];
m12_11 -> m12_6  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_24  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid, color=green];
m12_12 -> m12_23  [key=2, style=dotted];
m12_12 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_12 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=address];
m12_12 -> m12_7  [key=2, style=dotted];
m12_12 -> m12_8  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid, color=green];
m12_13 -> m12_20  [key=2, style=dotted];
m12_13 -> m12_13  [key=3, color=green, style=bold, label="method methodReturn byte[] BinaryFormatter"];
m12_13 -> m12_9  [key=2, style=dotted, color=green];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_10  [key=0, style=bold, color=blue];
m12_59 -> m12_60  [key=0, style=solid, color=green];
m12_59 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_59 -> m12_52  [key=2, style=dotted, color=green];
m12_59 -> m12_7  [key=2, style=dotted, color=green];
m12_59 -> m12_62  [key=2, style=dotted, color=green];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_63  [key=2, style=dotted];
m12_60 -> m12_9  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_64  [key=2, style=dotted];
m12_61 -> m12_58  [key=0, style=bold, color=blue];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_167  [key=0, style=bold, color=blue];
m12_173 -> m12_9  [key=2, style=dotted];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_216  [key=2, style=dotted];
m12_175 -> m12_9  [key=2, style=dotted];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_218  [key=2, style=dotted];
m12_178 -> m12_9  [key=2, style=dotted];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_220  [key=2, style=dotted];
m12_179 -> m12_9  [key=2, style=dotted];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_217  [key=2, style=dotted];
m12_170 -> m12_173  [key=1, style=dashed, color=darkseagreen4, label=typeNamePropertyRef];
m12_170 -> m12_82  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_150  [key=2, style=dotted];
m12_170 -> m12_214  [key=1, style=dashed, color=darkseagreen4, label=sw];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_182  [key=2, style=dotted];
m12_172 -> m12_174  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_75  [key=2, style=dotted];
m12_174 -> m12_176  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m12_174 -> m12_177  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m12_174 -> m12_217  [key=2, style=dotted];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_57  [key=2, style=dotted];
m12_176 -> m12_178  [key=0, style=solid];
m12_177 -> m12_178  [key=0, style=solid];
m12_177 -> m12_179  [key=1, style=dashed, color=darkseagreen4, label=nested];
m12_177 -> m12_176  [key=0, style=solid];
m12_177 -> m12_219  [key=2, style=dotted];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_181  [key=2, style=dotted];
m12_171 -> m12_151  [key=2, style=dotted];
m12_171 -> m12_173  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_174  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_175  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_177  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_178  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_179  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_180  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_182  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_183  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_184  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_185  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_186  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_189  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_190  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_191  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_192  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_194  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_196  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_197  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_198  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_200  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_201  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_203  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_204  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_205  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_206  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_207  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_208  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_209  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_210  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_211  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_212  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_171 -> m12_213  [key=1, style=dashed, color=darkseagreen4, label=writer];
m12_180 -> m12_169  [key=0, style=bold, color=blue];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_216  [key=2, style=dotted];
m12_392 -> m12_393  [key=0, style=solid];
m12_398 -> m12_9  [key=2, style=dotted];
m12_398 -> m12_399  [key=0, style=solid];
m12_397 -> m12_398  [key=0, style=solid];
m12_397 -> m12_182  [key=2, style=dotted];
m12_393 -> m12_397  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_393 -> m12_394  [key=0, style=solid];
m12_393 -> m12_400  [key=2, style=dotted];
m12_393 -> m12_395  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_393 -> m12_396  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_396 -> m12_397  [key=0, style=solid];
m12_396 -> m12_401  [key=2, style=dotted];
m12_394 -> m12_401  [key=2, style=dotted];
m12_394 -> m12_395  [key=0, style=solid];
m12_395 -> m12_396  [key=0, style=solid];
m12_395 -> m12_401  [key=2, style=dotted];
m12_399 -> m12_392  [key=0, style=bold, color=blue];
m12_80 -> m12_9  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_528 -> m12_529  [key=0, style=solid];
m12_537 -> m12_9  [key=2, style=dotted];
m12_537 -> m12_538  [key=0, style=solid];
m12_543 -> m12_9  [key=2, style=dotted];
m12_543 -> m12_544  [key=0, style=solid];
m12_546 -> m12_9  [key=2, style=dotted];
m12_546 -> m12_547  [key=0, style=solid];
m12_552 -> m12_9  [key=2, style=dotted];
m12_552 -> m12_553  [key=0, style=solid];
m12_536 -> m12_537  [key=0, style=solid];
m12_536 -> m12_182  [key=2, style=dotted];
m12_536 -> m12_538  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_538 -> m12_539  [key=0, style=solid];
m12_538 -> m12_75  [key=2, style=dotted];
m12_538 -> m12_540  [key=1, style=dashed, color=darkseagreen4, label=d2];
m12_538 -> m12_541  [key=1, style=dashed, color=darkseagreen4, label=d2];
m12_542 -> m12_543  [key=0, style=solid];
m12_544 -> m12_545  [key=0, style=solid];
m12_545 -> m12_546  [key=0, style=solid];
m12_547 -> m12_548  [key=0, style=solid];
m12_551 -> m12_552  [key=0, style=solid];
m12_529 -> m12_536  [key=1, style=dashed, color=darkseagreen4, label=d1];
m12_529 -> m12_530  [key=0, style=solid];
m12_529 -> m12_554  [key=2, style=dotted];
m12_529 -> m12_535  [key=1, style=dashed, color=darkseagreen4, label=d1];
m12_535 -> m12_536  [key=0, style=solid];
m12_539 -> m12_540  [key=0, style=solid];
m12_539 -> m12_278  [key=2, style=dotted];
m12_540 -> m12_541  [key=0, style=solid];
m12_540 -> m12_278  [key=2, style=dotted];
m12_541 -> m12_542  [key=0, style=solid];
m12_541 -> m12_544  [key=1, style=dashed, color=darkseagreen4, label=data3];
m12_548 -> m12_75  [key=2, style=dotted];
m12_548 -> m12_549  [key=0, style=solid];
m12_550 -> m12_551  [key=0, style=solid];
m12_531 -> m12_418  [key=2, style=dotted];
m12_531 -> m12_532  [key=0, style=solid];
m12_533 -> m12_418  [key=2, style=dotted];
m12_533 -> m12_534  [key=0, style=solid];
m12_530 -> m12_535  [key=1, style=dashed, color=darkseagreen4, label=data];
m12_530 -> m12_531  [key=0, style=solid];
m12_530 -> m12_555  [key=2, style=dotted];
m12_530 -> m12_534  [key=1, style=dashed, color=darkseagreen4, label=data];
m12_534 -> m12_535  [key=0, style=solid];
m12_549 -> m12_550  [key=0, style=solid];
m12_532 -> m12_533  [key=0, style=solid];
m12_532 -> m12_534  [key=1, style=dashed, color=darkseagreen4, label=data2];
m12_532 -> m12_555  [key=2, style=dotted];
m12_553 -> m12_528  [key=0, style=bold, color=blue];
m12_27 -> m12_25  [key=0, style=bold, color=blue];
m12_578 -> m12_626  [key=0, style=solid];
m12_626 -> m12_578  [key=0, style=bold, color=blue];
m12_182 -> m12_183  [key=0, style=solid];
m12_182 -> m12_217  [key=2, style=dotted];
m12_182 -> m12_182  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_219  [key=2, style=dotted];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_217  [key=2, style=dotted];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_219  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_55  [key=2, style=dotted];
m12_591 -> m12_592  [key=0, style=solid];
m12_596 -> m12_9  [key=2, style=dotted];
m12_596 -> m12_597  [key=0, style=solid];
m12_600 -> m12_9  [key=2, style=dotted];
m12_600 -> m12_601  [key=0, style=solid];
m12_594 -> m12_7  [key=2, style=dotted];
m12_594 -> m12_595  [key=0, style=solid];
m12_594 -> m12_597  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_595 -> m12_596  [key=0, style=solid];
m12_595 -> m12_568  [key=2, style=dotted];
m12_595 -> m12_597  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_597 -> m12_598  [key=0, style=solid];
m12_597 -> m12_160  [key=2, style=dotted];
m12_598 -> m12_600  [key=1, style=dashed, color=darkseagreen4, label=p2];
m12_598 -> m12_599  [key=0, style=solid];
m12_599 -> m12_600  [key=0, style=solid];
m12_599 -> m12_57  [key=2, style=dotted];
m12_593 -> m12_594  [key=0, style=solid];
m12_593 -> m12_578  [key=2, style=dotted];
m12_593 -> m12_579  [key=2, style=dotted];
m12_592 -> m12_595  [key=1, style=dashed, color=darkseagreen4, label=pp];
m12_592 -> m12_593  [key=0, style=solid];
m12_592 -> m12_602  [key=2, style=dotted];
m12_601 -> m12_591  [key=0, style=bold, color=blue];
m12_603 -> m12_604  [key=0, style=solid];
m12_608 -> m12_7  [key=2, style=dotted];
m12_608 -> m12_8  [key=2, style=dotted];
m12_608 -> m12_609  [key=0, style=solid];
m12_608 -> m12_610  [key=1, style=dashed, color=darkseagreen4, label=serialized];
m12_610 -> m12_7  [key=2, style=dotted];
m12_610 -> m12_611  [key=0, style=solid];
m12_610 -> m12_160  [key=2, style=dotted];
m12_604 -> m12_608  [key=1, style=dashed, color=darkseagreen4, label=input];
m12_604 -> m12_15  [key=2, style=dotted];
m12_604 -> m12_605  [key=0, style=solid];
m12_604 -> m12_606  [key=1, style=dashed, color=darkseagreen4, label=input];
m12_604 -> m12_607  [key=1, style=dashed, color=darkseagreen4, label=input];
m12_607 -> m12_608  [key=0, style=solid];
m12_607 -> m12_15  [key=2, style=dotted];
m12_607 -> m12_615  [key=2, style=dotted];
m12_607 -> m12_401  [key=2, style=dotted];
m12_609 -> m12_610  [key=0, style=solid];
m12_609 -> m12_374  [key=2, style=dotted];
m12_611 -> m12_612  [key=0, style=solid];
m12_611 -> m12_614  [key=0, style=solid];
m12_605 -> m12_15  [key=2, style=dotted];
m12_605 -> m12_606  [key=0, style=solid];
m12_605 -> m12_615  [key=2, style=dotted];
m12_605 -> m12_401  [key=2, style=dotted];
m12_606 -> m12_15  [key=2, style=dotted];
m12_606 -> m12_607  [key=0, style=solid];
m12_606 -> m12_615  [key=2, style=dotted];
m12_606 -> m12_401  [key=2, style=dotted];
m12_612 -> m12_611  [key=0, style=solid];
m12_612 -> m12_613  [key=0, style=solid];
m12_613 -> m12_374  [key=2, style=dotted];
m12_613 -> m12_612  [key=0, style=solid];
m12_614 -> m12_603  [key=0, style=bold, color=blue];
m12_489 -> m12_490  [key=0, style=solid];
m12_492 -> m12_9  [key=2, style=dotted];
m12_492 -> m12_493  [key=0, style=solid];
m12_494 -> m12_9  [key=2, style=dotted];
m12_494 -> m12_495  [key=0, style=solid];
m12_501 -> m12_9  [key=2, style=dotted];
m12_501 -> m12_502  [key=0, style=solid];
m12_507 -> m12_9  [key=2, style=dotted];
m12_507 -> m12_508  [key=0, style=solid];
m12_490 -> m12_5  [key=2, style=dotted];
m12_490 -> m12_491  [key=0, style=solid];
m12_490 -> m12_509  [key=2, style=dotted];
m12_490 -> m12_418  [key=2, style=dotted];
m12_491 -> m12_492  [key=0, style=solid];
m12_491 -> m12_182  [key=2, style=dotted];
m12_491 -> m12_493  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_493 -> m12_494  [key=0, style=solid];
m12_493 -> m12_75  [key=2, style=dotted];
m12_493 -> m12_495  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_493 -> m12_496  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_493 -> m12_497  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_495 -> m12_496  [key=0, style=solid];
m12_495 -> m12_57  [key=2, style=dotted];
m12_500 -> m12_501  [key=0, style=solid];
m12_500 -> m12_75  [key=2, style=dotted];
m12_500 -> m12_502  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_500 -> m12_503  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_500 -> m12_504  [key=1, style=dashed, color=darkseagreen4, label=c2];
m12_502 -> m12_503  [key=0, style=solid];
m12_502 -> m12_57  [key=2, style=dotted];
m12_506 -> m12_507  [key=0, style=solid];
m12_496 -> m12_57  [key=2, style=dotted];
m12_496 -> m12_497  [key=0, style=solid];
m12_497 -> m12_498  [key=0, style=solid];
m12_499 -> m12_500  [key=0, style=solid];
m12_503 -> m12_57  [key=2, style=dotted];
m12_503 -> m12_504  [key=0, style=solid];
m12_504 -> m12_506  [key=1, style=dashed, color=darkseagreen4, label=c];
m12_504 -> m12_505  [key=0, style=solid];
m12_505 -> m12_506  [key=0, style=solid];
m12_505 -> m12_57  [key=2, style=dotted];
m12_498 -> m12_57  [key=2, style=dotted];
m12_498 -> m12_499  [key=0, style=solid];
m12_508 -> m12_489  [key=0, style=bold, color=blue];
m12_510 -> m12_511  [key=0, style=solid];
m12_513 -> m12_9  [key=2, style=dotted];
m12_513 -> m12_514  [key=0, style=solid];
m12_523 -> m12_9  [key=2, style=dotted];
m12_523 -> m12_524  [key=0, style=solid];
m12_512 -> m12_513  [key=0, style=solid];
m12_512 -> m12_182  [key=2, style=dotted];
m12_512 -> m12_514  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_514 -> m12_515  [key=0, style=solid];
m12_514 -> m12_75  [key=2, style=dotted];
m12_514 -> m12_516  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_514 -> m12_517  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_514 -> m12_518  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_514 -> m12_519  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_514 -> m12_520  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_514 -> m12_521  [key=1, style=dashed, color=darkseagreen4, label=o2];
m12_522 -> m12_523  [key=0, style=solid];
m12_511 -> m12_15  [key=2, style=dotted];
m12_511 -> m12_512  [key=0, style=solid];
m12_511 -> m12_525  [key=2, style=dotted];
m12_511 -> m12_526  [key=2, style=dotted];
m12_511 -> m12_418  [key=2, style=dotted];
m12_511 -> m12_527  [key=2, style=dotted];
m12_515 -> m12_516  [key=0, style=solid];
m12_515 -> m12_278  [key=2, style=dotted];
m12_516 -> m12_517  [key=0, style=solid];
m12_516 -> m12_278  [key=2, style=dotted];
m12_517 -> m12_57  [key=2, style=dotted];
m12_517 -> m12_518  [key=0, style=solid];
m12_518 -> m12_57  [key=2, style=dotted];
m12_518 -> m12_519  [key=0, style=solid];
m12_519 -> m12_57  [key=2, style=dotted];
m12_519 -> m12_520  [key=0, style=solid];
m12_520 -> m12_57  [key=2, style=dotted];
m12_520 -> m12_521  [key=0, style=solid];
m12_521 -> m12_522  [key=0, style=solid];
m12_524 -> m12_510  [key=0, style=bold, color=blue];
m12_360 -> m12_644  [key=0, style=solid];
m12_644 -> m12_645  [key=0, style=solid];
m12_645 -> m12_360  [key=0, style=bold, color=blue];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=2, style=dotted];
m12_75 -> m12_68  [key=0, style=bold, color=blue];
m12_311 -> m12_312  [key=0, style=solid];
m12_311 -> m12_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_312 -> m12_313  [key=0, style=solid];
m12_313 -> m12_314  [key=0, style=solid];
m12_314 -> m12_315  [key=0, style=solid];
m12_315 -> m12_311  [key=0, style=bold, color=blue];
m12_402 -> m12_403  [key=0, style=solid];
m12_410 -> m12_9  [key=2, style=dotted];
m12_410 -> m12_411  [key=0, style=solid];
m12_412 -> m12_9  [key=2, style=dotted];
m12_412 -> m12_413  [key=0, style=solid];
m12_409 -> m12_410  [key=0, style=solid];
m12_409 -> m12_182  [key=2, style=dotted];
m12_409 -> m12_411  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_411 -> m12_412  [key=0, style=solid];
m12_411 -> m12_75  [key=2, style=dotted];
m12_411 -> m12_413  [key=1, style=dashed, color=darkseagreen4, label=l2];
m12_411 -> m12_414  [key=1, style=dashed, color=darkseagreen4, label=l2];
m12_411 -> m12_415  [key=1, style=dashed, color=darkseagreen4, label=l2];
m12_411 -> m12_416  [key=1, style=dashed, color=darkseagreen4, label=l2];
m12_413 -> m12_414  [key=0, style=solid];
m12_413 -> m12_57  [key=2, style=dotted];
m12_406 -> m12_105  [key=2, style=dotted];
m12_406 -> m12_407  [key=0, style=solid];
m12_406 -> m12_419  [key=2, style=dotted];
m12_406 -> m12_401  [key=2, style=dotted];
m12_404 -> m12_409  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_404 -> m12_406  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_404 -> m12_405  [key=0, style=solid];
m12_404 -> m12_400  [key=2, style=dotted];
m12_404 -> m12_407  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_404 -> m12_408  [key=1, style=dashed, color=darkseagreen4, label=l];
m12_408 -> m12_409  [key=0, style=solid];
m12_408 -> m12_401  [key=2, style=dotted];
m12_414 -> m12_57  [key=2, style=dotted];
m12_414 -> m12_415  [key=0, style=solid];
m12_415 -> m12_57  [key=2, style=dotted];
m12_415 -> m12_416  [key=0, style=solid];
m12_416 -> m12_57  [key=2, style=dotted];
m12_416 -> m12_417  [key=0, style=solid];
m12_403 -> m12_418  [key=2, style=dotted];
m12_403 -> m12_404  [key=0, style=solid];
m12_403 -> m12_405  [key=1, style=dashed, color=darkseagreen4, label=c1];
m12_405 -> m12_406  [key=0, style=solid];
m12_405 -> m12_401  [key=2, style=dotted];
m12_407 -> m12_408  [key=0, style=solid];
m12_407 -> m12_401  [key=2, style=dotted];
m12_417 -> m12_402  [key=0, style=bold, color=blue];
m12_646 -> m12_647  [key=0, style=solid];
m12_647 -> m12_648  [key=0, style=solid];
m12_647 -> m12_649  [key=2, style=dotted];
m12_648 -> m12_646  [key=0, style=bold, color=blue];
m12_622 -> m12_623  [key=0, style=solid];
m12_623 -> m12_624  [key=0, style=solid];
m12_623 -> m12_625  [key=2, style=dotted];
m12_624 -> m12_622  [key=0, style=bold, color=blue];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_42  [key=2, style=dotted];
m12_674 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=sb];
m12_675 -> m12_144  [key=1, style=dashed, color=darkseagreen4, label=json];
m12_679 -> m12_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m12_679 -> m12_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m12_679 -> m12_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m12_677 -> m12_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder"];
m12_677 -> m12_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder"];
m12_678 -> m12_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_678 -> m12_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_678 -> m12_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_678 -> m12_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_678 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_678 -> m12_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_678 -> m12_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_678 -> m12_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_678 -> m12_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m12_682 -> m12_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m12_682 -> m12_647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m12_682 -> m12_651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m12_682 -> m12_656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m12_682 -> m12_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m12_682 -> m12_665  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m12_682 -> m12_667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m12_680 -> m12_628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MyParent"];
m12_680 -> m12_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MyParent"];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_7  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_8  [key=2, style=dotted];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_16  [key=2, style=dotted];
m14_15 -> m14_10  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_6  [key=2, style=dotted];
m14_1 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label=doc];
m14_1 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label=doc];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_7  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_8  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_9  [key=2, style=dotted];
m14_5 -> m14_0  [key=0, style=bold, color=blue];
}
