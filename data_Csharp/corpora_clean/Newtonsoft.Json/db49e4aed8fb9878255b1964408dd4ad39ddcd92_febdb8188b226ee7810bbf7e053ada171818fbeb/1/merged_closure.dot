digraph  {
m2_26 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", span="68-68"];
m2_27 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", file="DeserializeBenchmarks.cs", label="return JsonConvert.DeserializeObject<IList<double>>(FloatArrayJson);", span="70-70"];
m2_28 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", file="DeserializeBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDoubleList()", span="68-68"];
m2_6 [cluster="System.Linq.Enumerable.Range(int, int)", file="DeserializeBenchmarks.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m2_16 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", span="57-57"];
m2_17 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs", label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="59-59"];
m2_18 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="60-60"];
m2_19 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs", label="JsonSerializer serializer = new JsonSerializer()", span="62-62"];
m2_20 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs", label="return serializer.Deserialize<IList<RootObject>>(jsonTextReader);", span="63-63"];
m2_21 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", file="DeserializeBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonFile()", span="57-57"];
m2_8 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="433-433"];
m2_23 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m2_22 [cluster="System.IO.File.OpenText(string)", file="DeserializeBenchmarks.cs", label="Entry System.IO.File.OpenText(string)", span="0-0"];
m2_29 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", span="74-74"];
m2_30 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", file="DeserializeBenchmarks.cs", label="return JsonConvert.DeserializeObject<IList<decimal>>(FloatArrayJson);", span="76-76"];
m2_31 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", file="DeserializeBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeDecimalList()", span="74-74"];
m2_7 [cluster="Unk.Select", file="DeserializeBenchmarks.cs", label="Entry Unk.Select", span=""];
m2_24 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m2_9 [cluster="lambda expression", file="DeserializeBenchmarks.cs", label="Entry lambda expression", span="47-47"];
m2_10 [cluster="lambda expression", file="DeserializeBenchmarks.cs", label="i * 1.1m", span="47-47"];
m2_11 [cluster="lambda expression", file="DeserializeBenchmarks.cs", label="Exit lambda expression", span="47-47"];
m2_15 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m2_25 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
m2_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", span="43-43"];
m2_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", file="DeserializeBenchmarks.cs", label="LargeJsonText = System.IO.File.ReadAllText(''large.json'')", span="45-45"];
m2_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", file="DeserializeBenchmarks.cs", label="FloatArrayJson = new JArray(Enumerable.Range(0, 5000).Select(i => i * 1.1m)).ToString(Formatting.None)", span="47-47"];
m2_3 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", file="DeserializeBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeBenchmarks()", span="43-43"];
m2_12 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", file="DeserializeBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", span="51-51"];
m2_13 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", file="DeserializeBenchmarks.cs", label="return JsonConvert.DeserializeObject<IList<RootObject>>(LargeJsonText);", span="53-53"];
m2_14 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", file="DeserializeBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeBenchmarks.DeserializeLargeJsonText()", span="51-51"];
m2_4 [cluster="System.IO.File.ReadAllText(string)", file="DeserializeBenchmarks.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m2_5 [cluster="JArray.cstr", file="DeserializeBenchmarks.cs", label="Entry JArray.cstr", span=""];
m3_110 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", span="220-220"];
m3_114 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="TestClass c = new TestClass()", span="222-222"];
m3_115 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="224-224"];
m3_124 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="c.strings.Add((string)reader.Value)", span="237-237"];
m3_129 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="c.dictionary.Add(key, (await reader.ReadAsInt32Async()).GetValueOrDefault())", span="245-245"];
m3_131 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="c.Name = await reader.ReadAsStringAsync()", span="249-249"];
m3_133 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="c.Now = (await reader.ReadAsDateTimeAsync()).GetValueOrDefault()", span="252-252"];
m3_135 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="c.BigNumber = (await reader.ReadAsDecimalAsync()).GetValueOrDefault()", span="255-255"];
m3_138 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="c.Address1 = await CreateAddressAsync(reader)", span="259-259"];
m3_143 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="c.Addresses.Add(address)", span="266-266"];
m3_144 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="return c;", span="277-277"];
m3_116 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync()", span="225-225"];
m3_117 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync()", span="226-226"];
m3_118 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.TokenType == JsonToken.PropertyName", span="228-228"];
m3_119 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="string propertyName = (string)reader.Value", span="230-230"];
m3_122 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync()", span="234-234"];
m3_123 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync() && reader.TokenType != JsonToken.EndArray", span="235-235"];
m3_126 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync()", span="241-241"];
m3_127 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync() && reader.TokenType != JsonToken.EndObject", span="242-242"];
m3_128 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="string key = (string)reader.Value", span="244-244"];
m3_137 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync()", span="258-258"];
m3_140 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync()", span="262-262"];
m3_141 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync() && reader.TokenType != JsonToken.EndArray", span="263-263"];
m3_142 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="var address = await CreateAddressAsync(reader)", span="265-265"];
m3_120 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label=propertyName, span="231-231"];
m3_121 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="''strings''", span="233-233"];
m3_125 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="''dictionary''", span="240-240"];
m3_130 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="''Name''", span="248-248"];
m3_132 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="''Now''", span="251-251"];
m3_134 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="''BigNumber''", span="254-254"];
m3_136 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="''Address1''", span="257-257"];
m3_139 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="''Addresses''", span="261-261"];
m3_145 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManualAsync(string)", span="220-220"];
m3_35 [cluster="Unk.>", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.>", span=""];
m3_84 [cluster="System.IO.StringReader.StringReader(string)", file="DeserializeComparisonBenchmarks.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m3_174 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="126-126"];
m3_39 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", span="101-101"];
m3_40 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", file="DeserializeComparisonBenchmarks.cs", label="return JsonConvert.DeserializeObject<TestClass>(BenchmarkConstants.JsonText);", span="103-103"];
m3_41 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNet()", span="101-101"];
m3_18 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", span="70-70"];
m3_19 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", file="DeserializeComparisonBenchmarks.cs", label="return DeserializeBinaryFormatter<TestClass>(BinaryFormatterData);", span="72-72"];
m3_20 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.BinaryFormatter()", span="70-70"];
m3_150 [cluster="Unk.ReadAsStringAsync", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.ReadAsStringAsync", span=""];
m3_26 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", file="DeserializeComparisonBenchmarks.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", span="0-0"];
m3_34 [cluster="JavaScriptSerializer.cstr", file="DeserializeComparisonBenchmarks.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m3_85 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="387-387"];
m3_88 [cluster="System.Nullable<T>.GetValueOrDefault()", file="DeserializeComparisonBenchmarks.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m3_82 [cluster="Newtonsoft.Json.Tests.TestObjects.TestClass.TestClass()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestClass.TestClass()", span="34-34"];
m3_25 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", file="DeserializeComparisonBenchmarks.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", span="0-0"];
m3_8 [cluster="DataContractSerializer.cstr", file="DeserializeComparisonBenchmarks.cs", label="Entry DataContractSerializer.cstr", span=""];
m3_93 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", span="179-179"];
m3_94 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="Address a = new Address()", span="181-181"];
m3_95 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read()", span="182-182"];
m3_96 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="reader.TokenType == JsonToken.PropertyName", span="184-184"];
m3_97 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="(string)reader.Value", span="186-186"];
m3_99 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="a.Street = reader.ReadAsString()", span="189-189"];
m3_101 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="a.Phone = reader.ReadAsString()", span="192-192"];
m3_103 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="a.Entered = reader.ReadAsDateTime().GetValueOrDefault()", span="195-195"];
m3_104 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="return a;", span="204-204"];
m3_98 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="''Street''", span="188-188"];
m3_100 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="''Phone''", span="191-191"];
m3_102 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="''Entered''", span="194-194"];
m3_105 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddress(Newtonsoft.Json.JsonTextReader)", span="179-179"];
m3_153 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", span="280-280"];
m3_154 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="Address a = new Address()", span="282-282"];
m3_155 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="await reader.ReadAsync()", span="283-283"];
m3_156 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="reader.TokenType == JsonToken.PropertyName", span="285-285"];
m3_157 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="(string)reader.Value", span="287-287"];
m3_159 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="a.Street = await reader.ReadAsStringAsync()", span="290-290"];
m3_161 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="a.Phone = await reader.ReadAsStringAsync()", span="293-293"];
m3_163 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="a.Entered = (await reader.ReadAsDateTimeAsync()).GetValueOrDefault()", span="296-296"];
m3_164 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="return a;", span="305-305"];
m3_158 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="''Street''", span="289-289"];
m3_160 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="''Phone''", span="292-292"];
m3_162 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="''Entered''", span="295-295"];
m3_165 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.CreateAddressAsync(Newtonsoft.Json.JsonTextReader)", span="280-280"];
m3_173 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m3_36 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", span="95-95"];
m3_37 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", file="DeserializeComparisonBenchmarks.cs", label="return DeserializeDataContractJson<TestClass>(BenchmarkConstants.JsonText);", span="97-97"];
m3_38 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractJsonSerializer()", span="95-95"];
m3_89 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DeserializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_107 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", span="209-209"];
m3_108 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", file="DeserializeComparisonBenchmarks.cs", label="return DeserializeJsonNetManualAsync(BenchmarkConstants.JsonText);", span="211-211"];
m3_109 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualAsync()", span="209-209"];
m3_92 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="1016-1016"];
m3_49 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", span="119-119"];
m3_50 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="TestClass c = new TestClass()", span="121-121"];
m3_51 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="123-123"];
m3_60 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="c.strings.Add((string)reader.Value)", span="136-136"];
m3_65 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="c.dictionary.Add(key, reader.ReadAsInt32().GetValueOrDefault())", span="144-144"];
m3_67 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="c.Name = reader.ReadAsString()", span="148-148"];
m3_69 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="c.Now = reader.ReadAsDateTime().GetValueOrDefault()", span="151-151"];
m3_71 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="c.BigNumber = reader.ReadAsDecimal().GetValueOrDefault()", span="154-154"];
m3_74 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="c.Address1 = CreateAddress(reader)", span="158-158"];
m3_79 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="c.Addresses.Add(address)", span="165-165"];
m3_80 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="return c;", span="176-176"];
m3_52 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", color=green, community=0, file="DeserializeComparisonBenchmarks.cs", label="reader.Read()", prediction=0, span="124-124"];
m3_53 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read()", span="125-125"];
m3_54 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.TokenType == JsonToken.PropertyName", span="127-127"];
m3_55 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="string propertyName = (string)reader.Value", span="129-129"];
m3_58 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read()", span="133-133"];
m3_59 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="134-134"];
m3_62 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read()", span="140-140"];
m3_63 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="141-141"];
m3_64 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="string key = (string)reader.Value", span="143-143"];
m3_73 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read()", span="157-157"];
m3_76 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read()", span="161-161"];
m3_77 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="162-162"];
m3_78 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="var address = CreateAddress(reader)", span="164-164"];
m3_56 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label=propertyName, span="130-130"];
m3_57 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="''strings''", span="132-132"];
m3_61 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="''dictionary''", span="139-139"];
m3_66 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="''Name''", span="147-147"];
m3_68 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="''Now''", span="150-150"];
m3_70 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="''BigNumber''", span="153-153"];
m3_72 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="''Address1''", span="156-156"];
m3_75 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="''Addresses''", span="160-160"];
m3_81 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetManual(string)", span="119-119"];
m3_86 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DeserializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_169 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", span="315-315"];
m3_170 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", file="DeserializeComparisonBenchmarks.cs", label="JsonSerializer serializer = new JsonSerializer()", span="317-317"];
m3_171 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", file="DeserializeComparisonBenchmarks.cs", label="return (T)serializer.Deserialize(new BsonReader(new MemoryStream(bson)), typeof(T));", span="318-318"];
m3_172 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeJsonNetBson<T>(byte[])", span="315-315"];
m3_30 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", span="87-87"];
m3_31 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="JavaScriptSerializer ser = new JavaScriptSerializer { MaxJsonLength = int.MaxValue }", span="89-89"];
m3_32 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="return ser.Deserialize<T>(json);", span="91-91"];
m3_33 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeWebExtensions<T>(string)", span="87-87"];
m3_3 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", span="53-53"];
m3_4 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(T))", span="55-55"];
m3_5 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(xml))", span="56-56"];
m3_6 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="return (T)serializer.ReadObject(ms);", span="58-58"];
m3_7 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContract<T>(string)", span="53-53"];
m3_166 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", span="310-310"];
m3_167 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", file="DeserializeComparisonBenchmarks.cs", label="return DeserializeJsonNetBson<TestClass>(BsonData);", span="312-312"];
m3_168 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetBson()", span="310-310"];
m3_46 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", span="113-113"];
m3_47 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", file="DeserializeComparisonBenchmarks.cs", label="return DeserializeJsonNetManual(BenchmarkConstants.JsonText);", span="115-115"];
m3_48 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManual()", span="113-113"];
m3_151 [cluster="Unk.ReadAsDateTimeAsync", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.ReadAsDateTimeAsync", span=""];
m3_11 [cluster="Unk.ReadObject", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.ReadObject", span=""];
m3_91 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="451-451"];
m3_90 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="460-460"];
m3_12 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", span="61-61"];
m3_13 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="DataContractJsonSerializer dataContractSerializer = new DataContractJsonSerializer(typeof(T))", span="63-63"];
m3_14 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(json))", span="64-64"];
m3_15 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="return (T)dataContractSerializer.ReadObject(ms);", span="66-66"];
m3_16 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeDataContractJson<T>(string)", span="61-61"];
m3_42 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m3_106 [cluster="Newtonsoft.Json.Tests.TestObjects.Address.Address()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Address.Address()", span="34-34"];
m3_43 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", span="107-107"];
m3_44 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", file="DeserializeComparisonBenchmarks.cs", label="return JsonConvert.DeserializeObject<TestClass>(BenchmarkConstants.JsonIsoText);", span="109-109"];
m3_45 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetIso()", span="107-107"];
m3_83 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m3_148 [cluster="Unk.GetValueOrDefault", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.GetValueOrDefault", span=""];
m3_17 [cluster="DataContractJsonSerializer.cstr", file="DeserializeComparisonBenchmarks.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m3_87 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="442-442"];
m3_9 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="DeserializeComparisonBenchmarks.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m3_149 [cluster="Unk.Add", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.Add", span=""];
m3_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", span="48-48"];
m3_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", file="DeserializeComparisonBenchmarks.cs", label="return DeserializeDataContract<TestClass>(BenchmarkConstants.XmlText);", span="50-50"];
m3_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DataContractSerializer()", span="48-48"];
m3_21 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", span="75-75"];
m3_22 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", file="DeserializeComparisonBenchmarks.cs", label="BinaryFormatter formatter = new BinaryFormatter()", span="77-77"];
m3_23 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", file="DeserializeComparisonBenchmarks.cs", label="return (T)formatter.Deserialize(new MemoryStream(bytes));", span="78-78"];
m3_24 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.DeserializeBinaryFormatter<T>(byte[])", span="75-75"];
m3_10 [cluster="System.Text.Encoding.GetBytes(string)", file="DeserializeComparisonBenchmarks.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m3_175 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="850-850"];
m3_147 [cluster="Unk.ReadAsInt32Async", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.ReadAsInt32Async", span=""];
m3_27 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", span="82-82"];
m3_28 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", file="DeserializeComparisonBenchmarks.cs", label="return DeserializeWebExtensions<TestClass>(BenchmarkConstants.JsonText);", span="84-84"];
m3_29 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JavaScriptSerializer()", span="82-82"];
m3_111 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="DeserializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", span="215-215"];
m3_112 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="DeserializeComparisonBenchmarks.cs", label="return DeserializeJsonNetManualAsync(BenchmarkConstants.JsonIndentedText);", span="217-217"];
m3_113 [cluster="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="DeserializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks.JsonNetManualIndentedAsync()", span="215-215"];
m3_146 [cluster="Unk.ReadAsync", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.ReadAsync", span=""];
m3_152 [cluster="Unk.ReadAsDecimalAsync", file="DeserializeComparisonBenchmarks.cs", label="Entry Unk.ReadAsDecimalAsync", span=""];
m3_176 [file="DeserializeComparisonBenchmarks.cs", label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", span=""];
m4_281 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", span="446-446"];
m4_283 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="schema.Items = new List<JsonSchema>\r\n            {\r\n                new JsonSchema { Type = JsonSchemaType.Object },\r\n                new JsonSchema { Type = JsonSchemaType.Integer }\r\n            }", span="449-453"];
m4_288 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(0, errorMessages.Count)", span="459-459"];
m4_282 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="448-448"];
m4_284 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="schema.PositionalItemsValidation = true", span="454-454"];
m4_287 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="Assert.IsTrue(a.IsValid(schema, out errorMessages))", span="458-458"];
m4_285 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="JArray a = new JArray(new JObject(), 1)", span="456-456"];
m4_286 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="IList<string> errorMessages", span="457-457"];
m4_289 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.Items_Positional()", span="446-446"];
m4_79 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", span="132-132"];
m4_81 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = JsonSchema.Parse(schemaJson)", span="157-157"];
m4_80 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs", label="string schemaJson = @''\r\n{\r\n  ''''description'''': ''''A person schema'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="134-147"];
m4_82 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs", label="JObject person = JObject.Parse(@''{\r\n        ''''name'''': ''''James'''',\r\n        ''''hobbies'''': [''''.NET'''', ''''Blogging'''', ''''Reading'''', ''''Xbox'''', ''''LOLCATS'''']\r\n      }'')", span="159-162"];
m4_83 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs", label="bool valid = person.IsValid(schema)", span="164-164"];
m4_84 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.Blog()", span="132-132"];
m4_136 [cluster="Newtonsoft.Json.Tests.TestObjects.CircularReferenceWithIdClass.CircularReferenceWithIdClass()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CircularReferenceWithIdClass.CircularReferenceWithIdClass()", span="28-28"];
m4_18 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", span="55-55"];
m4_19 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", color=green, community=0, file="JsonTextReaderBenchmarks.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(FloatArrayJson))", prediction=1, span="57-57"];
m4_20 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", color=green, community=0, file="JsonTextReaderBenchmarks.cs", label="jsonTextReader.Read()", prediction=2, span="59-59"];
m4_22 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", span="55-55"];
m4_25 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", file="JsonTextReaderBenchmarks.cs", label="stringToken.Validate(schema, (sender, args) => errors.Add(args.Message))", span="78-78"];
m4_21 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.ReadAsDecimal()", file="JsonTextReaderBenchmarks.cs", label="jsonTextReader.ReadAsDecimal() != null", span="61-61"];
m4_23 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderBenchmarks.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_24 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="1016-1016"];
m4_26 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(1, errors.Count)", span="79-79"];
m4_27 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''String 'pie' does not match regex pattern 'lol'.'', errors[0])", span="81-81"];
m4_28 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithEventHandler()", span="67-67"];
m4_102 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderBenchmarks.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_48 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", span="97-97"];
m4_49 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = JsonSchema.Parse(''{'pattern':'lol'}'')", span="99-99"];
m4_50 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs", label="JToken stringToken = JToken.FromObject(''pie lol'')", span="100-100"];
m4_51 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs", label="stringToken.Validate(schema)", span="101-101"];
m4_52 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerSuccess()", span="97-97"];
m4_5 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(true, integerToken.IsValid(schema))", span="56-56"];
m4_157 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", span="237-237"];
m4_158 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", file="JsonTextReaderBenchmarks.cs", label="ExceptionAssert.Throws<JsonSchemaException>(''Integer 10 equals maximum value of 10 and exclusive maximum is true.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.Maximum = 10;\r\n                    schema.ExclusiveMaximum = true;\r\n\r\n                    JValue v = new JValue(10);\r\n                    v.Validate(schema);\r\n                })", span="239-248"];
m4_159 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Int()", span="237-237"];
m4_290 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m4_169 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", span="252-252"];
m4_170 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", file="JsonTextReaderBenchmarks.cs", label="ExceptionAssert.Throws<JsonSchemaException>(''Float 10.1 equals maximum value of 10.1 and exclusive maximum is true.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.Maximum = 10.1;\r\n                    schema.ExclusiveMaximum = true;\r\n\r\n                    JValue v = new JValue(10.1);\r\n                    v.Validate(schema);\r\n                })", span="254-263"];
m4_171 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMaximum_Float()", span="252-252"];
m4_145 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m4_221 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82"];
m4_133 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36"];
m4_41 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="198-198"];
m4_17 [cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", span="60-60"];
m4_29 [cluster="System.Collections.Generic.List<T>.List()", file="JsonTextReaderBenchmarks.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_99 [cluster="Newtonsoft.Json.Schema.JsonSchema.ToString()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.ToString()", span="338-338"];
m4_131 [cluster="System.Version.Version(string)", file="JsonTextReaderBenchmarks.cs", label="Entry System.Version.Version(string)", span="0-0"];
m4_75 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="404-404"];
m4_3 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs", label="JToken integerToken = JToken.FromObject(1)", span="53-53"];
m4_74 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1959-1959"];
m4_105 [cluster="string.Join(string, params string[])", file="JsonTextReaderBenchmarks.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m4_180 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", span="267-267"];
m4_181 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", file="JsonTextReaderBenchmarks.cs", label="ExceptionAssert.Throws<JsonSchemaException>(''Integer 10 equals minimum value of 10 and exclusive minimum is true.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.Minimum = 10;\r\n                    schema.ExclusiveMinimum = true;\r\n\r\n                    JValue v = new JValue(10);\r\n                    v.Validate(schema);\r\n                })", span="269-278"];
m4_182 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Int()", span="267-267"];
m4_222 [cluster="Unk.IsTrue", file="JsonTextReaderBenchmarks.cs", label="Entry Unk.IsTrue", span=""];
m4_15 [cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", span="44-44"];
m4_167 [cluster="Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", span="252-252"];
m4_190 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", span="282-282"];
m4_191 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", file="JsonTextReaderBenchmarks.cs", label="ExceptionAssert.Throws<JsonSchemaException>(''Float 10.1 equals minimum value of 10.1 and exclusive minimum is true.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.Minimum = 10.1;\r\n                    schema.ExclusiveMinimum = true;\r\n\r\n                    JValue v = new JValue(10.1);\r\n                    v.Validate(schema);\r\n                })", span="284-293"];
m4_192 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ExclusiveMinimum_Float()", span="282-282"];
m4_132 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49"];
m4_61 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m4_139 [cluster="Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", span="33-33"];
m4_247 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", span="360-360"];
m4_250 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="schema.Items = new List<JsonSchema>\r\n            {\r\n                new JsonSchema\r\n                {\r\n                    UniqueItems = true\r\n                }\r\n            }", span="364-370"];
m4_255 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(4, errorMessages.Count)", span="382-382"];
m4_256 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 1.'', errorMessages[0])", span="383-383"];
m4_257 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 3.'', errorMessages[1])", span="384-384"];
m4_258 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 1.'', errorMessages[2])", span="385-385"];
m4_259 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 4.'', errorMessages[3])", span="386-386"];
m4_248 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="362-362"];
m4_249 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="schema.UniqueItems = true", span="363-363"];
m4_251 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="schema.PositionalItemsValidation = false", span="371-371"];
m4_254 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.IsFalse(a.IsValid(schema, out errorMessages))", span="381-381"];
m4_252 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="JArray a = new JArray(\r\n                new JArray(1, 2),\r\n                new JArray(1, 1),\r\n                new JArray(3, 4),\r\n                new JArray(1, 2),\r\n                new JArray(1, 1)\r\n                )", span="373-379"];
m4_253 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="IList<string> errorMessages", span="380-380"];
m4_260 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_NestedDuplicate()", span="360-360"];
m4_233 [cluster="Unk.IsFalse", file="JsonTextReaderBenchmarks.cs", label="Entry Unk.IsFalse", span=""];
m4_200 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", span="297-297"];
m4_201 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", file="JsonTextReaderBenchmarks.cs", label="ExceptionAssert.Throws<JsonSchemaException>(''Integer 10 is not evenly divisible by 3.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = new JsonSchema();\r\n                    schema.DivisibleBy = 3;\r\n\r\n                    JValue v = new JValue(10);\r\n                    v.Validate(schema);\r\n                })", span="299-307"];
m4_202 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Int()", span="297-297"];
m4_34 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextReaderBenchmarks.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_140 [cluster="DataSet.cstr", file="JsonTextReaderBenchmarks.cs", label="Entry DataSet.cstr", span=""];
m4_30 [cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", span="86-86"];
m4_223 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", span="331-331"];
m4_229 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(2, errorMessages.Count)", span="339-339"];
m4_230 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 3.'', errorMessages[0])", span="340-340"];
m4_231 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 4.'', errorMessages[1])", span="341-341"];
m4_228 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.IsFalse(a.IsValid(schema, out errorMessages))", span="338-338"];
m4_224 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="333-333"];
m4_226 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="JArray a = new JArray(1, 2, 3, 2, 2)", span="336-336"];
m4_227 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="IList<string> errorMessages", span="337-337"];
m4_225 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="schema.UniqueItems = true", span="334-334"];
m4_232 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleDuplicate()", span="331-331"];
m4_246 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
m4_10 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(1, errorMessages.Count)", span="62-62"];
m4_11 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Invalid type. Expected Integer but got String.'', errorMessages[0])", span="63-63"];
m4_12 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", span="49-49"];
m4_13 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="288-288"];
m4_14 [cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1668-1668"];
m4_110 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", span="187-187"];
m4_111 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new List<string> { ''1'', ''Two'', ''III'' })", span="189-189"];
m4_112 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new List<int> { 1 })", span="190-190"];
m4_113 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new Version(''1.2.3.4''))", span="191-191"];
m4_114 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new Store())", span="192-192"];
m4_115 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new Person())", span="193-193"];
m4_116 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new PersonRaw())", span="194-194"];
m4_117 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new CircularReferenceClass() { Name = ''I'm required'' })", span="195-195"];
m4_118 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new CircularReferenceWithIdClass())", span="196-196"];
m4_119 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new ClassWithArray())", span="197-197"];
m4_120 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new ClassWithGuid())", span="198-198"];
m4_121 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new NullableDateTimeTestClass())", span="200-200"];
m4_122 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new DataSet())", span="203-203"];
m4_123 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new object())", span="205-205"];
m4_124 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(1)", span="206-206"];
m4_125 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(''Hi'')", span="207-207"];
m4_126 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new DateTime(2000, 12, 29, 23, 59, 0, DateTimeKind.Utc))", span="208-208"];
m4_127 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(TimeSpan.FromTicks(1000000))", span="209-209"];
m4_128 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(DBNull.Value)", span="211-211"];
m4_129 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="GenerateSchemaAndSerializeFromType(new JsonPropertyWithHandlingValues())", span="213-213"];
m4_130 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromTypeTests()", span="187-187"];
m4_272 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonTextReaderBenchmarks.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_144 [cluster="System.TimeSpan.FromTicks(long)", file="JsonTextReaderBenchmarks.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m4_16 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m4_6 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.IsValid()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(true, integerToken.IsValid(schema, out errorMessages))", span="57-57"];
m4_53 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", span="105-105"];
m4_54 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = JsonSchema.Parse(''{'properties':{'lol':{'required':true}}}'')", span="107-107"];
m4_55 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs", label="JObject o = JObject.Parse(''{}'')", span="108-108"];
m4_57 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs", label="o.Validate(schema, (sender, args) => errors.Add(args.Message))", span="111-111"];
m4_56 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs", label="List<string> errors = new List<string>()", span="110-110"];
m4_58 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Required properties are missing from object: lol.'', errors[0])", span="113-113"];
m4_59 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(1, errors.Count)", span="114-114"];
m4_60 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithOutLineInfoBecauseOfEndToken()", span="105-105"];
m4_100 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="511-511"];
m4_104 [cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonTextReaderBenchmarks.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m4_134 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m4_137 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m4_215 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", span="321-321"];
m4_219 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs", label="Assert.IsTrue(a.IsValid(schema))", span="327-327"];
m4_216 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="323-323"];
m4_218 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs", label="JArray a = new JArray(1, 2, 3)", span="326-326"];
m4_217 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs", label="schema.UniqueItems = true", span="324-324"];
m4_220 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_SimpleUnique()", span="321-321"];
m4_261 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", span="390-390"];
m4_263 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="schema.Properties = new Dictionary<string, JsonSchema>\r\n            {\r\n                {\r\n                    ''bar'',\r\n                    new JsonSchema\r\n                    {\r\n                        Enum = new List<JToken>\r\n                        {\r\n                            new JValue(1),\r\n                            new JValue(2)\r\n                        }\r\n                    }\r\n                }\r\n            }", span="393-406"];
m4_267 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(0, errorMessages.Count)", span="413-413"];
m4_270 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(1, errorMessages.Count)", span="419-419"];
m4_262 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="392-392"];
m4_264 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="JObject o = new JObject(\r\n                new JProperty(''bar'', 1)\r\n                )", span="408-410"];
m4_266 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="Assert.IsTrue(o.IsValid(schema, out errorMessages))", span="412-412"];
m4_269 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="Assert.IsFalse(o.IsValid(schema, out errorMessages))", span="418-418"];
m4_268 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="o = new JObject(\r\n                new JProperty(''bar'', 3)\r\n                )", span="415-417"];
m4_265 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="IList<string> errorMessages", span="411-411"];
m4_271 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.Enum_Properties()", span="390-390"];
m4_97 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="44-44"];
m4_65 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", span="118-118"];
m4_66 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = JsonSchema.Parse(''{'properties':{'lol':{'type':'string'}}}'')", span="120-120"];
m4_67 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="JObject o = JObject.Parse(''{'lol':1}'')", span="121-121"];
m4_69 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="o.Validate(schema, (sender, args) => errors.Add(args.Path + '' - '' + args.Message))", span="124-124"];
m4_68 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="List<string> errors = new List<string>()", span="123-123"];
m4_71 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''1'', o.SelectToken(''lol'').ToString())", span="127-127"];
m4_70 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''lol - Invalid type. Expected String but got Integer. Line 1, position 8.'', errors[0])", span="126-126"];
m4_72 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(1, errors.Count)", span="128-128"];
m4_73 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateFailureWithLineInfo()", span="118-118"];
m4_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", span="37-37"];
m4_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", file="JsonTextReaderBenchmarks.cs", label="FloatArrayJson = new JArray(Enumerable.Range(0, 5000).Select(i => i * 1.1m)).ToString(Formatting.None)", span="39-39"];
m4_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.JsonTextReaderBenchmarks.JsonTextReaderBenchmarks()", span="37-37"];
m4_8 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="i * 1.1m", span="39-39"];
m4_9 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="39-39"];
m4_4 [cluster="System.Linq.Enumerable.Range(int, int)", file="JsonTextReaderBenchmarks.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m4_7 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="39-39"];
m4_98 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="122-122"];
m4_234 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", span="345-345"];
m4_240 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(3, errorMessages.Count)", span="353-353"];
m4_241 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 4.'', errorMessages[0])", span="354-354"];
m4_242 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 6.'', errorMessages[1])", span="355-355"];
m4_243 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Non-unique array item at index 7.'', errorMessages[2])", span="356-356"];
m4_239 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Assert.IsFalse(a.IsValid(schema, out errorMessages))", span="352-352"];
m4_235 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="347-347"];
m4_237 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="JArray a = new JArray(1, new JObject(new JProperty(''value'', ''value!'')), 3, 2, new JObject(new JProperty(''value'', ''value!'')), 4, 2, new JObject(new JProperty(''value'', ''value!'')))", span="350-350"];
m4_238 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="IList<string> errorMessages", span="351-351"];
m4_236 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="schema.UniqueItems = true", span="348-348"];
m4_244 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_ComplexDuplicate()", span="345-345"];
m4_38 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", span="85-85"];
m4_39 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", file="JsonTextReaderBenchmarks.cs", label="ExceptionAssert.Throws<JsonSchemaException>(@''String 'pie' does not match regex pattern 'lol'.'',\r\n                () =>\r\n                {\r\n                    JsonSchema schema = JsonSchema.Parse(''{'pattern':'lol'}'');\r\n                    JToken stringToken = JToken.FromObject(''pie'');\r\n                    stringToken.Validate(schema);\r\n                })", span="87-93"];
m4_40 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.ValidateWithOutEventHandlerFailure()", span="85-85"];
m4_142 [cluster="object.Object()", file="JsonTextReaderBenchmarks.cs", label="Entry object.Object()", span="0-0"];
m4_85 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", span="168-168"];
m4_93 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="token.Validate(typeSchema, (sender, args) => { errors.Add(args.Message); })", span="180-180"];
m4_92 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="List<string> errors = new List<string>()", span="178-178"];
m4_88 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="JsonSchema typeSchema = generator.Generate(typeof(T))", span="172-172"];
m4_91 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="JToken token = JToken.ReadFrom(new JsonTextReader(new StringReader(json)))", span="176-176"];
m4_94 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="errors.Count > 0", span="182-182"];
m4_95 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="Assert.Fail(''Schema generated for type '{0}' is not valid.'' + Environment.NewLine + string.Join(Environment.NewLine, errors.ToArray()), typeof(T))", span="183-183"];
m4_86 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="170-170"];
m4_87 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseAssemblyQualifiedName", span="171-171"];
m4_89 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="string schema = typeSchema.ToString()", span="173-173"];
m4_90 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="175-175"];
m4_96 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.GenerateSchemaAndSerializeFromType<T>(T)", span="168-168"];
m4_209 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", span="311-311"];
m4_213 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs", label="v.Validate(schema)", span="317-317"];
m4_210 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="313-313"];
m4_212 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs", label="JValue v = new JValue(20.49)", span="316-316"];
m4_211 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs", label="schema.DivisibleBy = 0.01", span="314-314"];
m4_214 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.DivisibleBy_Approx()", span="311-311"];
m4_106 [cluster="Unk.Fail", file="JsonTextReaderBenchmarks.cs", label="Entry Unk.Fail", span=""];
m4_47 [cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema)", span="75-75"];
m4_135 [cluster="Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", span="27-27"];
m4_138 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m4_143 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReaderBenchmarks.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m4_101 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m4_245 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m4_203 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="300-307"];
m4_43 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = JsonSchema.Parse(''{'pattern':'lol'}'')", span="90-90"];
m4_31 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="73-73"];
m4_35 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="78-78"];
m4_32 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="errors.Add(args.Message)", span="73-73"];
m4_36 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="errors.Add(args.Message)", span="78-78"];
m4_44 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JToken stringToken = JToken.FromObject(''pie'')", span="91-91"];
m4_42 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="88-93"];
m4_45 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="stringToken.Validate(schema)", span="92-92"];
m4_33 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="73-73"];
m4_37 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="78-78"];
m4_46 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="88-93"];
m4_62 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="111-111"];
m4_76 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="124-124"];
m4_154 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="230-230"];
m4_107 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="180-180"];
m4_63 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="errors.Add(args.Message)", span="111-111"];
m4_77 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="errors.Add(args.Path + '' - '' + args.Message)", span="124-124"];
m4_108 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="errors.Add(args.Message)", span="180-180"];
m4_155 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="errors.Add(args.Message)", span="230-230"];
m4_165 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="v.Validate(schema)", span="247-247"];
m4_177 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="v.Validate(schema)", span="262-262"];
m4_188 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="v.Validate(schema)", span="277-277"];
m4_198 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="v.Validate(schema)", span="292-292"];
m4_207 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="v.Validate(schema)", span="306-306"];
m4_64 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="111-111"];
m4_78 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="124-124"];
m4_156 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="230-230"];
m4_109 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="180-180"];
m4_161 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="242-242"];
m4_173 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="257-257"];
m4_184 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="272-272"];
m4_194 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="287-287"];
m4_204 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="302-302"];
m4_164 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JValue v = new JValue(10)", span="246-246"];
m4_187 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JValue v = new JValue(10)", span="276-276"];
m4_206 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JValue v = new JValue(10)", span="305-305"];
m4_166 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="240-248"];
m4_176 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JValue v = new JValue(10.1)", span="261-261"];
m4_178 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="255-263"];
m4_189 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="270-278"];
m4_197 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="JValue v = new JValue(10.1)", span="291-291"];
m4_199 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="285-293"];
m4_160 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="240-248"];
m4_162 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.Maximum = 10", span="243-243"];
m4_163 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.ExclusiveMaximum = true", span="244-244"];
m4_172 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="255-263"];
m4_174 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.Maximum = 10.1", span="258-258"];
m4_175 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.ExclusiveMaximum = true", span="259-259"];
m4_183 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="270-278"];
m4_185 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.Minimum = 10", span="273-273"];
m4_186 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.ExclusiveMinimum = true", span="274-274"];
m4_193 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Entry lambda expression", span="285-293"];
m4_195 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.Minimum = 10.1", span="288-288"];
m4_196 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.ExclusiveMinimum = true", span="289-289"];
m4_205 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="schema.DivisibleBy = 3", span="303-303"];
m4_208 [cluster="lambda expression", file="JsonTextReaderBenchmarks.cs", label="Exit lambda expression", span="300-307"];
m4_146 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", span="217-217"];
m4_147 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = JsonSchema.Parse(@''{\r\n  ''''description'''': ''''test'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n  }\r\n}'')", span="219-225"];
m4_148 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs", label="JObject o = JObject.Parse(''{'g':1}'')", span="227-227"];
m4_150 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs", label="o.Validate(schema, (sender, args) => errors.Add(args.Message))", span="230-230"];
m4_149 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs", label="List<string> errors = new List<string>()", span="229-229"];
m4_151 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(1, errors.Count)", span="232-232"];
m4_152 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(''Property 'g' has not been defined and the schema does not allow additional properties. Line 1, position 5.'', errors[0])", span="233-233"];
m4_153 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UndefinedPropertyOnNoPropertySchema()", span="217-217"];
m4_273 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", span="423-423"];
m4_279 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs", label="Assert.AreEqual(1, errorMessages.Count)", span="442-442"];
m4_278 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs", label="Assert.IsFalse(o.IsValid(schema, out errorMessages))", span="441-441"];
m4_274 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs", label="JsonSchema schema = new JsonSchema()", span="425-425"];
m4_275 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs", label="schema.Properties = new Dictionary<string, JsonSchema>\r\n            {\r\n                {\r\n                    ''bar'',\r\n                    new JsonSchema\r\n                    {\r\n                        UniqueItems = true\r\n                    }\r\n                }\r\n            }", span="426-435"];
m4_276 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs", label="JObject o = new JObject(\r\n                new JProperty(''bar'', new JArray(1, 2, 3, 3))\r\n                )", span="437-439"];
m4_277 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs", label="IList<string> errorMessages", span="440-440"];
m4_280 [cluster="Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", file="JsonTextReaderBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Schema.ExtensionsTests.UniqueItems_Property()", span="423-423"];
m4_103 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1843-1843"];
m4_179 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m4_141 [cluster="Unk.GenerateSchemaAndSerializeFromType", file="JsonTextReaderBenchmarks.cs", label="Entry Unk.GenerateSchemaAndSerializeFromType", span=""];
m4_168 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JsonTextReaderBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m4_291 [file="JsonTextReaderBenchmarks.cs", label=errors, span=""];
m4_295 [file="JsonTextReaderBenchmarks.cs", label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", span=""];
m4_292 [file="JsonTextReaderBenchmarks.cs", label=errors, span=""];
m4_293 [file="JsonTextReaderBenchmarks.cs", label=errors, span=""];
m4_294 [file="JsonTextReaderBenchmarks.cs", label=errors, span=""];
m4_296 [file="JsonTextReaderBenchmarks.cs", label=errors, span=""];
m5_9 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriterBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="437-437"];
m5_8 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m5_7 [cluster="System.IO.StringWriter.StringWriter()", file="JsonTextWriterBenchmarks.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", span="36-36"];
m5_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs", label="StringWriter sw = new StringWriter()", span="38-38"];
m5_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs", label="JsonTextWriter jsonTextWriter = new JsonTextWriter(sw)", span="39-39"];
m5_5 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs", label="return sw.ToString();", span="43-43"];
m5_3 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs", label="jsonTextWriter.WriteValue(UnicodeCharsString)", span="40-40"];
m5_4 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs", label="jsonTextWriter.Flush()", span="41-41"];
m5_6 [cluster="Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", file="JsonTextWriterBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.JsonTextWriterBenchmarks.SerializeUnicodeChars()", span="36-36"];
m5_10 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriterBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172"];
m5_11 [cluster="System.IO.StringWriter.ToString()", file="JsonTextWriterBenchmarks.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m6_125 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m6_3 [cluster="Unk.>", file="JTokenBenchmarks.cs", label="Entry Unk.>", span=""];
m6_159 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", span="447-447"];
m6_160 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs", label="string json = @''{\r\n  ''''Customers'''': [\r\n    {\r\n      ''''CustomerID'''': ''''234''''\r\n    }\r\n  ]\r\n}''", span="449-455"];
m6_161 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs", label="var ds = JsonConvert.DeserializeObject<CustomerDataSet>(json)", span="457-457"];
m6_162 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''234'', ds.Customers[0].CustomerID)", span="459-459"];
m6_163 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializedTypedDataSet()", span="447-447"];
m6_59 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="773-773"];
m6_44 [cluster="Unk.AcceptChanges", file="JTokenBenchmarks.cs", label="Entry Unk.AcceptChanges", span=""];
m6_157 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408"];
m6_48 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="106-106"];
m6_49 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="DataSet ds = new DataSet()", span="108-108"];
m6_50 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="109-109"];
m6_51 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="110-110"];
m6_52 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented, new IsoDateTimeConverter())", span="112-112"];
m6_53 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="DataSet deserializedDs = JsonConvert.DeserializeObject<DataSet>(json, new IsoDateTimeConverter())", span="144-144"];
m6_54 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}'', json)", span="146-175"];
m6_55 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.IsNotNull(deserializedDs)", span="177-177"];
m6_56 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="106-106"];
m6_58 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m6_127 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", span="332-332"];
m6_128 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="DataSet ds = new DataSet()", span="334-334"];
m6_129 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="335-335"];
m6_130 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="336-336"];
m6_131 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="DataSetAndTableTestClass c = new DataSetAndTableTestClass\r\n            {\r\n                Before = ''Before'',\r\n                Set = ds,\r\n                Middle = ''Middle'',\r\n                Table = CreateDataTable(''LoneTable'', 2),\r\n                After = ''After''\r\n            }", span="338-345"];
m6_132 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new IsoDateTimeConverter())", span="347-347"];
m6_135 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(c.Before, c2.Before)", span="405-405"];
m6_136 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(c.Set.Tables.Count, c2.Set.Tables.Count)", span="406-406"];
m6_137 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(c.Middle, c2.Middle)", span="407-407"];
m6_138 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(c.Table.Rows.Count, c2.Table.Rows.Count)", span="408-408"];
m6_139 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(c.After, c2.After)", span="409-409"];
m6_133 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before'''',\r\n  ''''Set'''': {\r\n    ''''FirstTable'''': [\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      },\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 2,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      }\r\n    ],\r\n    ''''SecondTable'''': [\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      }\r\n    ]\r\n  },\r\n  ''''Middle'''': ''''Middle'''',\r\n  ''''Table'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''After'''': ''''After''''\r\n}'', json)", span="349-401"];
m6_134 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="DataSetAndTableTestClass c2 = JsonConvert.DeserializeObject<DataSetAndTableTestClass>(json, new IsoDateTimeConverter())", span="403-403"];
m6_140 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", span="332-332"];
m6_60 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="181-181"];
m6_61 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="string json = @''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}''", span="183-204"];
m6_62 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="DataSet ds = JsonConvert.DeserializeObject<DataSet>(json)", span="206-206"];
m6_63 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.IsNotNull(ds)", span="207-207"];
m6_64 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(2, ds.Tables.Count)", span="209-209"];
m6_65 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''FirstTable'', ds.Tables[0].TableName)", span="210-210"];
m6_66 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''SecondTable'', ds.Tables[1].TableName)", span="211-211"];
m6_67 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="DataTable dt = ds.Tables[0]", span="213-213"];
m6_80 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(1, ds.Tables[0].Rows.Count)", span="227-227"];
m6_81 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(1, ds.Tables[1].Rows.Count)", span="228-228"];
m6_68 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''StringCol'', dt.Columns[0].ColumnName)", span="214-214"];
m6_69 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(typeof(string), dt.Columns[0].DataType)", span="215-215"];
m6_70 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''Int32Col'', dt.Columns[1].ColumnName)", span="216-216"];
m6_71 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(typeof(long), dt.Columns[1].DataType)", span="217-217"];
m6_72 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''BooleanCol'', dt.Columns[2].ColumnName)", span="218-218"];
m6_73 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(typeof(bool), dt.Columns[2].DataType)", span="219-219"];
m6_74 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''TimeSpanCol'', dt.Columns[3].ColumnName)", span="220-220"];
m6_75 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(typeof(string), dt.Columns[3].DataType)", span="221-221"];
m6_76 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''DateTimeCol'', dt.Columns[4].ColumnName)", span="222-222"];
m6_77 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(typeof(DateTime), dt.Columns[4].DataType)", span="223-223"];
m6_78 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''DecimalCol'', dt.Columns[5].ColumnName)", span="224-224"];
m6_79 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(typeof(double), dt.Columns[5].DataType)", span="225-225"];
m6_82 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="181-181"];
m6_41 [cluster="DataColumn.cstr", file="JTokenBenchmarks.cs", label="Entry DataColumn.cstr", span=""];
m6_43 [cluster="Unk.NewRow", file="JTokenBenchmarks.cs", label="Entry Unk.NewRow", span=""];
m6_45 [cluster="Unk.SerializeObject", file="JTokenBenchmarks.cs", label="Entry Unk.SerializeObject", span=""];
m6_141 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DataSetAndTableTestClass.DataSetAndTableTestClass()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DataSetAndTableTestClass.DataSetAndTableTestClass()", span="278-278"];
m6_143 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", span="413-413"];
m6_144 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="CustomerDataSet ds = new CustomerDataSet()", span="415-415"];
m6_145 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="ds.Customers.AddCustomersRow(''234'')", span="416-416"];
m6_146 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented)", span="418-418"];
m6_147 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Customers'''': [\r\n    {\r\n      ''''CustomerID'''': ''''234''''\r\n    }\r\n  ]\r\n}'', json)", span="420-426"];
m6_148 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="CustomerDataSet ds1 = new CustomerDataSet()", span="428-428"];
m6_149 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="DataTable table = ds1.Tables[''Customers'']", span="429-429"];
m6_150 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="DataRow row = ds1.Tables[''Customers''].NewRow()", span="430-430"];
m6_153 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="string json1 = JsonConvert.SerializeObject(ds1, Formatting.Indented)", span="435-435"];
m6_152 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="table.Rows.Add(row)", span="433-433"];
m6_151 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="row[''CustomerID''] = ''234''", span="431-431"];
m6_154 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Customers'''': [\r\n    {\r\n      ''''CustomerID'''': ''''234''''\r\n    }\r\n  ]\r\n}'', json1)", span="437-443"];
m6_155 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializedTypedDataSet()", span="413-413"];
m6_142 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="538-538"];
m6_118 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", span="288-288"];
m6_119 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs", label="DataSet ds = new DataSet()", span="290-290"];
m6_120 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs", label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="291-291"];
m6_121 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs", label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="292-292"];
m6_122 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs", label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="294-297"];
m6_123 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''firstTable'''': [\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 1,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''decimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 2,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''decimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''secondTable'''': [\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 1,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''decimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}'', json)", span="299-328"];
m6_124 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", span="288-288"];
m6_126 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
m6_39 [cluster="DataSet.cstr", file="JTokenBenchmarks.cs", label="Entry DataSet.cstr", span=""];
m6_8 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", span="51-51"];
m6_9 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="DataSet dataSet = new DataSet(''dataSet'')", span="53-53"];
m6_10 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="dataSet.Namespace = ''NetFrameWork''", span="54-54"];
m6_11 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="DataTable table = new DataTable()", span="55-55"];
m6_17 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="dataSet.Tables.Add(table)", span="62-62"];
m6_24 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="dataSet.AcceptChanges()", span="71-71"];
m6_25 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="string json = JsonConvert.SerializeObject(dataSet, Formatting.Indented)", span="73-73"];
m6_12 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="DataColumn idColumn = new DataColumn(''id'', typeof(int))", span="56-56"];
m6_15 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="table.Columns.Add(idColumn)", span="60-60"];
m6_16 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="table.Columns.Add(itemColumn)", span="61-61"];
m6_20 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="DataRow newRow = table.NewRow()", span="66-66"];
m6_22 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="table.Rows.Add(newRow)", span="68-68"];
m6_13 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="idColumn.AutoIncrement = true", span="57-57"];
m6_14 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="DataColumn itemColumn = new DataColumn(''item'')", span="59-59"];
m6_18 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="int i = 0", span="64-64"];
m6_19 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="i < 2", span="64-64"];
m6_21 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="newRow[''item''] = ''item '' + i", span="67-67"];
m6_23 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="i++", span="64-64"];
m6_26 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Table1'''': [\r\n    {\r\n      ''''id'''': 0,\r\n      ''''item'''': ''''item 0''''\r\n    },\r\n    {\r\n      ''''id'''': 1,\r\n      ''''item'''': ''''item 1''''\r\n    }\r\n  ]\r\n}'', json)", span="75-86"];
m6_27 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="DataSet deserializedDataSet = JsonConvert.DeserializeObject<DataSet>(json)", span="88-88"];
m6_28 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="Assert.IsNotNull(deserializedDataSet)", span="89-89"];
m6_29 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(1, deserializedDataSet.Tables.Count)", span="91-91"];
m6_30 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="DataTable dt = deserializedDataSet.Tables[0]", span="93-93"];
m6_31 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''Table1'', dt.TableName)", span="95-95"];
m6_33 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(''id'', dt.Columns[0].ColumnName)", span="97-97"];
m6_34 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", color=green, community=0, file="JTokenBenchmarks.cs", label="Assert.AreEqual(typeof(long), dt.Columns[0].DataType)", prediction=3, span="98-98"];
m6_35 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", color=green, community=0, file="JTokenBenchmarks.cs", label="Assert.AreEqual(''item'', dt.Columns[1].ColumnName)", prediction=3, span="99-99"];
m6_36 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", color=green, community=0, file="JTokenBenchmarks.cs", label="Assert.AreEqual(typeof(string), dt.Columns[1].DataType)", prediction=3, span="100-100"];
m6_37 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="Assert.AreEqual(2, dt.Rows.Count)", span="102-102"];
m6_38 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", span="51-51"];
m6_46 [cluster="Unk.AreEqual", file="JTokenBenchmarks.cs", label="Entry Unk.AreEqual", span=""];
m6_156 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", span="49-49"];
m6_158 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="511-511"];
m6_7 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="725-725"];
m6_47 [cluster="Unk.IsNotNull", file="JTokenBenchmarks.cs", label="Entry Unk.IsNotNull", span=""];
m6_40 [cluster="DataTable.cstr", file="JTokenBenchmarks.cs", label="Entry DataTable.cstr", span=""];
m6_116 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JTokenBenchmarks.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m6_117 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenBenchmarks.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_4 [cluster="lambda expression", file="JTokenBenchmarks.cs", label="Entry lambda expression", span="47-47"];
m6_5 [cluster="lambda expression", file="JTokenBenchmarks.cs", label="JsonConvert.DeserializeObject<DataSet>(''{\''pending_count\'':23,\''completed_count\'':45}'')", span="47-47"];
m6_6 [cluster="lambda expression", file="JTokenBenchmarks.cs", label="Exit lambda expression", span="47-47"];
m6_42 [cluster="Unk.Add", file="JTokenBenchmarks.cs", label="Entry Unk.Add", span=""];
m6_57 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", span="231-231"];
m6_83 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="DataTable myTable = new DataTable(dataTableName)", span="234-234"];
m6_104 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="i <= rows", span="262-262"];
m6_84 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="DataColumn colString = new DataColumn(''StringCol'')", span="237-237"];
m6_86 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myTable.Columns.Add(colString)", span="239-239"];
m6_89 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myTable.Columns.Add(colInt32)", span="243-243"];
m6_92 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myTable.Columns.Add(colBoolean)", span="247-247"];
m6_95 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myTable.Columns.Add(colTimeSpan)", span="251-251"];
m6_99 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myTable.Columns.Add(colDateTime)", span="256-256"];
m6_102 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myTable.Columns.Add(colDecimal)", span="260-260"];
m6_105 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="DataRow myNewRow = myTable.NewRow()", span="264-264"];
m6_112 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myTable.Rows.Add(myNewRow)", span="272-272"];
m6_114 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="return myTable;", span="275-275"];
m6_85 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="colString.DataType = typeof(string)", span="238-238"];
m6_87 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="DataColumn colInt32 = new DataColumn(''Int32Col'')", span="241-241"];
m6_88 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="colInt32.DataType = typeof(int)", span="242-242"];
m6_90 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="DataColumn colBoolean = new DataColumn(''BooleanCol'')", span="245-245"];
m6_91 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="colBoolean.DataType = typeof(bool)", span="246-246"];
m6_93 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="DataColumn colTimeSpan = new DataColumn(''TimeSpanCol'')", span="249-249"];
m6_94 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="colTimeSpan.DataType = typeof(TimeSpan)", span="250-250"];
m6_96 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="DataColumn colDateTime = new DataColumn(''DateTimeCol'')", span="253-253"];
m6_97 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="colDateTime.DataType = typeof(DateTime)", span="254-254"];
m6_98 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="colDateTime.DateTimeMode = DataSetDateTime.Utc", span="255-255"];
m6_100 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="DataColumn colDecimal = new DataColumn(''DecimalCol'')", span="258-258"];
m6_101 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="colDecimal.DataType = typeof(decimal)", span="259-259"];
m6_103 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="int i = 1", span="262-262"];
m6_107 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myNewRow[''Int32Col''] = i", span="267-267"];
m6_113 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="i++", span="262-262"];
m6_106 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myNewRow[''StringCol''] = ''Item Name''", span="266-266"];
m6_108 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myNewRow[''BooleanCol''] = true", span="268-268"];
m6_109 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myNewRow[''TimeSpanCol''] = new TimeSpan(10, 22, 10, 15, 100)", span="269-269"];
m6_110 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myNewRow[''DateTimeCol''] = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc)", span="270-270"];
m6_111 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="myNewRow[''DecimalCol''] = 64.0021", span="271-271"];
m6_115 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", span="231-231"];
m6_0 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", file="JTokenBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", span="44-44"];
m6_1 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", file="JTokenBenchmarks.cs", label="ExceptionAssert.Throws<JsonException>(''Unexpected JSON token when reading DataTable. Expected StartArray, got Integer. Path 'pending_count', line 1, position 19.'',\r\n                () => JsonConvert.DeserializeObject<DataSet>(''{\''pending_count\'':23,\''completed_count\'':45}''))", span="46-47"];
m6_2 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", file="JTokenBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeInvalidDataTable()", span="44-44"];
m6_164 [file="JTokenBenchmarks.cs", label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", span=""];
m7_4 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", file="JValueConvertBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", span="46-46"];
m7_5 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", file="JValueConvertBenchmarks.cs", label="return (string)StringJValue.ToObject(typeof(string), new JsonSerializer());", span="48-48"];
m7_6 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", file="JValueConvertBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectWithSerializer()", span="46-46"];
m7_3 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JValueConvertBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1942-1942"];
m7_9 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", file="JValueConvertBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", span="52-52"];
m7_10 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", file="JValueConvertBenchmarks.cs", label="return StringJValue.Value<string>();", span="54-54"];
m7_11 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", file="JValueConvertBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectConvert()", span="52-52"];
m7_13 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", file="JValueConvertBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", span="58-58"];
m7_14 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", file="JValueConvertBenchmarks.cs", label="return (string)StringJValue;", span="60-60"];
m7_15 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", file="JValueConvertBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectCast()", span="58-58"];
m7_7 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JValueConvertBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m7_12 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="JValueConvertBenchmarks.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="157-157"];
m7_8 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JValueConvertBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="2077-2077"];
m7_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", file="JValueConvertBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", span="40-40"];
m7_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", file="JValueConvertBenchmarks.cs", label="return (string)StringJValue.ToObject(typeof(string));", span="42-42"];
m7_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", file="JValueConvertBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.JValueConvertBenchmarks.JTokenToObjectFast()", span="40-40"];
m8_17 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", file="LargeJArrayBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", span="67-67"];
m8_18 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", file="LargeJArrayBenchmarks.cs", label="_largeJArraySample.Add(1)", span="69-69"];
m8_19 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", file="LargeJArrayBenchmarks.cs", label="_largeJArraySample.RemoveAt(_largeJArraySample.Count - 1)", span="70-70"];
m8_20 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", file="LargeJArrayBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.AddPerformance()", span="67-67"];
m8_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", span="41-41"];
m8_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs", label="_largeJArraySample = new JArray()", span="43-43"];
m8_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs", label="int i = 0", span="44-44"];
m8_3 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs", label="i < 100000", span="44-44"];
m8_4 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs", label="_largeJArraySample.Add(i)", span="46-46"];
m8_5 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs", label="i++", span="44-44"];
m8_6 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", file="LargeJArrayBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.SetupData()", span="41-41"];
m8_7 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="LargeJArrayBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m8_8 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="LargeJArrayBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="345-345"];
m8_13 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", file="LargeJArrayBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", span="59-59"];
m8_14 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", file="LargeJArrayBenchmarks.cs", label="JToken last = _largeJArraySample.Last", span="61-61"];
m8_15 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", file="LargeJArrayBenchmarks.cs", label="return last.Path;", span="63-63"];
m8_16 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", file="LargeJArrayBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathLastItem()", span="59-59"];
m8_21 [cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="LargeJArrayBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JArray.RemoveAt(int)", span="323-323"];
m8_9 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", file="LargeJArrayBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", span="51-51"];
m8_10 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", file="LargeJArrayBenchmarks.cs", label="JToken first = _largeJArraySample.First", span="53-53"];
m8_11 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", file="LargeJArrayBenchmarks.cs", label="return first.Path;", span="55-55"];
m8_12 [cluster="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", file="LargeJArrayBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks.JTokenPathFirstItem()", span="51-51"];
m8_22 [file="LargeJArrayBenchmarks.cs", label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks", span=""];
m9_5 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", file="LowLevelBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", span="50-50"];
m9_6 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", file="LowLevelBenchmarks.cs", label="decimal value", span="52-52"];
m9_7 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", file="LowLevelBenchmarks.cs", label="ConvertUtils.DecimalTryParse(FloatChars, 0, FloatChars.Length, out value)", span="53-53"];
m9_8 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", file="LowLevelBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseChars()", span="50-50"];
m9_9 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.DecimalTryParse(char[], int, int, out decimal)", file="LowLevelBenchmarks.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.DecimalTryParse(char[], int, int, out decimal)", span="1361-1361"];
m9_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", file="LowLevelBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", span="43-43"];
m9_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", file="LowLevelBenchmarks.cs", label="decimal value", span="45-45"];
m9_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", file="LowLevelBenchmarks.cs", label="decimal.TryParse(FloatText, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="46-46"];
m9_3 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", file="LowLevelBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.DecimalTryParseString()", span="43-43"];
m9_16 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="LowLevelBenchmarks.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="106-106"];
m9_4 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="LowLevelBenchmarks.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m9_17 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="LowLevelBenchmarks.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="143-143"];
m9_10 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", span="57-57"];
m9_11 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs", label="string text = @''The general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n\r\nThe general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n\r\nThe general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n''", span="59-79"];
m9_12 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs", label="StringWriter w = StringUtils.CreateStringWriter(text.Length)", span="81-81"];
m9_14 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs", label="JavaScriptUtils.WriteEscapedJavaScriptString(w, text, '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, null, ref buffer)", span="84-84"];
m9_13 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs", label="char[] buffer = null", span="83-83"];
m9_15 [cluster="Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", file="LowLevelBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.LowLevelBenchmarks.WriteEscapedJavaScriptString()", span="57-57"];
m10_3 [cluster="BenchmarkSwitcher.cstr", file="Runner.cs", label="Entry BenchmarkSwitcher.cstr", span=""];
m10_5 [cluster="Unk.Run", file="Runner.cs", label="Entry Unk.Run", span=""];
m10_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", file="Runner.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", span="48-48"];
m10_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", file="Runner.cs", label="new BenchmarkSwitcher(typeof(Runner).GetTypeInfo().Assembly).Run(new []{ ''*'' })", span="50-50"];
m10_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", file="Runner.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.Runner.RunBenchmarks()", span="48-48"];
m10_4 [cluster="System.Type.GetTypeInfo()", file="Runner.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m11_14 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="SerializeBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="999-999"];
m11_6 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", span="51-51"];
m11_7 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs", label="StreamWriter file = System.IO.File.CreateText(''largewrite.json'')", span="53-53"];
m11_8 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs", label="JsonSerializer serializer = new JsonSerializer()", span="55-55"];
m11_10 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs", label="serializer.Serialize(file, LargeCollection)", span="57-57"];
m11_9 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs", label="serializer.Formatting = Formatting.Indented", span="56-56"];
m11_11 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", file="SerializeBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeLargeJsonFile()", span="51-51"];
m11_13 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="SerializeBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m11_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", file="SerializeBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", span="43-43"];
m11_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", file="SerializeBenchmarks.cs", label="string json = System.IO.File.ReadAllText(''large.json'')", span="45-45"];
m11_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", file="SerializeBenchmarks.cs", label="LargeCollection = JsonConvert.DeserializeObject<IList<RootObject>>(json)", span="47-47"];
m11_3 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", file="SerializeBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeBenchmarks.SerializeBenchmarks()", span="43-43"];
m11_5 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="SerializeBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m11_4 [cluster="System.IO.File.ReadAllText(string)", file="SerializeBenchmarks.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m11_12 [cluster="System.IO.File.CreateText(string)", file="SerializeBenchmarks.cs", label="Entry System.IO.File.CreateText(string)", span="0-0"];
m12_616 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1745-1745"];
m12_620 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1UL, item.WantedUnitID)", span="1767-1767"];
m12_618 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs", label="GroupingInfo g = JsonConvert.DeserializeObject<GroupingInfo>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="1761-1764"];
m12_619 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs", label="ReportItemKeys item = (ReportItemKeys)g.ItemIdentifier", span="1766-1766"];
m12_617 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs", label="string json = @''{\r\n    ''''itemIdentifier'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.ReportItemKeys, Newtonsoft.Json.Tests'''',\r\n        ''''dataType'''': 0,\r\n        ''''wantedUnitID'''': 1,\r\n        ''''application'''': 3,\r\n        ''''id'''': 101,\r\n        ''''name'''': ''''Machine''''\r\n    },\r\n    ''''isBusinessEntity'''': false,\r\n    ''''isKeyItem'''': true,\r\n    ''''summarizeOnThisItem'''': false\r\n}''", span="1747-1759"];
m12_621 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1745-1745"];
m12_318 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="956-956"];
m12_319 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="SerializeComparisonBenchmarks.cs", label="return new CustomEnumerable<T>(newVal, this);", span="958-958"];
m12_320 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="956-956"];
m12_55 [cluster="string.Contains(string)", file="SerializeComparisonBenchmarks.cs", label="Entry string.Contains(string)", span="0-0"];
m12_206 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Phone'')", span="297-297"];
m12_219 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(Purchase), newValues[1])", span="715-715"];
m12_25 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractSerializer()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractSerializer()", span="73-73"];
m12_56 [cluster="Unk.IsTrue", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.IsTrue", span=""];
m12_57 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="153-153"];
m12_58 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="158-158"];
m12_567 [cluster="System.Guid.NewGuid()", file="SerializeComparisonBenchmarks.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m12_400 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", span="1950-1950"];
m12_183 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(keyValuePair.Value)", span="272-272"];
m12_187 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Now'')", span="277-277"];
m12_189 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''BigNumber'')", span="279-279"];
m12_192 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteStartObjectAsync()", span="282-282"];
m12_193 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Street'')", span="283-283"];
m12_194 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(c.BigNumber)", span="284-284"];
m12_195 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Street'')", span="285-285"];
m12_196 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(c.BigNumber)", span="286-286"];
m12_197 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Street'')", span="287-287"];
m12_184 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteEndObjectAsync()", span="274-274"];
m12_186 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(c.Name)", span="276-276"];
m12_188 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(c.Now)", span="278-278"];
m12_190 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(c.BigNumber)", span="280-280"];
m12_191 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Address1'')", span="281-281"];
m12_185 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Name'')", span="275-275"];
m12_198 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(c.BigNumber)", span="288-288"];
m12_152 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="SerializeComparisonBenchmarks.cs", label="string json = @''{\r\n''''$type'''': '''''' + typeName + @'''''',\r\n''''RequestData'''': {\r\n''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib,Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n''''Id'''': ''''siedemnaście'''',\r\n''''X'''': ''''323''''\r\n},\r\n''''Method'''': ''''GET'''',\r\n''''Url'''': ''''http://www.onet.pl'''',\r\n''''RequestEncoding'''': ''''UTF-8'''',\r\n''''CorrelationId'''': ''''xyz''''\r\n}''", span="480-491"];
m12_104 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", span="185-185"];
m12_279 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="819-819"];
m12_284 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs", label="Message deserialized = JsonConvert.DeserializeObject<Message>(json)", span="839-839"];
m12_283 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented)", span="829-829"];
m12_280 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs", label="Message message = new Message()", span="821-821"];
m12_285 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs", label="SearchDetails searchDetails = (SearchDetails)deserialized.Body", span="841-841"];
m12_282 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs", label="message.Body = new SearchDetails\r\n            {\r\n                Query = ''Json.NET'',\r\n                Language = ''en-us''\r\n            }", span="823-827"];
m12_281 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs", label="message.Address = ''http://www.google.com''", span="822-822"];
m12_286 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="819-819"];
m12_653 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1891-1891"];
m12_656 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="ReferenceEquals(this, obj)", span="1894-1894"];
m12_659 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="return Name.Equals(((IExample)obj).Name);", span="1897-1897"];
m12_654 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="obj == null", span="1893-1893"];
m12_657 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="return true;", span="1894-1894"];
m12_658 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="obj is IExample", span="1895-1895"];
m12_655 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="return false;", span="1893-1893"];
m12_660 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="return false;", span="1901-1901"];
m12_661 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1891-1891"];
m12_580 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1637-1637"];
m12_584 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChildList, Newtonsoft.Json.Tests'''',\r\n    ''''$values'''': [\r\n      ''''string!''''\r\n    ]\r\n  }\r\n}'', json)", span="1659-1666"];
m12_587 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, ((MyChildList)p2.Child).Count)", span="1670-1670"];
m12_588 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(''string!'', ((MyChildList)p2.Child)[0])", span="1671-1671"];
m12_582 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1647-1655"];
m12_583 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(p, settings)", span="1657-1657"];
m12_585 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1668-1668"];
m12_586 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChildList), p2.Child)", span="1669-1669"];
m12_581 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChildList\r\n                {\r\n                    ''string!''\r\n                }\r\n            }", span="1639-1645"];
m12_589 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1637-1637"];
m12_17 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", span="46-46"];
m12_23 [cluster="Newtonsoft.Json.Tests.TestObjects.Address.Address()", color=green, community=0, file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Address.Address()", prediction=6, span="34-34"];
m12_18 [cluster="Newtonsoft.Json.Tests.TestObjects.TestClass.TestClass()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestClass.TestClass()", span="34-34"];
m12_20 [cluster="System.DateTime.AddDays(double)", file="SerializeComparisonBenchmarks.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m12_19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_21 [cluster="System.DateTime.AddHours(double)", file="SerializeComparisonBenchmarks.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m12_22 [cluster="System.Collections.Generic.List<T>.List()", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_24 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_627 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1793-1793"];
m12_628 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="info.AddValue(''c'', Child)", span="1795-1795"];
m12_629 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1793-1793"];
m12_351 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", span="982-982"];
m12_288 [cluster="Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", span="1822-1822"];
m12_289 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="853-853"];
m12_293 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n  ''''First'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 404,\r\n    ''''Url'''': ''''http://www.bing.com''''\r\n  },\r\n  ''''Second'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 400,\r\n    ''''Url'''': ''''http://www.google.com''''\r\n  },\r\n  ''''List'''': {\r\n    ''''$type'''': ''''System.Collections.Generic.List`1[['' + urlStatusTypeName + @'']], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 300,\r\n        ''''Url'''': ''''http://www.yahoo.com''''\r\n      },\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 200,\r\n        ''''Url'''': ''''http://www.askjeeves.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json)", span="876-903"];
m12_297 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(3, newCollection.Count)", span="914-914"];
m12_298 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''http://www.bing.com'', ((UrlStatus)newCollection[''First'']).Url)", span="915-915"];
m12_300 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(2, statues.Count)", span="918-918"];
m12_291 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(collection, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n            })", span="868-872"];
m12_294 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="object c = JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n            })", span="905-909"];
m12_290 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="Dictionary<string, object> collection = new Dictionary<string, object>()\r\n            {\r\n                { ''First'', new UrlStatus { Status = 404, Url = @''http://www.bing.com'' } },\r\n                { ''Second'', new UrlStatus { Status = 400, Url = @''http://www.google.com'' } },\r\n                {\r\n                    ''List'', new List<UrlStatus>\r\n                    {\r\n                        new UrlStatus { Status = 300, Url = @''http://www.yahoo.com'' },\r\n                        new UrlStatus { Status = 200, Url = @''http://www.askjeeves.com'' }\r\n                    }\r\n                }\r\n            }", span="855-866"];
m12_292 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="string urlStatusTypeName = ReflectionUtils.GetTypeName(typeof(UrlStatus), FormatterAssemblyStyle.Simple, null)", span="874-874"];
m12_296 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="Dictionary<string, object> newCollection = (Dictionary<string, object>)c", span="913-913"];
m12_299 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="List<UrlStatus> statues = (List<UrlStatus>)newCollection[''List'']", span="917-917"];
m12_295 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c)", span="911-911"];
m12_301 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="853-853"];
m12_274 [cluster="Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", span="33-33"];
m12_82 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetLinq()", file="SerializeComparisonBenchmarks.cs", label="return SerializeJsonNetLinq(TestClass);", span="151-151"];
m12_569 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1602-1602"];
m12_573 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n    ''''p'''': ''''string!''''\r\n  }\r\n}'', json)", span="1624-1629"];
m12_576 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1633-1633"];
m12_571 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1612-1620"];
m12_572 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(p, settings)", span="1622-1622"];
m12_574 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1631-1631"];
m12_575 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1632-1632"];
m12_570 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1604-1610"];
m12_577 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1602-1602"];
m12_52 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="SerializeComparisonBenchmarks.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m12_361 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", span="1841-1841"];
m12_454 [cluster="object.ToString()", file="SerializeComparisonBenchmarks.cs", label="Entry object.ToString()", span="0-0"];
m12_42 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="SerializeComparisonBenchmarks.cs", label="serializer.Serialize(new JsonTextWriter(sw) { Formatting = Formatting.Indented }, new WagePerson(), typeof(Person))", span="137-137"];
m12_218 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="713-713"];
m12_383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="182-182"];
m12_664 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1905-1905"];
m12_665 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs", label="Name == null", span="1907-1907"];
m12_667 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs", label="return Name.GetHashCode();", span="1910-1910"];
m12_666 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs", label="return 0;", span="1908-1908"];
m12_668 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1905-1905"];
m12_39 [cluster="Unk.WriteObject", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.WriteObject", span=""];
m12_44 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", file="SerializeComparisonBenchmarks.cs", label="return SerializeBinaryFormatter(TestClass);", span="96-96"];
m12_47 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs", label="MemoryStream ms = new MemoryStream(Buffer)", span="101-101"];
m12_43 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", span="94-94"];
m12_45 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.BinaryFormatter()", span="94-94"];
m12_46 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", span="99-99"];
m12_40 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="SerializeComparisonBenchmarks.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m12_48 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs", label="BinaryFormatter formatter = new BinaryFormatter()", span="102-102"];
m12_41 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SerializeComparisonBenchmarks.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m12_49 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs", label="formatter.Serialize(ms, value)", span="103-103"];
m12_225 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetBson()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetBson()", span="312-312"];
m12_554 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", span="1922-1922"];
m12_199 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteEndObjectAsync()", span="289-289"];
m12_204 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Street'')", span="295-295"];
m12_201 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteStartArrayAsync()", span="291-291"];
m12_203 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteStartObjectAsync()", span="294-294"];
m12_200 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Addresses'')", span="290-290"];
m12_202 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="c.Addresses", span="292-292"];
m12_205 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(address.Street)", span="296-296"];
m12_453 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", span="1960-1960"];
m12_234 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="SerializeComparisonBenchmarks.cs", label="return Type.GetType(resolvedTypeName, true);", span="739-739"];
m12_419 [cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="63-63"];
m12_88 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(''Name!'', ((EmployeeReference)employee).Name)", span="258-258"];
m12_54 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", span="0-0"];
m12_162 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="SerializeComparisonBenchmarks.cs", label="string containerTypeName = typeof(Container).AssemblyQualifiedName", span="510-510"];
m12_153 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="SerializeComparisonBenchmarks.cs", label="ICorrelatedMessage message = JsonConvert.DeserializeObject<ICorrelatedMessage>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="493-497"];
m12_155 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="SerializeComparisonBenchmarks.cs", label="SendHttpRequest request = (SendHttpRequest)message", span="501-501"];
m12_669 [cluster="string.GetHashCode()", file="SerializeComparisonBenchmarks.cs", label="Entry string.GetHashCode()", span="0-0"];
m12_101 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="304-308"];
m12_102 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''2000-12-30T00:00:00Z'''',\r\n    ''''LastModified'''': ''''2000-12-30T00:00:00Z''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]'', json)", span="310-330"];
m12_103 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="282-282"];
m12_224 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetBson()", file="SerializeComparisonBenchmarks.cs", label="return SerializeJsonNetBson(TestClass);", span="314-314"];
m12_210 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteEndObjectAsync()", span="301-301"];
m12_214 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="return sw.ToString();", span="307-307"];
m12_221 [cluster="Unk.WriteEndObjectAsync", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.WriteEndObjectAsync", span=""];
m12_213 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.FlushAsync()", span="306-306"];
m12_215 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", span="253-253"];
m12_217 [cluster="Unk.WritePropertyNameAsync", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.WritePropertyNameAsync", span=""];
m12_220 [cluster="Unk.WriteEndArrayAsync", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.WriteEndArrayAsync", span=""];
m12_211 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteEndArrayAsync()", span="303-303"];
m12_212 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteEndObjectAsync()", span="304-304"];
m12_216 [cluster="Unk.WriteStartObjectAsync", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.WriteStartObjectAsync", span=""];
m12_222 [cluster="Unk.FlushAsync", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.FlushAsync", span=""];
m12_53 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", file="SerializeComparisonBenchmarks.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", span="0-0"];
m12_106 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="188-188"];
m12_107 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", color=green, community=0, file="SerializeComparisonBenchmarks.cs", label="writer.WriteStartObject()", prediction=7, span="189-189"];
m12_108 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", color=green, community=0, file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''strings'')", prediction=8, span="190-190"];
m12_109 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteStartArray()", span="191-191"];
m12_111 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(s)", span="194-194"];
m12_119 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Name'')", span="205-205"];
m12_120 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(c.Name)", span="206-206"];
m12_114 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteStartObject()", span="198-198"];
m12_115 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="c.dictionary", span="199-199"];
m12_116 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(keyValuePair.Key)", span="201-201"];
m12_117 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(keyValuePair.Value)", span="202-202"];
m12_118 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteEndObject()", span="204-204"];
m12_110 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="c.strings", span="192-192"];
m12_112 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteEndArray()", span="196-196"];
m12_113 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''dictionary'')", span="197-197"];
m12_121 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Now'')", span="207-207"];
m12_223 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="724-724"];
m12_236 [cluster="string.Format(string, object)", file="SerializeComparisonBenchmarks.cs", label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", span=""];
m12_434 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", span="1955-1955"];
m12_7 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs", label="test.strings = new List<string>() { null, ''Markus egger ]><[, (2nd)'', null }", span="57-57"];
m12_137 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteStartObject()", span="224-224"];
m12_527 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m12_159 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="476-476"];
m12_122 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(c.Now)", span="208-208"];
m12_126 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteStartObject()", span="212-212"];
m12_125 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Address1'')", span="211-211"];
m12_127 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Street'')", span="213-213"];
m12_123 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''BigNumber'')", span="209-209"];
m12_124 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(c.BigNumber)", span="210-210"];
m12_128 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(c.BigNumber)", span="214-214"];
m12_129 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Street'')", span="215-215"];
m12_649 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m12_63 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="181-181"];
m12_161 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172"];
m12_166 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", span="253-253"];
m12_165 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", span="242-242"];
m12_163 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", span="242-242"];
m12_164 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualAsync()", file="SerializeComparisonBenchmarks.cs", label="return SerializeJsonNetManualAsync(TestClass, Formatting.None);", span="244-244"];
m12_167 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", span="248-248"];
m12_238 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="745-745"];
m12_257 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(expected, json)", span="791-791"];
m12_267 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, anotherTestObject.AnotherTestMember.Count)", span="809-809"];
m12_270 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, list.Count)", span="814-814"];
m12_263 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="anotherTestObject = deserializingTester.Deserialize<HolderClass>(jsonReader)", span="803-803"];
m12_241 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="testObject.AnotherTestMember = new Dictionary<int, IList<ContentBaseClass>>()", span="749-749"];
m12_252 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="string json = sw.ToString()", span="765-765"];
m12_256 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="string expected = @''{\r\n  ''''TestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''First One''''\r\n  },\r\n  ''''AnotherTestMember'''': {\r\n    ''''$type'''': '''''' + dictionaryRef + @'''''',\r\n    ''''1'''': [\r\n      {\r\n        ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n        ''''SomeString'''': ''''Second One''''\r\n      }\r\n    ]\r\n  },\r\n  ''''AThirdTestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''Third One''''\r\n  }\r\n}''", span="771-789"];
m12_258 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="StringReader sr = new StringReader(json)", span="793-793"];
m12_266 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<int, IList<ContentBaseClass>>), anotherTestObject.AnotherTestMember)", span="808-808"];
m12_268 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="IList<ContentBaseClass> list = anotherTestObject.AnotherTestMember[1]", span="811-811"];
m12_269 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(List<ContentBaseClass>), list)", span="813-813"];
m12_271 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), list[0])", span="815-815"];
m12_261 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="799-799"];
m12_259 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="JsonSerializer deserializingTester = new JsonSerializer()", span="795-795"];
m12_262 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="deserializingTester.TypeNameHandling = TypeNameHandling.Auto", span="801-801"];
m12_264 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="Assert.IsNotNull(anotherTestObject)", span="806-806"];
m12_265 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), anotherTestObject.TestMember)", span="807-807"];
m12_242 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="testObject.AnotherTestMember.Add(1, new List<ContentBaseClass>())", span="750-750"];
m12_239 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="HolderClass testObject = new HolderClass()", span="747-747"];
m12_240 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="testObject.TestMember = new ContentSubClass(''First One'')", span="748-748"];
m12_253 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="string contentSubClassRef = ReflectionUtils.GetTypeName(typeof(ContentSubClass), FormatterAssemblyStyle.Simple, null)", span="767-767"];
m12_254 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="string dictionaryRef = ReflectionUtils.GetTypeName(typeof(Dictionary<int, IList<ContentBaseClass>>), FormatterAssemblyStyle.Simple, null)", span="768-768"];
m12_255 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof(List<ContentBaseClass>), FormatterAssemblyStyle.Simple, null)", span="769-769"];
m12_251 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="serializingTester.Serialize(jsonWriter, testObject)", span="762-762"];
m12_247 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="StringWriter sw = new StringWriter()", span="757-757"];
m12_260 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="HolderClass anotherTestObject", span="797-797"];
m12_248 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="758-758"];
m12_243 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="testObject.AnotherTestMember[1].Add(new ContentSubClass(''Second One''))", span="751-751"];
m12_244 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="testObject.AThirdTestMember = new ContentSubClass(''Third One'')", span="752-752"];
m12_245 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="JsonSerializer serializingTester = new JsonSerializer()", span="754-754"];
m12_250 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="serializingTester.TypeNameHandling = TypeNameHandling.Auto", span="761-761"];
m12_246 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="serializingTester.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="755-755"];
m12_249 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="jsonWriter.Formatting = Formatting.Indented", span="760-760"];
m12_272 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="745-745"];
m12_362 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1059-1059"];
m12_371 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(e, f, ''Objects should be equal after round trip json serialization'')", span="1080-1080"];
m12_370 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="SerializableWrapper f = serializer.Deserialize<SerializableWrapper>(new JsonTextReader(new StringReader(writer.ToString())))", span="1077-1077"];
m12_364 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="StringWriter writer = new StringWriter()", span="1062-1062"];
m12_365 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1065-1065"];
m12_369 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="Console.WriteLine()", span="1071-1071"];
m12_363 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="Console.WriteLine(''Type Name Handling: '' + flag.ToString())", span="1061-1061"];
m12_366 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="serializer.TypeNameHandling = flag", span="1066-1066"];
m12_367 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="serializer.Serialize(new JsonTextWriter(writer), e)", span="1069-1069"];
m12_368 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="Console.WriteLine(writer.ToString())", span="1070-1070"];
m12_372 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1059-1059"];
m12_435 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1227-1227"];
m12_444 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(expected, json)", span="1250-1250"];
m12_448 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, ((TestComponentSimple)o2.Object1).MyProperty)", span="1256-1256"];
m12_451 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': 2147483647\r\n}'', o2.ObjectNotHandled.ToString())", span="1259-1261"];
m12_442 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1237-1237"];
m12_443 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="string expected = @''{\r\n  ''''Object1'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Object2'''': 123,\r\n  ''''ObjectNotHandled'''': {\r\n    ''''MyProperty'''': 2147483647\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1238-1249"];
m12_445 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="TypeNameObject o2 = JsonConvert.DeserializeObject<TypeNameObject>(json)", span="1252-1252"];
m12_447 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Object1)", span="1255-1255"];
m12_449 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(long), o2.Object2)", span="1257-1257"];
m12_450 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.ObjectNotHandled)", span="1258-1258"];
m12_436 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="TypeNameObject o1 = new TypeNameObject()", span="1229-1229"];
m12_441 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="o1.Integer = int.MaxValue", span="1235-1235"];
m12_446 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="Assert.IsNotNull(o2)", span="1253-1253"];
m12_437 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="o1.Object1 = new TestComponentSimple { MyProperty = 1 }", span="1231-1231"];
m12_439 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="o1.ObjectNotHandled = new TestComponentSimple { MyProperty = int.MaxValue }", span="1233-1233"];
m12_438 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="o1.Object2 = 123", span="1232-1232"];
m12_440 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="o1.String = ''String!''", span="1234-1234"];
m12_452 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1227-1227"];
m12_303 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="703-703"];
m12_93 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="SerializeComparisonBenchmarks.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + cookieRef + @''''''\r\n}''", span="267-270"];
m12_625 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m12_237 [cluster="System.Type.GetType(string, bool)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m12_90 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
m12_321 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="961-961"];
m12_322 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="count == 0", span="963-963"];
m12_324 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="yield return value;", span="965-965"];
m12_325 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="var nextInLine = next", span="967-967"];
m12_323 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="yield break;", span="964-964"];
m12_326 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="nextInLine != null", span="968-968"];
m12_327 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="nextInLine.count != 0", span="970-970"];
m12_328 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="yield return nextInLine.value;", span="971-971"];
m12_329 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="nextInLine = nextInLine.next", span="972-972"];
m12_330 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="961-961"];
m12_525 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", span="1915-1915"];
m12_275 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m12_455 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1265-1265"];
m12_459 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    1,\r\n    ''''two'''',\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="1276-1285"];
m12_461 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(3, c2.Data.Count)", span="1288-1288"];
m12_466 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1294-1294"];
m12_458 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1275-1275"];
m12_460 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1287-1287"];
m12_462 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(long), c2.Data[0])", span="1290-1290"];
m12_465 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="TestComponentSimple c = (TestComponentSimple)c2.Data[2]", span="1293-1293"];
m12_457 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="c1.Data = new List<object>\r\n            {\r\n                1,\r\n                ''two'',\r\n                new TestComponentSimple { MyProperty = 1 }\r\n            }", span="1268-1273"];
m12_456 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling()", span="1267-1267"];
m12_463 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(string), c2.Data[1])", span="1291-1291"];
m12_464 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[2])", span="1292-1292"];
m12_467 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1265-1265"];
m12_468 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", span="1943-1943"];
m12_91 [cluster="JObject.cstr", file="SerializeComparisonBenchmarks.cs", label="Entry JObject.cstr", span=""];
m12_94 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="433-433"];
m12_95 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="Entry lambda expression", span="159-159"];
m12_92 [cluster="Unk.Select", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.Select", span=""];
m12_96 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="new JProperty(d.Key, d.Value)", span="159-159"];
m12_304 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="923-923"];
m12_308 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + productClassRef + @'''''',\r\n  ''''$values'''': []\r\n}'', json)", span="931-934"];
m12_307 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="929-929"];
m12_305 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs", label="string productClassRef = ReflectionUtils.GetTypeName(typeof(CustomEnumerable<Product>), FormatterAssemblyStyle.Simple, null)", span="925-925"];
m12_306 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs", label="CustomEnumerable<Product> products = new CustomEnumerable<Product>()", span="927-927"];
m12_309 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="923-923"];
m12_81 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="221-221"];
m12_83 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="241-241"];
m12_28 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="Entry lambda expression", span="120-126"];
m12_29 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="var reader = new JsonTextReader(new StringReader(sb.ToString()))", span="122-122"];
m12_31 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="ser.MetadataPropertyHandling = MetadataPropertyHandling.Default", span="124-124"];
m12_30 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="var ser = new JsonSerializer()", span="123-123"];
m12_32 [cluster="lambda expression", color=green, community=0, file="SerializeComparisonBenchmarks.cs", label="ser.Deserialize<bool>(reader)", prediction=9, span="125-125"];
m12_33 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="Exit lambda expression", span="120-126"];
m12_34 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m12_35 [cluster="System.IO.StringReader.StringReader(string)", file="SerializeComparisonBenchmarks.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m12_89 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="241-241"];
m12_555 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="829-829"];
m12_630 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m12_273 [cluster="Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", span="31-31"];
m12_662 [cluster="object.ReferenceEquals(object, object)", file="SerializeComparisonBenchmarks.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m12_38 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674"];
m12_77 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs", label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), FormatterAssemblyStyle.Simple, null)", span="223-223"];
m12_78 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs", label="EmployeeReference employee = new EmployeeReference()", span="225-225"];
m12_79 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="227-230"];
m12_353 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1037-1037"];
m12_356 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.All)", span="1054-1054"];
m12_357 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Auto)", span="1055-1055"];
m12_358 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Objects)", span="1056-1056"];
m12_355 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs", label="SerializableWrapper w = new SerializableWrapper\r\n            {\r\n                Content = e\r\n            }", span="1042-1045"];
m12_354 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs", label="IExample e = new Example(''Rob'')", span="1040-1040"];
m12_359 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1037-1037"];
m12_331 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="976-976"];
m12_332 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="return GetEnumerator();", span="978-978"];
m12_333 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="976-976"];
m12_66 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", color=green, community=0, file="SerializeComparisonBenchmarks.cs", label="return SerializeDataContractJson(TestClass);", prediction=10, span="124-124"];
m12_64 [cluster="Unk.Serialize", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.Serialize", span=""];
m12_65 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", span="122-122"];
m12_67 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractJsonSerializer()", span="122-122"];
m12_68 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", span="127-127"];
m12_69 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs", label="DataContractJsonSerializer dataContractSerializer = new DataContractJsonSerializer(value.GetType())", span="129-129"];
m12_70 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs", label="MemoryStream ms = new MemoryStream()", span="131-131"];
m12_71 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs", label="dataContractSerializer.WriteObject(ms, value)", span="132-132"];
m12_72 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="134-134"];
m12_650 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1884-1884"];
m12_651 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="info.AddValue(''name'', Name)", span="1886-1886"];
m12_652 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1884-1884"];
m12_469 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1298-1298"];
m12_472 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1316-1331"];
m12_474 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1334-1334"];
m12_481 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1360-1360"];
m12_487 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1367-1367"];
m12_471 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1315-1315"];
m12_473 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1333-1333"];
m12_475 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1336-1336"];
m12_480 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1359-1359"];
m12_482 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1362-1362"];
m12_486 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="JObject o = (JObject)c[0]", span="1366-1366"];
m12_470 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling\r\n            {\r\n                Data = new List<object>\r\n                {\r\n                    new TestComponentSimple { MyProperty = 1 },\r\n                    new List<object>\r\n                    {\r\n                        new List<object>\r\n                        {\r\n                            new List<object>()\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1300-1313"];
m12_476 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1337-1337"];
m12_477 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="List<object> c = (List<object>)c2.Data[1]", span="1338-1338"];
m12_479 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="json = @''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="1341-1357"];
m12_483 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1363-1363"];
m12_484 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="c = (List<object>)c2.Data[1]", span="1364-1364"];
m12_485 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[0])", span="1365-1365"];
m12_478 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), c[0])", span="1339-1339"];
m12_488 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1298-1298"];
m12_160 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="619-619"];
m12_130 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(c.BigNumber)", span="216-216"];
m12_168 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="SerializeComparisonBenchmarks.cs", label="return SerializeJsonNetManualAsync(TestClass, Formatting.Indented);", span="250-250"];
m12_6 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs", label="test.Now = DateTime.Now.AddHours(1)", span="56-56"];
m12_226 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="SerializeComparisonBenchmarks.cs", label="TypeFormat = typeFormat", span="726-726"];
m12_227 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="724-724"];
m12_230 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetBson(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="serializer.Serialize(writer, c)", span="324-324"];
m12_228 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetBson(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="JsonSerializer serializer = new JsonSerializer()", span="322-322"];
m12_229 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetBson(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="BsonWriter writer = new BsonWriter(ms)", span="323-323"];
m12_231 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetBson(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="return ms.ToArray();", span="326-326"];
m12_232 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="735-735"];
m12_568 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="556-556"];
m12_85 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", color=green, community=0, file="SerializeComparisonBenchmarks.cs", label="JObject o = new JObject(\r\n                new JProperty(''strings'', new JArray(c.strings)),\r\n                new JProperty(''dictionary'', new JObject(c.dictionary.Select(d => new JProperty(d.Key, d.Value)))),\r\n                new JProperty(''Name'', c.Name),\r\n                new JProperty(''Now'', c.Now),\r\n                new JProperty(''BigNumber'', c.BigNumber),\r\n                new JProperty(''Address1'', new JObject(\r\n                    new JProperty(''Street'', c.Address1.Street),\r\n                    new JProperty(''Phone'', c.Address1.Phone),\r\n                    new JProperty(''Entered'', c.Address1.Entered))),\r\n                new JProperty(''Addresses'', new JArray(c.Addresses.Select(a =>\r\n                    new JObject(\r\n                        new JProperty(''Street'', a.Street),\r\n                        new JProperty(''Phone'', a.Phone),\r\n                        new JProperty(''Entered'', a.Entered)))))\r\n                )", prediction=11, span="157-172"];
m12_84 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", span="155-155"];
m12_86 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="return o.ToString(Formatting.None);", span="174-174"];
m12_87 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetLinq(Newtonsoft.Json.Tests.TestObjects.TestClass)", span="155-155"];
m12_509 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", span="1937-1937"];
m12_420 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1200-1200"];
m12_426 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Second'''': ''''String!'''',\r\n  ''''Third'''': 9223372036854775807\r\n}'', json)", span="1208-1215"];
m12_428 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(3, l2.Count)", span="1218-1218"];
m12_430 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, ((TestComponentSimple)l2[''First'']).MyProperty)", span="1221-1221"];
m12_425 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1207-1207"];
m12_427 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="TypeNameDictionary<object> l2 = JsonConvert.DeserializeObject<TypeNameDictionary<object>>(json)", span="1217-1217"];
m12_429 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[''First''])", span="1220-1220"];
m12_431 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(string), l2[''Second''])", span="1222-1222"];
m12_421 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="TypeNameDictionary<object> l = new TypeNameDictionary<object>()", span="1202-1202"];
m12_424 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="l.Add(''Third'', long.MaxValue)", span="1205-1205"];
m12_432 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(long), l2[''Third''])", span="1223-1223"];
m12_422 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="l.Add(''First'', new TestComponentSimple { MyProperty = 1 })", span="1203-1203"];
m12_423 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="l.Add(''Second'', ''String!'')", span="1204-1204"];
m12_433 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1200-1200"];
m12_376 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1086-1086"];
m12_379 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''':::MESSAGE:::, AssemblyName'''',\r\n  ''''Address'''': ''''jamesnk@testtown.com'''',\r\n  ''''Body'''': {\r\n    ''''$type'''': '''':::VERSION:::, AssemblyName'''',\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  }\r\n}'', json)", span="1107-1119"];
m12_378 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                Binder = new MetroBinder(),\r\n                ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(NETFX_CORE || PORTABLE)\r\n                    IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="1094-1105"];
m12_377 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs", label="Message message = new Message\r\n            {\r\n                Address = ''jamesnk@testtown.com'',\r\n                Body = new Version(1, 2, 3, 4)\r\n            }", span="1088-1092"];
m12_380 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1086-1086"];
m12_150 [cluster="System.IO.StringWriter.StringWriter()", file="SerializeComparisonBenchmarks.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m12_156 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442"];
m12_157 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="461-461"];
m12_158 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="426-426"];
m12_154 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="220-220"];
m12_151 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m12_8 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs", label="Address address = new Address()", span="59-59"];
m12_334 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="996-996"];
m12_344 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(output, @''{\r\n  ''''$type'''': '''''' + carClassRef + @'''''',\r\n  ''''Year'''': ''''2000-10-05T01:01:01Z'''',\r\n  ''''Objects'''': {\r\n    ''''$type'''': ''''System.Object[], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n        ''''$value'''': ''''S0FSSVJB''''\r\n      },\r\n      ''''prueba''''\r\n    ]\r\n  }\r\n}'')", span="1011-1024"];
m12_339 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="JsonSerializerSettings jsonSettings = new JsonSerializerSettings()", span="1003-1003"];
m12_342 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="string output = JsonConvert.SerializeObject(testerObject, Formatting.Indented, jsonSettings)", span="1007-1007"];
m12_343 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="string carClassRef = ReflectionUtils.GetTypeName(typeof(Car), FormatterAssemblyStyle.Simple, null)", span="1009-1009"];
m12_345 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="Car obj = JsonConvert.DeserializeObject<Car>(output, jsonSettings)", span="1025-1025"];
m12_338 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="testerObject.Objects = new object[] { data, ''prueba'' }", span="1001-1001"];
m12_340 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="jsonSettings.NullValueHandling = NullValueHandling.Ignore", span="1004-1004"];
m12_341 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="jsonSettings.TypeNameHandling = TypeNameHandling.All", span="1005-1005"];
m12_335 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="Car testerObject = new Car()", span="998-998"];
m12_336 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="testerObject.Year = new DateTime(2000, 10, 5, 1, 1, 1, DateTimeKind.Utc)", span="999-999"];
m12_346 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="Assert.IsNotNull(obj)", span="1027-1027"];
m12_347 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="Assert.IsTrue(obj.Objects[0] is byte[])", span="1029-1029"];
m12_348 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="byte[] d = (byte[])obj.Objects[0]", span="1031-1031"];
m12_337 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="byte[] data = new byte[] { 75, 65, 82, 73, 82, 65 }", span="1000-1000"];
m12_349 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="CollectionAssert.AreEquivalent(data, d)", span="1032-1032"];
m12_350 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="996-996"];
m12_138 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Street'')", span="225-225"];
m12_615 [cluster="System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m12_73 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs", label="StreamReader sr = new StreamReader(ms)", span="136-136"];
m12_181 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="c.dictionary", span="269-269"];
m12_277 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="848-848"];
m12_235 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="735-735"];
m12_36 [cluster="System.Text.StringBuilder.ToString()", file="SerializeComparisonBenchmarks.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m12_233 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="SerializeComparisonBenchmarks.cs", label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="737-737"];
m12_97 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="Exit lambda expression", span="159-159"];
m12_100 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="Exit lambda expression", span="167-171"];
m12_98 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="Entry lambda expression", span="167-171"];
m12_99 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="new JObject(\r\n                        new JProperty(''Street'', a.Street),\r\n                        new JProperty(''Phone'', a.Phone),\r\n                        new JProperty(''Entered'', a.Entered))", span="168-171"];
m12_302 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", span="845-845"];
m12_401 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_556 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1579-1579"];
m12_565 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(someValue, deserializedObject[contextKey])", span="1598-1598"];
m12_561 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            }", span="1587-1591"];
m12_559 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="1584-1584"];
m12_557 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="string contextKey = ''k1''", span="1581-1581"];
m12_558 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="var someValue = Guid.NewGuid()", span="1582-1582"];
m12_564 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="1596-1596"];
m12_560 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="inputContext.Add(contextKey, someValue)", span="1585-1585"];
m12_562 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="1592-1592"];
m12_563 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="Console.WriteLine(serializedString)", span="1594-1594"];
m12_566 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1579-1579"];
m12_131 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Street'')", span="217-217"];
m12_135 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteStartArray()", span="221-221"];
m12_134 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Addresses'')", span="220-220"];
m12_133 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteEndObject()", span="219-219"];
m12_132 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(c.BigNumber)", span="218-218"];
m12_136 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="c.Addresses", span="222-222"];
m12_382 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", span="1122-1122"];
m12_374 [cluster="System.Console.WriteLine(string)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m12_526 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", span="1929-1929"];
m12_5 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs", label="test.BigNumber = 34123123123.121M", span="55-55"];
m12_9 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.CreateSerializationObject()", file="SerializeComparisonBenchmarks.cs", label="address.Entered = DateTime.Now.AddDays(-1)", span="60-60"];
m12_352 [cluster="Unk.AreEquivalent", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.AreEquivalent", span=""];
m12_62 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeWebExtensions(object)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeWebExtensions(object)", span="114-114"];
m12_278 [cluster="Unk.IsNotNull", file="SerializeComparisonBenchmarks.cs", label="Entry Unk.IsNotNull", span=""];
m12_276 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m12_139 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(address.Street)", span="226-226"];
m12_141 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteValue(address.Phone)", span="228-228"];
m12_140 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Phone'')", span="227-227"];
m12_142 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WritePropertyName(''Entered'')", span="229-229"];
m12_310 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="951-951"];
m12_316 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="SerializeComparisonBenchmarks.cs", label="count = 0", span="953-953"];
m12_317 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="951-951"];
m12_51 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", span="99-99"];
m12_105 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="SerializeComparisonBenchmarks.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m12_148 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="return sw.ToString();", span="237-237"];
m12_143 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="Entry lambda expression", span="442-448"];
m12_144 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                    {\r\n                        TypeNameHandling = TypeNameHandling.Objects\r\n                    })", span="444-447"];
m12_145 [cluster="lambda expression", file="SerializeComparisonBenchmarks.cs", label="Exit lambda expression", span="442-448"];
m12_146 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.WriteEndObject()", span="234-234"];
m12_147 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="writer.Flush()", span="236-236"];
m12_149 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManual(Newtonsoft.Json.Tests.TestObjects.TestClass)", span="185-185"];
m12_76 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="221-221"];
m12_37 [cluster="object.GetType()", file="SerializeComparisonBenchmarks.cs", label="Entry object.GetType()", span="0-0"];
m12_0 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="57-57"];
m12_1 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs", label="Dictionary<string, object> dic = new Dictionary<string, object>\r\n            {\r\n                { ''movie'', new Movie { Name = ''Die Hard''}}\r\n            }", span="59-62"];
m12_2 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="64-67"];
m12_3 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''movie'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n    ''''Name'''': ''''Die Hard'''',\r\n    ''''Description'''': null,\r\n    ''''Classification'''': null,\r\n    ''''Studio'''': null,\r\n    ''''ReleaseDate'''': null,\r\n    ''''ReleaseCountries'''': null\r\n  }\r\n}'', json)", span="69-79"];
m12_4 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="57-57"];
m12_11 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs", label="IList<KeyValuePair<string, object>> dic = new List<KeyValuePair<string, object>>\r\n            {\r\n                new KeyValuePair<string, object>(''movie'', new Movie { Name = ''Die Hard''})\r\n            }", span="85-88"];
m12_15 [cluster="System.Collections.Generic.List<T>.List()", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_16 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m12_10 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="83-83"];
m12_12 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="90-93"];
m12_13 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", color=green, community=0, file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''movie'''',\r\n    ''''Value'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n      ''''Name'''': ''''Die Hard'''',\r\n      ''''Description'''': null,\r\n      ''''Classification'''': null,\r\n      ''''Studio'''': null,\r\n      ''''ReleaseDate'''': null,\r\n      ''''ReleaseCountries'''': null\r\n    }\r\n  }\r\n]'', json)", prediction=12, span="95-108"];
m12_14 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="83-83"];
m12_59 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", color=green, community=0, file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", prediction=13, span="160-163"];
m12_60 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', json)", span="165-171"];
m12_61 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="158-158"];
m12_375 [cluster="System.Console.WriteLine()", file="SerializeComparisonBenchmarks.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m12_169 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.JsonNetManualIndentedAsync()", span="248-248"];
m12_173 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteStartObjectAsync()", span="259-259"];
m12_175 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteStartArrayAsync()", span="261-261"];
m12_178 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteEndArrayAsync()", span="266-266"];
m12_179 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''dictionary'')", span="267-267"];
m12_170 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="StringWriter sw = new StringWriter()", span="255-255"];
m12_172 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="writer.Formatting = formatting", span="257-257"];
m12_174 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''strings'')", span="260-260"];
m12_176 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="c.strings", span="262-262"];
m12_177 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(s)", span="264-264"];
m12_171 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="256-256"];
m12_180 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteStartObjectAsync()", span="268-268"];
m12_392 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1142-1142"];
m12_398 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1150-1154"];
m12_397 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1149-1149"];
m12_393 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs", label="TypeNameList<int> l = new TypeNameList<int>()", span="1144-1144"];
m12_396 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs", label="l.Add(3)", span="1147-1147"];
m12_394 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs", label="l.Add(1)", span="1145-1145"];
m12_395 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs", label="l.Add(2)", span="1146-1146"];
m12_399 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1142-1142"];
m12_80 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m12_528 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1505-1505"];
m12_537 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1526-1539"];
m12_543 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1547-1547"];
m12_546 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1551-1551"];
m12_552 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1573-1573"];
m12_536 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="1525-1525"];
m12_538 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandlingDynamic d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1541-1541"];
m12_542 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="TestComponentSimple c = (TestComponentSimple)data3.one", span="1546-1546"];
m12_544 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="dynamic data4 = data3.two", span="1549-1549"];
m12_545 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="JObject o = (JObject)data4.one", span="1550-1550"];
m12_547 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}''", span="1553-1567"];
m12_551 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="o = (JObject)data4.one", span="1572-1572"];
m12_529 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandlingDynamic d1 = new PropertyItemTypeNameHandlingDynamic()", span="1507-1507"];
m12_535 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="d1.Data = (DynamicDictionary)data", span="1523-1523"];
m12_539 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Assert.IsNotNull(d2)", span="1542-1542"];
m12_540 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Assert.IsNotNull(d2.Data)", span="1543-1543"];
m12_541 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="dynamic data3 = d2.Data", span="1545-1545"];
m12_548 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1569-1569"];
m12_550 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="data4 = data3.two", span="1571-1571"];
m12_531 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="data.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 1\r\n            }", span="1510-1513"];
m12_533 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="data2.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 2\r\n            }", span="1516-1519"];
m12_530 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="dynamic data = new DynamicDictionary()", span="1509-1509"];
m12_534 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="data.two = data2", span="1521-1521"];
m12_549 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="data3 = d2.Data", span="1570-1570"];
m12_532 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="dynamic data2 = new DynamicDictionary()", span="1515-1515"];
m12_553 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1505-1505"];
m12_381 [cluster="System.Version.Version(int, int, int, int)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m12_590 [cluster="Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", span="1805-1805"];
m12_27 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractSerializer()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.DataContractSerializer()", span="73-73"];
m12_579 [cluster="Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", span="1799-1799"];
m12_602 [cluster="Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", span="1773-1773"];
m12_373 [cluster="System.Enum.ToString()", file="SerializeComparisonBenchmarks.cs", label="Entry System.Enum.ToString()", span="0-0"];
m12_578 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1789-1789"];
m12_626 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1789-1789"];
m12_182 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="511-511"];
m12_207 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(address.Phone)", span="298-298"];
m12_208 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WritePropertyNameAsync(''Entered'')", span="299-299"];
m12_209 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeJsonNetManualAsync(Newtonsoft.Json.Tests.TestObjects.TestClass, Newtonsoft.Json.Formatting)", file="SerializeComparisonBenchmarks.cs", label="await writer.WriteValueAsync(address.Entered)", span="300-300"];
m12_50 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeBinaryFormatter(object)", file="SerializeComparisonBenchmarks.cs", label="return ms.ToArray();", span="105-105"];
m12_591 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1675-1675"];
m12_596 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''ParentProp'''': {\r\n    ''''c'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n      ''''p'''': ''''string!''''\r\n    }\r\n  }\r\n}'', json)", span="1698-1705"];
m12_600 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1710-1710"];
m12_594 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1687-1694"];
m12_595 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(pp, settings)", span="1696-1696"];
m12_597 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="ParentParent pp2 = JsonConvert.DeserializeObject<ParentParent>(json, settings)", span="1707-1707"];
m12_598 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="MyParent p2 = pp2.ParentProp", span="1708-1708"];
m12_599 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1709-1709"];
m12_593 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="pp.ParentProp = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1679-1685"];
m12_592 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="ParentParent pp = new ParentParent()", span="1677-1677"];
m12_601 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1675-1675"];
m12_287 [cluster="Newtonsoft.Json.Tests.Serialization.Message.Message()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Message.Message()", span="1814-1814"];
m12_603 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1715-1715"];
m12_608 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="string serialized = JsonConvert.SerializeObject(input,\r\n                Newtonsoft.Json.Formatting.Indented,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All, TypeNameAssemblyFormat = FormatterAssemblyStyle.Full } // TypeNameHandling.Auto will work\r\n            )", span="1723-1726"];
m12_610 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="var output = JsonConvert.DeserializeObject<List<Stack<string>>>(serialized,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }\r\n            )", span="1730-1732"];
m12_604 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="var input = new List<Stack<string>>()", span="1717-1717"];
m12_607 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="input.Add(new Stack<string>(new List<string> { ''Seven'', ''Eight'', ''Nine'' }))", span="1721-1721"];
m12_609 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="Console.WriteLine(serialized)", span="1728-1728"];
m12_611 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label=output, span="1734-1734"];
m12_605 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="input.Add(new Stack<string>(new List<string> { ''One'', ''Two'', ''Three'' }))", span="1719-1719"];
m12_606 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="input.Add(new Stack<string>(new List<string> { ''Four'', ''Five'', ''Six'' }))", span="1720-1720"];
m12_612 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label=stack, span="1736-1736"];
m12_613 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="Console.WriteLine(value)", span="1738-1738"];
m12_614 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1715-1715"];
m12_489 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1371-1371"];
m12_492 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''one'''': 1\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1395-1408"];
m12_494 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1411-1411"];
m12_501 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1435-1435"];
m12_507 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1443-1443"];
m12_490 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandlingDictionary c1 = new PropertyItemTypeNameHandlingDictionary()\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    {\r\n                        ''one'', new TestComponentSimple { MyProperty = 1 }\r\n                    },\r\n                    {\r\n                        ''two'', new Dictionary<string, object>\r\n                        {\r\n                            {\r\n                                ''one'', new Dictionary<string, object>\r\n                                {\r\n                                    { ''one'', 1 }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1373-1392"];
m12_491 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1394-1394"];
m12_493 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandlingDictionary c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1410-1410"];
m12_495 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1413-1413"];
m12_500 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1434-1434"];
m12_502 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1437-1437"];
m12_506 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="JObject o = (JObject)c[''one'']", span="1442-1442"];
m12_496 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1414-1414"];
m12_497 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="Dictionary<string, object> c = (Dictionary<string, object>)c2.Data[''two'']", span="1415-1415"];
m12_499 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 1\r\n      }\r\n    }\r\n  }\r\n}''", span="1418-1432"];
m12_503 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1438-1438"];
m12_504 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="c = (Dictionary<string, object>)c2.Data[''two'']", span="1439-1439"];
m12_505 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1440-1440"];
m12_498 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1416-1416"];
m12_508 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1371-1371"];
m12_510 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1447-1447"];
m12_513 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''Prop3'''': 3,\r\n    ''''Prop4'''': {}\r\n  }\r\n}'', json)", span="1470-1487"];
m12_523 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(1, (int)j[''MyProperty''])", span="1500-1500"];
m12_512 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1469-1469"];
m12_514 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandlingObject o2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingObject>(json)", span="1489-1489"];
m12_522 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="JObject j = (JObject)o[0]", span="1499-1499"];
m12_511 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="PropertyItemTypeNameHandlingObject o1 = new PropertyItemTypeNameHandlingObject\r\n            {\r\n                Data = new TypeNameHandlingTestObject\r\n                {\r\n                    Prop1 = new List<object>\r\n                    {\r\n                        new TestComponentSimple\r\n                        {\r\n                            MyProperty = 1\r\n                        }\r\n                    },\r\n                    Prop2 = new TestComponentSimple\r\n                    {\r\n                        MyProperty = 1\r\n                    },\r\n                    Prop3 = 3,\r\n                    Prop4 = new JObject()\r\n                }\r\n            }", span="1449-1467"];
m12_515 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="Assert.IsNotNull(o2)", span="1490-1490"];
m12_516 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="Assert.IsNotNull(o2.Data)", span="1491-1491"];
m12_517 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), o2.Data.Prop1)", span="1493-1493"];
m12_518 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Data.Prop2)", span="1494-1494"];
m12_519 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(long), o2.Data.Prop3)", span="1495-1495"];
m12_520 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.Data.Prop4)", span="1496-1496"];
m12_521 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="List<object> o = (List<object>)o2.Data.Prop1", span="1498-1498"];
m12_524 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1447-1447"];
m12_360 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1874-1874"];
m12_644 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="SerializeComparisonBenchmarks.cs", label="Name = name", span="1876-1876"];
m12_645 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1874-1874"];
m12_26 [cluster="System.Text.StringBuilder.Append(string)", file="SerializeComparisonBenchmarks.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m12_663 [cluster="string.Equals(string)", file="SerializeComparisonBenchmarks.cs", label="Entry string.Equals(string)", span="0-0"];
m12_75 [cluster="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks.SerializeDataContractJson(object)", span="127-127"];
m12_418 [cluster="Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", span="33-33"];
m12_311 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="944-944"];
m12_312 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs", label="this.value = value", span="946-946"];
m12_313 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs", label="this.next = next", span="947-947"];
m12_314 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs", label="count = this.next.count + 1", span="948-948"];
m12_315 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="944-944"];
m12_402 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1158-1158"];
m12_410 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee, Newtonsoft.Json.Tests'''',\r\n    ''''FirstName'''': null,\r\n    ''''LastName'''': null,\r\n    ''''BirthDate'''': ''''2000-12-12T12:12:12Z'''',\r\n    ''''Department'''': ''''Department!'''',\r\n    ''''JobTitle'''': null\r\n  },\r\n  ''''String!'''',\r\n  9223372036854775807\r\n]'', json)", span="1173-1188"];
m12_412 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="Assert.AreEqual(4, l2.Count)", span="1191-1191"];
m12_409 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1172-1172"];
m12_411 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="TypeNameList<object> l2 = JsonConvert.DeserializeObject<TypeNameList<object>>(json)", span="1190-1190"];
m12_413 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[0])", span="1193-1193"];
m12_406 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="l.Add(new Employee\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                Department = ''Department!''\r\n            })", span="1164-1168"];
m12_404 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="TypeNameList<object> l = new TypeNameList<object>()", span="1162-1162"];
m12_408 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="l.Add(long.MaxValue)", span="1170-1170"];
m12_414 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(Employee), l2[1])", span="1194-1194"];
m12_415 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(string), l2[2])", span="1195-1195"];
m12_416 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="CustomAssert.IsInstanceOfType(typeof(long), l2[3])", span="1196-1196"];
m12_403 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="var c1 = new TestComponentSimple()", span="1160-1160"];
m12_405 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="l.Add(c1)", span="1163-1163"];
m12_407 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="l.Add(''String!'')", span="1169-1169"];
m12_417 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1158-1158"];
m12_646 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1879-1879"];
m12_647 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Name = info.GetString(''name'')", span="1881-1881"];
m12_648 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1879-1879"];
m12_622 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1784-1784"];
m12_623 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Child = (ISomeBase)info.GetValue(''c'', typeof(ISomeBase))", span="1786-1786"];
m12_624 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="SerializeComparisonBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1784-1784"];
m12_74 [cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="SerializeComparisonBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="28-28"];
m12_674 [file="SerializeComparisonBenchmarks.cs", label=sb, span=""];
m12_675 [file="SerializeComparisonBenchmarks.cs", label=json, span=""];
m12_679 [file="SerializeComparisonBenchmarks.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", span=""];
m12_677 [file="SerializeComparisonBenchmarks.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", span=""];
m12_678 [file="SerializeComparisonBenchmarks.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", span=""];
m12_682 [file="SerializeComparisonBenchmarks.cs", label="Newtonsoft.Json.Tests.Serialization.Example", span=""];
m12_680 [file="SerializeComparisonBenchmarks.cs", label="Newtonsoft.Json.Tests.Serialization.MyParent", span=""];
m14_6 [cluster="XmlDocument.cstr", file="XmlNodeConverterBenchmarks.cs", label="Entry XmlDocument.cstr", span=""];
m14_10 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", span="53-53"];
m14_11 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs", label="XDocument doc", span="55-55"];
m14_12 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs", label="FileStream file = System.IO.File.OpenRead(''large_sample.xml'')", span="56-56"];
m14_13 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs", label="doc = XDocument.Load(file)", span="58-58"];
m14_14 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs", label="JsonConvert.SerializeXNode(doc)", span="61-61"];
m14_15 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", file="XmlNodeConverterBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXNode()", span="53-53"];
m14_9 [cluster="Unk.SerializeXmlNode", file="XmlNodeConverterBenchmarks.cs", label="Entry Unk.SerializeXmlNode", span=""];
m14_7 [cluster="System.IO.File.OpenRead(string)", file="XmlNodeConverterBenchmarks.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m14_8 [cluster="Unk.Load", file="XmlNodeConverterBenchmarks.cs", label="Entry Unk.Load", span=""];
m14_16 [cluster="Unk.SerializeXNode", file="XmlNodeConverterBenchmarks.cs", label="Entry Unk.SerializeXNode", span=""];
m14_0 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs", label="Entry Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", span="41-41"];
m14_1 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs", label="XmlDocument doc = new XmlDocument()", span="43-43"];
m14_2 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs", label="FileStream file = System.IO.File.OpenRead(''large_sample.xml'')", span="44-44"];
m14_3 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs", label="doc.Load(file)", span="46-46"];
m14_4 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs", label="JsonConvert.SerializeXmlNode(doc)", span="49-49"];
m14_5 [cluster="Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", file="XmlNodeConverterBenchmarks.cs", label="Exit Newtonsoft.Json.Tests.Benchmarks.XmlNodeConverterBenchmarks.ConvertXmlNode()", span="41-41"];
m2_18 -> m2_20  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m2_2 -> m2_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_114 -> m3_124  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_114 -> m3_129  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_114 -> m3_143  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_114 -> m3_144  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_115 -> m3_117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_118  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_122  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_126  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_127  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_115 -> m3_141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_93 -> m3_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m3_93 -> m3_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m3_93 -> m3_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m3_94 -> m3_104  [color=darkseagreen4, key=1, label=a, style=dashed];
m3_153 -> m3_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m3_153 -> m3_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m3_153 -> m3_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m3_154 -> m3_164  [color=darkseagreen4, key=1, label=a, style=dashed];
m3_50 -> m3_60  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_50 -> m3_65  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_50 -> m3_79  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_50 -> m3_80  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_51 -> m3_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_54  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_58  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_59  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_60  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_62  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_63  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_65  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_73  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_51 -> m3_77  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_169 -> m3_171  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m3_13 -> m3_15  [color=darkseagreen4, key=1, label=dataContractSerializer, style=dashed];
m3_21 -> m3_23  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m3_176 -> m3_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", style=dashed];
m3_176 -> m3_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", style=dashed];
m3_176 -> m3_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", style=dashed];
m3_176 -> m3_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", style=dashed];
m3_176 -> m3_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", style=dashed];
m3_176 -> m3_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", style=dashed];
m3_176 -> m3_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", style=dashed];
m3_176 -> m3_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.DeserializeComparisonBenchmarks", style=dashed];
m4_282 -> m4_287  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_285 -> m4_287  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_19 -> m4_22  [color=green, key=1, label=schema, style=dashed];
m4_19 -> m4_25  [color=green, key=1, label=schema, style=dashed];
m4_19 -> m4_21  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_20 -> m4_22  [color=green, key=1, label=stringToken, style=dashed];
m4_22 -> m4_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_25 -> m4_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_21 -> m4_25  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_21 -> m4_32  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_21 -> m4_23  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_21 -> m4_36  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_21 -> m4_26  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_21 -> m4_27  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_49 -> m4_51  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_158 -> m4_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_170 -> m4_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_3 -> m4_5  [color=darkseagreen4, key=1, label=integerToken, style=dashed];
m4_3 -> m4_6  [color=darkseagreen4, key=1, label=integerToken, style=dashed];
m4_181 -> m4_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_191 -> m4_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_248 -> m4_254  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_254 -> m4_256  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_254 -> m4_257  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_254 -> m4_258  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_254 -> m4_259  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_252 -> m4_254  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_201 -> m4_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_228 -> m4_230  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_228 -> m4_231  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_224 -> m4_228  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_226 -> m4_228  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_54 -> m4_57  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_55 -> m4_57  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_57 -> m4_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_56 -> m4_63  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_56 -> m4_58  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_56 -> m4_59  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_216 -> m4_219  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_262 -> m4_266  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_262 -> m4_269  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_264 -> m4_266  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_66 -> m4_69  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_67 -> m4_69  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_67 -> m4_71  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_69 -> m4_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_68 -> m4_77  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_68 -> m4_70  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_68 -> m4_72  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_1 -> m4_5  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_1 -> m4_6  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_1 -> m4_8  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_1 -> m4_9  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_1 -> m4_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_8  [color=darkseagreen4, key=1, label=stringToken, style=dashed];
m4_2 -> m4_9  [color=darkseagreen4, key=1, label=stringToken, style=dashed];
m4_9 -> m4_11  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_239 -> m4_241  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_239 -> m4_242  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_239 -> m4_243  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m4_235 -> m4_239  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_237 -> m4_239  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_39 -> m4_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_93 -> m4_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_92 -> m4_108  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_92 -> m4_94  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_92 -> m4_95  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_88 -> m4_93  [color=darkseagreen4, key=1, label=typeSchema, style=dashed];
m4_91 -> m4_93  [color=darkseagreen4, key=1, label=token, style=dashed];
m4_210 -> m4_213  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_43 -> m4_45  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_161 -> m4_165  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_173 -> m4_177  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_184 -> m4_188  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_194 -> m4_198  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_204 -> m4_207  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_147 -> m4_150  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_148 -> m4_150  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_150 -> m4_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_149 -> m4_155  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_149 -> m4_151  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_149 -> m4_152  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_274 -> m4_278  [color=darkseagreen4, key=1, label=schema, style=dashed];
m4_276 -> m4_278  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_291 -> m4_32  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_291 -> m4_36  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_295 -> m4_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_295 -> m4_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.ExtensionsTests", style=dashed];
m4_292 -> m4_63  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_293 -> m4_77  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_294 -> m4_108  [color=darkseagreen4, key=1, label=errors, style=dashed];
m4_296 -> m4_155  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_1 -> m5_5  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=jsonTextWriter, style=dashed];
m6_49 -> m6_51  [color=darkseagreen4, key=1, label=ds, style=dashed];
m6_52 -> m6_54  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_53 -> m6_55  [color=darkseagreen4, key=1, label=deserializedDs, style=dashed];
m6_128 -> m6_130  [color=darkseagreen4, key=1, label=ds, style=dashed];
m6_131 -> m6_135  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_131 -> m6_136  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_131 -> m6_137  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_131 -> m6_138  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_131 -> m6_139  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_134 -> m6_136  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_134 -> m6_137  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_134 -> m6_138  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_134 -> m6_139  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_62 -> m6_64  [color=darkseagreen4, key=1, label=ds, style=dashed];
m6_62 -> m6_65  [color=darkseagreen4, key=1, label=ds, style=dashed];
m6_62 -> m6_66  [color=darkseagreen4, key=1, label=ds, style=dashed];
m6_62 -> m6_80  [color=darkseagreen4, key=1, label=ds, style=dashed];
m6_62 -> m6_81  [color=darkseagreen4, key=1, label=ds, style=dashed];
m6_67 -> m6_69  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_70  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_71  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_72  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_73  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_74  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_75  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_76  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_77  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_78  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_67 -> m6_79  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_149 -> m6_152  [color=darkseagreen4, key=1, label=table, style=dashed];
m6_150 -> m6_152  [color=darkseagreen4, key=1, label=row, style=dashed];
m6_119 -> m6_121  [color=darkseagreen4, key=1, label=ds, style=dashed];
m6_10 -> m6_17  [color=darkseagreen4, key=1, label=dataSet, style=dashed];
m6_10 -> m6_24  [color=darkseagreen4, key=1, label=dataSet, style=dashed];
m6_11 -> m6_15  [color=darkseagreen4, key=1, label=table, style=dashed];
m6_11 -> m6_16  [color=darkseagreen4, key=1, label=table, style=dashed];
m6_11 -> m6_17  [color=darkseagreen4, key=1, label=table, style=dashed];
m6_11 -> m6_22  [color=darkseagreen4, key=1, label=table, style=dashed];
m6_20 -> m6_22  [color=darkseagreen4, key=1, label=newRow, style=dashed];
m6_13 -> m6_15  [color=darkseagreen4, key=1, label=idColumn, style=dashed];
m6_14 -> m6_16  [color=darkseagreen4, key=1, label=itemColumn, style=dashed];
m6_18 -> m6_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_23 -> m6_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_27 -> m6_29  [color=darkseagreen4, key=1, label=deserializedDataSet, style=dashed];
m6_30 -> m6_33  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_30 -> m6_34  [color=green, key=1, label=dt, style=dashed];
m6_30 -> m6_35  [color=green, key=1, label=dt, style=dashed];
m6_30 -> m6_36  [color=green, key=1, label=dt, style=dashed];
m6_30 -> m6_37  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_57 -> m6_104  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_83 -> m6_86  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m6_83 -> m6_89  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m6_83 -> m6_92  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m6_83 -> m6_95  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m6_83 -> m6_99  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m6_83 -> m6_102  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m6_83 -> m6_112  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m6_83 -> m6_114  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m6_105 -> m6_112  [color=darkseagreen4, key=1, label=myNewRow, style=dashed];
m6_103 -> m6_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_113 -> m6_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_164 -> m6_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m6_164 -> m6_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m6_164 -> m6_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m6_164 -> m6_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m6_164 -> m6_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m6_164 -> m6_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_2 -> m8_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_5 -> m8_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_22 -> m8_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks", style=dashed];
m8_22 -> m8_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks", style=dashed];
m8_22 -> m8_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.LargeJArrayBenchmarks", style=dashed];
m9_11 -> m9_14  [color=darkseagreen4, key=1, label=text, style=dashed];
m9_12 -> m9_14  [color=darkseagreen4, key=1, label=w, style=dashed];
m9_14 -> m9_14  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m11_7 -> m11_10  [color=darkseagreen4, key=1, label=file, style=dashed];
m11_8 -> m11_10  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m12_183 -> m12_183  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m12_184 -> m12_187  [color=darkseagreen4, key=1, label=listRef, style=dashed];
m12_186 -> m12_188  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_188 -> m12_190  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m12_188 -> m12_191  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m12_191 -> m12_193  [color=darkseagreen4, key=1, label=nested, style=dashed];
m12_191 -> m12_194  [color=darkseagreen4, key=1, label=nested, style=dashed];
m12_191 -> m12_195  [color=darkseagreen4, key=1, label=nested, style=dashed];
m12_191 -> m12_196  [color=darkseagreen4, key=1, label=nested, style=dashed];
m12_191 -> m12_197  [color=darkseagreen4, key=1, label=nested, style=dashed];
m12_104 -> m12_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_104 -> m12_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_104 -> m12_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_104 -> m12_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_104 -> m12_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_104 -> m12_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_104 -> m12_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_104 -> m12_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_104 -> m12_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_653 -> m12_656  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_653 -> m12_659  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_653 -> m12_658  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_585 -> m12_587  [color=darkseagreen4, key=1, label=p2, style=dashed];
m12_585 -> m12_588  [color=darkseagreen4, key=1, label=p2, style=dashed];
m12_23 -> m12_28  [color=green, key=1, label="lambda expression", style=dashed];
m12_18 -> m12_23  [color=green, key=1, label=sb, style=dashed];
m12_18 -> m12_21  [color=darkseagreen4, key=1, label=sb, style=dashed];
m12_19 -> m12_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_22 -> m12_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_291 -> m12_293  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_296 -> m12_298  [color=darkseagreen4, key=1, label=newCollection, style=dashed];
m12_574 -> m12_576  [color=darkseagreen4, key=1, label=p2, style=dashed];
m12_47 -> m12_49  [color=darkseagreen4, key=1, label=ms, style=dashed];
m12_47 -> m12_50  [color=darkseagreen4, key=1, label=ms, style=dashed];
m12_43 -> m12_45  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_43 -> m12_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_46 -> m12_49  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_41 -> m12_43  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_201 -> m12_203  [color=darkseagreen4, key=1, label=p, style=dashed];
m12_202 -> m12_205  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_202 -> m12_207  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_202 -> m12_209  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_162 -> m12_166  [color=darkseagreen4, key=1, label=containerTypeName, style=dashed];
m12_155 -> m12_157  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_155 -> m12_158  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_213 -> m12_215  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_215 -> m12_217  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m12_215 -> m12_219  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m12_215 -> m12_220  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m12_211 -> m12_213  [color=darkseagreen4, key=1, label=binder, style=dashed];
m12_106 -> m12_108  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_109  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_111  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_112  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_113  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_114  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_116  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_117  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_118  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_119  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_120  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_121  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_122  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_123  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_124  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_125  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_126  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_127  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_128  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_129  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_130  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_131  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_132  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_133  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_134  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_135  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_137  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_138  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_139  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_140  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_141  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_142  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_143  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_145  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_146  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_106 -> m12_147  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_107 -> m12_109  [color=green, key=1, label=employeeRef, style=dashed];
m12_116 -> m12_116  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m12_117 -> m12_117  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m12_110 -> m12_119  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_110 -> m12_120  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_110 -> m12_112  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_110 -> m12_113  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_112 -> m12_114  [color=darkseagreen4, key=1, label=e, style=dashed];
m12_112 -> m12_115  [color=darkseagreen4, key=1, label=e, style=dashed];
m12_113 -> m12_116  [color=darkseagreen4, key=1, label=p, style=dashed];
m12_113 -> m12_117  [color=darkseagreen4, key=1, label=p, style=dashed];
m12_113 -> m12_118  [color=darkseagreen4, key=1, label=p, style=dashed];
m12_236 -> m12_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_236 -> m12_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_236 -> m12_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_236 -> m12_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_236 -> m12_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_236 -> m12_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_236 -> m12_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_236 -> m12_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_236 -> m12_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Benchmarks.SerializeComparisonBenchmarks", style=dashed];
m12_123 -> m12_125  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m12_123 -> m12_128  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m12_124 -> m12_128  [color=darkseagreen4, key=1, label=personRef, style=dashed];
m12_166 -> m12_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_166 -> m12_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_166 -> m12_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_166 -> m12_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_166 -> m12_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_166 -> m12_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_166 -> m12_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_166 -> m12_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_166 -> m12_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_163 -> m12_166  [color=darkseagreen4, key=1, label=productListTypeName, style=dashed];
m12_263 -> m12_267  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m12_263 -> m12_265  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m12_263 -> m12_266  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m12_252 -> m12_257  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_268 -> m12_270  [color=darkseagreen4, key=1, label=list, style=dashed];
m12_268 -> m12_271  [color=darkseagreen4, key=1, label=list, style=dashed];
m12_239 -> m12_242  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m12_239 -> m12_243  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m12_239 -> m12_251  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m12_248 -> m12_251  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m12_245 -> m12_251  [color=darkseagreen4, key=1, label=serializingTester, style=dashed];
m12_362 -> m12_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m12_362 -> m12_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m12_364 -> m12_367  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_364 -> m12_368  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_365 -> m12_367  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m12_442 -> m12_444  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_445 -> m12_448  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_445 -> m12_451  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_445 -> m12_447  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_445 -> m12_449  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_445 -> m12_450  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_325 -> m12_327  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m12_325 -> m12_328  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m12_460 -> m12_462  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_460 -> m12_463  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_460 -> m12_464  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_96 -> m12_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, int>", style=dashed];
m12_305 -> m12_308  [color=darkseagreen4, key=1, label=productClassRef, style=dashed];
m12_29 -> m12_32  [color=green, key=1, label=reader, style=dashed];
m12_30 -> m12_32  [color=green, key=1, label=ser, style=dashed];
m12_30 -> m12_33  [color=darkseagreen4, key=1, label=ms, style=dashed];
m12_77 -> m12_80  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m12_355 -> m12_357  [color=darkseagreen4, key=1, label=w, style=dashed];
m12_355 -> m12_358  [color=darkseagreen4, key=1, label=w, style=dashed];
m12_64 -> m12_66  [color=green, key=1, label=wrapper, style=dashed];
m12_64 -> m12_67  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m12_68 -> m12_71  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_69 -> m12_71  [color=darkseagreen4, key=1, label=dataContractSerializer, style=dashed];
m12_70 -> m12_72  [color=darkseagreen4, key=1, label=ms, style=dashed];
m12_473 -> m12_475  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_473 -> m12_476  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_480 -> m12_482  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_480 -> m12_483  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_226 -> m12_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TestClass", style=dashed];
m12_227 -> m12_231  [color=darkseagreen4, key=1, label=ms, style=dashed];
m12_228 -> m12_230  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m12_85 -> m12_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_85 -> m12_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_86 -> m12_88  [color=darkseagreen4, key=1, label=employee, style=dashed];
m12_427 -> m12_430  [color=darkseagreen4, key=1, label=l2, style=dashed];
m12_427 -> m12_429  [color=darkseagreen4, key=1, label=l2, style=dashed];
m12_427 -> m12_431  [color=darkseagreen4, key=1, label=l2, style=dashed];
m12_427 -> m12_432  [color=darkseagreen4, key=1, label=l2, style=dashed];
m12_421 -> m12_423  [color=darkseagreen4, key=1, label=l, style=dashed];
m12_421 -> m12_424  [color=darkseagreen4, key=1, label=l, style=dashed];
m12_8 -> m12_10  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_342 -> m12_344  [color=darkseagreen4, key=1, label=output, style=dashed];
m12_345 -> m12_347  [color=darkseagreen4, key=1, label=obj, style=dashed];
m12_337 -> m12_349  [color=darkseagreen4, key=1, label=data, style=dashed];
m12_98 -> m12_102  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m12_99 -> m12_102  [color=darkseagreen4, key=1, label=personRef, style=dashed];
m12_557 -> m12_565  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m12_557 -> m12_560  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m12_558 -> m12_565  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m12_558 -> m12_560  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m12_136 -> m12_139  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_136 -> m12_141  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_136 -> m12_143  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_141 -> m12_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_105 -> m12_148  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_1 -> m12_3  [color=darkseagreen4, key=1, label=test, style=dashed];
m12_1 -> m12_4  [color=darkseagreen4, key=1, label=test, style=dashed];
m12_1 -> m12_15  [color=darkseagreen4, key=1, label=test, style=dashed];
m12_1 -> m12_16  [color=darkseagreen4, key=1, label=test, style=dashed];
m12_12 -> m12_14  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_12 -> m12_15  [color=darkseagreen4, key=1, label=address, style=dashed];
m12_59 -> m12_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_170 -> m12_173  [color=darkseagreen4, key=1, label=typeNamePropertyRef, style=dashed];
m12_170 -> m12_214  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_172 -> m12_174  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_174 -> m12_176  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m12_174 -> m12_177  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m12_177 -> m12_179  [color=darkseagreen4, key=1, label=nested, style=dashed];
m12_171 -> m12_173  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_174  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_175  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_177  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_178  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_179  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_180  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_182  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_183  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_184  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_185  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_186  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_187  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_188  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_189  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_190  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_191  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_192  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_193  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_194  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_195  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_196  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_197  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_198  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_199  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_200  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_201  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_203  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_204  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_205  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_206  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_207  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_208  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_209  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_210  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_211  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_212  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_171 -> m12_213  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_393 -> m12_395  [color=darkseagreen4, key=1, label=l, style=dashed];
m12_393 -> m12_396  [color=darkseagreen4, key=1, label=l, style=dashed];
m12_538 -> m12_540  [color=darkseagreen4, key=1, label=d2, style=dashed];
m12_182 -> m12_182  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m12_598 -> m12_600  [color=darkseagreen4, key=1, label=p2, style=dashed];
m12_604 -> m12_606  [color=darkseagreen4, key=1, label=input, style=dashed];
m12_604 -> m12_607  [color=darkseagreen4, key=1, label=input, style=dashed];
m12_493 -> m12_495  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_493 -> m12_496  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_500 -> m12_502  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_500 -> m12_503  [color=darkseagreen4, key=1, label=c2, style=dashed];
m12_514 -> m12_516  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_514 -> m12_517  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_514 -> m12_518  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_514 -> m12_519  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_514 -> m12_520  [color=darkseagreen4, key=1, label=o2, style=dashed];
m12_411 -> m12_413  [color=darkseagreen4, key=1, label=l2, style=dashed];
m12_411 -> m12_414  [color=darkseagreen4, key=1, label=l2, style=dashed];
m12_411 -> m12_415  [color=darkseagreen4, key=1, label=l2, style=dashed];
m12_411 -> m12_416  [color=darkseagreen4, key=1, label=l2, style=dashed];
m12_404 -> m12_407  [color=darkseagreen4, key=1, label=l, style=dashed];
m12_404 -> m12_408  [color=darkseagreen4, key=1, label=l, style=dashed];
m12_403 -> m12_405  [color=darkseagreen4, key=1, label=c1, style=dashed];
m12_679 -> m12_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m12_679 -> m12_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m12_679 -> m12_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m12_678 -> m12_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m12_678 -> m12_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m12_678 -> m12_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m12_678 -> m12_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m12_682 -> m12_651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m12_682 -> m12_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m12_682 -> m12_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m12_682 -> m12_665  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m12_682 -> m12_667  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m12_680 -> m12_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MyParent", style=dashed];
m14_1 -> m14_3  [color=darkseagreen4, key=1, label=doc, style=dashed];
m14_1 -> m14_4  [color=darkseagreen4, key=1, label=doc, style=dashed];
}
