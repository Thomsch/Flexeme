digraph  {
n0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n1 [label="JValue v1 = new JValue(true)", span="13-13", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n2 [label="bool b = (bool)v1.ToObject(typeof(bool))", span="15-15", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n9 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="118-118", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)"];
n4 [label="int i = (int)v1.ToObject(typeof(int))", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n6 [label="string s = (string)v1.ToObject(typeof(string))", span="25-25", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n3 [label="Console.WriteLine(b)", span="17-17", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n10 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1428-1428", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)"];
n11 [label="Entry System.Console.WriteLine(bool)", span="0-0", cluster="System.Console.WriteLine(bool)"];
n5 [label="Console.WriteLine(i)", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n12 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)"];
n7 [label="Console.WriteLine(s)", span="27-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n8 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()"];
n13 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
m0_11 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Flight.Flight()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Flight.Flight()", file="JsonConvert.cs"];
m0_15 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs"];
m0_12 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvert.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_1 [label="Flight flight = new Flight\r\n        {\r\n          Destination = ''Dubai'',\r\n          DepartureDate = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Unspecified),\r\n          DepartureDateUtc = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Utc),\r\n          DepartureDateLocal = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Local),\r\n          Duration = TimeSpan.FromHours(5.5)\r\n        }", span="23-30", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_2 [label="string jsonWithRoundtripTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind\r\n      })", span="32-35", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_4 [label="string jsonWithLocalTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n      })", span="46-49", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_6 [label="string jsonWithUtcTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n      })", span="60-63", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_8 [label="string jsonWithUnspecifiedTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateTimeZoneHandling = DateTimeZoneHandling.Unspecified\r\n      })", span="74-77", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_3 [label="Console.WriteLine(jsonWithRoundtripTimeZone)", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_5 [label="Console.WriteLine(jsonWithLocalTimeZone)", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_7 [label="Console.WriteLine(jsonWithUtcTimeZone)", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_9 [label="Console.WriteLine(jsonWithUnspecifiedTimeZone)", span="79-79", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_10 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs"];
m0_13 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonConvert.cs"];
m0_14 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonConvert.cs"];
m1_10 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs"];
m1_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs"];
m1_7 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Employee.Employee()", span="18-18", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Employee.Employee()", file="JsonSerializerTest.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", span="27-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs"];
m1_1 [label="Employee manager = new Employee\r\n      {\r\n        Name = ''George-Michael''\r\n      }", span="30-33", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs"];
m1_2 [label="Employee worker = new Employee\r\n      {\r\n        Name = ''Maeby'',\r\n        Manager = manager\r\n      }", span="34-38", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs"];
m1_3 [label="Business business = new Business\r\n        {\r\n          Name = ''Acme Ltd.'',\r\n          Employees = new List<Employee>\r\n            {\r\n              manager,\r\n              worker\r\n            }\r\n        }", span="40-48", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs"];
m1_4 [label="string json = JsonConvert.SerializeObject(business, Formatting.Indented)", span="50-50", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs"];
m1_5 [label="Console.WriteLine(json)", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs"];
m1_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", span="27-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs"];
m1_8 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Business.Business()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Business.Business()", file="JsonSerializerTest.cs"];
m2_34 [label="Entry JsonSerializationException.cstr", span="", cluster="JsonSerializationException.cstr", file="XmlNodeConverter.cs"];
m2_7 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="54-54", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="XmlNodeConverter.cs"];
m2_324 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", span="554-554", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", file="XmlNodeConverter.cs"];
m2_325 [label="return c.OfType<XmlNode>().Where(n => n.NamespaceURI != JsonNamespaceUri);", span="556-556", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", file="XmlNodeConverter.cs"];
m2_326 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", span="554-554", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", file="XmlNodeConverter.cs"];
m2_75 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="255-255", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverter.cs"];
m2_8 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="XmlNodeConverter.cs"];
m2_278 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement", file="XmlNodeConverter.cs"];
m2_141 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="XmlNodeConverter.cs"];
m2_136 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="XmlNodeConverter.cs"];
m2_145 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="273-273", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="XmlNodeConverter.cs"];
m2_310 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="XmlNodeConverter.cs"];
m2_134 [label="Entry Unk.WritePropertyName", span="", cluster="Unk.WritePropertyName", file="XmlNodeConverter.cs"];
m2_144 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="XmlNodeConverter.cs"];
m2_258 [label="Entry Unk.CreateWhitespace", span="", cluster="Unk.CreateWhitespace", file="XmlNodeConverter.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", span="24-24", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs"];
m2_5 [label="Console.WriteLine(jsonIgnoreDefaultValues)", span="43-43", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs"];
m2_1 [label="Customer customer = new Customer()", span="27-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs"];
m2_4 [label="string jsonIgnoreDefaultValues = JsonConvert.SerializeObject(customer, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DefaultValueHandling = DefaultValueHandling.Ignore\r\n        })", span="38-41", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs"];
m2_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", span="24-24", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs"];
m2_2 [label="string jsonIncludeDefaultValues = JsonConvert.SerializeObject(customer, Formatting.Indented)", span="29-29", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs"];
m2_3 [label="Console.WriteLine(jsonIncludeDefaultValues)", span="31-31", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs"];
m2_135 [label="Entry Unk.ValueAttributes", span="", cluster="Unk.ValueAttributes", file="XmlNodeConverter.cs"];
m2_35 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", span="93-93", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_40 [label="string nodeName = GetPropertyName(childNode)", span="101-101", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_58 [label="SerializeNode(writer, groupedNodes[0], true)", span="136-136", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_64 [label="SerializeNode(writer, groupedNodes[i], false)", span="146-146", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_39 [label="XmlNode childNode = node.ChildNodes[i]", span="100-100", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_41 [label="List<XmlNode> nodes", span="103-103", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_42 [label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="104-104", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_44 [label="nodesGroupedByName.Add(nodeName, nodes)", span="107-107", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_48 [label="List<XmlNode> groupedNodes = nodeNameGroup.Value", span="117-117", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_57 [label="!writeArray", span="134-134", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_47 [label=nodesGroupedByName, span="115-115", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_63 [label="i < groupedNodes.Count", span="144-144", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_62 [label="int i = 0", span="144-144", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_65 [label="i++", span="144-144", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_38 [label="i < node.ChildNodes.Count", span="98-98", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_37 [label="int i = 0", span="98-98", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_45 [label="nodes.Add(childNode)", span="110-110", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_36 [label="Dictionary<string, List<XmlNode>> nodesGroupedByName = new Dictionary<string, List<XmlNode>>()", span="96-96", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_43 [label="nodes = new List<XmlNode>()", span="106-106", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_60 [label="writer.WritePropertyName(nodeNameGroup.Key)", span="141-141", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_61 [label="writer.WriteStartArray()", span="142-142", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_66 [label="writer.WriteEndArray()", span="149-149", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_49 [label="bool writeArray", span="118-118", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_50 [label="groupedNodes.Count == 1", span="120-120", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_51 [label="XmlNode singleNode = groupedNodes[0]", span="122-122", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_59 [label="string elementNames = nodeNameGroup.Key", span="140-140", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_56 [label="writeArray = true", span="131-131", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_54 [label="writeArray = XmlConvert.ToBoolean(jsonArrayAttribute.Value)", span="125-125", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_55 [label="writeArray = false", span="127-127", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_46 [label="i++", span="98-98", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_52 [label="XmlAttribute jsonArrayAttribute = (singleNode.Attributes != null) ? singleNode.Attributes[''Array'', JsonNamespaceUri] : null", span="123-123", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_53 [label="jsonArrayAttribute != null", span="124-124", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_67 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", span="93-93", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs"];
m2_254 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="XmlNodeConverter.cs"];
m2_72 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="XmlNodeConverter.cs"];
m2_69 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="XmlNodeConverter.cs"];
m2_260 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="XmlNodeConverter.cs"];
m2_138 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="XmlNodeConverter.cs"];
m2_261 [label="Entry Unk.CreateXmlDeclaration", span="", cluster="Unk.CreateXmlDeclaration", file="XmlNodeConverter.cs"];
m2_11 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="247-247", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverter.cs"];
m2_267 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="520-520", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_300 [label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="522-522", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_301 [label="attributeName.Length == 5", span="524-524", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_304 [label="attributeName[5] == ':'", span="529-529", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_305 [label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="531-531", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_307 [label="prefix = null", span="535-535", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_303 [label="return true;", span="527-527", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_306 [label="return true;", span="532-532", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_308 [label="return false;", span="536-536", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_302 [label="prefix = string.Empty", span="526-526", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_309 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="520-520", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs"];
m2_172 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", span="280-280", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_173 [label=propertyName, span="282-282", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_174 [label=TextName, span="284-284", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_176 [label=CDataName, span="287-287", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_178 [label=WhitespaceName, span="290-290", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_180 [label=SignificantWhitespaceName, span="293-293", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_182 [label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="298-298", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_213 [label="reader.TokenType != JsonToken.String\r\n              && reader.TokenType != JsonToken.Null\r\n              && reader.TokenType != JsonToken.Boolean\r\n              && reader.TokenType != JsonToken.Integer\r\n              && reader.TokenType != JsonToken.Float\r\n              && reader.TokenType != JsonToken.Date\r\n              && reader.TokenType != JsonToken.StartConstructor", span="358-364", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_207 [label="reader.TokenType == JsonToken.StartArray", span="343-343", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_214 [label="!finishedAttributes && !finishedElement && reader.Read()", span="367-367", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_230 [label="XmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="404-404", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_225 [label="manager.AddNamespace(namespacePrefix, attributeValue)", span="385-385", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_203 [label="bool finishedAttributes = false", span="338-338", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_204 [label="bool finishedElement = false", span="339-339", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_226 [label="finishedAttributes = true", span="390-390", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_224 [label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="383-383", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_228 [label="finishedElement = true", span="394-394", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_215 [label="reader.TokenType", span="369-369", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_216 [label="JsonToken.PropertyName", span="371-371", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_227 [label="JsonToken.EndObject", span="393-393", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_229 [label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="397-397", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_187 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="305-305", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_190 [label="reader.Read()", span="310-310", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_193 [label="reader.Read()", span="314-314", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_196 [label="reader.Read()", span="318-318", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_210 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="349-349", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_220 [label="reader.Read()", span="377-377", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_205 [label="string elementPrefix = GetPrefix(propertyName)", span="340-340", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_208 [label="XmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="345-345", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_211 [label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="351-351", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_233 [label="string attributePrefix = GetPrefix(nameValue.Key)", span="411-411", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_251 [label="DeserializeNode(reader, document, manager, element)", span="454-454", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_175 [label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="285-285", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_177 [label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="288-288", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_179 [label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="291-291", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_181 [label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="294-294", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_183 [label="propertyName == DeclarationName", span="300-300", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_188 [label="reader.Value.ToString()", span="307-307", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_191 [label="version = reader.Value.ToString()", span="311-311", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_194 [label="encoding = reader.Value.ToString()", span="315-315", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_197 [label="standalone = reader.Value.ToString()", span="319-319", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_198 [label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="322-322", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_199 [label="XmlDeclaration declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="326-326", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_200 [label="currentNode.AppendChild(declaration)", span="327-327", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_201 [label="XmlProcessingInstruction instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="331-331", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_202 [label="currentNode.AppendChild(instruction)", span="332-332", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_209 [label="currentNode.AppendChild(nestedArrayElement)", span="347-347", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_217 [label="string attributeName = reader.Value.ToString()", span="372-372", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_221 [label="string attributeValue = reader.Value.ToString()", span="378-378", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_231 [label="currentNode.AppendChild(element)", span="406-406", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_234 [label="XmlAttribute attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                      ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix))\r\n                      : document.CreateAttribute(nameValue.Key)", span="413-415", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_237 [label="reader.TokenType == JsonToken.String", span="422-422", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_238 [label="element.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="424-424", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_239 [label="reader.TokenType == JsonToken.Integer", span="426-426", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_240 [label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((long)reader.Value)))", span="428-428", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_241 [label="reader.TokenType == JsonToken.Float", span="430-430", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_242 [label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((double)reader.Value)))", span="432-432", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_243 [label="reader.TokenType == JsonToken.Boolean", span="434-434", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_244 [label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((bool)reader.Value)))", span="436-436", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_245 [label="reader.TokenType == JsonToken.Date", span="438-438", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_246 [label="DateTime d = (DateTime)reader.Value", span="440-440", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_247 [label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind))))", span="441-441", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_248 [label="reader.TokenType == JsonToken.Null", span="443-443", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_250 [label="manager.PushScope()", span="452-452", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_252 [label="manager.PopScope()", span="456-456", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_206 [label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="341-341", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_236 [label="element.SetAttributeNode(attribute)", span="419-419", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_249 [label="!finishedElement", span="450-450", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_218 [label="attributeName[0] == '@'", span="374-374", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_219 [label="attributeName = attributeName.Substring(1)", span="376-376", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_223 [label="string namespacePrefix", span="381-381", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_186 [label="string standalone = null", span="304-304", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_189 [label="''@version''", span="309-309", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_192 [label="''@encoding''", span="313-313", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_195 [label="''@standalone''", span="317-317", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_212 [label="return;", span="354-354", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_232 [label=attributeNameValues, span="409-409", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_184 [label="string version = null", span="302-302", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_185 [label="string encoding = null", span="303-303", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_222 [label="attributeNameValues.Add(attributeName, attributeValue)", span="379-379", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_235 [label="attribute.Value = nameValue.Value", span="417-417", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_253 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", span="280-280", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs"];
m2_259 [label="Entry Unk.CreateSignificantWhitespace", span="", cluster="Unk.CreateSignificantWhitespace", file="XmlNodeConverter.cs"];
m2_270 [label="Entry Unk.CreateAttribute", span="", cluster="Unk.CreateAttribute", file="XmlNodeConverter.cs"];
m2_264 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", span="539-539", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs"];
m2_312 [label="int colonPosition = qualifiedName.IndexOf(':')", span="541-541", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs"];
m2_313 [label="(colonPosition == -1 || colonPosition == 0) || (qualifiedName.Length - 1) == colonPosition", span="543-543", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs"];
m2_315 [label="return qualifiedName.Substring(0, colonPosition);", span="546-546", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs"];
m2_314 [label="return string.Empty;", span="544-544", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs"];
m2_316 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", span="539-539", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs"];
m2_143 [label="Entry Unk.First", span="", cluster="Unk.First", file="XmlNodeConverter.cs"];
m2_268 [label="Entry Unk.AddNamespace", span="", cluster="Unk.AddNamespace", file="XmlNodeConverter.cs"];
m2_271 [label="Entry Unk.SetAttributeNode", span="", cluster="Unk.SetAttributeNode", file="XmlNodeConverter.cs"];
m2_142 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="XmlNodeConverter.cs"];
m2_12 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", span="66-66", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_13 [label="node.NodeType", span="68-68", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_15 [label="return ''@'' + node.Name;", span="71-71", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_21 [label="return node.Name;", span="77-77", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_23 [label="return ''?'' + node.Name;", span="79-79", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_32 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="89-89", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_17 [label="return CDataName;", span="73-73", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_19 [label="return CommentName;", span="75-75", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_25 [label="return DeclarationName;", span="81-81", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_27 [label="return SignificantWhitespaceName;", span="83-83", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_29 [label="return TextName;", span="85-85", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_31 [label="return WhitespaceName;", span="87-87", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_14 [label="XmlNodeType.Attribute", span="70-70", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_16 [label="XmlNodeType.CDATA", span="72-72", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_18 [label="XmlNodeType.Comment", span="74-74", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_20 [label="XmlNodeType.Element", span="76-76", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_22 [label="XmlNodeType.ProcessingInstruction", span="78-78", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_24 [label="XmlNodeType.XmlDeclaration", span="80-80", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_26 [label="XmlNodeType.SignificantWhitespace", span="82-82", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_28 [label="XmlNodeType.Text", span="84-84", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_30 [label="XmlNodeType.Whitespace", span="86-86", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_33 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", span="66-66", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs"];
m2_140 [label="Entry Unk.>", span="", cluster="Unk.>", file="XmlNodeConverter.cs"];
m2_279 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", span="471-471", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_282 [label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="478-478", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_281 [label="JsonToken.PropertyName", span="477-477", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_283 [label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document.'');", span="479-479", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_284 [label="string propertyName = reader.Value.ToString()", span="481-481", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_285 [label="reader.Read()", span="482-482", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_288 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="488-488", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_289 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="493-493", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_286 [label="reader.TokenType == JsonToken.StartArray", span="484-484", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_287 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="486-486", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_292 [label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="499-499", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_298 [label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="510-510", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_293 [label="DeserializeValue(reader, document, manager, ''-'' + constructorName, currentNode)", span="501-501", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_280 [label="reader.TokenType", span="475-475", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_291 [label="string constructorName = reader.Value.ToString()", span="497-497", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_297 [label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="508-508", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_296 [label="return;", span="506-506", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_290 [label="JsonToken.StartConstructor", span="496-496", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_294 [label="JsonToken.EndObject", span="504-504", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_295 [label="JsonToken.EndArray", span="505-505", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_299 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", span="471-471", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs"];
m2_255 [label="Entry Unk.CreateTextNode", span="", cluster="Unk.CreateTextNode", file="XmlNodeConverter.cs"];
m2_262 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="XmlNodeConverter.cs"];
m2_171 [label="Entry Unk.DeserializeNode", span="", cluster="Unk.DeserializeNode", file="XmlNodeConverter.cs"];
m2_311 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="XmlNodeConverter.cs"];
m2_73 [label="Entry Unk.ToBoolean", span="", cluster="Unk.ToBoolean", file="XmlNodeConverter.cs"];
m2_169 [label="Entry XmlNamespaceManager.cstr", span="", cluster="XmlNamespaceManager.cstr", file="XmlNodeConverter.cs"];
m2_263 [label="Entry Unk.CreateProcessingInstruction", span="", cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverter.cs"];
m2_10 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="XmlNodeConverter.cs"];
m2_80 [label="SerializeGroupedNodes(writer, node)", span="160-160", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_84 [label="ValueAttributes(node.Attributes).Count() == 0 && node.ChildNodes.Count == 1\r\n                  && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="166-167", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_94 [label="SerializeNode(writer, node.ChildNodes[i], false)", span="186-186", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_100 [label="SerializeNode(writer, node.Attributes[i], true)", span="197-197", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_102 [label="SerializeGroupedNodes(writer, node)", span="200-200", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_116 [label="writer.WritePropertyName(GetPropertyName(node))", span="222-222", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_120 [label="writer.WritePropertyName(GetPropertyName(node))", span="227-227", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_79 [label="XmlNodeType.DocumentFragment", span="159-159", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_82 [label=writePropertyName, span="163-163", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_83 [label="writer.WritePropertyName(node.Name)", span="164-164", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_85 [label="writer.WriteValue(node.ChildNodes[0].Value)", span="170-170", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_86 [label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="172-172", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_93 [label="i < node.ChildNodes.Count", span="184-184", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_92 [label="int i = 0", span="184-184", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_95 [label="i++", span="184-184", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_99 [label="i < node.Attributes.Count", span="195-195", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_98 [label="int i = 0", span="195-195", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_101 [label="i++", span="195-195", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_103 [label="writer.WriteEndObject()", span="202-202", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_115 [label=writePropertyName, span="221-221", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_117 [label="writer.WriteValue(node.Value)", span="223-223", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_119 [label="XmlDeclaration declaration = (XmlDeclaration)node", span="226-226", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_121 [label="writer.WriteStartObject()", span="228-228", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_77 [label="node.NodeType", span="156-156", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_87 [label="writer.WriteNull()", span="175-175", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_88 [label="node.ChildNodes.OfType<XmlElement>().Where(x => x.Name.StartsWith(''-'')).Count() > 1", span="177-177", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_89 [label="XmlElement constructorValueElement = node.ChildNodes.OfType<XmlElement>().Where(x => x.Name.StartsWith(''-'')).First()", span="179-179", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_91 [label="writer.WriteStartConstructor(constructorName)", span="182-182", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_96 [label="writer.WriteEndConstructor()", span="189-189", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_97 [label="writer.WriteStartObject()", span="193-193", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_105 [label=writePropertyName, span="207-207", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_106 [label="writer.WriteComment(node.Value)", span="208-208", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_113 [label="node.Prefix == ''xmlns'' && node.Value == JsonNamespaceUri", span="216-216", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_114 [label="node.NamespaceURI == JsonNamespaceUri", span="218-218", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_123 [label="writer.WritePropertyName(''@version'')", span="232-232", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_124 [label="writer.WriteValue(declaration.Version)", span="233-233", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_126 [label="writer.WritePropertyName(''@encoding'')", span="237-237", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_127 [label="writer.WriteValue(declaration.Encoding)", span="238-238", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_129 [label="writer.WritePropertyName(''@standalone'')", span="242-242", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_130 [label="writer.WriteValue(declaration.Standalone)", span="243-243", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_131 [label="writer.WriteEndObject()", span="246-246", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_132 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="249-249", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_78 [label="XmlNodeType.Document", span="158-158", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_81 [label="XmlNodeType.Element", span="162-162", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_118 [label="XmlNodeType.XmlDeclaration", span="225-225", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_122 [label="!string.IsNullOrEmpty(declaration.Version)", span="230-230", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_125 [label="!string.IsNullOrEmpty(declaration.Encoding)", span="235-235", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_128 [label="!string.IsNullOrEmpty(declaration.Standalone)", span="240-240", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_104 [label="XmlNodeType.Comment", span="206-206", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_107 [label="XmlNodeType.Attribute", span="210-210", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_90 [label="string constructorName = constructorValueElement.Name.Substring(1)", span="180-180", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_112 [label="XmlNodeType.SignificantWhitespace", span="215-215", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_108 [label="XmlNodeType.Text", span="211-211", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_111 [label="XmlNodeType.Whitespace", span="214-214", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_109 [label="XmlNodeType.CDATA", span="212-212", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_110 [label="XmlNodeType.ProcessingInstruction", span="213-213", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_133 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", span="154-154", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs"];
m2_139 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="622-622", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="XmlNodeConverter.cs"];
m2_266 [label="Entry Unk.DeserializeValue", span="", cluster="Unk.DeserializeValue", file="XmlNodeConverter.cs"];
m2_71 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverter.cs"];
m2_327 [label="Entry lambda expression", span="556-556", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_149 [label="Entry lambda expression", span="177-177", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_153 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_151 [label="Exit lambda expression", span="177-177", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_150 [label="x.Name.StartsWith(''-'')", span="177-177", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_155 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_154 [label="x.Name.StartsWith(''-'')", span="179-179", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_321 [label="Entry lambda expression", span="551-551", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_323 [label="Exit lambda expression", span="551-551", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_322 [label="a.NamespaceURI != JsonNamespaceUri", span="551-551", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_328 [label="n.NamespaceURI != JsonNamespaceUri", span="556-556", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_329 [label="Exit lambda expression", span="556-556", cluster="lambda expression", file="XmlNodeConverter.cs"];
m2_273 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="23-23", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="XmlNodeConverter.cs"];
m2_257 [label="Entry Unk.CreateCDataSection", span="", cluster="Unk.CreateCDataSection", file="XmlNodeConverter.cs"];
m2_272 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="XmlNodeConverter.cs"];
m2_137 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="XmlNodeConverter.cs"];
m2_274 [label="Entry Unk.PushScope", span="", cluster="Unk.PushScope", file="XmlNodeConverter.cs"];
m2_9 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="238-238", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverter.cs"];
m2_148 [label="Entry Unk.WriteComment", span="", cluster="Unk.WriteComment", file="XmlNodeConverter.cs"];
m2_265 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", span="464-464", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs"];
m2_276 [label="return (!string.IsNullOrEmpty(elementPrefix))\r\n               ? document.CreateElement(elementName, manager.LookupNamespace(elementPrefix))\r\n               : document.CreateElement(elementName);", span="466-468", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs"];
m2_277 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", span="464-464", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs"];
m2_146 [label="Entry Unk.SerializeNode", span="", cluster="Unk.SerializeNode", file="XmlNodeConverter.cs"];
m2_152 [label="Entry Unk.StartsWith", span="", cluster="Unk.StartsWith", file="XmlNodeConverter.cs"];
m2_156 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="261-261", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs"];
m2_163 [label="reader.Read()", span="273-273", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_161 [label="reader.TokenType != JsonToken.StartObject", span="270-270", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs"];
m2_164 [label="DeserializeNode(reader, document, manager, document)", span="275-275", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_159 [label="XmlDocument document = new XmlDocument()", span="267-267", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs"];
m2_160 [label="XmlNamespaceManager manager = new XmlNamespaceManager(document.NameTable)", span="268-268", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs"];
m2_165 [label="return document;", span="277-277", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", color=green, community=0, file="XmlNodeConverter.cs"];
m2_157 [label="objectType != typeof(XmlDocument)", span="264-264", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs"];
m2_162 [label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="271-271", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs"];
m2_158 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="265-265", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs"];
m2_166 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="261-261", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs"];
m2_167 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="XmlNodeConverter.cs"];
m2_170 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204", cluster="Newtonsoft.Json.JsonReader.Read()", file="XmlNodeConverter.cs"];
m2_74 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="291-291", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="XmlNodeConverter.cs"];
m2_147 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="282-282", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="XmlNodeConverter.cs"];
m2_275 [label="Entry Unk.PopScope", span="", cluster="Unk.PopScope", file="XmlNodeConverter.cs"];
m2_76 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="264-264", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverter.cs"];
m2_256 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild", file="XmlNodeConverter.cs"];
m2_317 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="XmlNodeConverter.cs"];
m2_70 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverter.cs"];
m2_318 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", span="549-549", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="XmlNodeConverter.cs"];
m2_319 [label="return c.OfType<XmlAttribute>().Where(a => a.NamespaceURI != JsonNamespaceUri);", span="551-551", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="XmlNodeConverter.cs"];
m2_320 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", span="549-549", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="XmlNodeConverter.cs"];
m2_269 [label="Entry Unk.LookupNamespace", span="", cluster="Unk.LookupNamespace", file="XmlNodeConverter.cs"];
m2_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverter.cs"];
m2_168 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="XmlNodeConverter.cs"];
m2_334 [label="Newtonsoft.Json.Converters.XmlNodeConverter", span="", file="XmlNodeConverter.cs"];
m3_8 [label="jsonSerializer.Converters.Add(new XmlNodeConverter())", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_107 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="XmlNodeConverterTest.cs"];
m3_73 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="182-182", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_79 [label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="215-215", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_75 [label="XmlDocument doc = new XmlDocument()", span="208-208", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_78 [label="XmlDocument deserializedDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="213-213", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_80 [label="Console.WriteLine(''NamespaceSerializeDeserialize'')", span="217-217", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_74 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="184-206", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_76 [label="doc.LoadXml(xml)", span="209-209", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_77 [label="string jsonText = JsonConvert.SerializeXmlNode(doc)", span="211-211", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_82 [label="Console.WriteLine(deserializedDoc.InnerXml)", span="219-219", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_81 [label="Console.WriteLine(jsonText)", span="218-218", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_83 [label="Console.WriteLine()", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_84 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="182-182", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_23 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="XmlNodeConverterTest.cs"];
m3_20 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="XmlNodeConverterTest.cs"];
m3_172 [label="Entry Unk.DeserializeXmlNode", span="", cluster="Unk.DeserializeXmlNode", file="XmlNodeConverterTest.cs"];
m3_173 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="469-469", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_174 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="471-482", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", color=green, community=1, file="XmlNodeConverterTest.cs"];
m3_175 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="484-484", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", color=green, community=0, file="XmlNodeConverterTest.cs"];
m3_176 [label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="486-486", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", color=green, community=0, file="XmlNodeConverterTest.cs"];
m3_177 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="469-469", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_22 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="38-38", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="XmlNodeConverterTest.cs"];
m3_7 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="60-60", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_58 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement", file="XmlNodeConverterTest.cs"];
m3_87 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="224-224", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_95 [label="Assert.AreEqual(expected, formattedXml)", span="260-260", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_90 [label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="247-252", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_91 [label="string formattedXml = GetIndentedInnerXml(doc)", span="254-254", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_94 [label="Console.WriteLine()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_89 [label="XmlDocument doc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="245-245", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_92 [label="Console.WriteLine(''DocumentDeserialize'')", span="256-256", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_93 [label="Console.WriteLine(formattedXml)", span="257-257", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_88 [label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      }\r\n    }\r\n  }\r\n}''", span="226-243", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_96 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="224-224", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_28 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="XmlNodeConverterTest.cs"];
m3_18 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="XmlNodeConverterTest.cs"];
m3_132 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="344-344", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m3_133 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]'')", span="346-346", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m3_134 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="344-344", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m3_24 [label="Entry Unk.Serialize", span="", cluster="Unk.Serialize", file="XmlNodeConverterTest.cs"];
m3_6 [label="jsonWriter.Formatting = Formatting.Indented", span="58-58", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_54 [label="Entry Unk.CreateAttribute", span="", cluster="Unk.CreateAttribute", file="XmlNodeConverterTest.cs"];
m3_167 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="459-459", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_168 [label="string strJSON = @''{''''count'''': 773840,''''photos'''': 773840}''", span="461-461", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", color=green, community=0, file="XmlNodeConverterTest.cs"];
m3_169 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(strJSON, ''myRoot'')", span="463-463", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", color=green, community=0, file="XmlNodeConverterTest.cs"];
m3_170 [label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newDoc.InnerXml)", span="465-465", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", color=green, community=0, file="XmlNodeConverterTest.cs"];
m3_171 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="459-459", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_29 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="113-113", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_37 [label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="127-127", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_41 [label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_45 [label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="145-145", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_52 [label="Assert.AreEqual(@''{''''xs:Choice'''':{''''@msdata:IsDataSet'''':''''true'''',''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}}'', jsonText)", span="158-158", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_35 [label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="124-124", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_36 [label="Console.WriteLine(jsonText)", span="126-126", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_38 [label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="131-131", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_39 [label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="133-133", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_40 [label="Console.WriteLine(jsonText)", span="135-135", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_42 [label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_43 [label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_44 [label="Console.WriteLine(jsonText)", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_46 [label="XmlElement element = doc.CreateElement(''xs:Choice'')", span="149-149", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_50 [label="jsonText = JsonConvert.SerializeXmlNode(element)", span="155-155", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_51 [label="Console.WriteLine(jsonText)", span="157-157", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_34 [label="attribute.Value = ''true''", span="122-122", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_30 [label="XmlDocument doc = new XmlDocument()", span="115-115", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_48 [label="element.AppendChild(instruction)", span="152-152", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_49 [label="element.AppendChild(cDataSection)", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_47 [label="element.SetAttributeNode(attribute)", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_32 [label="Console.WriteLine(''SerializeNodeTypes'')", span="118-118", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_33 [label="XmlAttribute attribute = doc.CreateAttribute(''msdata:IsDataSet'')", span="121-121", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_31 [label="string jsonText", span="116-116", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_53 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="113-113", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_59 [label="Entry Unk.SetAttributeNode", span="", cluster="Unk.SetAttributeNode", file="XmlNodeConverterTest.cs"];
m3_72 [label="Entry Unk.CreateDocumentFragment", span="", cluster="Unk.CreateDocumentFragment", file="XmlNodeConverterTest.cs"];
m3_106 [label="Entry XmlWriterSettings.cstr", span="", cluster="XmlWriterSettings.cstr", file="XmlNodeConverterTest.cs"];
m3_97 [label="Entry Unk.GetIndentedInnerXml", span="", cluster="Unk.GetIndentedInnerXml", file="XmlNodeConverterTest.cs"];
m3_26 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="XmlNodeConverterTest.cs"];
m3_178 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="490-490", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_179 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", span="492-507", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", color=green, community=1, file="XmlNodeConverterTest.cs"];
m3_180 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="509-509", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", color=green, community=0, file="XmlNodeConverterTest.cs"];
m3_181 [label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="511-511", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", color=green, community=0, file="XmlNodeConverterTest.cs"];
m3_182 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="490-490", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_85 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="624-624", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m3_56 [label="Entry Unk.CreateProcessingInstruction", span="", cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverterTest.cs"];
m3_117 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="304-304", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_124 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="327-327", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_119 [label="XmlDocument doc = new XmlDocument()", span="318-318", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_123 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="325-325", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_118 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url />\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="306-316", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_120 [label="doc.LoadXml(xml)", span="319-319", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_121 [label="string jsonText = JsonConvert.SerializeXmlNode(doc)", span="321-321", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_122 [label="Console.WriteLine(jsonText)", span="323-323", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_125 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="304-304", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_21 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="151-151", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs"];
m3_163 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", span="420-420", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", file="XmlNodeConverterTest.cs"];
m3_165 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(strJSON)", span="455-455", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", file="XmlNodeConverterTest.cs"];
m3_164 [label="string strJSON = @''{\r\n''''count'''': 773840,''''photos'''': [\r\n{\r\n''''photo_id'''': 532693,\r\n''''photo_title'''': ''''Wheatfield in afternoon light'''',\r\n''''photo_url'''': ''''http://www.panoramio.com/photo/532693'''',\r\n''''photofileurl'''': ''''http://static2.bareka.com/photos/medium/532693.jpg'''',\r\n''''longitude'''': 11.280727,\r\n''''latitude'''': 59.643198,\r\n''''width'''': 500,\r\n''''height'''': 333,\r\n''''upload_date'''': ''''22 January 2007'''',\r\n''''owner_id'''': 39160,\r\n''''owner_name'''': ''''Snemann'''',\r\n''''owner_url'''': ''''http://www.panoramio.com/user/39160'''',\r\n},\r\n{\r\n''''photo_id'''': 505229,\r\n''''photo_title'''': ''''Etangs pr�s de Dijon'''',\r\n''''photo_url'''': ''''http://www.panoramio.com/photo/505229'''',\r\n''''photofileurl'''': ''''http://static2.bareka.com/photos/medium/505229.jpg'''',\r\n''''longitude'''': 5.168552,\r\n''''latitude'''': 47.312642,\r\n''''width'''': 350,\r\n''''height'''': 500,\r\n''''upload_date'''': ''''20 January 2007'''',\r\n''''owner_id'''': 78506,\r\n''''owner_name'''': ''''Philippe Stoop'''',\r\n''''owner_url'''': ''''http://www.panoramio.com/user/78506''''\r\n}\r\n]\r\n}''", span="422-453", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", file="XmlNodeConverterTest.cs"];
m3_166 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", span="420-420", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", file="XmlNodeConverterTest.cs"];
m3_86 [label="Entry Unk.WriteLine", span="", cluster="Unk.WriteLine", file="XmlNodeConverterTest.cs"];
m3_57 [label="Entry Unk.CreateCDataSection", span="", cluster="Unk.CreateCDataSection", file="XmlNodeConverterTest.cs"];
m3_19 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverterTest.cs"];
m3_126 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="331-331", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_130 [label="Assert.AreEqual(expected, newDoc.InnerXml)", span="339-339", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_128 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="335-335", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_129 [label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><Float>2.5</Float><Integer>99</Integer></person><person id=''''2''''><Boolean>true</Boolean><date>2000-03-30T00:00:00Z</date></person></root>''", span="337-337", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_127 [label="string jsonText = @''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''Float'''':2.5,''''Integer'''':99},{''''@id'''':''''2'''',''''Boolean'''':true,''''date'''':''''\/Date(954374400000)\/''''}]}}''", span="333-333", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_131 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="331-331", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_109 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="279-279", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_115 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="300-300", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_111 [label="XmlDocument doc = new XmlDocument()", span="293-293", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_114 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="298-298", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_110 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="281-291", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_112 [label="doc.LoadXml(xml)", span="294-294", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_113 [label="string jsonText = JsonConvert.SerializeXmlNode(doc)", span="296-296", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_116 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="279-279", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_138 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="357-357", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_142 [label="Assert.AreEqual(expected, newDoc.InnerXml)", span="365-365", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_144 [label="Assert.AreEqual(@''{''''root'''':{''''r'''':new Date(''''34343'''',''''55'''')}}'', json)", span="368-368", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_140 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="361-361", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_141 [label="string expected = @''<root><r><-Date>34343</-Date><-Date>55</-Date></r></root>''", span="363-363", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_143 [label="string json = JsonConvert.SerializeXmlNode(newDoc)", span="367-367", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_139 [label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="359-359", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_145 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="357-357", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_135 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="351-351", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m3_136 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}'')", span="353-353", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m3_137 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="351-351", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m3_98 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="263-263", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_104 [label="return sw.ToString();", span="275-275", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_101 [label="StringWriter sw = new StringWriter()", span="268-268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_103 [label="node.WriteTo(writer)", span="272-272", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_100 [label="settings.Indent = true", span="266-266", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_102 [label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_99 [label="XmlWriterSettings settings = new XmlWriterSettings()", span="265-265", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_105 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="263-263", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="39-39", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_1 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n    <abbr class=''''dtstart'''' title=''''2005-10-05''''>October 5</abbr>\r\n    <abbr class=''''dtend'''' title=''''2005-10-08''''>7</abbr>\r\n    <span class=''''location''''>Argent Hotel, San Francisco, CA</span>\r\n  </a>\r\n</span>''", span="41-50", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_2 [label="XmlDocument doc = new XmlDocument()", span="51-51", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_3 [label="doc.LoadXml(xml)", span="52-52", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_4 [label="StringWriter sw = new StringWriter()", span="54-54", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_61 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="162-162", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_67 [label="Assert.AreEqual(expected, jsonText)", span="174-174", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_65 [label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="170-170", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_66 [label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_68 [label="Console.WriteLine(''DocumentFragmentSerialize'')", span="176-176", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_64 [label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_69 [label="Console.WriteLine(jsonText)", span="177-177", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_63 [label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_70 [label="Console.WriteLine()", span="178-178", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_62 [label="XmlDocument doc = new XmlDocument()", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_71 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="162-162", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_146 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="372-372", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_151 [label="Assert.AreEqual(@''{''''root'''':{''''person'''':{''''@id'''':''''1'''',''''name'''':''''Alan'''',''''url'''':''''http://www.google.com'''',''''role'''':[''''Admin'''']}}}'', arrayJsonText)", span="386-386", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_156 [label="Assert.AreEqual(@''{''''root'''':{''''person'''':{''''@id'''':''''1'''',''''name'''':''''Alan'''',''''url'''':''''http://www.google.com'''',''''role'''':[''''Admin1'''',''''Admin2'''']}}}'', arrayJsonText)", span="401-401", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_161 [label="Assert.AreEqual(@''{''''root'''':{''''person'''':{''''@id'''':''''1'''',''''name'''':''''Alan'''',''''url'''':''''http://www.google.com'''',''''role'''':''''Admin1''''}}}'', arrayJsonText)", span="415-415", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_150 [label="string arrayJsonText = JsonConvert.SerializeXmlNode(arrayDoc)", span="385-385", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_152 [label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="388-395", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_155 [label="arrayJsonText = JsonConvert.SerializeXmlNode(arrayDoc)", span="400-400", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_157 [label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="403-409", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_160 [label="arrayJsonText = JsonConvert.SerializeXmlNode(arrayDoc)", span="414-414", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_148 [label="XmlDocument arrayDoc = new XmlDocument()", span="382-382", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_149 [label="arrayDoc.LoadXml(arrayXml)", span="383-383", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_153 [label="arrayDoc = new XmlDocument()", span="397-397", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_154 [label="arrayDoc.LoadXml(arrayXml)", span="398-398", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_158 [label="arrayDoc = new XmlDocument()", span="411-411", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_159 [label="arrayDoc.LoadXml(arrayXml)", span="412-412", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_147 [label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="374-380", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_162 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="372-372", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_60 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild", file="XmlNodeConverterTest.cs"];
m3_108 [label="Entry Unk.WriteTo", span="", cluster="Unk.WriteTo", file="XmlNodeConverterTest.cs"];
m3_5 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_55 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="XmlNodeConverterTest.cs"];
m3_25 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="XmlNodeConverterTest.cs"];
m3_12 [label="Assert.AreEqual(expected, jsonText)", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_10 [label="string jsonText = sw.ToString()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_11 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': [\r\n        {\r\n          ''''@class'''': ''''summary'''',\r\n          ''''#text'''': ''''Web 2.0 Conference'''',\r\n          ''''#cdata-section'''': ''''my escaped text''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''location'''',\r\n          ''''#text'''': ''''Argent Hotel, San Francisco, CA''''\r\n        }\r\n      ],\r\n      ''''abbr'''': [\r\n        {\r\n          ''''@class'''': ''''dtstart'''',\r\n          ''''@title'''': ''''2005-10-05'''',\r\n          ''''#text'''': ''''October 5''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''dtend'''',\r\n          ''''@title'''': ''''2005-10-08'''',\r\n          ''''#text'''': ''''7''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="67-103", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_13 [label="Console.WriteLine(''DocumentSerializeIndented'')", span="107-107", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_9 [label="jsonSerializer.Serialize(jsonWriter, doc)", span="63-63", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_14 [label="Console.WriteLine(jsonText)", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_15 [label="Console.WriteLine()", span="109-109", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_16 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="39-39", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_17 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="XmlNodeConverterTest.cs"];
m3_183 [label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span="", file="XmlNodeConverterTest.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n9  [key=2, style=dotted];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label=v1];
n1 -> n6  [key=1, style=dashed, color=darkseagreen4, label=v1];
n2 -> n3  [key=0, style=solid];
n2 -> n10  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n11  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n12  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n13  [key=2, style=dotted];
n8 -> n0  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_11  [key=2, style=dotted];
m0_1 -> m0_12  [key=2, style=dotted];
m0_1 -> m0_13  [key=2, style=dotted];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=flight];
m0_1 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=flight];
m0_1 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=flight];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_14  [key=2, style=dotted];
m0_2 -> m0_15  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_14  [key=2, style=dotted];
m0_8 -> m0_15  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> n13  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> n13  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> n13  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> n13  [key=2, style=dotted];
m0_10 -> m0_0  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=manager];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_9  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> n13  [key=2, style=dotted];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m2_7 -> m2_0  [key=0, style=bold, color=blue];
m2_324 -> m2_325  [key=0, style=solid];
m2_325 -> m2_140  [key=2, style=dotted];
m2_325 -> m2_141  [key=2, style=dotted];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_326 -> m2_324  [key=0, style=bold, color=blue];
m2_0 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_10  [key=2, style=dotted];
m2_5 -> n13  [key=2, style=dotted];
m2_5 -> m2_5  [key=3, color=darkorchid, style=bold, label="Field variable string WhitespaceName"];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=node];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=customer];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_9  [key=2, style=dotted];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_11  [key=2, style=dotted];
m2_4 -> m2_4  [key=3, color=darkorchid, style=bold, label="Field variable string CommentName"];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_7  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> n13  [key=2, style=dotted];
m2_35 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_35 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_35 -> m2_10  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m2_35 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_35 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_35 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_35 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_12  [key=2, style=dotted];
m2_40 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m2_40 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m2_58 -> m2_47  [key=0, style=solid];
m2_58 -> m2_10  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_10  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=childNode];
m2_41 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_45  [key=0, style=solid];
m2_42 -> m2_69  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_71  [key=2, style=dotted];
m2_48 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m2_48 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m2_48 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m2_48 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m2_48 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m2_48 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_67  [key=0, style=solid];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_66  [key=0, style=solid];
m2_63 -> m2_38  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_62 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_65 -> m2_63  [key=0, style=solid];
m2_65 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_47  [key=0, style=solid];
m2_38 -> m2_38  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_37 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_72  [key=2, style=dotted];
m2_36 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m2_36 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m2_36 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m2_36 -> m2_68  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=nodes];
m2_43 -> m2_70  [key=2, style=dotted];
m2_60 -> m2_74  [key=2, style=dotted];
m2_60 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m2_60 -> m2_61  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_75  [key=2, style=dotted];
m2_66 -> m2_47  [key=0, style=solid];
m2_66 -> m2_76  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_56  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m2_56 -> m2_57  [key=0, style=solid];
m2_54 -> m2_57  [key=0, style=solid];
m2_54 -> m2_73  [key=2, style=dotted];
m2_55 -> m2_57  [key=0, style=solid];
m2_46 -> m2_38  [key=0, style=solid];
m2_46 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_52 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=jsonArrayAttribute];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [key=0, style=solid];
m2_67 -> m2_35  [key=0, style=bold, color=blue];
m2_267 -> m2_5  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNamespaceAttribute"];
m2_267 -> m2_64  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNamespaceAttribute"];
m2_267 -> m2_217  [key=3, color=darkorchid, style=bold, label="Parameter variable string attributeName"];
m2_267 -> m2_223  [key=3, color=darkorchid, style=bold, label="Parameter variable string prefix"];
m2_267 -> m2_300  [key=0, style=solid];
m2_267 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_267 -> m2_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_267 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_307  [key=0, style=solid];
m2_300 -> m2_310  [key=2, style=dotted];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_304  [key=0, style=solid];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_307  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_311  [key=2, style=dotted];
m2_307 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m2_307 -> m2_308  [key=0, style=solid];
m2_303 -> m2_309  [key=0, style=solid];
m2_306 -> m2_309  [key=0, style=solid];
m2_308 -> m2_309  [key=0, style=solid];
m2_302 -> m2_303  [key=0, style=solid];
m2_309 -> m2_267  [key=0, style=bold, color=blue];
m2_172 -> m2_173  [key=0, style=solid, color=green];
m2_172 -> m2_213  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_214  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_215  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_284  [key=3, color=green, style=bold, label="Parameter variable string propertyName"];
m2_172 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_182  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_172 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_172 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m2_172 -> m2_200  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_172 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_172 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_172 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m2_172 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_172 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m2_172 -> m2_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m2_172 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_172 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m2_172 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m2_172 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m2_172 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_172 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m2_172 -> m2_279  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode currentNode"];
m2_173 -> m2_174  [key=0, style=solid, color=green];
m2_173 -> m2_176  [key=0, style=solid, color=green];
m2_173 -> m2_178  [key=0, style=solid, color=green];
m2_173 -> m2_180  [key=0, style=solid, color=green];
m2_173 -> m2_182  [key=0, style=solid, color=green];
m2_174 -> m2_175  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_180 -> m2_181  [key=0, style=solid];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_203  [key=0, style=solid];
m2_182 -> m2_260  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid, color=green];
m2_213 -> m2_230  [key=0, style=solid, color=green];
m2_207 -> m2_213  [key=0, style=solid, color=green];
m2_207 -> m2_208  [key=0, style=solid];
m2_214 -> m2_215  [key=0, style=solid, color=green];
m2_214 -> m2_230  [key=0, style=solid, color=green];
m2_214 -> m2_170  [key=2, style=dotted, color=green];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_265  [key=2, style=dotted];
m2_230 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_230 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_230 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_230 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_230 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_230 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_230 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_225 -> m2_214  [key=0, style=solid, color=green];
m2_225 -> m2_268  [key=2, style=dotted];
m2_203 -> m2_214  [key=1, style=dashed, color=green, label=finishedAttributes];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_64  [key=3, color=darkorchid, style=bold, label="Local variable bool finishedAttributes"];
m2_204 -> m2_214  [key=1, style=dashed, color=green, label=finishedElement];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label=finishedElement];
m2_204 -> m2_64  [key=3, color=darkorchid, style=bold, label="Local variable bool finishedElement"];
m2_226 -> m2_214  [key=0, style=solid, color=green];
m2_224 -> m2_214  [key=0, style=solid, color=green];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_267  [key=2, style=dotted];
m2_228 -> m2_214  [key=0, style=solid, color=green];
m2_228 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label=finishedElement];
m2_215 -> m2_216  [key=0, style=solid, color=green];
m2_215 -> m2_227  [key=0, style=solid, color=green];
m2_215 -> m2_229  [key=0, style=solid, color=green];
m2_216 -> m2_217  [key=0, style=solid];
m2_227 -> m2_228  [key=0, style=solid];
m2_229 -> m2_253  [key=0, style=solid];
m2_229 -> m2_167  [key=2, style=dotted];
m2_187 -> m2_170  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_199  [key=0, style=solid];
m2_190 -> m2_170  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_193 -> m2_170  [key=2, style=dotted];
m2_193 -> m2_194  [key=0, style=solid];
m2_196 -> m2_170  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_210 -> m2_170  [key=2, style=dotted];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_212  [key=0, style=solid];
m2_220 -> m2_170  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_205 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label=elementPrefix];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_264  [key=2, style=dotted];
m2_205 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label=elementPrefix];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_265  [key=2, style=dotted];
m2_208 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m2_211 -> m2_210  [key=0, style=solid];
m2_211 -> m2_266  [key=2, style=dotted];
m2_233 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_264  [key=2, style=dotted];
m2_251 -> m2_171  [key=2, style=dotted];
m2_251 -> m2_252  [key=0, style=solid];
m2_175 -> m2_254  [key=2, style=dotted];
m2_175 -> m2_253  [key=0, style=solid];
m2_175 -> m2_255  [key=2, style=dotted];
m2_175 -> m2_256  [key=2, style=dotted];
m2_177 -> m2_254  [key=2, style=dotted];
m2_177 -> m2_253  [key=0, style=solid];
m2_177 -> m2_257  [key=2, style=dotted];
m2_177 -> m2_256  [key=2, style=dotted];
m2_179 -> m2_254  [key=2, style=dotted];
m2_179 -> m2_253  [key=0, style=solid];
m2_179 -> m2_258  [key=2, style=dotted];
m2_179 -> m2_256  [key=2, style=dotted];
m2_181 -> m2_254  [key=2, style=dotted];
m2_181 -> m2_253  [key=0, style=solid];
m2_181 -> m2_259  [key=2, style=dotted];
m2_181 -> m2_256  [key=2, style=dotted];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_201  [key=0, style=solid];
m2_188 -> m2_254  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_192  [key=0, style=solid];
m2_188 -> m2_195  [key=0, style=solid];
m2_188 -> m2_198  [key=0, style=solid];
m2_191 -> m2_254  [key=2, style=dotted];
m2_191 -> m2_187  [key=0, style=solid];
m2_191 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=version];
m2_194 -> m2_254  [key=2, style=dotted];
m2_194 -> m2_187  [key=0, style=solid];
m2_194 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m2_197 -> m2_254  [key=2, style=dotted];
m2_197 -> m2_187  [key=0, style=solid];
m2_197 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m2_198 -> m2_167  [key=2, style=dotted];
m2_198 -> m2_253  [key=0, style=solid];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_261  [key=2, style=dotted];
m2_200 -> m2_253  [key=0, style=solid];
m2_200 -> m2_256  [key=2, style=dotted];
m2_201 -> m2_254  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_262  [key=2, style=dotted];
m2_201 -> m2_263  [key=2, style=dotted];
m2_202 -> m2_253  [key=0, style=solid];
m2_202 -> m2_256  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_256  [key=2, style=dotted];
m2_217 -> m2_254  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m2_221 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
m2_221 -> m2_254  [key=2, style=dotted];
m2_221 -> m2_222  [key=0, style=solid];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_256  [key=2, style=dotted];
m2_234 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_260  [key=2, style=dotted];
m2_234 -> m2_269  [key=2, style=dotted];
m2_234 -> m2_270  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_239  [key=0, style=solid];
m2_238 -> m2_254  [key=2, style=dotted];
m2_238 -> m2_253  [key=0, style=solid];
m2_238 -> m2_255  [key=2, style=dotted];
m2_238 -> m2_256  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_241  [key=0, style=solid];
m2_240 -> m2_253  [key=0, style=solid];
m2_240 -> m2_272  [key=2, style=dotted];
m2_240 -> m2_255  [key=2, style=dotted];
m2_240 -> m2_256  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_243  [key=0, style=solid];
m2_242 -> m2_253  [key=0, style=solid];
m2_242 -> m2_272  [key=2, style=dotted];
m2_242 -> m2_255  [key=2, style=dotted];
m2_242 -> m2_256  [key=2, style=dotted];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_245  [key=0, style=solid];
m2_244 -> m2_253  [key=0, style=solid];
m2_244 -> m2_272  [key=2, style=dotted];
m2_244 -> m2_255  [key=2, style=dotted];
m2_244 -> m2_256  [key=2, style=dotted];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_248  [key=0, style=solid];
m2_246 -> m2_247  [key=0, style=solid];
m2_247 -> m2_253  [key=0, style=solid];
m2_247 -> m2_273  [key=2, style=dotted];
m2_247 -> m2_272  [key=2, style=dotted];
m2_247 -> m2_255  [key=2, style=dotted];
m2_247 -> m2_256  [key=2, style=dotted];
m2_248 -> m2_253  [key=0, style=solid];
m2_248 -> m2_249  [key=0, style=solid];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_274  [key=2, style=dotted];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_275  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_68  [key=2, style=dotted];
m2_206 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m2_206 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m2_236 -> m2_232  [key=0, style=solid];
m2_236 -> m2_271  [key=2, style=dotted];
m2_249 -> m2_253  [key=0, style=solid];
m2_249 -> m2_250  [key=0, style=solid];
m2_218 -> m2_226  [key=0, style=solid];
m2_218 -> m2_219  [key=0, style=solid];
m2_219 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m2_219 -> m2_262  [key=2, style=dotted];
m2_219 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m2_223 -> m2_224  [key=0, style=solid];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m2_186 -> m2_184  [key=3, color=darkorchid, style=bold, label="Local variable string standalone"];
m2_189 -> m2_190  [key=0, style=solid];
m2_192 -> m2_193  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_212 -> m2_253  [key=0, style=solid];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_237  [key=0, style=solid];
m2_184 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=version];
m2_184 -> m2_184  [key=3, color=darkorchid, style=bold, label="Local variable string version"];
m2_184 -> m2_185  [key=0, style=solid];
m2_185 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_184  [key=3, color=darkorchid, style=bold, label="Local variable string encoding"];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_71  [key=2, style=dotted];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m2_253 -> m2_172  [key=0, style=bold, color=blue];
m2_264 -> m2_172  [key=3, color=darkorchid, style=bold, label="Parameter variable string qualifiedName"];
m2_264 -> m2_312  [key=0, style=solid];
m2_264 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_264 -> m2_315  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_317  [key=2, style=dotted];
m2_312 -> m2_315  [key=1, style=dashed, color=darkseagreen4, label=colonPosition];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_315  [key=0, style=solid];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_311  [key=2, style=dotted];
m2_314 -> m2_316  [key=0, style=solid];
m2_316 -> m2_264  [key=0, style=bold, color=blue];
m2_12 -> m2_10  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m2_12 -> m2_39  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_12 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_12 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_12 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [key=0, style=solid];
m2_13 -> m2_18  [key=0, style=solid];
m2_13 -> m2_20  [key=0, style=solid];
m2_13 -> m2_22  [key=0, style=solid];
m2_13 -> m2_24  [key=0, style=solid];
m2_13 -> m2_26  [key=0, style=solid];
m2_13 -> m2_28  [key=0, style=solid];
m2_13 -> m2_30  [key=0, style=solid];
m2_13 -> m2_32  [key=0, style=solid];
m2_15 -> m2_33  [key=0, style=solid];
m2_21 -> m2_33  [key=0, style=solid];
m2_23 -> m2_33  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [key=2, style=dotted];
m2_17 -> m2_33  [key=0, style=solid];
m2_19 -> m2_33  [key=0, style=solid];
m2_25 -> m2_33  [key=0, style=solid];
m2_27 -> m2_33  [key=0, style=solid];
m2_29 -> m2_33  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_33 -> m2_12  [key=0, style=bold, color=blue];
m2_279 -> m2_282  [key=1, style=dashed, color=green, label=XmlDocument];
m2_279 -> m2_284  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_285  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_286  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_279 -> m2_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_282 -> m2_283  [key=0, style=solid, color=green];
m2_282 -> m2_284  [key=0, style=solid, color=green];
m2_281 -> m2_282  [key=0, style=solid, color=green];
m2_283 -> m2_299  [key=0, style=solid, color=green];
m2_283 -> m2_167  [key=2, style=dotted, color=green];
m2_284 -> m2_285  [key=0, style=solid, color=green];
m2_284 -> m2_254  [key=2, style=dotted, color=green];
m2_284 -> m2_288  [key=1, style=dashed, color=green, label=propertyName];
m2_284 -> m2_289  [key=1, style=dashed, color=green, label=propertyName];
m2_285 -> m2_286  [key=0, style=solid, color=green];
m2_285 -> m2_170  [key=2, style=dotted, color=green];
m2_288 -> m2_172  [key=2, style=dotted];
m2_288 -> m2_287  [key=0, style=solid];
m2_289 -> m2_172  [key=2, style=dotted];
m2_289 -> m2_298  [key=0, style=solid];
m2_286 -> m2_287  [key=0, style=solid, color=green];
m2_286 -> m2_289  [key=0, style=solid, color=green];
m2_287 -> m2_170  [key=2, style=dotted];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_298  [key=0, style=solid];
m2_292 -> m2_170  [key=2, style=dotted];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_298  [key=0, style=solid];
m2_298 -> m2_170  [key=2, style=dotted];
m2_298 -> m2_279  [key=0, style=solid];
m2_298 -> m2_299  [key=0, style=solid];
m2_293 -> m2_172  [key=2, style=dotted];
m2_293 -> m2_292  [key=0, style=solid];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_290  [key=0, style=solid];
m2_280 -> m2_294  [key=0, style=solid];
m2_280 -> m2_297  [key=0, style=solid];
m2_291 -> m2_254  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m2_297 -> m2_299  [key=0, style=solid];
m2_297 -> m2_167  [key=2, style=dotted];
m2_296 -> m2_299  [key=0, style=solid];
m2_290 -> m2_291  [key=0, style=solid];
m2_294 -> m2_295  [key=0, style=solid];
m2_295 -> m2_296  [key=0, style=solid];
m2_299 -> m2_279  [key=0, style=bold, color=blue];
m2_10 -> m2_5  [key=3, color=darkorchid, style=bold, label="Parameter variable bool writePropertyName"];
m2_10 -> m2_64  [key=3, color=darkorchid, style=bold, label="Parameter variable bool writePropertyName"];
m2_10 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_0  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonWriter writer"];
m2_10 -> m2_1  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m2_10 -> m2_77  [key=0, style=solid];
m2_10 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_10 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_10 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_10 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_10 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m2_10 -> m2_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonWriter writer"];
m2_80 -> m2_133  [key=0, style=solid];
m2_80 -> m2_35  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=0, style=solid];
m2_84 -> m2_135  [key=2, style=dotted];
m2_84 -> m2_136  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_146  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_146  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_35  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_12  [key=2, style=dotted];
m2_116 -> m2_74  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_12  [key=2, style=dotted];
m2_120 -> m2_74  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_82 -> m2_84  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_134  [key=2, style=dotted];
m2_85 -> m2_133  [key=0, style=solid];
m2_85 -> m2_137  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_88  [key=0, style=solid];
m2_86 -> m2_138  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_96  [key=0, style=solid];
m2_93 -> m2_38  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_92 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_95 -> m2_93  [key=0, style=solid];
m2_95 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_102  [key=0, style=solid];
m2_99 -> m2_38  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_98 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_101 -> m2_99  [key=0, style=solid];
m2_101 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_103 -> m2_133  [key=0, style=solid];
m2_103 -> m2_11  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=0, style=solid];
m2_117 -> m2_133  [key=0, style=solid];
m2_117 -> m2_137  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m2_119 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m2_119 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m2_119 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m2_119 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m2_119 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_9  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_81  [key=0, style=solid];
m2_77 -> m2_104  [key=0, style=solid];
m2_77 -> m2_107  [key=0, style=solid];
m2_77 -> m2_118  [key=0, style=solid];
m2_77 -> m2_132  [key=0, style=solid];
m2_87 -> m2_133  [key=0, style=solid];
m2_87 -> m2_139  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_97  [key=0, style=solid];
m2_88 -> m2_140  [key=2, style=dotted];
m2_88 -> m2_141  [key=2, style=dotted];
m2_88 -> m2_142  [key=2, style=dotted];
m2_88 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_140  [key=2, style=dotted];
m2_89 -> m2_141  [key=2, style=dotted];
m2_89 -> m2_143  [key=2, style=dotted];
m2_89 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_145  [key=2, style=dotted];
m2_96 -> m2_133  [key=0, style=solid];
m2_96 -> m2_147  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_9  [key=2, style=dotted];
m2_105 -> m2_133  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_106 -> m2_133  [key=0, style=solid];
m2_106 -> m2_148  [key=2, style=dotted];
m2_113 -> m2_133  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_114 -> m2_133  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_123 -> m2_74  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_137  [key=2, style=dotted];
m2_126 -> m2_74  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_137  [key=2, style=dotted];
m2_129 -> m2_74  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_137  [key=2, style=dotted];
m2_131 -> m2_133  [key=0, style=solid];
m2_131 -> m2_11  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_34  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_138  [key=2, style=dotted];
m2_122 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_138  [key=2, style=dotted];
m2_125 -> m2_128  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_131  [key=0, style=solid];
m2_128 -> m2_138  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_144  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_133 -> m2_10  [key=0, style=bold, color=blue];
m2_327 -> m2_328  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_153 -> m2_154  [key=0, style=solid];
m2_151 -> m2_149  [key=0, style=bold, color=blue];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_152  [key=2, style=dotted];
m2_155 -> m2_153  [key=0, style=bold, color=blue];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_152  [key=2, style=dotted];
m2_321 -> m2_322  [key=0, style=solid];
m2_323 -> m2_321  [key=0, style=bold, color=blue];
m2_322 -> m2_323  [key=0, style=solid];
m2_328 -> m2_329  [key=0, style=solid];
m2_329 -> m2_327  [key=0, style=bold, color=blue];
m2_265 -> m2_172  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
m2_265 -> m2_205  [key=3, color=darkorchid, style=bold, label="Parameter variable string elementPrefix"];
m2_265 -> m2_276  [key=0, style=solid];
m2_276 -> m2_260  [key=2, style=dotted];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_269  [key=2, style=dotted];
m2_276 -> m2_278  [key=2, style=dotted];
m2_277 -> m2_265  [key=0, style=bold, color=blue];
m2_156 -> m2_163  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m2_156 -> m2_164  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_156 -> m2_159  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m2_163 -> m2_164  [key=0, style=solid, color=green];
m2_163 -> m2_170  [key=2, style=dotted, color=green];
m2_161 -> m2_163  [key=0, style=solid, color=green];
m2_161 -> m2_162  [key=0, style=solid];
m2_164 -> m2_165  [key=0, style=solid, color=green];
m2_164 -> m2_171  [key=2, style=dotted, color=green];
m2_159 -> m2_164  [key=1, style=dashed, color=green, label=document];
m2_159 -> m2_165  [key=1, style=dashed, color=green, label=document];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_168  [key=2, style=dotted];
m2_160 -> m2_164  [key=1, style=dashed, color=green, label=manager];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_169  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid, color=green];
m2_157 -> m2_159  [key=0, style=solid];
m2_157 -> m2_158  [key=0, style=solid];
m2_162 -> m2_166  [key=0, style=solid];
m2_162 -> m2_167  [key=2, style=dotted];
m2_158 -> m2_166  [key=0, style=solid];
m2_158 -> m2_167  [key=2, style=dotted];
m2_166 -> m2_156  [key=0, style=bold, color=blue];
m2_318 -> m2_319  [key=0, style=solid];
m2_319 -> m2_140  [key=2, style=dotted];
m2_319 -> m2_141  [key=2, style=dotted];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_320 -> m2_318  [key=0, style=bold, color=blue];
m2_334 -> m2_164  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m2_334 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_22  [key=2, style=dotted];
m3_8 -> m3_23  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_79 -> m3_26  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_75 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_17  [key=2, style=dotted];
m3_75 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_85  [key=2, style=dotted];
m3_78 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label=deserializedDoc];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> n13  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_74  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_74 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_18  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_55  [key=2, style=dotted];
m3_77 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_86  [key=2, style=dotted];
m3_81 -> n13  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_83 -> m3_28  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_73  [key=0, style=bold, color=blue];
m3_173 -> m3_174  [key=0, style=solid, color=green];
m3_174 -> m3_174  [key=3, color=green, style=bold, label="Local variable string json"];
m3_174 -> m3_175  [key=0, style=solid, color=green];
m3_175 -> m3_176  [key=0, style=solid, color=green];
m3_175 -> m3_172  [key=2, style=dotted, color=green];
m3_176 -> m3_177  [key=0, style=solid, color=green];
m3_176 -> m3_26  [key=2, style=dotted, color=green];
m3_177 -> m3_173  [key=0, style=bold, color=blue];
m3_7 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_21  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_95 -> m3_26  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_90 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_90 -> m3_90  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_90 -> m3_91  [key=0, style=solid];
m3_91 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label=formattedXml];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_97  [key=2, style=dotted];
m3_91 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=formattedXml];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_28  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_89 -> m3_85  [key=2, style=dotted];
m3_92 -> n13  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> n13  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_88  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m3_96 -> m3_87  [key=0, style=bold, color=blue];
m3_132 -> m3_133  [key=0, style=solid];
m3_133 -> m3_85  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_134 -> m3_132  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_167 -> m3_168  [key=0, style=solid, color=green];
m3_168 -> m3_168  [key=3, color=green, style=bold, label="Local variable string strJSON"];
m3_168 -> m3_169  [key=0, style=solid, color=green];
m3_169 -> m3_170  [key=0, style=solid, color=green];
m3_169 -> m3_172  [key=2, style=dotted, color=green];
m3_170 -> m3_171  [key=0, style=solid, color=green];
m3_170 -> m3_26  [key=2, style=dotted, color=green];
m3_171 -> m3_167  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_37 -> m3_26  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_41 -> m3_26  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_45 -> m3_26  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_52 -> m3_26  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_35 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_55  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> n13  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_56  [key=2, style=dotted];
m3_38 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=instruction];
m3_39 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_55  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> n13  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_57  [key=2, style=dotted];
m3_42 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label=cDataSection];
m3_43 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_55  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> n13  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_58  [key=2, style=dotted];
m3_46 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_46 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_46 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_50 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_55  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> n13  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m3_34 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m3_30 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_30 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_30 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_17  [key=2, style=dotted];
m3_30 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_60  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_60  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_59  [key=2, style=dotted];
m3_32 -> n13  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_54  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_53 -> m3_29  [key=0, style=bold, color=blue];
m3_178 -> m3_179  [key=0, style=solid, color=green];
m3_179 -> m3_179  [key=3, color=green, style=bold, label="Local variable string json"];
m3_179 -> m3_180  [key=0, style=solid, color=green];
m3_180 -> m3_181  [key=0, style=solid, color=green];
m3_180 -> m3_172  [key=2, style=dotted, color=green];
m3_181 -> m3_182  [key=0, style=solid, color=green];
m3_181 -> m3_26  [key=2, style=dotted, color=green];
m3_182 -> m3_178  [key=0, style=bold, color=blue];
m3_117 -> m3_118  [key=0, style=solid];
m3_124 -> m3_26  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_119 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_17  [key=2, style=dotted];
m3_119 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_85  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_118  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_118 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_18  [key=2, style=dotted];
m3_121 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_121 -> m3_55  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> n13  [key=2, style=dotted];
m3_125 -> m3_117  [key=0, style=bold, color=blue];
m3_163 -> m3_164  [key=0, style=solid];
m3_165 -> m3_85  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_164  [key=3, color=darkorchid, style=bold, label="Local variable string strJSON"];
m3_166 -> m3_163  [key=0, style=bold, color=blue];
m3_126 -> m3_127  [key=0, style=solid];
m3_130 -> m3_26  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_128 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_85  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_129  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_127  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m3_131 -> m3_126  [key=0, style=bold, color=blue];
m3_109 -> m3_110  [key=0, style=solid];
m3_115 -> m3_26  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_111 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_17  [key=2, style=dotted];
m3_111 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_85  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_110  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_110 -> m3_112  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_18  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_55  [key=2, style=dotted];
m3_116 -> m3_109  [key=0, style=bold, color=blue];
m3_138 -> m3_139  [key=0, style=solid];
m3_142 -> m3_26  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_144 -> m3_26  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_140 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_85  [key=2, style=dotted];
m3_140 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_141  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_55  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_139  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m3_145 -> m3_138  [key=0, style=bold, color=blue];
m3_135 -> m3_136  [key=0, style=solid];
m3_136 -> m3_85  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_135  [key=0, style=bold, color=blue];
m3_98 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m3_98 -> m3_99  [key=0, style=solid];
m3_104 -> m3_25  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_101 -> m3_19  [key=2, style=dotted];
m3_101 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_101 -> m3_102  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_108  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_100 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_107  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_106  [key=2, style=dotted];
m3_105 -> m3_98  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_1 -> m3_1  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_2 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_2 -> m3_17  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_3 -> m3_1  [key=3, color=darkorchid, style=bold, label="Property variable byte[] ByteArray"];
m3_3 -> m3_18  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_19  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_67 -> m3_26  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_65 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_55  [key=2, style=dotted];
m3_65 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_66  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> n13  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=fragement];
m3_69 -> n13  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_72  [key=2, style=dotted];
m3_70 -> m3_28  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_62 -> m3_17  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_71 -> m3_61  [key=0, style=bold, color=blue];
m3_146 -> m3_147  [key=0, style=solid];
m3_151 -> m3_26  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_156 -> m3_26  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_161 -> m3_26  [key=2, style=dotted];
m3_161 -> m3_162  [key=0, style=solid];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_55  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_55  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_55  [key=2, style=dotted];
m3_148 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m3_148 -> m3_17  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_18  [key=2, style=dotted];
m3_153 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m3_153 -> m3_17  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_18  [key=2, style=dotted];
m3_158 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m3_158 -> m3_17  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_18  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m3_147 -> m3_147  [key=3, color=darkorchid, style=bold, label="Local variable string arrayXml"];
m3_162 -> m3_146  [key=0, style=bold, color=blue];
m3_5 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_20  [key=2, style=dotted];
m3_12 -> m3_26  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_10 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_25  [key=2, style=dotted];
m3_10 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_11  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> n13  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_24  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> n13  [key=2, style=dotted];
m3_15 -> m3_28  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_0  [key=0, style=bold, color=blue];
m3_183 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
}
