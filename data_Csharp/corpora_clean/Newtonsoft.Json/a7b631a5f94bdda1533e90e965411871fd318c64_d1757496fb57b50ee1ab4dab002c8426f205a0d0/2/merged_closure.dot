digraph  {
n0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", span="10-10"];
n1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="JValue v1 = new JValue(true)", span="13-13"];
n2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="bool b = (bool)v1.ToObject(typeof(bool))", span="15-15"];
n9 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="118-118"];
n4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="int i = (int)v1.ToObject(typeof(int))", span="20-20"];
n6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="string s = (string)v1.ToObject(typeof(string))", span="25-25"];
n3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="Console.WriteLine(b)", span="17-17"];
n10 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1428-1428"];
n11 [cluster="System.Console.WriteLine(bool)", label="Entry System.Console.WriteLine(bool)", span="0-0"];
n5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="Console.WriteLine(i)", span="22-22"];
n12 [cluster="System.Console.WriteLine(int)", label="Entry System.Console.WriteLine(int)", span="0-0"];
n7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="Console.WriteLine(s)", span="27-27"];
n8 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.ToObjectType.Example()", span="10-10"];
n13 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_11 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Flight.Flight()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Flight.Flight()", span="10-10"];
m0_15 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m0_12 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvert.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", span="20-20"];
m0_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="Flight flight = new Flight\r\n        {\r\n          Destination = ''Dubai'',\r\n          DepartureDate = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Unspecified),\r\n          DepartureDateUtc = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Utc),\r\n          DepartureDateLocal = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Local),\r\n          Duration = TimeSpan.FromHours(5.5)\r\n        }", span="23-30"];
m0_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="string jsonWithRoundtripTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind\r\n      })", span="32-35"];
m0_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="string jsonWithLocalTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n      })", span="46-49"];
m0_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="string jsonWithUtcTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n      })", span="60-63"];
m0_8 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="string jsonWithUnspecifiedTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateTimeZoneHandling = DateTimeZoneHandling.Unspecified\r\n      })", span="74-77"];
m0_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="Console.WriteLine(jsonWithRoundtripTimeZone)", span="37-37"];
m0_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="Console.WriteLine(jsonWithLocalTimeZone)", span="51-51"];
m0_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="Console.WriteLine(jsonWithUtcTimeZone)", span="65-65"];
m0_9 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="Console.WriteLine(jsonWithUnspecifiedTimeZone)", span="79-79"];
m0_10 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonConvert.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDateTimeZoneHandling.Example()", span="20-20"];
m0_13 [cluster="System.TimeSpan.FromHours(double)", file="JsonConvert.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m0_14 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245"];
m1_10 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710"];
m1_9 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Employee.Employee()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Employee.Employee()", span="18-18"];
m1_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", span="27-27"];
m1_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs", label="Employee manager = new Employee\r\n      {\r\n        Name = ''George-Michael''\r\n      }", span="30-33"];
m1_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs", label="Employee worker = new Employee\r\n      {\r\n        Name = ''Maeby'',\r\n        Manager = manager\r\n      }", span="34-38"];
m1_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs", label="Business business = new Business\r\n        {\r\n          Name = ''Acme Ltd.'',\r\n          Employees = new List<Employee>\r\n            {\r\n              manager,\r\n              worker\r\n            }\r\n        }", span="40-48"];
m1_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(business, Formatting.Indented)", span="50-50"];
m1_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="52-52"];
m1_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Example()", span="27-27"];
m1_8 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Business.Business()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyItemLevelSetting.Business.Business()", span="10-10"];
m2_34 [cluster="JsonSerializationException.cstr", file="XmlNodeConverter.cs", label="Entry JsonSerializationException.cstr", span=""];
m2_7 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="54-54"];
m2_324 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", span="554-554"];
m2_325 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", file="XmlNodeConverter.cs", label="return c.OfType<XmlNode>().Where(n => n.NamespaceURI != JsonNamespaceUri);", span="556-556"];
m2_326 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueNodes(XmlNodeList)", span="554-554"];
m2_75 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="255-255"];
m2_8 [cluster="System.ArgumentException.ArgumentException(string, string)", file="XmlNodeConverter.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m2_278 [cluster="Unk.CreateElement", file="XmlNodeConverter.cs", label="Entry Unk.CreateElement", span=""];
m2_141 [cluster="Unk.Where", file="XmlNodeConverter.cs", label="Entry Unk.Where", span=""];
m2_136 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m2_145 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="273-273"];
m2_310 [cluster="string.StartsWith(string, System.StringComparison)", file="XmlNodeConverter.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m2_134 [cluster="Unk.WritePropertyName", file="XmlNodeConverter.cs", label="Entry Unk.WritePropertyName", span=""];
m2_144 [cluster="Unk.Substring", file="XmlNodeConverter.cs", label="Entry Unk.Substring", span=""];
m2_258 [cluster="Unk.CreateWhitespace", file="XmlNodeConverter.cs", label="Entry Unk.CreateWhitespace", span=""];
m2_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", span="24-24"];
m2_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs", label="Console.WriteLine(jsonIgnoreDefaultValues)", span="43-43"];
m2_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs", label="Customer customer = new Customer()", span="27-27"];
m2_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs", label="string jsonIgnoreDefaultValues = JsonConvert.SerializeObject(customer, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DefaultValueHandling = DefaultValueHandling.Ignore\r\n        })", span="38-41"];
m2_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", span="24-24"];
m2_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs", label="string jsonIncludeDefaultValues = JsonConvert.SerializeObject(customer, Formatting.Indented)", span="29-29"];
m2_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DefaultValueAttributeIgnore.Example()", file="XmlNodeConverter.cs", label="Console.WriteLine(jsonIncludeDefaultValues)", span="31-31"];
m2_135 [cluster="Unk.ValueAttributes", file="XmlNodeConverter.cs", label="Entry Unk.ValueAttributes", span=""];
m2_35 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", span="93-93"];
m2_40 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="string nodeName = GetPropertyName(childNode)", span="101-101"];
m2_58 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[0], true)", span="136-136"];
m2_64 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[i], false)", span="146-146"];
m2_39 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="XmlNode childNode = node.ChildNodes[i]", span="100-100"];
m2_41 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="List<XmlNode> nodes", span="103-103"];
m2_42 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="104-104"];
m2_44 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="nodesGroupedByName.Add(nodeName, nodes)", span="107-107"];
m2_48 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="List<XmlNode> groupedNodes = nodeNameGroup.Value", span="117-117"];
m2_57 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="!writeArray", span="134-134"];
m2_47 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label=nodesGroupedByName, span="115-115"];
m2_63 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="i < groupedNodes.Count", span="144-144"];
m2_62 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="int i = 0", span="144-144"];
m2_65 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="i++", span="144-144"];
m2_38 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="i < node.ChildNodes.Count", span="98-98"];
m2_37 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="int i = 0", span="98-98"];
m2_45 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="nodes.Add(childNode)", span="110-110"];
m2_36 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="Dictionary<string, List<XmlNode>> nodesGroupedByName = new Dictionary<string, List<XmlNode>>()", span="96-96"];
m2_43 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="nodes = new List<XmlNode>()", span="106-106"];
m2_60 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(nodeNameGroup.Key)", span="141-141"];
m2_61 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="writer.WriteStartArray()", span="142-142"];
m2_66 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="writer.WriteEndArray()", span="149-149"];
m2_49 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="bool writeArray", span="118-118"];
m2_50 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="groupedNodes.Count == 1", span="120-120"];
m2_51 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="XmlNode singleNode = groupedNodes[0]", span="122-122"];
m2_59 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="string elementNames = nodeNameGroup.Key", span="140-140"];
m2_56 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="writeArray = true", span="131-131"];
m2_54 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="writeArray = XmlConvert.ToBoolean(jsonArrayAttribute.Value)", span="125-125"];
m2_55 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="writeArray = false", span="127-127"];
m2_46 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="i++", span="98-98"];
m2_52 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="XmlAttribute jsonArrayAttribute = (singleNode.Attributes != null) ? singleNode.Attributes[''Array'', JsonNamespaceUri] : null", span="123-123"];
m2_53 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="jsonArrayAttribute != null", span="124-124"];
m2_67 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", span="93-93"];
m2_254 [cluster="object.ToString()", file="XmlNodeConverter.cs", label="Entry object.ToString()", span="0-0"];
m2_72 [cluster="System.Collections.Generic.List<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_69 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_260 [cluster="string.IsNullOrEmpty(string)", file="XmlNodeConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_138 [cluster="Unk.IsNullOrEmpty", file="XmlNodeConverter.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m2_261 [cluster="Unk.CreateXmlDeclaration", file="XmlNodeConverter.cs", label="Entry Unk.CreateXmlDeclaration", span=""];
m2_11 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="247-247"];
m2_267 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="520-520"];
m2_300 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="522-522"];
m2_301 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.Length == 5", span="524-524"];
m2_304 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName[5] == ':'", span="529-529"];
m2_305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="531-531"];
m2_307 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = null", span="535-535"];
m2_303 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="527-527"];
m2_306 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="532-532"];
m2_308 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return false;", span="536-536"];
m2_302 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = string.Empty", span="526-526"];
m2_309 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="520-520"];
m2_172 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", span="280-280"];
m2_173 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label=propertyName, prediction=0, span="282-282"];
m2_174 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label=TextName, span="284-284"];
m2_176 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label=CDataName, span="287-287"];
m2_178 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label=WhitespaceName, span="290-290"];
m2_180 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label=SignificantWhitespaceName, span="293-293"];
m2_182 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="298-298"];
m2_213 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.String\r\n              && reader.TokenType != JsonToken.Null\r\n              && reader.TokenType != JsonToken.Boolean\r\n              && reader.TokenType != JsonToken.Integer\r\n              && reader.TokenType != JsonToken.Float\r\n              && reader.TokenType != JsonToken.Date\r\n              && reader.TokenType != JsonToken.StartConstructor", prediction=1, span="358-364"];
m2_207 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.StartArray", span="343-343"];
m2_214 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="!finishedAttributes && !finishedElement && reader.Read()", prediction=1, span="367-367"];
m2_230 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="XmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="404-404"];
m2_225 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="385-385"];
m2_203 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="bool finishedAttributes = false", span="338-338"];
m2_204 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="bool finishedElement = false", span="339-339"];
m2_226 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="390-390"];
m2_224 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="383-383"];
m2_228 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="finishedElement = true", span="394-394"];
m2_215 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="reader.TokenType", prediction=1, span="369-369"];
m2_216 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="371-371"];
m2_227 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="393-393"];
m2_229 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="397-397"];
m2_187 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="305-305"];
m2_190 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="310-310"];
m2_193 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="314-314"];
m2_196 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="318-318"];
m2_210 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="349-349"];
m2_220 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="377-377"];
m2_205 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="string elementPrefix = GetPrefix(propertyName)", span="340-340"];
m2_208 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="XmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="345-345"];
m2_211 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="351-351"];
m2_233 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="string attributePrefix = GetPrefix(nameValue.Key)", span="411-411"];
m2_251 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, element)", span="454-454"];
m2_175 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="285-285"];
m2_177 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="288-288"];
m2_179 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="291-291"];
m2_181 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="294-294"];
m2_183 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="propertyName == DeclarationName", span="300-300"];
m2_188 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.Value.ToString()", span="307-307"];
m2_191 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="version = reader.Value.ToString()", span="311-311"];
m2_194 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="encoding = reader.Value.ToString()", span="315-315"];
m2_197 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="standalone = reader.Value.ToString()", span="319-319"];
m2_198 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="322-322"];
m2_199 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="XmlDeclaration declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="326-326"];
m2_200 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(declaration)", span="327-327"];
m2_201 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="XmlProcessingInstruction instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="331-331"];
m2_202 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(instruction)", span="332-332"];
m2_209 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(nestedArrayElement)", span="347-347"];
m2_217 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="string attributeName = reader.Value.ToString()", span="372-372"];
m2_221 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="string attributeValue = reader.Value.ToString()", span="378-378"];
m2_231 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(element)", span="406-406"];
m2_234 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="XmlAttribute attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                      ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix))\r\n                      : document.CreateAttribute(nameValue.Key)", span="413-415"];
m2_237 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.String", span="422-422"];
m2_238 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="424-424"];
m2_239 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Integer", span="426-426"];
m2_240 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((long)reader.Value)))", span="428-428"];
m2_241 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Float", span="430-430"];
m2_242 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((double)reader.Value)))", span="432-432"];
m2_243 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Boolean", span="434-434"];
m2_244 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((bool)reader.Value)))", span="436-436"];
m2_245 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Date", span="438-438"];
m2_246 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="DateTime d = (DateTime)reader.Value", span="440-440"];
m2_247 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind))))", span="441-441"];
m2_248 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="443-443"];
m2_250 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="452-452"];
m2_252 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="manager.PopScope()", span="456-456"];
m2_206 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="341-341"];
m2_236 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(attribute)", span="419-419"];
m2_249 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="!finishedElement", span="450-450"];
m2_218 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="attributeName[0] == '@'", span="374-374"];
m2_219 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="376-376"];
m2_223 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="string namespacePrefix", span="381-381"];
m2_186 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="string standalone = null", span="304-304"];
m2_189 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="''@version''", span="309-309"];
m2_192 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="''@encoding''", span="313-313"];
m2_195 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="''@standalone''", span="317-317"];
m2_212 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="return;", span="354-354"];
m2_232 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label=attributeNameValues, span="409-409"];
m2_184 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="string version = null", span="302-302"];
m2_185 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="string encoding = null", span="303-303"];
m2_222 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(attributeName, attributeValue)", span="379-379"];
m2_235 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="attribute.Value = nameValue.Value", span="417-417"];
m2_253 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", span="280-280"];
m2_259 [cluster="Unk.CreateSignificantWhitespace", file="XmlNodeConverter.cs", label="Entry Unk.CreateSignificantWhitespace", span=""];
m2_270 [cluster="Unk.CreateAttribute", file="XmlNodeConverter.cs", label="Entry Unk.CreateAttribute", span=""];
m2_264 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", span="539-539"];
m2_312 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs", label="int colonPosition = qualifiedName.IndexOf(':')", span="541-541"];
m2_313 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs", label="(colonPosition == -1 || colonPosition == 0) || (qualifiedName.Length - 1) == colonPosition", span="543-543"];
m2_315 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs", label="return qualifiedName.Substring(0, colonPosition);", span="546-546"];
m2_314 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs", label="return string.Empty;", span="544-544"];
m2_316 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", span="539-539"];
m2_143 [cluster="Unk.First", file="XmlNodeConverter.cs", label="Entry Unk.First", span=""];
m2_268 [cluster="Unk.AddNamespace", file="XmlNodeConverter.cs", label="Entry Unk.AddNamespace", span=""];
m2_271 [cluster="Unk.SetAttributeNode", file="XmlNodeConverter.cs", label="Entry Unk.SetAttributeNode", span=""];
m2_142 [cluster="Unk.Count", file="XmlNodeConverter.cs", label="Entry Unk.Count", span=""];
m2_12 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", span="66-66"];
m2_13 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="node.NodeType", span="68-68"];
m2_15 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return ''@'' + node.Name;", span="71-71"];
m2_21 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return node.Name;", span="77-77"];
m2_23 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return ''?'' + node.Name;", span="79-79"];
m2_32 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="89-89"];
m2_17 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return CDataName;", span="73-73"];
m2_19 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return CommentName;", span="75-75"];
m2_25 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return DeclarationName;", span="81-81"];
m2_27 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return SignificantWhitespaceName;", span="83-83"];
m2_29 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return TextName;", span="85-85"];
m2_31 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="return WhitespaceName;", span="87-87"];
m2_14 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="70-70"];
m2_16 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="72-72"];
m2_18 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="74-74"];
m2_20 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="76-76"];
m2_22 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="78-78"];
m2_24 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="80-80"];
m2_26 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="82-82"];
m2_28 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="84-84"];
m2_30 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="86-86"];
m2_33 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", span="66-66"];
m2_140 [cluster="Unk.>", file="XmlNodeConverter.cs", label="Entry Unk.>", span=""];
m2_279 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", span="471-471"];
m2_282 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", prediction=4, span="478-478"];
m2_281 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="477-477"];
m2_283 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document.'');", prediction=5, span="479-479"];
m2_284 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="string propertyName = reader.Value.ToString()", prediction=6, span="481-481"];
m2_285 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="reader.Read()", prediction=4, span="482-482"];
m2_288 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="488-488"];
m2_289 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="493-493"];
m2_286 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.StartArray", prediction=4, span="484-484"];
m2_287 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="486-486"];
m2_292 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="499-499"];
m2_298 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="510-510"];
m2_293 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, ''-'' + constructorName, currentNode)", span="501-501"];
m2_280 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType", span="475-475"];
m2_291 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="string constructorName = reader.Value.ToString()", span="497-497"];
m2_297 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="508-508"];
m2_296 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="return;", span="506-506"];
m2_290 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="JsonToken.StartConstructor", span="496-496"];
m2_294 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="504-504"];
m2_295 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndArray", span="505-505"];
m2_299 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", span="471-471"];
m2_255 [cluster="Unk.CreateTextNode", file="XmlNodeConverter.cs", label="Entry Unk.CreateTextNode", span=""];
m2_262 [cluster="string.Substring(int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int)", span="0-0"];
m2_171 [cluster="Unk.DeserializeNode", file="XmlNodeConverter.cs", label="Entry Unk.DeserializeNode", span=""];
m2_311 [cluster="string.Substring(int, int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_73 [cluster="Unk.ToBoolean", file="XmlNodeConverter.cs", label="Entry Unk.ToBoolean", span=""];
m2_169 [cluster="XmlNamespaceManager.cstr", file="XmlNodeConverter.cs", label="Entry XmlNamespaceManager.cstr", span=""];
m2_263 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverter.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m2_10 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245"];
m2_80 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node)", span="160-160"];
m2_84 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="ValueAttributes(node.Attributes).Count() == 0 && node.ChildNodes.Count == 1\r\n                  && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="166-167"];
m2_94 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node.ChildNodes[i], false)", span="186-186"];
m2_100 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node.Attributes[i], true)", span="197-197"];
m2_102 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node)", span="200-200"];
m2_116 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node))", span="222-222"];
m2_120 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node))", span="227-227"];
m2_79 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentFragment", span="159-159"];
m2_82 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="163-163"];
m2_83 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(node.Name)", span="164-164"];
m2_85 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.ChildNodes[0].Value)", span="170-170"];
m2_86 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="172-172"];
m2_93 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="i < node.ChildNodes.Count", span="184-184"];
m2_92 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="184-184"];
m2_95 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="i++", span="184-184"];
m2_99 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="i < node.Attributes.Count", span="195-195"];
m2_98 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="195-195"];
m2_101 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="i++", span="195-195"];
m2_103 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="202-202"];
m2_115 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="221-221"];
m2_117 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.Value)", span="223-223"];
m2_119 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlDeclaration declaration = (XmlDeclaration)node", span="226-226"];
m2_121 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="228-228"];
m2_77 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="node.NodeType", span="156-156"];
m2_87 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteNull()", span="175-175"];
m2_88 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="node.ChildNodes.OfType<XmlElement>().Where(x => x.Name.StartsWith(''-'')).Count() > 1", span="177-177"];
m2_89 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlElement constructorValueElement = node.ChildNodes.OfType<XmlElement>().Where(x => x.Name.StartsWith(''-'')).First()", span="179-179"];
m2_91 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartConstructor(constructorName)", span="182-182"];
m2_96 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndConstructor()", span="189-189"];
m2_97 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="193-193"];
m2_105 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="207-207"];
m2_106 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteComment(node.Value)", span="208-208"];
m2_113 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="node.Prefix == ''xmlns'' && node.Value == JsonNamespaceUri", span="216-216"];
m2_114 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="node.NamespaceURI == JsonNamespaceUri", span="218-218"];
m2_123 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@version'')", span="232-232"];
m2_124 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Version)", span="233-233"];
m2_126 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@encoding'')", span="237-237"];
m2_127 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Encoding)", span="238-238"];
m2_129 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@standalone'')", span="242-242"];
m2_130 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Standalone)", span="243-243"];
m2_131 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="246-246"];
m2_132 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="249-249"];
m2_78 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Document", span="158-158"];
m2_81 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="162-162"];
m2_118 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="225-225"];
m2_122 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Version)", span="230-230"];
m2_125 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Encoding)", span="235-235"];
m2_128 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Standalone)", span="240-240"];
m2_104 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="206-206"];
m2_107 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="210-210"];
m2_90 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="string constructorName = constructorValueElement.Name.Substring(1)", span="180-180"];
m2_112 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="215-215"];
m2_108 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="211-211"];
m2_111 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="214-214"];
m2_109 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="212-212"];
m2_110 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="213-213"];
m2_133 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", span="154-154"];
m2_139 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="622-622"];
m2_266 [cluster="Unk.DeserializeValue", file="XmlNodeConverter.cs", label="Entry Unk.DeserializeValue", span=""];
m2_71 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_327 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="556-556"];
m2_149 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="177-177"];
m2_153 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="179-179"];
m2_151 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="177-177"];
m2_150 [cluster="lambda expression", file="XmlNodeConverter.cs", label="x.Name.StartsWith(''-'')", span="177-177"];
m2_155 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="179-179"];
m2_154 [cluster="lambda expression", file="XmlNodeConverter.cs", label="x.Name.StartsWith(''-'')", span="179-179"];
m2_321 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="551-551"];
m2_323 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="551-551"];
m2_322 [cluster="lambda expression", file="XmlNodeConverter.cs", label="a.NamespaceURI != JsonNamespaceUri", span="551-551"];
m2_328 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.NamespaceURI != JsonNamespaceUri", span="556-556"];
m2_329 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="556-556"];
m2_273 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="23-23"];
m2_257 [cluster="Unk.CreateCDataSection", file="XmlNodeConverter.cs", label="Entry Unk.CreateCDataSection", span=""];
m2_272 [cluster="Unk.ToString", file="XmlNodeConverter.cs", label="Entry Unk.ToString", span=""];
m2_137 [cluster="Unk.WriteValue", file="XmlNodeConverter.cs", label="Entry Unk.WriteValue", span=""];
m2_274 [cluster="Unk.PushScope", file="XmlNodeConverter.cs", label="Entry Unk.PushScope", span=""];
m2_9 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="238-238"];
m2_148 [cluster="Unk.WriteComment", file="XmlNodeConverter.cs", label="Entry Unk.WriteComment", span=""];
m2_265 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", span="464-464"];
m2_276 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return (!string.IsNullOrEmpty(elementPrefix))\r\n               ? document.CreateElement(elementName, manager.LookupNamespace(elementPrefix))\r\n               : document.CreateElement(elementName);", span="466-468"];
m2_277 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", span="464-464"];
m2_146 [cluster="Unk.SerializeNode", file="XmlNodeConverter.cs", label="Entry Unk.SerializeNode", span=""];
m2_152 [cluster="Unk.StartsWith", file="XmlNodeConverter.cs", label="Entry Unk.StartsWith", span=""];
m2_156 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="261-261"];
m2_163 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", color=green, community=0, file="XmlNodeConverter.cs", label="reader.Read()", prediction=9, span="273-273"];
m2_161 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.StartObject", span="270-270"];
m2_164 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", color=green, community=0, file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, document)", prediction=9, span="275-275"];
m2_159 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="XmlDocument document = new XmlDocument()", span="267-267"];
m2_160 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(document.NameTable)", span="268-268"];
m2_165 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", color=green, community=0, file="XmlNodeConverter.cs", label="return document;", prediction=9, span="277-277"];
m2_157 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="objectType != typeof(XmlDocument)", span="264-264"];
m2_162 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="271-271"];
m2_158 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="265-265"];
m2_166 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="261-261"];
m2_167 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m2_170 [cluster="Newtonsoft.Json.JsonReader.Read()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204"];
m2_74 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="291-291"];
m2_147 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="282-282"];
m2_275 [cluster="Unk.PopScope", file="XmlNodeConverter.cs", label="Entry Unk.PopScope", span=""];
m2_76 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="264-264"];
m2_256 [cluster="Unk.AppendChild", file="XmlNodeConverter.cs", label="Entry Unk.AppendChild", span=""];
m2_317 [cluster="string.IndexOf(char)", file="XmlNodeConverter.cs", label="Entry string.IndexOf(char)", span="0-0"];
m2_70 [cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_318 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", span="549-549"];
m2_319 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="XmlNodeConverter.cs", label="return c.OfType<XmlAttribute>().Where(a => a.NamespaceURI != JsonNamespaceUri);", span="551-551"];
m2_320 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", span="549-549"];
m2_269 [cluster="Unk.LookupNamespace", file="XmlNodeConverter.cs", label="Entry Unk.LookupNamespace", span=""];
m2_68 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_168 [cluster="XmlDocument.cstr", file="XmlNodeConverter.cs", label="Entry XmlDocument.cstr", span=""];
m2_334 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
m3_8 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="jsonSerializer.Converters.Add(new XmlNodeConverter())", span="61-61"];
m3_107 [cluster="Unk.Create", file="XmlNodeConverterTest.cs", label="Entry Unk.Create", span=""];
m3_73 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="182-182"];
m3_79 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="215-215"];
m3_75 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="208-208"];
m3_78 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument deserializedDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="213-213"];
m3_80 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''NamespaceSerializeDeserialize'')", span="217-217"];
m3_74 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="184-206"];
m3_76 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="209-209"];
m3_77 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string jsonText = JsonConvert.SerializeXmlNode(doc)", span="211-211"];
m3_82 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(deserializedDoc.InnerXml)", span="219-219"];
m3_81 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="218-218"];
m3_83 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="220-220"];
m3_84 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="182-182"];
m3_23 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="XmlNodeConverterTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m3_20 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97"];
m3_172 [cluster="Unk.DeserializeXmlNode", file="XmlNodeConverterTest.cs", label="Entry Unk.DeserializeXmlNode", span=""];
m3_173 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="469-469"];
m3_174 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", color=green, community=1, file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", prediction=12, span="471-482"];
m3_175 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", color=green, community=0, file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(json, ''myRoot'')", prediction=13, span="484-484"];
m3_176 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", color=green, community=0, file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", prediction=14, span="486-486"];
m3_177 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="469-469"];
m3_22 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="38-38"];
m3_7 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="60-60"];
m3_58 [cluster="Unk.CreateElement", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateElement", span=""];
m3_87 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="224-224"];
m3_95 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, formattedXml)", span="260-260"];
m3_90 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="247-252"];
m3_91 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string formattedXml = GetIndentedInnerXml(doc)", span="254-254"];
m3_94 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="258-258"];
m3_89 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="245-245"];
m3_92 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DocumentDeserialize'')", span="256-256"];
m3_93 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(formattedXml)", span="257-257"];
m3_88 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      }\r\n    }\r\n  }\r\n}''", span="226-243"];
m3_96 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="224-224"];
m3_28 [cluster="System.Console.WriteLine()", file="XmlNodeConverterTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m3_18 [cluster="Unk.LoadXml", file="XmlNodeConverterTest.cs", label="Entry Unk.LoadXml", span=""];
m3_132 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="344-344"];
m3_133 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]'')", span="346-346"];
m3_134 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="344-344"];
m3_24 [cluster="Unk.Serialize", file="XmlNodeConverterTest.cs", label="Entry Unk.Serialize", span=""];
m3_6 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="58-58"];
m3_54 [cluster="Unk.CreateAttribute", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateAttribute", span=""];
m3_167 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="459-459"];
m3_168 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", color=green, community=0, file="XmlNodeConverterTest.cs", label="string strJSON = @''{''''count'''': 773840,''''photos'''': 773840}''", prediction=15, span="461-461"];
m3_169 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", color=green, community=0, file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(strJSON, ''myRoot'')", prediction=16, span="463-463"];
m3_170 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", color=green, community=0, file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newDoc.InnerXml)", prediction=17, span="465-465"];
m3_171 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="459-459"];
m3_29 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="113-113"];
m3_37 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="127-127"];
m3_41 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="136-136"];
m3_45 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="145-145"];
m3_52 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''xs:Choice'''':{''''@msdata:IsDataSet'''':''''true'''',''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}}'', jsonText)", span="158-158"];
m3_35 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="124-124"];
m3_36 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="126-126"];
m3_38 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="131-131"];
m3_39 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="133-133"];
m3_40 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="135-135"];
m3_42 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="140-140"];
m3_43 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="142-142"];
m3_44 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="144-144"];
m3_46 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlElement element = doc.CreateElement(''xs:Choice'')", span="149-149"];
m3_50 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(element)", span="155-155"];
m3_51 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="157-157"];
m3_34 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="attribute.Value = ''true''", span="122-122"];
m3_30 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="115-115"];
m3_48 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.AppendChild(instruction)", span="152-152"];
m3_49 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.AppendChild(cDataSection)", span="153-153"];
m3_47 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.SetAttributeNode(attribute)", span="150-150"];
m3_32 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''SerializeNodeTypes'')", span="118-118"];
m3_33 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlAttribute attribute = doc.CreateAttribute(''msdata:IsDataSet'')", span="121-121"];
m3_31 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="string jsonText", span="116-116"];
m3_53 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="113-113"];
m3_59 [cluster="Unk.SetAttributeNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SetAttributeNode", span=""];
m3_72 [cluster="Unk.CreateDocumentFragment", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateDocumentFragment", span=""];
m3_106 [cluster="XmlWriterSettings.cstr", file="XmlNodeConverterTest.cs", label="Entry XmlWriterSettings.cstr", span=""];
m3_97 [cluster="Unk.GetIndentedInnerXml", file="XmlNodeConverterTest.cs", label="Entry Unk.GetIndentedInnerXml", span=""];
m3_26 [cluster="Unk.AreEqual", file="XmlNodeConverterTest.cs", label="Entry Unk.AreEqual", span=""];
m3_178 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="490-490"];
m3_179 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", color=green, community=1, file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", prediction=18, span="492-507"];
m3_180 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", color=green, community=0, file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(json, ''myRoot'')", prediction=19, span="509-509"];
m3_181 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", color=green, community=0, file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", prediction=20, span="511-511"];
m3_182 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="490-490"];
m3_85 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="624-624"];
m3_56 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m3_117 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="304-304"];
m3_124 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="327-327"];
m3_119 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="318-318"];
m3_123 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="325-325"];
m3_118 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url />\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="306-316"];
m3_120 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="319-319"];
m3_121 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="string jsonText = JsonConvert.SerializeXmlNode(doc)", span="321-321"];
m3_122 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="323-323"];
m3_125 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="304-304"];
m3_21 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="151-151"];
m3_163 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", span="420-420"];
m3_165 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(strJSON)", span="455-455"];
m3_164 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", file="XmlNodeConverterTest.cs", label="string strJSON = @''{\r\n''''count'''': 773840,''''photos'''': [\r\n{\r\n''''photo_id'''': 532693,\r\n''''photo_title'''': ''''Wheatfield in afternoon light'''',\r\n''''photo_url'''': ''''http://www.panoramio.com/photo/532693'''',\r\n''''photofileurl'''': ''''http://static2.bareka.com/photos/medium/532693.jpg'''',\r\n''''longitude'''': 11.280727,\r\n''''latitude'''': 59.643198,\r\n''''width'''': 500,\r\n''''height'''': 333,\r\n''''upload_date'''': ''''22 January 2007'''',\r\n''''owner_id'''': 39160,\r\n''''owner_name'''': ''''Snemann'''',\r\n''''owner_url'''': ''''http://www.panoramio.com/user/39160'''',\r\n},\r\n{\r\n''''photo_id'''': 505229,\r\n''''photo_title'''': ''''Etangs pr�s de Dijon'''',\r\n''''photo_url'''': ''''http://www.panoramio.com/photo/505229'''',\r\n''''photofileurl'''': ''''http://static2.bareka.com/photos/medium/505229.jpg'''',\r\n''''longitude'''': 5.168552,\r\n''''latitude'''': 47.312642,\r\n''''width'''': 350,\r\n''''height'''': 500,\r\n''''upload_date'''': ''''20 January 2007'''',\r\n''''owner_id'''': 78506,\r\n''''owner_name'''': ''''Philippe Stoop'''',\r\n''''owner_url'''': ''''http://www.panoramio.com/user/78506''''\r\n}\r\n]\r\n}''", span="422-453"];
m3_166 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootProperties()", span="420-420"];
m3_86 [cluster="Unk.WriteLine", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteLine", span=""];
m3_57 [cluster="Unk.CreateCDataSection", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateCDataSection", span=""];
m3_19 [cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m3_126 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="331-331"];
m3_130 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="339-339"];
m3_128 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="335-335"];
m3_129 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><Float>2.5</Float><Integer>99</Integer></person><person id=''''2''''><Boolean>true</Boolean><date>2000-03-30T00:00:00Z</date></person></root>''", span="337-337"];
m3_127 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''Float'''':2.5,''''Integer'''':99},{''''@id'''':''''2'''',''''Boolean'''':true,''''date'''':''''\/Date(954374400000)\/''''}]}}''", span="333-333"];
m3_131 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="331-331"];
m3_109 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="279-279"];
m3_115 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="300-300"];
m3_111 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="293-293"];
m3_114 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="298-298"];
m3_110 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="281-291"];
m3_112 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="294-294"];
m3_113 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="string jsonText = JsonConvert.SerializeXmlNode(doc)", span="296-296"];
m3_116 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="279-279"];
m3_138 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="357-357"];
m3_142 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="365-365"];
m3_144 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''r'''':new Date(''''34343'''',''''55'''')}}'', json)", span="368-368"];
m3_140 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(jsonText)", span="361-361"];
m3_141 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string expected = @''<root><r><-Date>34343</-Date><-Date>55</-Date></r></root>''", span="363-363"];
m3_143 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(newDoc)", span="367-367"];
m3_139 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="359-359"];
m3_145 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="357-357"];
m3_135 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="351-351"];
m3_136 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}'')", span="353-353"];
m3_137 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="351-351"];
m3_98 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="263-263"];
m3_104 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="return sw.ToString();", span="275-275"];
m3_101 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="268-268"];
m3_103 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="node.WriteTo(writer)", span="272-272"];
m3_100 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="settings.Indent = true", span="266-266"];
m3_102 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="270-270"];
m3_99 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlWriterSettings settings = new XmlWriterSettings()", span="265-265"];
m3_105 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="263-263"];
m3_0 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="39-39"];
m3_1 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n    <abbr class=''''dtstart'''' title=''''2005-10-05''''>October 5</abbr>\r\n    <abbr class=''''dtend'''' title=''''2005-10-08''''>7</abbr>\r\n    <span class=''''location''''>Argent Hotel, San Francisco, CA</span>\r\n  </a>\r\n</span>''", span="41-50"];
m3_2 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="51-51"];
m3_3 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="52-52"];
m3_4 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="54-54"];
m3_61 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="162-162"];
m3_67 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, jsonText)", span="174-174"];
m3_65 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="170-170"];
m3_66 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="172-172"];
m3_68 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DocumentFragmentSerialize'')", span="176-176"];
m3_64 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="168-168"];
m3_69 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="177-177"];
m3_63 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="166-166"];
m3_70 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="178-178"];
m3_62 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="164-164"];
m3_71 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="162-162"];
m3_146 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="372-372"];
m3_151 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''person'''':{''''@id'''':''''1'''',''''name'''':''''Alan'''',''''url'''':''''http://www.google.com'''',''''role'''':[''''Admin'''']}}}'', arrayJsonText)", span="386-386"];
m3_156 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''person'''':{''''@id'''':''''1'''',''''name'''':''''Alan'''',''''url'''':''''http://www.google.com'''',''''role'''':[''''Admin1'''',''''Admin2'''']}}}'', arrayJsonText)", span="401-401"];
m3_161 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''person'''':{''''@id'''':''''1'''',''''name'''':''''Alan'''',''''url'''':''''http://www.google.com'''',''''role'''':''''Admin1''''}}}'', arrayJsonText)", span="415-415"];
m3_150 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string arrayJsonText = JsonConvert.SerializeXmlNode(arrayDoc)", span="385-385"];
m3_152 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="388-395"];
m3_155 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = JsonConvert.SerializeXmlNode(arrayDoc)", span="400-400"];
m3_157 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="403-409"];
m3_160 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = JsonConvert.SerializeXmlNode(arrayDoc)", span="414-414"];
m3_148 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="XmlDocument arrayDoc = new XmlDocument()", span="382-382"];
m3_149 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="383-383"];
m3_153 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="397-397"];
m3_154 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="398-398"];
m3_158 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="411-411"];
m3_159 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="412-412"];
m3_147 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="374-380"];
m3_162 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="372-372"];
m3_60 [cluster="Unk.AppendChild", file="XmlNodeConverterTest.cs", label="Entry Unk.AppendChild", span=""];
m3_108 [cluster="Unk.WriteTo", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteTo", span=""];
m3_5 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="56-56"];
m3_55 [cluster="Unk.SerializeXmlNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SerializeXmlNode", span=""];
m3_25 [cluster="System.IO.StringWriter.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m3_12 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, jsonText)", span="105-105"];
m3_10 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="string jsonText = sw.ToString()", span="66-66"];
m3_11 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': [\r\n        {\r\n          ''''@class'''': ''''summary'''',\r\n          ''''#text'''': ''''Web 2.0 Conference'''',\r\n          ''''#cdata-section'''': ''''my escaped text''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''location'''',\r\n          ''''#text'''': ''''Argent Hotel, San Francisco, CA''''\r\n        }\r\n      ],\r\n      ''''abbr'''': [\r\n        {\r\n          ''''@class'''': ''''dtstart'''',\r\n          ''''@title'''': ''''2005-10-05'''',\r\n          ''''#text'''': ''''October 5''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''dtend'''',\r\n          ''''@title'''': ''''2005-10-08'''',\r\n          ''''#text'''': ''''7''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="67-103"];
m3_13 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DocumentSerializeIndented'')", span="107-107"];
m3_9 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="jsonSerializer.Serialize(jsonWriter, doc)", span="63-63"];
m3_14 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="108-108"];
m3_15 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="109-109"];
m3_16 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="39-39"];
m3_17 [cluster="XmlDocument.cstr", file="XmlNodeConverterTest.cs", label="Entry XmlDocument.cstr", span=""];
m3_183 [file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span=""];
m2_325 -> m2_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=node, style=dashed];
m2_35 -> m2_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_35 -> m2_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_35 -> m2_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_35 -> m2_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_35 -> m2_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_40 -> m2_42  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m2_40 -> m2_44  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m2_39 -> m2_45  [color=darkseagreen4, key=1, label=childNode, style=dashed];
m2_48 -> m2_58  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m2_48 -> m2_64  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m2_48 -> m2_50  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m2_48 -> m2_63  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m2_62 -> m2_64  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_62 -> m2_65  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_65 -> m2_65  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_37 -> m2_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_36 -> m2_42  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m2_36 -> m2_44  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m2_36 -> m2_47  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m2_43 -> m2_45  [color=darkseagreen4, key=1, label=nodes, style=dashed];
m2_60 -> m2_60  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m2_46 -> m2_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_267 -> m2_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_267 -> m2_304  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_307 -> m2_309  [color=darkseagreen4, key=1, label="out string", style=dashed];
m2_172 -> m2_213  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_214  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_215  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_172 -> m2_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_172 -> m2_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_200  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_172 -> m2_202  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_172 -> m2_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_209  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_172 -> m2_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_225  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m2_172 -> m2_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_231  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_172 -> m2_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_247  [color=darkseagreen4, key=1, label=XmlDocument, style=dashed];
m2_172 -> m2_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_250  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m2_172 -> m2_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_172 -> m2_252  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m2_230 -> m2_236  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_230 -> m2_238  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_230 -> m2_240  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_230 -> m2_242  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_230 -> m2_244  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_230 -> m2_247  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_230 -> m2_251  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_203 -> m2_214  [color=green, key=1, label=finishedAttributes, style=dashed];
m2_204 -> m2_214  [color=green, key=1, label=finishedElement, style=dashed];
m2_204 -> m2_249  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m2_228 -> m2_249  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m2_208 -> m2_211  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m2_221 -> m2_225  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m2_206 -> m2_222  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m2_206 -> m2_232  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m2_219 -> m2_224  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m2_219 -> m2_222  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m2_264 -> m2_313  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_264 -> m2_315  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_312 -> m2_315  [color=darkseagreen4, key=1, label=colonPosition, style=dashed];
m2_12 -> m2_15  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_12 -> m2_21  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_12 -> m2_23  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_12 -> m2_32  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_279 -> m2_282  [color=green, key=1, label=XmlDocument, style=dashed];
m2_279 -> m2_285  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_279 -> m2_286  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_279 -> m2_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_279 -> m2_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_279 -> m2_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_279 -> m2_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_279 -> m2_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_279 -> m2_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_279 -> m2_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_284 -> m2_288  [color=green, key=1, label=propertyName, style=dashed];
m2_284 -> m2_289  [color=green, key=1, label=propertyName, style=dashed];
m2_291 -> m2_293  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m2_10 -> m2_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_84  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_10 -> m2_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_82  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_10 -> m2_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_86  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_10 -> m2_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_88  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_10 -> m2_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_93  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_10 -> m2_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_99  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_10 -> m2_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_105  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_10 -> m2_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_113  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_10 -> m2_114  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_10 -> m2_115  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_10 -> m2_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_10 -> m2_132  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m2_92 -> m2_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_92 -> m2_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_95 -> m2_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_98 -> m2_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_98 -> m2_101  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_101 -> m2_101  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_119 -> m2_122  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m2_119 -> m2_124  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m2_119 -> m2_125  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m2_119 -> m2_127  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m2_119 -> m2_128  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m2_119 -> m2_130  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m2_88 -> m2_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_89 -> m2_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_156 -> m2_163  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_156 -> m2_164  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_156 -> m2_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_159 -> m2_164  [color=green, key=1, label=document, style=dashed];
m2_159 -> m2_165  [color=green, key=1, label=document, style=dashed];
m2_160 -> m2_164  [color=green, key=1, label=manager, style=dashed];
m2_319 -> m2_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_334 -> m2_164  [color=green, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m2_334 -> m2_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m3_75 -> m3_79  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_78 -> m3_82  [color=darkseagreen4, key=1, label=deserializedDoc, style=dashed];
m3_74 -> m3_76  [color=darkseagreen4, key=1, label=xml, style=dashed];
m3_77 -> m3_81  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m3_7 -> m3_9  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m3_90 -> m3_95  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_91 -> m3_95  [color=darkseagreen4, key=1, label=formattedXml, style=dashed];
m3_91 -> m3_93  [color=darkseagreen4, key=1, label=formattedXml, style=dashed];
m3_35 -> m3_37  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m3_38 -> m3_48  [color=darkseagreen4, key=1, label=instruction, style=dashed];
m3_39 -> m3_41  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m3_42 -> m3_49  [color=darkseagreen4, key=1, label=cDataSection, style=dashed];
m3_43 -> m3_45  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m3_46 -> m3_48  [color=darkseagreen4, key=1, label=element, style=dashed];
m3_46 -> m3_49  [color=darkseagreen4, key=1, label=element, style=dashed];
m3_50 -> m3_52  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m3_34 -> m3_47  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_119 -> m3_124  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_118 -> m3_120  [color=darkseagreen4, key=1, label=xml, style=dashed];
m3_128 -> m3_130  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m3_111 -> m3_115  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_110 -> m3_112  [color=darkseagreen4, key=1, label=xml, style=dashed];
m3_140 -> m3_142  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m3_98 -> m3_103  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m3_101 -> m3_104  [color=darkseagreen4, key=1, label=sw, style=dashed];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=xml, style=dashed];
m3_2 -> m3_9  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_65 -> m3_67  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m3_65 -> m3_69  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m3_152 -> m3_154  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m3_157 -> m3_159  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m3_147 -> m3_149  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m3_5 -> m3_9  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_10 -> m3_12  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m3_10 -> m3_14  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
}
