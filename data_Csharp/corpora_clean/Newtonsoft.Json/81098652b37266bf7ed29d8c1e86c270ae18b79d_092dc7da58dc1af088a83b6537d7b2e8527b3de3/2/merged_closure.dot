digraph  {
d30 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", color=green, community=0, label="Type genericConstructorArgument = typeof(IList<>).MakeGenericType(collectionItemType)", prediction=0, span="116-116"];
d29 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="114-114"];
d34 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="121-121"];
d31 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", color=green, community=0, label="return ResolveEnumerableCollectionConstructor(collectionType, collectionItemType, genericConstructorArgument);", prediction=1, span="118-118"];
d33 [cluster="System.Type.MakeGenericType(params System.Type[])", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
d32 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="114-114"];
d44 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", color=green, community=0, label="parameterType.IsAssignableFrom(constructorArgumentType)", prediction=2, span="144-144"];
d43 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="match == null", span="142-142"];
d40 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", color=green, community=0, label="Type parameterType = parameters[0].ParameterType", prediction=2, span="132-132"];
d45 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="match = constructor", span="146-146"];
d37 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="collectionType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="126-126"];
d27 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d41 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", color=green, community=0, label="genericEnumerable == parameterType", prediction=4, span="134-134"];
d35 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="Type genericEnumerable = typeof(IEnumerable<>).MakeGenericType(collectionItemType)", span="123-123"];
d42 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="match = constructor", span="137-137"];
d38 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="IList<ParameterInfo> parameters = constructor.GetParameters()", span="128-128"];
d39 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="parameters.Count == 1", span="130-130"];
d47 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="121-121"];
d36 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="ConstructorInfo match = null", span="124-124"];
d46 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", label="return match;", span="152-152"];
d48 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
d18 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="typeof(IDictionary).IsAssignableFrom(type)", span="96-96"];
d49 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
d16 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="92-92"];
d17 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="94-94"];
d19 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="return true;", span="98-98"];
d20 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IDictionary<,>))", span="100-100"];
d25 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="92-92"];
d22 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IReadOnlyDictionary<,>))", span="105-105"];
d3 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="return true;", span="56-56"];
d24 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="return false;", span="111-111"];
d14 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
d26 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
d21 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="return true;", span="102-102"];
d28 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="292-292"];
d23 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="return true;", span="107-107"];
d0 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
d1 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="collection != null", span="52-52"];
d53 [cluster="System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", label="Entry System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160"];
d60 [cluster="System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172"];
d73 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", label="bool allAdded = true", span="197-197"];
d88 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", span="225-225"];
d4 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
d7 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="throw new ArgumentNullException(nameof(initial));", span="68-68"];
d65 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="throw new ArgumentNullException(nameof(source));", span="181-181"];
d2 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="return (collection.Count == 0);", span="54-54"];
d50 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="155-155"];
d51 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", label="return list.AddDistinct(value, EqualityComparer<T>.Default);", span="157-157"];
d75 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", label="!list.AddDistinct(value, comparer)", span="200-200"];
d74 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", label=values, span="198-198"];
d72 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="195-195"];
d55 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", label="list.ContainsValue(value, comparer)", span="162-162"];
d77 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", label="return allAdded;", span="206-206"];
d95 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", span="225-225"];
d89 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", label="int i = 0", span="227-227"];
d90 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", label="i < list.Count", span="227-227"];
d91 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", label="comparer.Equals(value, list[i])", span="229-229"];
d5 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64"];
d6 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="initial == null", span="66-66"];
d12 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64"];
d13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d61 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172"];
d64 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="source == null", span="179-179"];
d70 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172"];
d52 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="155-155"];
d76 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", label="allAdded = false", span="202-202"];
d78 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="195-195"];
d54 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160"];
d56 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", label="return false;", span="164-164"];
d57 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", label="list.Add(value)", span="167-167"];
d94 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", label="return false;", span="234-234"];
d92 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", label="return true;", span="231-231"];
d93 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", label="i++", span="227-227"];
d80 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", label="int index = 0", span="211-211"];
d96 [cluster="System.Collections.IEqualityComparer.Equals(object, object)", label="Entry System.Collections.IEqualityComparer.Equals(object, object)", span="0-0"];
d8 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="collection == null", span="71-71"];
d10 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label=collection, span="76-76"];
d11 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="initial.Add(value)", span="78-78"];
d9 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="return;", span="73-73"];
d62 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="comparer == null", span="174-174"];
d66 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label=source, span="184-184"];
d67 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="comparer.Equals(local, value)", span="186-186"];
d63 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="comparer = EqualityComparer<TSource>.Default", span="176-176"];
d69 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="return false;", span="192-192"];
d68 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="return true;", span="188-188"];
d59 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160"];
d58 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", label="return true;", span="168-168"];
d15 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
d79 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="209-209"];
d98 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", label="int i = 0", span="239-239"];
d135 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="i < multidimensionalArray.GetLength(dimension)", span="306-306"];
d131 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="i < dimension", span="301-301"];
d146 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="i < indices.Length", span="316-316"];
d81 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", label=collection, span="212-212"];
d83 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", label="return index;", span="216-216"];
d84 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", label="index++", span="219-219"];
d71 [cluster="System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", label="Entry System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", span="0-0"];
d110 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="dimensions.Add(currentArray.Count)", span="256-256"];
d157 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", label="dimensions.Add(0)", span="337-337"];
d86 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="209-209"];
d82 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", label="predicate(value)", span="214-214"];
d85 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", label="return -1;", span="222-222"];
d97 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", span="237-237"];
d99 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", label="i < list.Count", span="239-239"];
d100 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", label="ReferenceEquals(item, list[i])", span="241-241"];
d101 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", label="return i;", span="243-243"];
d102 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", label="i++", span="239-239"];
d119 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="283-283"];
d120 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="int dimension = indices.Length", span="285-285"];
d134 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="int i = 0", span="306-306"];
d138 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="i++", span="306-306"];
d136 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="newIndices[dimension] = i", span="308-308"];
d139 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="283-283"];
d142 [cluster="System.Array.GetLength(int)", label="Entry System.Array.GetLength(int)", span="0-0"];
d130 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="int i = 0", span="301-301"];
d133 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="i++", span="301-301"];
d132 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="newIndices[i] = indices[i]", span="303-303"];
d140 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="313-313"];
d145 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="int i = 0", span="316-316"];
d151 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="i++", span="316-316"];
d147 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="int index = indices[i]", span="318-318"];
d152 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="return currentList;", span="328-328"];
d107 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="IList<int> dimensions = new List<int>()", span="251-251"];
d108 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="IList currentArray = values", span="253-253"];
d109 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label=true, span="254-254"];
d111 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="dimensions.Count == dimensionsCount", span="259-259"];
d155 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", label="IList<int> dimensions = GetDimensions(values, rank)", span="333-333"];
d156 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", label="dimensions.Count < rank", span="335-335"];
d87 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
d104 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", span="237-237"];
d103 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", label="return -1;", span="246-246"];
d105 [cluster="object.ReferenceEquals(object, object)", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
d137 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, newIndices)", span="309-309"];
d159 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, new int[0])", span="341-341"];
d121 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="dimension == multidimensionalArray.Rank", span="286-286"];
d122 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="multidimensionalArray.SetValue(JaggedArrayGetValue(values, indices), indices)", span="288-288"];
d124 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="int dimensionLength = multidimensionalArray.GetLength(dimension)", span="292-292"];
d125 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="IList list = (IList)JaggedArrayGetValue(values, indices)", span="293-293"];
d154 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="331-331"];
d158 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", label="Array multidimensionalArray = Array.CreateInstance(type, dimensions.ToArray())", span="340-340"];
d129 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="int[] newIndices = new int[dimension + 1]", span="300-300"];
d123 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="return;", span="289-289"];
d128 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="throw new Exception(''Cannot deserialize non-cubical array as multidimensional array.'');", span="297-297"];
d144 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="IList currentList = values", span="315-315"];
d153 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="313-313"];
d148 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="i == indices.Length - 1", span="319-319"];
d150 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="currentList = (IList)currentList[index]", span="325-325"];
d149 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", label="return currentList[index];", span="321-321"];
d106 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", span="249-249"];
d118 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d116 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="return dimensions;", span="280-280"];
d112 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="currentArray.Count == 0", span="264-264"];
d113 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="object v = currentArray[0]", span="269-269"];
d115 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="currentArray = (IList)v", span="272-272"];
d160 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", label="return multidimensionalArray;", span="343-343"];
d141 [cluster="System.Array.SetValue(object, params int[])", label="Entry System.Array.SetValue(object, params int[])", span="0-0"];
d127 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="currentValuesLength != dimensionLength", span="295-295"];
d126 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", label="int currentValuesLength = list.Count", span="294-294"];
d161 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="331-331"];
d162 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
d163 [cluster="System.Array.CreateInstance(System.Type, params int[])", label="Entry System.Array.CreateInstance(System.Type, params int[])", span="0-0"];
d143 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
d117 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", span="249-249"];
d114 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", label="v is IList", span="270-270"];
m0_84 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonDictionaryContract.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m0_56 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="232-232"];
m0_88 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JsonDictionaryContract.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m0_39 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="109-109"];
m0_25 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="DictionaryKeyType = keyType", span="190-190"];
m0_46 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="string resolvedEnumName", span="123-123"];
m0_47 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="map.TryGetBySecond(enumText, out resolvedEnumName)", span="124-124"];
m0_48 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="resolvedEnumName = resolvedEnumName ?? enumText", span="125-125"];
m0_49 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="return Enum.Parse(t, resolvedEnumName, true);", span="127-127"];
m0_50 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="reader.TokenType == JsonToken.Integer", span="130-130"];
m0_51 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="return ConvertUtils.ConvertOrCast(reader.Value, CultureInfo.InvariantCulture, t);", span="131-131"];
m0_52 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label=Exception, span="133-133"];
m0_0 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="58-58"];
m0_20 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", color=green, community=1, file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", prediction=5, span="1212-1212"];
m0_5 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="string enumName = e.ToString(''G'')", span="68-68"];
m0_6 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="char.IsNumber(enumName[0]) || enumName[0] == '-'", span="70-70"];
m0_19 [cluster="char.IsNumber(char)", file="JsonDictionaryContract.cs", label="Entry char.IsNumber(char)", span="0-0"];
m0_11 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="resolvedEnumName = resolvedEnumName ?? enumName", span="81-81"];
m0_16 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="58-58"];
m0_12 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label=CamelCaseText, span="83-83"];
m0_21 [cluster="object.GetType()", file="JsonDictionaryContract.cs", label="Entry object.GetType()", span="0-0"];
m0_1 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="value == null", span="60-60"];
m0_4 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="Enum e = (Enum)value", span="66-66"];
m0_7 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="writer.WriteValue(value)", span="73-73"];
m0_8 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="BidirectionalDictionary<string, string> map = GetEnumNameMap(e.GetType())", span="77-77"];
m0_9 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="string resolvedEnumName", span="79-79"];
m0_10 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="map.TryGetByFirst(enumName, out resolvedEnumName)", span="80-80"];
m0_13 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="string[] names = resolvedEnumName.Split(',').Select(item => StringUtils.ToCamelCase(item.Trim())).ToArray()", span="85-85"];
m0_14 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="resolvedEnumName = string.Join('', '', names)", span="86-86"];
m0_15 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="writer.WriteValue(resolvedEnumName)", span="89-89"];
m0_17 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="771-771"];
m0_18 [cluster="System.Enum.ToString(string)", file="JsonDictionaryContract.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m0_23 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", span="82-82"];
m0_24 [cluster="string.Split(params char[])", file="JsonDictionaryContract.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_26 [cluster="Unk.ToArray", file="JsonDictionaryContract.cs", label="Entry Unk.ToArray", span=""];
m0_29 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="Entry lambda expression", span="85-85"];
m0_30 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="StringUtils.ToCamelCase(item.Trim())", span="85-85"];
m0_31 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="Exit lambda expression", span="85-85"];
m0_32 [cluster="string.Trim()", file="JsonDictionaryContract.cs", label="Entry string.Trim()", span="0-0"];
m0_22 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", span="142-142"];
m0_2 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="writer.WriteNull()", span="62-62"];
m0_3 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="return;", span="63-63"];
m0_27 [cluster="string.Join(string, params string[])", file="JsonDictionaryContract.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m0_28 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="809-809"];
m0_33 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="149-149"];
m0_37 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="reader.TokenType == JsonToken.Null", span="106-106"];
m0_35 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="bool isNullable = ReflectionUtils.IsNullableType(objectType)", span="103-103"];
m0_57 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="_genericTemporaryDictionaryCreator == null", span="234-234"];
m0_95 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="195-195"];
m0_96 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs", label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n      ? Nullable.GetUnderlyingType(objectType)\r\n      : objectType", span="197-199"];
m0_97 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs", label="return t.IsEnum();", span="201-201"];
m0_98 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="195-195"];
m0_41 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="reader.TokenType == JsonToken.String", span="116-116"];
m0_85 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.BidirectionalDictionary(System.Collections.Generic.IEqualityComparer<TFirst>, System.Collections.Generic.IEqualityComparer<TSecond>)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.BidirectionalDictionary(System.Collections.Generic.IEqualityComparer<TFirst>, System.Collections.Generic.IEqualityComparer<TSecond>)", span="43-43"];
m0_86 [cluster="System.Type.GetFields()", file="JsonDictionaryContract.cs", label="Entry System.Type.GetFields()", span="0-0"];
m0_62 [cluster="System.Enum.Parse(System.Type, string, bool)", file="JsonDictionaryContract.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m0_45 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="var map = GetEnumNameMap(t)", span="122-122"];
m0_66 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m0_60 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="return (IDictionary)_genericTemporaryDictionaryCreator();", span="241-241"];
m0_90 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JsonDictionaryContract.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m0_63 [cluster="System.Func<TResult>.Invoke()", file="JsonDictionaryContract.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_61 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="232-232"];
m0_91 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Set(TFirst, TSecond)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Set(TFirst, TSecond)", span="61-61"];
m0_99 [cluster="System.Type.IsEnum()", file="JsonDictionaryContract.cs", label="Entry System.Type.IsEnum()", span="152-152"];
m0_64 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JsonDictionaryContract.cs", label="Newtonsoft.Json.Serialization.JsonDictionaryContract", span=""];
m0_87 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="JsonDictionaryContract.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m0_54 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when parsing enum. Expected String or Integer, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="139-139"];
m0_55 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="101-101"];
m0_53 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(reader.Value), objectType), ex);", span="135-135"];
m0_67 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="BidirectionalDictionary<string, string> map", span="144-144"];
m0_68 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="!_enumMemberNamesPerType.TryGetValue(t, out map)", span="146-146"];
m0_70 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="_enumMemberNamesPerType.TryGetValue(t, out map)", span="150-150"];
m0_73 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="t.GetFields()", span="157-157"];
m0_81 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="_enumMemberNamesPerType[t] = map", span="181-181"];
m0_69 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label=_enumMemberNamesPerType, span="148-148"];
m0_82 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="return map;", span="185-185"];
m0_71 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="return map;", span="151-151"];
m0_72 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="map = new BidirectionalDictionary<string, string>(\r\n            StringComparer.OrdinalIgnoreCase,\r\n            StringComparer.OrdinalIgnoreCase)", span="153-155"];
m0_78 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="map.TryGetBySecond(n2, out s)", span="172-172"];
m0_80 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="map.Set(n1, n2)", span="178-178"];
m0_74 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="string n1 = f.Name", span="159-159"];
m0_76 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="n2 = f.GetCustomAttributes(typeof (EnumMemberAttribute), true)\r\n                          .Cast<EnumMemberAttribute>()\r\n                          .Select(a => a.Value)\r\n                          .SingleOrDefault() ?? f.Name", span="163-166"];
m0_75 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="string n2", span="160-160"];
m0_77 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="string s", span="171-171"];
m0_83 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.GetEnumNameMap(System.Type)", span="142-142"];
m0_44 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="return null;", span="120-120"];
m0_42 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="string enumText = reader.Value.ToString()", span="118-118"];
m0_34 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="101-101"];
m0_38 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="!ReflectionUtils.IsNullableType(objectType)", span="108-108"];
m0_92 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="Entry lambda expression", span="165-165"];
m0_93 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="a.Value", span="165-165"];
m0_94 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="Exit lambda expression", span="165-165"];
m0_43 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="enumText == string.Empty && isNullable", span="119-119"];
m0_65 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonDictionaryContract.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m0_36 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
m0_40 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonDictionaryContract.cs", label="return null;", span="111-111"];
m0_59 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="_genericTemporaryDictionaryCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryDictionaryType)", span="238-238"];
m0_89 [cluster="Unk.SingleOrDefault", file="JsonDictionaryContract.cs", label="Entry Unk.SingleOrDefault", span=""];
m0_58 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonDictionaryContract.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m0_100 [file="JsonDictionaryContract.cs", label="Newtonsoft.Json.Converters.StringEnumConverter", span=""];
m1_326 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="886-886"];
m1_367 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndArray", span="971-971"];
m1_368 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndArray)", span="972-972"];
m1_373 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentPosition.PropertyName = (string)value", span="980-980"];
m1_375 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Integer", span="983-983"];
m1_378 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Null", span="986-986"];
m1_369 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="974-974"];
m1_372 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.Property", span="978-978"];
m1_374 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Undefined", span="982-982"];
m1_376 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Float", span="984-984"];
m1_377 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Boolean", span="985-985"];
m1_379 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Date", span="987-987"];
m1_371 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.PropertyName", span="977-977"];
m1_370 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndConstructor)", span="975-975"];
m1_380 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.String", span="988-988"];
m1_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="contract.TypeCode == PrimitiveTypeCode.Bytes", span="87-87"];
m1_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonReader.cs", label="WriteReference(writer, memberValue)", span="417-417"];
m1_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="writer.WriteStartArray()", span="529-529"];
m1_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="int initialDepth = writer.Top", span="531-531"];
m1_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="541-541"];
m1_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="549-549"];
m1_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="HandleError(writer, initialDepth)", span="556-556"];
m1_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="throw;", span="558-558"];
m1_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="int index = 0", span="533-533"];
m1_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="539-539"];
m1_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label=values, span="535-535"];
m1_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="WriteReference(writer, value)", span="543-543"];
m1_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="547-547"];
m1_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label=Exception, span="553-553"];
m1_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="IsErrorHandled(underlyingList, contract, index, null, writer.ContainerPath, ex)", span="555-555"];
m1_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="writer.WriteEndArray()", span="566-566"];
m1_78 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to integer: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="459-459"];
m1_189 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="return d;", span="647-647"];
m1_123 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="s.Length == 0", span="547-547"];
m1_0 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="328-328"];
m1_1 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="_stack != null && depth < _stack.Count", span="330-330"];
m1_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="58-58"];
m1_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonReader.cs", label="jsonWriter == null", span="60-60"];
m1_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonReader.cs", label="throw new ArgumentNullException(''jsonWriter'');", span="61-61"];
m1_124 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = new byte[0]", span="549-549"];
m1_134 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ValueType == typeof(Guid)", span="567-567"];
m1_139 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.StartArray", span="575-575"];
m1_143 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="891-891"];
m1_144 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="878-878"];
m1_147 [cluster="System.Convert.FromBase64String(string)", file="JsonReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m1_148 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="582-582"];
m1_125 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ConvertUtils.TryConvertGuid(s, out g)", span="551-551"];
m1_128 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="560-560"];
m1_129 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="561-561"];
m1_130 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.Null", span="563-563"];
m1_131 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.EndArray", span="564-564"];
m1_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return null;", span="565-565"];
m1_133 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.Bytes", span="566-566"];
m1_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="570-570"];
m1_137 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="571-571"];
m1_138 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return (byte[])Value;", span="574-574"];
m1_141 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBytes()", span="511-511"];
m1_135 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="byte[] data = ((Guid)Value).ToByteArray()", span="569-569"];
m1_150 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label=true, span="586-586"];
m1_127 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = Convert.FromBase64String(s)", span="557-557"];
m1_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return ReadArrayIntoByteArray();", span="576-576"];
m1_142 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="579-579"];
m1_146 [cluster="System.Guid.ToByteArray()", file="JsonReader.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m1_145 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="932-932"];
m1_149 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="List<byte> buffer = new List<byte>()", span="584-584"];
m1_126 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = g.ToByteArray()", span="553-553"];
m1_151 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="588-588"];
m1_398 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="GetTypeForCloseToken(endToken) != currentObject", span="1025-1025"];
m1_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonReader.cs", label=isTopLevel, span="610-610"];
m1_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonReader.cs", label="object value = values.GetValue(newIndices)", span="612-612"];
m1_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonReader.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="616-616"];
m1_177 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.String", span="628-628"];
m1_181 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m1_179 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDouble()", span="610-610"];
m1_182 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="635-635"];
m1_184 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="639-639"];
m1_180 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading double. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="632-632"];
m1_183 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="637-637"];
m1_185 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="return null;", span="640-640"];
m1_186 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="double d", span="643-643"];
m1_154 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="592-592"];
m1_446 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndAssert()", span="1124-1124"];
m1_327 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="371-371"];
m1_328 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m1_77 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="458-458"];
m1_190 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="651-651"];
m1_194 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBoolean()", span="660-660"];
m1_191 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to double: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="652-652"];
m1_193 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonReader.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m1_192 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="635-635"];
m1_195 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="662-662"];
m1_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="return;", span="112-112"];
m1_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="JsonConverter converter", span="115-115"];
m1_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="(((converter = (member != null) ? member.Converter : null) != null)\r\n           || ((converter = (containerProperty != null) ? containerProperty.ItemConverter : null) != null)\r\n           || ((converter = (containerContract != null) ? containerContract.ItemConverter : null) != null)\r\n           || ((converter = valueContract.Converter) != null)\r\n           || ((converter = Serializer.GetMatchingConverter(valueContract.UnderlyingType)) != null)\r\n           || ((converter = valueContract.InternalConverter) != null))\r\n          && converter.CanWrite", span="116-122"];
m1_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonReader.cs", label="return false;", span="792-792"];
m1_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonReader.cs", label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n        (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="794-795"];
m1_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonReader.cs", label="return false;", span="796-796"];
m1_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonReader.cs", label="return true;", span="798-798"];
m1_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="789-789"];
m1_399 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''JsonToken {0} is not valid for closing JsonType {1}.''.FormatWith(CultureInfo.InvariantCulture, endToken, currentObject));", span="1027-1027"];
m1_122 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Guid g", span="546-546"];
m1_281 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTime.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="812-812"];
m1_74 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="int.TryParse(s, NumberStyles.Integer, Culture, out i)", span="451-451"];
m1_208 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return b;", span="686-686"];
m1_209 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.String", span="687-687"];
m1_210 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return ReadBooleanString((string)Value);", span="688-688"];
m1_217 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="698-698"];
m1_219 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="return null;", span="701-701"];
m1_221 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="bool.TryParse(s, out b)", span="705-705"];
m1_222 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Boolean, b, false)", span="707-707"];
m1_226 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="696-696"];
m1_227 [cluster="bool.TryParse(string, out bool)", file="JsonReader.cs", label="Entry bool.TryParse(string, out bool)", span="0-0"];
m1_211 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Boolean", span="689-689"];
m1_214 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading boolean. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="693-693"];
m1_216 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="696-696"];
m1_218 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="700-700"];
m1_213 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBoolean()", span="660-660"];
m1_220 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="bool b", span="704-704"];
m1_224 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="712-712"];
m1_223 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="return b;", span="708-708"];
m1_225 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to boolean: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="713-713"];
m1_212 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return (bool)Value;", span="690-690"];
m1_215 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m1_228 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="721-721"];
m1_520 [cluster="object.ToString()", file="JsonReader.cs", label="Entry object.ToString()", span="0-0"];
m1_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="200-200"];
m1_120 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="string s = (string)Value", span="542-542"];
m1_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="594-594"];
m1_436 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Dispose(bool)", span="1106-1106"];
m1_174 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="!(Value is double)", span="622-622"];
m1_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="789-789"];
m1_439 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Close()", span="1110-1110"];
m1_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonReader.cs", label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="791-791"];
m1_355 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", color=green, community=0, file="JsonReader.cs", label=newToken, prediction=6, span="954-954"];
m1_353 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_tokenType = newToken", span="951-951"];
m1_356 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", color=green, community=0, file="JsonReader.cs", label="JsonToken.StartObject", prediction=6, span="956-956"];
m1_357 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", color=green, community=0, file="JsonReader.cs", label="_currentState = State.ObjectStart", prediction=8, span="957-957"];
m1_362 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartConstructor", span="964-964"];
m1_358 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", color=green, community=0, file="JsonReader.cs", label="Push(JsonContainerType.Object)", prediction=6, span="958-958"];
m1_346 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", span="45-45"];
m1_359 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", color=green, community=0, file="JsonReader.cs", label="JsonToken.StartArray", prediction=6, span="960-960"];
m1_360 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", color=green, community=0, file="JsonReader.cs", label="_currentState = State.ArrayStart", prediction=11, span="961-961"];
m1_354 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_value = value", span="952-952"];
m1_361 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Array)", span="962-962"];
m1_339 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="913-913"];
m1_343 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="int depth = Depth", span="922-922"];
m1_345 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Skip()", span="913-913"];
m1_347 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="934-934"];
m1_349 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="934-934"];
m1_363 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ConstructorStart", span="965-965"];
m1_340 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="TokenType == JsonToken.PropertyName", span="915-915"];
m1_348 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetToken(newToken, null, true)", span="936-936"];
m1_342 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="JsonTokenUtils.IsStartToken(TokenType)", span="920-920"];
m1_341 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read()", span="917-917"];
m1_344 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read() && (depth < Depth)", span="924-924"];
m1_364 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Constructor)", span="966-966"];
m1_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonReader.cs", label="writer.WriteEndObject()", span="275-275"];
m1_6 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_currentState = State.Start", span="343-343"];
m1_7 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="344-344"];
m1_5 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.JsonReader()", span="341-341"];
m1_8 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateParseHandling = DateParseHandling.DateTime", span="345-345"];
m1_36 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="389-389"];
m1_447 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="!Read()", span="1126-1126"];
m1_448 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="throw JsonSerializationException.Create(this, ''Unexpected end when reading JSON.'');", span="1128-1128"];
m1_450 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m1_457 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="!Read()", span="1142-1142"];
m1_458 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="return false;", span="1144-1144"];
m1_449 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAndAssert()", span="1124-1124"];
m1_451 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", span="1132-1132"];
m1_460 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="return true;", span="1150-1150"];
m1_454 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.MoveToContent()", span="1137-1137"];
m1_459 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="t = TokenType", span="1147-1147"];
m1_452 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="return Read() && MoveToContent();", span="1134-1134"];
m1_455 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="JsonToken t = TokenType", span="1139-1139"];
m1_453 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", span="1132-1132"];
m1_456 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="t == JsonToken.None || t == JsonToken.Comment", span="1140-1140"];
m1_461 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.MoveToContent()", span="1137-1137"];
m1_517 [cluster="System.IO.StringWriter.ToString()", file="JsonReader.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m1_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="85-85"];
m1_394 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="707-707"];
m1_395 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="OnSerialized(writer, contract, value)", span="708-708"];
m1_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="678-678"];
m1_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="898-898"];
m1_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="898-898"];
m1_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="TryConvertToString(key, key.GetType(), out propertyName)", span="929-929"];
m1_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="object key = entry.Key", span="900-900"];
m1_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="JsonPrimitiveContract primitiveContract = contract as JsonPrimitiveContract", span="904-904"];
m1_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="DateTimeUtils.WriteDateTimeString(sw, (DateTime)key, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="911-911"];
m1_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="DateTimeUtils.WriteDateTimeOffsetString(sw, (DateTimeOffset)key, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="919-919"];
m1_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="primitiveContract != null", span="905-905"];
m1_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="escape = true", span="931-931"];
m1_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="escape = true", span="936-936"];
m1_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="return propertyName;", span="932-932"];
m1_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="return Convert.ToString(key, CultureInfo.InvariantCulture);", span="926-926"];
m1_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="return key.ToString();", span="937-937"];
m1_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="escape = false", span="909-909"];
m1_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="return sw.ToString();", span="912-912"];
m1_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="escape = false", span="917-917"];
m1_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="escape = true", span="925-925"];
m1_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="return sw.ToString();", span="920-920"];
m1_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="string propertyName", span="902-902"];
m1_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTime || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeNullable", span="907-907"];
m1_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeOffset || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeOffsetNullable", span="915-915"];
m1_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="910-910"];
m1_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonReader.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="918-918"];
m1_391 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="1009-1009"];
m1_383 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="SetPostValueState(updateIndex)", span="991-991"];
m1_384 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="949-949"];
m1_385 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="1021-1021"];
m1_387 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="998-998"];
m1_389 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="SetFinished()", span="1004-1004"];
m1_390 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label=updateIndex, span="1007-1007"];
m1_392 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="996-996"];
m1_81 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="JsonReader.cs", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
m1_381 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Raw", span="989-989"];
m1_386 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="996-996"];
m1_388 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="_currentState = State.PostValue", span="1000-1000"];
m1_393 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetFinished()", span="1066-1066"];
m1_382 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Bytes", span="990-990"];
m1_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonReader.cs", label="return false;", span="438-438"];
m1_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="402-402"];
m1_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="954-954"];
m1_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="967-967"];
m1_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label=isReference, span="446-446"];
m1_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="441-441"];
m1_260 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m1_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="writer.WriteStartObject()", span="443-443"];
m1_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="bool isReference = ResolveIsReference(contract, member, collectionContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="445-445"];
m1_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, value)", span="448-448"];
m1_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionContract, containerProperty)", span="450-450"];
m1_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="452-452"];
m1_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="456-456"];
m1_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonReader.cs", label="string reference = GetReference(writer, value)", span="458-458"];
m1_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="460-460"];
m1_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, type)), null)", span="461-461"];
m1_167 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label=t, span="614-614"];
m1_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="int index = 0", span="722-722"];
m1_234 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return null;", span="730-730"];
m1_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonReader.cs", label="ClearErrorContext()", span="943-943"];
m1_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonReader.cs", label="writer.WriteState == WriteState.Property", span="945-945"];
m1_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonReader.cs", label="writer.WriteNull()", span="946-946"];
m1_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonReader.cs", label="writer.Top > initialDepth", span="948-948"];
m1_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonReader.cs", label="writer.WriteEnd()", span="950-950"];
m1_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="941-941"];
m1_12 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="351-351"];
m1_47 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410"];
m1_51 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label=t, span="420-420"];
m1_55 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return null;", span="425-425"];
m1_56 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Integer", span="426-426"];
m1_58 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="!(Value is int)", span="428-428"];
m1_60 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return (int)Value;", span="433-433"];
m1_63 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return ReadInt32String(s);", span="436-436"];
m1_65 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading integer. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="439-439"];
m1_67 [cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0"];
m1_69 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="442-442"];
m1_42 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m1_43 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition()", span="41-41"];
m1_49 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="416-416"];
m1_53 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Null", span="423-423"];
m1_62 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="string s = (string)Value", span="435-435"];
m1_48 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Read()", span="410-410"];
m1_50 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="418-418"];
m1_54 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.EndArray", span="424-424"];
m1_57 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Float", span="427-427"];
m1_59 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="SetToken(JsonToken.Integer, Convert.ToInt32(Value, CultureInfo.InvariantCulture), false)", span="430-430"];
m1_64 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsInt32()", span="416-416"];
m1_66 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetContentToken()", span="1153-1153"];
m1_68 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="949-949"];
m1_52 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.None", span="422-422"];
m1_61 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.String", span="434-434"];
m1_70 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="444-444"];
m1_75 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.Integer, i, false)", span="453-453"];
m1_304 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="848-848"];
m1_305 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="827-827"];
m1_306 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m1_323 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="!Read()", span="880-880"];
m1_324 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="throw CreateUnexpectedEndException();", span="882-882"];
m1_303 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="return ReadDateTimeOffsetString(s);", span="846-846"];
m1_321 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="437-437"];
m1_322 [cluster="System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", file="JsonReader.cs", label="Entry System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", span="0-0"];
m1_302 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="string s = (string)Value", span="845-845"];
m1_325 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="878-878"];
m1_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="198-198"];
m1_231 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.None", span="727-727"];
m1_236 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Float", span="732-732"];
m1_238 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(Value, CultureInfo.InvariantCulture), false)", span="735-735"];
m1_240 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.String", span="739-739"];
m1_241 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return ReadDecimalString((string)Value);", span="740-740"];
m1_242 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="721-721"];
m1_246 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="748-748"];
m1_237 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="!(Value is decimal)", span="733-733"];
m1_254 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to decimal: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="763-763"];
m1_239 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return (decimal)Value;", span="738-738"];
m1_243 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading decimal. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="743-743"];
m1_245 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="746-746"];
m1_247 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="750-750"];
m1_248 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="return null;", span="751-751"];
m1_252 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="return d;", span="758-758"];
m1_249 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="decimal d", span="754-754"];
m1_250 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="decimal.TryParse(s, NumberStyles.Number, Culture, out d)", span="755-755"];
m1_255 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="746-746"];
m1_253 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="762-762"];
m1_251 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="757-757"];
m1_515 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JsonReader.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m1_9 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_floatParseHandling = FloatParseHandling.Double", span="346-346"];
m1_397 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonContainerType currentObject = Pop()", span="1023-1023"];
m1_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="ShouldWriteReference(value, null, contract, collectionContract, containerProperty)", span="495-495"];
m1_235 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Integer", span="731-731"];
m1_73 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="int i", span="450-450"];
m1_290 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="827-827"];
m1_291 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="829-829"];
m1_293 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.None", span="833-833"];
m1_294 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.Null", span="834-834"];
m1_295 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.EndArray", span="835-835"];
m1_296 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="return null;", span="836-836"];
m1_297 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.Date", span="837-837"];
m1_298 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Value is DateTime", span="838-838"];
m1_299 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="SetToken(JsonToken.Date, new DateTimeOffset((DateTime)Value), false)", span="840-840"];
m1_292 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label=t, span="831-831"];
m1_300 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="return (DateTimeOffset)Value;", span="843-843"];
m1_38 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_maxDepth != null && Depth <= _maxDepth", span="393-393"];
m1_275 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="return null;", span="801-801"];
m1_276 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTime dt", span="804-804"];
m1_277 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTimeUtils.TryParseDateTime(s, DateTimeZoneHandling, _dateFormatString, Culture, out dt)", span="805-805"];
m1_279 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="808-808"];
m1_278 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="807-807"];
m1_280 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="return dt;", span="809-809"];
m1_82 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="467-467"];
m1_26 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_29 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m1_27 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_28 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m1_30 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Pop()", span="378-378"];
m1_31 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="JsonPosition oldPosition", span="380-380"];
m1_32 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack != null && _stack.Count > 0", span="381-381"];
m1_34 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = _stack[_stack.Count - 1]", span="384-384"];
m1_33 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="383-383"];
m1_35 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="385-385"];
m1_230 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label=t, span="725-725"];
m1_188 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="646-646"];
m1_400 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="405-405"];
m1_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="OnSerializing(writer, contract, value)", span="715-715"];
m1_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="_serializeStack.Add(value)", span="716-716"];
m1_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="718-718"];
m1_166 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="612-612"];
m1_169 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Null", span="617-617"];
m1_170 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.EndArray", span="618-618"];
m1_172 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Integer", span="620-620"];
m1_171 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="return null;", span="619-619"];
m1_173 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Float", span="621-621"];
m1_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonReader.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName, false)", span="463-463"];
m1_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonReader.cs", label="writer.WriteValue(reference)", span="464-464"];
m1_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="483-483"];
m1_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="456-456"];
m1_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonReader.cs", label="return ((value & flag) == flag);", span="480-480"];
m1_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="478-478"];
m1_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonReader.cs", label="return ((value & flag) == flag);", span="485-485"];
m1_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="488-488"];
m1_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="writer.WriteEndObject()", span="782-782"];
m1_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="784-784"];
m1_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="OnSerialized(writer, contract, value)", span="785-785"];
m1_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="713-713"];
m1_121 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="byte[] data", span="544-544"];
m1_156 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="buffer.Add(Convert.ToByte(Value, CultureInfo.InvariantCulture))", span="594-594"];
m1_71 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="446-446"];
m1_113 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="525-525"];
m1_114 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="TokenType != JsonToken.EndObject", span="527-527"];
m1_116 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="532-532"];
m1_115 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="529-529"];
m1_117 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="533-533"];
m1_118 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label=t, span="536-536"];
m1_119 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.String", span="538-538"];
m1_155 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="JsonToken.Integer", span="593-593"];
m1_40 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="return oldPosition.Type;", span="398-398"];
m1_187 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="double.TryParse(s, NumberStyles.Float | NumberStyles.AllowThousands, Culture, out d)", span="644-644"];
m1_153 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="JsonToken.None", span="591-591"];
m1_13 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="353-353"];
m1_14 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition.Type == JsonContainerType.None", span="355-355"];
m1_15 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="357-357"];
m1_16 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack == null", span="361-361"];
m1_17 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack = new List<JsonPosition>()", span="363-363"];
m1_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="OnSerializing(writer, contract, values)", span="578-578"];
m1_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="_serializeStack.Add(values)", span="580-580"];
m1_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="582-582"];
m1_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="OnSerialized(writer, contract, values)", span="591-591"];
m1_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, new int[0])", span="584-584"];
m1_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label=hasWrittenMetadataObject, span="586-586"];
m1_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="writer.WriteEndObject()", span="587-587"];
m1_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="589-589"];
m1_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576"];
m1_528 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="423-423"];
m1_72 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="return null;", span="447-447"];
m1_39 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_hasExceededMaxDepth = false", span="395-395"];
m1_110 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="TokenType == JsonToken.StartObject", span="520-520"];
m1_541 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="974-974"];
m1_542 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''IsSpecified result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, isSpecified)), null)", span="975-975"];
m1_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="bool isSpecified = property.GetIsSpecified(target)", span="972-972"];
m1_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="return isSpecified;", span="977-977"];
m1_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="property.GetIsSpecified == null", span="969-969"];
m1_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="return true;", span="970-970"];
m1_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="967-967"];
m1_301 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.String", span="844-844"];
m1_80 [cluster="string.IsNullOrEmpty(string)", file="JsonReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_411 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Array", span="1052-1052"];
m1_413 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Constructor", span="1055-1055"];
m1_415 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.None", span="1058-1058"];
m1_416 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="SetFinished()", span="1059-1059"];
m1_422 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetFinished()", span="1066-1066"];
m1_423 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="1080-1080"];
m1_424 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndObject", span="1082-1082"];
m1_427 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Array;", span="1085-1085"];
m1_429 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Constructor;", span="1087-1087"];
m1_430 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Not a valid close JsonToken: {0}''.FormatWith(CultureInfo.InvariantCulture, token));", span="1089-1089"];
m1_404 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="1078-1078"];
m1_407 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType currentObject = Peek()", span="1045-1045"];
m1_410 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Object", span="1050-1050"];
m1_412 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Array", span="1053-1053"];
m1_406 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1043-1043"];
m1_414 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Constructor", span="1056-1056"];
m1_418 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1043-1043"];
m1_417 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''While setting the reader state back to current object an unexpected JsonType was encountered: {0}''.FormatWith(CultureInfo.InvariantCulture, currentObject));", span="1062-1062"];
m1_421 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Finished", span="1074-1074"];
m1_419 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label=SupportMultipleContent, span="1068-1068"];
m1_425 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Object;", span="1083-1083"];
m1_428 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="1086-1086"];
m1_426 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndArray", span="1084-1084"];
m1_431 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="1078-1078"];
m1_408 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label=currentObject, span="1047-1047"];
m1_409 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Object", span="1049-1049"];
m1_420 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Start", span="1070-1070"];
m1_79 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="442-442"];
m1_464 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="1160-1160"];
m1_465 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="return JsonToken.None;", span="1161-1161"];
m1_466 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="t = TokenType", span="1165-1165"];
m1_468 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="return t;", span="1169-1169"];
m1_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Newtonsoft.Json.JsonReader", span=""];
m1_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="string propertyName = GetPropertyName(writer, entry, contract.KeyContract, out escape)", span="856-856"];
m1_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="865-865"];
m1_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="867-867"];
m1_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="WriteReference(writer, value)", span="870-870"];
m1_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="874-874"];
m1_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="879-879"];
m1_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="IsErrorHandled(underlyingDictionary, contract, propertyName, null, writer.ContainerPath, ex)", span="884-884"];
m1_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="HandleError(writer, initialDepth)", span="885-885"];
m1_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="893-893"];
m1_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="OnSerialized(writer, contract, underlyingDictionary)", span="895-895"];
m1_463 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="!Read()", span="1158-1158"];
m1_467 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="t == JsonToken.Comment", span="1167-1167"];
m1_469 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetContentToken()", span="1153-1153"];
m1_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="int initialDepth = writer.Top", span="851-851"];
m1_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label=values, span="853-853"];
m1_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="bool escape", span="855-855"];
m1_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="propertyName = (contract.PropertyNameResolver != null)\r\n                         ? contract.PropertyNameResolver(propertyName)\r\n                         : propertyName", span="858-860"];
m1_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="writer.WritePropertyName(propertyName, escape)", span="869-869"];
m1_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="writer.WritePropertyName(propertyName, escape)", span="877-877"];
m1_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="object value = entry.Value", span="864-864"];
m1_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label=Exception, span="882-882"];
m1_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="throw;", span="887-887"];
m1_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="writer.WriteEndObject()", span="891-891"];
m1_462 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="JsonToken t", span="1155-1155"];
m1_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="835-835"];
m1_229 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="723-723"];
m1_233 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.EndArray", span="729-729"];
m1_197 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.None", span="666-666"];
m1_203 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="bool b", span="672-672"];
m1_204 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="Value is BigInteger", span="674-674"];
m1_205 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="b = (BigInteger)Value != 0", span="676-676"];
m1_206 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="681-681"];
m1_168 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.None", span="616-616"];
m1_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="101-101"];
m1_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="961-961"];
m1_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''ShouldSerialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldSerialize)), null)", span="962-962"];
m1_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="bool shouldSerialize = property.ShouldSerialize(target)", span="959-959"];
m1_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="return shouldSerialize;", span="964-964"];
m1_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="property.ShouldSerialize == null", span="956-956"];
m1_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="return true;", span="957-957"];
m1_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="954-954"];
m1_437 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85"];
m1_23 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="351-351"];
m1_207 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="SetToken(JsonToken.Boolean, b, false)", span="684-684"];
m1_157 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="JsonToken.EndArray", span="596-596"];
m1_158 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="byte[] d = buffer.ToArray()", span="597-597"];
m1_159 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, d, false)", span="598-598"];
m1_160 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="return d;", span="599-599"];
m1_163 [cluster="System.Convert.ToByte(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToByte(object, System.IFormatProvider)", span="0-0"];
m1_161 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected token when reading bytes: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="601-601"];
m1_162 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="582-582"];
m1_165 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDouble()", span="610-610"];
m1_37 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = new JsonPosition()", span="390-390"];
m1_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="488-488"];
m1_76 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="return i;", span="454-454"];
m1_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="valueContract.ContractType == JsonContractType.Array", span="197-197"];
m1_232 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Null", span="728-728"];
m1_366 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndObject)", span="969-969"];
m1_152 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label=t, span="589-589"];
m1_365 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndObject", span="968-968"];
m1_536 [cluster="System.Predicate<T>.Invoke(T)", file="JsonReader.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m1_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="346-346"];
m1_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="346-346"];
m1_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="348-348"];
m1_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="349-349"];
m1_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonReader.cs", label="contract.InvokeOnSerializing(value, Serializer._context)", span="351-351"];
m1_202 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="334-334"];
m1_18 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack.Add(_currentPosition)", span="366-366"];
m1_10 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m1_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="77-77"];
m1_96 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Value is Uri", span="490-490"];
m1_101 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading string. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="504-504"];
m1_108 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="t == JsonToken.None", span="515-515"];
m1_99 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="499-499"];
m1_102 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsString()", span="467-467"];
m1_106 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="511-511"];
m1_97 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="s = ((Uri)Value).OriginalString", span="492-492"];
m1_100 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="return s;", span="500-500"];
m1_107 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="513-513"];
m1_98 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="s = Value.ToString()", span="496-496"];
m1_109 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return null;", span="517-517"];
m1_287 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="364-364"];
m1_519 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m1_41 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Pop()", span="378-378"];
m1_111 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="865-865"];
m1_112 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", span="54-54"];
m1_516 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="380-380"];
m1_21 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_hasExceededMaxDepth = true", span="372-372"];
m1_19 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="367-367"];
m1_20 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_maxDepth != null && Depth + 1 > _maxDepth && !_hasExceededMaxDepth", span="370-370"];
m1_22 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''The reader's MaxDepth of {0} has been exceeded.''.FormatWith(CultureInfo.InvariantCulture, _maxDepth));", span="373-373"];
m1_83 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="385-385"];
m1_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="166-166"];
m1_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference = collectionContract.ItemIsReference", span="178-178"];
m1_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="bool? isReference = null", span="168-168"];
m1_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference = containerProperty.ItemIsReference", span="175-175"];
m1_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="property != null", span="171-171"];
m1_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference = property.IsReference", span="172-172"];
m1_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference == null && containerProperty != null", span="174-174"];
m1_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference == null && collectionContract != null", span="177-177"];
m1_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference == null", span="180-180"];
m1_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="isReference = contract.IsReference", span="181-181"];
m1_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="return isReference;", span="183-183"];
m1_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="166-166"];
m1_518 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="512-512"];
m1_537 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m1_545 [file="JsonReader.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
m2_80 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="214-214"];
m2_117 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="string isoDateFormat = ''yyyy-MM-ddTHH:mm:ss.FFFFFFFK''", span="216-216"];
m2_118 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="dateParseHandling == DateParseHandling.DateTimeOffset", span="219-219"];
m2_120 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="DateTimeOffset.TryParseExact(text, isoDateFormat, CultureInfo.InvariantCulture, DateTimeStyles.RoundtripKind, out dateTimeOffset)", span="222-222"];
m2_124 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="DateTime.TryParseExact(text, isoDateFormat, CultureInfo.InvariantCulture, DateTimeStyles.RoundtripKind, out dateTime)", span="232-232"];
m2_125 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="dateTime = DateTimeUtils.EnsureDateTime(dateTime, dateTimeZoneHandling)", span="234-234"];
m2_119 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="DateTimeOffset dateTimeOffset", span="221-221"];
m2_123 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="DateTime dateTime", span="231-231"];
m2_121 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="dt = dateTimeOffset", span="224-224"];
m2_128 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="dt = null", span="241-241"];
m2_122 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="return true;", span="225-225"];
m2_126 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="dt = dateTime", span="236-236"];
m2_127 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="return true;", span="237-237"];
m2_129 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="return false;", span="242-242"];
m2_130 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="214-214"];
m2_70 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string)", span="156-156"];
m2_83 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="object oldDt", span="160-160"];
m2_84 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="TryParseDateIso(text, DateParseHandling.DateTime, DateTimeZoneHandling.RoundtripKind, out oldDt)", span="161-161"];
m2_85 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(text, oldDt)", span="163-163"];
m2_86 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string)", span="156-156"];
m2_16 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateIso(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="189-189"];
m2_28 [cluster="Unk.IsTrue", file="JsonSerializerCollectionsTests.cs", label="Entry Unk.IsTrue", span=""];
m2_131 [cluster="System.DateTimeOffset.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTimeOffset.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", span="0-0"];
m2_26 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m2_13 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m2_109 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", span="196-196"];
m2_110 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="object oldDt", span="198-198"];
m2_112 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="TryParseDateIso(text, DateParseHandling.DateTimeOffset, DateTimeZoneHandling.Unspecified, out oldDt)", span="200-200"];
m2_113 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="DateTimeUtils.TryParseDateIso(text, DateParseHandling.DateTimeOffset, DateTimeZoneHandling.Unspecified, out newDt)", span="201-201"];
m2_115 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(oldDt, newDt, ''DateTimeOffset parse not equal. Text: '{0}' Old ticks: {1} New ticks: {2}''.FormatWith(\r\n                    CultureInfo.InvariantCulture,\r\n                    text,\r\n                    ((DateTime)oldDt).Ticks,\r\n                    ((DateTime)newDt).Ticks))", span="205-209"];
m2_111 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="object newDt", span="199-199"];
m2_114 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="!Equals(oldDt, newDt)", span="203-203"];
m2_116 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeOffsetParseEqual(string)", span="196-196"];
m2_87 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", span="168-168"];
m2_88 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''0001-01-01T00:00:00'')", span="170-170"];
m2_89 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03.055Z'')", span="172-172"];
m2_90 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03.055'')", span="173-173"];
m2_91 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03.055+00:00'')", span="174-174"];
m2_92 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03.055+13:30'')", span="175-175"];
m2_93 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03.055-13:30'')", span="176-176"];
m2_94 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03Z'')", span="178-178"];
m2_95 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03'')", span="179-179"];
m2_96 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03+00:00'')", span="180-180"];
m2_97 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03+13:30'')", span="181-181"];
m2_98 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''2000-12-15T22:11:03-13:30'')", span="182-182"];
m2_99 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''0001-01-01T00:00:00Z'')", span="184-184"];
m2_100 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''0001-01-01T00:00:00+00:00'')", span="185-185"];
m2_101 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''0001-01-01T00:00:00+13:30'')", span="186-186"];
m2_102 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''0001-01-01T00:00:00-13:30'')", span="187-187"];
m2_103 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''9999-12-31T23:59:59.9999999Z'')", span="189-189"];
m2_104 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''9999-12-31T23:59:59.9999999'')", span="190-190"];
m2_105 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''9999-12-31T23:59:59.9999999+00:00'')", span="191-191"];
m2_106 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''9999-12-31T23:59:59.9999999+13:30'')", span="192-192"];
m2_107 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeOffsetParseEqual(''9999-12-31T23:59:59.9999999-13:30'')", span="193-193"];
m2_108 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeOffsetParse()", span="168-168"];
m2_27 [cluster="System.Console.WriteLine(string)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_14 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="421-421"];
m2_17 [cluster="Unk.AreEqual", file="JsonSerializerCollectionsTests.cs", label="Entry Unk.AreEqual", span=""];
m2_0 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundTripDateTimeMinAndMax()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundTripDateTimeMinAndMax()", span="49-49"];
m2_1 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundTripDateTimeMinAndMax()", file="JsonSerializerCollectionsTests.cs", label="RoundtripDateIso(DateTime.MinValue)", span="51-51"];
m2_2 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundTripDateTimeMinAndMax()", file="JsonSerializerCollectionsTests.cs", label="RoundtripDateIso(DateTime.MaxValue)", span="52-52"];
m2_3 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundTripDateTimeMinAndMax()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundTripDateTimeMinAndMax()", span="49-49"];
m2_81 [cluster="object.Equals(object, object)", file="JsonSerializerCollectionsTests.cs", label="Entry object.Equals(object, object)", span="0-0"];
m2_15 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m2_4 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", span="55-55"];
m2_5 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="StringWriter sw = new StringWriter()", span="57-57"];
m2_6 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="DateTimeUtils.WriteDateTimeString(sw, value, DateFormatHandling.IsoDateFormat, null, CultureInfo.InvariantCulture)", span="58-58"];
m2_11 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(value, parsedDt)", span="65-65"];
m2_7 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="string minDateText = sw.ToString()", span="59-59"];
m2_8 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="object dt", span="61-61"];
m2_9 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="DateTimeUtils.TryParseDateIso(minDateText, DateParseHandling.DateTime, DateTimeZoneHandling.RoundtripKind, out dt)", span="62-62"];
m2_10 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="DateTime parsedDt = (DateTime)dt", span="64-64"];
m2_12 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.RoundtripDateIso(System.DateTime)", span="55-55"];
m2_18 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", span="69-69"];
m2_19 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="string text = ''2000-12-15T22:11:03.055+23:30''", span="71-71"];
m2_20 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="DateTime oldDt", span="73-73"];
m2_21 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="bool success = DateTime.TryParseExact(text, ''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'', CultureInfo.InvariantCulture, DateTimeStyles.RoundtripKind, out oldDt)", span="74-74"];
m2_22 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="Console.WriteLine(''Success: '' + success)", span="76-76"];
m2_23 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="Console.WriteLine(''DateTime: '' + oldDt)", span="77-77"];
m2_24 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(success)", span="79-79"];
m2_25 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.FailingDateTimeParse()", span="69-69"];
m2_82 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonSerializerCollectionsTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m2_29 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", span="83-83"];
m2_30 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''999x-12-31T23:59:59'')", span="85-85"];
m2_31 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999x12-31T23:59:59'')", span="86-86"];
m2_32 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-1x-31T23:59:59'')", span="87-87"];
m2_33 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12x31T23:59:59'')", span="88-88"];
m2_34 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-3xT23:59:59'')", span="89-89"];
m2_35 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31x23:59:59'')", span="90-90"];
m2_36 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T2x:59:59'')", span="91-91"];
m2_37 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23x59:59'')", span="92-92"];
m2_38 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:5x:59'')", span="93-93"];
m2_39 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59x59'')", span="94-94"];
m2_40 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:5x'')", span="95-95"];
m2_41 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:5'')", span="96-96"];
m2_42 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.x'')", span="97-97"];
m2_43 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.99999999'')", span="98-98"];
m2_44 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03.055Z'')", span="101-101"];
m2_45 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03.055'')", span="102-102"];
m2_46 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03.055+00:00'')", span="103-103"];
m2_47 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03.055+23:30'')", span="104-104"];
m2_48 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03.055-23:30'')", span="105-105"];
m2_49 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03.055+11:30'')", span="106-106"];
m2_50 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03.055-11:30'')", span="107-107"];
m2_51 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03Z'')", span="109-109"];
m2_52 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03'')", span="110-110"];
m2_53 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03+00:00'')", span="111-111"];
m2_54 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03+23:30'')", span="112-112"];
m2_55 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03-23:30'')", span="113-113"];
m2_56 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03+11:30'')", span="114-114"];
m2_57 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''2000-12-15T22:11:03-11:30'')", span="115-115"];
m2_58 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''0001-01-01T00:00:00Z'')", span="117-117"];
m2_59 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''0001-01-01T00:00:00'')", span="118-118"];
m2_60 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''0001-01-01T00:00:00-23:30'')", span="121-121"];
m2_61 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''0001-01-01T00:00:00-12:00'')", span="123-123"];
m2_62 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.9999999Z'')", span="125-125"];
m2_63 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.9999999'')", span="126-126"];
m2_64 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.9999999+00:00'', DateTime.MaxValue)", span="127-127"];
m2_65 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.9999999+23:30'')", span="128-128"];
m2_66 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.9999999-23:30'', DateTime.MaxValue)", span="129-129"];
m2_67 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.9999999+11:30'', DateTime.MaxValue)", span="130-130"];
m2_68 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="AssertNewDateTimeParseEqual(''9999-12-31T23:59:59.9999999-11:30'', DateTime.MaxValue)", span="131-131"];
m2_69 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.NewDateTimeParse()", span="83-83"];
m2_71 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", span="134-134"];
m2_72 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="object oldDt", span="136-136"];
m2_73 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="TryParseDateIso(text, DateParseHandling.DateTime, DateTimeZoneHandling.RoundtripKind, out oldDt)", span="137-137"];
m2_76 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="DateTimeUtils.TryParseDateIso(text, DateParseHandling.DateTime, DateTimeZoneHandling.RoundtripKind, out newDt)", span="143-143"];
m2_77 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="!Equals(oldDate, newDt)", span="145-145"];
m2_78 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(oldDate, newDt, ''DateTime parse not equal. Text: '{0}' Old ticks: {1} New ticks: {2}''.FormatWith(\r\n                    CultureInfo.InvariantCulture,\r\n                    text,\r\n                    oldDate != null ? ((DateTime)oldDate).Ticks : (long?)null,\r\n                    newDt != null ? ((DateTime)newDt).Ticks : (long?)null\r\n                    ))", span="147-152"];
m2_74 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="oldDate = oldDt", span="139-139"];
m2_75 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="object newDt", span="142-142"];
m2_79 [cluster="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests.AssertNewDateTimeParseEqual(string, object)", span="134-134"];
m2_132 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76"];
m2_133 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", span=""];
m3_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", span="190-190"];
m3_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonTextReader.cs", label="_formatterConverter == null", span="192-192"];
m3_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonTextReader.cs", label="_formatterConverter = new JsonFormatterConverter(GetInternalSerializer())", span="193-193"];
m3_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonTextReader.cs", label="return _formatterConverter;", span="195-195"];
m3_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", span="190-190"];
m3_827 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54"];
m3_39 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="140-140"];
m3_460 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
m3_632 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="258-258"];
m3_759 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", span="105-105"];
m3_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="220-220"];
m3_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="222-222"];
m3_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="230-230"];
m3_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="writer.WriteToken(reader, reader.Depth - 1, true, true)", span="231-231"];
m3_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="JToken token", span="225-225"];
m3_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="226-226"];
m3_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="writer.WriteStartObject()", span="228-228"];
m3_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="writer.WriteEndObject()", span="233-233"];
m3_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="token = writer.Token", span="235-235"];
m3_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="return token;", span="238-238"];
m3_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="220-220"];
m3_951 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", span="1760-1760"];
m3_960 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="contract.ExtensionDataSetter != null", span="1762-1762"];
m3_961 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="JToken extensionDataValue = JToken.ReadFrom(reader)", span="1766-1766"];
m3_962 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="contract.ExtensionDataSetter(o, memberName, extensionDataValue)", span="1768-1768"];
m3_964 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Error setting value in extension data for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType), ex);", span="1772-1772"];
m3_965 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="reader.Skip()", span="1777-1777"];
m3_963 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label=Exception, span="1770-1770"];
m3_966 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.JsonReader, string, object)", span="1760-1760"];
m3_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="1588-1588"];
m3_863 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label=hasConverter, span="1592-1592"];
m3_864 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="return reader.Read();", span="1593-1593"];
m3_865 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="ReadType t = (contract != null) ? contract.InternalReadType : ReadType.Read", span="1595-1595"];
m3_868 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="!reader.Read()", span="1602-1602"];
m3_870 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.Comment", span="1604-1604"];
m3_873 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="reader.ReadAsInt32()", span="1608-1608"];
m3_875 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="1611-1611"];
m3_877 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="reader.ReadAsBytes()", span="1614-1614"];
m3_879 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="reader.ReadAsString()", span="1617-1617"];
m3_881 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="reader.ReadAsDateTime()", span="1620-1620"];
m3_883 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="1624-1624"];
m3_885 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="return (reader.TokenType != JsonToken.None);", span="1631-1631"];
m3_866 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label=t, span="1597-1597"];
m3_867 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="ReadType.Read", span="1599-1599"];
m3_872 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="ReadType.ReadAsInt32", span="1607-1607"];
m3_874 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="ReadType.ReadAsDecimal", span="1610-1610"];
m3_876 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="ReadType.ReadAsBytes", span="1613-1613"];
m3_878 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="ReadType.ReadAsString", span="1616-1616"];
m3_880 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="ReadType.ReadAsDateTime", span="1619-1619"];
m3_882 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="ReadType.ReadAsDateTimeOffset", span="1623-1623"];
m3_884 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="throw new ArgumentOutOfRangeException();", span="1628-1628"];
m3_869 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="return false;", span="1603-1603"];
m3_871 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="return true;", span="1606-1606"];
m3_886 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="1588-1588"];
m3_805 [cluster="Unk.ToDictionary", file="JsonTextReader.cs", label="Entry Unk.ToDictionary", span=""];
m3_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="133-133"];
m3_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="reader == null", span="135-135"];
m3_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="JsonContract contract = GetContractSafe(objectType)", span="138-138"];
m3_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.None && !ReadForType(reader, contract, converter != null)", span="144-144"];
m3_54 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''No JSON content found and type '{0}' is not nullable.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="147-147"];
m3_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="deserializedValue = DeserializeConvertable(converter, reader, objectType, null)", span="155-155"];
m3_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="deserializedValue = CreateValueInternal(reader, objectType, contract, null, null, null, null)", span="157-157"];
m3_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label=checkAdditionalContent, span="159-159"];
m3_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="161-161"];
m3_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="IsErrorHandled(null, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="169-169"];
m3_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="HandleError(reader, false, 0)", span="171-171"];
m3_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="throw new ArgumentNullException(''reader'');", span="136-136"];
m3_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="JsonConverter converter = GetConverter(contract, null, null, null)", span="142-142"];
m3_53 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="contract != null && !contract.IsNullable", span="146-146"];
m3_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="converter != null && converter.CanRead", span="154-154"];
m3_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="object deserializedValue", span="152-152"];
m3_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="return null;", span="149-149"];
m3_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="return deserializedValue;", span="165-165"];
m3_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="162-162"];
m3_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label=Exception, span="167-167"];
m3_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="throw;", span="176-176"];
m3_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="return null;", span="172-172"];
m3_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="133-133"];
m3_38 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonTextReader.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m3_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="1504-1504"];
m3_820 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1506-1506"];
m3_821 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="1507-1507"];
m3_822 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="object value = converter.ReadJson(reader, objectType, existingValue, GetInternalSerializer())", span="1509-1509"];
m3_824 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="1512-1512"];
m3_823 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1511-1511"];
m3_825 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="return value;", span="1514-1514"];
m3_826 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="1504-1504"];
m3_628 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m3_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="208-208"];
m3_394 [cluster="System.Enum.ToObject(System.Type, object)", file="JsonTextReader.cs", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
m3_458 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="869-869"];
m3_952 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1826-1826"];
m3_990 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="property != null && requiredProperties != null", span="1828-1828"];
m3_991 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="requiredProperties[property] = (reader.TokenType == JsonToken.Null || reader.TokenType == JsonToken.Undefined)\r\n          ? PropertyPresence.Null\r\n          : PropertyPresence.Value", span="1830-1832"];
m3_992 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1826-1826"];
m3_459 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="167-167"];
m3_456 [cluster="System.Type.IsValueType()", file="JsonTextReader.cs", label="Entry System.Type.IsValueType()", span="522-522"];
m3_37 [cluster="object.ToString()", file="JsonTextReader.cs", label="Entry object.ToString()", span="0-0"];
m3_455 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonTextReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m3_468 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="61-61"];
m3_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="830-830"];
m3_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="834-834"];
m3_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Read object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, id, value.GetType())), null)", span="835-835"];
m3_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Serializer.GetReferenceResolver().AddReference(this, id, value)", span="837-837"];
m3_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Error reading object reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, id), ex);", span="841-841"];
m3_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label=Exception, span="839-839"];
m3_467 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="830-830"];
m3_630 [cluster="System.Collections.Generic.Stack<T>.Peek()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0"];
m3_314 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38"];
m3_251 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="JsonTextReader.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m3_713 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m3_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="845-845"];
m3_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonTextReader.cs", label="return ((value & flag) == flag);", span="847-847"];
m3_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="845-845"];
m3_36 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="597-597"];
m3_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="!reader.Read()", span="599-599"];
m3_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="600-600"];
m3_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="597-597"];
m3_395 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="324-324"];
m3_157 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m3_891 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="362-362"];
m3_254 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonTextReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m3_71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="323-323"];
m3_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="JsonConverter converter = null", span="325-325"];
m3_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="memberConverter != null", span="326-326"];
m3_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = memberConverter", span="329-329"];
m3_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="containerProperty != null && containerProperty.ItemConverter != null", span="331-331"];
m3_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = containerProperty.ItemConverter", span="333-333"];
m3_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="containerContract != null && containerContract.ItemConverter != null", span="335-335"];
m3_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = containerContract.ItemConverter", span="337-337"];
m3_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="contract != null", span="339-339"];
m3_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="contract.Converter != null", span="342-342"];
m3_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = contract.Converter", span="344-344"];
m3_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="345-345"];
m3_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="contract.InternalConverter != null", span="348-348"];
m3_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = contract.InternalConverter", span="350-350"];
m3_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="return converter;", span="352-352"];
m3_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="JsonConverter matchingConverter", span="341-341"];
m3_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = matchingConverter", span="347-347"];
m3_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="323-323"];
m3_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="199-199"];
m3_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="201-201"];
m3_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="contract != null && contract.UnderlyingType == typeof (JRaw)", span="203-203"];
m3_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return JRaw.Create(reader);", span="205-205"];
m3_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="writer.WriteToken(reader)", span="212-212"];
m3_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JToken token", span="209-209"];
m3_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="210-210"];
m3_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="token = writer.Token", span="213-213"];
m3_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return token;", span="216-216"];
m3_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="199-199"];
m3_391 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="136-136"];
m3_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1333-1333"];
m3_714 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IDynamicMetaObjectProvider newObject", span="1335-1335"];
m3_715 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!contract.IsInstantiable", span="1337-1337"];
m3_716 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1338-1338"];
m3_717 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.DefaultCreator != null &&\r\n        (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1340-1341"];
m3_718 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="newObject = (IDynamicMetaObjectProvider) contract.DefaultCreator()", span="1342-1342"];
m3_719 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1344-1344"];
m3_720 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="1346-1346"];
m3_721 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, newObject)", span="1347-1347"];
m3_722 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, newObject)", span="1349-1349"];
m3_723 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="1351-1351"];
m3_725 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1356-1356"];
m3_727 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="string memberName = reader.Value.ToString()", span="1359-1359"];
m3_728 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!reader.Read()", span="1363-1363"];
m3_729 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1364-1364"];
m3_730 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1367-1367"];
m3_735 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!SetPropertyValue(property, propertyConverter, null, member, reader, newObject)", span="1376-1376"];
m3_736 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.Skip()", span="1377-1377"];
m3_737 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Type t = (JsonReader.IsPrimitiveToken(reader.TokenType)) ? reader.ValueType : typeof (IDynamicMetaObjectProvider)", span="1381-1381"];
m3_739 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter dynamicMemberConverter = GetConverter(dynamicMemberContract, null, null, member)", span="1384-1384"];
m3_742 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = DeserializeConvertable(dynamicMemberConverter, reader, t, null)", span="1388-1388"];
m3_743 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = CreateValueInternal(reader, t, dynamicMemberContract, null, null, member, null)", span="1390-1390"];
m3_744 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.TrySetMember(newObject, memberName, value)", span="1392-1392"];
m3_746 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1397-1397"];
m3_747 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1398-1398"];
m3_751 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1407-1407"];
m3_752 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished && reader.Read()", span="1409-1409"];
m3_754 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1412-1412"];
m3_755 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, newObject)", span="1414-1414"];
m3_756 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return newObject;", span="1416-1416"];
m3_724 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="1353-1353"];
m3_726 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.PropertyName", span="1358-1358"];
m3_749 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndObject", span="1403-1403"];
m3_731 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property != null && property.Writable && !property.Ignored", span="1369-1369"];
m3_732 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="1371-1371"];
m3_733 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1372-1372"];
m3_734 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, null, null)", span="1374-1374"];
m3_745 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1395-1395"];
m3_738 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonContract dynamicMemberContract = GetContractSafe(t)", span="1383-1383"];
m3_740 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object value", span="1386-1386"];
m3_741 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="dynamicMemberConverter != null && dynamicMemberConverter.CanRead", span="1387-1387"];
m3_748 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="1400-1400"];
m3_750 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1404-1404"];
m3_753 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1411-1411"];
m3_757 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1333-1333"];
m3_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="1836-1836"];
m3_993 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="ClearErrorContext()", span="1838-1838"];
m3_994 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label=readPastError, span="1840-1840"];
m3_995 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="reader.Skip()", span="1842-1842"];
m3_996 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="reader.Depth > (initialDepth + 1)", span="1844-1844"];
m3_997 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="!reader.Read()", span="1846-1846"];
m3_998 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="1836-1836"];
m3_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1177-1177"];
m3_640 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IWrappedCollection wrappedCollection = list as IWrappedCollection", span="1179-1179"];
m3_641 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : list", span="1180-1180"];
m3_642 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="1182-1182"];
m3_643 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, underlyingList)", span="1183-1183"];
m3_644 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="list.IsFixedSize", span="1186-1186"];
m3_645 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.Skip()", span="1188-1188"];
m3_647 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, underlyingList)", span="1192-1192"];
m3_648 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="1194-1194"];
m3_649 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1196-1196"];
m3_650 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1197-1197"];
m3_653 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1206-1206"];
m3_654 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1208-1208"];
m3_660 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1219-1219"];
m3_661 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1221-1221"];
m3_662 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="list.Add(value)", span="1223-1223"];
m3_664 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1234-1234"];
m3_665 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(underlyingList, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1236-1236"];
m3_666 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1238-1238"];
m3_668 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1244-1244"];
m3_673 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingList, ''Unexpected end when deserializing array.'')", span="1259-1259"];
m3_674 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, underlyingList)", span="1261-1261"];
m3_646 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return underlyingList;", span="1189-1189"];
m3_675 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return underlyingList;", span="1262-1262"];
m3_651 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int? previousErrorIndex = null", span="1199-1199"];
m3_659 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1218-1218"];
m3_652 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="1201-1201"];
m3_667 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1240-1240"];
m3_671 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1256-1256"];
m3_672 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1258-1258"];
m3_655 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndArray", span="1210-1210"];
m3_657 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1213-1213"];
m3_658 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object value", span="1216-1216"];
m3_656 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1211-1211"];
m3_663 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1232-1232"];
m3_669 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex = errorPosition.Position", span="1248-1248"];
m3_670 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="1253-1253"];
m3_676 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1177-1177"];
m3_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="583-583"];
m3_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="contract == null", span="585-585"];
m3_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="586-586"];
m3_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonArrayContract arrayContract = contract as JsonArrayContract", span="588-588"];
m3_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type '{0}' because the type requires a {1} to deserialize correctly.\r\nTo fix this error either change the JSON to a {1} or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\n''.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract)));", span="590-592"];
m3_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="arrayContract == null", span="589-589"];
m3_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return arrayContract;", span="594-594"];
m3_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="583-583"];
m3_102 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="432-432"];
m3_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="125-125"];
m3_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonTextReader.cs", label="type == null", span="127-127"];
m3_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonTextReader.cs", label="return Serializer._contractResolver.ResolveContract(type);", span="130-130"];
m3_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonTextReader.cs", label="return null;", span="128-128"];
m3_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="125-125"];
m3_526 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="367-367"];
m3_887 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="338-338"];
m3_953 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1781-1781"];
m3_968 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="propertiesPresence != null", span="1783-1783"];
m3_969 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label=propertiesPresence, span="1785-1785"];
m3_973 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="Required resolvedRequired = property._required ?? contract.ItemRequired ?? Required.Default", span="1794-1794"];
m3_977 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="1800-1800"];
m3_981 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="property.ValueProvider.SetValue(newObject, EnsureType(reader, property.GetResolvedDefaultValue(), CultureInfo.InvariantCulture, property.PropertyContract, property.PropertyType))", span="1806-1806"];
m3_984 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="1810-1810"];
m3_986 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="IsErrorHandled(newObject, contract, property.PropertyName, reader as IJsonLineInfo, reader.Path, ex)", span="1816-1816"];
m3_987 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1817-1817"];
m3_970 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="JsonProperty property = propertyPresence.Key", span="1787-1787"];
m3_971 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="PropertyPresence presence = propertyPresence.Value", span="1788-1788"];
m3_978 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="1802-1802"];
m3_979 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1803-1803"];
m3_980 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate) && property.Writable", span="1805-1805"];
m3_972 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="presence == PropertyPresence.None || presence == PropertyPresence.Null", span="1790-1790"];
m3_974 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label=presence, span="1796-1796"];
m3_976 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="resolvedRequired == Required.AllowNull || resolvedRequired == Required.Always", span="1799-1799"];
m3_975 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="PropertyPresence.None", span="1798-1798"];
m3_982 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="PropertyPresence.Null", span="1808-1808"];
m3_985 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label=Exception, span="1814-1814"];
m3_988 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="throw;", span="1819-1819"];
m3_989 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1781-1781"];
m3_422 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m3_156 [cluster="System.Convert.FromBase64String(string)", file="JsonTextReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m3_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="939-939"];
m3_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="941-941"];
m3_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="942-942"];
m3_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="contract.InvokeOnDeserialized(value, Serializer._context)", span="944-944"];
m3_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="939-939"];
m3_498 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="209-209"];
m3_70 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_710 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonTextReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m3_809 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m3_393 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="564-564"];
m3_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="866-866"];
m3_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="!contract.CanDeserialize", span="869-869"];
m3_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="870-870"];
m3_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.IsReadOnlyOrFixedSize", span="872-872"];
m3_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="IList list = contract.CreateTemporaryCollection()", span="875-875"];
m3_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.ShouldCreateWrapper", span="877-877"];
m3_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="list = contract.CreateWrapper(list)", span="878-878"];
m3_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="882-882"];
m3_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="object list = contract.DefaultCreator()", span="884-884"];
m3_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.ShouldCreateWrapper", span="886-886"];
m3_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="list = contract.CreateWrapper(list)", span="887-887"];
m3_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.ParametrizedConstructor != null", span="892-892"];
m3_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="return contract.CreateTemporaryCollection();", span="895-895"];
m3_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="899-899"];
m3_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = true", span="874-874"];
m3_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="return list;", span="880-880"];
m3_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="return (IList)list;", span="890-890"];
m3_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = false", span="889-889"];
m3_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = true", span="894-894"];
m3_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="866-866"];
m3_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="673-673"];
m3_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="targetType == null", span="675-675"];
m3_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return value;", span="676-676"];
m3_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="Type valueType = ReflectionUtils.GetObjectType(value)", span="678-678"];
m3_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="valueType != targetType", span="682-682"];
m3_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="value == null && contract.IsNullable", span="684-684"];
m3_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="contract.IsConvertable", span="689-689"];
m3_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="691-691"];
m3_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="contract.IsEnum", span="693-693"];
m3_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="value is string", span="695-695"];
m3_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return Enum.Parse(contract.NonNullableUnderlyingType, value.ToString(), true);", span="696-696"];
m3_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return Enum.ToObject(contract.NonNullableUnderlyingType, value);", span="698-698"];
m3_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="value is BigInteger", span="702-702"];
m3_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return ConvertUtils.FromBigInteger((BigInteger)value, targetType);", span="703-703"];
m3_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return Convert.ChangeType(value, contract.NonNullableUnderlyingType, culture);", span="707-707"];
m3_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return ConvertUtils.ConvertOrCast(value, culture, contract.NonNullableUnderlyingType);", span="710-710"];
m3_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(value), targetType), ex);", span="714-714"];
m3_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return value;", span="718-718"];
m3_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return null;", span="685-685"];
m3_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="ConvertUtils.IsInteger(primitiveContract.TypeCode)", span="697-697"];
m3_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label=Exception, span="712-712"];
m3_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="673-673"];
m3_319 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m3_317 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="713-713"];
m3_810 [cluster="System.Collections.IDictionary.Add(object, object)", file="JsonTextReader.cs", label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0"];
m3_629 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m3_711 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonTextReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m3_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="181-181"];
m3_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="_internalSerializer == null", span="183-183"];
m3_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="_internalSerializer = new JsonSerializerProxy(this)", span="184-184"];
m3_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="return _internalSerializer;", span="186-186"];
m3_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="181-181"];
m3_75 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m3_397 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="497-497"];
m3_365 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="265-265"];
m3_425 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JsonTextReader.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m3_89 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", span="38-38"];
m3_316 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="24-24"];
m3_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="355-355"];
m3_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="357-357"];
m3_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="ReadSpecialProperties(reader, ref objectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="361-361"];
m3_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateJObject(reader);", span="365-365"];
m3_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="existingValue != null", span="374-374"];
m3_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="targetObject = existingValue", span="375-375"];
m3_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="targetObject = CreateNewObject(reader, objectContract, member, containerMember, id, out createdFromNonDefaultConstructor)", span="377-377"];
m3_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return PopulateObject(targetObject, reader, objectContract, member, id);", span="383-383"];
m3_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="389-389"];
m3_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="391-391"];
m3_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.StartObject", span="395-395"];
m3_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing primitive value: '' + reader.TokenType);", span="396-396"];
m3_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="object value = CreateValueInternal(reader, objectType, primitiveContract, member, null, null, existingValue)", span="398-398"];
m3_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="400-400"];
m3_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="existingValue == null", span="410-410"];
m3_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="IDictionary dictionary = CreateNewDictionary(reader, dictionaryContract, out createdFromNonDefaultConstructor)", span="413-413"];
m3_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="416-416"];
m3_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="419-419"];
m3_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on readonly list, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="422-422"];
m3_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="PopulateDictionary(dictionary, reader, dictionaryContract, member, id)", span="424-424"];
m3_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="targetDictionary = PopulateDictionary(dictionaryContract.ShouldCreateWrapper ? dictionaryContract.CreateWrapper(existingValue) : (IDictionary) existingValue, reader, dictionaryContract, member, id)", span="439-439"];
m3_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateDynamic(reader, dynamicContract, member, id);", span="447-447"];
m3_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateISerializable(reader, serializableContract, member, id);", span="452-452"];
m3_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, @''Cannot deserialize the current JSON object (e.g. {{''''name'''':''''value''''}}) into type '{0}' because the type requires a {1} to deserialize correctly.\r\nTo fix this error either change the JSON to a {1} or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\n''.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract)));", span="456-458"];
m3_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="string id", span="359-359"];
m3_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="object newValue", span="360-360"];
m3_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return newValue;", span="362-362"];
m3_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="HasNoDefinedType(contract)", span="364-364"];
m3_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="contract.ContractType", span="367-367"];
m3_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonObjectContract objectContract = (JsonObjectContract) contract", span="372-372"];
m3_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract) contract", span="387-387"];
m3_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract) contract", span="407-407"];
m3_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="id != null && createdFromNonDefaultConstructor", span="415-415"];
m3_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="contract.OnSerializingCallbacks.Count > 0 && createdFromNonDefaultConstructor", span="418-418"];
m3_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="contract.OnErrorCallbacks.Count > 0 && createdFromNonDefaultConstructor", span="421-421"];
m3_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonDynamicContract dynamicContract = (JsonDynamicContract) contract", span="446-446"];
m3_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonISerializableContract serializableContract = (JsonISerializableContract) contract", span="451-451"];
m3_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonContractType.Object", span="369-369"];
m3_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonContractType.Primitive", span="385-385"];
m3_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonContractType.Dictionary", span="405-405"];
m3_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonContractType.Dynamic", span="445-445"];
m3_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonContractType.Serializable", span="450-450"];
m3_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="bool createdFromNonDefaultConstructor = false", span="371-371"];
m3_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label=createdFromNonDefaultConstructor, span="380-380"];
m3_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="object targetObject", span="373-373"];
m3_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return targetObject;", span="381-381"];
m3_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return value;", span="401-401"];
m3_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="object targetDictionary", span="408-408"];
m3_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return dictionaryContract.ParametrizedConstructor.Invoke(new object[] {dictionary});", span="428-428"];
m3_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="bool createdFromNonDefaultConstructor", span="412-412"];
m3_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label=createdFromNonDefaultConstructor, span="426-426"];
m3_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="dictionary is IWrappedDictionary", span="430-430"];
m3_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return ((IWrappedDictionary)dictionary).UnderlyingDictionary;", span="432-432"];
m3_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="targetDictionary = dictionary", span="435-435"];
m3_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return targetDictionary;", span="442-442"];
m3_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="355-355"];
m3_677 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="749-749"];
m3_573 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1162-1162"];
m3_634 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="1166-1166"];
m3_636 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="IsErrorHandled(currentObject, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="1170-1170"];
m3_637 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="HandleError(reader, false, 0)", span="1171-1171"];
m3_635 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label=Exception, span="1168-1168"];
m3_638 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="throw;", span="1173-1173"];
m3_639 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1162-1162"];
m3_399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="721-721"];
m3_400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="object currentValue", span="723-723"];
m3_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="CalculatePropertyDetails(property, ref propertyConverter, containerContract, containerProperty, reader, target, out useExistingValue, out currentValue, out propertyContract, out gottenCurrentValue)", span="728-728"];
m3_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="!gottenCurrentValue && target != null && property.Readable", span="735-735"];
m3_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="736-736"];
m3_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, currentValue)", span="738-738"];
m3_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="value = CreateValueInternal(reader, property.PropertyType, propertyContract, property, containerContract, containerProperty, (useExistingValue) ? currentValue : null)", span="742-742"];
m3_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="(!useExistingValue || value != currentValue)\r\n        && ShouldSetPropertyValue(property, value)", span="748-749"];
m3_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="property.ValueProvider.SetValue(target, value)", span="751-751"];
m3_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="property.SetIsSpecified != null", span="753-753"];
m3_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''IsSpecified for property '{0}' on {1} set to true.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType)), null)", span="756-756"];
m3_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="property.SetIsSpecified(target, true)", span="758-758"];
m3_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="bool useExistingValue", span="724-724"];
m3_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="JsonContract propertyContract", span="725-725"];
m3_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="bool gottenCurrentValue", span="726-726"];
m3_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="return false;", span="729-729"];
m3_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="object value", span="731-731"];
m3_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="733-733"];
m3_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="return useExistingValue;", span="765-765"];
m3_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="755-755"];
m3_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="return true;", span="761-761"];
m3_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="721-721"];
m3_35 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m3_315 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="91-91"];
m3_34 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m3_366 [cluster="System.Array.CreateInstance(System.Type, int)", file="JsonTextReader.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m3_627 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m3_32 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="188-188"];
m3_424 [cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37"];
m3_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="931-931"];
m3_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="933-933"];
m3_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="934-934"];
m3_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="contract.InvokeOnDeserializing(value, Serializer._context)", span="936-936"];
m3_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="931-931"];
m3_191 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="873-873"];
m3_572 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="289-289"];
m3_31 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="332-332"];
m3_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="603-603"];
m3_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="object value", span="605-605"];
m3_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="HasNoDefinedType(contract)", span="607-607"];
m3_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="return CreateJToken(reader, contract);", span="608-608"];
m3_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="JsonArrayContract arrayContract = EnsureArrayContract(reader, objectType, contract)", span="610-610"];
m3_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="existingValue == null", span="612-612"];
m3_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="IList list = CreateNewList(reader, arrayContract, out createdFromNonDefaultConstructor)", span="615-615"];
m3_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="contract.OnSerializingCallbacks.Count > 0 && createdFromNonDefaultConstructor", span="620-620"];
m3_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="621-621"];
m3_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="contract.OnErrorCallbacks.Count > 0 && createdFromNonDefaultConstructor", span="623-623"];
m3_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="624-624"];
m3_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="PopulateList(list, reader, arrayContract, member, id)", span="627-627"];
m3_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="PopulateMultidimensionalArray(list, reader, arrayContract, member, id)", span="629-629"];
m3_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="list = CollectionUtils.ToMultidimensionalArray(list, arrayContract.CollectionItemType, contract.CreatedType.GetArrayRank())", span="635-635"];
m3_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="contract.CreatedType.IsArray", span="637-637"];
m3_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="value = PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(existingValue) : (IList) existingValue, reader, arrayContract, member, id)", span="658-658"];
m3_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="!arrayContract.IsMultidimensionalArray", span="626-626"];
m3_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="arrayContract.IsMultidimensionalArray", span="633-633"];
m3_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="Array a = Array.CreateInstance(arrayContract.CollectionItemType, list.Count)", span="639-639"];
m3_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="return arrayContract.ParametrizedConstructor.Invoke(new object[] { list });", span="646-646"];
m3_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="bool createdFromNonDefaultConstructor", span="614-614"];
m3_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label=createdFromNonDefaultConstructor, span="631-631"];
m3_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="list.CopyTo(a, 0)", span="640-640"];
m3_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="list is IWrappedCollection", span="649-649"];
m3_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="return ((IWrappedCollection)list).UnderlyingCollection;", span="651-651"];
m3_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="value = list", span="654-654"];
m3_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="list = a", span="641-641"];
m3_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="return value;", span="661-661"];
m3_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="603-603"];
m3_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="664-664"];
m3_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return (contract == null || contract.UnderlyingType == typeof (object) || contract.ContractType == JsonContractType.Linq\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n        || contract.UnderlyingType == typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n        );", span="666-670"];
m3_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="664-664"];
m3_804 [cluster="System.Reflection.MethodBase.GetParameters()", file="JsonTextReader.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m3_392 [cluster="System.Enum.Parse(System.Type, string, bool)", file="JsonTextReader.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m3_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="109-109"];
m3_115 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", span="463-463"];
m3_806 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="850-850"];
m3_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && value == null", span="852-852"];
m3_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n          && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n          && MiscellaneousUtils.ValueEquals(value, property.GetResolvedDefaultValue())", span="855-857"];
m3_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="!property.Writable", span="860-860"];
m3_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return false;", span="853-853"];
m3_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return false;", span="858-858"];
m3_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return false;", span="861-861"];
m3_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return true;", span="863-863"];
m3_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="850-850"];
m3_999 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="101-101"];
m3_808 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m3_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="903-903"];
m3_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.IsReadOnlyOrFixedSize", span="905-905"];
m3_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="return contract.CreateTemporaryDictionary();", span="908-908"];
m3_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="910-910"];
m3_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="object dictionary = contract.DefaultCreator()", span="912-912"];
m3_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.ShouldCreateWrapper", span="914-914"];
m3_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="dictionary = contract.CreateWrapper(dictionary)", span="915-915"];
m3_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.ParametrizedConstructor != null", span="920-920"];
m3_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="return contract.CreateTemporaryDictionary();", span="923-923"];
m3_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="927-927"];
m3_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = true", span="907-907"];
m3_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="return (IDictionary) dictionary;", span="918-918"];
m3_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = false", span="917-917"];
m3_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = true", span="922-922"];
m3_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="903-903"];
m3_967 [cluster="Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, Newtonsoft.Json.Linq.JToken)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, Newtonsoft.Json.Linq.JToken)", span="72-72"];
m3_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="1634-1634"];
m3_893 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="object newObject = null", span="1636-1636"];
m3_894 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="!objectContract.IsInstantiable", span="1638-1638"];
m3_895 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="1639-1639"];
m3_896 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="objectContract.OverrideConstructor != null", span="1641-1641"];
m3_897 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="objectContract.OverrideConstructor.GetParameters().Length > 0", span="1643-1643"];
m3_899 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="return CreateObjectFromNonDefaultConstructor(reader, objectContract, containerMember, objectContract.OverrideConstructor, id);", span="1646-1646"];
m3_900 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="newObject = objectContract.OverrideConstructor.Invoke(null)", span="1649-1649"];
m3_901 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="objectContract.DefaultCreator != null &&\r\n        (!objectContract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor || objectContract.ParametrizedConstructor == null)", span="1651-1652"];
m3_902 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="newObject = objectContract.DefaultCreator()", span="1658-1658"];
m3_903 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="objectContract.ParametrizedConstructor != null", span="1660-1660"];
m3_905 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="return CreateObjectFromNonDefaultConstructor(reader, objectContract, containerMember, objectContract.ParametrizedConstructor, id);", span="1663-1663"];
m3_907 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="1667-1667"];
m3_906 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="newObject == null", span="1666-1666"];
m3_909 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="return newObject;", span="1670-1670"];
m3_898 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = true", span="1645-1645"];
m3_904 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = true", span="1662-1662"];
m3_908 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultConstructor = false", span="1669-1669"];
m3_910 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="1634-1634"];
m3_320 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonTextReader.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m3_957 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1679-1679"];
m3_811 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1431-1431"];
m3_814 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1431-1431"];
m3_817 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1436-1436"];
m3_812 [cluster="lambda expression", file="JsonTextReader.cs", label=p, span="1431-1431"];
m3_813 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1431-1431"];
m3_815 [cluster="lambda expression", file="JsonTextReader.cs", label="(object) null", span="1431-1431"];
m3_816 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1431-1431"];
m3_818 [cluster="lambda expression", file="JsonTextReader.cs", label="kv.Key.Name", span="1436-1436"];
m3_819 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1436-1436"];
m3_954 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1679-1679"];
m3_955 [cluster="lambda expression", file="JsonTextReader.cs", label=m, span="1679-1679"];
m3_956 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1679-1679"];
m3_958 [cluster="lambda expression", file="JsonTextReader.cs", label="PropertyPresence.None", span="1679-1679"];
m3_959 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1679-1679"];
m3_29 [cluster="object.GetType()", file="JsonTextReader.cs", label="Entry object.GetType()", span="0-0"];
m3_712 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1733-1733"];
m3_155 [cluster="string.IsNullOrEmpty(string)", file="JsonTextReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1039-1039"];
m3_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int rank = contract.UnderlyingType.GetArrayRank()", span="1041-1041"];
m3_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="1043-1043"];
m3_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, list)", span="1044-1044"];
m3_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, list)", span="1046-1046"];
m3_578 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1048-1048"];
m3_579 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1049-1049"];
m3_582 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Push(list)", span="1053-1053"];
m3_583 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IList currentList = list", span="1054-1054"];
m3_585 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="1059-1059"];
m3_587 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1065-1065"];
m3_588 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1067-1067"];
m3_596 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1080-1080"];
m3_597 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1082-1082"];
m3_600 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1095-1095"];
m3_601 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(list, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1097-1097"];
m3_602 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1099-1099"];
m3_604 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1105-1105"];
m3_607 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.Read()", span="1120-1120"];
m3_608 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1122-1122"];
m3_620 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing multidimensional array: '' + reader.TokenType);", span="1145-1145"];
m3_623 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, list, ''Unexpected end when deserializing array.'')", span="1156-1156"];
m3_624 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, list)", span="1158-1158"];
m3_625 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return list;", span="1159-1159"];
m3_586 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Count == rank", span="1061-1061"];
m3_580 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int? previousErrorIndex = null", span="1051-1051"];
m3_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1079-1079"];
m3_581 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Stack<IList> listStack = new Stack<IList>()", span="1052-1052"];
m3_603 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1101-1101"];
m3_590 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Pop()", span="1070-1070"];
m3_591 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList = listStack.Peek()", span="1071-1071"];
m3_612 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Push(newList)", span="1127-1127"];
m3_615 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Pop()", span="1131-1131"];
m3_616 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Count > 0", span="1133-1133"];
m3_617 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList = listStack.Peek()", span="1135-1135"];
m3_584 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="1056-1056"];
m3_611 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList.Add(newList)", span="1126-1126"];
m3_621 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1153-1153"];
m3_622 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1155-1155"];
m3_589 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndArray", span="1069-1069"];
m3_593 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1074-1074"];
m3_594 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object value", span="1077-1077"];
m3_592 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex = null", span="1072-1072"];
m3_598 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList.Add(value)", span="1084-1084"];
m3_599 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1093-1093"];
m3_605 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex = errorPosition.Position", span="1109-1109"];
m3_606 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="1114-1114"];
m3_609 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.StartArray", span="1124-1124"];
m3_614 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndArray", span="1130-1130"];
m3_619 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1142-1142"];
m3_610 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IList newList = new List<object>()", span="1125-1125"];
m3_613 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList = newList", span="1128-1128"];
m3_618 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1139-1139"];
m3_626 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1039-1039"];
m3_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="241-241"];
m3_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="contract != null && contract.ContractType == JsonContractType.Linq", span="243-243"];
m3_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateJToken(reader, contract);", span="244-244"];
m3_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.TokenType", span="248-248"];
m3_121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateObject(reader, objectType, contract, member, containerContract, containerMember, existingValue);", span="253-253"];
m3_123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="255-255"];
m3_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="261-261"];
m3_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="string s = (string)reader.Value", span="263-263"];
m3_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="string.IsNullOrEmpty(s) && objectType != typeof(string) && objectType != typeof(object) && contract != null && contract.IsNullable", span="266-266"];
m3_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="objectType == typeof (byte[])", span="270-270"];
m3_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return EnsureType(reader, s, CultureInfo.InvariantCulture, contract, objectType);", span="273-273"];
m3_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="string constructorName = reader.Value.ToString()", span="275-275"];
m3_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return EnsureType(reader, constructorName, CultureInfo.InvariantCulture, contract, objectType);", span="277-277"];
m3_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="objectType == typeof (DBNull)", span="281-281"];
m3_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="285-285"];
m3_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return new JRaw((string) reader.Value);", span="287-287"];
m3_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token while deserializing object: '' + reader.TokenType);", span="292-292"];
m3_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.Read()", span="294-294"];
m3_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="296-296"];
m3_120 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.StartObject", span="252-252"];
m3_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.StartArray", span="254-254"];
m3_124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Integer", span="256-256"];
m3_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.String", span="262-262"];
m3_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.StartConstructor", span="274-274"];
m3_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Null", span="278-278"];
m3_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Raw", span="286-286"];
m3_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Comment", span="288-288"];
m3_125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Float", span="257-257"];
m3_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Boolean", span="258-258"];
m3_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Date", span="259-259"];
m3_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Bytes", span="260-260"];
m3_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return Convert.FromBase64String(s);", span="271-271"];
m3_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return null;", span="267-267"];
m3_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Undefined", span="279-279"];
m3_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return DBNull.Value;", span="282-282"];
m3_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="241-241"];
m3_803 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="1517-1517"];
m3_828 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="IDictionary<JsonProperty, object> propertyValues = new Dictionary<JsonProperty, object>()", span="1519-1519"];
m3_830 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="reader.TokenType", span="1523-1523"];
m3_832 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="string memberName = reader.Value.ToString()", span="1526-1526"];
m3_833 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonProperty property = contract.ConstructorParameters.GetClosestMatchProperty(memberName) ??\r\n              contract.Properties.GetClosestMatchProperty(memberName)", span="1530-1531"];
m3_837 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, containerProperty)", span="1538-1538"];
m3_838 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="1540-1540"];
m3_839 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1541-1541"];
m3_845 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="propertyValue = DeserializeConvertable(propertyConverter, reader, property.PropertyType, null)", span="1550-1550"];
m3_846 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="propertyValue = CreateValueInternal(reader, property.PropertyType, property.PropertyContract, property, contract, containerProperty, null)", span="1552-1552"];
m3_848 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="reader.Skip()", span="1558-1558"];
m3_849 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="!reader.Read()", span="1563-1563"];
m3_850 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1564-1564"];
m3_852 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}.''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="1567-1567"];
m3_854 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, objectType.Name));", span="1570-1570"];
m3_855 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="reader.Skip()", span="1572-1572"];
m3_859 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1581-1581"];
m3_860 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="!exit && reader.Read()", span="1583-1583"];
m3_829 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="bool exit = false", span="1520-1520"];
m3_847 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="propertyValues[property] = propertyValue", span="1554-1554"];
m3_861 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="return propertyValues;", span="1585-1585"];
m3_831 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonToken.PropertyName", span="1525-1525"];
m3_856 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1575-1575"];
m3_857 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonToken.EndObject", span="1577-1577"];
m3_834 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="property != null", span="1533-1533"];
m3_835 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="1535-1535"];
m3_836 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1536-1536"];
m3_840 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="!property.Ignored", span="1543-1543"];
m3_841 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="1545-1545"];
m3_842 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1546-1546"];
m3_844 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="1549-1549"];
m3_843 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="object propertyValue", span="1548-1548"];
m3_851 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1566-1566"];
m3_853 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="1569-1569"];
m3_858 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="exit = true", span="1578-1578"];
m3_862 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="1517-1517"];
m3_499 [cluster="System.Func<TResult>.Invoke()", file="JsonTextReader.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m3_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69"];
m3_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="71-71"];
m3_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Type objectType = target.GetType()", span="73-73"];
m3_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.None", span="77-77"];
m3_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.Read()", span="78-78"];
m3_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.StartArray", span="80-80"];
m3_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(target) : (IList)target, reader, arrayContract, null, null)", span="86-86"];
m3_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="90-90"];
m3_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.StartObject", span="93-93"];
m3_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="95-95"];
m3_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="98-98"];
m3_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="100-100"];
m3_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="101-101"];
m3_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="102-102"];
m3_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="PopulateDictionary((dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(target) : (IDictionary)target, reader, dictionaryContract, null, id)", span="108-108"];
m3_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="PopulateObject(target, reader, (JsonObjectContract) contract, null, id)", span="112-112"];
m3_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="116-116"];
m3_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="121-121"];
m3_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="JsonContract contract = Serializer._contractResolver.ResolveContract(objectType)", span="75-75"];
m3_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="contract.ContractType == JsonContractType.Array", span="82-82"];
m3_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="JsonArrayContract arrayContract = (JsonArrayContract) contract", span="84-84"];
m3_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="contract.ContractType == JsonContractType.Dictionary", span="105-105"];
m3_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="107-107"];
m3_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="contract.ContractType == JsonContractType.Object", span="110-110"];
m3_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="string id = null", span="97-97"];
m3_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69"];
m3_367 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JsonTextReader.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m3_396 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m3_633 [cluster="System.Collections.Generic.List<T>.List()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1673-1673"];
m3_911 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, newObject)", span="1675-1675"];
m3_912 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n        ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n        : null", span="1678-1680"];
m3_913 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="1682-1682"];
m3_914 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, newObject)", span="1683-1683"];
m3_915 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="1685-1685"];
m3_917 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1690-1690"];
m3_919 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="string memberName = reader.Value.ToString()", span="1694-1694"];
m3_920 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1700-1700"];
m3_923 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="1705-1705"];
m3_925 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType.Name));", span="1708-1708"];
m3_926 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!reader.Read()", span="1710-1710"];
m3_927 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SetExtensionData(contract, reader, memberName, newObject)", span="1713-1713"];
m3_930 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, member)", span="1720-1720"];
m3_931 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="1722-1722"];
m3_932 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1723-1723"];
m3_933 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="1725-1725"];
m3_934 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!SetPropertyValue(property, propertyConverter, contract, member, reader, newObject)", span="1728-1728"];
m3_935 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SetExtensionData(contract, reader, memberName, newObject)", span="1729-1729"];
m3_937 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1733-1733"];
m3_938 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1734-1734"];
m3_943 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1747-1747"];
m3_944 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished && reader.Read()", span="1749-1749"];
m3_946 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1752-1752"];
m3_947 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="EndObject(newObject, reader, contract, initialDepth, propertiesPresence)", span="1754-1754"];
m3_948 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, newObject)", span="1756-1756"];
m3_949 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return newObject;", span="1757-1757"];
m3_916 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="1687-1687"];
m3_918 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.PropertyName", span="1692-1692"];
m3_940 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndObject", span="1740-1740"];
m3_942 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1743-1743"];
m3_921 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property == null", span="1702-1702"];
m3_928 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="1717-1717"];
m3_929 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1718-1718"];
m3_922 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1704-1704"];
m3_924 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="1707-1707"];
m3_936 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1731-1731"];
m3_939 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="1736-1736"];
m3_941 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1741-1741"];
m3_945 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1751-1751"];
m3_950 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1673-1673"];
m3_0 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="64-64"];
m3_1 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="64-64"];
m3_100 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58"];
m3_888 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="356-356"];
m3_114 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="96-96"];
m3_758 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="115-115"];
m3_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="461-461"];
m3_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="id = null", span="463-463"];
m3_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="466-466"];
m3_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string propertyName = reader.Value.ToString()", span="468-468"];
m3_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="propertyName = reader.Value.ToString()", span="478-478"];
m3_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="482-482"];
m3_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="483-483"];
m3_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="484-484"];
m3_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string reference = (reader.Value != null) ? reader.Value.ToString() : null", span="486-486"];
m3_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="488-488"];
m3_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="492-492"];
m3_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="493-493"];
m3_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="498-498"];
m3_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="509-509"];
m3_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string qualifiedTypeName = reader.Value.ToString()", span="510-510"];
m3_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? ((containerMember != null) ? containerMember.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="512-516"];
m3_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName), ex);", span="531-531"];
m3_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName));", span="535-535"];
m3_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved type '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName, specifiedType)), null)", span="538-538"];
m3_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="objectType != null\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    && objectType != typeof (IDynamicMetaObjectProvider)\r\n#endif\r\n                    && !objectType.IsAssignableFrom(specifiedType)", span="540-544"];
m3_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, specifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="545-545"];
m3_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="551-551"];
m3_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="557-557"];
m3_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="559-559"];
m3_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="561-561"];
m3_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="566-566"];
m3_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="567-567"];
m3_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="CheckedRead(reader)", span="568-568"];
m3_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="specialProperty\r\n                   && reader.TokenType == JsonToken.PropertyName", span="576-577"];
m3_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = null", span="464-464"];
m3_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return false;", span="580-580"];
m3_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="propertyName.Length > 0 && propertyName[0] == '$'", span="470-470"];
m3_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="bool specialProperty", span="474-474"];
m3_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="480-480"];
m3_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="507-507"];
m3_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="555-555"];
m3_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="564-564"];
m3_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reference != null", span="490-490"];
m3_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="495-495"];
m3_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="specialProperty = true", span="504-504"];
m3_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="497-497"];
m3_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return true;", span="500-500"];
m3_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName, out typeName, out assemblyName)", span="522-522"];
m3_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="resolvedTypeNameHandling != TypeNameHandling.None", span="518-518"];
m3_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string typeName", span="520-520"];
m3_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string assemblyName", span="521-521"];
m3_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="Type specifiedType", span="524-524"];
m3_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="specifiedType = Serializer._binder.BindToType(assemblyName, typeName)", span="527-527"];
m3_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label=Exception, span="529-529"];
m3_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="specifiedType == null", span="534-534"];
m3_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="objectType = specifiedType", span="547-547"];
m3_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="contract = GetContractSafe(specifiedType)", span="548-548"];
m3_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="537-537"];
m3_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="specialProperty = true", span="553-553"];
m3_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="specialProperty = true", span="562-562"];
m3_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="specialProperty = false", span="574-574"];
m3_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = list", span="569-569"];
m3_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return true;", span="570-570"];
m3_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="461-461"];
m3_173 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonTextReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m3_116 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m3_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="299-299"];
m3_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="contract.ContractType", span="301-301"];
m3_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Object", span="303-303"];
m3_165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Array", span="312-312"];
m3_167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Primitive", span="314-314"];
m3_169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.String", span="316-316"];
m3_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="throw new ArgumentOutOfRangeException();", span="319-319"];
m3_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Dictionary", span="304-304"];
m3_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Serializable", span="306-306"];
m3_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Dynamic", span="309-309"];
m3_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return @''JSON object (e.g. {''''name'''':''''value''''})'';", span="311-311"];
m3_166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return @''JSON array (e.g. [1,2,3])'';", span="313-313"];
m3_168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return @''JSON primitive value (e.g. string, number, boolean, null)'';", span="315-315"];
m3_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return @''JSON string value'';", span="317-317"];
m3_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="299-299"];
m3_889 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="350-350"];
m3_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1266-1266"];
m3_678 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Type objectType = contract.UnderlyingType", span="1268-1268"];
m3_680 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, @''Type '{0}' implements ISerializable but cannot be deserialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.\r\nTo fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.\r\n''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1272-1274"];
m3_682 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using ISerializable constructor.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1278-1278"];
m3_683 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, GetFormatterConverter())", span="1280-1280"];
m3_685 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1285-1285"];
m3_687 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="string memberName = reader.Value.ToString()", span="1288-1288"];
m3_688 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!reader.Read()", span="1289-1289"];
m3_689 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1290-1290"];
m3_690 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.StartObject", span="1292-1292"];
m3_691 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object o = CreateObject(reader, null, null, null, contract, member, null)", span="1295-1295"];
m3_693 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="serializationInfo.AddValue(memberName, JToken.ReadFrom(reader))", span="1300-1300"];
m3_697 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1309-1309"];
m3_698 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished && reader.Read()", span="1311-1311"];
m3_700 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, serializationInfo, ''Unexpected end when deserializing object.'')", span="1314-1314"];
m3_701 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.ISerializableCreator == null", span="1316-1316"];
m3_702 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''ISerializable type '{0}' does not have a valid constructor. To correctly implement ISerializable a constructor that takes SerializationInfo and StreamingContext parameters should be present.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1317-1317"];
m3_703 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object createdObject = contract.ISerializableCreator(serializationInfo, Serializer._context)", span="1319-1319"];
m3_704 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="1321-1321"];
m3_705 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, createdObject)", span="1322-1322"];
m3_706 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1325-1325"];
m3_707 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="1326-1326"];
m3_679 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!JsonTypeReflector.FullyTrusted", span="1270-1270"];
m3_681 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1277-1277"];
m3_684 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="1282-1282"];
m3_692 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="serializationInfo.AddValue(memberName, o)", span="1296-1296"];
m3_686 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.PropertyName", span="1287-1287"];
m3_694 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1303-1303"];
m3_695 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndObject", span="1305-1305"];
m3_696 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1306-1306"];
m3_699 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1313-1313"];
m3_708 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return createdObject;", span="1328-1328"];
m3_709 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1266-1266"];
m3_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="768-768"];
m3_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="currentValue = null", span="770-770"];
m3_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="property.Ignored", span="775-775"];
m3_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="JsonToken tokenType = reader.TokenType", span="778-778"];
m3_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="780-780"];
m3_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="781-781"];
m3_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="ObjectCreationHandling objectCreationHandling =\r\n        property.ObjectCreationHandling.GetValueOrDefault(Serializer._objectCreationHandling)", span="783-784"];
m3_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="(objectCreationHandling != ObjectCreationHandling.Replace)\r\n          && (tokenType == JsonToken.StartArray || tokenType == JsonToken.StartObject)\r\n          && property.Readable", span="786-788"];
m3_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="790-790"];
m3_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="!property.Writable && !useExistingValue", span="801-801"];
m3_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && tokenType == JsonToken.Null", span="805-805"];
m3_446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n          && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n          && JsonReader.IsPrimitiveToken(tokenType)\r\n          && MiscellaneousUtils.ValueEquals(reader.Value, property.GetResolvedDefaultValue())", span="809-812"];
m3_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract = property.PropertyContract", span="817-817"];
m3_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract != property.PropertyContract", span="823-823"];
m3_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyConverter = GetConverter(propertyContract, property.MemberConverter, containerContract, containerProperty)", span="824-824"];
m3_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="useExistingValue = false", span="771-771"];
m3_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="currentValue == null", span="815-815"];
m3_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="821-821"];
m3_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract = null", span="772-772"];
m3_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="gottenCurrentValue = false", span="773-773"];
m3_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return true;", span="776-776"];
m3_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="gottenCurrentValue = true", span="791-791"];
m3_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="currentValue != null", span="793-793"];
m3_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="795-795"];
m3_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="useExistingValue = (!propertyContract.IsReadOnlyOrFixedSize && !propertyContract.UnderlyingType.IsValueType())", span="797-797"];
m3_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return true;", span="802-802"];
m3_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return true;", span="806-806"];
m3_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return true;", span="813-813"];
m3_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return false;", span="827-827"];
m3_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="768-768"];
m3_398 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="128-128"];
m3_520 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="356-356"];
m3_892 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="369-369"];
m3_318 [cluster="System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", file="JsonTextReader.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", span="0-0"];
m3_313 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="865-865"];
m3_890 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="344-344"];
m3_101 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74"];
m3_364 [cluster="System.Type.GetArrayRank()", file="JsonTextReader.cs", label="Entry System.Type.GetArrayRank()", span="0-0"];
m3_760 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", span="1420-1420"];
m3_761 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="ValidationUtils.ArgumentNotNull(constructorInfo, ''constructorInfo'')", span="1422-1422"];
m3_762 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="Type objectType = contract.UnderlyingType", span="1424-1424"];
m3_764 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using a non-default constructor '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, constructorInfo)), null)", span="1427-1427"];
m3_765 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="IDictionary<JsonProperty, object> propertyValues = ResolvePropertyAndConstructorValues(contract, containerProperty, reader, objectType)", span="1429-1429"];
m3_766 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="IDictionary<ParameterInfo, object> constructorParameters = constructorInfo.GetParameters().ToDictionary(p => p, p => (object) null)", span="1431-1431"];
m3_773 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="object createdObject = constructorInfo.Invoke(constructorParameters.Values.ToArray())", span="1443-1443"];
m3_774 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="id != null", span="1445-1445"];
m3_775 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="AddReference(reader, id, createdObject)", span="1446-1446"];
m3_776 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1448-1448"];
m3_800 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="1500-1500"];
m3_763 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1426-1426"];
m3_768 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label=propertyValues, span="1434-1434"];
m3_767 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="IDictionary<JsonProperty, object> remainingPropertyValues = new Dictionary<JsonProperty, object>()", span="1432-1432"];
m3_769 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="ParameterInfo matchingConstructorParameter = constructorParameters.ForgivingCaseSensitiveFind(kv => kv.Key.Name, propertyValue.Key.UnderlyingName).Key", span="1436-1436"];
m3_771 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="constructorParameters[matchingConstructorParameter] = propertyValue.Value", span="1438-1438"];
m3_772 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="remainingPropertyValues.Add(propertyValue)", span="1440-1440"];
m3_777 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label=remainingPropertyValues, span="1451-1451"];
m3_770 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="matchingConstructorParameter != null", span="1437-1437"];
m3_781 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="property.ValueProvider.SetValue(createdObject, value)", span="1458-1458"];
m3_786 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="1469-1469"];
m3_794 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="1485-1485"];
m3_801 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="return createdObject;", span="1501-1501"];
m3_778 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="JsonProperty property = remainingPropertyValue.Key", span="1453-1453"];
m3_779 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="object value = remainingPropertyValue.Value", span="1454-1454"];
m3_782 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="!property.Writable && value != null", span="1460-1460"];
m3_783 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="JsonContract propertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="1463-1463"];
m3_780 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="ShouldSetPropertyValue(remainingPropertyValue.Key, remainingPropertyValue.Value)", span="1456-1456"];
m3_789 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="IWrappedCollection newValues = propertyArrayContract.CreateWrapper(value)", span="1473-1473"];
m3_797 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="IDictionary newValues = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(value) : (IDictionary) value", span="1489-1489"];
m3_784 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="propertyContract.ContractType == JsonContractType.Array", span="1465-1465"];
m3_785 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="JsonArrayContract propertyArrayContract = (JsonArrayContract)propertyContract", span="1467-1467"];
m3_792 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="propertyContract.ContractType == JsonContractType.Dictionary", span="1481-1481"];
m3_793 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)propertyContract", span="1483-1483"];
m3_788 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="IWrappedCollection createdObjectCollectionWrapper = propertyArrayContract.CreateWrapper(createdObjectCollection)", span="1472-1472"];
m3_787 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="createdObjectCollection != null", span="1470-1470"];
m3_791 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="createdObjectCollectionWrapper.Add(newValue)", span="1477-1477"];
m3_790 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label=newValues, span="1475-1475"];
m3_796 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="IDictionary targetDictionary = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(createdObjectDictionary) : (IDictionary) createdObjectDictionary", span="1488-1488"];
m3_795 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="createdObjectDictionary != null", span="1486-1486"];
m3_799 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="targetDictionary.Add(newValue.Key, newValue.Value)", span="1493-1493"];
m3_798 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label=newValues, span="1491-1491"];
m3_802 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ConstructorInfo, string)", span="1420-1420"];
m3_807 [cluster="System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", span="129-129"];
m3_30 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m3_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="947-947"];
m3_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IWrappedDictionary wrappedDictionary = dictionary as IWrappedDictionary", span="949-949"];
m3_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : dictionary", span="950-950"];
m3_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="952-952"];
m3_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, underlyingDictionary)", span="953-953"];
m3_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, underlyingDictionary)", span="955-955"];
m3_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="957-957"];
m3_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.KeyContract == null", span="959-959"];
m3_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.KeyContract = GetContractSafe(contract.DictionaryKeyType)", span="960-960"];
m3_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.ItemContract == null", span="962-962"];
m3_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.ItemContract = GetContractSafe(contract.DictionaryValueType)", span="963-963"];
m3_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter dictionaryValueConverter = contract.ItemConverter ?? GetConverter(contract.ItemContract, null, contract, containerProperty)", span="965-965"];
m3_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="PrimitiveTypeCode keyTypeCode = (contract.KeyContract is JsonPrimitiveContract) ? ((JsonPrimitiveContract)contract.KeyContract).TypeCode : PrimitiveTypeCode.Empty", span="966-966"];
m3_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="971-971"];
m3_542 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object keyValue = reader.Value", span="974-974"];
m3_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="(keyTypeCode == PrimitiveTypeCode.DateTime || keyTypeCode == PrimitiveTypeCode.DateTimeNullable)\r\n                  && DateTimeUtils.TryParseDateTime(keyValue.ToString(), DateParseHandling.DateTime, reader.DateTimeZoneHandling, out dt)", span="981-982"];
m3_546 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="(keyTypeCode == PrimitiveTypeCode.DateTimeOffset || keyTypeCode == PrimitiveTypeCode.DateTimeOffsetNullable)\r\n                  && DateTimeUtils.TryParseDateTime(keyValue.ToString(), DateParseHandling.DateTimeOffset, reader.DateTimeZoneHandling, out dt)", span="987-988"];
m3_548 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="995-995"];
m3_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert from the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="1000-1000"];
m3_551 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!ReadForType(reader, contract.ItemContract, dictionaryValueConverter != null)", span="1003-1003"];
m3_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="1004-1004"];
m3_555 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="itemValue = DeserializeConvertable(dictionaryValueConverter, reader, contract.DictionaryValueType, null)", span="1008-1008"];
m3_556 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="itemValue = CreateValueInternal(reader, contract.DictionaryValueType, contract.ItemContract, null, contract, containerProperty, null)", span="1010-1010"];
m3_557 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="dictionary[keyValue] = itemValue", span="1012-1012"];
m3_559 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(underlyingDictionary, contract, keyValue, reader as IJsonLineInfo, reader.Path, ex)", span="1016-1016"];
m3_560 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1017-1017"];
m3_565 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1028-1028"];
m3_566 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished && reader.Read()", span="1030-1030"];
m3_568 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingDictionary, ''Unexpected end when deserializing object.'')", span="1033-1033"];
m3_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, underlyingDictionary)", span="1035-1035"];
m3_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return underlyingDictionary;", span="1036-1036"];
m3_554 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="dictionaryValueConverter != null && dictionaryValueConverter.CanRead", span="1007-1007"];
m3_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="968-968"];
m3_541 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.PropertyName", span="973-973"];
m3_562 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1022-1022"];
m3_563 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndObject", span="1024-1024"];
m3_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object dt", span="979-979"];
m3_545 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="keyValue = dt", span="984-984"];
m3_547 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="keyValue = dt", span="990-990"];
m3_549 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="998-998"];
m3_553 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object itemValue", span="1006-1006"];
m3_558 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1014-1014"];
m3_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="1019-1019"];
m3_564 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1025-1025"];
m3_567 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1032-1032"];
m3_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="947-947"];
m3_631 [cluster="System.Collections.IList.Add(object)", file="JsonTextReader.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m3_514 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="153-153"];
m3_1000 [file="JsonTextReader.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", span=""];
m4_118 [cluster="System.Guid.Guid(string)", file="JsonTextReaderTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m4_839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1360-1360"];
m4_840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1362-1362"];
m4_841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="1364-1364"];
m4_842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1360-1360"];
m4_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", span="2878-2878"];
m4_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false}''))", span="2880-2880"];
m4_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2882-2882"];
m4_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2883-2883"];
m4_1875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2888-2888"];
m4_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2889-2889"];
m4_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''false'', s)", span="2886-2886"];
m4_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="string s = reader.ReadAsString()", span="2885-2885"];
m4_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", span="2878-2878"];
m4_1148 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextReaderTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m4_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="378-378"];
m4_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="384-384"];
m4_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="386-386"];
m4_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="389-389"];
m4_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="392-392"];
m4_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="396-396"];
m4_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="399-399"];
m4_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="387-387"];
m4_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="390-390"];
m4_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="393-393"];
m4_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="394-394"];
m4_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="397-397"];
m4_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="380-382"];
m4_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="378-378"];
m4_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1810-1810"];
m4_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1820-1820"];
m4_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="1818-1818"];
m4_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1823-1823"];
m4_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1826-1826"];
m4_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1827-1827"];
m4_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1830-1830"];
m4_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1831-1831"];
m4_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1834-1834"];
m4_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1835-1835"];
m4_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1838-1838"];
m4_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1822-1822"];
m4_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1825-1825"];
m4_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1829-1829"];
m4_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1833-1833"];
m4_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1837-1837"];
m4_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1812-1816"];
m4_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1810-1810"];
m4_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", span="1097-1097"];
m4_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''n''))", span="1099-1099"];
m4_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="1100-1100"];
m4_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", span="1097-1097"];
m4_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2369-2369"];
m4_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2373-2373"];
m4_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2375-2375"];
m4_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2378-2378"];
m4_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2386-2386"];
m4_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2376-2376"];
m4_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2379-2379"];
m4_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2382-2382"];
m4_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2383-2383"];
m4_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2384-2384"];
m4_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2387-2387"];
m4_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2371-2371"];
m4_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2381-2381"];
m4_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2369-2369"];
m4_23 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m4_1541 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m4_871 [cluster="Unk.IsNull", file="JsonTextReaderTest.cs", label="Entry Unk.IsNull", span=""];
m4_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1406-1406"];
m4_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1445-1445"];
m4_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(newLinesText)", span="1439-1439"];
m4_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1446-1446"];
m4_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1449-1449"];
m4_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1453-1453"];
m4_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1456-1456"];
m4_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1461-1461"];
m4_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1465-1465"];
m4_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1469-1469"];
m4_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1473-1473"];
m4_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1476-1476"];
m4_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1479-1479"];
m4_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1482-1482"];
m4_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1486-1486"];
m4_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1489-1489"];
m4_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1492-1492"];
m4_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1451-1451"];
m4_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1471-1471"];
m4_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1447-1447"];
m4_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1450-1450"];
m4_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1454-1454"];
m4_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1457-1457"];
m4_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1458-1458"];
m4_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1459-1459"];
m4_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1462-1462"];
m4_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1463-1463"];
m4_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1466-1466"];
m4_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.Value)", span="1467-1467"];
m4_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1470-1470"];
m4_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1474-1474"];
m4_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1477-1477"];
m4_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1480-1480"];
m4_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1483-1483"];
m4_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1484-1484"];
m4_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1487-1487"];
m4_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1490-1490"];
m4_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1493-1493"];
m4_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1410-1436"];
m4_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="sr.ReadLine() != null", span="1440-1440"];
m4_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1408-1408"];
m4_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="int count = 0", span="1438-1438"];
m4_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="count++", span="1442-1442"];
m4_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1406-1406"];
m4_2790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", span="4239-4239"];
m4_2794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, UnmanagedResourceFakingJsonReader.DisposalCalls)", span="4244-4244"];
m4_2793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs", label="GC.WaitForPendingFinalizers()", span="4243-4243"];
m4_2792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs", label="GC.Collect()", span="4242-4242"];
m4_2791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs", label="UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4241-4241"];
m4_2795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", span="4239-4239"];
m4_2423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", span="3730-3730"];
m4_2425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3734-3734"];
m4_2424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="string json = @''tru''", span="3732-3732"];
m4_2426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3736-3736"];
m4_2427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", span="3730-3730"];
m4_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2927-2927"];
m4_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2930-2930"];
m4_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="string json = ''new Date,()''", span="2929-2929"];
m4_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2932-2932"];
m4_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2927-2927"];
m4_861 [cluster="System.Convert.ToBase64String(byte[])", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m4_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="259-259"];
m4_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="266-266"];
m4_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="268-268"];
m4_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="271-271"];
m4_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="274-274"];
m4_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="277-277"];
m4_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="280-280"];
m4_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="285-285"];
m4_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="288-288"];
m4_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="269-269"];
m4_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="272-272"];
m4_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="275-275"];
m4_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="278-278"];
m4_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="281-281"];
m4_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="282-282"];
m4_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="283-283"];
m4_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="286-286"];
m4_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="292-292"];
m4_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="261-264"];
m4_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="JObject o = JObject.Parse(json)", span="290-290"];
m4_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="291-291"];
m4_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="259-259"];
m4_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2442-2442"];
m4_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2446-2446"];
m4_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2448-2448"];
m4_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2451-2451"];
m4_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2449-2449"];
m4_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2452-2452"];
m4_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2455-2455"];
m4_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2456-2456"];
m4_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1m, reader.Value)", span="2457-2457"];
m4_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="string json = @''{''''Name'''':1}''", span="2444-2444"];
m4_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2454-2454"];
m4_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2442-2442"];
m4_1150 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422"];
m4_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="609-609"];
m4_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="632-632"];
m4_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="611-630"];
m4_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="634-634"];
m4_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="609-609"];
m4_397 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonTextReaderTest.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m4_2361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", span="3649-3649"];
m4_2363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3653-3653"];
m4_2364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3655-3655"];
m4_2365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3656-3656"];
m4_2362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs", label="string json = '\0' + @''true'' + '\0' + '\0'", span="3651-3651"];
m4_2366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", span="3649-3649"];
m4_1574 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextReaderTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m4_1542 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m4_24 [cluster="Unk.IsTrue", file="JsonTextReaderTest.cs", label="Entry Unk.IsTrue", span=""];
m4_2501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3839-3839"];
m4_2503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3843-3846"];
m4_2504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3848-3848"];
m4_2502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="string json = ''[[]]''", span="3841-3841"];
m4_2505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3850-3850"];
m4_2506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3839-3839"];
m4_1156 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1033-1033"];
m4_159 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="400-400"];
m4_1209 [cluster="System.Convert.ToInt32(char)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m4_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2208-2208"];
m4_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="2210-2210"];
m4_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="2212-2212"];
m4_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2208-2208"];
m4_1295 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextReaderTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m4_2641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="4032-4032"];
m4_2643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="4035-4035"];
m4_2642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="4034-4034"];
m4_2644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="4037-4037"];
m4_2649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="4046-4046"];
m4_2654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="4055-4055"];
m4_2650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="4047-4047"];
m4_2655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="4056-4056"];
m4_2646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4041-4041"];
m4_2647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4042-4042"];
m4_2652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4051-4051"];
m4_2657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4060-4060"];
m4_2658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4061-4061"];
m4_2659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4062-4062"];
m4_2645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="4039-4039"];
m4_2648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="4044-4044"];
m4_2651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="4049-4049"];
m4_2653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="4053-4053"];
m4_2656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="4058-4058"];
m4_2660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="4064-4064"];
m4_2661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="4032-4032"];
m4_333 [cluster="object.ToString()", file="JsonTextReaderTest.cs", label="Entry object.ToString()", span="0-0"];
m4_1028 [cluster="int.ToString()", file="JsonTextReaderTest.cs", label="Entry int.ToString()", span="0-0"];
m4_2353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", span="3639-3639"];
m4_2355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3643-3643"];
m4_2354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="string json = @''tru''", span="3641-3641"];
m4_2356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3645-3645"];
m4_2357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", span="3639-3639"];
m4_2499 [cluster="double.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m4_2782 [cluster="System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, int)", file="JsonTextReaderTest.cs", label="Entry System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, int)", span="0-0"];
m4_832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1352-1352"];
m4_833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1354-1354"];
m4_834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1356-1356"];
m4_835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1352-1352"];
m4_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="2068-2068"];
m4_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2071-2071"];
m4_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2070-2070"];
m4_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2073-2073"];
m4_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2091-2091"];
m4_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="2094-2094"];
m4_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2074-2074"];
m4_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2077-2077"];
m4_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2078-2078"];
m4_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="2079-2079"];
m4_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2082-2082"];
m4_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2083-2083"];
m4_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="2084-2084"];
m4_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2087-2087"];
m4_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2088-2088"];
m4_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="2089-2089"];
m4_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2092-2092"];
m4_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="2076-2076"];
m4_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="2081-2081"];
m4_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="2086-2086"];
m4_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="2068-2068"];
m4_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2936-2936"];
m4_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2939-2939"];
m4_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2941-2941"];
m4_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2944-2944"];
m4_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2947-2947"];
m4_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2950-2950"];
m4_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2953-2953"];
m4_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2956-2956"];
m4_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2959-2959"];
m4_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2962-2962"];
m4_1930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2965-2965"];
m4_1932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2968-2968"];
m4_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2942-2942"];
m4_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2945-2945"];
m4_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2948-2948"];
m4_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2951-2951"];
m4_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2954-2954"];
m4_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2957-2957"];
m4_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2960-2960"];
m4_1929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2963-2963"];
m4_1931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2966-2966"];
m4_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2938-2938"];
m4_1933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2936-2936"];
m4_2662 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="4317-4317"];
m4_2835 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="_inner = inner", span="4319-4319"];
m4_2836 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="4317-4317"];
m4_1689 [cluster="System.DateTime.DateTime(long)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m4_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", span="3051-3051"];
m4_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="3053-3053"];
m4_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3054-3054"];
m4_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3063-3063"];
m4_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3055-3055"];
m4_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="3057-3060"];
m4_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3062-3062"];
m4_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", span="3051-3051"];
m4_26 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m4_157 [cluster="Unk.Parse", file="JsonTextReaderTest.cs", label="Entry Unk.Parse", span=""];
m4_2739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", span="4176-4176"];
m4_2753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="var jsonTextReader = new JsonTextReader(sr)", span="4215-4215"];
m4_2754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="4217-4217"];
m4_2752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="var sr = new StreamReader(stream, new UTF8Encoding(), false)", span="4214-4214"];
m4_2758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="Console.WriteLine($''{i} - {jsonTextReader.TokenType} - {jsonTextReader.Value}'')", span="4226-4226"];
m4_2755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="i++", span="4219-4219"];
m4_2759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="clientReceivedEvent.Set()", span="4232-4232"];
m4_2749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="var stream = new NetworkStream(socket)", span="4210-4210"];
m4_2751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="int i = 0", span="4213-4213"];
m4_2756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="i == 193", span="4221-4221"];
m4_2757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="string s = string.Empty", span="4223-4223"];
m4_2743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="var clientReceivedEvent = new ManualResetEvent(false)", span="4182-4182"];
m4_2760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="Console.WriteLine(''Done'')", span="4234-4234"];
m4_2750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="var serializer = new JsonSerializer()", span="4211-4211"];
m4_2748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="socket.Connect(''127.0.0.1'', port)", span="4208-4208"];
m4_2746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="var socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)", span="4206-4206"];
m4_2742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="var serverStartedEvent = new ManualResetEvent(false)", span="4181-4181"];
m4_2744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="ThreadPool.QueueUserWorkItem(work =>\r\n            {\r\n                var server = new TcpListener(IPAddress.Parse(''0.0.0.0''), port);\r\n                server.Start();\r\n\r\n                serverStartedEvent.Set();\r\n\r\n                var serverSocket = server.AcceptSocket();\r\n\r\n                var jsonString = ''[\r\n'' + String.Join('','', Enumerable.Repeat(''  \''testdata\''\r\n'', jsonArrayElementsCount).ToArray()) + '']'';\r\n                var bytes = new UTF8Encoding().GetBytes(jsonString);\r\n                serverSocket.Send(bytes);\r\n                Console.WriteLine(''server send: '' + bytes.Length);\r\n\r\n\r\n                clientReceivedEvent.WaitOne();\r\n\r\n            })", span="4184-4201"];
m4_2740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="int port = 11999", span="4178-4178"];
m4_2747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="socket.Blocking = false", span="4207-4207"];
m4_2745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="serverStartedEvent.WaitOne()", span="4203-4203"];
m4_2741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="int jsonArrayElementsCount = 193", span="4179-4179"];
m4_2761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", span="4176-4176"];
m4_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1118-1118"];
m4_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1122-1122"];
m4_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1123-1123"];
m4_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1124-1124"];
m4_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="long i = int.MaxValue", span="1120-1120"];
m4_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="1129-1133"];
m4_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="long total = j + i", span="1128-1128"];
m4_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="int j = 1", span="1126-1126"];
m4_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="j++", span="1126-1126"];
m4_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="j < 1000", span="1126-1126"];
m4_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1118-1118"];
m4_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", span="2162-2162"];
m4_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''\r\nnew Date()''))", span="2164-2165"];
m4_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing value: e. Path '', line 2, position 2.'')", span="2167-2167"];
m4_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", span="2162-2162"];
m4_2639 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m4_2770 [cluster="System.Threading.EventWaitHandle.Set()", file="JsonTextReaderTest.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m4_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="641-641"];
m4_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="645-645"];
m4_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="647-647"];
m4_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="648-648"];
m4_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="649-649"];
m4_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="653-653"];
m4_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="656-656"];
m4_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="659-659"];
m4_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="662-662"];
m4_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="650-650"];
m4_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="651-651"];
m4_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0L, reader.Value)", span="654-654"];
m4_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="657-657"];
m4_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="660-660"];
m4_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="663-663"];
m4_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="643-643"];
m4_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="641-641"];
m4_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1397-1397"];
m4_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1399-1399"];
m4_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1400-1400"];
m4_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1402-1402"];
m4_876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1397-1397"];
m4_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1843-1843"];
m4_1184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1848-1848"];
m4_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1850-1850"];
m4_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1853-1853"];
m4_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1858-1858"];
m4_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1861-1861"];
m4_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1851-1851"];
m4_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1854-1854"];
m4_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1855-1855"];
m4_1190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1856-1856"];
m4_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1859-1859"];
m4_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1862-1862"];
m4_1183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1846-1846"];
m4_1182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="int length = 20000", span="1845-1845"];
m4_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1843-1843"];
m4_2037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", span="3124-3124"];
m4_2039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3128-3128"];
m4_2040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3130-3130"];
m4_2042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="3132-3132"];
m4_2044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="3134-3134"];
m4_2046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="3136-3136"];
m4_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="3138-3138"];
m4_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[4]'', reader.Path)", span="3140-3140"];
m4_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[5]'', reader.Path)", span="3142-3142"];
m4_2054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[6]'', reader.Path)", span="3144-3144"];
m4_2056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3147-3147"];
m4_2058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3150-3150"];
m4_2060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3153-3153"];
m4_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="3139-3139"];
m4_2055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsString())", span="3146-3146"];
m4_2057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsString())", span="3149-3149"];
m4_2038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="string json = @''['','','','','','','']''", span="3126-3126"];
m4_2041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3131-3131"];
m4_2043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="3133-3133"];
m4_2045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3135-3135"];
m4_2047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="3137-3137"];
m4_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="3141-3141"];
m4_2053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="reader.ReadAsDouble()", span="3143-3143"];
m4_2059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="3152-3152"];
m4_2061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", span="3124-3124"];
m4_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", span="2856-2856"];
m4_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('''1,112.34'''))", span="2858-2858"];
m4_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1112.34d, reader.ReadAsDouble())", span="2859-2859"];
m4_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", span="2856-2856"];
m4_632 [cluster="System.IO.StringWriter.ToString()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m4_2329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", span="3609-3609"];
m4_2331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3613-3613"];
m4_2330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs", label="string json = @''nullllll''", span="3611-3611"];
m4_2332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="3615-3615"];
m4_2333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", span="3609-3609"];
m4_2699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="4098-4098"];
m4_2700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="4100-4110"];
m4_2701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source', line 6, position 20.'')", span="4112-4120"];
m4_2702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="4098-4098"];
m4_372 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2349-2349"];
m4_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="172-172"];
m4_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="182-182"];
m4_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="183-183"];
m4_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="186-186"];
m4_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="189-189"];
m4_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="192-192"];
m4_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="196-196"];
m4_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="200-200"];
m4_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="204-204"];
m4_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="207-207"];
m4_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="184-184"];
m4_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="187-187"];
m4_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="190-190"];
m4_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="193-193"];
m4_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''src'', jsonTextReader.Value)", span="194-194"];
m4_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, jsonTextReader.TokenType)", span="197-197"];
m4_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@'''''''', jsonTextReader.Value)", span="198-198"];
m4_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="201-201"];
m4_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''test'', jsonTextReader.Value)", span="202-202"];
m4_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="205-205"];
m4_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="208-208"];
m4_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ''''projects'''': [\r\n        ''''src'''',\r\n        //''''\r\n        ''''test''''\r\n    ]\r\n}''", span="174-180"];
m4_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="172-172"];
m4_1846 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="943-943"];
m4_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1631-1631"];
m4_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1635-1635"];
m4_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1638-1638"];
m4_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1641-1641"];
m4_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1644-1644"];
m4_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1647-1647"];
m4_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1650-1650"];
m4_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1653-1653"];
m4_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1656-1656"];
m4_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1659-1659"];
m4_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1662-1662"];
m4_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1665-1665"];
m4_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1668-1668"];
m4_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1636-1636"];
m4_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1639-1639"];
m4_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1642-1642"];
m4_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1645-1645"];
m4_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1648-1648"];
m4_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1651-1651"];
m4_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1666-1666"];
m4_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = null", span="1633-1633"];
m4_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1654-1654"];
m4_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1657-1657"];
m4_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1660-1660"];
m4_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1663-1663"];
m4_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1669-1669"];
m4_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1631-1631"];
m4_2446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3764-3764"];
m4_2447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="3766-3766"];
m4_2448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3767-3767"];
m4_2449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3768-3768"];
m4_2450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="3770-3770"];
m4_2451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3764-3764"];
m4_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="524-524"];
m4_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="528-528"];
m4_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="530-530"];
m4_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="531-531"];
m4_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="533-533"];
m4_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="534-534"];
m4_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, s.Length)", span="537-537"];
m4_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="540-540"];
m4_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="526-526"];
m4_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="string s = reader.Value.ToString()", span="536-536"];
m4_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="StringInfo stringInfo = new StringInfo(s)", span="539-539"];
m4_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="524-524"];
m4_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="2038-2038"];
m4_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2041-2041"];
m4_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2040-2040"];
m4_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2043-2043"];
m4_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="2046-2046"];
m4_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="2051-2051"];
m4_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="2056-2056"];
m4_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2061-2061"];
m4_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="2064-2064"];
m4_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2044-2044"];
m4_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2047-2047"];
m4_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2048-2048"];
m4_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2049-2049"];
m4_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2052-2052"];
m4_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2053-2053"];
m4_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2054-2054"];
m4_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2057-2057"];
m4_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2058-2058"];
m4_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2059-2059"];
m4_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2062-2062"];
m4_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="2038-2038"];
m4_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", span="3024-3024"];
m4_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3026-3026"];
m4_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3028-3031"];
m4_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", span="3024-3024"];
m4_116 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m4_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2108-2108"];
m4_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2110-2110"];
m4_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2113-2113"];
m4_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="2112-2112"];
m4_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2108-2108"];
m4_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1201-1201"];
m4_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1218-1218"];
m4_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1225-1225"];
m4_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1228-1228"];
m4_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1229-1229"];
m4_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1230-1230"];
m4_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1203-1216"];
m4_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="int i = 0", span="1223-1223"];
m4_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="i < 14", span="1223-1223"];
m4_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="i++", span="1223-1223"];
m4_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1201-1201"];
m4_1210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1889-1889"];
m4_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1894-1894"];
m4_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1897-1897"];
m4_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1900-1900"];
m4_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1901-1901"];
m4_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1904-1904"];
m4_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1905-1905"];
m4_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1908-1908"];
m4_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1909-1909"];
m4_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1912-1912"];
m4_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1913-1913"];
m4_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1916-1916"];
m4_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1917-1917"];
m4_1231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1920-1920"];
m4_1232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1921-1921"];
m4_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1924-1924"];
m4_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1925-1925"];
m4_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1928-1928"];
m4_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1929-1929"];
m4_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1932-1932"];
m4_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1933-1933"];
m4_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1936-1936"];
m4_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1937-1937"];
m4_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1940-1940"];
m4_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1941-1941"];
m4_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1944-1944"];
m4_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1945-1945"];
m4_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1948-1948"];
m4_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1949-1949"];
m4_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1952-1952"];
m4_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1953-1953"];
m4_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1956-1956"];
m4_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1957-1957"];
m4_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1960-1960"];
m4_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1961-1961"];
m4_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1964-1964"];
m4_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1965-1965"];
m4_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1968-1968"];
m4_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1969-1969"];
m4_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1972-1972"];
m4_1211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1891-1892"];
m4_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1896-1896"];
m4_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1899-1899"];
m4_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1903-1903"];
m4_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1907-1907"];
m4_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1911-1911"];
m4_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1915-1915"];
m4_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1919-1919"];
m4_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1923-1923"];
m4_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1927-1927"];
m4_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1931-1931"];
m4_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1935-1935"];
m4_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1939-1939"];
m4_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1943-1943"];
m4_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1947-1947"];
m4_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1951-1951"];
m4_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1955-1955"];
m4_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1959-1959"];
m4_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1963-1963"];
m4_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1967-1967"];
m4_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1971-1971"];
m4_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1889-1889"];
m4_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2416-2416"];
m4_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2420-2420"];
m4_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2423-2423"];
m4_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2426-2426"];
m4_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2436-2436"];
m4_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2424-2424"];
m4_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2427-2427"];
m4_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2430-2430"];
m4_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2431-2431"];
m4_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2437-2437"];
m4_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2434-2434"];
m4_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2418-2418"];
m4_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2421-2421"];
m4_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2429-2429"];
m4_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2433-2433"];
m4_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2416-2416"];
m4_2785 [cluster="System.Net.Sockets.TcpListener.AcceptSocket()", file="JsonTextReaderTest.cs", label="Entry System.Net.Sockets.TcpListener.AcceptSocket()", span="0-0"];
m4_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", span="95-95"];
m4_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="99-99"];
m4_39 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="114-114"];
m4_57 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="138-138"];
m4_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="101-101"];
m4_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="106-106"];
m4_40 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="116-116"];
m4_44 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="121-121"];
m4_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="126-126"];
m4_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="131-131"];
m4_58 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="140-140"];
m4_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="145-145"];
m4_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="150-150"];
m4_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="155-155"];
m4_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="160-160"];
m4_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="165-165"];
m4_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="102-102"];
m4_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonTextReader.LineNumber)", span="103-103"];
m4_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="104-104"];
m4_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="108-108"];
m4_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonTextReader.LineNumber)", span="109-109"];
m4_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonTextReader.LinePosition)", span="110-110"];
m4_41 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="117-117"];
m4_42 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="118-118"];
m4_43 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="119-119"];
m4_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="122-122"];
m4_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="123-123"];
m4_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="124-124"];
m4_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="127-127"];
m4_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="128-128"];
m4_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="129-129"];
m4_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="132-132"];
m4_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="133-133"];
m4_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(10, jsonTextReader.LinePosition)", span="134-134"];
m4_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="141-141"];
m4_60 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="142-142"];
m4_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="143-143"];
m4_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="146-146"];
m4_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="147-147"];
m4_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="148-148"];
m4_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="151-151"];
m4_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="152-152"];
m4_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, jsonTextReader.LinePosition)", span="153-153"];
m4_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="156-156"];
m4_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="157-157"];
m4_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="158-158"];
m4_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, jsonTextReader.TokenType)", span="161-161"];
m4_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="162-162"];
m4_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(13, jsonTextReader.LinePosition)", span="163-163"];
m4_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="166-166"];
m4_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, jsonTextReader.LineNumber)", span="167-167"];
m4_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="168-168"];
m4_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="string json = ''{}''", span="97-97"];
m4_38 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="json = ''\n{\''a\'':\''bc\''}''", span="112-112"];
m4_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="json = ''\n{\''a\'':\n\''bc\'',\''d\'':true\n}''", span="136-136"];
m4_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", span="95-95"];
m4_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="320-320"];
m4_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="329-329"];
m4_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="331-331"];
m4_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="342-342"];
m4_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="345-345"];
m4_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="332-332"];
m4_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="343-343"];
m4_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="322-327"];
m4_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 41.'')", span="334-334"];
m4_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 5.'')", span="336-336"];
m4_184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Unexpected character encountered while parsing value: ,. Path '[2]', line 4, position 3.'')", span="338-338"];
m4_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 4.'')", span="340-340"];
m4_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="320-320"];
m4_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2747-2747"];
m4_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2750-2750"];
m4_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2752-2752"];
m4_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2753-2753"];
m4_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2754-2754"];
m4_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="string json = ''[true ''", span="2749-2749"];
m4_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2747-2747"];
m4_2802 [cluster="System.IDisposable.Dispose()", file="JsonTextReaderTest.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m4_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1344-1344"];
m4_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1346-1346"];
m4_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1348-1348"];
m4_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1344-1344"];
m4_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="478-478"];
m4_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="482-482"];
m4_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="485-485"];
m4_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="486-486"];
m4_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="string json = ''[NaN]''", span="480-480"];
m4_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="483-483"];
m4_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Cannot read NaN as a decimal.'')", span="488-488"];
m4_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="478-478"];
m4_854 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="416-416"];
m4_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="1014-1014"];
m4_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1017-1017"];
m4_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1019-1019"];
m4_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1022-1022"];
m4_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1025-1025"];
m4_642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1028-1028"];
m4_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1031-1031"];
m4_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1034-1034"];
m4_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1037-1037"];
m4_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1040-1040"];
m4_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1043-1043"];
m4_654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1046-1046"];
m4_656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1049-1049"];
m4_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1053-1053"];
m4_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1057-1057"];
m4_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1020-1020"];
m4_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1023-1023"];
m4_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1026-1026"];
m4_643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1029-1029"];
m4_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1032-1032"];
m4_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1035-1035"];
m4_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1038-1038"];
m4_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1041-1041"];
m4_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1044-1044"];
m4_655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1047-1047"];
m4_657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1050-1050"];
m4_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1051-1051"];
m4_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1054-1054"];
m4_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1055-1055"];
m4_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="1016-1016"];
m4_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="1014-1014"];
m4_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="421-421"];
m4_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="425-425"];
m4_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="427-427"];
m4_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="430-430"];
m4_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="433-433"];
m4_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="436-436"];
m4_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="428-428"];
m4_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="431-431"];
m4_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="434-434"];
m4_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="437-437"];
m4_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="423-423"];
m4_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 29.'')", span="439-439"];
m4_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="421-421"];
m4_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1600-1600"];
m4_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1624-1624"];
m4_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1625-1625"];
m4_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1602-1622"];
m4_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1600-1600"];
m4_117 [cluster="System.Convert.FromBase64String(string)", file="JsonTextReaderTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m4_1149 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m4_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2776-2776"];
m4_1805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2779-2779"];
m4_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2781-2781"];
m4_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2782-2782"];
m4_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2783-2783"];
m4_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2784-2784"];
m4_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="string json = ''{hi:1, ''", span="2778-2778"];
m4_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2776-2776"];
m4_1392 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="689-689"];
m4_2391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", span="3690-3690"];
m4_2393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3694-3694"];
m4_2392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs", label="string json = @''true''", span="3692-3692"];
m4_2394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDouble(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="3696-3696"];
m4_2395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", span="3690-3690"];
m4_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2493-2493"];
m4_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2495-2495"];
m4_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2497-2497"];
m4_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2493-2493"];
m4_2784 [cluster="System.Net.Sockets.TcpListener.Start()", file="JsonTextReaderTest.cs", label="Entry System.Net.Sockets.TcpListener.Start()", span="0-0"];
m4_2767 [cluster="System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)", file="JsonTextReaderTest.cs", label="Entry System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)", span="0-0"];
m4_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="958-958"];
m4_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { new JsonTextReader(null); },\r\n                new string[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="960-966"];
m4_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="958-958"];
m4_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1387-1387"];
m4_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1389-1389"];
m4_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1390-1390"];
m4_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1393-1393"];
m4_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1392-1392"];
m4_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1387-1387"];
m4_2787 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonTextReaderTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m4_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="718-718"];
m4_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="728-728"];
m4_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="reader.Read()", span="729-729"];
m4_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="720-726"];
m4_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="718-718"];
m4_924 [cluster="System.IO.StringReader.ReadLine()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m4_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1673-1673"];
m4_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1677-1677"];
m4_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1680-1680"];
m4_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1683-1683"];
m4_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1686-1686"];
m4_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1689-1689"];
m4_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1692-1692"];
m4_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1696-1696"];
m4_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1699-1699"];
m4_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1702-1702"];
m4_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1678-1678"];
m4_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1681-1681"];
m4_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1684-1684"];
m4_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1687-1687"];
m4_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1697-1697"];
m4_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1700-1700"];
m4_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = null", span="1675-1675"];
m4_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1690-1690"];
m4_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1693-1693"];
m4_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1694-1694"];
m4_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1703-1703"];
m4_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1673-1673"];
m4_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="750-750"];
m4_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="762-762"];
m4_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="760-760"];
m4_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="772-772"];
m4_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="777-777"];
m4_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="783-783"];
m4_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="789-789"];
m4_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="795-795"];
m4_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="800-800"];
m4_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="807-807"];
m4_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="814-814"];
m4_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="819-819"];
m4_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="824-824"];
m4_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="768-768"];
m4_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="769-769"];
m4_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="770-770"];
m4_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="773-773"];
m4_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="774-774"];
m4_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="775-775"];
m4_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="778-778"];
m4_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="779-779"];
m4_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="780-780"];
m4_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, jsonReader.LinePosition)", span="781-781"];
m4_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="784-784"];
m4_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="785-785"];
m4_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="786-786"];
m4_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(14, jsonReader.LinePosition)", span="787-787"];
m4_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="790-790"];
m4_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="791-791"];
m4_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="792-792"];
m4_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9, jsonReader.LinePosition)", span="793-793"];
m4_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="796-796"];
m4_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="797-797"];
m4_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(11, jsonReader.LinePosition)", span="798-798"];
m4_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="801-801"];
m4_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="802-802"];
m4_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="803-803"];
m4_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="804-804"];
m4_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(21, jsonReader.LinePosition)", span="805-805"];
m4_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="808-808"];
m4_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="809-809"];
m4_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="810-810"];
m4_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="811-811"];
m4_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(29, jsonReader.LinePosition)", span="812-812"];
m4_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="815-815"];
m4_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="816-816"];
m4_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LinePosition)", span="817-817"];
m4_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="820-820"];
m4_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="821-821"];
m4_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="822-822"];
m4_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="752-758"];
m4_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="750-750"];
m4_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="667-667"];
m4_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="675-675"];
m4_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="669-673"];
m4_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="677-682"];
m4_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="667-667"];
m4_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2509-2509"];
m4_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2511-2511"];
m4_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2513-2513"];
m4_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2509-2509"];
m4_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2539-2539"];
m4_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2543-2543"];
m4_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2546-2546"];
m4_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2549-2549"];
m4_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2557-2557"];
m4_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2547-2547"];
m4_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2550-2550"];
m4_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2553-2553"];
m4_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2554-2554"];
m4_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2558-2558"];
m4_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9.99m, d)", span="2555-2555"];
m4_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2541-2541"];
m4_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2544-2544"];
m4_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2552-2552"];
m4_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2539-2539"];
m4_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2501-2501"];
m4_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2503-2503"];
m4_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2505-2505"];
m4_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2501-2501"];
m4_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2562-2562"];
m4_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2577-2577"];
m4_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2584-2584"];
m4_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2587-2587"];
m4_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2588-2588"];
m4_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2564-2575"];
m4_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="int i = 0", span="2582-2582"];
m4_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="i < 13", span="2582-2582"];
m4_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="i++", span="2582-2582"];
m4_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2562-2562"];
m4_2510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3854-3854"];
m4_2512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3858-3861"];
m4_2513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3863-3863"];
m4_2517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3869-3869"];
m4_2519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3872-3872"];
m4_2521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3875-3875"];
m4_2523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3878-3878"];
m4_2525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3881-3881"];
m4_2529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3887-3887"];
m4_2531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3890-3890"];
m4_2533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3893-3893"];
m4_2535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3896-3896"];
m4_2537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="3899-3899"];
m4_2514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="3864-3864"];
m4_2516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="3867-3867"];
m4_2518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="3870-3870"];
m4_2520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="3873-3873"];
m4_2522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="3876-3876"];
m4_2524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="3879-3879"];
m4_2526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="3882-3882"];
m4_2528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="3885-3885"];
m4_2530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="3888-3888"];
m4_2532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="3891-3891"];
m4_2534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="3894-3894"];
m4_2536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="3897-3897"];
m4_2511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="string json = ''[[[[]]],[[]]]''", span="3856-3856"];
m4_2515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3866-3866"];
m4_2527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="3884-3884"];
m4_2538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3854-3854"];
m4_158 [cluster="Unk.IsFalse", file="JsonTextReaderTest.cs", label="Entry Unk.IsFalse", span=""];
m4_244 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="934-934"];
m4_1386 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="924-924"];
m4_2765 [cluster="System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)", file="JsonTextReaderTest.cs", label="Entry System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)", span="0-0"];
m4_2786 [cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)", file="JsonTextReaderTest.cs", label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0"];
m4_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="403-403"];
m4_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="407-407"];
m4_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="411-411"];
m4_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="415-415"];
m4_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="string json = ''0aq2dun13.hod''", span="405-405"];
m4_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="409-409"];
m4_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="413-413"];
m4_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="417-417"];
m4_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="403-403"];
m4_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2180-2180"];
m4_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2182-2182"];
m4_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2184-2184"];
m4_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2180-2180"];
m4_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="578-578"];
m4_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="582-582"];
m4_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="reader.Read()", span="583-583"];
m4_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="580-580"];
m4_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="string s = (string)reader.Value", span="585-585"];
m4_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="return s;", span="587-587"];
m4_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="578-578"];
m4_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2517-2517"];
m4_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2521-2521"];
m4_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2523-2523"];
m4_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2526-2526"];
m4_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2534-2534"];
m4_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2524-2524"];
m4_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2527-2527"];
m4_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2530-2530"];
m4_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2531-2531"];
m4_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2535-2535"];
m4_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2532-2532"];
m4_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2519-2519"];
m4_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2529-2529"];
m4_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2517-2517"];
m4_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1747-1747"];
m4_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1793-1793"];
m4_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(json, sb.ToString())", span="1806-1806"];
m4_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="string json = sb.ToString()", span="1789-1789"];
m4_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1791-1791"];
m4_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="sb = new StringBuilder()", span="1795-1795"];
m4_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1803-1803"];
m4_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="StringBuilder sb = new StringBuilder()", span="1749-1749"];
m4_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndArray()", span="1786-1786"];
m4_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="sw = new StringWriter(sb)", span="1796-1796"];
m4_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1798-1801"];
m4_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="int i = 0", span="1768-1768"];
m4_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1750-1750"];
m4_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1752-1755"];
m4_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteNull()", span="1785-1785"];
m4_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndArray()", span="1779-1779"];
m4_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartArray()", span="1767-1767"];
m4_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="i < 5", span="1768-1768"];
m4_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(i)", span="1770-1770"];
m4_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="i++", span="1768-1768"];
m4_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartArray()", span="1757-1757"];
m4_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(true)", span="1758-1758"];
m4_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartObject()", span="1760-1760"];
m4_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1761-1761"];
m4_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(99)", span="1762-1762"];
m4_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''string'')", span="1763-1763"];
m4_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1764-1764"];
m4_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''array'')", span="1765-1765"];
m4_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartObject()", span="1773-1773"];
m4_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1774-1774"];
m4_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1775-1775"];
m4_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndObject()", span="1776-1776"];
m4_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(5)", span="1778-1778"];
m4_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndObject()", span="1781-1781"];
m4_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1783-1783"];
m4_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteNull()", span="1784-1784"];
m4_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1747-1747"];
m4_371 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTextReaderTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m4_2367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", span="3660-3660"];
m4_2369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3664-3664"];
m4_2368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs", label="string json = @''pie''", span="3662-3662"];
m4_2370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3666-3666"];
m4_2371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", span="3660-3660"];
m4_2545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3903-3903"];
m4_2547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3907-3907"];
m4_2548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3909-3909"];
m4_2549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3911-3911"];
m4_2551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3914-3914"];
m4_2554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3918-3918"];
m4_2557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3922-3922"];
m4_2560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3926-3926"];
m4_2563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3930-3930"];
m4_2566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3934-3934"];
m4_2569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3938-3938"];
m4_2572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3942-3942"];
m4_2575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3946-3946"];
m4_2578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3950-3950"];
m4_2581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3954-3954"];
m4_2584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3958-3958"];
m4_2550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.Value)", span="3912-3912"];
m4_2552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3915-3915"];
m4_2553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="3916-3916"];
m4_2555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3919-3919"];
m4_2556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="3920-3920"];
m4_2558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3923-3923"];
m4_2559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.Value)", span="3924-3924"];
m4_2561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3927-3927"];
m4_2562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="3928-3928"];
m4_2564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3931-3931"];
m4_2565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3932-3932"];
m4_2567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3935-3935"];
m4_2568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3936-3936"];
m4_2570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3939-3939"];
m4_2571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3940-3940"];
m4_2573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3943-3943"];
m4_2574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3944-3944"];
m4_2576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3947-3947"];
m4_2577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3948-3948"];
m4_2579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3951-3951"];
m4_2580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3952-3952"];
m4_2582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3955-3955"];
m4_2583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3956-3956"];
m4_2546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3905-3905"];
m4_2585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3903-3903"];
m4_2843 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m4_289 [cluster="System.Convert.ToDecimal(double)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m4_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2622-2622"];
m4_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2625-2625"];
m4_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2630-2630"];
m4_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2634-2634"];
m4_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2631-2631"];
m4_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2632-2632"];
m4_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2635-2635"];
m4_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date\0()''", span="2624-2624"];
m4_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2622-2622"];
m4_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2485-2485"];
m4_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2487-2487"];
m4_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 3.'')", span="2489-2489"];
m4_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2485-2485"];
m4_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1707-1707"];
m4_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1711-1711"];
m4_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1716-1716"];
m4_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1721-1721"];
m4_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1726-1726"];
m4_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1731-1731"];
m4_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1734-1734"];
m4_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1739-1739"];
m4_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1742-1742"];
m4_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1712-1712"];
m4_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1717-1717"];
m4_1087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1722-1722"];
m4_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1727-1727"];
m4_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1735-1735"];
m4_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1740-1740"];
m4_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1713-1713"];
m4_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1714-1714"];
m4_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1718-1718"];
m4_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1719-1719"];
m4_1088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1723-1723"];
m4_1089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1724-1724"];
m4_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1728-1728"];
m4_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1729-1729"];
m4_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1736-1736"];
m4_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1737-1737"];
m4_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = null", span="1709-1709"];
m4_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1732-1732"];
m4_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1743-1743"];
m4_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1707-1707"];
m4_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1335-1335"];
m4_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1337-1337"];
m4_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1338-1338"];
m4_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1340-1340"];
m4_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1335-1335"];
m4_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="686-686"];
m4_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="694-694"];
m4_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="699-699"];
m4_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="702-702"];
m4_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="705-705"];
m4_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="708-708"];
m4_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="711-711"];
m4_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="700-700"];
m4_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="703-703"];
m4_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="706-706"];
m4_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="709-709"];
m4_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="712-712"];
m4_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="688-692"];
m4_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 1.'')", span="714-714"];
m4_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="686-686"];
m4_1196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1866-1866"];
m4_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1870-1870"];
m4_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1875-1875"];
m4_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1878-1878"];
m4_1203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1881-1881"];
m4_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1884-1884"];
m4_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1876-1876"];
m4_1202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1879-1879"];
m4_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1882-1882"];
m4_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1885-1885"];
m4_1197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1868-1868"];
m4_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1866-1866"];
m4_2415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", span="3720-3720"];
m4_2417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3724-3724"];
m4_2416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs", label="string json = @''true''", span="3722-3722"];
m4_2418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTime(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="3726-3726"];
m4_2419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", span="3720-3720"];
m4_819 [cluster="Unk.Fail", file="JsonTextReaderTest.cs", label="Entry Unk.Fail", span=""];
m4_1158 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="874-874"];
m4_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="228-228"];
m4_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="232-232"];
m4_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="233-233"];
m4_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="234-234"];
m4_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="235-235"];
m4_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="237-237"];
m4_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs", label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="230-230"];
m4_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="228-228"];
m4_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="297-297"];
m4_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="303-303"];
m4_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="305-305"];
m4_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="308-308"];
m4_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="313-313"];
m4_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="316-316"];
m4_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="306-306"];
m4_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="309-309"];
m4_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="314-314"];
m4_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="299-301"];
m4_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 52.'')", span="311-311"];
m4_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="297-297"];
m4_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="829-829"];
m4_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(sr)", span="839-839"];
m4_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="837-837"];
m4_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="841-841"];
m4_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="844-844"];
m4_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="845-845"];
m4_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('''', reader.Path)", span="846-846"];
m4_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="849-849"];
m4_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="850-850"];
m4_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="851-851"];
m4_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="854-854"];
m4_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="855-855"];
m4_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="856-856"];
m4_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="857-857"];
m4_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="858-858"];
m4_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="861-861"];
m4_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="862-862"];
m4_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="863-863"];
m4_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="866-866"];
m4_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="867-867"];
m4_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="868-868"];
m4_517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="871-871"];
m4_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="872-872"];
m4_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="873-873"];
m4_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="874-874"];
m4_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="877-877"];
m4_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2L, reader.Value)", span="878-878"];
m4_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="879-879"];
m4_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="880-880"];
m4_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="883-883"];
m4_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="884-884"];
m4_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="885-885"];
m4_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="886-886"];
m4_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="889-889"];
m4_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="890-890"];
m4_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="891-891"];
m4_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="892-892"];
m4_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="895-895"];
m4_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.Value)", span="896-896"];
m4_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="897-897"];
m4_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="898-898"];
m4_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="901-901"];
m4_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="902-902"];
m4_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="903-903"];
m4_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="906-906"];
m4_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="907-907"];
m4_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="908-908"];
m4_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="911-911"];
m4_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="912-912"];
m4_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="913-913"];
m4_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="916-916"];
m4_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="917-917"];
m4_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="918-918"];
m4_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="921-921"];
m4_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="922-922"];
m4_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="923-923"];
m4_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="926-926"];
m4_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="927-927"];
m4_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="928-928"];
m4_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="931-931"];
m4_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="932-932"];
m4_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="933-933"];
m4_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="936-936"];
m4_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="937-937"];
m4_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="938-938"];
m4_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="941-941"];
m4_575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="942-942"];
m4_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="943-943"];
m4_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="946-946"];
m4_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="947-947"];
m4_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="948-948"];
m4_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="951-951"];
m4_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="952-952"];
m4_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('''', reader.Path)", span="953-953"];
m4_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="843-843"];
m4_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="848-848"];
m4_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="853-853"];
m4_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="860-860"];
m4_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="865-865"];
m4_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="870-870"];
m4_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="876-876"];
m4_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="882-882"];
m4_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="888-888"];
m4_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="894-894"];
m4_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="900-900"];
m4_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="905-905"];
m4_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="910-910"];
m4_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="915-915"];
m4_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="920-920"];
m4_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="925-925"];
m4_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="930-930"];
m4_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="935-935"];
m4_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="940-940"];
m4_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="945-945"];
m4_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="950-950"];
m4_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="831-835"];
m4_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="829-829"];
m4_21 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m4_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", span="3002-3002"];
m4_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3004-3004"];
m4_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3006-3009"];
m4_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", span="3002-3002"];
m4_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", span="1111-1111"];
m4_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''ne''))", span="1113-1113"];
m4_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="1114-1114"];
m4_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", span="1111-1111"];
m4_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1376-1376"];
m4_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1381-1381"];
m4_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1379-1379"];
m4_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1383-1383"];
m4_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="1378-1378"];
m4_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1376-1376"];
m4_2431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", span="3740-3740"];
m4_2433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3744-3744"];
m4_2432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="string json = @''nul''", span="3742-3742"];
m4_2434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3746-3746"];
m4_2435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", span="3740-3740"];
m4_2766 [cluster="System.Net.Sockets.Socket.Connect(string, int)", file="JsonTextReaderTest.cs", label="Entry System.Net.Sockets.Socket.Connect(string, int)", span="0-0"];
m4_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2822-2822"];
m4_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2825-2825"];
m4_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2827-2827"];
m4_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2830-2830"];
m4_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2828-2828"];
m4_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2831-2831"];
m4_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date()''", span="2824-2824"];
m4_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2822-2822"];
m4_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1160-1160"];
m4_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1164-1164"];
m4_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1172-1172"];
m4_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1165-1165"];
m4_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1173-1173"];
m4_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1166-1166"];
m4_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1175-1175"];
m4_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="1162-1162"];
m4_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="BigInteger total = i + j", span="1170-1170"];
m4_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="int j = 1", span="1168-1168"];
m4_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="j++", span="1168-1168"];
m4_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="j < 1000", span="1168-1168"];
m4_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1160-1160"];
m4_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2265-2265"];
m4_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2269-2269"];
m4_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2271-2271"];
m4_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2274-2274"];
m4_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2282-2282"];
m4_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2272-2272"];
m4_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2275-2275"];
m4_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2278-2278"];
m4_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2279-2279"];
m4_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2280-2280"];
m4_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2283-2283"];
m4_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2267-2267"];
m4_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2277-2277"];
m4_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2265-2265"];
m4_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1555-1555"];
m4_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1561-1561"];
m4_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="1559-1559"];
m4_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1563-1563"];
m4_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1566-1566"];
m4_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1567-1567"];
m4_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1570-1570"];
m4_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1571-1571"];
m4_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1574-1574"];
m4_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1575-1575"];
m4_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1576-1576"];
m4_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1577-1577"];
m4_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1580-1580"];
m4_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1581-1581"];
m4_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1565-1565"];
m4_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1569-1569"];
m4_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1573-1573"];
m4_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1579-1579"];
m4_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1557-1557"];
m4_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1555-1555"];
m4_2264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3484-3484"];
m4_2266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3488-3488"];
m4_2268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3491-3491"];
m4_2269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(32m, reader.Value)", span="3492-3492"];
m4_2265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="string json = @''0x20''", span="3486-3486"];
m4_2267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="3490-3490"];
m4_2270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3484-3484"];
m4_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1138-1138"];
m4_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1142-1142"];
m4_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1143-1143"];
m4_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(i, reader.Value)", span="1145-1145"];
m4_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1144-1144"];
m4_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="long i = int.MinValue", span="1140-1140"];
m4_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="1150-1154"];
m4_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="long total = -j + i", span="1149-1149"];
m4_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="int j = 1", span="1147-1147"];
m4_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="j++", span="1147-1147"];
m4_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="j < 1000", span="1147-1147"];
m4_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1138-1138"];
m4_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", span="3013-3013"];
m4_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3015-3015"];
m4_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3017-3020"];
m4_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", span="3013-3013"];
m4_2837 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="4322-4322"];
m4_2838 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label=Error, span="4324-4324"];
m4_2840 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="return _inner.Read(buffer, index, 1);", span="4329-4329"];
m4_2839 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="throw new Exception(''Read error'');", span="4326-4326"];
m4_2841 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="4322-4322"];
m4_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", span="1104-1104"];
m4_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''nu''))", span="1106-1106"];
m4_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="1107-1107"];
m4_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", span="1104-1104"];
m4_1151 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="977-977"];
m4_1907 [cluster="Unk.>", file="JsonTextReaderTest.cs", label="Entry Unk.>", span=""];
m4_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", span="3067-3067"];
m4_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="3069-3069"];
m4_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3070-3070"];
m4_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3078-3078"];
m4_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(string.Empty, reader.ReadAsString())", span="3077-3077"];
m4_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsString();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="3072-3075"];
m4_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", span="3067-3067"];
m4_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1497-1497"];
m4_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1499-1499"];
m4_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1500-1500"];
m4_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1501-1501"];
m4_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1504-1504"];
m4_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1507-1507"];
m4_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1502-1502"];
m4_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1503-1503"];
m4_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1505-1505"];
m4_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1506-1506"];
m4_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1508-1508"];
m4_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1509-1509"];
m4_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1497-1497"];
m4_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2788-2788"];
m4_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2791-2791"];
m4_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2793-2793"];
m4_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2796-2796"];
m4_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2794-2794"];
m4_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2797-2797"];
m4_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="string json = ''[]''", span="2790-2790"];
m4_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2788-2788"];
m4_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2767-2767"];
m4_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2770-2770"];
m4_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="string json = ''new Date !''", span="2769-2769"];
m4_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2772-2772"];
m4_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2767-2767"];
m4_396 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="4346-4346"];
m4_2849 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="4346-4346"];
m4_2768 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding, bool)", file="JsonTextReaderTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding, bool)", span="0-0"];
m4_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", span="2987-2987"];
m4_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="2989-2989"];
m4_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2990-2990"];
m4_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2998-2998"];
m4_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="2992-2995"];
m4_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="2997-2997"];
m4_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", span="2987-2987"];
m4_2375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", span="3670-3670"];
m4_2377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3674-3674"];
m4_2376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs", label="string json = @''pie''", span="3672-3672"];
m4_2378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3676-3676"];
m4_2379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", span="3670-3670"];
m4_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", span="2893-2893"];
m4_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false1}''))", span="2895-2895"];
m4_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2897-2897"];
m4_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2898-2898"];
m4_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2904-2904"];
m4_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2905-2905"];
m4_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2906-2906"];
m4_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.Read(); },\r\n                ''Error parsing boolean value. Path 'Test1', line 1, position 14.'')", span="2900-2902"];
m4_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", span="2893-2893"];
m4_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1061-1061"];
m4_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1082-1082"];
m4_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1089-1089"];
m4_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1092-1092"];
m4_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1093-1093"];
m4_665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="1063-1080"];
m4_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="int i = 0", span="1087-1087"];
m4_668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="i < 15", span="1087-1087"];
m4_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="i++", span="1087-1087"];
m4_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1061-1061"];
m4_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", span="1368-1368"];
m4_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1370-1370"];
m4_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="1372-1372"];
m4_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", span="1368-1368"];
m4_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2461-2461"];
m4_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2465-2465"];
m4_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2467-2467"];
m4_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2470-2470"];
m4_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2468-2468"];
m4_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2471-2471"];
m4_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="string json = @''{''''Name'''': 1.1}''", span="2463-2463"];
m4_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2473-2473"];
m4_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2461-2461"];
m4_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", span="2145-2145"];
m4_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2147-2147"];
m4_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2150-2150"];
m4_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsBoolean())", span="2149-2149"];
m4_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", span="2145-2145"];
m4_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2681-2681"];
m4_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2683-2683"];
m4_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2686-2686"];
m4_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2689-2689"];
m4_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2692-2692"];
m4_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2695-2695"];
m4_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2698-2698"];
m4_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2701-2701"];
m4_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2704-2704"];
m4_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2707-2707"];
m4_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2710-2710"];
m4_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2713-2713"];
m4_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2716-2716"];
m4_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2719-2719"];
m4_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2722-2722"];
m4_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2725-2725"];
m4_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2728-2728"];
m4_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2731-2731"];
m4_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2734-2734"];
m4_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2737-2737"];
m4_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2740-2740"];
m4_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2743-2743"];
m4_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2687-2687"];
m4_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2690-2690"];
m4_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2693-2693"];
m4_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2696-2696"];
m4_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2699-2699"];
m4_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2702-2702"];
m4_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2705-2705"];
m4_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2708-2708"];
m4_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2711-2711"];
m4_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2714-2714"];
m4_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2717-2717"];
m4_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2720-2720"];
m4_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2723-2723"];
m4_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2726-2726"];
m4_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2729-2729"];
m4_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2732-2732"];
m4_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2735-2735"];
m4_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2738-2738"];
m4_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2741-2741"];
m4_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="reader.SupportMultipleContent = true", span="2684-2684"];
m4_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2681-2681"];
m4_2439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", span="3750-3750"];
m4_2442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3756-3756"];
m4_2441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs", label="string json = @'''''''' + Convert.ToBase64String(data) + @''''''''", span="3754-3754"];
m4_2443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs", label="byte[] result = reader.ReadAsBytes()", span="3758-3758"];
m4_2440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world'')", span="3752-3752"];
m4_2444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(data, result)", span="3760-3760"];
m4_2445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", span="3750-3750"];
m4_1029 [cluster="long.ToString()", file="JsonTextReaderTest.cs", label="Entry long.ToString()", span="0-0"];
m4_378 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410"];
m4_741 [cluster="StringReader.cstr", file="JsonTextReaderTest.cs", label="Entry StringReader.cstr", span=""];
m4_2762 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="JsonTextReaderTest.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m4_630 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431"];
m4_2241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="3448-3448"];
m4_2243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3452-3452"];
m4_2244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3454-3454"];
m4_2247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="3458-3458"];
m4_2245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3455-3455"];
m4_2246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="3456-3456"];
m4_2242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="string json = @''//comment''", span="3450-3450"];
m4_2248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="3448-3448"];
m4_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", span="2842-2842"];
m4_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('''12.34'''))", span="2844-2844"];
m4_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(12.34d, reader.ReadAsDouble())", span="2845-2845"];
m4_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", span="2842-2842"];
m4_706 [cluster="long.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m4_1162 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991"];
m4_2801 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", span="4257-4257"];
m4_2803 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonTextReaderTest.cs", label="DisposalCalls = 0", span="4259-4259"];
m4_2804 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", span="4257-4257"];
m4_2769 [cluster="System.Text.UTF8Encoding.UTF8Encoding()", file="JsonTextReaderTest.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding()", span="0-0"];
m4_1160 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478"];
m4_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", span="1304-1304"];
m4_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1315-1315"];
m4_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1319-1319"];
m4_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="1330-1330"];
m4_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, arrayPool.FreeArrays.Count)", span="1331-1331"];
m4_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n              ''''CPU'''': ''''Intel?\nYes'''',\r\n              ''''Description'''': ''''Amazin''", span="1306-1308"];
m4_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="FakeArrayPool arrayPool = new FakeArrayPool()", span="1310-1310"];
m4_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="reader.ArrayPool = arrayPool", span="1317-1317"];
m4_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="Assert.Fail()", span="1324-1324"];
m4_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", span="1304-1304"];
m4_2257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="3472-3472"];
m4_2259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3476-3476"];
m4_2261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3479-3479"];
m4_2262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(8m, reader.Value)", span="3480-3480"];
m4_2258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="string json = @''010''", span="3474-3474"];
m4_2260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="3478-3478"];
m4_2263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="3472-3472"];
m4_2498 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m4_2783 [cluster="System.Net.IPAddress.Parse(string)", file="JsonTextReaderTest.cs", label="Entry System.Net.IPAddress.Parse(string)", span="0-0"];
m4_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FakeArrayPool.FakeArrayPool()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FakeArrayPool.FakeArrayPool()", span="1233-1233"];
m4_808 [cluster="System.Console.WriteLine(string)", file="JsonTextReaderTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_1155 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912"];
m4_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1977-1977"];
m4_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1983-1983"];
m4_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1985-1985"];
m4_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1988-1988"];
m4_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1991-1991"];
m4_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1986-1986"];
m4_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1989-1989"];
m4_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1992-1992"];
m4_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1979-1981"];
m4_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 8.'')", span="1994-1994"];
m4_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1977-1977"];
m4_1819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2801-2801"];
m4_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2804-2804"];
m4_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2806-2806"];
m4_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2809-2809"];
m4_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2807-2807"];
m4_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2810-2810"];
m4_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="string json = ''{}''", span="2803-2803"];
m4_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2801-2801"];
m4_2764 [cluster="System.Threading.WaitHandle.WaitOne()", file="JsonTextReaderTest.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m4_25 [cluster="Unk.AreEqual", file="JsonTextReaderTest.cs", label="Entry Unk.AreEqual", span=""];
m4_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1998-1998"];
m4_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="2001-2001"];
m4_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="2000-2000"];
m4_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Hello world.'', text)", span="2007-2007"];
m4_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="2003-2003"];
m4_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="2006-2006"];
m4_1290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Assert.IsNotNull(data)", span="2004-2004"];
m4_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1998-1998"];
m4_2698 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="589-589"];
m4_1153 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456"];
m4_953 [cluster="Unk.AreEquivalent", file="JsonTextReaderTest.cs", label="Entry Unk.AreEquivalent", span=""];
m4_742 [cluster="Unk.ToString", file="JsonTextReaderTest.cs", label="Entry Unk.ToString", span=""];
m4_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="978-978"];
m4_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="981-981"];
m4_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(s, reader.Value)", span="984-984"];
m4_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="string s = new string('a', 10000)", span="980-980"];
m4_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="reader.Read()", span="982-982"];
m4_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="978-978"];
m4_1485 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m4_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2126-2126"];
m4_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="2128-2128"];
m4_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="2130-2130"];
m4_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2126-2126"];
m4_1294 [cluster="Unk.IsNotNull", file="JsonTextReaderTest.cs", label="Entry Unk.IsNotNull", span=""];
m4_631 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430"];
m4_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2814-2814"];
m4_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2816-2816"];
m4_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2818-2818"];
m4_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2814-2814"];
m4_2707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="4125-4125"];
m4_2709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="4129-4129"];
m4_2724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="r = new JsonTextReader(new StringReader(json2))", span="4151-4151"];
m4_2710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(r.Read())", span="4131-4131"];
m4_2713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(r.Read())", span="4135-4135"];
m4_2716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(r.Read())", span="4139-4139"];
m4_2719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(r.Read())", span="4143-4143"];
m4_2722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(r.Read())", span="4147-4147"];
m4_2725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(r.Read())", span="4153-4153"];
m4_2728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(r.Read())", span="4157-4157"];
m4_2731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(r.Read())", span="4161-4161"];
m4_2734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(r.Read())", span="4165-4165"];
m4_2737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(r.Read())", span="4169-4169"];
m4_2711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, r.LineNumber)", span="4132-4132"];
m4_2712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, r.LinePosition)", span="4133-4133"];
m4_2714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, r.LineNumber)", span="4136-4136"];
m4_2715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, r.LinePosition)", span="4137-4137"];
m4_2717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, r.LineNumber)", span="4140-4140"];
m4_2718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9, r.LinePosition)", span="4141-4141"];
m4_2720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, r.LineNumber)", span="4144-4144"];
m4_2721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(10, r.LinePosition)", span="4145-4145"];
m4_2726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, r.LineNumber)", span="4154-4154"];
m4_2727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, r.LinePosition)", span="4155-4155"];
m4_2729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, r.LineNumber)", span="4158-4158"];
m4_2730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, r.LinePosition)", span="4159-4159"];
m4_2732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, r.LineNumber)", span="4162-4162"];
m4_2733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9, r.LinePosition)", span="4163-4163"];
m4_2735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, r.LineNumber)", span="4166-4166"];
m4_2736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(10, r.LinePosition)", span="4167-4167"];
m4_2708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="string json1 = ''{'a':'bc'}''", span="4127-4127"];
m4_2723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="string json2 = ''\n{'a':'bc'}''", span="4149-4149"];
m4_2738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="4125-4125"];
m4_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1513-1513"];
m4_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1518-1518"];
m4_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1519-1519"];
m4_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1521-1521"];
m4_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1526-1526"];
m4_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1520-1520"];
m4_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1522-1522"];
m4_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1525-1525"];
m4_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1527-1527"];
m4_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1516-1516"];
m4_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1523-1523"];
m4_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1529-1529"];
m4_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1524-1524"];
m4_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="1515-1515"];
m4_952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1513-1513"];
m4_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="492-492"];
m4_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="496-496"];
m4_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="498-498"];
m4_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="501-501"];
m4_308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="504-504"];
m4_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="507-507"];
m4_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="510-510"];
m4_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="513-513"];
m4_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="517-517"];
m4_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="499-499"];
m4_307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="502-502"];
m4_309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="505-505"];
m4_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="508-508"];
m4_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="511-511"];
m4_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="514-514"];
m4_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="515-515"];
m4_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="518-518"];
m4_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="520-520"];
m4_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="494-494"];
m4_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="492-492"];
m4_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1268-1268"];
m4_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1284-1284"];
m4_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1288-1288"];
m4_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="1299-1299"];
m4_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, arrayPool.FreeArrays.Count)", span="1300-1300"];
m4_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n              ''''CPU'''': ''''Intel'''',\r\n              ''''Description'''': ''''Amazing!\nBuy now!'''',\r\n              ''''Drives'''': [\r\n                ''''DVD read/writer'''',\r\n                ''''500 gigabyte hard drive'''',\r\n                ''''Amazing Drive'' + new string('!', 9000) + @''''''\r\n              ]\r\n            }''", span="1270-1278"];
m4_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="i < 1000", span="1282-1282"];
m4_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="reader.ArrayPool = arrayPool", span="1286-1286"];
m4_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="(i + 1) % 100 == 0", span="1293-1293"];
m4_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="FakeArrayPool arrayPool = new FakeArrayPool()", span="1280-1280"];
m4_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="int i = 0", span="1282-1282"];
m4_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="i++", span="1282-1282"];
m4_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="1295-1295"];
m4_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1268-1268"];
m4_2681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="4071-4071"];
m4_2690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="4084-4084"];
m4_2689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(json)", span="4083-4083"];
m4_2691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="4086-4086"];
m4_2696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="4094-4094"];
m4_2693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="4089-4089"];
m4_2695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="4092-4092"];
m4_2692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="decimal? max = reader.ReadAsDecimal()", span="4088-4088"];
m4_2694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="decimal? min = reader.ReadAsDecimal()", span="4091-4091"];
m4_2688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="string json = sw.ToString()", span="4081-4081"];
m4_2682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter()", span="4073-4073"];
m4_2687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteEndArray()", span="4079-4079"];
m4_2683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="4074-4074"];
m4_2686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteValue(decimal.MinValue)", span="4078-4078"];
m4_2684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteStartArray()", span="4076-4076"];
m4_2685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteValue(decimal.MaxValue)", span="4077-4077"];
m4_2697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="4071-4071"];
m4_628 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148"];
m4_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", span="64-64"];
m4_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="string json = ''[9223372036854775807, 1.7976931348623157E+308, 792281625142643375935439503.35, 792281625142643375935555555555555555555555555555555555555555555555555439503.35]''", prediction=12, span="66-66"];
m4_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", prediction=13, span="68-68"];
m4_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", prediction=14, span="69-69"];
m4_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=13, span="71-71"];
m4_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", prediction=13, span="72-72"];
m4_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(''9223372036854775807'', reader.ReadAsString())", prediction=13, span="74-74"];
m4_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", prediction=13, span="75-75"];
m4_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(''9223372036854775807'', reader.Value)", prediction=13, span="76-76"];
m4_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(''1.7976931348623157E+308'', reader.ReadAsString())", prediction=13, span="78-78"];
m4_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", prediction=13, span="79-79"];
m4_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(''1.7976931348623157E+308'', reader.Value)", prediction=13, span="80-80"];
m4_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(''792281625142643375935439503.35'', reader.ReadAsString())", prediction=13, span="82-82"];
m4_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", prediction=13, span="83-83"];
m4_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(''792281625142643375935439503.35'', reader.Value)", prediction=13, span="84-84"];
m4_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(''792281625142643375935555555555555555555555555555555555555555555555555439503.35'', reader.ReadAsString())", prediction=13, span="86-86"];
m4_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", prediction=13, span="87-87"];
m4_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(''792281625142643375935555555555555555555555555555555555555555555555555439503.35'', reader.Value)", prediction=13, span="88-88"];
m4_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=13, span="90-90"];
m4_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", prediction=13, span="91-91"];
m4_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", span="64-64"];
m4_1208 [cluster="System.Convert.ToChar(string)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m4_2771 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="4184-4201"];
m4_590 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="new JsonTextReader(null)", span="961-961"];
m4_708 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1131-1131"];
m4_724 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1152-1152"];
m4_2704 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4115-4115"];
m4_239 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="409-409"];
m4_262 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="439-439"];
m4_299 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="488-488"];
m4_404 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="679-679"];
m4_422 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="714-714"];
m4_435 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="743-743"];
m4_679 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1100-1100"];
m4_686 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1107-1107"];
m4_693 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1114-1114"];
m4_1071 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1694-1694"];
m4_1106 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1732-1732"];
m4_1109 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1743-1743"];
m4_1284 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1994-1994"];
m4_1362 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2104-2104"];
m4_1620 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2481-2481"];
m4_1627 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2489-2489"];
m4_1634 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2497-2497"];
m4_1641 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2505-2505"];
m4_1648 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2513-2513"];
m4_1793 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2763-2763"];
m4_1801 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2772-2772"];
m4_1832 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2818-2818"];
m4_1888 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2901-2901"];
m4_1909 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2932-2932"];
m4_2255 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="3468-3468"];
m4_2508 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3850-3850"];
m4_2540 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3866-3866"];
m4_2543 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3884-3884"];
m4_2664 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="4041-4041"];
m4_2667 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="4042-4042"];
m4_2670 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="4051-4051"];
m4_2673 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="4060-4060"];
m4_2676 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="4061-4061"];
m4_2679 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="4062-4062"];
m4_2705 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="4116-4116"];
m4_1900 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="2918-2918"];
m4_2006 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="3074-3074"];
m4_2017 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="3090-3090"];
m4_2335 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="3615-3615"];
m4_2351 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="3635-3635"];
m4_2381 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="3676-3676"];
m4_2429 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="3736-3736"];
m4_2437 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsString()", span="3746-3746"];
m4_174 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.ReadAsInt32()", span="311-311"];
m4_191 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.ReadAsInt32()", span="334-334"];
m4_194 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.ReadAsInt32()", span="336-336"];
m4_197 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.ReadAsInt32()", span="338-338"];
m4_200 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.ReadAsInt32()", span="340-340"];
m4_242 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="413-413"];
m4_246 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="417-417"];
m4_589 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="961-961"];
m4_591 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="961-961"];
m4_597 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="974-974"];
m4_707 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1129-1133"];
m4_709 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1132-1132"];
m4_723 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1150-1154"];
m4_725 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1153-1153"];
m4_830 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1348-1348"];
m4_837 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1356-1356"];
m4_844 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1364-1364"];
m4_852 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1372-1372"];
m4_863 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1383-1383"];
m4_878 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1402-1402"];
m4_1031 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1654-1654"];
m4_1034 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1657-1657"];
m4_1037 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1660-1660"];
m4_1040 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1663-1663"];
m4_1043 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1669-1669"];
m4_1068 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="1690-1690"];
m4_1074 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="1703-1703"];
m4_1379 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="2130-2130"];
m4_1398 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2158-2158"];
m4_1405 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2167-2167"];
m4_1412 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="2175-2175"];
m4_1419 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2184-2184"];
m4_1433 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="2204-2204"];
m4_1440 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="2212-2212"];
m4_1511 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2321-2321"];
m4_1613 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="2473-2473"];
m4_1867 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDouble()", span="2870-2870"];
m4_1942 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="2979-2979"];
m4_1952 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="2994-2994"];
m4_1959 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3008-3008"];
m4_1966 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3019-3019"];
m4_1974 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="3030-3030"];
m4_1985 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3043-3043"];
m4_1996 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="3059-3059"];
m4_2029 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3105-3105"];
m4_2032 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3110-3110"];
m4_2035 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3115-3115"];
m4_2343 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBoolean()", span="3625-3625"];
m4_2359 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBoolean()", span="3645-3645"];
m4_2373 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBoolean()", span="3666-3666"];
m4_2389 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDouble()", span="3686-3686"];
m4_2397 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDouble()", span="3696-3696"];
m4_2405 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="3706-3706"];
m4_2413 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3716-3716"];
m4_2421 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3726-3726"];
m4_2453 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="3770-3770"];
m4_2703 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="4113-4119"];
m4_238 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="409-409"];
m4_240 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="409-409"];
m4_261 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="439-439"];
m4_263 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="439-439"];
m4_298 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="488-488"];
m4_300 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="488-488"];
m4_403 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="677-682"];
m4_405 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="677-682"];
m4_421 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="714-714"];
m4_423 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="714-714"];
m4_434 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="741-746"];
m4_436 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="741-746"];
m4_678 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1100-1100"];
m4_680 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1100-1100"];
m4_685 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1107-1107"];
m4_687 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1107-1107"];
m4_692 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1114-1114"];
m4_694 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1114-1114"];
m4_1070 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1694-1694"];
m4_1072 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1694-1694"];
m4_1105 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1732-1732"];
m4_1107 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1732-1732"];
m4_1108 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1743-1743"];
m4_1110 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1743-1743"];
m4_1283 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1994-1994"];
m4_1285 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1994-1994"];
m4_1361 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2104-2104"];
m4_1363 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2104-2104"];
m4_1619 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2481-2481"];
m4_1621 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2481-2481"];
m4_1626 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2489-2489"];
m4_1628 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2489-2489"];
m4_1633 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2497-2497"];
m4_1635 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2497-2497"];
m4_1640 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2505-2505"];
m4_1642 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2505-2505"];
m4_1647 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2513-2513"];
m4_1649 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2513-2513"];
m4_1792 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2763-2763"];
m4_1794 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2763-2763"];
m4_1800 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2772-2772"];
m4_1802 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2772-2772"];
m4_1831 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2818-2818"];
m4_1833 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2818-2818"];
m4_1887 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2901-2901"];
m4_1889 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2901-2901"];
m4_1908 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2932-2932"];
m4_1910 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2932-2932"];
m4_2254 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3468-3468"];
m4_2256 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3468-3468"];
m4_2507 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3850-3850"];
m4_2509 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3850-3850"];
m4_2539 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3866-3866"];
m4_2541 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3866-3866"];
m4_2542 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3884-3884"];
m4_2544 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3884-3884"];
m4_2663 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="4041-4041"];
m4_2665 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="4041-4041"];
m4_2666 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="4042-4042"];
m4_2668 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="4042-4042"];
m4_2669 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="4051-4051"];
m4_2671 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="4051-4051"];
m4_2672 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="4060-4060"];
m4_2674 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="4060-4060"];
m4_2675 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="4061-4061"];
m4_2677 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="4061-4061"];
m4_2678 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="4062-4062"];
m4_2680 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="4062-4062"];
m4_2706 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="4113-4119"];
m4_1899 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2918-2918"];
m4_1901 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2918-2918"];
m4_2005 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3072-3075"];
m4_2007 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3072-3075"];
m4_2016 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3088-3091"];
m4_2018 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3088-3091"];
m4_2334 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3615-3615"];
m4_2336 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3615-3615"];
m4_2350 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3635-3635"];
m4_2352 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3635-3635"];
m4_2380 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3676-3676"];
m4_2382 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3676-3676"];
m4_2428 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3736-3736"];
m4_2430 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3736-3736"];
m4_2436 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3746-3746"];
m4_2438 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3746-3746"];
m4_173 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="311-311"];
m4_175 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="311-311"];
m4_190 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="334-334"];
m4_192 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="334-334"];
m4_193 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="336-336"];
m4_195 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="336-336"];
m4_196 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="338-338"];
m4_198 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="338-338"];
m4_199 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="340-340"];
m4_201 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="340-340"];
m4_241 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="413-413"];
m4_243 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="413-413"];
m4_245 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="417-417"];
m4_247 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="417-417"];
m4_596 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="974-974"];
m4_598 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="974-974"];
m4_710 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1129-1133"];
m4_726 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1150-1154"];
m4_829 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1348-1348"];
m4_831 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1348-1348"];
m4_836 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1356-1356"];
m4_838 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1356-1356"];
m4_843 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1364-1364"];
m4_845 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1364-1364"];
m4_851 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1372-1372"];
m4_853 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1372-1372"];
m4_862 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1383-1383"];
m4_864 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1383-1383"];
m4_877 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1402-1402"];
m4_879 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1402-1402"];
m4_1030 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1654-1654"];
m4_1032 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1654-1654"];
m4_1033 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1657-1657"];
m4_1035 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1657-1657"];
m4_1036 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1660-1660"];
m4_1038 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1660-1660"];
m4_1039 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1663-1663"];
m4_1041 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1663-1663"];
m4_1042 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1669-1669"];
m4_1044 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1669-1669"];
m4_1067 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1690-1690"];
m4_1069 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1690-1690"];
m4_1073 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1703-1703"];
m4_1075 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1703-1703"];
m4_1378 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2130-2130"];
m4_1380 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2130-2130"];
m4_1397 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2158-2158"];
m4_1399 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2158-2158"];
m4_1404 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2167-2167"];
m4_1406 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2167-2167"];
m4_1411 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2175-2175"];
m4_1413 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2175-2175"];
m4_1418 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2184-2184"];
m4_1420 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2184-2184"];
m4_1432 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2204-2204"];
m4_1434 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2204-2204"];
m4_1439 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2212-2212"];
m4_1441 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2212-2212"];
m4_1510 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2321-2321"];
m4_1512 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2321-2321"];
m4_1612 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2473-2473"];
m4_1614 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2473-2473"];
m4_1866 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2870-2870"];
m4_1868 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2870-2870"];
m4_1941 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2977-2980"];
m4_1943 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2977-2980"];
m4_1951 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2992-2995"];
m4_1953 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2992-2995"];
m4_1958 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3006-3009"];
m4_1960 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3006-3009"];
m4_1965 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3017-3020"];
m4_1967 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3017-3020"];
m4_1973 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3028-3031"];
m4_1975 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3028-3031"];
m4_1984 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3041-3044"];
m4_1986 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3041-3044"];
m4_1995 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3057-3060"];
m4_1997 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3057-3060"];
m4_2028 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3103-3106"];
m4_2030 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3103-3106"];
m4_2031 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3108-3111"];
m4_2033 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3108-3111"];
m4_2034 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3113-3116"];
m4_2036 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3113-3116"];
m4_2342 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3625-3625"];
m4_2344 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3625-3625"];
m4_2358 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3645-3645"];
m4_2360 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3645-3645"];
m4_2372 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3666-3666"];
m4_2374 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3666-3666"];
m4_2388 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3686-3686"];
m4_2390 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3686-3686"];
m4_2396 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3696-3696"];
m4_2398 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3696-3696"];
m4_2404 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3706-3706"];
m4_2406 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3706-3706"];
m4_2412 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3716-3716"];
m4_2414 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3716-3716"];
m4_2420 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3726-3726"];
m4_2422 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3726-3726"];
m4_2452 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3770-3770"];
m4_2454 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3770-3770"];
m4_2777 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="var bytes = new UTF8Encoding().GetBytes(jsonString)", span="4194-4194"];
m4_2779 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Console.WriteLine(''server send: '' + bytes.Length)", span="4196-4196"];
m4_2780 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="clientReceivedEvent.WaitOne()", span="4199-4199"];
m4_2774 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="serverStartedEvent.Set()", span="4189-4189"];
m4_2776 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="var jsonString = ''[\r\n'' + String.Join('','', Enumerable.Repeat(''  \''testdata\''\r\n'', jsonArrayElementsCount).ToArray()) + '']''", span="4193-4193"];
m4_2778 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="serverSocket.Send(bytes)", span="4195-4195"];
m4_2773 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="server.Start()", span="4187-4187"];
m4_2775 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="var serverSocket = server.AcceptSocket()", span="4191-4191"];
m4_2772 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="var server = new TcpListener(IPAddress.Parse(''0.0.0.0''), port)", span="4186-4186"];
m4_2781 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="4184-4201"];
m4_2640 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m4_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2592-2592"];
m4_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2605-2605"];
m4_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2612-2612"];
m4_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2615-2615"];
m4_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2618-2618"];
m4_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2616-2616"];
m4_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2594-2603"];
m4_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="int i = 0", span="2610-2610"];
m4_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="i < 26", span="2610-2610"];
m4_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="i++", span="2610-2610"];
m4_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2592-2592"];
m4_2094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="3208-3208"];
m4_2096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3219-3219"];
m4_2097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3221-3221"];
m4_2099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3224-3224"];
m4_2101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3227-3227"];
m4_2103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3230-3230"];
m4_2106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3234-3234"];
m4_2108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3237-3237"];
m4_2111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3241-3241"];
m4_2113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3244-3244"];
m4_2115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3247-3247"];
m4_2118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3251-3251"];
m4_2120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3254-3254"];
m4_2124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3259-3259"];
m4_2126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3262-3262"];
m4_2128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3265-3265"];
m4_2130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3268-3268"];
m4_2098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3222-3222"];
m4_2100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="3225-3225"];
m4_2102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3228-3228"];
m4_2104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3231-3231"];
m4_2105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="3232-3232"];
m4_2107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3235-3235"];
m4_2109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3238-3238"];
m4_2110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="3239-3239"];
m4_2112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3242-3242"];
m4_2114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3245-3245"];
m4_2116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3248-3248"];
m4_2117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="3249-3249"];
m4_2119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3252-3252"];
m4_2121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="3255-3255"];
m4_2122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="3256-3256"];
m4_2123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="3257-3257"];
m4_2125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3260-3260"];
m4_2127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3263-3263"];
m4_2129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3266-3266"];
m4_2131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="3269-3269"];
m4_2095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="3210-3217"];
m4_2132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="3208-3208"];
m4_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2200-2200"];
m4_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="2202-2202"];
m4_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="2204-2204"];
m4_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2200-2200"];
m4_2455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3774-3774"];
m4_2461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3785-3785"];
m4_2479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3811-3811"];
m4_2462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3787-3787"];
m4_2463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3789-3789"];
m4_2466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3793-3793"];
m4_2469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3797-3797"];
m4_2472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3801-3801"];
m4_2475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3805-3805"];
m4_2478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3809-3809"];
m4_2480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3813-3813"];
m4_2496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3835-3835"];
m4_2458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="3780-3780"];
m4_2459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="3781-3781"];
m4_2464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3790-3790"];
m4_2465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3791-3791"];
m4_2467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3794-3794"];
m4_2468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3795-3795"];
m4_2470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3798-3798"];
m4_2471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3799-3799"];
m4_2473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3802-3802"];
m4_2474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3803-3803"];
m4_2476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3806-3806"];
m4_2477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3807-3807"];
m4_2482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3816-3816"];
m4_2483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="3817-3817"];
m4_2485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3820-3820"];
m4_2486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="3821-3821"];
m4_2488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3824-3824"];
m4_2489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="3825-3825"];
m4_2491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3828-3828"];
m4_2492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="3829-3829"];
m4_2494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3832-3832"];
m4_2495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="3833-3833"];
m4_2460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="3783-3783"];
m4_2481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="3815-3815"];
m4_2484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="3819-3819"];
m4_2487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="3823-3823"];
m4_2490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="3827-3827"];
m4_2493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="3831-3831"];
m4_2457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="3778-3778"];
m4_2456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="double d", span="3776-3776"];
m4_2497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3774-3774"];
m4_2796 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4252-4252"];
m4_2799 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonTextReaderTest.cs", label="((IDisposable)new UnmanagedResourceFakingJsonReader()).Dispose()", span="4254-4254"];
m4_2800 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4252-4252"];
m4_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", span="2863-2863"];
m4_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['Trump',1]''))", span="2865-2865"];
m4_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2867-2867"];
m4_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2874-2874"];
m4_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1d, reader.ReadAsDouble())", span="2873-2873"];
m4_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.ReadAsDouble(); },\r\n                ''Could not convert string to double: Trump. Path '[0]', line 1, position 8.'')", span="2869-2871"];
m4_1865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", span="2863-2863"];
m4_1934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", span="2972-2972"];
m4_1935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,1]''))", span="2974-2974"];
m4_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2975-2975"];
m4_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2983-2983"];
m4_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="2982-2982"];
m4_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="2977-2980"];
m4_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", span="2972-2972"];
m4_1152 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406"];
m4_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2098-2098"];
m4_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="2100-2100"];
m4_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2102-2102"];
m4_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="2104-2104"];
m4_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2098-2098"];
m4_2383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", span="3680-3680"];
m4_2385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3684-3684"];
m4_2384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs", label="string json = @''pie''", span="3682-3682"];
m4_2386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDouble(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3686-3686"];
m4_2387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", span="3680-3680"];
m4_334 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonTextReaderTest.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m4_22 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2347-2347"];
m4_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2351-2351"];
m4_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2353-2353"];
m4_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2356-2356"];
m4_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2364-2364"];
m4_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2354-2354"];
m4_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2357-2357"];
m4_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2360-2360"];
m4_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2361-2361"];
m4_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2362-2362"];
m4_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2365-2365"];
m4_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2349-2349"];
m4_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2359-2359"];
m4_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2347-2347"];
m4_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="735-735"];
m4_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="739-739"];
m4_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="string json = @'''hi' a''", span="737-737"];
m4_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="741-746"];
m4_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="735-735"];
m4_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="988-988"];
m4_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1002-1002"];
m4_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1003-1003"];
m4_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1006-1006"];
m4_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1009-1009"];
m4_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1010-1010"];
m4_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)i, reader.Value)", span="1007-1007"];
m4_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="string json = sw.ToString()", span="1000-1000"];
m4_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int i = 0", span="1004-1004"];
m4_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i < valueCount", span="1004-1004"];
m4_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i++", span="1004-1004"];
m4_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter()", span="991-991"];
m4_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteEndArray()", span="998-998"];
m4_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i < valueCount", span="994-994"];
m4_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int valueCount = 10000", span="990-990"];
m4_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="992-992"];
m4_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int i = 0", span="994-994"];
m4_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i++", span="994-994"];
m4_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteValue(i)", span="996-996"];
m4_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteStartArray()", span="993-993"];
m4_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="988-988"];
m4_1484 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m4_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2309-2309"];
m4_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2313-2313"];
m4_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2315-2315"];
m4_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2318-2318"];
m4_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2316-2316"];
m4_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2319-2319"];
m4_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2311-2311"];
m4_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="2321-2321"];
m4_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2309-2309"];
m4_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2154-2154"];
m4_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2156-2156"];
m4_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2158-2158"];
m4_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2154-2154"];
m4_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="591-591"];
m4_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="594-594"];
m4_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="601-601"];
m4_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="596-596"];
m4_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="603-603"];
m4_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="605-605"];
m4_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="MemoryStream ms = new MemoryStream()", span="593-593"];
m4_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader.Close()", span="597-597"];
m4_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="ms = new MemoryStream()", span="600-600"];
m4_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader.Close()", span="604-604"];
m4_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(ms.CanRead)", span="598-598"];
m4_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="591-591"];
m4_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="212-212"];
m4_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'''))", span="214-214"];
m4_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'''))", span="220-220"];
m4_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEqual(expected, data)", span="218-218"];
m4_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEqual(expected, data)", span="224-224"];
m4_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="byte[] data = jsonTextReader.ReadAsBytes()", span="215-215"];
m4_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="data = jsonTextReader.ReadAsBytes()", span="221-221"];
m4_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="216-216"];
m4_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="222-222"];
m4_115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="212-212"];
m4_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2243-2243"];
m4_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2247-2247"];
m4_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2249-2249"];
m4_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2252-2252"];
m4_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2255-2255"];
m4_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2259-2259"];
m4_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2250-2250"];
m4_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2253-2253"];
m4_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2256-2256"];
m4_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="2257-2257"];
m4_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2260-2260"];
m4_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="2245-2245"];
m4_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2243-2243"];
m4_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2325-2325"];
m4_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2329-2329"];
m4_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2331-2331"];
m4_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2334-2334"];
m4_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2342-2342"];
m4_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2332-2332"];
m4_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2335-2335"];
m4_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2338-2338"];
m4_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2339-2339"];
m4_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2340-2340"];
m4_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2343-2343"];
m4_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2327-2327"];
m4_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2337-2337"];
m4_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2325-2325"];
m4_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="970-970"];
m4_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="972-972"];
m4_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="974-974"];
m4_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="970-970"];
m4_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2758-2758"];
m4_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2761-2761"];
m4_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="string json = ''new Dat''", span="2760-2760"];
m4_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2763-2763"];
m4_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2758-2758"];
m4_2586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3962-3962"];
m4_2588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3966-3966"];
m4_2598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3979-3979"];
m4_2608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3992-3992"];
m4_2618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="4005-4005"];
m4_2628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="4017-4017"];
m4_2590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3969-3969"];
m4_2591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3970-3970"];
m4_2594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3973-3973"];
m4_2597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3976-3976"];
m4_2600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3982-3982"];
m4_2601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3983-3983"];
m4_2604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3986-3986"];
m4_2607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3989-3989"];
m4_2610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3995-3995"];
m4_2611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3996-3996"];
m4_2614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3999-3999"];
m4_2617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="4002-4002"];
m4_2620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="4008-4008"];
m4_2627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="4015-4015"];
m4_2630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="4020-4020"];
m4_2637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="4027-4027"];
m4_2592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3971-3971"];
m4_2593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3972-3972"];
m4_2595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3974-3974"];
m4_2596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3975-3975"];
m4_2602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3984-3984"];
m4_2603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3985-3985"];
m4_2605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3987-3987"];
m4_2606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3988-3988"];
m4_2612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3997-3997"];
m4_2613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3998-3998"];
m4_2615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="4000-4000"];
m4_2616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="4001-4001"];
m4_2622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="4010-4010"];
m4_2623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="4011-4011"];
m4_2625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="4013-4013"];
m4_2626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="4014-4014"];
m4_2632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="4022-4022"];
m4_2633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="4023-4023"];
m4_2635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="4025-4025"];
m4_2636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="4026-4026"];
m4_2587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3964-3964"];
m4_2589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3967-3967"];
m4_2599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3980-3980"];
m4_2609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3993-3993"];
m4_2619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="4006-4006"];
m4_2621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="4009-4009"];
m4_2624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="4012-4012"];
m4_2629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="4018-4018"];
m4_2631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="4021-4021"];
m4_2634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="4024-4024"];
m4_2638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3962-3962"];
m4_2062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", span="3158-3158"];
m4_2064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3162-3162"];
m4_2065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3164-3164"];
m4_2067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3167-3167"];
m4_2087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3197-3197"];
m4_2089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3200-3200"];
m4_2066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3165-3165"];
m4_2068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3168-3168"];
m4_2069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="3170-3170"];
m4_2070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3171-3171"];
m4_2071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.ReadAsInt32())", span="3173-3173"];
m4_2072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3174-3174"];
m4_2073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''three'', reader.ReadAsString())", span="3176-3176"];
m4_2074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3177-3177"];
m4_2075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''four'', reader.ReadAsString())", span="3179-3179"];
m4_2076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3180-3180"];
m4_2077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsString())", span="3182-3182"];
m4_2078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3183-3183"];
m4_2079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="3185-3185"];
m4_2080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3186-3186"];
m4_2081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3.99m, reader.ReadAsDecimal())", span="3188-3188"];
m4_2082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3189-3189"];
m4_2083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="3191-3191"];
m4_2084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3192-3192"];
m4_2086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="3195-3195"];
m4_2088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3198-3198"];
m4_2090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3201-3201"];
m4_2091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="3203-3203"];
m4_2092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3204-3204"];
m4_2063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="string json = @''/*comment*/[/*comment*/1/*comment*/,2,/*comment*//*comment*/''''three''''/*comment*/,''''four''''/*comment*/,null,/*comment*/null,3.99,1.1/*comment*/,''/*comment*/]/*comment*/''", span="3160-3160"];
m4_2085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3194-3194"];
m4_2093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", span="3158-3158"];
m4_1486 [cluster="System.TimeSpan.FromHours(double)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m4_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2135-2135"];
m4_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2137-2137"];
m4_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2140-2140"];
m4_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="2139-2139"];
m4_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2135-2135"];
m4_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="544-544"];
m4_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="547-547"];
m4_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="550-550"];
m4_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="553-553"];
m4_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="556-556"];
m4_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="559-559"];
m4_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="562-562"];
m4_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="565-565"];
m4_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="568-568"];
m4_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="571-571"];
m4_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="573-573"];
m4_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="574-574"];
m4_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="575-575"];
m4_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="544-544"];
m4_2798 [cluster="System.GC.WaitForPendingFinalizers()", file="JsonTextReaderTest.cs", label="Entry System.GC.WaitForPendingFinalizers()", span="0-0"];
m4_2271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3496-3496"];
m4_2273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3500-3500"];
m4_2274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3502-3502"];
m4_2276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3505-3505"];
m4_2278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3508-3508"];
m4_2280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3511-3511"];
m4_2282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3514-3514"];
m4_2284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3517-3517"];
m4_2275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3503-3503"];
m4_2277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3506-3506"];
m4_2279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3509-3509"];
m4_2281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3512-3512"];
m4_2283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3515-3515"];
m4_2285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3518-3518"];
m4_2272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="string json = @''[0,1,2 , 3]''", span="3498-3498"];
m4_2286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3496-3496"];
m4_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="443-443"];
m4_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="447-447"];
m4_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="450-450"];
m4_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="453-453"];
m4_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="458-458"];
m4_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="463-463"];
m4_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="468-468"];
m4_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="473-473"];
m4_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="451-451"];
m4_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="454-454"];
m4_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="455-455"];
m4_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="456-456"];
m4_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="459-459"];
m4_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="460-460"];
m4_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="461-461"];
m4_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="464-464"];
m4_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="465-465"];
m4_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="466-466"];
m4_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="469-469"];
m4_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="470-470"];
m4_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="471-471"];
m4_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="474-474"];
m4_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="445-445"];
m4_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="448-448"];
m4_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="443-443"];
m4_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2189-2189"];
m4_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="2191-2191"];
m4_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, data.Length)", span="2194-2194"];
m4_1425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, data[0])", span="2195-2195"];
m4_1426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, data[1])", span="2196-2196"];
m4_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="2193-2193"];
m4_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2189-2189"];
m4_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", span="3098-3098"];
m4_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[56,56]''))", span="3100-3100"];
m4_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3101-3101"];
m4_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3119-3119"];
m4_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(56, reader.ReadAsInt32())", span="3118-3118"];
m4_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: 5. Path '', line 1, position 2.'')", span="3103-3106"];
m4_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: 6. Path '', line 1, position 3.'')", span="3108-3111"];
m4_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 4.'')", span="3113-3116"];
m4_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", span="3098-3098"];
m4_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", span="3035-3035"];
m4_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,,1]''))", span="3037-3037"];
m4_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3038-3038"];
m4_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3047-3047"];
m4_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="3046-3046"];
m4_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3039-3039"];
m4_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 4.'')", span="3041-3044"];
m4_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", span="3035-3035"];
m4_2788 [cluster="string.Join(string, params string[])", file="JsonTextReaderTest.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m4_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2639-2639"];
m4_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2642-2642"];
m4_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2644-2644"];
m4_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2648-2648"];
m4_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2645-2645"];
m4_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2646-2646"];
m4_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2649-2649"];
m4_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date\n()''", span="2641-2641"];
m4_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2639-2639"];
m4_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="2011-2011"];
m4_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2014-2014"];
m4_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2013-2013"];
m4_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2016-2016"];
m4_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2019-2019"];
m4_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2023-2023"];
m4_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2027-2027"];
m4_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2031-2031"];
m4_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="2034-2034"];
m4_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2017-2017"];
m4_1302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2020-2020"];
m4_1303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="2021-2021"];
m4_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2024-2024"];
m4_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="2025-2025"];
m4_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2028-2028"];
m4_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="2029-2029"];
m4_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2032-2032"];
m4_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="2011-2011"];
m4_358 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonTextReaderTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m4_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1533-1533"];
m4_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1538-1538"];
m4_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1539-1539"];
m4_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1541-1541"];
m4_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1542-1542"];
m4_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1544-1544"];
m4_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1548-1548"];
m4_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1540-1540"];
m4_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1543-1543"];
m4_966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1547-1547"];
m4_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1549-1549"];
m4_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1536-1536"];
m4_964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1545-1545"];
m4_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1551-1551"];
m4_965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1546-1546"];
m4_955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="1535-1535"];
m4_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1533-1533"];
m4_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1180-1180"];
m4_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1184-1184"];
m4_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1192-1192"];
m4_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1185-1185"];
m4_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1193-1193"];
m4_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1186-1186"];
m4_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1195-1195"];
m4_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="1182-1182"];
m4_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="BigInteger total = i + -j", span="1190-1190"];
m4_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="int j = 1", span="1188-1188"];
m4_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="j++", span="1188-1188"];
m4_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="j < 1000", span="1188-1188"];
m4_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1180-1180"];
m4_627 [cluster="System.IO.StringWriter.StringWriter()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m4_2763 [cluster="System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", file="JsonTextReaderTest.cs", label="Entry System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", span="0-0"];
m4_740 [cluster="BigInteger.cstr", file="JsonTextReaderTest.cs", label="Entry BigInteger.cstr", span=""];
m4_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2117-2117"];
m4_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2119-2119"];
m4_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2122-2122"];
m4_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="2121-2121"];
m4_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2117-2117"];
m4_1161 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="763-763"];
m4_2337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", span="3619-3619"];
m4_2339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3623-3623"];
m4_2338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs", label="string json = @''falseeeee''", span="3621-3621"];
m4_2340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="3625-3625"];
m4_2341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", span="3619-3619"];
m4_1890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", span="2910-2910"];
m4_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false1}''))", span="2912-2912"];
m4_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2914-2914"];
m4_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2915-2915"];
m4_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2921-2921"];
m4_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2922-2922"];
m4_1897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2923-2923"];
m4_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.ReadAsString(); },\r\n                ''Unexpected character encountered while parsing value: 1. Path 'Test1', line 1, position 14.'')", span="2917-2919"];
m4_1898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", span="2910-2910"];
m4_1157 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414"];
m4_2399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", span="3700-3700"];
m4_2401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3704-3704"];
m4_2400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs", label="string json = @''pie''", span="3702-3702"];
m4_2402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3706-3706"];
m4_2403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", span="3700-3700"];
m4_846 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="511-511"];
m4_1968 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m4_605 [cluster="string.String(char, int)", file="JsonTextReaderTest.cs", label="Entry string.String(char, int)", span="0-0"];
m4_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2653-2653"];
m4_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2656-2656"];
m4_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2658-2658"];
m4_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2661-2661"];
m4_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2664-2664"];
m4_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2667-2667"];
m4_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2670-2670"];
m4_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2673-2673"];
m4_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2676-2676"];
m4_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2659-2659"];
m4_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2662-2662"];
m4_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2665-2665"];
m4_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2668-2668"];
m4_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2671-2671"];
m4_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2674-2674"];
m4_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2677-2677"];
m4_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2655-2655"];
m4_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2653-2653"];
m4_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", span="3082-3082"];
m4_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="3084-3084"];
m4_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3085-3085"];
m4_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3094-3094"];
m4_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(string.Empty, reader.ReadAsString())", span="3093-3093"];
m4_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3086-3086"];
m4_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsString();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="3088-3091"];
m4_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", span="3082-3082"];
m4_119 [cluster="System.Guid.ToByteArray()", file="JsonTextReaderTest.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m4_2249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="3462-3462"];
m4_2251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3466-3466"];
m4_2250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="string json = @''/''", span="3464-3464"];
m4_2252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="3468-3468"];
m4_2253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="3462-3462"];
m4_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", span="2835-2835"];
m4_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''null''))", span="2837-2837"];
m4_1844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsDouble())", span="2838-2838"];
m4_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", span="2835-2835"];
m4_2407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", span="3710-3710"];
m4_2409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3714-3714"];
m4_2408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs", label="string json = @''pie''", span="3712-3712"];
m4_2410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTime(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3716-3716"];
m4_2411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", span="3710-3710"];
m4_2797 [cluster="System.GC.Collect()", file="JsonTextReaderTest.cs", label="Entry System.GC.Collect()", span="0-0"];
m4_2133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="3273-3273"];
m4_2135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3295-3295"];
m4_2136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3297-3297"];
m4_2140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3302-3302"];
m4_2143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3306-3306"];
m4_2146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3310-3310"];
m4_2150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3315-3315"];
m4_2153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3319-3319"];
m4_2157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3324-3324"];
m4_2161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3329-3329"];
m4_2165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3334-3334"];
m4_2169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3339-3339"];
m4_2172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3343-3343"];
m4_2176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3348-3348"];
m4_2178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3351-3351"];
m4_2181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3355-3355"];
m4_2184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3359-3359"];
m4_2187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3363-3363"];
m4_2190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3367-3367"];
m4_2192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3370-3370"];
m4_2195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3374-3374"];
m4_2197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3377-3377"];
m4_2199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3380-3380"];
m4_2201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3383-3383"];
m4_2203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3386-3386"];
m4_2205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3389-3389"];
m4_2207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3392-3392"];
m4_2209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3395-3395"];
m4_2211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3398-3398"];
m4_2214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3402-3402"];
m4_2217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="3406-3406"];
m4_2137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3298-3298"];
m4_2138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="3299-3299"];
m4_2139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="3300-3300"];
m4_2141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="3303-3303"];
m4_2142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="3304-3304"];
m4_2144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3307-3307"];
m4_2145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="3308-3308"];
m4_2147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3311-3311"];
m4_2148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="3312-3312"];
m4_2149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="3313-3313"];
m4_2151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3316-3316"];
m4_2152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="3317-3317"];
m4_2154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3320-3320"];
m4_2155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="3321-3321"];
m4_2156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="3322-3322"];
m4_2158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3325-3325"];
m4_2159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="3326-3326"];
m4_2160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="3327-3327"];
m4_2162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3330-3330"];
m4_2163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="3331-3331"];
m4_2164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="3332-3332"];
m4_2166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3335-3335"];
m4_2167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="3336-3336"];
m4_2168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="3337-3337"];
m4_2170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3340-3340"];
m4_2171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="3341-3341"];
m4_2173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="3344-3344"];
m4_2174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="3345-3345"];
m4_2175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="3346-3346"];
m4_2177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3349-3349"];
m4_2179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3352-3352"];
m4_2180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="3353-3353"];
m4_2182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3356-3356"];
m4_2183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="3357-3357"];
m4_2185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="3360-3360"];
m4_2186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="3361-3361"];
m4_2188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3364-3364"];
m4_2189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="3365-3365"];
m4_2191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3368-3368"];
m4_2193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3371-3371"];
m4_2194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="3372-3372"];
m4_2196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3375-3375"];
m4_2198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3378-3378"];
m4_2200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3381-3381"];
m4_2202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3384-3384"];
m4_2204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3387-3387"];
m4_2206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3390-3390"];
m4_2208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3393-3393"];
m4_2210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="3396-3396"];
m4_2212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3399-3399"];
m4_2213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="3400-3400"];
m4_2215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3403-3403"];
m4_2216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="3404-3404"];
m4_2134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n                          @'',//comment after comma'' + StringUtils.CarriageReturnLineFeed +\r\n                          @''''''ExpiryDate''''://comment'' + StringUtils.LineFeed +\r\n                          @''new '' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="3275-3293"];
m4_2218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="3273-3273"];
m4_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2391-2391"];
m4_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2395-2395"];
m4_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2398-2398"];
m4_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2401-2401"];
m4_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2411-2411"];
m4_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2399-2399"];
m4_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2402-2402"];
m4_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2405-2405"];
m4_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2406-2406"];
m4_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2412-2412"];
m4_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2409-2409"];
m4_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2393-2393"];
m4_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2396-2396"];
m4_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2404-2404"];
m4_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2408-2408"];
m4_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2391-2391"];
m4_629 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208"];
m4_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="241-241"];
m4_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="247-247"];
m4_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="249-249"];
m4_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="250-250"];
m4_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="252-254"];
m4_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs", label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="243-245"];
m4_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="241-241"];
m4_1557 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m4_1159 [cluster="System.Text.StringBuilder.ToString()", file="JsonTextReaderTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m4_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="349-349"];
m4_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="355-355"];
m4_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="357-357"];
m4_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="360-360"];
m4_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="371-371"];
m4_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="374-374"];
m4_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="358-358"];
m4_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="361-361"];
m4_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="372-372"];
m4_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="351-353"];
m4_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="jsonTextReader.ReadAsBytes()", span="365-365"];
m4_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label=FormatException, span="367-367"];
m4_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="349-349"];
m4_176 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m4_356 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonTextReaderTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m4_2287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", span="3523-3523"];
m4_2289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3545-3545"];
m4_2290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3550-3550"];
m4_2291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('''', reader.Path)", span="3551-3551"];
m4_2292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3553-3553"];
m4_2293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="3554-3554"];
m4_2294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3556-3556"];
m4_2295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="3557-3557"];
m4_2296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3559-3559"];
m4_2297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="3560-3560"];
m4_2298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3562-3562"];
m4_2299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="3563-3563"];
m4_2300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3565-3565"];
m4_2301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[4]'', reader.Path)", span="3566-3566"];
m4_2302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3568-3568"];
m4_2303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[5]'', reader.Path)", span="3569-3569"];
m4_2304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3571-3571"];
m4_2305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[6]'', reader.Path)", span="3572-3572"];
m4_2306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3574-3574"];
m4_2307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[7]'', reader.Path)", span="3575-3575"];
m4_2308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3577-3577"];
m4_2309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[8]'', reader.Path)", span="3578-3578"];
m4_2310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3580-3580"];
m4_2311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[9]'', reader.Path)", span="3581-3581"];
m4_2312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3583-3583"];
m4_2313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[10]'', reader.Path)", span="3584-3584"];
m4_2314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3586-3586"];
m4_2315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[11]'', reader.Path)", span="3587-3587"];
m4_2316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3589-3589"];
m4_2317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[12]'', reader.Path)", span="3590-3590"];
m4_2318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3592-3592"];
m4_2319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[13]'', reader.Path)", span="3593-3593"];
m4_2320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3595-3595"];
m4_2321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[14]'', reader.Path)", span="3596-3596"];
m4_2322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3598-3598"];
m4_2323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3599-3599"];
m4_2324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('''', reader.Path)", span="3600-3600"];
m4_2325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3602-3602"];
m4_2326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3603-3603"];
m4_2327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('''', reader.Path)", span="3604-3604"];
m4_2288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  // comment!\r\n  /* comment! */\r\n  '',\r\n  null\r\n]''", span="3525-3543"];
m4_2328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", span="3523-3523"];
m4_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2171-2171"];
m4_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2173-2173"];
m4_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2175-2175"];
m4_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2171-2171"];
m4_357 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextReaderTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m4_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", span="2849-2849"];
m4_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''0XCAFEBABE''))", span="2851-2851"];
m4_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3405691582d, reader.ReadAsDouble())", span="2852-2852"];
m4_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", span="2849-2849"];
m4_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2287-2287"];
m4_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2291-2291"];
m4_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2293-2293"];
m4_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2296-2296"];
m4_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2304-2304"];
m4_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2294-2294"];
m4_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2297-2297"];
m4_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2300-2300"];
m4_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2301-2301"];
m4_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2302-2302"];
m4_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2305-2305"];
m4_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2289-2289"];
m4_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2299-2299"];
m4_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2287-2287"];
m4_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2477-2477"];
m4_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2479-2479"];
m4_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="2481-2481"];
m4_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2477-2477"];
m4_2789 [cluster="System.Net.Sockets.Socket.Send(byte[])", file="JsonTextReaderTest.cs", label="Entry System.Net.Sockets.Socket.Send(byte[])", span="0-0"];
m4_172 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m4_1154 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="921-921"];
m4_2345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", span="3629-3629"];
m4_2347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3633-3633"];
m4_2346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs", label="string json = @''falseeeee''", span="3631-3631"];
m4_2348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="3635-3635"];
m4_2349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", span="3629-3629"];
m4_2500 [cluster="double.ToString(string)", file="JsonTextReaderTest.cs", label="Entry double.ToString(string)", span="0-0"];
m4_2219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", span="3410-3410"];
m4_2221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3419-3419"];
m4_2222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3421-3421"];
m4_2236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="reader.Read()", span="3440-3440"];
m4_2239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="3444-3444"];
m4_2223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="3422-3422"];
m4_2225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="3425-3425"];
m4_2226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="3426-3426"];
m4_2228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="3429-3429"];
m4_2229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="3430-3430"];
m4_2231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="3433-3433"];
m4_2232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="3434-3434"];
m4_2234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="3437-3437"];
m4_2235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="3438-3438"];
m4_2237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="3441-3441"];
m4_2238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(string.Empty, reader.Path)", span="3442-3442"];
m4_2220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="3412-3417"];
m4_2224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3424-3424"];
m4_2227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3428-3428"];
m4_2230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3432-3432"];
m4_2233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="3436-3436"];
m4_2240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", span="3410-3410"];
m4_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2216-2216"];
m4_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2220-2220"];
m4_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2225-2225"];
m4_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2228-2228"];
m4_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2232-2232"];
m4_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2236-2236"];
m4_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2239-2239"];
m4_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2226-2226"];
m4_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2229-2229"];
m4_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="2230-2230"];
m4_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2233-2233"];
m4_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="2234-2234"];
m4_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2237-2237"];
m4_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="2218-2218"];
m4_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2216-2216"];
m4_2885 [file="JsonTextReaderTest.cs", label=total, span=""];
m4_2886 [file="JsonTextReaderTest.cs", label=total, span=""];
m4_2949 [file="JsonTextReaderTest.cs", label=json, span=""];
m4_2874 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2875 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2876 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2878 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2879 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2880 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2882 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2883 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2884 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2896 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2897 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2898 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2899 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2909 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2910 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2911 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2912 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2913 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2914 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2915 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2916 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2918 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2920 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2931 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2946 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2947 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2948 [file="JsonTextReaderTest.cs", label=jsonTextReader, span=""];
m4_2877 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m4_2919 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2928 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2929 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2932 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2934 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2937 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2943 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2944 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2872 [file="JsonTextReaderTest.cs", label=jsonTextReader, span=""];
m4_2873 [file="JsonTextReaderTest.cs", label=jsonTextReader, span=""];
m4_2881 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2889 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2890 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2891 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2892 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2893 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2894 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2895 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2900 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2901 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2902 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2903 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2904 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2905 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2906 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2907 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2908 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2917 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2921 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2922 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2923 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2924 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2925 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2926 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2927 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2930 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2933 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2935 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2936 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2938 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2939 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2940 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2941 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2942 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2945 [file="JsonTextReaderTest.cs", label=reader, span=""];
m4_2955 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m4_2953 [file="JsonTextReaderTest.cs", label=clientReceivedEvent, span=""];
m4_2951 [file="JsonTextReaderTest.cs", label=serverStartedEvent, span=""];
m4_2952 [file="JsonTextReaderTest.cs", label=jsonArrayElementsCount, span=""];
m4_2950 [file="JsonTextReaderTest.cs", label=port, span=""];
m5_2415 [cluster="XmlDocument.cstr", file="JsonWriter.cs", label="Entry XmlDocument.cstr", span=""];
m5_1525 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27"];
m5_4064 [cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35"];
m5_2173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4859-4859"];
m5_2174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4861-4861"];
m5_2175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4859-4859"];
m5_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1585-1585"];
m5_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonWriter.cs", label="_stringValue = stringValue", span="1587-1587"];
m5_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonWriter.cs", label="_intValue = intValue", span="1588-1588"];
m5_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonWriter.cs", label="_person1 = p1", span="1589-1589"];
m5_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonWriter.cs", label="_person2 = p2", span="1590-1590"];
m5_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonWriter.cs", label="_person3 = p3", span="1591-1591"];
m5_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1585-1585"];
m5_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1718-1718"];
m5_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="string s = null", span="1720-1720"];
m5_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="var v = new JValue(s)", span="1721-1721"];
m5_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="var o = JObject.FromObject(new { title = v })", span="1722-1722"];
m5_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1724-1727"];
m5_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="Assert.AreEqual(null, v.Value)", span="1731-1731"];
m5_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="1732-1732"];
m5_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="string output = o.ToString()", span="1729-1729"];
m5_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1734-1736"];
m5_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1718-1718"];
m5_250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="612-612"];
m5_251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="614-614"];
m5_252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="616-618"];
m5_253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="620-623"];
m5_254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c2)", span="625-625"];
m5_255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="627-627"];
m5_256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="629-631"];
m5_257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="633-635"];
m5_258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="637-637"];
m5_259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="639-639"];
m5_260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="612-612"];
m5_836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1748-1748"];
m5_1687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3625-3625"];
m5_1688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonWriter.cs", label="_name = name", span="3627-3627"];
m5_1689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonWriter.cs", label="Age = age", span="3628-3628"];
m5_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonWriter.cs", label="Rank = rank", span="3629-3629"];
m5_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonWriter.cs", label="Title = title", span="3630-3630"];
m5_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3625-3625"];
m5_2130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4714-4714"];
m5_18 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="387-387"];
m5_1194 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m5_641 [cluster="Unk.ReferenceResolverProvider", file="JsonWriter.cs", label="Entry Unk.ReferenceResolverProvider", span=""];
m5_3612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", span="8187-8187"];
m5_3613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonWriter.cs", label="string json = @''{one:1} // This is just a comment\r\n/* This is just a comment\r\nover multiple\r\nlines.*/\r\n\r\n// This is just another comment. But here comes an empty object.\r\n{}''", span="8189-8195"];
m5_3614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { CheckAdditionalContent = true }", span="8197-8197"];
m5_3616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 7, position 0.'')", span="8199-8199"];
m5_3615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonWriter.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8198-8198"];
m5_3617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", span="8187-8187"];
m5_15 [cluster="System.IO.File.OpenRead(string)", file="JsonWriter.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m5_2416 [cluster="Unk.LoadXml", file="JsonWriter.cs", label="Entry Unk.LoadXml", span=""];
m5_886 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="826-826"];
m5_564 [cluster="System.Globalization.CultureInfo.ToString()", file="JsonWriter.cs", label="Entry System.Globalization.CultureInfo.ToString()", span="0-0"];
m5_2260 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m5_879 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="574-574"];
m5_2434 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="917-917"];
m5_3205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", span="7314-7314"];
m5_3206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="NullableGuid ng = new NullableGuid {Id = Guid.Empty}", span="7316-7316"];
m5_3207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="NullableGuidCountingJsonTextWriter writer = new NullableGuidCountingJsonTextWriter(new StreamWriter(Stream.Null))", span="7317-7317"];
m5_3209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="serializer.Serialize(writer, ng)", span="7319-7319"];
m5_3213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="serializer.Serialize(writer, ng)", span="7323-7323"];
m5_3208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="JsonSerializer serializer = JsonSerializer.Create()", span="7318-7318"];
m5_3210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="Assert.AreEqual(1, writer.NullableGuidCount)", span="7320-7320"];
m5_3214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="Assert.AreEqual(2, writer.NullableGuidCount)", span="7324-7324"];
m5_3212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="serializer.TraceWriter = traceWriter", span="7322-7322"];
m5_3211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="7321-7321"];
m5_3215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", span="7314-7314"];
m5_4054 [cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35"];
m5_4333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9967-9967"];
m5_4334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="return objectType == typeof(System.Net.Mail.Attachment);", span="9969-9969"];
m5_4335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9967-9967"];
m5_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1801-1801"];
m5_845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1803-1803"];
m5_846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(original)", span="1804-1804"];
m5_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1805-1805"];
m5_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="Assert.AreEqual(expectedJson, json)", span="1806-1806"];
m5_849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1801-1801"];
m5_1332 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m5_1774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3859-3859"];
m5_1775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonWriter.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3861-3861"];
m5_1776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonWriter.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3863-3863"];
m5_1777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonWriter.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3865-3865"];
m5_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonWriter.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="3866-3866"];
m5_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonWriter.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3867-3867"];
m5_1780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3859-3859"];
m5_480 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="404-404"];
m5_1279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2753-2753"];
m5_1280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonWriter.cs", label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2755-2755"];
m5_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(date)", span="2757-2757"];
m5_1282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonWriter.cs", label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2758-2758"];
m5_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2753-2753"];
m5_963 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonWriter.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m5_565 [cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31"];
m5_999 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m5_2077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4541-4541"];
m5_2078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonWriter.cs", label=initial, span="4543-4543"];
m5_2079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonWriter.cs", label="Add(pair.Key, pair.Value)", span="4545-4545"];
m5_2080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4541-4541"];
m5_2470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5549-5549"];
m5_2471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="5551-5566"];
m5_2472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5549-5549"];
m5_936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1961-1961"];
m5_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1629-1629"];
m5_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1631-1634"];
m5_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1635-1638"];
m5_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="p1.Spouse = p2", span="1640-1640"];
m5_769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="p2.Spouse = p1", span="1641-1641"];
m5_770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1643-1643"];
m5_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="obj._parent = obj", span="1644-1644"];
m5_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(obj, settings)", span="1652-1652"];
m5_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1682-1682"];
m5_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1683-1683"];
m5_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1684-1684"];
m5_779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1685-1685"];
m5_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1686-1686"];
m5_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1646-1650"];
m5_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1654-1678"];
m5_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1680-1680"];
m5_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1687-1687"];
m5_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1688-1688"];
m5_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1689-1689"];
m5_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Assert.AreEqual(obj2._parent, obj2)", span="1690-1690"];
m5_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1629-1629"];
m5_1183 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="719-719"];
m5_1909 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="149-149"];
m5_1371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2910-2910"];
m5_1372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2912-2912"];
m5_1373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2913-2913"];
m5_1377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2923-2923"];
m5_1378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2924-2924"];
m5_1374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2915-2918"];
m5_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2919-2919"];
m5_1376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2921-2921"];
m5_1379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2910-2910"];
m5_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3922-3922"];
m5_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonWriter.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3924-3924"];
m5_1815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonWriter.cs", label="Assert.AreEqual(3, l.Count)", span="3925-3925"];
m5_1816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonWriter.cs", label="Assert.AreEqual(3.3m, l[0])", span="3927-3927"];
m5_1817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonWriter.cs", label="Assert.AreEqual(null, l[1])", span="3928-3928"];
m5_1818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonWriter.cs", label="Assert.AreEqual(1.1m, l[2])", span="3929-3929"];
m5_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3922-3922"];
m5_3967 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="0-0"];
m5_3097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="7076-7076"];
m5_3098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonWriter.cs", label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="7078-7078"];
m5_3099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(d1)", span="7080-7080"];
m5_3101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonWriter.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7084-7084"];
m5_3102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonWriter.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7085-7085"];
m5_3100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonWriter.cs", label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="7082-7082"];
m5_3103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="7076-7076"];
m5_1754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3791-3791"];
m5_1755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonWriter.cs", label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3793-3796"];
m5_1756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(value)", span="3798-3798"];
m5_1757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3800-3800"];
m5_1758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3791-3791"];
m5_2620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5874-5874"];
m5_2621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonWriter.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5876-5876"];
m5_2622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5877-5877"];
m5_2623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5874-5874"];
m5_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3207-3207"];
m5_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="3209-3209"];
m5_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="3211-3211"];
m5_1536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Assert.AreEqual(json, after)", span="3222-3222"];
m5_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="3213-3213"];
m5_1530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Assert.AreEqual(''After!'', aa.After)", span="3214-3214"];
m5_1531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="3215-3215"];
m5_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="3216-3216"];
m5_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="3217-3217"];
m5_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="3218-3218"];
m5_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="string after = JsonConvert.SerializeObject(aa)", span="3220-3220"];
m5_1537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3207-3207"];
m5_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3894-3894"];
m5_1794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonWriter.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3896-3896"];
m5_1795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Events.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3898-3898"];
m5_1796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3894-3894"];
m5_3375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7660-7660"];
m5_4280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="9826-9826"];
m5_442 [cluster="System.Linq.Enumerable.Range(int, int)", file="JsonWriter.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m5_3253 [cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27"];
m5_1396 [cluster="System.Convert.ToDateTime(string)", file="JsonWriter.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m5_1752 [cluster="System.Uri.Uri(string)", file="JsonWriter.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m5_2261 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m5_2694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="6005-6005"];
m5_1086 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="357-357"];
m5_2789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6253-6253"];
m5_2790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonWriter.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="6255-6260"];
m5_2791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonWriter.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="6262-6262"];
m5_2792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonWriter.cs", label="Assert.AreEqual(40, p.Age)", span="6263-6263"];
m5_2793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonWriter.cs", label="Assert.AreEqual(44.4, p.Height)", span="6264-6264"];
m5_2794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonWriter.cs", label="Assert.AreEqual(4m, p.Price)", span="6265-6265"];
m5_2795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6253-6253"];
m5_3596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", span="8156-8156"];
m5_3597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonWriter.cs", label="string json = ''{one:1} // This is just a comment''", span="8158-8158"];
m5_3598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings {CheckAdditionalContent = true}", span="8160-8160"];
m5_3600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonWriter.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8162-8162"];
m5_3599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonWriter.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8161-8161"];
m5_3601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonWriter.cs", label="Assert.IsNotNull(o)", span="8164-8164"];
m5_3602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonWriter.cs", label="Assert.AreEqual(1, o[''one''])", span="8165-8165"];
m5_3603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", span="8156-8156"];
m5_2484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5570-5570"];
m5_2485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="var reference = new Dictionary<string, object>()", span="5572-5572"];
m5_2486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="reference.Add(''$ref'', null)", span="5573-5573"];
m5_2487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="reference.Add(''$id'', null)", span="5574-5574"];
m5_2488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="reference.Add(''blah'', ''blah!'')", span="5575-5575"];
m5_2492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="child.Add(''Father'', reference)", span="5580-5580"];
m5_2489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="var child = new Dictionary<string, object>()", span="5577-5577"];
m5_2490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="child.Add(''_id'', 2)", span="5578-5578"];
m5_2491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="child.Add(''Name'', ''Isabell'')", span="5579-5579"];
m5_2493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(child)", span="5582-5582"];
m5_2494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5584-5584"];
m5_2495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5586-5586"];
m5_2496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="Assert.AreEqual(3, result.Count)", span="5588-5588"];
m5_2497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5589-5589"];
m5_2498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5590-5590"];
m5_2499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5570-5570"];
m5_4310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9933-9933"];
m5_4311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="return objectType == typeof(System.Net.Mail.MailAddress);", span="9935-9935"];
m5_4312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9933-9933"];
m5_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2607-2607"];
m5_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(null)", span="2609-2609"];
m5_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonWriter.cs", label="Assert.AreEqual(''null'', json)", span="2610-2610"];
m5_1204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2607-2607"];
m5_4125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9458-9458"];
m5_4126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonWriter.cs", label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="9460-9460"];
m5_4127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonWriter.cs", label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="9461-9461"];
m5_4128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="9462-9465"];
m5_4129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9458-9458"];
m5_3360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7602-7602"];
m5_3361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="Product product = new Product()", span="7604-7604"];
m5_3362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="product.Name = ''Apple''", span="7605-7605"];
m5_3363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="7606-7606"];
m5_3364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="product.Price = 3.99M", span="7607-7607"];
m5_3365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="7608-7608"];
m5_3366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(product)", span="7610-7610"];
m5_3367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7618-7623"];
m5_3368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7624-7633"];
m5_3369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7641-7641"];
m5_3370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7643-7648"];
m5_3371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7650-7657"];
m5_3372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7602-7602"];
m5_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="964-964"];
m5_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonWriter.cs", label="Dictionary<string, string> d = JsonConvert.DeserializeObject<Dictionary<string, string>>(''{\''Test1\'':false}'')", span="966-966"];
m5_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(1, d.Count)", span="967-967"];
m5_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(''false'', d[''Test1''])", span="968-968"];
m5_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="964-964"];
m5_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3194-3194"];
m5_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonWriter.cs", label="JaggedArray aa = new JaggedArray()", span="3196-3196"];
m5_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonWriter.cs", label="aa.Before = ''Before!''", span="3197-3197"];
m5_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonWriter.cs", label="aa.After = ''After!''", span="3198-3198"];
m5_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonWriter.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="3199-3199"];
m5_1522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(aa)", span="3201-3201"];
m5_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="3203-3203"];
m5_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3194-3194"];
m5_4132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9470-9470"];
m5_4133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonWriter.cs", label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="9472-9472"];
m5_4134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonWriter.cs", label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="9473-9473"];
m5_4135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonWriter.cs", label="int time = (int)o[''result''][''time'']", span="9474-9474"];
m5_4136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonWriter.cs", label="Assert.AreEqual(1408188593, time)", span="9476-9476"];
m5_4137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9470-9470"];
m5_2524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5650-5650"];
m5_2525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5652-5652"];
m5_2526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5654-5654"];
m5_2527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5655-5655"];
m5_2528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5657-5657"];
m5_2529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5659-5662"];
m5_2530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5664-5665"];
m5_2531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="5667-5667"];
m5_2532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5650-5650"];
m5_815 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m5_3018 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="495-495"];
m5_1397 [cluster="System.DateTime.ToUniversalTime()", file="JsonWriter.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m5_2062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4515-4515"];
m5_2063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonWriter.cs", label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4517-4517"];
m5_2064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonWriter.cs", label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4519-4519"];
m5_2065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(3, dic.Count)", span="4521-4521"];
m5_2066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(''value1'', dic[''key1''])", span="4522-4522"];
m5_2067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(''value2'', dic[''key2''])", span="4523-4523"];
m5_2068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(''value3'', dic[''key3''])", span="4524-4524"];
m5_2069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4515-4515"];
m5_387 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="775-775"];
m5_3028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6926-6926"];
m5_3029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonWriter.cs", label="string input = @''http://tes/?a=b\\c&d=e\''", span="6928-6928"];
m5_3030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonWriter.cs", label="Uri uri = new Uri(input)", span="6929-6929"];
m5_3031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6930-6930"];
m5_3033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonWriter.cs", label="Assert.AreEqual(uri, output)", span="6933-6933"];
m5_3032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonWriter.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6931-6931"];
m5_3034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6926-6926"];
m5_1278 [cluster="Unk.AreNotEqual", file="JsonWriter.cs", label="Entry Unk.AreNotEqual", span=""];
m5_2181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4869-4869"];
m5_2182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonWriter.cs", label="return _innerDictionary.TryGetValue(key, out value);", span="4871-4871"];
m5_2183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4869-4869"];
m5_2941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6718-6718"];
m5_2942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonWriter.cs", label="return _readonlyString;", span="6720-6720"];
m5_2943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6718-6718"];
m5_2264 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m5_271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="644-644"];
m5_273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="644-644"];
m5_4355 [cluster="System.Text.Encoding.GetEncoding(string)", file="JsonWriter.cs", label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0"];
m5_3111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7102-7102"];
m5_3112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonWriter.cs", label="IList<byte[]> d1 = new List<byte[]> { null }", span="7104-7104"];
m5_3113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(d1)", span="7106-7106"];
m5_3115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonWriter.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7110-7110"];
m5_3116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonWriter.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7111-7111"];
m5_3114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonWriter.cs", label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="7108-7108"];
m5_3117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7102-7102"];
m5_4234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9717-9717"];
m5_4235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonWriter.cs", label="ConstantTestClass c1 = new ConstantTestClass()", span="9719-9719"];
m5_4236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="9721-9721"];
m5_4237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="9723-9725"];
m5_4238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="9727-9727"];
m5_4239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9717-9717"];
m5_2035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4420-4420"];
m5_2036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonWriter.cs", label="_dict1.Add(item.Key, item)", span="4422-4422"];
m5_2037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4420-4420"];
m5_3804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8683-8683"];
m5_3805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonWriter.cs", label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8685-8685"];
m5_3806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(tuple)", span="8686-8686"];
m5_3807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8687-8687"];
m5_3808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonWriter.cs", label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8689-8689"];
m5_3809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonWriter.cs", label="Assert.AreEqual(500, tuple2.Item1)", span="8690-8690"];
m5_3810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonWriter.cs", label="Assert.AreEqual(20, tuple2.Item2)", span="8691-8691"];
m5_3811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8683-8683"];
m5_3388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7675-7675"];
m5_3389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="return objectType == typeof(Color);", span="7677-7677"];
m5_3390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7675-7675"];
m5_2650 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonWriter.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m5_878 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonWriter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_2106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4677-4677"];
m5_2108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonWriter.cs", label="C2 = c2", span="4679-4679"];
m5_2109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4677-4677"];
m5_2758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6192-6192"];
m5_2759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonWriter.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="6194-6194"];
m5_2760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonWriter.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="6195-6195"];
m5_2761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6192-6192"];
m5_3522 [cluster="Unk.IsFalse", file="JsonWriter.cs", label="Entry Unk.IsFalse", span=""];
m5_3757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8540-8540"];
m5_3758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonWriter.cs", label="IgnoreSerializableAttribute = false", span="8542-8542"];
m5_3759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8540-8540"];
m5_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="900-900"];
m5_349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonWriter.cs", label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="902-908"];
m5_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonWriter.cs", label="Assert.IsNull(otc.Value1)", span="909-909"];
m5_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="910-910"];
m5_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="911-911"];
m5_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="912-912"];
m5_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonWriter.cs", label="Assert.IsNull(otc.Value5)", span="913-913"];
m5_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="900-900"];
m5_296 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="165-165"];
m5_1759 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="316-316"];
m5_2660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5960-5960"];
m5_2661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonWriter.cs", label="string json = ''{Amount:123456789876543.21}''", span="5962-5962"];
m5_2662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5963-5963"];
m5_2663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonWriter.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5964-5964"];
m5_2665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonWriter.cs", label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5968-5968"];
m5_2664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5966-5966"];
m5_2666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonWriter.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5969-5969"];
m5_2667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5960-5960"];
m5_2594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5825-5825"];
m5_2595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5827-5830"];
m5_2596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5832-5832"];
m5_2597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5834-5834"];
m5_2598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="reader.DateParseHandling = DateParseHandling.None", span="5835-5835"];
m5_2600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5839-5839"];
m5_2599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5837-5837"];
m5_2601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5841-5841"];
m5_2602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5842-5842"];
m5_2603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5825-5825"];
m5_2832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6385-6385"];
m5_2833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="6387-6387"];
m5_2834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="6388-6388"];
m5_2835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6385-6385"];
m5_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1985-1985"];
m5_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1987-1993"];
m5_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1995-1995"];
m5_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="baseWith.Virtual = ''Virtual2!''", span="1996-1996"];
m5_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1997-1997"];
m5_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1998-1998"];
m5_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2000-2000"];
m5_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="2002-2009"];
m5_914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1985-1985"];
m5_2695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5993-5993"];
m5_3838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8753-8753"];
m5_3839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonWriter.cs", label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8755-8755"];
m5_3840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonWriter.cs", label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8757-8757"];
m5_3842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8761-8761"];
m5_3841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonWriter.cs", label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8759-8759"];
m5_3843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8753-8753"];
m5_823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1743-1743"];
m5_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1439-1439"];
m5_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1441-1441"];
m5_647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1443-1443"];
m5_648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.Binder = customBinder", span="1445-1445"];
m5_649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1446-1446"];
m5_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.IsInstanceOf(typeof(SerializationBinderAdapter), serializerProxy.SerializationBinder)", span="1449-1449"];
m5_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.SerializationBinder = customBinder", span="1451-1451"];
m5_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(customBinder, serializerProxy.SerializationBinder)", span="1452-1452"];
m5_653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="ExceptionAssert.Throws<InvalidOperationException>(() =>\r\n            {\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                var serializationBinder = serializerProxy.Binder;\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                serializationBinder.ToString();\r\n            }, ''Cannot get SerializationBinder because an ISerializationBinder was previously set.'')", span="1454-1460"];
m5_654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.CheckAdditionalContent = true", span="1462-1462"];
m5_655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1463-1463"];
m5_656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1465-1465"];
m5_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1466-1466"];
m5_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1469-1469"];
m5_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1470-1470"];
m5_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.ContractResolver = resolver", span="1474-1474"];
m5_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1475-1475"];
m5_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1477-1477"];
m5_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1478-1478"];
m5_665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1480-1480"];
m5_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1481-1481"];
m5_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1483-1483"];
m5_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1484-1484"];
m5_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1486-1486"];
m5_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1487-1487"];
m5_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.DateFormatString = ''yyyy''", span="1489-1489"];
m5_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1490-1490"];
m5_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1492-1492"];
m5_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1493-1493"];
m5_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1495-1495"];
m5_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1496-1496"];
m5_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1498-1498"];
m5_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1499-1499"];
m5_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1501-1501"];
m5_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1502-1502"];
m5_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1504-1504"];
m5_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1505-1505"];
m5_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.Formatting = Formatting.Indented", span="1507-1507"];
m5_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1508-1508"];
m5_685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.MaxDepth = 9001", span="1510-1510"];
m5_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1511-1511"];
m5_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1513-1513"];
m5_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1514-1514"];
m5_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1516-1516"];
m5_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1517-1517"];
m5_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1519-1519"];
m5_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1520-1520"];
m5_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1522-1522"];
m5_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1523-1523"];
m5_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1525-1525"];
m5_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1526-1526"];
m5_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.ReferenceResolver = referenceResolver", span="1529-1529"];
m5_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1530-1530"];
m5_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1532-1532"];
m5_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1533-1533"];
m5_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.TraceWriter = traceWriter", span="1536-1536"];
m5_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1537-1537"];
m5_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1541-1541"];
m5_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1542-1542"];
m5_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializerProxy.TypeNameAssemblyFormatHandling)", span="1545-1545"];
m5_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1547-1547"];
m5_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, serializerProxy.TypeNameAssemblyFormat)", span="1549-1549"];
m5_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1553-1553"];
m5_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializerProxy.TypeNameAssemblyFormatHandling)", span="1554-1554"];
m5_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1556-1556"];
m5_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1557-1557"];
m5_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1473-1473"];
m5_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1528-1528"];
m5_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1535-1535"];
m5_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1439-1439"];
m5_3155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7220-7220"];
m5_3156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonWriter.cs", label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="7222-7227"];
m5_3157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="7229-7229"];
m5_3158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="7231-7235"];
m5_3159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7220-7220"];
m5_4366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", span="10034-10034"];
m5_4367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonWriter.cs", label="JsonObjectContract c = (JsonObjectContract)DefaultContractResolver.Instance.ResolveContract(typeof(ChildClassWithProtectedOverridePlusJsonProperty))", span="10036-10036"];
m5_4368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonWriter.cs", label="Assert.AreEqual(1, c.Properties.Count)", span="10037-10037"];
m5_4369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonWriter.cs", label="var propertyValue = ''test''", span="10039-10039"];
m5_4370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonWriter.cs", label="var testJson = @''{ 'MyProperty' : ''' + propertyValue + ''' }''", span="10040-10040"];
m5_4372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonWriter.cs", label="Assert.AreEqual(propertyValue, testObject.GetPropertyValue(), ''MyProperty should be populated'')", span="10044-10044"];
m5_4371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonWriter.cs", label="var testObject = JsonConvert.DeserializeObject<ChildClassWithProtectedOverridePlusJsonProperty>(testJson)", span="10042-10042"];
m5_4373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", span="10034-10034"];
m5_1249 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m5_3175 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27"];
m5_2806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6283-6283"];
m5_2807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonWriter.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="6285-6285"];
m5_2808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6287-6287"];
m5_2809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{}'', json)", span="6289-6289"];
m5_2810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6283-6283"];
m5_2133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4767-4767"];
m5_2134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="dictionary == null", span="4769-4769"];
m5_2135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="throw new ArgumentNullException(nameof(dictionary));", span="4771-4771"];
m5_2136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label=dictionary, span="4774-4774"];
m5_2137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="_innerDictionary.Add(entry.Key, entry.Value)", span="4776-4776"];
m5_2138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4767-4767"];
m5_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="824-824"];
m5_2910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6632-6632"];
m5_2911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="6634-6634"];
m5_2912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6632-6632"];
m5_3851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8786-8786"];
m5_3852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8788-8788"];
m5_3853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(p)", span="8790-8790"];
m5_3857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8798-8801"];
m5_3854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8792-8792"];
m5_3855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="DefaultContractResolver r = new DefaultContractResolver()", span="8795-8795"];
m5_3856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="r.IgnoreSerializableAttribute = false", span="8796-8796"];
m5_3858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8803-8803"];
m5_3859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8786-8786"];
m5_1488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3121-3121"];
m5_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3123-3128"];
m5_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonWriter.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3130-3130"];
m5_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonWriter.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="3132-3132"];
m5_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonWriter.cs", label="Assert.AreEqual(null, c.MiddleName)", span="3133-3133"];
m5_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonWriter.cs", label="Assert.AreEqual(null, c.LastName)", span="3134-3134"];
m5_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3121-3121"];
m5_3483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7861-7861"];
m5_3484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7863-7867"];
m5_3485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7869-7869"];
m5_3486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7871-7874"];
m5_3487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7876-7876"];
m5_3488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7878-7878"];
m5_3489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7879-7879"];
m5_3490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7880-7880"];
m5_3491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7861-7861"];
m5_3383 [cluster="Unk.WriteValue", file="JsonWriter.cs", label="Entry Unk.WriteValue", span=""];
m5_3699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8366-8366"];
m5_3700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonWriter.cs", label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="8368-8372"];
m5_3701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="8374-8377"];
m5_3702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8366-8366"];
m5_2450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5518-5518"];
m5_2451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="5520-5520"];
m5_2452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5518-5518"];
m5_1971 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m5_3679 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonWriter.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m5_1502 [cluster="string.StartsWith(string)", file="JsonWriter.cs", label="Entry string.StartsWith(string)", span="0-0"];
m5_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3976-3976"];
m5_1849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonWriter.cs", label="string json = @''[]''", span="3978-3978"];
m5_1850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3980-3984"];
m5_1851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3976-3976"];
m5_1340 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m5_926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1952-1952"];
m5_2150 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonWriter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m5_837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1792-1792"];
m5_838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1794-1794"];
m5_839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1795-1795"];
m5_840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Assert.IsNotNull(deserialized.foo)", span="1796-1796"];
m5_841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1797-1797"];
m5_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1792-1792"];
m5_965 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="248-248"];
m5_2141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4811-4811"];
m5_2142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4813-4813"];
m5_2143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4811-4811"];
m5_2511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5620-5620"];
m5_2512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonWriter.cs", label="string json = @''{'value':9.9}''", span="5622-5622"];
m5_2513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonWriter.cs", label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5624-5628"];
m5_2514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5630-5630"];
m5_2515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonWriter.cs", label="Assert.AreEqual(9.9m, dic[''value''])", span="5631-5631"];
m5_2516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5620-5620"];
m5_2652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5946-5946"];
m5_2653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonWriter.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5948-5948"];
m5_2654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonWriter.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5949-5949"];
m5_2655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5946-5946"];
m5_2858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="6460-6460"];
m5_203 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="JsonWriter.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m5_211 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m5_2388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5393-5393"];
m5_2389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="5395-5395"];
m5_2390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="5396-5396"];
m5_2391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="5397-5397"];
m5_2392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5399-5399"];
m5_2396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="5415-5415"];
m5_2397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="5416-5416"];
m5_2393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="5400-5411"];
m5_2394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="StringAssert.AreEqual(expected, json)", span="5412-5412"];
m5_2395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="5414-5414"];
m5_2398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="5418-5418"];
m5_2399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5393-5393"];
m5_1044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2254-2254"];
m5_1045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonWriter.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="2256-2256"];
m5_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonWriter.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="2258-2258"];
m5_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="2260-2260"];
m5_1048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="2261-2263"];
m5_1049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2254-2254"];
m5_2147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4821-4821"];
m5_2148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonWriter.cs", label="_innerDictionary.Clear()", span="4823-4823"];
m5_2149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4821-4821"];
m5_850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1753-1753"];
m5_1036 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m5_2811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="6292-6292"];
m5_2851 [cluster="DataContractSerializer.cstr", file="JsonWriter.cs", label="Entry DataContractSerializer.cstr", span=""];
m5_1398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2962-2962"];
m5_1399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2964-2964"];
m5_1400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2965-2965"];
m5_1401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2966-2966"];
m5_1402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2968-2968"];
m5_1403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2969-2969"];
m5_1404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2971-2971"];
m5_1405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2973-2973"];
m5_1406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2974-2974"];
m5_1407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2962-2962"];
m5_1910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="4079-4079"];
m5_1911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="4081-4092"];
m5_1912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="4079-4079"];
m5_2701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="6048-6048"];
m5_2702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="6048-6048"];
m5_2330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5360-5360"];
m5_2377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_field1 = g", span="5363-5363"];
m5_2378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_field2 = g", span="5364-5364"];
m5_2379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_property1 = g", span="5365-5365"];
m5_2380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_property2 = g", span="5366-5366"];
m5_2381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_property3 = g", span="5367-5367"];
m5_2382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_property4 = g", span="5368-5368"];
m5_2383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_property5 = g", span="5369-5369"];
m5_2384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_property6 = g", span="5370-5370"];
m5_2385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_property7 = g", span="5371-5371"];
m5_2386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="BB_property8 = g", span="5372-5372"];
m5_2387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5360-5360"];
m5_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1860-1860"];
m5_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonWriter.cs", label="var strings = dictionaryKey.Split(' ')", span="1862-1862"];
m5_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonWriter.cs", label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1863-1863"];
m5_897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1860-1860"];
m5_3404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7719-7719"];
m5_3405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="MemoryStream ms = new MemoryStream()", span="7721-7721"];
m5_3406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="BsonWriter writer = new BsonWriter(ms)", span="7722-7722"];
m5_3410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="byte[] data = ms.ToArray()", span="7727-7727"];
m5_3407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="writer.WriteStartArray()", span="7723-7723"];
m5_3408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7724-7724"];
m5_3409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="writer.WriteEndArray()", span="7725-7725"];
m5_3411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7728-7731"];
m5_3412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7733-7733"];
m5_3413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="JValue v = (JValue)a[0]", span="7734-7734"];
m5_3415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7737-7739"];
m5_3414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7736-7736"];
m5_3416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7719-7719"];
m5_323 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonWriter.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m5_1422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2995-2995"];
m5_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonWriter.cs", label="string json", span="2997-2997"];
m5_1424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="2999-2999"];
m5_1425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonWriter.cs", label="Assert.AreEqual(''null'', json)", span="3000-3000"];
m5_1426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="3002-3002"];
m5_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonWriter.cs", label="Assert.AreEqual(''1'', json)", span="3003-3003"];
m5_1428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2995-2995"];
m5_1760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3804-3804"];
m5_1761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonWriter.cs", label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3806-3814"];
m5_1762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3816-3816"];
m5_1763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3818-3830"];
m5_1764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3804-3804"];
m5_2054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="4414-4414"];
m5_2684 [cluster="string.Format(string, object, object, object)", file="JsonWriter.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m5_2823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6353-6353"];
m5_2824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonWriter.cs", label="B = 2", span="6355-6355"];
m5_2825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6353-6353"];
m5_3131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7159-7159"];
m5_3132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  },\r\n  ''''Pie'''': null\r\n}''", span="7161-7168"];
m5_3133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonWriter.cs", label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7169-7172"];
m5_3134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonWriter.cs", label="Assert.IsNotNull(value.EncryptedPassword)", span="7174-7174"];
m5_3135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonWriter.cs", label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7175-7175"];
m5_3136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7159-7159"];
m5_2230 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m5_3917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8965-8965"];
m5_3918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonWriter.cs", label="string json = @''{''''something_else'''':''''my value''''}''", span="8967-8967"];
m5_3919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonWriter.cs", label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8968-8968"];
m5_3920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(''my value'', foo.Bar)", span="8969-8969"];
m5_3921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8965-8965"];
m5_2269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="5052-5052"];
m5_2270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Person person = new Person()", span="5054-5054"];
m5_2271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="5055-5055"];
m5_2272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="person.LastModified = person.BirthDate", span="5056-5056"];
m5_2273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="person.Department = ''Department!''", span="5057-5057"];
m5_2274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="person.Name = ''Name!''", span="5058-5058"];
m5_2278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="5068-5068"];
m5_2275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="5060-5060"];
m5_2276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="string dateTimeOffsetText", span="5061-5061"];
m5_2284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5099-5099"];
m5_2277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="5063-5063"];
m5_2280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="5071-5094"];
m5_2279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="5070-5070"];
m5_2281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5096-5096"];
m5_2282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="5097-5097"];
m5_2283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5098-5098"];
m5_2285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5100-5100"];
m5_2286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="5101-5101"];
m5_2287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="5102-5102"];
m5_2288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="5052-5052"];
m5_3137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7179-7179"];
m5_3138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="Bb b = new Bb()", span="7181-7181"];
m5_3139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="b.no = true", span="7182-7182"];
m5_3140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="Aa a = b", span="7183-7183"];
m5_3142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(b)", span="7186-7186"];
m5_3141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="a.no = int.MaxValue", span="7184-7184"];
m5_3143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="7188-7188"];
m5_3144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="7190-7190"];
m5_3145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="Assert.AreEqual(true, b2.no)", span="7192-7192"];
m5_3146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7179-7179"];
m5_1479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3095-3095"];
m5_1480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonWriter.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="3097-3103"];
m5_1481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3105-3105"];
m5_1482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="3107-3112"];
m5_1483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonWriter.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3114-3114"];
m5_1484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonWriter.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="3116-3116"];
m5_1485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="3117-3117"];
m5_1486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3095-3095"];
m5_961 [cluster="Unk.WriteObject", file="JsonWriter.cs", label="Entry Unk.WriteObject", span=""];
m5_2871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6537-6537"];
m5_2872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonWriter.cs", label="Title = title", span="6539-6539"];
m5_2873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonWriter.cs", label="Categories = new List<string>()", span="6540-6540"];
m5_2874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6537-6537"];
m5_1421 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m5_3019 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172"];
m5_3418 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143"];
m5_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="1034-1034"];
m5_2081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4585-4585"];
m5_2082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonWriter.cs", label="B value = new B()", span="4587-4587"];
m5_2083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4588-4588"];
m5_2084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4590-4595"];
m5_2085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4585-4585"];
m5_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3525-3525"];
m5_1653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonWriter.cs", label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3527-3527"];
m5_1654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3529-3535"];
m5_1655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3525-3525"];
m5_4392 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="10151-10151"];
m5_4393 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonWriter.cs", label="Value = value", span="10153-10153"];
m5_4394 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonWriter.cs", label="Constructor = ''Public Parameterized''", span="10154-10154"];
m5_4395 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="10151-10151"];
m5_4260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9797-9797"];
m5_4261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonWriter.cs", label="BaseProperty = baseProperty", span="9799-9799"];
m5_4262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9797-9797"];
m5_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3138-3138"];
m5_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3142-3147"];
m5_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3149-3149"];
m5_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="Assert.Fail()", span="3150-3150"];
m5_1499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label=JsonSerializationException, span="3152-3152"];
m5_1500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="3154-3154"];
m5_1501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3138-3138"];
m5_2425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5475-5475"];
m5_3776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8601-8601"];
m5_3777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonWriter.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8603-8603"];
m5_3778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonWriter.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8604-8604"];
m5_3779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonWriter.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8605-8605"];
m5_3781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", span="8613-8617"];
m5_3780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonWriter.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8607-8611"];
m5_3782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8619-8622"];
m5_3783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8601-8601"];
m5_42 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328"];
m5_2449 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonWriter.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m5_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="483-483"];
m5_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new Binding_DisallowNull(), new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="485-488"];
m5_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonWriter.cs", label="Assert.AreEqual(''{}'', json)", span="489-489"];
m5_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="483-483"];
m5_69 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="179-179"];
m5_4268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9814-9814"];
m5_4269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="9816-9816"];
m5_4270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9814-9814"];
m5_2144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4816-4816"];
m5_2145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonWriter.cs", label="_innerDictionary.Add(key, value)", span="4818-4818"];
m5_2146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4816-4816"];
m5_881 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonWriter.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m5_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1855-1855"];
m5_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonWriter.cs", label="return _name + '' '' + _number;", span="1857-1857"];
m5_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1855-1855"];
m5_2184 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonWriter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m5_1957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4185-4185"];
m5_1958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="Foo f = new Foo()", span="4187-4187"];
m5_1959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="4188-4188"];
m5_1960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="4189-4189"];
m5_1961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="4190-4190"];
m5_1962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="4192-4192"];
m5_1963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="4193-4199"];
m5_1964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="4201-4201"];
m5_1965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="4202-4202"];
m5_1966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="4203-4203"];
m5_1967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="4204-4204"];
m5_1968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="4205-4205"];
m5_1969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4185-4185"];
m5_2237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4949-4949"];
m5_2238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''stringValue'', _stringValue)", span="4951-4951"];
m5_2239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''intValue'', _intValue)", span="4952-4952"];
m5_2240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4953-4953"];
m5_2241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''personValue'', _personValue)", span="4954-4954"];
m5_2242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4955-4955"];
m5_2243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''nullableInt'', null)", span="4956-4956"];
m5_2244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''booleanValue'', _booleanValue)", span="4958-4958"];
m5_2245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''byteValue'', _byteValue)", span="4959-4959"];
m5_2246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''charValue'', _charValue)", span="4960-4960"];
m5_2247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4961-4961"];
m5_2248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''decimalValue'', _decimalValue)", span="4962-4962"];
m5_2249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''shortValue'', _shortValue)", span="4963-4963"];
m5_2250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''longValue'', _longValue)", span="4964-4964"];
m5_2251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4965-4965"];
m5_2252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''floatValue'', _floatValue)", span="4966-4966"];
m5_2253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''ushortValue'', _ushortValue)", span="4967-4967"];
m5_2254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''uintValue'', _uintValue)", span="4968-4968"];
m5_2255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''ulongValue'', _ulongValue)", span="4969-4969"];
m5_2256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4949-4949"];
m5_2965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6814-6814"];
m5_2966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonWriter.cs", label="Exceptions = new List<Exception>()", span="6816-6816"];
m5_2967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6814-6814"];
m5_1464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="3073-3073"];
m5_1465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="3075-3075"];
m5_1466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="3076-3076"];
m5_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="3079-3079"];
m5_1467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="3078-3078"];
m5_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="3081-3081"];
m5_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="3082-3082"];
m5_1471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="3084-3084"];
m5_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="3085-3085"];
m5_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="3088-3088"];
m5_1473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="3087-3087"];
m5_1475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="3090-3090"];
m5_1476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="3091-3091"];
m5_1477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="3073-3073"];
m5_3421 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m5_89 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="308-308"];
m5_90 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['']''),\r\n                @''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 3.'')", span="310-312"];
m5_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="308-308"];
m5_4113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9430-9430"];
m5_4114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9432-9432"];
m5_4115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9430-9430"];
m5_3789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8646-8646"];
m5_3790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8648-8648"];
m5_3791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8649-8649"];
m5_3792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8650-8650"];
m5_3796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", span="8661-8666"];
m5_3793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8652-8656"];
m5_3794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="StringWriter sw = new StringWriter()", span="8658-8658"];
m5_3797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="serializer.Serialize(jsonWriter, dates)", span="8667-8667"];
m5_3795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8659-8659"];
m5_3801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="string json = sw.ToString()", span="8673-8673"];
m5_3798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="Assert.IsNull(jsonWriter.DateFormatString)", span="8669-8669"];
m5_3799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8670-8670"];
m5_3800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8671-8671"];
m5_3802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8675-8678"];
m5_3803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8646-8646"];
m5_1827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3943-3943"];
m5_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonWriter.cs", label="string json = @''[]''", span="3945-3945"];
m5_1829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3947-3949"];
m5_1830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3943-3943"];
m5_147 [cluster="System.Collections.Generic.List<T>.List()", file="JsonWriter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_558 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="50-50"];
m5_2891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6580-6580"];
m5_2892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6582-6582"];
m5_2893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="c1.Categories.Add(''one'', 1)", span="6583-6583"];
m5_2894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="c1.Categories.Add(''two'', 2)", span="6584-6584"];
m5_2895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6586-6586"];
m5_2898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6596-6596"];
m5_2899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6597-6597"];
m5_2896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6587-6593"];
m5_2897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6595-6595"];
m5_2900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(1, c2.Categories[''one''])", span="6598-6598"];
m5_2901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(2, c2.Categories[''two''])", span="6599-6599"];
m5_2902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6580-6580"];
m5_3640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", span="8259-8259"];
m5_3641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonWriter.cs", label="string json = @''{ ''''MyProperty'''':{''''Key'''':''''Value''''}} A bunch of junk at the end of the json''", span="8261-8261"];
m5_3642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8263-8263"];
m5_3643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonWriter.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8265-8265"];
m5_3644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonWriter.cs", label="MyType mt = (MyType)serializer.Deserialize(reader, typeof(MyType))", span="8267-8267"];
m5_3645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonWriter.cs", label="Assert.AreEqual(1, mt.MyProperty.Count)", span="8268-8268"];
m5_3646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", span="8259-8259"];
m5_566 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m5_17 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonWriter.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m5_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="692-692"];
m5_3968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="9145-9145"];
m5_3969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="string str = value as string", span="9147-9147"];
m5_3971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="return base.ConvertFrom(context, culture, value);", span="9150-9150"];
m5_3975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="culture == null", span="9157-9157"];
m5_3982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="numArray[i] = (int)converter.ConvertFromString(context, culture, strArray[i])", span="9166-9166"];
m5_3970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="str == null", span="9148-9148"];
m5_3972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="string str2 = str.Trim()", span="9152-9152"];
m5_3973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="str2.Length == 0", span="9153-9153"];
m5_3977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="string[] strArray = str2.Split(',')", span="9161-9161"];
m5_3974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="return null;", span="9155-9155"];
m5_3976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="culture = CultureInfo.CurrentCulture", span="9159-9159"];
m5_3978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="int[] numArray = new int[strArray.Length]", span="9162-9162"];
m5_3979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="TypeConverter converter = TypeDescriptor.GetConverter(typeof(int))", span="9163-9163"];
m5_3981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="i < numArray.Length", span="9164-9164"];
m5_3984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="numArray.Length == 2", span="9168-9168"];
m5_3985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="return new TypeConverterSize(numArray[0], numArray[1]);", span="9170-9170"];
m5_3980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="int i = 0", span="9164-9164"];
m5_3983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="i++", span="9164-9164"];
m5_3986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="throw new ArgumentException(''Bad format.'');", span="9173-9173"];
m5_3987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="9145-9145"];
m5_2331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5223-5223"];
m5_2332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="5225-5235"];
m5_2333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5237-5237"];
m5_2334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5238-5238"];
m5_2335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5239-5239"];
m5_2336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5240-5240"];
m5_2337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5241-5241"];
m5_2338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5242-5242"];
m5_2339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5243-5243"];
m5_2340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5244-5244"];
m5_2341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="5246-5266"];
m5_2342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5268-5268"];
m5_2343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5269-5269"];
m5_2344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5270-5270"];
m5_2345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5271-5271"];
m5_2346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5272-5272"];
m5_2347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5273-5273"];
m5_2348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5274-5274"];
m5_2349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5275-5275"];
m5_2350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="5277-5277"];
m5_2351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="5278-5278"];
m5_2352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="5279-5279"];
m5_2353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="5280-5280"];
m5_2354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5281-5281"];
m5_2355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5282-5282"];
m5_2356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="5283-5283"];
m5_2357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5284-5284"];
m5_2358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5285-5285"];
m5_2359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5286-5286"];
m5_2360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5223-5223"];
m5_2696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="6031-6031"];
m5_2697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="6031-6031"];
m5_4396 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", span="10164-10164"];
m5_4397 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonWriter.cs", label="Value = value", span="10166-10166"];
m5_4398 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonWriter.cs", label="Constructor = ''Public Parameterized 1''", span="10167-10167"];
m5_4399 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", span="10164-10164"];
m5_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1695-1695"];
m5_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonWriter.cs", label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1697-1697"];
m5_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonWriter.cs", label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1699-1699"];
m5_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonWriter.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1701-1701"];
m5_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1695-1695"];
m5_41 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m5_3374 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30"];
m5_4101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9410-9410"];
m5_4102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonWriter.cs", label="return Value;", span="9412-9412"];
m5_4103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9410-9410"];
m5_1582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3363-3363"];
m5_1583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="3365-3370"];
m5_1584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="3372-3372"];
m5_1585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="Assert.IsNotNull(o)", span="3373-3373"];
m5_1586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="3375-3375"];
m5_1587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="3376-3376"];
m5_1588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="3377-3377"];
m5_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="3378-3378"];
m5_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3363-3363"];
m5_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", span="493-493"];
m5_1389 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m5_1225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2642-2642"];
m5_1226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonWriter.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2644-2644"];
m5_1227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonWriter.cs", label="JsonSerializer s = new JsonSerializer()", span="2646-2646"];
m5_1229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonWriter.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2649-2649"];
m5_1228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonWriter.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2647-2647"];
m5_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonWriter.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2651-2651"];
m5_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonWriter.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="2653-2653"];
m5_1232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2642-2642"];
m5_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3484-3484"];
m5_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3486-3486"];
m5_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3487-3487"];
m5_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3488-3488"];
m5_1636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3489-3489"];
m5_1637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3490-3490"];
m5_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3492-3492"];
m5_1640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3503-3503"];
m5_1639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3494-3501"];
m5_1641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3505-3509"];
m5_1642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3484-3484"];
m5_2263 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m5_4345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="10002-10002"];
m5_4346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="return typeof(Encoding).IsAssignableFrom(objectType);", span="10004-10004"];
m5_4347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="10002-10002"];
m5_166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="441-441"];
m5_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}''); }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="443-443"];
m5_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="441-441"];
m5_1341 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="548-548"];
m5_4021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="9243-9243"];
m5_4022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="9245-9260"];
m5_4023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9262-9267"];
m5_4024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="Assert.AreEqual(2, people.Count)", span="9269-9269"];
m5_4025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="PersonReference john = people[0]", span="9271-9271"];
m5_4026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="PersonReference jane = people[1]", span="9272-9272"];
m5_4027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="Assert.AreEqual(john, jane.Spouse)", span="9274-9274"];
m5_4028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="Assert.AreEqual(jane, john.Spouse)", span="9275-9275"];
m5_4029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="9243-9243"];
m5_885 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonWriter.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m5_786 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30"];
m5_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="1029-1029"];
m5_1147 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonWriter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m5_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2550-2550"];
m5_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2552-2560"];
m5_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="2562-2562"];
m5_1174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2565-2565"];
m5_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2563-2563"];
m5_1175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2566-2566"];
m5_1176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2567-2567"];
m5_1177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2568-2568"];
m5_1178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2569-2569"];
m5_1179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2570-2570"];
m5_1180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2571-2571"];
m5_1181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2572-2572"];
m5_1182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2550-2550"];
m5_2504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5609-5609"];
m5_2505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonWriter.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5611-5611"];
m5_2506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonWriter.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5613-5613"];
m5_2507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(''First'', cc.First)", span="5614-5614"];
m5_2508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(2, cc.Second)", span="5615-5615"];
m5_2509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(null, cc.Ignored)", span="5616-5616"];
m5_2510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5609-5609"];
m5_3666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8304-8304"];
m5_3667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="8306-8306"];
m5_3668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Assert.AreEqual(1, uris.Count)", span="8307-8307"];
m5_3669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="8308-8308"];
m5_3670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="8310-8310"];
m5_3671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Assert.IsNotNull(uri)", span="8311-8311"];
m5_3672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="8313-8313"];
m5_3673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="8314-8314"];
m5_3674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Assert.AreEqual(i1, i2)", span="8315-8315"];
m5_3675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="8317-8317"];
m5_3676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Assert.IsNotNull(uri)", span="8318-8318"];
m5_3677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="8319-8319"];
m5_3678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8304-8304"];
m5_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="428-428"];
m5_156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a non-null value. Path '', line 1, position 21.'')", span="430-430"];
m5_157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="428-428"];
m5_212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="551-551"];
m5_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<object>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="553-555"];
m5_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="557-559"];
m5_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="561-563"];
m5_216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="565-567"];
m5_217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="569-571"];
m5_218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="573-575"];
m5_219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="577-579"];
m5_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="551-551"];
m5_2959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6792-6792"];
m5_2960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonWriter.cs", label="DerivedType d = new DerivedType()", span="6794-6794"];
m5_2961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6795-6795"];
m5_2962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6797-6806"];
m5_2963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6792-6792"];
m5_2968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6822-6822"];
m5_2969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="ClassWithException classWithException = new ClassWithException()", span="6824-6824"];
m5_2970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="throw new Exception(''Test Exception'');", span="6827-6827"];
m5_2972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="classWithException.Exceptions.Add(ex)", span="6831-6831"];
m5_2973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="string sex = JsonConvert.SerializeObject(classWithException)", span="6833-6833"];
m5_2976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6837-6837"];
m5_2971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label=Exception, span="6829-6829"];
m5_2974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6834-6834"];
m5_2975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6835-6835"];
m5_2977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6839-6839"];
m5_2978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6840-6840"];
m5_2979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6822-6822"];
m5_3812 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonWriter.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m5_4374 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m5_3566 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205"];
m5_2426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5502-5502"];
m5_2581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5751-5751"];
m5_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="677-677"];
m5_73 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="357-357"];
m5_2403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5424-5424"];
m5_2404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="5426-5426"];
m5_2405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="XmlDocument document = new XmlDocument()", span="5427-5427"];
m5_2407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="testObject.Document = document", span="5429-5429"];
m5_2408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5431-5431"];
m5_2412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="5440-5440"];
m5_2406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="5428-5428"];
m5_2409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="5432-5436"];
m5_2410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="StringAssert.AreEqual(expected, json)", span="5437-5437"];
m5_2411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="5439-5439"];
m5_2413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5424-5424"];
m5_2163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4841-4841"];
m5_2164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonWriter.cs", label="return _innerDictionary.GetEnumerator();", span="4843-4843"];
m5_2165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4841-4841"];
m5_3543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="8005-8005"];
m5_3544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonWriter.cs", label="var json = Serialize(obj)", span="8008-8008"];
m5_3545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonWriter.cs", label="return Deserialize<T>(json);", span="8009-8009"];
m5_3546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="8005-8005"];
m5_2685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="6011-6011"];
m5_2686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="VectorParent obj = new VectorParent()", span="6013-6013"];
m5_2687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="6014-6014"];
m5_2688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="string str = JsonConvert.SerializeObject(obj)", span="6016-6016"];
m5_2689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="6018-6018"];
m5_2690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="Assert.AreEqual(1, obj.Position.X)", span="6020-6020"];
m5_2691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="6021-6021"];
m5_2692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="6022-6022"];
m5_2693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="6011-6011"];
m5_1696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3655-3655"];
m5_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonWriter.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3657-3657"];
m5_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonWriter.cs", label="c.NotIncluded = ''Hi''", span="3658-3658"];
m5_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3659-3659"];
m5_1700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3661-3666"];
m5_1701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonWriter.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3668-3668"];
m5_1702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonWriter.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3669-3669"];
m5_1703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3655-3655"];
m5_3285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7471-7471"];
m5_3286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="7473-7473"];
m5_3287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7471-7471"];
m5_1291 [cluster="System.Guid.Guid(string)", file="JsonWriter.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m5_3337 [cluster="System.DateTime.ToLocalTime()", file="JsonWriter.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m5_2933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6697-6697"];
m5_2934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonWriter.cs", label="_privateString = privateString", span="6699-6699"];
m5_2935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonWriter.cs", label="_readonlyString = readonlyString", span="6700-6700"];
m5_2936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonWriter.cs", label="_internalString = internalString", span="6701-6701"];
m5_2937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6697-6697"];
m5_2842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="6402-6402"];
m5_2087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4607-4607"];
m5_2088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonWriter.cs", label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4609-4610"];
m5_2089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonWriter.cs", label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4612-4619"];
m5_2090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonWriter.cs", label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4620-4623"];
m5_2091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4625-4625"];
m5_2092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4607-4607"];
m5_3760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8549-8549"];
m5_3761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonWriter.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8551-8551"];
m5_3762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonWriter.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="8553-8553"];
m5_3763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonWriter.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8555-8555"];
m5_3764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonWriter.cs", label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="8557-8557"];
m5_3765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8559-8559"];
m5_3766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8560-8560"];
m5_3767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8549-8549"];
m5_4405 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10216-10216"];
m5_3072 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10205-10205"];
m5_4406 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonWriter.cs", label="z = 3", span="10218-10218"];
m5_4407 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10216-10216"];
m5_1270 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonWriter.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m5_899 [cluster="System.Convert.ToInt32(string)", file="JsonWriter.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m5_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2830-2830"];
m5_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonWriter.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2832-2832"];
m5_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1)", span="2834-2834"];
m5_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonWriter.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2835-2835"];
m5_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonWriter.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2837-2837"];
m5_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonWriter.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2839-2839"];
m5_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2830-2830"];
m5_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="694-694"];
m5_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonWriter.cs", label="type == typeof(Version)", span="696-696"];
m5_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonWriter.cs", label="return base.ResolveContract(type);", span="701-701"];
m5_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonWriter.cs", label="throw new Exception(''Error!'');", span="698-698"];
m5_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="694-694"];
m5_2198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="4917-4917"];
m5_2199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonWriter.cs", label="_stringValue = stringValue", span="4919-4919"];
m5_2200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonWriter.cs", label="_intValue = intValue", span="4920-4920"];
m5_2201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonWriter.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="4921-4921"];
m5_2202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonWriter.cs", label="_personValue = personValue", span="4922-4922"];
m5_2203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonWriter.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4923-4923"];
m5_2204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="4917-4917"];
m5_22 [cluster="Unk.IsTrue", file="JsonWriter.cs", label="Entry Unk.IsTrue", span=""];
m5_981 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49"];
m5_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3513-3513"];
m5_1645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="string json = ''{}''", span="3515-3515"];
m5_1646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3517-3517"];
m5_1647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3518-3518"];
m5_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3519-3519"];
m5_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3520-3520"];
m5_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3521-3521"];
m5_1651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3513-3513"];
m5_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="284-284"];
m5_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''[null]''),\r\n                ''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 5.'')", span="286-288"];
m5_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="284-284"];
m5_3338 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonWriter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m5_3359 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33"];
m5_3547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="8012-8012"];
m5_3549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonWriter.cs", label="var stringWriter = new StringWriter()", span="8015-8015"];
m5_3552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonWriter.cs", label="serializer.Serialize(stringWriter, obj)", span="8021-8021"];
m5_3550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonWriter.cs", label="var serializer = new JsonSerializer()", span="8016-8016"];
m5_3553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonWriter.cs", label="return stringWriter.ToString();", span="8023-8023"];
m5_3551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonWriter.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="8017-8020"];
m5_3554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="8012-8012"];
m5_2748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="6158-6158"];
m5_3225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7344-7344"];
m5_3226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="7346-7354"];
m5_3227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="7356-7356"];
m5_3228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(byte[]), 0, DefaultSerializationBinder.Instance) + @'''''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="7358-7368"];
m5_3229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="7370-7370"];
m5_3230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="7372-7372"];
m5_3231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="7373-7373"];
m5_3232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="byte[] bytes = (byte[])actual.Payload", span="7374-7374"];
m5_3233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="7375-7375"];
m5_3234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7344-7344"];
m5_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="1061-1061"];
m5_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonWriter.cs", label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1063-1068"];
m5_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(input)", span="1070-1070"];
m5_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonWriter.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1073-1073"];
m5_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonWriter.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1074-1074"];
m5_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonWriter.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1075-1075"];
m5_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonWriter.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="1071-1071"];
m5_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="1061-1061"];
m5_3582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8139-8139"];
m5_3583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="string json = ''{one:1}{}''", span="8141-8141"];
m5_3584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="8143-8143"];
m5_3586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8145-8145"];
m5_3591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="8152-8152"];
m5_3585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8144-8144"];
m5_3589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="settings.CheckAdditionalContent = true", span="8150-8150"];
m5_3590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="s = JsonSerializer.Create(settings)", span="8151-8151"];
m5_3587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="Assert.IsNotNull(o)", span="8147-8147"];
m5_3588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="Assert.AreEqual(1, o[''one''])", span="8148-8148"];
m5_3592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8139-8139"];
m5_2321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5190-5190"];
m5_2322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="AA myA = new AA(2)", span="5192-5192"];
m5_2323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="5193-5193"];
m5_2324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="5194-5200"];
m5_2325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="BB myB = new BB(3, 4)", span="5202-5202"];
m5_2326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="5203-5203"];
m5_2327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="5204-5218"];
m5_2328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5190-5190"];
m5_3906 [cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="46-46"];
m5_4095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9400-9400"];
m5_4096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9402-9402"];
m5_4097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9400-9400"];
m5_571 [cluster="object.ToString()", file="JsonWriter.cs", label="Entry object.ToString()", span="0-0"];
m5_4356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10018-10018"];
m5_4357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="10020-10020"];
m5_4358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10018-10018"];
m5_835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1760-1760"];
m5_2903 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonWriter.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_2738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6146-6146"];
m5_2739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonWriter.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="6148-6154"];
m5_2740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6146-6146"];
m5_3297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7483-7483"];
m5_3298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="7485-7485"];
m5_3299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7483-7483"];
m5_750 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0"];
m5_4408 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", span="10224-10224"];
m5_4409 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonWriter.cs", label="Text = text", span="10226-10226"];
m5_4410 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonWriter.cs", label="CursorPosition = cursorPosition", span="10227-10227"];
m5_4411 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonWriter.cs", label="DataSource = dataSource", span="10228-10228"];
m5_4412 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonWriter.cs", label="Project = project", span="10229-10229"];
m5_4413 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", span="10224-10224"];
m5_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3226-3226"];
m5_1539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="3228-3263"];
m5_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonWriter.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="3265-3265"];
m5_1541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3226-3226"];
m5_2904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6622-6622"];
m5_2905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="6624-6624"];
m5_2906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6622-6622"];
m5_3931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="9024-9024"];
m5_3932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="9026-9030"];
m5_3933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="9032-9036"];
m5_3934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="john.Spouse = jane", span="9038-9038"];
m5_3935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="jane.Spouse = john", span="9039-9039"];
m5_3936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="9041-9045"];
m5_3937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9047-9054"];
m5_3938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="9056-9071"];
m5_3939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="9024-9024"];
m5_2023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4385-4385"];
m5_2024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="4387-4387"];
m5_2025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.IsNotNull(d)", span="4389-4389"];
m5_2026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.IsNotNull(d.Dictionary)", span="4390-4390"];
m5_2027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="4391-4391"];
m5_2028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="4392-4392"];
m5_2029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="4393-4393"];
m5_2030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="4394-4394"];
m5_2031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="4395-4395"];
m5_2032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.AreEqual(1, d.List.Count)", span="4396-4396"];
m5_2033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="4397-4397"];
m5_2034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4385-4385"];
m5_2268 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m5_1008 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonWriter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m5_459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1153-1153"];
m5_460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="1155-1164"];
m5_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="1165-1165"];
m5_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1172-1172"];
m5_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(3, o.Count)", span="1166-1166"];
m5_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="1167-1167"];
m5_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(false, (bool)o[''B''])", span="1168-1168"];
m5_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(1, o[''C''].Count())", span="1169-1169"];
m5_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(1, (int)o[''C''][0])", span="1170-1170"];
m5_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="json = @''{/* Test */}''", span="1174-1174"];
m5_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1175-1175"];
m5_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1177-1177"];
m5_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(0, o.Count)", span="1176-1176"];
m5_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="json = @''{''''A'''': true/* Test */}''", span="1179-1179"];
m5_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1180-1180"];
m5_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1183-1183"];
m5_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(1, o.Count)", span="1181-1181"];
m5_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="1182-1182"];
m5_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1153-1153"];
m5_1855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3989-3989"];
m5_1856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonWriter.cs", label="string json = @''[]''", span="3991-3991"];
m5_1857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonWriter.cs", label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3993-3999"];
m5_1858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3989-3989"];
m5_2749 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m5_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="1054-1054"];
m5_405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonWriter.cs", label="Message = message", span="1056-1056"];
m5_406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="1054-1054"];
m5_3417 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m5_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2138-2138"];
m5_985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Product product = new Product()", span="2140-2140"];
m5_986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="product.Name = ''Apple''", span="2142-2142"];
m5_987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="2143-2143"];
m5_988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="product.Price = 3.99M", span="2144-2144"];
m5_989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="2145-2145"];
m5_990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="string output = JsonConvert.SerializeObject(product)", span="2147-2147"];
m5_991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="2159-2159"];
m5_992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2161-2161"];
m5_993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="2162-2162"];
m5_994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2163-2163"];
m5_995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2164-2164"];
m5_996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2165-2165"];
m5_997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2166-2166"];
m5_998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2138-2138"];
m5_4068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9354-9354"];
m5_4069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="conversionType == typeof(object)", span="9356-9356"];
m5_4071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="conversionType == typeof(int)", span="9360-9360"];
m5_4073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="conversionType == typeof(long)", span="9364-9364"];
m5_4075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="conversionType == typeof(string)", span="9368-9368"];
m5_4070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="return this;", span="9358-9358"];
m5_4072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="return (int)Value;", span="9362-9362"];
m5_4074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="return (long)Value;", span="9366-9366"];
m5_4076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="return Value.ToString(CultureInfo.InvariantCulture);", span="9370-9370"];
m5_4077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9372-9372"];
m5_4078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9354-9354"];
m5_2629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5907-5907"];
m5_2630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="dynamic expando = new ExpandoObject()", span="5909-5909"];
m5_2631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="expando.Int = 1", span="5910-5910"];
m5_2632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="expando.Decimal = 99.9d", span="5911-5911"];
m5_2633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="expando.Complex = new ExpandoObject()", span="5912-5912"];
m5_2634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="expando.Complex.String = ''I am a string''", span="5913-5913"];
m5_2635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5914-5914"];
m5_2636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5916-5916"];
m5_2640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5929-5929"];
m5_2642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5932-5932"];
m5_2646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5938-5938"];
m5_2648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5941-5941"];
m5_2637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5917-5924"];
m5_2638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5926-5926"];
m5_2639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5928-5928"];
m5_2641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5931-5931"];
m5_2643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5934-5934"];
m5_2644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5935-5935"];
m5_2645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5937-5937"];
m5_2647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5940-5940"];
m5_2649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5907-5907"];
m5_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1594-1594"];
m5_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_serializationInfo = info", span="1596-1596"];
m5_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1594-1594"];
m5_4083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9380-9380"];
m5_4084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9382-9382"];
m5_4085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9380-9380"];
m5_1436 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m5_4011 [cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0"];
m5_1898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="4053-4053"];
m5_1899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonWriter.cs", label="string json = @''{''''Name'''':''''''''}''", span="4055-4055"];
m5_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonWriter.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="4057-4057"];
m5_1901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonWriter.cs", label="Assert.AreEqual('''', p.Name)", span="4058-4058"];
m5_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="4053-4053"];
m5_3581 [cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30"];
m5_4131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="9345-9345"];
m5_2782 [cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="10179-10179"];
m5_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="522-522"];
m5_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonWriter.cs", label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="524-533"];
m5_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="535-538"];
m5_207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="540-547"];
m5_208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="522-522"];
m5_295 [cluster="System.Exception.Exception(string)", file="JsonWriter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m5_559 [cluster="Unk.IsInstanceOf", file="JsonWriter.cs", label="Entry Unk.IsInstanceOf", span=""];
m5_3542 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33"];
m5_63 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="273-273"];
m5_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonWriter.cs", label="DateTimeOffset d = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''/Date(1418924498000+0800)/'''''')", span="275-275"];
m5_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonWriter.cs", label="long initialTicks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(d.DateTime, d.Offset)", span="276-276"];
m5_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(1418924498000, initialTicks)", span="278-278"];
m5_67 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(8, d.Offset.Hours)", span="279-279"];
m5_68 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="273-273"];
m5_3628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8241-8241"];
m5_3629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object. Path '[1]', line 1, position 5.'')", span="8243-8255"];
m5_3630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8241-8241"];
m5_4193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9602-9602"];
m5_4194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9604-9604"];
m5_4195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9605-9605"];
m5_4197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9613-9616"];
m5_4200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9624-9624"];
m5_4196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9606-9611"];
m5_4199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9622-9622"];
m5_4198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9618-9620"];
m5_4201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9602-9602"];
m5_1946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4158-4158"];
m5_1947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="4160-4166"];
m5_1948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="4168-4168"];
m5_1951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="4178-4178"];
m5_1949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="4170-4175"];
m5_1950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="4177-4177"];
m5_1952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="4179-4179"];
m5_1953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="4180-4180"];
m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="4181-4181"];
m5_1955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4158-4158"];
m5_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="767-767"];
m5_3183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7274-7274"];
m5_3184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Unexpected character encountered while parsing value: t. Path 'PreProperty', line 2, position 18.'')", span="7276-7284"];
m5_3185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7274-7274"];
m5_249 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751"];
m5_762 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m5_2737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="6079-6079"];
m5_4053 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="31-31"];
m5_2154 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonWriter.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m5_2234 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m5_3123 [cluster="System.Convert.FromBase64String(string)", file="JsonWriter.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m5_3580 [cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31"];
m5_1134 [cluster="JavaScriptSerializer.cstr", file="JsonWriter.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m5_3956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", span="9114-9114"];
m5_3957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonWriter.cs", label="_width = width", span="9116-9116"];
m5_3958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonWriter.cs", label="_height = height", span="9117-9117"];
m5_3959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", span="9114-9114"];
m5_4211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9654-9654"];
m5_4212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9656-9656"];
m5_4213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9657-9657"];
m5_4215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9665-9668"];
m5_4218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9676-9676"];
m5_4214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9658-9663"];
m5_4217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9674-9674"];
m5_4216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9670-9672"];
m5_4219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9654-9654"];
m5_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="173-173"];
m5_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonWriter.cs", label="return new Subclass\r\n                {\r\n                    ID = 123,\r\n                    Name = ''ABC'',\r\n                    P1 = true,\r\n                    P2 = 44\r\n                };", span="175-181"];
m5_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="173-173"];
m5_1105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2433-2433"];
m5_1106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonWriter.cs", label="string json = @''[''''vvv\jvvv'''']''", span="2435-2435"];
m5_1107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2437-2437"];
m5_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2433-2433"];
m5_764 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m5_1352 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m5_3260 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27"];
m5_1613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3444-3444"];
m5_1614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3446-3446"];
m5_1615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="i.SuperProp = ''overrided superprop''", span="3447-3447"];
m5_1616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(i)", span="3449-3449"];
m5_1617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3450-3450"];
m5_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3452-3452"];
m5_1619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="3454-3454"];
m5_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3455-3455"];
m5_1621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3444-3444"];
m5_3523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7962-7962"];
m5_3524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7964-7968"];
m5_3525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7970-7973"];
m5_3526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7975-7978"];
m5_3527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7980-7980"];
m5_3528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7982-7982"];
m5_3529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7983-7983"];
m5_3530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7984-7984"];
m5_3531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7962-7962"];
m5_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1783-1783"];
m5_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1785-1785"];
m5_831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(original)", span="1786-1786"];
m5_832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1787-1787"];
m5_833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="Assert.AreEqual(expectedJson, json)", span="1788-1788"];
m5_834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1783-1783"];
m5_1154 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonWriter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m5_2981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6845-6845"];
m5_2982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6847-6847"];
m5_2983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6848-6848"];
m5_2986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6859-6859"];
m5_2987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6860-6860"];
m5_2988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6861-6861"];
m5_2989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6862-6862"];
m5_2990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6863-6863"];
m5_2984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6850-6856"];
m5_2985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6858-6858"];
m5_2991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6845-6845"];
m5_4012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="9205-9205"];
m5_4013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="9207-9222"];
m5_4014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9224-9231"];
m5_4015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="Assert.AreEqual(2, people.Count)", span="9233-9233"];
m5_4016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="PersonReference john = people[0]", span="9235-9235"];
m5_4017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="PersonReference jane = people[1]", span="9236-9236"];
m5_4018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="Assert.AreEqual(john, jane.Spouse)", span="9238-9238"];
m5_4019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="Assert.AreEqual(jane, john.Spouse)", span="9239-9239"];
m5_4020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="9205-9205"];
m5_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3954-3954"];
m5_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonWriter.cs", label="string json = @''[]''", span="3956-3956"];
m5_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3958-3960"];
m5_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3954-3954"];
m5_1056 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m5_53 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", span="248-248"];
m5_54 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonWriter.cs", label="return new ClassWithImplicitOperator() { Value = value };", span="250-250"];
m5_55 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", span="248-248"];
m5_3730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8464-8464"];
m5_3731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonWriter.cs", label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="8466-8469"];
m5_3732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonWriter.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="8471-8471"];
m5_3733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonWriter.cs", label="Assert.AreEqual(1, l[0])", span="8473-8473"];
m5_3734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonWriter.cs", label="Assert.AreEqual(null, l[1])", span="8474-8474"];
m5_3735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8464-8464"];
m5_4313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9938-9938"];
m5_4314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9940-9940"];
m5_4315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="messageJObject == null", span="9941-9941"];
m5_4317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9946-9946"];
m5_4320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9950-9951"];
m5_4316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="return null;", span="9943-9943"];
m5_4318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="JToken displayNameToken", span="9948-9948"];
m5_4321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="return new System.Net.Mail.MailAddress(address, displayName);", span="9953-9953"];
m5_4322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="return new System.Net.Mail.MailAddress(address);", span="9956-9956"];
m5_4319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="string displayName", span="9949-9949"];
m5_4323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9938-9938"];
m5_4385 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="10108-10108"];
m5_4386 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonWriter.cs", label="Value = value", span="10110-10110"];
m5_4387 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonWriter.cs", label="Constructor = ''Public Parameterized''", span="10111-10111"];
m5_4388 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="10108-10108"];
m5_1876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="4019-4019"];
m5_1877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonWriter.cs", label="string json = @''{}''", span="4021-4021"];
m5_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="4025-4025"];
m5_1879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonWriter.cs", label="Assert.Fail()", span="4026-4026"];
m5_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonWriter.cs", label=JsonSerializationException, span="4028-4028"];
m5_1881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonWriter.cs", label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Organization.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="4030-4032"];
m5_1882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="4019-4019"];
m5_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1324-1324"];
m5_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1326-1326"];
m5_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1328-1328"];
m5_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.Binder = customBinder", span="1330-1330"];
m5_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(customBinder, settings.Binder)", span="1331-1331"];
m5_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.CheckAdditionalContent = true", span="1334-1334"];
m5_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="1335-1335"];
m5_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1337-1337"];
m5_580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1338-1338"];
m5_581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="1341-1341"];
m5_582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1342-1342"];
m5_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.ContractResolver = resolver", span="1346-1346"];
m5_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1347-1347"];
m5_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.Converters.Add(new StringEnumConverter())", span="1349-1349"];
m5_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(1, settings.Converters.Count)", span="1350-1350"];
m5_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.Culture = new CultureInfo(''en-nz'')", span="1352-1352"];
m5_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1353-1353"];
m5_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1355-1355"];
m5_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1356-1356"];
m5_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1358-1358"];
m5_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1359-1359"];
m5_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.DateFormatString = ''yyyy''", span="1361-1361"];
m5_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1362-1362"];
m5_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.DateParseHandling = DateParseHandling.None", span="1364-1364"];
m5_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1365-1365"];
m5_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1367-1367"];
m5_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1368-1368"];
m5_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1370-1370"];
m5_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1371-1371"];
m5_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1373-1373"];
m5_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1374-1374"];
m5_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1376-1376"];
m5_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="1377-1377"];
m5_606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.Formatting = Formatting.Indented", span="1379-1379"];
m5_607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1380-1380"];
m5_608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.MaxDepth = 9001", span="1382-1382"];
m5_609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(9001, settings.MaxDepth)", span="1383-1383"];
m5_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="1385-1385"];
m5_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="1386-1386"];
m5_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.NullValueHandling = NullValueHandling.Ignore", span="1388-1388"];
m5_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="1389-1389"];
m5_614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1391-1391"];
m5_615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="1392-1392"];
m5_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1394-1394"];
m5_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="1395-1395"];
m5_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1397-1397"];
m5_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="1398-1398"];
m5_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.ReferenceResolver = referenceResolver", span="1402-1402"];
m5_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="1403-1403"];
m5_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1405-1405"];
m5_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.ReferenceResolverProvider = () => referenceResolver", span="1407-1407"];
m5_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1408-1408"];
m5_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1410-1410"];
m5_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1411-1411"];
m5_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.TraceWriter = traceWriter", span="1414-1414"];
m5_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="1415-1415"];
m5_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1419-1419"];
m5_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1420-1420"];
m5_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, settings.TypeNameAssemblyFormatHandling)", span="1423-1423"];
m5_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1425-1425"];
m5_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, settings.TypeNameAssemblyFormat)", span="1427-1427"];
m5_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1431-1431"];
m5_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, settings.TypeNameAssemblyFormatHandling)", span="1432-1432"];
m5_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="settings.TypeNameHandling = TypeNameHandling.All", span="1434-1434"];
m5_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1435-1435"];
m5_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1345-1345"];
m5_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1400-1400"];
m5_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1413-1413"];
m5_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1324-1324"];
m5_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1849-1849"];
m5_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonWriter.cs", label="_name = name", span="1851-1851"];
m5_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonWriter.cs", label="_number = number", span="1852-1852"];
m5_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1849-1849"];
m5_2706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="6059-6059"];
m5_2707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonWriter.cs", label="var derived = new Derived(''meh'', ''woo'')", span="6061-6061"];
m5_2708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonWriter.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="6063-6067"];
m5_2709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="6069-6069"];
m5_2710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonWriter.cs", label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="6071-6071"];
m5_2711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonWriter.cs", label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="6073-6073"];
m5_2712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonWriter.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="6074-6074"];
m5_2713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="6059-6059"];
m5_1862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="4003-4003"];
m5_1863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonWriter.cs", label="string json = @''new Constructor(123)''", span="4005-4005"];
m5_1864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '', line 1, position 16.'')", span="4007-4007"];
m5_1865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="4003-4003"];
m5_2235 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m5_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1079-1079"];
m5_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonWriter.cs", label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1081-1086"];
m5_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(input)", span="1088-1088"];
m5_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonWriter.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1091-1091"];
m5_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonWriter.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1092-1092"];
m5_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonWriter.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1093-1093"];
m5_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonWriter.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="1089-1089"];
m5_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1079-1079"];
m5_1408 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m5_2681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5999-5999"];
m5_2682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonWriter.cs", label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="6001-6001"];
m5_2683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5999-5999"];
m5_4341 [cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonWriter.cs", label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0"];
m5_880 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonWriter.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m5_3912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8953-8953"];
m5_3913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonWriter.cs", label="bar == null", span="8955-8955"];
m5_3914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonWriter.cs", label="throw new ArgumentNullException(nameof(bar));", span="8957-8957"];
m5_3915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonWriter.cs", label="Bar = bar", span="8960-8960"];
m5_3916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8953-8953"];
m5_3521 [cluster="string.Contains(string)", file="JsonWriter.cs", label="Entry string.Contains(string)", span="0-0"];
m5_4089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9390-9390"];
m5_4090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9392-9392"];
m5_4091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9390-9390"];
m5_3704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8385-8385"];
m5_3705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonWriter.cs", label="m_Item1 = item1", span="8387-8387"];
m5_3706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8385-8385"];
m5_2932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6617-6617"];
m5_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", span="156-156"];
m5_2887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6572-6572"];
m5_2888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonWriter.cs", label="Title = title", span="6574-6574"];
m5_2889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonWriter.cs", label="Categories = new Dictionary<string, int>()", span="6575-6575"];
m5_2890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6572-6572"];
m5_3775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8563-8563"];
m5_2673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5981-5981"];
m5_2674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonWriter.cs", label="string json = ''{'Value':123456789876543.21}''", span="5983-5983"];
m5_2675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5984-5984"];
m5_2676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonWriter.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5985-5985"];
m5_2678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonWriter.cs", label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5989-5989"];
m5_2677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5987-5987"];
m5_2679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonWriter.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5990-5990"];
m5_2680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5981-5981"];
m5_2938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6704-6704"];
m5_2939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonWriter.cs", label="_readonlyString = ''default!''", span="6706-6706"];
m5_2940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6704-6704"];
m5_884 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonWriter.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m5_2228 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m5_1104 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m5_1299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2789-2789"];
m5_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonWriter.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2791-2791"];
m5_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2793-2793"];
m5_1304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonWriter.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="2799-2799"];
m5_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2794-2796"];
m5_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonWriter.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2798-2798"];
m5_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2789-2789"];
m5_801 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonWriter.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m5_3736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8479-8479"];
m5_3737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="var tuple = new MyTuple<int>(500)", span="8481-8481"];
m5_3738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(tuple)", span="8482-8482"];
m5_3739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8483-8483"];
m5_3741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="8487-8487"];
m5_3740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="MyTuple<int> obj = null", span="8485-8485"];
m5_3742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="doStuff()", span="8490-8490"];
m5_3743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Assert.AreEqual(500, obj.Item1)", span="8491-8491"];
m5_3744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8479-8479"];
m5_2205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4926-4926"];
m5_2206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_stringValue = info.GetString(''stringValue'')", span="4928-4928"];
m5_2207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_intValue = info.GetInt32(''intValue'')", span="4929-4929"];
m5_2208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4930-4930"];
m5_2209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4931-4931"];
m5_2210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4932-4932"];
m5_2211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4933-4933"];
m5_2212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4935-4935"];
m5_2213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_byteValue = info.GetByte(''byteValue'')", span="4936-4936"];
m5_2214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_charValue = info.GetChar(''charValue'')", span="4937-4937"];
m5_2215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4938-4938"];
m5_2216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4939-4939"];
m5_2217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="4940-4940"];
m5_2218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_longValue = info.GetInt64(''longValue'')", span="4941-4941"];
m5_2219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4942-4942"];
m5_2220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="4943-4943"];
m5_2221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4944-4944"];
m5_2222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="4945-4945"];
m5_2223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4946-4946"];
m5_2224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4926-4926"];
m5_721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1562-1562"];
m5_722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonWriter.cs", label="Ratio ratio = new Ratio(2, 1)", span="1564-1564"];
m5_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(ratio)", span="1565-1565"];
m5_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonWriter.cs", label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1571-1571"];
m5_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1567-1567"];
m5_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonWriter.cs", label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1569-1569"];
m5_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonWriter.cs", label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1572-1572"];
m5_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1562-1562"];
m5_3237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7379-7379"];
m5_3238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonWriter.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7381-7381"];
m5_3239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonWriter.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7382-7382"];
m5_3240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonWriter.cs", label="Assert.AreEqual('''', dict[''k1''])", span="7384-7384"];
m5_3241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(''v2'', dict[''k2''])", span="7385-7385"];
m5_3242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7379-7379"];
m5_2916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6652-6652"];
m5_2917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="6654-6654"];
m5_2918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6652-6652"];
m5_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="434-434"];
m5_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonWriter.cs", label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", span="436-436"];
m5_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonWriter.cs", label="Assert.IsNull(o.RequiredProperty)", span="437-437"];
m5_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="434-434"];
m5_3532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7988-7988"];
m5_3533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonWriter.cs", label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7990-7990"];
m5_3534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonWriter.cs", label="Assert.AreEqual('''', s)", span="7991-7991"];
m5_3535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7988-7988"];
m5_1269 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonWriter.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m5_3694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8354-8354"];
m5_3695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonWriter.cs", label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                )", span="8356-8359"];
m5_3696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonWriter.cs", label="Assert.AreEqual(123, result.Key)", span="8361-8361"];
m5_3697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonWriter.cs", label="Assert.AreEqual(''test value'', result.Value)", span="8362-8362"];
m5_3698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8354-8354"];
m5_210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="504-504"];
m5_2131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4763-4763"];
m5_2132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4763-4763"];
m5_3004 [cluster="System.TimeSpan.FromDays(double)", file="JsonWriter.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m5_3960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9135-9135"];
m5_3961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="return ((sourceType == typeof(string)) || base.CanConvertFrom(context, sourceType));", span="9137-9137"];
m5_3962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9135-9135"];
m5_1001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2188-2188"];
m5_1002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonWriter.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2190-2190"];
m5_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonWriter.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="2192-2192"];
m5_1004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonWriter.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="2194-2194"];
m5_1005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="2195-2195"];
m5_1006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonWriter.cs", label="Assert.AreEqual(3.99m, p.Price)", span="2196-2196"];
m5_1007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2188-2188"];
m5_1553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3281-3281"];
m5_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonWriter.cs", label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="3283-3289"];
m5_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonWriter.cs", label="return person;", span="3290-3290"];
m5_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3281-3281"];
m5_816 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m5_1062 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m5_3947 [cluster="Size.cstr", file="JsonWriter.cs", label="Entry Size.cstr", span=""];
m5_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3428-3428"];
m5_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonWriter.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3432-3432"];
m5_1608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3433-3433"];
m5_1609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonWriter.cs", label="Assert.Fail()", span="3435-3435"];
m5_1610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonWriter.cs", label=JsonSerializationException, span="3437-3437"];
m5_1611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonWriter.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3439-3439"];
m5_1612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3428-3428"];
m5_3052 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m5_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="1039-1039"];
m5_1510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3176-3176"];
m5_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="3180-3182"];
m5_1512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3184-3184"];
m5_1513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonWriter.cs", label="Assert.Fail()", span="3185-3185"];
m5_1514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonWriter.cs", label=JsonSerializationException, span="3187-3187"];
m5_1515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonWriter.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="3189-3189"];
m5_1516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3176-3176"];
m5_4324 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="500-500"];
m5_1503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3159-3159"];
m5_1504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="3161-3172"];
m5_1505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3159-3159"];
m5_3687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8334-8334"];
m5_3688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="return true;", span="8336-8336"];
m5_3689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8334-8334"];
m5_813 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m5_2717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6095-6095"];
m5_2718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''Name'', _name)", span="6097-6097"];
m5_2719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6095-6095"];
m5_4119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9440-9440"];
m5_4120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9442-9442"];
m5_4121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9440-9440"];
m5_1936 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonWriter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_2423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5463-5463"];
m5_983 [cluster="System.Console.WriteLine(string)", file="JsonWriter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m5_4079 [cluster="System.InvalidCastException.InvalidCastException()", file="JsonWriter.cs", label="Entry System.InvalidCastException.InvalidCastException()", span="0-0"];
m5_3351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7587-7587"];
m5_3352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonWriter.cs", label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7589-7589"];
m5_3353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonWriter.cs", label="person.Name = ''John Doe''", span="7590-7590"];
m5_3354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonWriter.cs", label="person.Age = 25", span="7591-7591"];
m5_3355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonWriter.cs", label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7593-7593"];
m5_3357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7596-7596"];
m5_3356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonWriter.cs", label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7594-7594"];
m5_3358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7587-7587"];
m5_4389 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="10145-10145"];
m5_4390 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonWriter.cs", label="Constructor = ''NonPublic''", span="10147-10147"];
m5_4391 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="10145-10145"];
m5_1726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3730-3730"];
m5_1727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3732-3741"];
m5_1728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3743-3743"];
m5_1729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3745-3745"];
m5_1730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3746-3746"];
m5_1731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3747-3747"];
m5_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3748-3748"];
m5_1733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3749-3749"];
m5_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3750-3750"];
m5_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3730-3730"];
m5_973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2123-2123"];
m5_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonWriter.cs", label="Store store = new Store()", span="2125-2125"];
m5_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonWriter.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="2127-2127"];
m5_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="2131-2131"];
m5_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="2132-2132"];
m5_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonWriter.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="2129-2129"];
m5_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonWriter.cs", label="Console.WriteLine(jsonText)", span="2134-2134"];
m5_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2123-2123"];
m5_2402 [cluster="Unk.ToString", file="JsonWriter.cs", label="Entry Unk.ToString", span=""];
m5_3830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8738-8738"];
m5_3831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8738-8738"];
m5_3560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="8041-8041"];
m5_3561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonWriter.cs", label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="8043-8053"];
m5_3562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="8055-8055"];
m5_3563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="8066-8080"];
m5_3564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="8041-8041"];
m5_1233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2657-2657"];
m5_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="ClassWithArray wibble = new ClassWithArray()", span="2659-2659"];
m5_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="wibble.Foo = ''hello''", span="2660-2660"];
m5_1236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="wibble.Bar.Add(1)", span="2661-2661"];
m5_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="wibble.Bar.Add(2)", span="2662-2662"];
m5_1238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="wibble.Bar.Add(3)", span="2663-2663"];
m5_1239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="2664-2664"];
m5_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2666-2666"];
m5_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2667-2667"];
m5_1242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2669-2669"];
m5_1243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2670-2670"];
m5_1244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2671-2671"];
m5_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2672-2672"];
m5_1246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2673-2673"];
m5_1247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2674-2674"];
m5_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2657-2657"];
m5_2289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5106-5106"];
m5_2290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Person person = new Person()", span="5108-5108"];
m5_2291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="5109-5109"];
m5_2292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="person.LastModified = person.BirthDate", span="5110-5110"];
m5_2293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="person.Department = ''Department!''", span="5111-5111"];
m5_2294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="person.Name = ''Name!''", span="5112-5112"];
m5_2298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="5122-5122"];
m5_2295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="5114-5114"];
m5_2296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="string dateTimeOffsetText", span="5115-5115"];
m5_2304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5156-5156"];
m5_2297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="5117-5117"];
m5_2300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="5128-5151"];
m5_2299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="5124-5127"];
m5_2301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5153-5153"];
m5_2302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="5154-5154"];
m5_2303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5155-5155"];
m5_2305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5157-5157"];
m5_2306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="5158-5158"];
m5_2307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="5159-5159"];
m5_2308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5106-5106"];
m5_3770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8574-8574"];
m5_3771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonWriter.cs", label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="8576-8583"];
m5_3772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="8585-8588"];
m5_3773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8590-8597"];
m5_3774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8574-8574"];
m5_4382 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="10103-10103"];
m5_4383 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonWriter.cs", label="Constructor = ''NonPublic''", span="10105-10105"];
m5_4384 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="10103-10103"];
m5_1380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2928-2928"];
m5_1381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2930-2930"];
m5_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2931-2931"];
m5_1386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2938-2938"];
m5_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2939-2939"];
m5_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2933-2933"];
m5_1384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2934-2934"];
m5_1385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2936-2936"];
m5_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2928-2928"];
m5_3197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7300-7300"];
m5_3198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonWriter.cs", label="string json = @''{''''Id'''':null}''", span="7302-7302"];
m5_3199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonWriter.cs", label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7303-7303"];
m5_3200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonWriter.cs", label="Assert.AreEqual(null, c.Id)", span="7305-7305"];
m5_3201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonWriter.cs", label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="7307-7307"];
m5_3202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonWriter.cs", label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7308-7308"];
m5_3203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonWriter.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="7310-7310"];
m5_3204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7300-7300"];
m5_1622 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31"];
m5_3016 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m5_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3834-3834"];
m5_1767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3836-3848"];
m5_1768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonWriter.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3850-3850"];
m5_1769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonWriter.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3852-3852"];
m5_1770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonWriter.cs", label="Assert.AreEqual(2, content.Children.Count)", span="3853-3853"];
m5_1771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonWriter.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3854-3854"];
m5_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonWriter.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3855-3855"];
m5_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3834-3834"];
m5_966 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m5_960 [cluster="DataContractJsonSerializer.cstr", file="JsonWriter.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m5_4363 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="10030-10030"];
m5_74 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="287-287"];
m5_75 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''[null]'')", span="287-287"];
m5_76 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="287-287"];
m5_80 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="295-295"];
m5_81 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']'')", span="295-295"];
m5_82 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="295-295"];
m5_86 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="303-303"];
m5_87 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['pie']'')", span="303-303"];
m5_88 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="303-303"];
m5_92 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="311-311"];
m5_93 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['']'')", span="311-311"];
m5_94 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="311-311"];
m5_152 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="424-424"];
m5_153 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="424-424"];
m5_154 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="424-424"];
m5_158 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="430-430"];
m5_159 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", span="430-430"];
m5_160 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="430-430"];
m5_169 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="443-443"];
m5_170 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="443-443"];
m5_171 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="443-443"];
m5_180 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="479-479"];
m5_181 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.SerializeObject(new Binding_DisallowNull())", span="479-479"];
m5_182 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="479-479"];
m5_193 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="501-501"];
m5_194 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.SerializeObject(new DictionaryWithNoNull())", span="501-501"];
m5_195 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="501-501"];
m5_221 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="554-554"];
m5_224 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="558-558"];
m5_227 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="562-562"];
m5_230 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="566-566"];
m5_233 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="570-570"];
m5_236 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="574-574"];
m5_239 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="578-578"];
m5_222 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IList<object>>(''[1,'')", span="554-554"];
m5_223 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="554-554"];
m5_225 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="558-558"];
m5_226 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="558-558"];
m5_228 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="562-562"];
m5_229 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="562-562"];
m5_231 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="566-566"];
m5_232 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="566-566"];
m5_234 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="570-570"];
m5_235 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="570-570"];
m5_237 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="574-574"];
m5_238 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="574-574"];
m5_240 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="578-578"];
m5_241 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="578-578"];
m5_263 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.SerializeObject(c1)", span="617-617"];
m5_262 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="617-617"];
m5_265 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="630-630"];
m5_268 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="634-634"];
m5_264 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="617-617"];
m5_266 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="630-630"];
m5_267 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="630-630"];
m5_269 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="634-634"];
m5_270 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="634-634"];
m5_284 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="659-659"];
m5_287 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="669-669"];
m5_286 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="659-659"];
m5_288 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="669-669"];
m5_289 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="669-669"];
m5_362 [cluster="lambda expression", file="JsonWriter.cs", label="a.ErrorContext.Handled = true", span="945-945"];
m5_361 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="945-945"];
m5_363 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="945-945"];
m5_457 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<List<Version>>(json)", span="1149-1149"];
m5_456 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="1149-1149"];
m5_458 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="1149-1149"];
m5_568 [cluster="lambda expression", file="JsonWriter.cs", label="var serializationBinder = serializer.Binder", span="1220-1220"];
m5_567 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="1217-1223"];
m5_569 [cluster="lambda expression", file="JsonWriter.cs", label="serializationBinder.ToString()", span="1222-1222"];
m5_570 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="1217-1223"];
m5_643 [cluster="lambda expression", file="JsonWriter.cs", label=referenceResolver, span="1407-1407"];
m5_642 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="1407-1407"];
m5_644 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="1407-1407"];
m5_718 [cluster="lambda expression", file="JsonWriter.cs", label="var serializationBinder = serializerProxy.Binder", span="1457-1457"];
m5_717 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="1454-1460"];
m5_719 [cluster="lambda expression", file="JsonWriter.cs", label="serializationBinder.ToString()", span="1459-1459"];
m5_720 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="1454-1460"];
m5_967 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="2103-2103"];
m5_970 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="2106-2106"];
m5_968 [cluster="lambda expression", file="JsonWriter.cs", label="p.Name", span="2103-2103"];
m5_969 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="2103-2103"];
m5_971 [cluster="lambda expression", file="JsonWriter.cs", label="p.Name", span="2106-2106"];
m5_972 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="2106-2106"];
m5_1101 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="2429-2429"];
m5_1102 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2429-2429"];
m5_1103 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="2429-2429"];
m5_1110 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="2437-2437"];
m5_1109 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="2437-2437"];
m5_1111 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="2437-2437"];
m5_1412 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="2980-2984"];
m5_1413 [cluster="lambda expression", file="JsonWriter.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2982-2982"];
m5_1414 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.SerializeObject(c)", span="2983-2983"];
m5_1415 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="2980-2984"];
m5_1506 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3161-3172"];
m5_1507 [cluster="lambda expression", file="JsonWriter.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="3163-3169"];
m5_1508 [cluster="lambda expression", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="3171-3171"];
m5_1509 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3161-3172"];
m5_1551 [cluster="lambda expression", file="JsonWriter.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="3277-3277"];
m5_1550 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3275-3278"];
m5_1552 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3275-3278"];
m5_1656 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3529-3535"];
m5_1657 [cluster="lambda expression", file="JsonWriter.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3531-3531"];
m5_1658 [cluster="lambda expression", file="JsonWriter.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="3532-3532"];
m5_1659 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3534-3534"];
m5_1660 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3529-3535"];
m5_1798 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Event>(json)", span="3898-3898"];
m5_1797 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3898-3898"];
m5_1799 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3898-3898"];
m5_1825 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3937-3937"];
m5_1824 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3937-3937"];
m5_1826 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3937-3937"];
m5_1832 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3947-3947"];
m5_1831 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3947-3947"];
m5_1833 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3947-3947"];
m5_1839 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Exception>(json)", span="3958-3958"];
m5_1838 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3958-3958"];
m5_1840 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3958-3958"];
m5_1846 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<double>(json)", span="3970-3970"];
m5_1845 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3970-3970"];
m5_1847 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3970-3970"];
m5_1853 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3981-3981"];
m5_1852 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3981-3981"];
m5_1854 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3981-3981"];
m5_1860 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<JObject>(json)", span="3994-3994"];
m5_1859 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="3994-3994"];
m5_1861 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="3994-3994"];
m5_1867 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="4007-4007"];
m5_1866 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4007-4007"];
m5_1868 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4007-4007"];
m5_1874 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="4015-4015"];
m5_1873 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4015-4015"];
m5_1875 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4015-4015"];
m5_1888 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.PopulateObject(json, new Person())", span="4041-4041"];
m5_1887 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4041-4041"];
m5_1889 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4041-4041"];
m5_1896 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="4049-4049"];
m5_1895 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4049-4049"];
m5_1897 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4049-4049"];
m5_1906 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4064-4075"];
m5_1907 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4066-4074"];
m5_1908 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4064-4075"];
m5_1913 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4081-4092"];
m5_1914 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4083-4091"];
m5_1915 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4081-4092"];
m5_1919 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4098-4109"];
m5_1920 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4100-4108"];
m5_1921 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4098-4109"];
m5_1925 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4115-4126"];
m5_1926 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4117-4125"];
m5_1927 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4115-4126"];
m5_2038 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4433-4433"];
m5_2039 [cluster="lambda expression", file="JsonWriter.cs", label="x.Id == id", span="4433-4433"];
m5_2040 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4433-4433"];
m5_2075 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4532-4536"];
m5_2074 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="4532-4536"];
m5_2076 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="4532-4536"];
m5_2468 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5545-5545"];
m5_2467 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="5545-5545"];
m5_2469 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="5545-5545"];
m5_2473 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="5551-5566"];
m5_2474 [cluster="lambda expression", file="JsonWriter.cs", label="var reference = new Dictionary<string, object>()", span="5555-5555"];
m5_2475 [cluster="lambda expression", file="JsonWriter.cs", label="reference.Add(''$ref'', 1)", span="5556-5556"];
m5_2476 [cluster="lambda expression", file="JsonWriter.cs", label="reference.Add(''$id'', 1)", span="5557-5557"];
m5_2480 [cluster="lambda expression", file="JsonWriter.cs", label="child.Add(''Father'', reference)", span="5562-5562"];
m5_2477 [cluster="lambda expression", file="JsonWriter.cs", label="var child = new Dictionary<string, object>()", span="5559-5559"];
m5_2478 [cluster="lambda expression", file="JsonWriter.cs", label="child.Add(''_id'', 2)", span="5560-5560"];
m5_2479 [cluster="lambda expression", file="JsonWriter.cs", label="child.Add(''Name'', ''Isabell'')", span="5561-5561"];
m5_2481 [cluster="lambda expression", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5564-5564"];
m5_2482 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5565-5565"];
m5_2483 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="5551-5566"];
m5_2584 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5785-5785"];
m5_2583 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="5785-5785"];
m5_2585 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="5785-5785"];
m5_2799 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="6271-6271"];
m5_2800 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="6271-6271"];
m5_2801 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="6271-6271"];
m5_3129 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                })", span="7151-7154"];
m5_3128 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7149-7155"];
m5_3130 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7149-7155"];
m5_3153 [cluster="lambda expression", file="JsonWriter.cs", label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="7207-7207"];
m5_3152 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7205-7208"];
m5_3154 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7205-7208"];
m5_3167 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="7247-7247"];
m5_3166 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7247-7247"];
m5_3168 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7247-7247"];
m5_3186 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7276-7284"];
m5_3187 [cluster="lambda expression", file="JsonWriter.cs", label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="7278-7281"];
m5_3188 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7283-7283"];
m5_3189 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7276-7284"];
m5_3193 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7290-7296"];
m5_3194 [cluster="lambda expression", file="JsonWriter.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''", span="7292-7293"];
m5_3195 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7295-7295"];
m5_3196 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7290-7296"];
m5_3288 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7473-7473"];
m5_3289 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<double>('''')", span="7473-7473"];
m5_3290 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7473-7473"];
m5_3294 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7479-7479"];
m5_3295 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<StringComparison>('''')", span="7479-7479"];
m5_3296 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7479-7479"];
m5_3300 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7485-7485"];
m5_3301 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<int>('''')", span="7485-7485"];
m5_3302 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7485-7485"];
m5_3310 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7499-7499"];
m5_3311 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<double>(null)", span="7499-7499"];
m5_3312 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7499-7499"];
m5_3316 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7511-7511"];
m5_3317 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject(null)", span="7511-7511"];
m5_3318 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7511-7511"];
m5_3436 [cluster="lambda expression", file="JsonWriter.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7750-7750"];
m5_3437 [cluster="lambda expression", file="JsonWriter.cs", label="e.ErrorContext.Handled = true", span="7751-7751"];
m5_3435 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7748-7752"];
m5_3438 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7748-7752"];
m5_3451 [cluster="lambda expression", file="JsonWriter.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7775-7775"];
m5_3452 [cluster="lambda expression", file="JsonWriter.cs", label="e.ErrorContext.Handled = true", span="7776-7776"];
m5_3450 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7773-7777"];
m5_3453 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7773-7777"];
m5_3466 [cluster="lambda expression", file="JsonWriter.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7798-7798"];
m5_3467 [cluster="lambda expression", file="JsonWriter.cs", label="e.ErrorContext.Handled = true", span="7799-7799"];
m5_3465 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="7796-7800"];
m5_3468 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="7796-7800"];
m5_3594 [cluster="lambda expression", file="JsonWriter.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8152-8152"];
m5_3593 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="8152-8152"];
m5_3595 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="8152-8152"];
m5_3619 [cluster="lambda expression", file="JsonWriter.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8199-8199"];
m5_3618 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="8199-8199"];
m5_3620 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="8199-8199"];
m5_3631 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="8243-8255"];
m5_3632 [cluster="lambda expression", file="JsonWriter.cs", label="string json = ''[{},1]''", span="8245-8245"];
m5_3633 [cluster="lambda expression", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8247-8247"];
m5_3635 [cluster="lambda expression", file="JsonWriter.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8250-8250"];
m5_3634 [cluster="lambda expression", file="JsonWriter.cs", label="serializer.CheckAdditionalContent = true", span="8248-8248"];
m5_3638 [cluster="lambda expression", file="JsonWriter.cs", label="serializer.Deserialize(reader, typeof(MyType))", span="8254-8254"];
m5_3636 [cluster="lambda expression", file="JsonWriter.cs", label="reader.Read()", span="8251-8251"];
m5_3637 [cluster="lambda expression", file="JsonWriter.cs", label="reader.Read()", span="8252-8252"];
m5_3639 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="8243-8255"];
m5_3664 [cluster="lambda expression", file="JsonWriter.cs", label="serializer.Deserialize(reader, typeof(MyType))", span="8299-8299"];
m5_3663 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="8299-8299"];
m5_3665 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="8299-8299"];
m5_3747 [cluster="lambda expression", file="JsonWriter.cs", label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="8487-8487"];
m5_3746 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="8487-8487"];
m5_3748 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="8487-8487"];
m5_3827 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="8732-8732"];
m5_3828 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8732-8732"];
m5_3829 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="8732-8732"];
m5_3835 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="8747-8747"];
m5_3836 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8747-8747"];
m5_3837 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="8747-8747"];
m5_3845 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8761-8761"];
m5_3844 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="8761-8761"];
m5_3846 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="8761-8761"];
m5_4030 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="9264-9264"];
m5_4031 [cluster="lambda expression", file="JsonWriter.cs", label="new IdReferenceResolver()", span="9264-9264"];
m5_4032 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="9264-9264"];
m5_4277 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="9833-9833"];
m5_4278 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.SerializeObject(new ErroringTestClass())", span="9833-9833"];
m5_4279 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="9833-9833"];
m5_4284 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="9839-9839"];
m5_4285 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<string>(''020474068'')", span="9839-9839"];
m5_4286 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="9839-9839"];
m5_4305 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="9922-9926"];
m5_4304 [cluster="lambda expression", file="JsonWriter.cs", label="Entry lambda expression", span="9920-9927"];
m5_4306 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="9920-9927"];
m5_4364 [cluster="lambda expression", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<CompletionDataRequest>(s)", span="10030-10030"];
m5_4365 [cluster="lambda expression", file="JsonWriter.cs", label="Exit lambda expression", span="10030-10030"];
m5_388 [cluster="object.GetType()", file="JsonWriter.cs", label="Entry object.GetType()", span="0-0"];
m5_3710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8413-8413"];
m5_3711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonWriter.cs", label="string json", span="8415-8415"];
m5_3712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonWriter.cs", label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="8416-8416"];
m5_3713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(d)", span="8418-8418"];
m5_3714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="8421-8421"];
m5_3715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="8424-8424"];
m5_3716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonWriter.cs", label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="8427-8427"];
m5_3717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8413-8413"];
m5_4138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9480-9480"];
m5_4139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonWriter.cs", label="string originalUri = ''https://test.com?m=a%2bb''", span="9482-9482"];
m5_4140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonWriter.cs", label="Uri uriWithPlus = new Uri(originalUri)", span="9484-9484"];
m5_4143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonWriter.cs", label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="9490-9490"];
m5_4141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonWriter.cs", label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="9486-9486"];
m5_4142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonWriter.cs", label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="9488-9488"];
m5_4144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9480-9480"];
m5_1390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2943-2943"];
m5_1391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonWriter.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2945-2945"];
m5_1392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonWriter.cs", label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2947-2951"];
m5_1393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2953-2953"];
m5_1394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2955-2958"];
m5_1395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2943-2943"];
m5_3832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8745-8745"];
m5_3833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8747-8747"];
m5_3834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8745-8745"];
m5_248 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m5_443 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m5_1916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4096-4096"];
m5_1917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="4098-4109"];
m5_1918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4096-4096"];
m5_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="936-936"];
m5_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonWriter.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="938-941"];
m5_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonWriter.cs", label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="943-946"];
m5_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonWriter.cs", label="Assert.AreEqual(0, l.ChildId)", span="948-948"];
m5_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="936-936"];
m5_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="954-954"];
m5_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonWriter.cs", label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="956-956"];
m5_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonWriter.cs", label="Assert.AreEqual(2, s.Count)", span="957-957"];
m5_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonWriter.cs", label="Assert.AreEqual(''1'', s[0])", span="958-958"];
m5_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonWriter.cs", label="Assert.AreEqual(''2'', s[1])", span="959-959"];
m5_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="954-954"];
m5_1993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4258-4258"];
m5_1994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="4260-4310"];
m5_1995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="4312-4312"];
m5_1996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="4315-4315"];
m5_1997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="4318-4318"];
m5_1998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label=results, span="4319-4319"];
m5_2000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="searchResults.Add(searchResult)", span="4322-4322"];
m5_2001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="Assert.AreEqual(2, searchResults.Count)", span="4333-4333"];
m5_2002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="4334-4334"];
m5_2003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="4335-4335"];
m5_1999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="4321-4321"];
m5_2004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4258-4258"];
m5_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1821-1821"];
m5_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1824-1824"];
m5_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="var i = 0", span="1825-1825"];
m5_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1827-1827"];
m5_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1834-1834"];
m5_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="i < 800", span="1825-1825"];
m5_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="i++", span="1825-1825"];
m5_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1829-1829"];
m5_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="var jsonSerializer = JsonSerializer.Create(settings)", span="1830-1830"];
m5_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="var ms = new MemoryStream()", span="1831-1831"];
m5_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1840-1840"];
m5_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="var streamWriter = new StreamWriter(ms)", span="1833-1833"];
m5_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="1837-1837"];
m5_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="streamWriter.Flush()", span="1835-1835"];
m5_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="var stopWatch = Stopwatch.StartNew()", span="1839-1839"];
m5_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="stopWatch.Stop()", span="1841-1841"];
m5_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1821-1821"];
m5_2162 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonWriter.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m5_1542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3269-3269"];
m5_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonWriter.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="3271-3271"];
m5_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonWriter.cs", label="testClass.co = new Co()", span="3272-3272"];
m5_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonWriter.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="3273-3273"];
m5_1546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n            }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="3275-3278"];
m5_1547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3269-3269"];
m5_148 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonWriter.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_2313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5176-5176"];
m5_2314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonWriter.cs", label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="5178-5180"];
m5_2315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonWriter.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="5182-5182"];
m5_2316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonWriter.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="5183-5183"];
m5_2317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonWriter.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="5184-5184"];
m5_2318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonWriter.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="5185-5185"];
m5_2319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonWriter.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="5186-5186"];
m5_2320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5176-5176"];
m5_3690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8347-8347"];
m5_3691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonWriter.cs", label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="8349-8349"];
m5_3692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonWriter.cs", label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="8350-8350"];
m5_3693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8347-8347"];
m5_4098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9405-9405"];
m5_4099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonWriter.cs", label="return (short)Value;", span="9407-9407"];
m5_4100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9405-9405"];
m5_2107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4688-4688"];
m5_2110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonWriter.cs", label="C1 = c1", span="4690-4690"];
m5_2111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4688-4688"];
m5_802 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonWriter.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m5_3236 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147"];
m5_3307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7496-7496"];
m5_3308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonWriter.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7498-7504"];
m5_3309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7496-7496"];
m5_1970 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m5_1979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4223-4223"];
m5_1980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonWriter.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="4225-4225"];
m5_1981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonWriter.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="4226-4226"];
m5_1982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonWriter.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="4227-4227"];
m5_1983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4229-4229"];
m5_1984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 2\r\n}'', json)", span="4231-4234"];
m5_1985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4223-4223"];
m5_716 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60"];
m5_2267 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m5_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1192-1192"];
m5_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonWriter.cs", label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="1194-1194"];
m5_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(null, o.A)", span="1195-1195"];
m5_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonWriter.cs", label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="1197-1197"];
m5_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonWriter.cs", label="Assert.AreEqual(true, o.A)", span="1198-1198"];
m5_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1192-1192"];
m5_1293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2774-2774"];
m5_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2776-2776"];
m5_1295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''1'', json)", span="2777-2777"];
m5_1296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonWriter.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2779-2779"];
m5_1297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonWriter.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2780-2780"];
m5_1298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2774-2774"];
m5_3269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7441-7441"];
m5_3270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="object v = JsonConvert.DeserializeObject<double?>('''')", span="7443-7443"];
m5_3271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Assert.IsNull(v)", span="7444-7444"];
m5_3272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="v = JsonConvert.DeserializeObject<char?>('''')", span="7446-7446"];
m5_3273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Assert.IsNull(v)", span="7447-7447"];
m5_3274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="v = JsonConvert.DeserializeObject<int?>('''')", span="7449-7449"];
m5_3275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Assert.IsNull(v)", span="7450-7450"];
m5_3276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="7452-7452"];
m5_3277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Assert.IsNull(v)", span="7453-7453"];
m5_3278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="7455-7455"];
m5_3279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Assert.IsNull(v)", span="7456-7456"];
m5_3280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="7458-7458"];
m5_3281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Assert.IsNull(v)", span="7459-7459"];
m5_3282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="7461-7461"];
m5_3283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Assert.IsNull(v)", span="7462-7462"];
m5_3284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7441-7441"];
m5_1945 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m5_3877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8862-8862"];
m5_3878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8864-8870"];
m5_3879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8872-8872"];
m5_3880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="Assert.IsNull(c2.MyNullableBool)", span="8873-8873"];
m5_3881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="Assert.IsNull(c2.MyNullableInteger)", span="8874-8874"];
m5_3882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="Assert.IsNull(c2.MyNullableDateTime)", span="8875-8875"];
m5_3883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8876-8876"];
m5_3884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="Assert.IsNull(c2.MyNullableDecimal)", span="8877-8877"];
m5_3885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8862-8862"];
m5_3169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7252-7252"];
m5_3170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonWriter.cs", label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="7254-7254"];
m5_3171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(widget)", span="7256-7256"];
m5_3172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="7258-7258"];
m5_3173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7252-7252"];
m5_1261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2729-2729"];
m5_1262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonWriter.cs", label="Stack<object> s = new Stack<object>()", span="2731-2731"];
m5_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonWriter.cs", label="s.Push(1)", span="2732-2732"];
m5_1264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonWriter.cs", label="s.Push(2)", span="2733-2733"];
m5_1265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonWriter.cs", label="s.Push(3)", span="2734-2734"];
m5_1266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(s)", span="2736-2736"];
m5_1267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonWriter.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="2737-2737"];
m5_1268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2729-2729"];
m5_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2478-2478"];
m5_1137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2480-2488"];
m5_1138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="MemoryStream ms = new MemoryStream()", span="2490-2490"];
m5_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="s.WriteObject(ms, testDates)", span="2492-2492"];
m5_1144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2498-2498"];
m5_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2491-2491"];
m5_1141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="2493-2493"];
m5_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="StreamReader sr = new StreamReader(ms)", span="2494-2494"];
m5_1143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="string expected = sr.ReadToEnd()", span="2496-2496"];
m5_1145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="Assert.AreEqual(expected, result)", span="2499-2499"];
m5_1146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2478-2478"];
m5_3647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", span="8272-8272"];
m5_3648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonWriter.cs", label="string json = @''{ ''''MyProperty'''':{''''Key'''':''''Value''''}} /*this is a comment */\r\n// this is also a comment\r\nThis is just junk, though.''", span="8274-8276"];
m5_3649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8278-8278"];
m5_3650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonWriter.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8280-8280"];
m5_3651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonWriter.cs", label="MyType mt = (MyType)serializer.Deserialize(reader, typeof(MyType))", span="8282-8282"];
m5_3652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonWriter.cs", label="Assert.AreEqual(1, mt.MyProperty.Count)", span="8283-8283"];
m5_3653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", span="8272-8272"];
m5_1487 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29"];
m5_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3648-3648"];
m5_1694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonWriter.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3650-3650"];
m5_1695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3648-3648"];
m5_3035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6937-6937"];
m5_3036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6939-6939"];
m5_3037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6941-6941"];
m5_3042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="serializer.Serialize(jsonWriter, test)", span="6948-6948"];
m5_3038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="6942-6942"];
m5_3047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(jsonReader)", span="6958-6958"];
m5_3039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="byte[] objectBytes", span="6944-6944"];
m5_3040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="MemoryStream stream = new MemoryStream()", span="6945-6945"];
m5_3041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="JsonWriter jsonWriter = new JsonTextWriter(new StreamWriter(stream))", span="6946-6946"];
m5_3044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="objectBytes = stream.ToArray()", span="6951-6951"];
m5_3043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="jsonWriter.Flush()", span="6949-6949"];
m5_3045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="MemoryStream stream = new MemoryStream(objectBytes)", span="6954-6954"];
m5_3046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="JsonReader jsonReader = new JsonTextReader(new StreamReader(stream))", span="6955-6955"];
m5_3048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="6960-6960"];
m5_3049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6961-6961"];
m5_3050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6937-6937"];
m5_1122 [cluster="Unk.ReadObject", file="JsonWriter.cs", label="Entry Unk.ReadObject", span=""];
m5_1549 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m5_2400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="5377-5377"];
m5_2151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4826-4826"];
m5_2152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4828-4828"];
m5_2153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4826-4826"];
m5_1057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2279-2279"];
m5_1058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonWriter.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="2281-2281"];
m5_1059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonWriter.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="2283-2283"];
m5_1060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonWriter.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2285-2285"];
m5_1061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2279-2279"];
m5_51 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m5_2055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="4407-4407"];
m5_274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="654-654"];
m5_275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="656-656"];
m5_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="662-662"];
m5_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c2)", span="664-664"];
m5_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="666-666"];
m5_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="668-670"];
m5_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="672-672"];
m5_282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="674-674"];
m5_283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="654-654"];
m5_3423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7743-7743"];
m5_3424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="string json = ''{}''", span="7745-7745"];
m5_3425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="IList<string> errors = new List<string>()", span="7746-7746"];
m5_3427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7754-7757"];
m5_3426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7748-7752"];
m5_3429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="Assert.AreEqual(4, errors.Count)", span="7760-7760"];
m5_3430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7761-7761"];
m5_3431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7762-7762"];
m5_3432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7763-7763"];
m5_3433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7764-7764"];
m5_3428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="Assert.IsNotNull(o)", span="7759-7759"];
m5_3434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7743-7743"];
m5_4055 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="37-37"];
m5_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="1050-1050"];
m5_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="1050-1050"];
m5_3990 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JsonWriter.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m5_3073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="7011-7011"];
m5_3074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="7013-7013"];
m5_3075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="7015-7018"];
m5_3078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="7021-7024"];
m5_3080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="7032-7040"];
m5_3076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="StaticTestClass.y = 2", span="7019-7019"];
m5_3077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="StaticTestClass.z = 3", span="7020-7020"];
m5_3079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="7026-7030"];
m5_3081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="Assert.AreEqual(-1, c2.x)", span="7042-7042"];
m5_3082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="7043-7043"];
m5_3083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="7044-7044"];
m5_3084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="7011-7011"];
m5_2922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6662-6662"];
m5_2923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonWriter.cs", label="throw new NotImplementedException();", span="6664-6664"];
m5_2924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6662-6662"];
m5_3216 [cluster="Newtonsoft.Json.Tests.TestObjects.NullableGuid.NullableGuid()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NullableGuid.NullableGuid()", span="29-29"];
m5_4299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="9870-9870"];
m5_3261 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28"];
m5_3373 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30"];
m5_4130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="9451-9451"];
m5_1444 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="891-891"];
m5_1567 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m5_915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1938-1938"];
m5_1362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2889-2889"];
m5_1363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2891-2891"];
m5_1364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2892-2892"];
m5_1365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2894-2897"];
m5_1366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2898-2898"];
m5_1367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2900-2903"];
m5_1368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2905-2905"];
m5_1369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2906-2906"];
m5_1370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2889-2889"];
m5_3860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8808-8808"];
m5_3861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8810-8814"];
m5_3862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8816-8816"];
m5_3866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8821-8821"];
m5_3863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="Assert.AreEqual(float.NaN, floats[0])", span="8817-8817"];
m5_3864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8818-8818"];
m5_3865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8819-8819"];
m5_3867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="Assert.AreEqual(float.NaN, doubles[0])", span="8822-8822"];
m5_3868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8823-8823"];
m5_3869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8824-8824"];
m5_3870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8808-8808"];
m5_2177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4864-4864"];
m5_2178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonWriter.cs", label="return _innerDictionary.Remove(key);", span="4866-4866"];
m5_2179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4864-4864"];
m5_481 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m5_2783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6241-6241"];
m5_2784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonWriter.cs", label="ComplexItem i = new ComplexItem()", span="6243-6243"];
m5_2785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="6245-6245"];
m5_2786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="6247-6249"];
m5_2787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6241-6241"];
m5_883 [cluster="System.IO.StreamWriter.Flush()", file="JsonWriter.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m5_1841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3965-3965"];
m5_1842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonWriter.cs", label="string json = @''[]''", span="3967-3967"];
m5_1843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { JsonConvert.DeserializeObject<double>(json); },\r\n                @''Unexpected character encountered while parsing value: [. Path '', line 1, position 1.'')", span="3969-3971"];
m5_1844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3965-3965"];
m5_3339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7561-7561"];
m5_3340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7563-7569"];
m5_3341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7571-7571"];
m5_3342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7572-7572"];
m5_3343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7573-7573"];
m5_3344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7574-7574"];
m5_3345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7576-7578"];
m5_3346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(null, c2.DateTimeField)", span="7580-7580"];
m5_3347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7581-7581"];
m5_3348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7582-7582"];
m5_3349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7583-7583"];
m5_3350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7561-7561"];
m5_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="973-973"];
m5_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="975-975"];
m5_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="976-976"];
m5_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="serializer.Populate(reader, l)", span="982-982"];
m5_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="987-987"];
m5_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="978-978"];
m5_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="979-979"];
m5_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="IList<object> l = new List<object>()", span="981-981"];
m5_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="984-984"];
m5_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="985-985"];
m5_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="973-973"];
m5_1070 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m5_2436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5491-5491"];
m5_2437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="5493-5493"];
m5_2438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5491-5491"];
m5_2128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4725-4725"];
m5_4274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9831-9831"];
m5_4275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="9833-9833"];
m5_4276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9831-9831"];
m5_165 [cluster="Unk.IsNull", file="JsonWriter.cs", label="Entry Unk.IsNull", span=""];
m5_3235 [cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29"];
m5_4330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9959-9959"];
m5_4331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="9961-9961"];
m5_4332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9959-9959"];
m5_1342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2856-2856"];
m5_1343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2858-2858"];
m5_1344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2859-2859"];
m5_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2866-2866"];
m5_1349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2867-2867"];
m5_1345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(m1)", span="2861-2861"];
m5_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2862-2862"];
m5_1347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2864-2864"];
m5_1350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2856-2856"];
m5_4122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9445-9445"];
m5_4123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9447-9447"];
m5_4124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9445-9445"];
m5_2155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4831-4831"];
m5_2156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonWriter.cs", label="return _innerDictionary.ContainsKey(key);", span="4833-4833"];
m5_2157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4831-4831"];
m5_563 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonWriter.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m5_2427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5477-5477"];
m5_2428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Pos p = (Pos)value", span="5479-5479"];
m5_2430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="5483-5483"];
m5_2431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="writer.WriteNull()", span="5487-5487"];
m5_2429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="p != null", span="5481-5481"];
m5_2432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5477-5477"];
m5_729 [cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37"];
m5_3160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="7212-7212"];
m5_3387 [cluster="System.Enum.Parse(System.Type, string)", file="JsonWriter.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m5_561 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="76-76"];
m5_3161 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1764-1764"];
m5_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3933-3933"];
m5_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonWriter.cs", label="string json = @''[]''", span="3935-3935"];
m5_1822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3937-3939"];
m5_1823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3933-3933"];
m5_2582 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonWriter.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m5_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="1002-1002"];
m5_391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="1004-1004"];
m5_392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonWriter.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="1006-1006"];
m5_393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonWriter.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="1007-1007"];
m5_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="1002-1002"];
m5_3439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7768-7768"];
m5_3440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7770-7770"];
m5_3441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="IList<string> errors = new List<string>()", span="7771-7771"];
m5_3443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7779-7782"];
m5_3442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7773-7777"];
m5_3445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="Assert.AreEqual(3, errors.Count)", span="7785-7785"];
m5_3446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7786-7786"];
m5_3447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7787-7787"];
m5_3448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7788-7788"];
m5_3444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="Assert.IsNotNull(o)", span="7784-7784"];
m5_3449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7768-7768"];
m5_1148 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonWriter.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m5_749 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m5_3536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7996-7996"];
m5_3537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonWriter.cs", label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7998-7998"];
m5_3538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonWriter.cs", label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7999-7999"];
m5_3539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonWriter.cs", label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="8001-8001"];
m5_3540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonWriter.cs", label="Assert.AreEqual(0, objDeserialized.Age)", span="8002-8002"];
m5_3541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7996-7996"];
m5_1808 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36"];
m5_2019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4371-4371"];
m5_2020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonWriter.cs", label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="4373-4376"];
m5_2021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonWriter.cs", label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="4377-4380"];
m5_2022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4371-4371"];
m5_2773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6216-6216"];
m5_2774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="6218-6221"];
m5_2775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6223-6223"];
m5_2776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="6225-6231"];
m5_2777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="6233-6233"];
m5_2778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="6235-6235"];
m5_2779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="6236-6236"];
m5_2780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="6237-6237"];
m5_2781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6216-6216"];
m5_2309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5168-5168"];
m5_2310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonWriter.cs", label="Key = k", span="5170-5170"];
m5_2311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonWriter.cs", label="Value = v", span="5171-5171"];
m5_2312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5168-5168"];
m5_3176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7262-7262"];
m5_3177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonWriter.cs", label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="7264-7264"];
m5_3178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonWriter.cs", label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="7266-7266"];
m5_3179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonWriter.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="7268-7268"];
m5_3180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonWriter.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="7269-7269"];
m5_3181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonWriter.cs", label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="7270-7270"];
m5_3182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7262-7262"];
m5_3147 [cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27"];
m5_3949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", span="9093-9093"];
m5_3950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<TypeConverterSize, TypeConverterSize> { { new TypeConverterSize(1, 2), new TypeConverterSize(3, 4) } }\r\n            )", span="9095-9097"];
m5_3951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="9099-9099"];
m5_3952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonWriter.cs", label="Dictionary<TypeConverterSize, TypeConverterSize> d = JsonConvert.DeserializeObject<Dictionary<TypeConverterSize, TypeConverterSize>>(json)", span="9101-9101"];
m5_3953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonWriter.cs", label="Assert.AreEqual(new TypeConverterSize(1, 2), d.Keys.First())", span="9103-9103"];
m5_3954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonWriter.cs", label="Assert.AreEqual(new TypeConverterSize(3, 4), d.Values.First())", span="9104-9104"];
m5_3955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", span="9093-9093"];
m5_3020 [cluster="System.IO.StringWriter.ToString()", file="JsonWriter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2871-2871"];
m5_1354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2873-2873"];
m5_1355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2874-2874"];
m5_1359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2884-2884"];
m5_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2885-2885"];
m5_1356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2876-2879"];
m5_1357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2880-2880"];
m5_1358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2882-2882"];
m5_1361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2871-2871"];
m5_3262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7429-7429"];
m5_3263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonWriter.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7431-7431"];
m5_3264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonWriter.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7432-7432"];
m5_3266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonWriter.cs", label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="7435-7435"];
m5_3265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonWriter.cs", label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="7434-7434"];
m5_3267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonWriter.cs", label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="7437-7437"];
m5_3268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7429-7429"];
m5_2523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5634-5634"];
m5_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="457-457"];
m5_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonWriter.cs", label="IgnoredProperty p = JsonConvert.DeserializeObject<IgnoredProperty>(''{'StringProp1':[1,2,3],'StringProp2':{}}'')", span="459-459"];
m5_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonWriter.cs", label="Assert.IsNull(p.StringProp1)", span="460-460"];
m5_175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonWriter.cs", label="Assert.IsNull(p.StringProp2)", span="461-461"];
m5_176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="457-457"];
m5_964 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m5_916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2095-2095"];
m5_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="MemoryStream ms = new MemoryStream()", span="2097-2097"];
m5_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="2098-2098"];
m5_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="s.WriteObject(ms, o)", span="2099-2099"];
m5_953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="2105-2105"];
m5_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="var data = ms.ToArray()", span="2101-2101"];
m5_951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="2102-2102"];
m5_952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="2103-2103"];
m5_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="2112-2112"];
m5_956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label=dataContractJson, span="2113-2113"];
m5_954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="2106-2106"];
m5_957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="2115-2115"];
m5_958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="return jsonNetJson.ToString();", span="2118-2118"];
m5_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2095-2095"];
m5_4202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9629-9629"];
m5_4203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9631-9631"];
m5_4204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9632-9632"];
m5_4206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9639-9642"];
m5_4209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9650-9650"];
m5_4205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9633-9637"];
m5_4208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9648-9648"];
m5_4207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9644-9646"];
m5_4210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9629-9629"];
m5_3454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7792-7792"];
m5_3455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="IList<string> errors = new List<string>()", span="7794-7794"];
m5_3456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7796-7800"];
m5_3459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="Assert.AreEqual(3, errors.Count)", span="7813-7813"];
m5_3460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7814-7814"];
m5_3461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7815-7815"];
m5_3462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7816-7816"];
m5_3457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7802-7806"];
m5_3458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7808-7811"];
m5_3463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7792-7792"];
m5_1205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2614-2614"];
m5_1206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2616-2616"];
m5_1207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2617-2617"];
m5_1208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2618-2618"];
m5_1209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2620-2620"];
m5_1210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2621-2621"];
m5_1211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2622-2622"];
m5_1212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2623-2623"];
m5_1213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2624-2624"];
m5_1214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2614-2614"];
m5_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="796-796"];
m5_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonWriter.cs", label="this.Sections = new HashSet<FaqSection>()", span="798-798"];
m5_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="796-796"];
m5_2568 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="850-850"];
m5_887 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonWriter.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m5_1416 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m5_2265 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m5_3756 [cluster="System.Tuple.Create<T1>(T1)", file="JsonWriter.cs", label="Entry System.Tuple.Create<T1>(T1)", span="0-0"];
m5_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="996-996"];
m5_188 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="429-429"];
m5_2227 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m5_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2534-2534"];
m5_1162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2536-2536"];
m5_1163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="values.Add(-5, 6)", span="2537-2537"];
m5_1164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="values.Add(int.MinValue, int.MaxValue)", span="2538-2538"];
m5_1165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(values)", span="2540-2540"];
m5_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="CollectionAssert.AreEqual(values, newValues)", span="2546-2546"];
m5_1166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2542-2542"];
m5_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2544-2544"];
m5_1169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2534-2534"];
m5_2453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5523-5523"];
m5_2454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="return objectType == typeof(PosDouble);", span="5525-5525"];
m5_2455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5523-5523"];
m5_2553 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonWriter.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m5_3571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="8084-8084"];
m5_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="477-477"];
m5_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new Binding_DisallowNull()); }, ''Cannot write a null value for property 'RequiredProperty'. Property requires a non-null value. Path ''.'')", span="479-479"];
m5_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="477-477"];
m5_4033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="9280-9280"];
m5_4034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var consoleWriter = new ConsoleWriter()", span="9282-9282"];
m5_4035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="9285-9289"];
m5_4036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="9295-9295"];
m5_4041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="dict2.Add(consoleWriter, ''Console'')", span="9306-9306"];
m5_4047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="dict3.Add(''Console'', consoleWriter)", span="9321-9321"];
m5_4038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="9298-9298"];
m5_4042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="9308-9308"];
m5_4044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="9313-9313"];
m5_4048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="9323-9323"];
m5_4050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="9328-9328"];
m5_4037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="9296-9296"];
m5_4039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="9299-9299"];
m5_4040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var dict2 = new Dictionary<IMyInterface, string>()", span="9305-9305"];
m5_4043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="9309-9311"];
m5_4045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="9314-9314"];
m5_4046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="var dict3 = new Dictionary<string, IMyInterface>()", span="9320-9320"];
m5_4049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="9324-9326"];
m5_4051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="9329-9329"];
m5_4052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="9280-9280"];
m5_2005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4339-4339"];
m5_2006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="4341-4341"];
m5_2007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="4342-4342"];
m5_2013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="4350-4350"];
m5_2008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4344-4344"];
m5_2009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="wagePerson.Department = ''McDees''", span="4345-4345"];
m5_2010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="wagePerson.HourlyWage = 12.50m", span="4346-4346"];
m5_2011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4347-4347"];
m5_2012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="wagePerson.Name = ''Jim Bob''", span="4348-4348"];
m5_2016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="4363-4363"];
m5_2014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="4351-4360"];
m5_2015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="4362-4362"];
m5_2017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4339-4339"];
m5_1581 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29"];
m5_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2978-2978"];
m5_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2980-2984"];
m5_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2978-2978"];
m5_2070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4528-4528"];
m5_2071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonWriter.cs", label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4530-4530"];
m5_2072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4532-4536"];
m5_2073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4528-4528"];
m5_4271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9819-9819"];
m5_4272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="9821-9821"];
m5_4273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9819-9819"];
m5_1077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2388-2388"];
m5_1078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonWriter.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2390-2399"];
m5_1079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonWriter.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2401-2401"];
m5_1080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonWriter.cs", label="Assert.AreEqual(4, o.Children().Count())", span="2402-2402"];
m5_1081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonWriter.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="2404-2404"];
m5_1082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonWriter.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2405-2405"];
m5_1083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonWriter.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2406-2406"];
m5_1084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2388-2388"];
m5_3768 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="681-681"];
m5_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1115-1115"];
m5_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonWriter.cs", label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="1117-1122"];
m5_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(input)", span="1124-1124"];
m5_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonWriter.cs", label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="1127-1127"];
m5_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonWriter.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1128-1128"];
m5_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonWriter.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1129-1129"];
m5_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonWriter.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="1125-1125"];
m5_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1115-1115"];
m5_2180 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonWriter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m5_2757 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="10088-10088"];
m5_4380 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonWriter.cs", label="Value = val", span="10090-10090"];
m5_4381 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="10088-10088"];
m5_1623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3459-3459"];
m5_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3461-3461"];
m5_1625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="i.SuperProp = ''overrided superprop''", span="3462-3462"];
m5_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3464-3467"];
m5_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3469-3469"];
m5_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3471-3474"];
m5_1629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3476-3479"];
m5_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3480-3480"];
m5_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3459-3459"];
m5_2231 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m5_3718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8433-8433"];
m5_3719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonWriter.cs", label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="8435-8437"];
m5_3720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonWriter.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="8439-8439"];
m5_3721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonWriter.cs", label="BigInteger nineQuindecillion = l[0]", span="8441-8441"];
m5_3722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonWriter.cs", label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="8444-8444"];
m5_3723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8433-8433"];
m5_3989 [cluster="string.Trim()", file="JsonWriter.cs", label="Entry string.Trim()", span="0-0"];
m5_3218 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="558-558"];
m5_3319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7520-7520"];
m5_3320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonWriter.cs", label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="7522-7523"];
m5_3321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonWriter.cs", label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="7525-7525"];
m5_3322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonWriter.cs", label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="7526-7526"];
m5_3323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7520-7520"];
m5_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="300-300"];
m5_84 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['pie']''),\r\n                @''Could not convert string to boolean: pie. Path '[0]', line 1, position 6.'')", span="302-304"];
m5_85 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="300-300"];
m5_3464 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28"];
m5_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1202-1202"];
m5_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1204-1204"];
m5_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1206-1206"];
m5_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.Binder = customBinder", span="1208-1208"];
m5_492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(customBinder, serializer.Binder)", span="1209-1209"];
m5_493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.IsInstanceOf(typeof(SerializationBinderAdapter), serializer.SerializationBinder)", span="1212-1212"];
m5_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.SerializationBinder = customBinder", span="1214-1214"];
m5_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(customBinder, serializer.SerializationBinder)", span="1215-1215"];
m5_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="ExceptionAssert.Throws<InvalidOperationException>(() =>\r\n            {\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                var serializationBinder = serializer.Binder;\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                serializationBinder.ToString();\r\n            }, ''Cannot get SerializationBinder because an ISerializationBinder was previously set.'')", span="1217-1223"];
m5_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.CheckAdditionalContent = true", span="1225-1225"];
m5_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="1226-1226"];
m5_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1228-1228"];
m5_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="1229-1229"];
m5_501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="1232-1232"];
m5_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="1233-1233"];
m5_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.ContractResolver = resolver", span="1237-1237"];
m5_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="1238-1238"];
m5_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="1240-1240"];
m5_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(1, serializer.Converters.Count)", span="1241-1241"];
m5_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.Culture = new CultureInfo(''en-nz'')", span="1243-1243"];
m5_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1244-1244"];
m5_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="1246-1246"];
m5_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1247-1247"];
m5_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1249-1249"];
m5_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="1250-1250"];
m5_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.DateFormatString = ''yyyy''", span="1252-1252"];
m5_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="1253-1253"];
m5_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="1255-1255"];
m5_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1256-1256"];
m5_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1258-1258"];
m5_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1259-1259"];
m5_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1261-1261"];
m5_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1262-1262"];
m5_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1264-1264"];
m5_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1265-1265"];
m5_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1267-1267"];
m5_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1268-1268"];
m5_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.Formatting = Formatting.Indented", span="1270-1270"];
m5_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1271-1271"];
m5_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.MaxDepth = 9001", span="1273-1273"];
m5_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1274-1274"];
m5_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1276-1276"];
m5_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1277-1277"];
m5_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1279-1279"];
m5_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1280-1280"];
m5_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1282-1282"];
m5_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1283-1283"];
m5_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1285-1285"];
m5_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1286-1286"];
m5_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1288-1288"];
m5_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="1289-1289"];
m5_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.ReferenceResolver = referenceResolver", span="1292-1292"];
m5_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1293-1293"];
m5_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1295-1295"];
m5_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1296-1296"];
m5_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.TraceWriter = traceWriter", span="1299-1299"];
m5_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1300-1300"];
m5_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1304-1304"];
m5_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1305-1305"];
m5_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializer.TypeNameAssemblyFormatHandling)", span="1308-1308"];
m5_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1310-1310"];
m5_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, serializer.TypeNameAssemblyFormat)", span="1312-1312"];
m5_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1316-1316"];
m5_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializer.TypeNameAssemblyFormatHandling)", span="1317-1317"];
m5_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="1319-1319"];
m5_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1320-1320"];
m5_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1236-1236"];
m5_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1291-1291"];
m5_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1298-1298"];
m5_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1202-1202"];
m5_748 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m5_2741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6165-6165"];
m5_2742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonWriter.cs", label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="6167-6171"];
m5_2743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="6173-6173"];
m5_2746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonWriter.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="6178-6178"];
m5_2744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonWriter.cs", label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="6175-6175"];
m5_2745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonWriter.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="6177-6177"];
m5_2747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6165-6165"];
m5_2788 [cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="10191-10191"];
m5_2714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6083-6083"];
m5_2715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_name = info.GetString(''Name'')", span="6085-6085"];
m5_2716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6083-6083"];
m5_1986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4238-4238"];
m5_1987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonWriter.cs", label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 2\r\n}''", span="4242-4246"];
m5_1988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonWriter.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="4248-4248"];
m5_1989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonWriter.cs", label="Assert.Fail()", span="4249-4249"];
m5_1990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonWriter.cs", label=JsonSerializationException, span="4251-4251"];
m5_1991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonWriter.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Organization.Person']'''))", span="4253-4253"];
m5_1992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4238-4238"];
m5_3784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8626-8626"];
m5_3785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonWriter.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8628-8632"];
m5_3786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="8634-8637"];
m5_3787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8639-8642"];
m5_3788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8626-8626"];
m5_2762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6199-6199"];
m5_2763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonWriter.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="6201-6201"];
m5_2764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonWriter.cs", label="Assert.AreEqual(''Public Parameterized'', c.Constructor)", span="6202-6202"];
m5_2765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonWriter.cs", label="Assert.AreEqual(''value!'', c.Value)", span="6203-6203"];
m5_2766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6199-6199"];
m5_4092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9395-9395"];
m5_4093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9397-9397"];
m5_4094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9395-9395"];
m5_4281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9837-9837"];
m5_4282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="9839-9839"];
m5_4283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9837-9837"];
m5_1112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2442-2442"];
m5_1113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonWriter.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="2444-2444"];
m5_1114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonWriter.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2446-2446"];
m5_1115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonWriter.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2447-2447"];
m5_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonWriter.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2449-2449"];
m5_1118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonWriter.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2452-2452"];
m5_1117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonWriter.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2451-2451"];
m5_1119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2442-2442"];
m5_1200 [cluster="object.Object()", file="JsonWriter.cs", label="Entry object.Object()", span="0-0"];
m5_4065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="9349-9349"];
m5_4066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonWriter.cs", label="return TypeCode.Object;", span="9351-9351"];
m5_4067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="9349-9349"];
m5_2233 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m5_2435 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="891-891"];
m5_2865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6516-6516"];
m5_2866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonWriter.cs", label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6518-6522"];
m5_2867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonWriter.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6524-6524"];
m5_2868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6526-6529"];
m5_2869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6516-6516"];
m5_3680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8324-8324"];
m5_3681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="writer.WriteValue(''X'')", span="8326-8326"];
m5_3682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8324-8324"];
m5_3060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6974-6974"];
m5_3061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6976-6976"];
m5_3062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6978-6981"];
m5_3065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6984-6987"];
m5_3067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6995-7003"];
m5_3063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="StaticTestClass.y = 2", span="6982-6982"];
m5_3064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="StaticTestClass.z = 3", span="6983-6983"];
m5_3066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6989-6993"];
m5_3068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="Assert.AreEqual(-1, c2.x)", span="7005-7005"];
m5_3069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="7006-7006"];
m5_3070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="7007-7007"];
m5_3071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6974-6974"];
m5_3964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9140-9140"];
m5_3965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="return base.CanConvertTo(context, destinationType);", span="9142-9142"];
m5_3966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9140-9140"];
m5_16 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m5_141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="411-411"];
m5_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonWriter.cs", label="Bars = new List<string>()", span="413-413"];
m5_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonWriter.cs", label="bars != null", span="414-414"];
m5_145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonWriter.cs", label="Bars.AddRange(bars)", span="416-416"];
m5_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="411-411"];
m5_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1890-1890"];
m5_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonWriter.cs", label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1892-1897"];
m5_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonWriter.cs", label="string result = JsonConvert.SerializeObject(cc)", span="1899-1899"];
m5_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1900-1900"];
m5_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1890-1890"];
m5_1009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2200-2200"];
m5_1010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="2202-2202"];
m5_1011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="2203-2203"];
m5_1012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="testDictionary[''date''] = dateValue", span="2204-2204"];
m5_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="2220-2220"];
m5_1013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="2206-2206"];
m5_1016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="serializer.WriteObject(ms, testDictionary)", span="2211-2211"];
m5_1014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="MemoryStream ms = new MemoryStream()", span="2209-2209"];
m5_1019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="2217-2217"];
m5_1015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="2210-2210"];
m5_1017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="byte[] data = ms.ToArray()", span="2213-2213"];
m5_1018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="2214-2214"];
m5_1020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="2218-2218"];
m5_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2200-2200"];
m5_4248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", span="9749-9749"];
m5_2166 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonWriter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m5_2913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6637-6637"];
m5_2914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="6639-6639"];
m5_2915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6637-6637"];
m5_1038 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="306-306"];
m5_1037 [cluster="Unk.AreNotSame", file="JsonWriter.cs", label="Entry Unk.AreNotSame", span=""];
m5_2185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4874-4874"];
m5_2186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonWriter.cs", label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4876-4876"];
m5_2187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4874-4874"];
m5_189 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
m5_763 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m5_1711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3693-3693"];
m5_1712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3695-3712"];
m5_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3714-3715"];
m5_1714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3717-3717"];
m5_1715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="3718-3718"];
m5_1716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3719-3719"];
m5_1717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3720-3720"];
m5_1718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="3721-3721"];
m5_1719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3722-3722"];
m5_1720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3723-3723"];
m5_1721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3724-3724"];
m5_1722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3725-3725"];
m5_1723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Assert.IsNotNull(c.Random)", span="3726-3726"];
m5_1724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3693-3693"];
m5_2257 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m5_4249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9767-9767"];
m5_4250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonWriter.cs", label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="9769-9769"];
m5_4251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonWriter.cs", label="var serializerSettings = new JsonSerializerSettings()", span="9771-9771"];
m5_4252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonWriter.cs", label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="9772-9772"];
m5_4253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonWriter.cs", label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="9774-9774"];
m5_4254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="9776-9776"];
m5_4255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="9777-9777"];
m5_4256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9767-9767"];
m5_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="3007-3007"];
m5_1430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonWriter.cs", label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="3009-3014"];
m5_1431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonWriter.cs", label="string json", span="3016-3016"];
m5_1432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="3018-3018"];
m5_1433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="3019-3019"];
m5_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="3007-3007"];
m5_1135 [cluster="Unk.>", file="JsonWriter.cs", label="Entry Unk.>", span=""];
m5_3707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8401-8401"];
m5_3708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonWriter.cs", label="m_Item1 = item1", span="8403-8403"];
m5_3709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8401-8401"];
m5_937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="2069-2069"];
m5_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2071-2077"];
m5_939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="2079-2079"];
m5_940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="baseWith.Virtual = ''Virtual2!''", span="2080-2080"];
m5_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2081-2081"];
m5_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="2082-2082"];
m5_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2084-2084"];
m5_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="2086-2092"];
m5_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="2069-2069"];
m5_2443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5504-5504"];
m5_2444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="PosDouble p = (PosDouble)value", span="5506-5506"];
m5_2446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="5510-5510"];
m5_2447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="writer.WriteNull()", span="5514-5514"];
m5_2445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="p != null", span="5508-5508"];
m5_2448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5504-5504"];
m5_2159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4836-4836"];
m5_2160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonWriter.cs", label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4838-4838"];
m5_2161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4836-4836"];
m5_4263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9805-9805"];
m5_4264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9805-9805"];
m5_4325 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1932-1932"];
m5_56 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.ClassWithImplicitOperator()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.ClassWithImplicitOperator()", span="244-244"];
m5_1643 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m5_3572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="8100-8100"];
m5_3573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonWriter.cs", label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="8102-8108"];
m5_3574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="8116-8116"];
m5_3575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="8117-8120"];
m5_3576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonWriter.cs", label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="8122-8128"];
m5_3577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="8130-8130"];
m5_3578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="8131-8134"];
m5_3579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="8100-8100"];
m5_4349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="10007-10007"];
m5_4350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="var encodingName = serializer.Deserialize<string>(reader)", span="10009-10009"];
m5_4351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="encodingName == null", span="10010-10010"];
m5_4353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="return Encoding.GetEncoding(encodingName);", span="10015-10015"];
m5_4352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="return null;", span="10012-10012"];
m5_4354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="10007-10007"];
m5_927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="2039-2039"];
m5_928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2041-2047"];
m5_929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="2049-2049"];
m5_930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="baseWith.Virtual = ''Virtual2!''", span="2050-2050"];
m5_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2051-2051"];
m5_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="2052-2052"];
m5_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2054-2054"];
m5_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="2056-2065"];
m5_935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="2039-2039"];
m5_2517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5638-5638"];
m5_2518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonWriter.cs", label="return Value;", span="5640-5640"];
m5_2519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5638-5638"];
m5_2606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5846-5846"];
m5_2607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonWriter.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5848-5848"];
m5_2608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5849-5849"];
m5_2609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5846-5846"];
m5_2812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6319-6319"];
m5_2813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonWriter.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="6321-6330"];
m5_2814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonWriter.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="6332-6332"];
m5_2815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonWriter.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="6334-6334"];
m5_2816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonWriter.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="6335-6335"];
m5_2817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonWriter.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="6336-6336"];
m5_2818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6319-6319"];
m5_2364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5312-5312"];
m5_2365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5312-5312"];
m5_1788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3884-3884"];
m5_1789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonWriter.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="3886-3886"];
m5_1790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonWriter.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3888-3888"];
m5_1791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="3889-3889"];
m5_1792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3884-3884"];
m5_814 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="442-442"];
m5_3017 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886"];
m5_3822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8724-8724"];
m5_3823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8724-8724"];
m5_562 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonWriter.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m5_3683 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929"];
m5_1149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2503-2503"];
m5_1150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonWriter.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2505-2511"];
m5_1151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonWriter.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="2513-2513"];
m5_1152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonWriter.cs", label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2514-2514"];
m5_1153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2503-2503"];
m5_209 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonWriter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_2767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6207-6207"];
m5_2768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonWriter.cs", label="MultipleParametrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="6209-6209"];
m5_2769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonWriter.cs", label="Assert.AreEqual(''Public Parameterized 2'', c.Constructor)", span="6210-6210"];
m5_2770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonWriter.cs", label="Assert.AreEqual(''value!'', c.Value)", span="6211-6211"];
m5_2771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonWriter.cs", label="Assert.AreEqual(1, c.Age)", span="6212-6212"];
m5_2772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6207-6207"];
m5_3291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7477-7477"];
m5_3292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="7479-7479"];
m5_3293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7477-7477"];
m5_3548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="8026-8026"];
m5_3555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonWriter.cs", label="var jsonReader = new JsonTextReader(new StringReader(json))", span="8029-8029"];
m5_3556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonWriter.cs", label="var serializer = new JsonSerializer()", span="8030-8030"];
m5_3558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonWriter.cs", label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="8036-8036"];
m5_3557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonWriter.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="8031-8034"];
m5_3559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="8026-8026"];
m5_24 [cluster="Unk.AreEqual", file="JsonWriter.cs", label="Entry Unk.AreEqual", span=""];
m5_3243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7389-7389"];
m5_3244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="7391-7395"];
m5_3245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="7397-7397"];
m5_3246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7399-7399"];
m5_3247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="Assert.AreEqual(null, e.NullableEnum)", span="7401-7401"];
m5_3248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="7403-7407"];
m5_3249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="7409-7409"];
m5_3250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7411-7411"];
m5_3251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="7413-7413"];
m5_3252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7389-7389"];
m5_3056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6967-6967"];
m5_3057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonWriter.cs", label="return new ReflectionValueProvider(member);", span="6969-6969"];
m5_3058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6967-6967"];
m5_1156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2518-2518"];
m5_1157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonWriter.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2520-2526"];
m5_1158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonWriter.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2528-2528"];
m5_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2529-2529"];
m5_1160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2518-2518"];
m5_3055 [cluster="Unk.AreEquivalent", file="JsonWriter.cs", label="Entry Unk.AreEquivalent", span=""];
m5_4057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9334-9334"];
m5_4058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonWriter.cs", label="ParticipantEntity product = new ParticipantEntity()", span="9336-9336"];
m5_4059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonWriter.cs", label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="9337-9337"];
m5_4060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(product)", span="9338-9338"];
m5_4061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="9340-9340"];
m5_4062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonWriter.cs", label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="9341-9341"];
m5_4063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9334-9334"];
m5_2363 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonWriter.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m5_843 [cluster="Unk.IsNotNull", file="JsonWriter.cs", label="Entry Unk.IsNotNull", span=""];
m5_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2741-2741"];
m5_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonWriter.cs", label="var obj = new { Formatting = ''test'' }", span="2743-2743"];
m5_1273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2745-2745"];
m5_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonWriter.cs", label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2746-2746"];
m5_1275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonWriter.cs", label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2748-2748"];
m5_1276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonWriter.cs", label="Assert.AreNotEqual(indented, none)", span="2749-2749"];
m5_1277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2741-2741"];
m5_3420 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442"];
m5_3902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8912-8912"];
m5_3903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonWriter.cs", label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8914-8921"];
m5_3904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8923-8930"];
m5_3905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8912-8912"];
m5_335 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonWriter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m5_1097 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m5_3190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7288-7288"];
m5_3191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="7290-7296"];
m5_3192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7288-7288"];
m5_2796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6269-6269"];
m5_2797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="6271-6271"];
m5_2798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6269-6269"];
m5_2189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4881-4881"];
m5_2190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4883-4883"];
m5_2191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="4884-4884"];
m5_2192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4886-4886"];
m5_2193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4888-4888"];
m5_2194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4890-4890"];
m5_2195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4891-4891"];
m5_2196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4892-4892"];
m5_2197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4881-4881"];
m5_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", span="227-227"];
m5_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonWriter.cs", label="string deserialized = @''{\r\n  ''''Enumerable'''': [ ''''abc'''', ''''def'''' ] \r\n}''", span="229-231"];
m5_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonWriter.cs", label="var enumerableClass = JsonConvert.DeserializeObject<GenericIEnumerableWithImplicitConversion>(deserialized)", span="232-232"];
m5_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonWriter.cs", label="var enumerableObject = enumerableClass.Enumerable.ToArray()", span="233-233"];
m5_47 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonWriter.cs", label="Assert.AreEqual(2, enumerableObject.Length)", span="234-234"];
m5_48 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonWriter.cs", label="Assert.AreEqual(''abc'', enumerableObject[0].Value)", span="235-235"];
m5_49 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonWriter.cs", label="Assert.AreEqual(''def'', enumerableObject[1].Value)", span="236-236"];
m5_50 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", span="227-227"];
m5_4348 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonWriter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m5_4257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9782-9782"];
m5_4258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonWriter.cs", label="DerivedProperty = derivedProperty", span="9785-9785"];
m5_4259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9782-9782"];
m5_2362 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m5_3422 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2096-2096"];
m5_3684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8329-8329"];
m5_3685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="return ''X'';", span="8331-8331"];
m5_3686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8329-8329"];
m5_1307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2783-2783"];
m5_2843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6431-6431"];
m5_2844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonWriter.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6433-6437"];
m5_2845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonWriter.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="6439-6439"];
m5_2847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonWriter.cs", label="serializer.WriteObject(ms, cc)", span="6442-6442"];
m5_2846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonWriter.cs", label="MemoryStream ms = new MemoryStream()", span="6441-6441"];
m5_2848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonWriter.cs", label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="6444-6444"];
m5_2849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonWriter.cs", label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="6446-6446"];
m5_2850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6431-6431"];
m5_2852 [cluster="System.Convert.ToInt32(long)", file="JsonWriter.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m5_1306 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonWriter.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m5_2853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6473-6473"];
m5_2854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonWriter.cs", label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6475-6479"];
m5_2855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonWriter.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6481-6481"];
m5_2856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6482-6482"];
m5_2857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6473-6473"];
m5_4164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9533-9533"];
m5_4165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="9535-9535"];
m5_4166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9537-9537"];
m5_4168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9539-9543"];
m5_4173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9553-9557"];
m5_4178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9564-9568"];
m5_4167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9538-9538"];
m5_4169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9545-9545"];
m5_4172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Assert.AreEqual(dt, dt1)", span="9551-9551"];
m5_4177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9562-9562"];
m5_4171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9549-9549"];
m5_4170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="9547-9547"];
m5_4174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9558-9558"];
m5_4175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9560-9560"];
m5_4176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9561-9561"];
m5_4179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="9569-9569"];
m5_4180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="9571-9571"];
m5_4181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9572-9572"];
m5_4182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="9573-9573"];
m5_4183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9533-9533"];
m5_4300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9878-9878"];
m5_4301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonWriter.cs", label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9880-9918"];
m5_4302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="9920-9928"];
m5_4303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9878-9878"];
m5_792 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301"];
m5_1928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4130-4130"];
m5_1929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonWriter.cs", label="List<String> strings = new List<String>()", span="4132-4132"];
m5_1930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonWriter.cs", label="strings.Add(''str_1'')", span="4134-4134"];
m5_1931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonWriter.cs", label="strings.Add(''str_2'')", span="4135-4135"];
m5_1932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonWriter.cs", label="strings.Add(''str_3'')", span="4136-4136"];
m5_1933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(strings)", span="4138-4138"];
m5_1934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonWriter.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="4139-4139"];
m5_1935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4130-4130"];
m5_1937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4143-4143"];
m5_1938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonWriter.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="4145-4145"];
m5_1939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="4146-4146"];
m5_1940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="4147-4150"];
m5_1941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonWriter.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="4152-4152"];
m5_1942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonWriter.cs", label="Assert.AreEqual(''String!'', c2.A)", span="4153-4153"];
m5_1943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonWriter.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="4154-4154"];
m5_1944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4143-4143"];
m5_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="196-196"];
m5_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonWriter.cs", label="var mySubclass = MyFactory.InstantiateSubclass()", span="198-198"];
m5_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonWriter.cs", label="var myMainClass = MyFactory.InstantiateManiClass()", span="199-199"];
m5_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonWriter.cs", label="var strJsonSubclass = JsonConvert.SerializeObject(mySubclass, Formatting.Indented)", span="202-202"];
m5_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonWriter.cs", label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="212-212"];
m5_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="204-209"];
m5_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="214-223"];
m5_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="196-196"];
m5_386 [cluster="System.IO.StringReader.StringReader(string)", file="JsonWriter.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m5_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="828-828"];
m5_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", span="164-164"];
m5_3254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7417-7417"];
m5_3255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="7419-7419"];
m5_3256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="7421-7421"];
m5_3257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonWriter.cs", label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="7423-7423"];
m5_3258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonWriter.cs", label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="7425-7425"];
m5_3259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7417-7417"];
m5_3469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7820-7820"];
m5_3470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonWriter.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7822-7831"];
m5_3471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonWriter.cs", label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7833-7833"];
m5_3472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonWriter.cs", label="Assert.IsNotNull(c2)", span="7835-7835"];
m5_3473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonWriter.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="7836-7836"];
m5_3474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonWriter.cs", label="Assert.AreEqual(''one'', c2.Data[0])", span="7837-7837"];
m5_3475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonWriter.cs", label="Assert.AreEqual(''two'', c2.Data[1])", span="7838-7838"];
m5_3476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7820-7820"];
m5_3324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7531-7531"];
m5_3325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7533-7539"];
m5_3326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7541-7541"];
m5_3327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7542-7542"];
m5_3328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7543-7543"];
m5_3329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7544-7544"];
m5_3330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7546-7552"];
m5_3331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="7554-7554"];
m5_3332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="7555-7555"];
m5_3333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7556-7556"];
m5_3334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7557-7557"];
m5_3335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7531-7531"];
m5_306 [cluster="System.Version.Version(int, int, int, int)", file="JsonWriter.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m5_1308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2803-2803"];
m5_1309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2805-2805"];
m5_1310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2807-2807"];
m5_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonWriter.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2809-2809"];
m5_1312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonWriter.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2811-2811"];
m5_1313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonWriter.cs", label="Assert.AreEqual(99, c.Field)", span="2812-2812"];
m5_1314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2803-2803"];
m5_2605 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonWriter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m5_2925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6669-6669"];
m5_2926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6671-6676"];
m5_2927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6678-6681"];
m5_2928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonWriter.cs", label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6683-6687"];
m5_2929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6689-6692"];
m5_2930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6669-6669"];
m5_23 [cluster="System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", file="JsonWriter.cs", label="Entry System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m5_4400 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="10171-10171"];
m5_4401 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonWriter.cs", label="Value = value", span="10173-10173"];
m5_4402 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonWriter.cs", label="Age = age", span="10174-10174"];
m5_4403 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonWriter.cs", label="Constructor = ''Public Parameterized 2''", span="10175-10175"];
m5_4404 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="10171-10171"];
m5_2819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6341-6341"];
m5_2820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonWriter.cs", label="this.A = A", span="6343-6343"];
m5_2821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonWriter.cs", label="B = 2", span="6344-6344"];
m5_2822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6341-6341"];
m5_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="392-392"];
m5_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="394-394"];
m5_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(foo1)", span="395-395"];
m5_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="400-400"];
m5_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="401-401"];
m5_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="402-402"];
m5_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="403-403"];
m5_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="397-397"];
m5_135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="399-399"];
m5_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="392-392"];
m5_1883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="4037-4037"];
m5_1884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonWriter.cs", label="string json = @''[]''", span="4039-4039"];
m5_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '', line 1, position 1.'')", span="4041-4041"];
m5_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="4037-4037"];
m5_3224 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1343-1343"];
m5_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="779-779"];
m5_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonWriter.cs", label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="781-781"];
m5_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonWriter.cs", label="c.UpdatedBy_Id = Guid.NewGuid()", span="782-782"];
m5_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c)", span="784-784"];
m5_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonWriter.cs", label="Assert.AreEqual(''{}'', json)", span="786-786"];
m5_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonWriter.cs", label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="788-788"];
m5_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonWriter.cs", label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="790-790"];
m5_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="779-779"];
m5_2259 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m5_3501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7911-7911"];
m5_3502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7913-7917"];
m5_3503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7919-7919"];
m5_3504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7921-7924"];
m5_3505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7926-7926"];
m5_3506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7928-7928"];
m5_3507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7929-7929"];
m5_3508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7930-7930"];
m5_3509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7911-7911"];
m5_1781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3871-3871"];
m5_1782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonWriter.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3873-3873"];
m5_1783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonWriter.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3875-3875"];
m5_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(2, values.Count)", span="3877-3877"];
m5_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="3878-3878"];
m5_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonWriter.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="3879-3879"];
m5_1787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3871-3871"];
m5_2041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4449-4449"];
m5_2042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonWriter.cs", label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="4451-4451"];
m5_2043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4449-4449"];
m5_3988 [cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
m5_3015 [cluster="System.IO.StringWriter.StringWriter()", file="JsonWriter.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_4375 [cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", span="10058-10058"];
m5_4376 [cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonWriter.cs", label="return MyProperty;", span="10060-10060"];
m5_4377 [cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", span="10058-10058"];
m5_4145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9494-9494"];
m5_4146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9496-9496"];
m5_4147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9497-9497"];
m5_4149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9503-9503"];
m5_4152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(dt, dt1)", span="9509-9509"];
m5_4157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9519-9519"];
m5_4148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9498-9501"];
m5_4153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9511-9514"];
m5_4158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9521-9524"];
m5_4151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9507-9507"];
m5_4150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9505-9505"];
m5_4154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9515-9515"];
m5_4155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9517-9517"];
m5_4156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9518-9518"];
m5_4159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="9525-9525"];
m5_4160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="9527-9527"];
m5_4161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9528-9528"];
m5_4162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Assert.AreEqual(''abc'', v.Value)", span="9529-9529"];
m5_4163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9494-9494"];
m5_2668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5973-5973"];
m5_2669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonWriter.cs", label="string json = ''[123456789876543.21]''", span="5975-5975"];
m5_2670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonWriter.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5976-5976"];
m5_2671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonWriter.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="5977-5977"];
m5_2672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5973-5973"];
m5_4265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9809-9809"];
m5_4266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="9811-9811"];
m5_4267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9809-9809"];
m5_1809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3914-3914"];
m5_1810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonWriter.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3916-3916"];
m5_1811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonWriter.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3918-3918"];
m5_1812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3914-3914"];
m5_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2843-2843"];
m5_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonWriter.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2845-2845"];
m5_1335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2847-2847"];
m5_1336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonWriter.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2848-2848"];
m5_1337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonWriter.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2850-2850"];
m5_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonWriter.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2852-2852"];
m5_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2843-2843"];
m5_3749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8522-8522"];
m5_3750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonWriter.cs", label="var tuple = Tuple.Create(500)", span="8524-8524"];
m5_3751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8525-8528"];
m5_3752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8529-8529"];
m5_3753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonWriter.cs", label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8531-8534"];
m5_3754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Assert.AreEqual(500, obj.Item1)", span="8535-8535"];
m5_3755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8522-8522"];
m5_2266 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m5_1445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="3035-3035"];
m5_1446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="3037-3046"];
m5_1447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="3048-3048"];
m5_1448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="3050-3050"];
m5_1449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="3052-3052"];
m5_1450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="3054-3054"];
m5_1451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="3055-3055"];
m5_1452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="3056-3056"];
m5_1453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="3057-3057"];
m5_1454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="3058-3058"];
m5_1455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="3059-3059"];
m5_1456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="3060-3060"];
m5_1457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="3035-3035"];
m5_1315 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m5_3991 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="JsonWriter.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m5_1922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4113-4113"];
m5_1923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="4115-4126"];
m5_1924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4113-4113"];
m5_2944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6725-6725"];
m5_2945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonWriter.cs", label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6727-6727"];
m5_2946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6729-6729"];
m5_2947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6730-6734"];
m5_2948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonWriter.cs", label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6736-6736"];
m5_2949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonWriter.cs", label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6737-6737"];
m5_2950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6725-6725"];
m5_3813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8701-8701"];
m5_3814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="StringWriter sw = new StringWriter()", span="8703-8703"];
m5_3815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8704-8704"];
m5_3819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="string json = sw.ToString()", span="8715-8715"];
m5_3816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8706-8710"];
m5_3817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8711-8711"];
m5_3818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8713-8713"];
m5_3820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8717-8719"];
m5_3821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8701-8701"];
m5_190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="499-499"];
m5_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new DictionaryWithNoNull()); }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", span="501-501"];
m5_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="499-499"];
m5_2262 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m5_2628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5887-5887"];
m5_1869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="4011-4011"];
m5_1870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonWriter.cs", label="string json = @''[new Constructor(123)]''", span="4013-4013"];
m5_1871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '[0]', line 1, position 17.'')", span="4015-4015"];
m5_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="4011-4011"];
m5_1956 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m5_3336 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonWriter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m5_794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1705-1705"];
m5_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonWriter.cs", label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1707-1707"];
m5_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1709-1709"];
m5_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonWriter.cs", label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1711-1711"];
m5_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonWriter.cs", label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1713-1713"];
m5_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonWriter.cs", label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1714-1714"];
m5_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1705-1705"];
m5_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3592-3592"];
m5_1673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="OptInClass optInClass = new OptInClass()", span="3594-3594"];
m5_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="optInClass.Age = 26", span="3595-3595"];
m5_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="optInClass.Name = ''James NK''", span="3596-3596"];
m5_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="3597-3597"];
m5_1677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3599-3599"];
m5_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3601-3604"];
m5_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3606-3610"];
m5_1680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="3611-3611"];
m5_1681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3612-3612"];
m5_1682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3613-3613"];
m5_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3592-3592"];
m5_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="511-511"];
m5_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonWriter.cs", label="return propertyName.ToUpper(CultureInfo.InvariantCulture);", span="516-516"];
m5_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="511-511"];
m5_1121 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonWriter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m5_1559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="3296-3300"];
m5_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3294-3294"];
m5_1560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="3302-3302"];
m5_1561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="3305-3305"];
m5_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="3308-3308"];
m5_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="3311-3311"];
m5_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="3312-3312"];
m5_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="3313-3313"];
m5_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3294-3294"];
m5_1260 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m5_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2224-2224"];
m5_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="2226-2226"];
m5_1025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="executorObject.serverClassName = ''BanSubs''", span="2227-2227"];
m5_1026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="2228-2228"];
m5_1027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="2229-2229"];
m5_1028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="2231-2231"];
m5_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="2235-2235"];
m5_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="2233-2233"];
m5_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="2236-2236"];
m5_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="2237-2237"];
m5_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="2238-2238"];
m5_1034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="2239-2239"];
m5_1035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2224-2224"];
m5_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="422-422"];
m5_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="424-424"];
m5_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="422-422"];
m5_2229 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m5_2931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6609-6609"];
m5_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1775-1775"];
m5_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonWriter.cs", label="var json = @''{''''foo'''':''''value''''}''", span="1777-1777"];
m5_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonWriter.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1778-1778"];
m5_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonWriter.cs", label="Assert.AreEqual(''value'', deserialized.foo)", span="1779-1779"];
m5_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1775-1775"];
m5_962 [cluster="System.IO.MemoryStream.ToArray()", file="JsonWriter.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m5_2992 [cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29"];
m5_3376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7662-7662"];
m5_3377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Color color = (Color)value", span="7664-7664"];
m5_3379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7667-7667"];
m5_3378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7665-7665"];
m5_3380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7662-7662"];
m5_4116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9435-9435"];
m5_4117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9437-9437"];
m5_4118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9435-9435"];
m5_2236 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m5_319 [cluster="System.Guid.NewGuid()", file="JsonWriter.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m5_2586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5800-5800"];
m5_2587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonWriter.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5802-5805"];
m5_2588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5807-5807"];
m5_2589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5809-5811"];
m5_2590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonWriter.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5813-5813"];
m5_2591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonWriter.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5815-5815"];
m5_2592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5800-5800"];
m5_112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="352-352"];
m5_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="IList<bool?> l = JsonConvert.DeserializeObject<IList<bool?>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  '',\r\n  null\r\n]'')", span="354-370"];
m5_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="int i = 0", span="372-372"];
m5_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="373-373"];
m5_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(false, l[i++])", span="374-374"];
m5_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="375-375"];
m5_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(false, l[i++])", span="376-376"];
m5_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="377-377"];
m5_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="378-378"];
m5_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="379-379"];
m5_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="380-380"];
m5_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="381-381"];
m5_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="382-382"];
m5_125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="383-383"];
m5_126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(false, l[i++])", span="384-384"];
m5_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(false, l[i++])", span="385-385"];
m5_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(null, l[i++])", span="386-386"];
m5_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(null, l[i++])", span="387-387"];
m5_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="352-352"];
m5_982 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="692-692"];
m5_1594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3395-3395"];
m5_1595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3397-3397"];
m5_1596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="3399-3402"];
m5_1599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3406-3409"];
m5_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3403-3403"];
m5_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3404-3404"];
m5_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3410-3410"];
m5_1601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3411-3411"];
m5_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3395-3395"];
m5_2414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="5385-5385"];
m5_3948 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_2750 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133"];
m5_2802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6275-6275"];
m5_2803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonWriter.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="6277-6277"];
m5_2804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonWriter.cs", label="Assert.IsNull(dateTime)", span="6279-6279"];
m5_2805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6275-6275"];
m5_3567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="8091-8091"];
m5_3568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="8093-8093"];
m5_3569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{}'', json)", span="8094-8094"];
m5_3570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="8091-8091"];
m5_3104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="7089-7089"];
m5_3105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonWriter.cs", label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="7091-7091"];
m5_3106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(d1)", span="7093-7093"];
m5_3108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7097-7097"];
m5_3109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7098-7098"];
m5_3107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonWriter.cs", label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="7095-7095"];
m5_3110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="7089-7089"];
m5_3824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8730-8730"];
m5_3825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8732-8732"];
m5_3826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8730-8730"];
m5_715 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="239-239"];
m5_2232 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m5_3724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8449-8449"];
m5_3725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonWriter.cs", label="string json = @''[\r\n        900\r\n      ]''", span="8451-8453"];
m5_3726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonWriter.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="8455-8455"];
m5_3727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonWriter.cs", label="int i = l[0]", span="8457-8457"];
m5_3728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonWriter.cs", label="Assert.AreEqual(900, i)", span="8460-8460"];
m5_3729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8449-8449"];
m5_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1766-1766"];
m5_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonWriter.cs", label="var original = new Foo1 { foo = ''value'' }", span="1768-1768"];
m5_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(original)", span="1769-1769"];
m5_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonWriter.cs", label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1770-1770"];
m5_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonWriter.cs", label="Assert.AreEqual(expectedJson, json)", span="1771-1771"];
m5_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1766-1766"];
m5_2610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5853-5853"];
m5_2611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5855-5858"];
m5_2612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5860-5860"];
m5_2613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5862-5862"];
m5_2614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5864-5864"];
m5_2616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5867-5867"];
m5_2615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="5865-5865"];
m5_2617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5869-5869"];
m5_2618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5870-5870"];
m5_2619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5853-5853"];
m5_560 [cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0"];
m5_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1610-1610"];
m5_752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_serializationInfo == null", span="1612-1612"];
m5_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="return;", span="1614-1614"];
m5_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1617-1617"];
m5_755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1618-1618"];
m5_756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1619-1619"];
m5_757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1620-1620"];
m5_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1621-1621"];
m5_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1622-1622"];
m5_760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="_serializationInfo = null", span="1624-1624"];
m5_761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1610-1610"];
m5_1437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="3023-3023"];
m5_1438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonWriter.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="3025-3025"];
m5_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonWriter.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="3027-3027"];
m5_1440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonWriter.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="3029-3029"];
m5_1441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonWriter.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="3030-3030"];
m5_1442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonWriter.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="3031-3031"];
m5_1443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="3023-3023"];
m5_2158 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonWriter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_2329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5316-5316"];
m5_2366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="AA_field1 = f", span="5318-5318"];
m5_2367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="AA_field2 = f", span="5319-5319"];
m5_2368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="AA_property1 = f", span="5320-5320"];
m5_2369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="AA_property2 = f", span="5321-5321"];
m5_2370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="AA_property3 = f", span="5322-5322"];
m5_2371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="AA_property4 = f", span="5323-5323"];
m5_2372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="AA_property5 = f", span="5324-5324"];
m5_2373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="AA_property6 = f", span="5325-5325"];
m5_2374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5316-5316"];
m5_2533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5671-5671"];
m5_2534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonWriter.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5673-5673"];
m5_2535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5675-5679"];
m5_2536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5671-5671"];
m5_2651 [cluster="Unk.SerializeObject", file="JsonWriter.cs", label="Entry Unk.SerializeObject", span=""];
m5_3477 [cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29"];
m5_4342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9985-9985"];
m5_4343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="throw new NotImplementedException();", span="9987-9987"];
m5_4344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9985-9985"];
m5_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2816-2816"];
m5_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonWriter.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2818-2818"];
m5_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c)", span="2820-2820"];
m5_1319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonWriter.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2822-2822"];
m5_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonWriter.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="2824-2824"];
m5_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonWriter.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2825-2825"];
m5_1322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonWriter.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2826-2826"];
m5_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2816-2816"];
m5_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="317-317"];
m5_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="IList<bool> l = JsonConvert.DeserializeObject<IList<bool>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE'\r\n]'')", span="319-333"];
m5_97 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="int i = 0", span="335-335"];
m5_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="336-336"];
m5_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(false, l[i++])", span="337-337"];
m5_100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="338-338"];
m5_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(false, l[i++])", span="339-339"];
m5_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="340-340"];
m5_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="341-341"];
m5_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="342-342"];
m5_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="343-343"];
m5_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="344-344"];
m5_107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="345-345"];
m5_108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(true, l[i++])", span="346-346"];
m5_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(false, l[i++])", span="347-347"];
m5_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Assert.AreEqual(false, l[i++])", span="348-348"];
m5_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="317-317"];
m5_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1145-1145"];
m5_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonWriter.cs", label="string json = ''['1.2.3.4444444444444444444444']''", span="1147-1147"];
m5_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Version>>(json); }, @''Error converting value ''''1.2.3.4444444444444444444444'''' to type 'System.Version'. Path '[0]', line 1, position 31.'')", span="1149-1149"];
m5_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1145-1145"];
m5_2569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5757-5757"];
m5_2570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="string classRef = typeof(StringDictionary).FullName", span="5759-5759"];
m5_2571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5761-5769"];
m5_2579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="5785-5785"];
m5_2572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5771-5771"];
m5_2573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5774-5774"];
m5_2574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5776-5776"];
m5_2575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5778-5778"];
m5_2576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5779-5779"];
m5_2577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5780-5780"];
m5_2578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5781-5781"];
m5_2580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5757-5757"];
m5_2093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4630-4630"];
m5_2094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4632-4635"];
m5_2095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4637-4640"];
m5_2096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="c1.C2 = c2", span="4642-4642"];
m5_2097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="c2.C1 = c1", span="4643-4643"];
m5_2098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4645-4649"];
m5_2099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4651-4656"];
m5_2100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4658-4664"];
m5_2101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4666-4666"];
m5_2102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4667-4667"];
m5_2103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4668-4668"];
m5_2104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4669-4669"];
m5_2105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4630-4630"];
m5_3118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7120-7120"];
m5_3119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7122-7128"];
m5_3120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonWriter.cs", label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7129-7132"];
m5_3121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonWriter.cs", label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7134-7134"];
m5_3122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7120-7120"];
m5_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2762-2762"];
m5_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonWriter.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2764-2764"];
m5_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2766-2766"];
m5_1289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonWriter.cs", label="Assert.AreEqual(guid, c.GuidField)", span="2770-2770"];
m5_1287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2767-2767"];
m5_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonWriter.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2769-2769"];
m5_1290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2762-2762"];
m5_4309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="10000-10000"];
m5_2698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="6035-6035"];
m5_2699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonWriter.cs", label="IDoWork = doWork", span="6038-6038"];
m5_2700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="6035-6035"];
m5_3174 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27"];
m5_2864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="6466-6466"];
m5_3313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7508-7508"];
m5_3314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonWriter.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7510-7516"];
m5_3315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7508-7508"];
m5_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2600-2600"];
m5_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new object())", span="2602-2602"];
m5_1198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonWriter.cs", label="Assert.AreEqual(''{}'', json)", span="2603-2603"];
m5_1199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2600-2600"];
m5_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3572-3572"];
m5_2401 [cluster="Unk.Parse", file="JsonWriter.cs", label="Entry Unk.Parse", span=""];
m5_3654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", span="8287-8287"];
m5_3655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="string json = @''[{ ''''MyProperty'''':{''''Key'''':''''Value''''}} /*this is a comment */\r\n// this is also a comment\r\n,{}''", span="8289-8291"];
m5_3656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8293-8293"];
m5_3658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8295-8295"];
m5_3657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="serializer.CheckAdditionalContent = true", span="8294-8294"];
m5_3661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => serializer.Deserialize(reader, typeof(MyType)),\r\n                ''Additional text found in JSON string after finishing deserializing object. Path '[1]', line 3, position 2.'')", span="8299-8300"];
m5_3659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="reader.Read()", span="8296-8296"];
m5_3660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="reader.Read()", span="8297-8297"];
m5_3662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", span="8287-8287"];
m5_1351 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonWriter.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m5_2520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5643-5643"];
m5_2521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonWriter.cs", label="return new DictionaryKey() { Value = value };", span="5645-5645"];
m5_2522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5643-5643"];
m5_2837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6409-6409"];
m5_2838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonWriter.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6411-6415"];
m5_2839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonWriter.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6417-6417"];
m5_2840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="6424-6427"];
m5_2841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6409-6409"];
m5_2836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="6372-6372"];
m5_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3383-3383"];
m5_1592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonWriter.cs", label="TestProperty1 = testProperty1", span="3385-3385"];
m5_1593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3383-3383"];
m5_3053 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="400-400"];
m5_1765 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m5_29 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="184-184"];
m5_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonWriter.cs", label="return new MainClass\r\n                {\r\n                    ID = 567,\r\n                    Name = ''XYZ'',\r\n                    Subclass = InstantiateSubclass()\r\n                };", span="186-191"];
m5_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="184-184"];
m5_2129 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonWriter.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m5_2361 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonWriter.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m5_3059 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m5_3419 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="272-272"];
m5_1250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2678-2678"];
m5_1251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2680-2680"];
m5_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="string expected = null", span="2682-2682"];
m5_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="StringAssert.AreEqual(expected, json)", span="2718-2718"];
m5_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2720-2720"];
m5_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2684-2699"];
m5_1256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="Assert.AreEqual(''string'', c.String)", span="2721-2721"];
m5_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="2722-2722"];
m5_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2724-2724"];
m5_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2678-2678"];
m5_2557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5734-5734"];
m5_2558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="5736-5736"];
m5_2559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5737-5737"];
m5_2560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5738-5738"];
m5_2563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5744-5744"];
m5_2561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5740-5740"];
m5_2562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5742-5742"];
m5_2564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="Assert.AreEqual(2, z.Length)", span="5745-5745"];
m5_2565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5746-5746"];
m5_2566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5747-5747"];
m5_2567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5734-5734"];
m5_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3754-3754"];
m5_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3756-3766"];
m5_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="JObject o = JObject.Parse(json)", span="3768-3768"];
m5_1739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3770-3770"];
m5_1740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="Assert.IsNotNull(s)", span="3771-3771"];
m5_1741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3773-3773"];
m5_1742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3774-3774"];
m5_1743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3775-3775"];
m5_1744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3754-3754"];
m5_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="864-864"];
m5_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="FaqItemProxy c = new FaqItemProxy()", span="866-866"];
m5_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="c.FaqId = 1", span="867-867"];
m5_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="c.Sections.Add(new FaqSection())", span="868-868"];
m5_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="c.IsProxy = true", span="869-869"];
m5_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="871-871"];
m5_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="873-881"];
m5_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="883-883"];
m5_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="Assert.AreEqual(1, c2.FaqId)", span="885-885"];
m5_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="886-886"];
m5_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="864-864"];
m5_3086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="7049-7049"];
m5_3087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="7051-7051"];
m5_3088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="7055-7055"];
m5_3089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="Thread.CurrentThread.CurrentCulture = testCulture", span="7057-7057"];
m5_3090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="Thread.CurrentThread.CurrentUICulture = testCulture", span="7058-7058"];
m5_3091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="7060-7060"];
m5_3092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="7062-7062"];
m5_3093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="Assert.AreEqual(1.5m, c.Quantity)", span="7064-7064"];
m5_3094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="7065-7065"];
m5_3095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="7049-7049"];
m5_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3316-3316"];
m5_1569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="3318-3318"];
m5_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="3319-3324"];
m5_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="3325-3328"];
m5_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="3329-3332"];
m5_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3334-3334"];
m5_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="3357-3357"];
m5_1578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="3358-3358"];
m5_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="3359-3359"];
m5_1574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="3336-3352"];
m5_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="3354-3354"];
m5_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="Assert.IsNotNull(deserializedObject)", span="3355-3355"];
m5_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3316-3316"];
m5_3021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6915-6915"];
m5_3022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonWriter.cs", label="string input = ''http://test.com/%22foo+bar%22''", span="6917-6917"];
m5_3023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonWriter.cs", label="Uri uri = new Uri(input)", span="6918-6918"];
m5_3024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6919-6919"];
m5_3026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonWriter.cs", label="Assert.AreEqual(uri, output)", span="6922-6922"];
m5_3025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonWriter.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6920-6920"];
m5_3027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6915-6915"];
m5_3565 [cluster="Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", span="31-31"];
m5_4308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9965-9965"];
m5_4104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9415-9415"];
m5_4105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonWriter.cs", label="return (long)Value;", span="9417-9417"];
m5_4106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9415-9415"];
m5_2424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5469-5469"];
m5_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3539-3539"];
m5_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3541-3557"];
m5_1663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3559-3559"];
m5_1665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3562-3562"];
m5_1664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3560-3560"];
m5_1666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3563-3563"];
m5_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3564-3564"];
m5_1668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="3565-3565"];
m5_1669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3566-3566"];
m5_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3567-3567"];
m5_1671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3539-3539"];
m5_3963 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="0-0"];
m5_4359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", span="10026-10026"];
m5_4360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonWriter.cs", label="string s = @''{''''text'''':''''s'''',''''cursorPosition'''':189,''''dataSource'''':''''json_northwind'''',''", span="10028-10028"];
m5_4361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<CompletionDataRequest>(s), ''Unexpected end when deserializing object. Path 'dataSource', line 1, position 63.'')", span="10030-10030"];
m5_4362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", span="10026-10026"];
m5_2720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6123-6123"];
m5_2721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="6125-6125"];
m5_2722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="6126-6126"];
m5_2723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="6127-6127"];
m5_2727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="6134-6134"];
m5_2724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="6129-6129"];
m5_2725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="6130-6130"];
m5_2726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="barWithNull.Foo2 = null", span="6131-6131"];
m5_2731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="6140-6140"];
m5_2728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="6135-6135"];
m5_2729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6136-6136"];
m5_2730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="6137-6137"];
m5_2732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="deserialized = deserialize(s)", span="6141-6141"];
m5_2733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6142-6142"];
m5_2734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="6143-6143"];
m5_2735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6123-6123"];
m5_1478 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m5_3940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="9076-9076"];
m5_3941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n            )", span="9078-9080"];
m5_3942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="9082-9082"];
m5_3943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonWriter.cs", label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="9084-9084"];
m5_3944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonWriter.cs", label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="9086-9086"];
m5_3945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonWriter.cs", label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="9087-9087"];
m5_3946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="9076-9076"];
m5_1459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="3064-3064"];
m5_1460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonWriter.cs", label="string json = @''{''''Height'''':1}''", span="3066-3066"];
m5_1461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonWriter.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="3068-3068"];
m5_1462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonWriter.cs", label="Assert.AreEqual(1, c.Height)", span="3069-3069"];
m5_1463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="3064-3064"];
m5_3604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", span="8169-8169"];
m5_3605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonWriter.cs", label="string json = @''{one:1} // This is just a comment\r\n/* This is just a comment\r\nover multiple\r\nlines.*/\r\n\r\n// This is just another comment.''", span="8171-8176"];
m5_3606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings {CheckAdditionalContent = true}", span="8178-8178"];
m5_3608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonWriter.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8180-8180"];
m5_3607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonWriter.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8179-8179"];
m5_3609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonWriter.cs", label="Assert.IsNotNull(o)", span="8182-8182"];
m5_3610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonWriter.cs", label="Assert.AreEqual(1, o[''one''])", span="8183-8183"];
m5_3611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", span="8169-8169"];
m5_478 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="667-667"];
m5_479 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m5_3510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7934-7934"];
m5_3511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7936-7940"];
m5_3512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="7942-7945"];
m5_3513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="JObject o = JObject.Parse(json)", span="7947-7947"];
m5_3516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="7951-7954"];
m5_3514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", span="7948-7948"];
m5_3515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", span="7949-7949"];
m5_3517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7956-7956"];
m5_3518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7957-7957"];
m5_3519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7958-7958"];
m5_3520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7934-7934"];
m5_3745 [cluster="Unk.doStuff", file="JsonWriter.cs", label="Entry Unk.doStuff", span=""];
m5_2751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6182-6182"];
m5_2752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonWriter.cs", label="var data = new DecimalTest(decimal.MinValue)", span="6184-6184"];
m5_2753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(data)", span="6185-6185"];
m5_2754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonWriter.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="6186-6186"];
m5_2755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonWriter.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="6188-6188"];
m5_2756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6182-6182"];
m5_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="103-103"];
m5_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="var s = System.IO.File.OpenRead(''large.json'')", span="105-105"];
m5_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(s))", span="109-109"];
m5_11 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="Assert.IsTrue(s.Position > 0)", span="127-127"];
m5_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="s.Seek(0, SeekOrigin.Begin)", span="129-129"];
m5_13 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="Assert.AreEqual(0, s.Position)", span="131-131"];
m5_3 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="reader.SupportMultipleContent = true", span="111-111"];
m5_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="reader.CloseInput = false", span="112-112"];
m5_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="reader.Read()", span="115-115"];
m5_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="ser.Deserialize<IList<ErroringClass>>(reader)", span="120-120"];
m5_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="var ser = new JsonSerializer()", span="117-117"];
m5_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="ser.CheckAdditionalContent = false", span="118-118"];
m5_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="Assert.Fail()", span="123-123"];
m5_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label=Exception, span="125-125"];
m5_14 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="103-103"];
m5_2417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5445-5445"];
m5_2418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonWriter.cs", label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="5447-5451"];
m5_2419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="5453-5453"];
m5_2420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="5454-5454"];
m5_2421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5445-5445"];
m5_4287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9843-9843"];
m5_4288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="9845-9848"];
m5_4289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonWriter.cs", label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="9850-9850"];
m5_4290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonWriter.cs", label="Assert.AreEqual(''base'', d.BaseProperty)", span="9852-9852"];
m5_4291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonWriter.cs", label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="9853-9853"];
m5_4292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9843-9843"];
m5_2919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6657-6657"];
m5_2920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonWriter.cs", label="throw new NotImplementedException();", span="6659-6659"];
m5_2921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6657-6657"];
m5_3993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="9176-9176"];
m5_3994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="destinationType == null", span="9178-9178"];
m5_3996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="value is TypeConverterSize", span="9182-9182"];
m5_3997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="destinationType == typeof(string)", span="9184-9184"];
m5_3998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="TypeConverterSize size = (TypeConverterSize)value", span="9186-9186"];
m5_3999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="culture == null", span="9187-9187"];
m5_4004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="strArray[num++] = converter.ConvertToString(context, culture, size.Width)", span="9194-9194"];
m5_4005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="strArray[num++] = converter.ConvertToString(context, culture, size.Height)", span="9195-9195"];
m5_4007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="return base.ConvertTo(context, culture, value, destinationType);", span="9199-9199"];
m5_3995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="throw new ArgumentNullException(''destinationType'');", span="9180-9180"];
m5_4000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="culture = CultureInfo.CurrentCulture", span="9189-9189"];
m5_4001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="TypeConverter converter = TypeDescriptor.GetConverter(typeof(int))", span="9191-9191"];
m5_4002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="string[] strArray = new string[2]", span="9192-9192"];
m5_4003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="int num = 0", span="9193-9193"];
m5_4006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="return string.Join('', '', strArray);", span="9196-9196"];
m5_4008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="9176-9176"];
m5_2139 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonWriter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_3005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6896-6896"];
m5_3006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="object o = new { p = 1 }", span="6899-6899"];
m5_3007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="var json = JObject.FromObject(o)", span="6901-6901"];
m5_3008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="var sw = new StringWriter()", span="6903-6903"];
m5_3010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="jw.WriteToken(json.CreateReader())", span="6906-6906"];
m5_3009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="var jw = new JsonTextWriter(sw)", span="6904-6904"];
m5_3012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="string result = sw.ToString()", span="6909-6909"];
m5_3011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="jw.Flush()", span="6907-6907"];
m5_3013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6910-6910"];
m5_3014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6896-6896"];
m5_3381 [cluster="Unk.ToKnownColor", file="JsonWriter.cs", label="Entry Unk.ToKnownColor", span=""];
m5_4378 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="10084-10084"];
m5_4379 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="10084-10084"];
m5_2422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="5457-5457"];
m5_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m5_2554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5727-5727"];
m5_2555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonWriter.cs", label="Prop1 = new byte[0]", span="5729-5729"];
m5_2556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5727-5727"];
m5_4307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9931-9931"];
m5_3217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", span="7329-7329"];
m5_3219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", span="7329-7329"];
m5_3220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", span="7336-7336"];
m5_3221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonWriter.cs", label="base.WriteValue(value)", span="7338-7338"];
m5_3222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonWriter.cs", label="++NullableGuidCount", span="7339-7339"];
m5_3223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", span="7336-7336"];
m5_4240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="9710-9710"];
m5_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3621-3621"];
m5_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3621-3621"];
m5_2225 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m5_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1880-1880"];
m5_3124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7138-7138"];
m5_3125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ='''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7140-7147"];
m5_3126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                });\r\n            }, ''Error reading bytes. Unexpected token: PropertyName. Path 'EncryptedPassword.$value', line 6, position 13.'')", span="7149-7155"];
m5_3127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7138-7138"];
m5_4329 [cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonWriter.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0"];
m5_2176 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonWriter.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m5_2167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4846-4846"];
m5_2168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="dictionary == null", span="4848-4848"];
m5_2170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label=dictionary, span="4853-4853"];
m5_2169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="return;", span="4850-4850"];
m5_2171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="this[entry.Key] = entry.Value", span="4855-4855"];
m5_2172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4846-4846"];
m5_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="605-605"];
m5_2624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5896-5896"];
m5_2625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5898-5898"];
m5_2626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5900-5902"];
m5_2627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5896-5896"];
m5_1890 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="822-822"];
m5_2018 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.PersonPropertyClass.PersonPropertyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.PersonPropertyClass.PersonPropertyClass()", span="31-31"];
m5_4326 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="538-538"];
m5_1215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2628-2628"];
m5_1216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2630-2630"];
m5_1217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2631-2631"];
m5_1218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2632-2632"];
m5_1219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2634-2634"];
m5_1220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2635-2635"];
m5_1221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2636-2636"];
m5_1222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2637-2637"];
m5_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2638-2638"];
m5_1224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2628-2628"];
m5_1063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2289-2289"];
m5_1064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="2291-2291"];
m5_1065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="2293-2293"];
m5_1066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonWriter.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="2295-2295"];
m5_1067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonWriter.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2297-2297"];
m5_1068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonWriter.cs", label="Assert.AreEqual(99, c.Field)", span="2298-2298"];
m5_1069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2289-2289"];
m5_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="706-706"];
m5_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="Version v = new Version(1, 2, 3, 4)", span="708-708"];
m5_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="710-722"];
m5_300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="724-727"];
m5_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="729-731"];
m5_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="733-755"];
m5_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="757-760"];
m5_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="762-762"];
m5_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="706-706"];
m5_1753 [cluster="System.Uri.ToString()", file="JsonWriter.cs", label="Entry System.Uri.ToString()", span="0-0"];
m5_2537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5683-5683"];
m5_2538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonWriter.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5685-5689"];
m5_2539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonWriter.cs", label="Assert.AreEqual(3, d.Length)", span="5691-5691"];
m5_2540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonWriter.cs", label="Assert.AreEqual(2.4, d[0])", span="5692-5692"];
m5_2541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonWriter.cs", label="Assert.AreEqual(4.3, d[1])", span="5693-5693"];
m5_2542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonWriter.cs", label="Assert.AreEqual(null, d[2])", span="5694-5694"];
m5_2543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5683-5683"];
m5_851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1810-1810"];
m5_852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1812-1812"];
m5_853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1813-1813"];
m5_854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Assert.IsNotNull(deserialized.foo2)", span="1814-1814"];
m5_855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1815-1815"];
m5_856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Assert.IsNotNull(deserialized.foo)", span="1816-1816"];
m5_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1817-1817"];
m5_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1810-1810"];
m5_1123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2456-2456"];
m5_1124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2458-2458"];
m5_1125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2461-2461"];
m5_1126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2462-2462"];
m5_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2466-2466"];
m5_1129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2468-2468"];
m5_1127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2465-2465"];
m5_1132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2473-2473"];
m5_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2471-2471"];
m5_1130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2470-2470"];
m5_1133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2456-2456"];
m5_2593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5791-5791"];
m5_1725 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m5_20 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
m5_2736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="6102-6102"];
m5_4110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9425-9425"];
m5_4111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9427-9427"];
m5_4112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9425-9425"];
m5_21 [cluster="Unk.Fail", file="JsonWriter.cs", label="Entry Unk.Fail", span=""];
m5_1098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2427-2427"];
m5_1099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2429-2429"];
m5_1100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2427-2427"];
m5_1324 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m5_882 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="999-999"];
m5_1292 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m5_3384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7670-7670"];
m5_3385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7672-7672"];
m5_3386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7670-7670"];
m5_309 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m5_917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="2013-2013"];
m5_918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2015-2021"];
m5_919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="2023-2023"];
m5_920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="baseWith.Virtual = ''Virtual2!''", span="2024-2024"];
m5_921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2025-2025"];
m5_922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="2026-2026"];
m5_923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="2028-2028"];
m5_924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="2030-2035"];
m5_925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="2013-2013"];
m5_4241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9732-9732"];
m5_4242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonWriter.cs", label="MyObservableObject o = new MyObservableObject\r\n            {\r\n                TestString = ''Test string''\r\n            }", span="9734-9737"];
m5_4243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="9739-9739"];
m5_4244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''PropertyChanged'''': null,\r\n  ''''TestString'''': ''''Test string''''\r\n}'', json)", span="9740-9743"];
m5_4245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonWriter.cs", label="MyObservableObject o2 = JsonConvert.DeserializeObject<MyObservableObject>(json)", span="9745-9745"];
m5_4246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonWriter.cs", label="Assert.AreEqual(''Test string'', o2.TestString)", span="9746-9746"];
m5_4247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9732-9732"];
m5_4009 [cluster="System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
m5_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1133-1133"];
m5_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonWriter.cs", label="string json = ''['1.2.3.4']''", span="1135-1135"];
m5_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonWriter.cs", label="List<Version> deserialized = JsonConvert.DeserializeObject<List<Version>>(json)", span="1136-1136"];
m5_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonWriter.cs", label="Assert.AreEqual(1, deserialized[0].Major)", span="1138-1138"];
m5_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonWriter.cs", label="Assert.AreEqual(2, deserialized[0].Minor)", span="1139-1139"];
m5_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonWriter.cs", label="Assert.AreEqual(3, deserialized[0].Build)", span="1140-1140"];
m5_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonWriter.cs", label="Assert.AreEqual(4, deserialized[0].Revision)", span="1141-1141"];
m5_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1133-1133"];
m5_3051 [cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33"];
m5_4220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9680-9680"];
m5_4221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="9682-9682"];
m5_4222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9683-9683"];
m5_4224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9689-9689"];
m5_4227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(dt, dt1)", span="9695-9695"];
m5_4232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="9706-9706"];
m5_4223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9684-9687"];
m5_4228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="9697-9701"];
m5_4226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="9693-9693"];
m5_4225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9691-9691"];
m5_4229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9702-9702"];
m5_4230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9704-9704"];
m5_4231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="9705-9705"];
m5_4233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9680-9680"];
m5_2703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="6052-6052"];
m5_2704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonWriter.cs", label="IDontWork = dontWork", span="6054-6054"];
m5_2705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="6052-6052"];
m5_3847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8771-8771"];
m5_3848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonWriter.cs", label="this.First = first", span="8774-8774"];
m5_3849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonWriter.cs", label="this.Second = second", span="8775-8775"];
m5_3850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8771-8771"];
m5_4336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9972-9972"];
m5_4337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9974-9974"];
m5_4338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9976-9981"];
m5_4339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="return attachment;", span="9982-9982"];
m5_4340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9972-9972"];
m5_2993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6867-6867"];
m5_2994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6869-6876"];
m5_2995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6877-6877"];
m5_2998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6888-6888"];
m5_2999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6889-6889"];
m5_3000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6890-6890"];
m5_3001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6891-6891"];
m5_3002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6892-6892"];
m5_2996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6879-6885"];
m5_2997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6887-6887"];
m5_3003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6867-6867"];
m5_2375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5356-5356"];
m5_2376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5356-5356"];
m5_2500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5601-5601"];
m5_2501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonWriter.cs", label="First = first", span="5603-5603"];
m5_2502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonWriter.cs", label="Second = second", span="5604-5604"];
m5_2503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5601-5601"];
m5_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="595-595"];
m5_243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonWriter.cs", label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="597-597"];
m5_244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonWriter.cs", label="Assert.AreEqual(EnumA.ValueA, e1)", span="598-598"];
m5_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonWriter.cs", label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="600-600"];
m5_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonWriter.cs", label="Assert.AreEqual(EnumA.ValueA, e2)", span="601-601"];
m5_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="595-595"];
m5_2226 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m5_877 [cluster="int.ToString(System.IFormatProvider)", file="JsonWriter.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m5_2907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6627-6627"];
m5_2908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonWriter.cs", label="throw new NotImplementedException();", span="6629-6629"];
m5_2909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6627-6627"];
m5_2875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6545-6545"];
m5_2876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6547-6547"];
m5_2877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="c1.Categories.Add(''one'')", span="6548-6548"];
m5_2878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="c1.Categories.Add(''two'')", span="6549-6549"];
m5_2879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6551-6551"];
m5_2882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6561-6561"];
m5_2883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6562-6562"];
m5_2880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6552-6558"];
m5_2881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6560-6560"];
m5_2884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(''one'', c2.Categories[0])", span="6563-6563"];
m5_2885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="Assert.AreEqual(''two'', c2.Categories[1])", span="6564-6564"];
m5_2886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6545-6545"];
m5_19 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m5_2980 [cluster="System.Exception.ToString()", file="JsonWriter.cs", label="Entry System.Exception.ToString()", span="0-0"];
m5_3992 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonWriter.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_1704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3674-3674"];
m5_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3676-3681"];
m5_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonWriter.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3683-3685"];
m5_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonWriter.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3687-3687"];
m5_1708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonWriter.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="3688-3688"];
m5_1709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonWriter.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3689-3689"];
m5_1710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3674-3674"];
m5_1800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3902-3902"];
m5_1801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonWriter.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3904-3904"];
m5_1802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonWriter.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3906-3906"];
m5_1803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonWriter.cs", label="JArray a = (JArray)setOnly.GetValue()", span="3907-3907"];
m5_1804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonWriter.cs", label="Assert.AreEqual(5, a.Count)", span="3908-3908"];
m5_1805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonWriter.cs", label="Assert.AreEqual(1, (int)a[0])", span="3909-3909"];
m5_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonWriter.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3910-3910"];
m5_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3902-3902"];
m5_2433 [cluster="string.Format(string, object, object)", file="JsonWriter.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_3922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8973-8973"];
m5_3923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8975-8979"];
m5_3924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8981-8985"];
m5_3925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="john.Spouse = jane", span="8987-8987"];
m5_3926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="jane.Spouse = john", span="8988-8988"];
m5_3927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8990-8994"];
m5_3928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8996-9003"];
m5_3929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="9005-9020"];
m5_3930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8973-8973"];
m5_2112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4701-4701"];
m5_2113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonWriter.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="4703-4703"];
m5_2114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonWriter.cs", label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4704-4704"];
m5_2115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonWriter.cs", label="Assert.AreEqual(123L, item.Value)", span="4706-4706"];
m5_2116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4701-4701"];
m5_3894 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonWriter.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_1891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="4045-4045"];
m5_1892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonWriter.cs", label="string json = @''{}''", span="4047-4047"];
m5_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Organization.Person]'. Path '', line 1, position 2.'')", span="4049-4049"];
m5_1894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="4045-4045"];
m5_4293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9858-9858"];
m5_4294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonWriter.cs", label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="9860-9863"];
m5_4295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonWriter.cs", label="string output = JsonConvert.SerializeObject(instance)", span="9864-9864"];
m5_4296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonWriter.cs", label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="9865-9865"];
m5_4297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonWriter.cs", label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="9867-9867"];
m5_4298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9858-9858"];
m5_3096 [cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonWriter.cs", label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0"];
m5_57 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="256-256"];
m5_58 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonWriter.cs", label="var largeBrokenNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 43443333222211111117 }'')", span="258-258"];
m5_59 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonWriter.cs", label="Assert.AreEqual(''43443333222211111117'', largeBrokenNumber.Blah)", span="259-259"];
m5_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonWriter.cs", label="var largeOddWorkingNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 53443333222211111117 }'')", span="261-261"];
m5_61 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonWriter.cs", label="Assert.AreEqual(''53443333222211111117'', largeOddWorkingNumber.Blah)", span="262-262"];
m5_62 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="256-256"];
m5_898 [cluster="string.Split(params char[])", file="JsonWriter.cs", label="Entry string.Split(params char[])", span="0-0"];
m5_3769 [cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonWriter.cs", label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0"];
m5_4080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9375-9375"];
m5_4081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9377-9377"];
m5_4082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9375-9375"];
m5_2117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4733-4733"];
m5_2118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4735-4735"];
m5_2119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4736-4736"];
m5_2120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4737-4737"];
m5_2121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4738-4738"];
m5_2124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="serializer.WriteObject(ms, c)", span="4744-4744"];
m5_2122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="MemoryStream ms = new MemoryStream()", span="4740-4740"];
m5_2123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4741-4743"];
m5_2125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="byte[] jsonBytes = ms.ToArray()", span="4746-4746"];
m5_2126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4747-4747"];
m5_2127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4733-4733"];
m5_3895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8900-8900"];
m5_3896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8902-8902"];
m5_3897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonWriter.cs", label="var settings = new JsonSerializerSettings()", span="8903-8903"];
m5_3899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonWriter.cs", label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8905-8905"];
m5_3898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonWriter.cs", label="var serialiser = JsonSerializer.Create(settings)", span="8904-8904"];
m5_3900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonWriter.cs", label="Assert.AreEqual(1234567890.123456m, d)", span="8907-8907"];
m5_3901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8900-8900"];
m5_1000 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonWriter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m5_2964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6767-6767"];
m5_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2244-2244"];
m5_1040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonWriter.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2246-2246"];
m5_1041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonWriter.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="2248-2248"];
m5_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonWriter.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="2250-2250"];
m5_1043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2244-2244"];
m5_1972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4209-4209"];
m5_1973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonWriter.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="4211-4211"];
m5_1974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonWriter.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="4212-4212"];
m5_1975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonWriter.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="4213-4213"];
m5_1976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4215-4215"];
m5_1977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="4216-4219"];
m5_1978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4209-4209"];
m5_2656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5953-5953"];
m5_2657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonWriter.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5955-5955"];
m5_2658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonWriter.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5956-5956"];
m5_2659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5953-5953"];
m5_2439 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonWriter.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m5_4184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9577-9577"];
m5_4185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9579-9579"];
m5_4186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9580-9580"];
m5_4188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9587-9590"];
m5_4191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9598-9598"];
m5_4187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9581-9585"];
m5_4190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9596-9596"];
m5_4189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9592-9594"];
m5_4192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9577-9577"];
m5_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3416-3416"];
m5_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonWriter.cs", label="TestProperty1 = testProperty1", span="3418-3418"];
m5_1605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3416-3416"];
m5_2258 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m5_389 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonWriter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m5_2544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5699-5699"];
m5_2545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5701-5706"];
m5_2546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5708-5712"];
m5_2547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5714-5714"];
m5_2548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="Assert.AreEqual(3, d.Count)", span="5716-5716"];
m5_2549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="Assert.IsTrue(d.Contains(''One''))", span="5717-5717"];
m5_2550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="Assert.IsTrue(d.Contains(''2''))", span="5718-5718"];
m5_2551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="Assert.IsTrue(d.Contains(''III''))", span="5719-5719"];
m5_2552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5699-5699"];
m5_1195 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="739-739"];
m5_1085 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="264-264"];
m5_1745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3779-3779"];
m5_1746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonWriter.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="3781-3781"];
m5_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(uri)", span="3782-3782"];
m5_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3784-3784"];
m5_1750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonWriter.cs", label="Assert.AreEqual(uri, newUri)", span="3787-3787"];
m5_1749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonWriter.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3786-3786"];
m5_1751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3779-3779"];
m5_2456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5530-5530"];
m5_2457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="var reference = new Dictionary<string, object>()", span="5534-5534"];
m5_2458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="reference.Add(''$ref'', ''Persons'')", span="5535-5535"];
m5_2459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="reference.Add(''$id'', 1)", span="5536-5536"];
m5_2463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="child.Add(''Father'', reference)", span="5541-5541"];
m5_2460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="var child = new Dictionary<string, object>()", span="5538-5538"];
m5_2461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="child.Add(''_id'', 2)", span="5539-5539"];
m5_2462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="child.Add(''Name'', ''Isabell'')", span="5540-5540"];
m5_2464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5543-5543"];
m5_2465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="5545-5545"];
m5_2466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5530-5530"];
m5_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="506-506"];
m5_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonWriter.cs", label="return dictionaryKey;", span="508-508"];
m5_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="506-506"];
m5_4327 [cluster="string.IsNullOrEmpty(string)", file="JsonWriter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_3478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7842-7842"];
m5_3479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonWriter.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7844-7852"];
m5_3480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c)", span="7854-7854"];
m5_3481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7856-7856"];
m5_3482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7842-7842"];
m5_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="1015-1015"];
m5_3148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7196-7196"];
m5_3149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonWriter.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="7198-7203"];
m5_3150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n            }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="7205-7208"];
m5_3151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7196-7196"];
m5_4086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9385-9385"];
m5_4087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9387-9387"];
m5_4088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9385-9385"];
m5_1548 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m5_793 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m5_1458 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m5_3886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8883-8883"];
m5_3887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonWriter.cs", label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8885-8885"];
m5_3888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(s1)", span="8887-8887"];
m5_3890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonWriter.cs", label="Assert.AreEqual(s1.Count, s2.Count)", span="8891-8891"];
m5_3891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonWriter.cs", label=s1, span="8892-8892"];
m5_3889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonWriter.cs", label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8889-8889"];
m5_3892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonWriter.cs", label="Assert.IsTrue(s2.Contains(s))", span="8894-8894"];
m5_3893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8883-8883"];
m5_2086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4567-4567"];
m5_1155 [cluster="System.TimeSpan.FromHours(double)", file="JsonWriter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m5_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2302-2302"];
m5_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonWriter.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="2304-2381"];
m5_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonWriter.cs", label="object o = JsonConvert.DeserializeObject(json)", span="2382-2382"];
m5_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonWriter.cs", label="string s = string.Empty", span="2383-2383"];
m5_1075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonWriter.cs", label="s += s", span="2384-2384"];
m5_1076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2302-2302"];
m5_2440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5496-5496"];
m5_2441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="return objectType == typeof(Pos);", span="5498-5498"];
m5_2442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5496-5496"];
m5_4107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9420-9420"];
m5_4108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonWriter.cs", label="throw new InvalidCastException();", span="9422-9422"];
m5_4109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9420-9420"];
m5_2604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5818-5818"];
m5_4010 [cluster="string.Join(string, params string[])", file="JsonWriter.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m5_3382 [cluster="Unk.ToUpper", file="JsonWriter.cs", label="Entry Unk.ToUpper", span=""];
m5_3085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6965-6965"];
m5_2056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4505-4505"];
m5_2057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonWriter.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4507-4507"];
m5_2058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonWriter.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4508-4508"];
m5_2059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonWriter.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4510-4510"];
m5_2060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonWriter.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4511-4511"];
m5_2061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4505-4505"];
m5_3871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8828-8828"];
m5_3872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonWriter.cs", label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8830-8838"];
m5_3873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonWriter.cs", label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8840-8840"];
m5_3874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonWriter.cs", label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8842-8845"];
m5_3875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonWriter.cs", label="Assert.AreEqual(expected, actual)", span="8847-8847"];
m5_3876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8828-8828"];
m5_3492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7884-7884"];
m5_3493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7886-7890"];
m5_3494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7892-7895"];
m5_3495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7897-7900"];
m5_3496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7902-7902"];
m5_3497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7904-7904"];
m5_3498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7905-7905"];
m5_3499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7906-7906"];
m5_3500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7884-7884"];
m5_2870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6506-6506"];
m5_3054 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="814-814"];
m5_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="292-292"];
m5_78 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']''),\r\n                ''Could not convert string to boolean: 2000-12-20T10:55:55Z. Path '[0]', line 1, position 23.'')", span="294-296"];
m5_79 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="292-292"];
m5_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2268-2268"];
m5_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonWriter.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="2270-2270"];
m5_1052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonWriter.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="2272-2272"];
m5_1053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonWriter.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2274-2274"];
m5_1054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonWriter.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="2275-2275"];
m5_1055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2268-2268"];
m5_1184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2576-2576"];
m5_1185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="DateTime d = new DateTime(2000, 1, 1)", span="2578-2578"];
m5_1186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2580-2584"];
m5_1192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="Assert.AreEqual(d, anonymous.DateValue)", span="2596-2596"];
m5_1187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2586-2586"];
m5_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2592-2592"];
m5_1191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2595-2595"];
m5_1188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2587-2590"];
m5_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2593-2593"];
m5_1193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2576-2576"];
m5_2826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6363-6363"];
m5_2827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonWriter.cs", label="string json = @''{A:''''Test''''}''", span="6365-6365"];
m5_2828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonWriter.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="6367-6367"];
m5_2829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonWriter.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="6368-6368"];
m5_2830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonWriter.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="6369-6369"];
m5_2831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6363-6363"];
m5_3391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7688-7688"];
m5_3392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7690-7690"];
m5_3393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7692-7692"];
m5_3399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="values.Add(foo)", span="7705-7705"];
m5_3400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="Assert.AreEqual(2, values.Count)", span="7708-7708"];
m5_3401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="Assert.AreEqual(''bar'', values[0].Name)", span="7709-7709"];
m5_3402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="Assert.AreEqual(''baz'', values[1].Name)", span="7710-7710"];
m5_3394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="reader.SupportMultipleContent = true", span="7693-7693"];
m5_3396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="!reader.Read()", span="7697-7697"];
m5_3398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7703-7703"];
m5_3395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label=true, span="7695-7695"];
m5_3397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="7702-7702"];
m5_3403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7688-7688"];
m5_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1977-1977"];
m5_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="840-840"];
m5_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="FaqItem c = new FaqItem()", span="842-842"];
m5_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="c.FaqId = 1", span="843-843"];
m5_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="c.Sections.Add(new FaqSection())", span="844-844"];
m5_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="846-846"];
m5_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="848-855"];
m5_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="857-857"];
m5_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="Assert.AreEqual(1, c2.FaqId)", span="859-859"];
m5_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="860-860"];
m5_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="840-840"];
m5_3621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8204-8204"];
m5_3622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonWriter.cs", label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="8206-8230"];
m5_3623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonWriter.cs", label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="8232-8232"];
m5_3624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonWriter.cs", label="Assert.IsNotNull(exception)", span="8233-8233"];
m5_3625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonWriter.cs", label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="8234-8234"];
m5_3626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonWriter.cs", label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="8236-8236"];
m5_3627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8204-8204"];
m5_3703 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonWriter.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m5_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1097-1097"];
m5_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonWriter.cs", label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1099-1104"];
m5_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonWriter.cs", label="var json = JsonConvert.SerializeObject(input)", span="1106-1106"];
m5_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonWriter.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1109-1109"];
m5_430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonWriter.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1110-1110"];
m5_431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonWriter.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1111-1111"];
m5_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonWriter.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="1107-1107"];
m5_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1097-1097"];
m5_1435 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m5_2044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4468-4468"];
m5_2045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4470-4470"];
m5_2046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4472-4472"];
m5_2047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4473-4473"];
m5_2048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="g.MyProperty = ''some value''", span="4475-4475"];
m5_2049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="string json = g.ToJson()", span="4477-4477"];
m5_2050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4479-4493"];
m5_2051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4495-4495"];
m5_2052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4496-4496"];
m5_2053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4468-4468"];
m5_142 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m5_4328 [cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonWriter.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0"];
m5_740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1599-1599"];
m5_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''stringValue'', _stringValue)", span="1601-1601"];
m5_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''intValue'', _intValue)", span="1602-1602"];
m5_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1603-1603"];
m5_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1604-1604"];
m5_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1605-1605"];
m5_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1606-1606"];
m5_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1599-1599"];
m5_1557 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34"];
m5_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", span="470-470"];
m5_1417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2988-2988"];
m5_1418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2990-2990"];
m5_1419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2991-2991"];
m5_1420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2988-2988"];
m5_3907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8936-8936"];
m5_3908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonWriter.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8938-8938"];
m5_3909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonWriter.cs", label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8940-8940"];
m5_3910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonWriter.cs", label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8942-8944"];
m5_3911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8936-8936"];
m5_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="1021-1021"];
m5_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="1023-1023"];
m5_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonWriter.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="1025-1025"];
m5_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonWriter.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="1026-1026"];
m5_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="1021-1021"];
m5_1903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="4062-4062"];
m5_1904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="4064-4075"];
m5_1905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="4062-4062"];
m5_2188 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonWriter.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m5_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2410-2410"];
m5_1088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="2412-2412"];
m5_1089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="test.Pie = ''Delicious''", span="2413-2413"];
m5_1090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="test.SweetCakesCount = int.MaxValue", span="2414-2414"];
m5_1091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="2416-2416"];
m5_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="2422-2422"];
m5_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2423-2423"];
m5_1092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2418-2418"];
m5_1093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2420-2420"];
m5_1096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2410-2410"];
m5_3303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7489-7489"];
m5_3304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonWriter.cs", label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="7491-7491"];
m5_3305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonWriter.cs", label="Assert.IsNull(b)", span="7492-7492"];
m5_3306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7489-7489"];
m5_2859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6486-6486"];
m5_2860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonWriter.cs", label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6488-6492"];
m5_2861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonWriter.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6494-6494"];
m5_2862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonWriter.cs", label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6495-6495"];
m5_2863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6486-6486"];
m5_3162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7239-7239"];
m5_3163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonWriter.cs", label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="7241-7245"];
m5_3164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonWriter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="7247-7247"];
m5_3165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7239-7239"];
m5_1120 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonWriter.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m5_4056 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="35-35"];
m5_2951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6747-6747"];
m5_2952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonWriter.cs", label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6749-6749"];
m5_2953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonWriter.cs", label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6751-6751"];
m5_2954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonWriter.cs", label="Assert.AreEqual(3, r.Departures.Count())", span="6752-6752"];
m5_2955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonWriter.cs", label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6753-6753"];
m5_2956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonWriter.cs", label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6754-6754"];
m5_2957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonWriter.cs", label="Assert.IsNull(r.Departures.ElementAt(2))", span="6755-6755"];
m5_2958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6747-6747"];
m5_4414 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span=""];
m5_4415 [file="JsonWriter.cs", label=c1, span=""];
m5_4416 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span=""];
m5_4417 [file="JsonWriter.cs", label=c1, span=""];
m5_4418 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span=""];
m5_4419 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span=""];
m5_4420 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse", span=""];
m5_4421 [file="JsonWriter.cs", label=json, span=""];
m5_4422 [file="JsonWriter.cs", label=serializer, span=""];
m5_4423 [file="JsonWriter.cs", label=referenceResolver, span=""];
m5_4424 [file="JsonWriter.cs", label=serializerProxy, span=""];
m5_4425 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span=""];
m5_4426 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span=""];
m5_4427 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m5_4428 [file="JsonWriter.cs", label=json, span=""];
m5_4429 [file="JsonWriter.cs", label=strFromTest, span=""];
m5_4430 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass", span=""];
m5_4431 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass", span=""];
m5_4432 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span=""];
m5_4433 [file="JsonWriter.cs", label=json, span=""];
m5_4434 [file="JsonWriter.cs", label=json, span=""];
m5_4435 [file="JsonWriter.cs", label=json, span=""];
m5_4436 [file="JsonWriter.cs", label=json, span=""];
m5_4437 [file="JsonWriter.cs", label=json, span=""];
m5_4438 [file="JsonWriter.cs", label=json, span=""];
m5_4439 [file="JsonWriter.cs", label=json, span=""];
m5_4440 [file="JsonWriter.cs", label=json, span=""];
m5_4441 [file="JsonWriter.cs", label=json, span=""];
m5_4442 [file="JsonWriter.cs", label=json, span=""];
m5_4443 [file="JsonWriter.cs", label=json, span=""];
m5_4444 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span=""];
m5_4445 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span=""];
m5_4446 [file="JsonWriter.cs", label=json, span=""];
m5_4447 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span=""];
m5_4448 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span=""];
m5_4449 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span=""];
m5_4450 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m5_4451 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span=""];
m5_4452 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span=""];
m5_4453 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span=""];
m5_4454 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span=""];
m5_4455 [file="JsonWriter.cs", label=json, span=""];
m5_4456 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span=""];
m5_4457 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span=""];
m5_4458 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span=""];
m5_4459 [file="JsonWriter.cs", label=json, span=""];
m5_4460 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span=""];
m5_4461 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span=""];
m5_4462 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span=""];
m5_4463 [file="JsonWriter.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m5_4464 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m5_4465 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span=""];
m5_4466 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span=""];
m5_4467 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span=""];
m5_4468 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span=""];
m5_4469 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span=""];
m5_4470 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span=""];
m5_4471 [file="JsonWriter.cs", label=json, span=""];
m5_4472 [file="JsonWriter.cs", label=json, span=""];
m5_4473 [file="JsonWriter.cs", label=json, span=""];
m5_4474 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter", span=""];
m5_4475 [file="JsonWriter.cs", label=errors, span=""];
m5_4476 [file="JsonWriter.cs", label=errors, span=""];
m5_4477 [file="JsonWriter.cs", label=errors, span=""];
m5_4478 [file="JsonWriter.cs", label=json, span=""];
m5_4479 [file="JsonWriter.cs", label=s, span=""];
m5_4480 [file="JsonWriter.cs", label=json, span=""];
m5_4481 [file="JsonWriter.cs", label=s, span=""];
m5_4482 [file="JsonWriter.cs", label=serializer, span=""];
m5_4483 [file="JsonWriter.cs", label=reader, span=""];
m5_4484 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span=""];
m5_4485 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span=""];
m5_4486 [file="JsonWriter.cs", label=json, span=""];
m5_4487 [file="JsonWriter.cs", label=json, span=""];
m5_4488 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span=""];
m5_4489 [file="JsonWriter.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", span=""];
m5_4490 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", span=""];
m5_4491 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span=""];
m5_4492 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span=""];
m5_4493 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType", span=""];
m5_4494 [file="JsonWriter.cs", label=JsonMessage, span=""];
m5_4495 [file="JsonWriter.cs", label=s, span=""];
m5_4496 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty", span=""];
m5_4497 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span=""];
m5_4498 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", span=""];
m5_4499 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", span=""];
m5_4500 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", span=""];
m5_4501 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest", span=""];
m6_107 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="329-329"];
m6_108 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Null)", span="331-331"];
m6_109 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="332-332"];
m6_110 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteNull()", span="329-329"];
m6_270 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="675-675"];
m6_271 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JTokenWriter.cs", label="InternalWriteWhitespace(ws)", span="677-677"];
m6_272 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JTokenWriter.cs", label="_writer.Write(ws)", span="679-679"];
m6_273 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="675-675"];
m6_135 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", span="688-688"];
m6_278 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="EnsureWriteBuffer()", span="690-690"];
m6_280 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="_writer.Write((char)('0' + value))", span="694-694"];
m6_283 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="_writer.Write('-')", span="701-701"];
m6_284 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="WriteIntegerValue(uvalue)", span="703-703"];
m6_279 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="value >= 0 && value <= 9", span="692-692"];
m6_281 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="ulong uvalue = (value < 0) ? (ulong)-value : (ulong)value", span="698-698"];
m6_282 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="value < 0", span="700-700"];
m6_285 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", span="688-688"];
m6_231 [cluster="Newtonsoft.Json.Utilities.Base64Encoder.Flush()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Utilities.Base64Encoder.Flush()", span="104-104"];
m6_255 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", span="379-379"];
m6_15 [cluster="System.IO.TextWriter.Flush()", file="JTokenWriter.cs", label="Entry System.IO.TextWriter.Flush()", span="0-0"];
m6_202 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="547-547"];
m6_203 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Date)", span="549-549"];
m6_204 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="value = DateTimeUtils.EnsureDateTime(value, DateTimeZoneHandling)", span="550-550"];
m6_205 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="string.IsNullOrEmpty(DateFormatString)", span="552-552"];
m6_206 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="EnsureWriteBuffer()", span="554-554"];
m6_208 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="_writeBuffer[pos++] = _quoteChar", span="557-557"];
m6_209 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="pos = DateTimeUtils.WriteDateTimeString(_writeBuffer, pos, value, null, value.Kind, DateFormatHandling)", span="558-558"];
m6_210 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="_writeBuffer[pos++] = _quoteChar", span="559-559"];
m6_211 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="_writer.Write(_writeBuffer, 0, pos)", span="561-561"];
m6_212 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="_writer.Write(_quoteChar)", span="565-565"];
m6_213 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="_writer.Write(value.ToString(DateFormatString, Culture))", span="566-566"];
m6_214 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="_writer.Write(_quoteChar)", span="567-567"];
m6_207 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="int pos = 0", span="556-556"];
m6_215 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="547-547"];
m6_49 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94"];
m6_189 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="516-516"];
m6_190 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", color=green, community=0, file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", prediction=31, span="518-518"];
m6_191 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", color=green, community=0, file="JTokenWriter.cs", label="WriteIntegerValue(value)", prediction=31, span="519-519"];
m6_192 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="516-516"];
m6_115 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="348-348"];
m6_116 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JTokenWriter.cs", label="InternalWriteRaw()", span="350-350"];
m6_117 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JTokenWriter.cs", label="_writer.Write(json)", span="352-352"];
m6_118 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="348-348"];
m6_220 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JTokenWriter.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m6_23 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="156-156"];
m6_24 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JTokenWriter.cs", label="InternalWriteStart(JsonToken.StartObject, JsonContainerType.Object)", span="158-158"];
m6_25 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JTokenWriter.cs", label="_writer.Write(''{'')", span="160-160"];
m6_26 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="156-156"];
m6_188 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173"];
m6_16 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="141-141"];
m6_17 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JTokenWriter.cs", label="base.Close()", span="143-143"];
m6_18 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JTokenWriter.cs", label="CloseOutput && _writer != null", span="145-145"];
m6_19 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JTokenWriter.cs", label="_writer.Close()", span="147-147"];
m6_20 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.Close()", span="141-141"];
m6_171 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="475-475"];
m6_172 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Boolean)", span="477-477"];
m6_173 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Boolean)", span="478-478"];
m6_174 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="475-475"];
m6_119 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteRaw()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteRaw()", span="1491-1491"];
m6_33 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="177-177"];
m6_34 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JTokenWriter.cs", label="InternalWriteStart(JsonToken.StartConstructor, JsonContainerType.Constructor)", span="179-179"];
m6_35 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JTokenWriter.cs", label="_writer.Write(''new '')", span="181-181"];
m6_36 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JTokenWriter.cs", label="_writer.Write(name)", span="182-182"];
m6_37 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JTokenWriter.cs", label="_writer.Write(''('')", span="183-183"];
m6_38 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="177-177"];
m6_175 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m6_246 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="624-624"];
m6_247 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.String)", span="626-626"];
m6_248 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value, _quoteChar), JsonToken.String)", span="627-627"];
m6_249 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="624-624"];
m6_184 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="506-506"];
m6_185 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", color=green, community=0, file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.String)", prediction=31, span="508-508"];
m6_186 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", color=green, community=0, file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.String)", prediction=31, span="509-509"];
m6_187 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="506-506"];
m6_131 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="379-379"];
m6_132 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="381-381"];
m6_133 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JTokenWriter.cs", label="WriteIntegerValue(value)", span="382-382"];
m6_134 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="379-379"];
m6_21 [cluster="Newtonsoft.Json.JsonWriter.Close()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.Close()", span="349-349"];
m6_153 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m6_219 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="JTokenWriter.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m6_296 [cluster="Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", span="33-33"];
m6_274 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1508-1508"];
m6_164 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="294-294"];
m6_88 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="287-287"];
m6_89 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JTokenWriter.cs", label="_writer.Write(',')", span="289-289"];
m6_90 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="287-287"];
m6_193 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="527-527"];
m6_194 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", color=green, community=0, file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", prediction=31, span="529-529"];
m6_195 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", color=green, community=0, file="JTokenWriter.cs", label="WriteIntegerValue(value)", prediction=31, span="530-530"];
m6_196 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="527-527"];
m6_165 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="458-458"];
m6_167 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JTokenWriter.cs", label="WriteNull()", span="462-462"];
m6_168 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="466-466"];
m6_169 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value.Value, FloatFormatHandling, QuoteChar, true), JsonToken.Float)", span="467-467"];
m6_166 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JTokenWriter.cs", label="value == null", span="460-460"];
m6_170 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="458-458"];
m6_11 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", span="253-253"];
m6_72 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JTokenWriter.cs", label="StringEscapeHandling == StringEscapeHandling.EscapeHtml", span="255-255"];
m6_73 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JTokenWriter.cs", label="_charEscapeFlags = JavaScriptUtils.HtmlCharEscapeFlags", span="256-256"];
m6_74 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JTokenWriter.cs", label="_quoteChar == ''''", span="257-257"];
m6_75 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JTokenWriter.cs", label="_charEscapeFlags = JavaScriptUtils.DoubleQuoteCharEscapeFlags", span="258-258"];
m6_76 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JTokenWriter.cs", label="_charEscapeFlags = JavaScriptUtils.SingleQuoteCharEscapeFlags", span="260-260"];
m6_77 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", span="253-253"];
m6_97 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="311-311"];
m6_99 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="316-316"];
m6_100 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JTokenWriter.cs", label="WriteValueInternal(((BigInteger)value).ToString(CultureInfo.InvariantCulture), JsonToken.String)", span="317-317"];
m6_101 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JTokenWriter.cs", label="base.WriteValue(value)", span="322-322"];
m6_98 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JTokenWriter.cs", label="value is BigInteger", span="314-314"];
m6_102 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="311-311"];
m6_130 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="74-74"];
m6_160 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="448-448"];
m6_161 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="450-450"];
m6_162 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, false), JsonToken.Float)", span="451-451"];
m6_163 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="448-448"];
m6_56 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", span="369-369"];
m6_126 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JTokenWriter.cs", label="EnsureWriteBuffer()", span="371-371"];
m6_127 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JTokenWriter.cs", label="JavaScriptUtils.WriteEscapedJavaScriptString(_writer, value, _quoteChar, quote, _charEscapeFlags, StringEscapeHandling, ref _writeBuffer)", span="372-372"];
m6_128 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", span="369-369"];
m6_58 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", span="226-226"];
m6_59 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label="InternalWritePropertyName(name)", span="228-228"];
m6_61 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label="WriteEscapedString(name, _quoteName)", span="232-232"];
m6_62 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label=_quoteName, span="236-236"];
m6_63 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label="_writer.Write(_quoteChar)", span="237-237"];
m6_64 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label="_writer.Write(name)", span="239-239"];
m6_65 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label=_quoteName, span="241-241"];
m6_66 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label="_writer.Write(_quoteChar)", span="242-242"];
m6_67 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label="_writer.Write(':')", span="245-245"];
m6_60 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label=escape, span="230-230"];
m6_68 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", span="226-226"];
m6_103 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1502-1502"];
m6_149 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="421-421"];
m6_150 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="423-423"];
m6_151 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, false), JsonToken.Float)", span="424-424"];
m6_152 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="421-421"];
m6_136 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="390-390"];
m6_137 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="392-392"];
m6_138 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JTokenWriter.cs", label="WriteIntegerValue(value)", span="393-393"];
m6_139 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="390-390"];
m6_78 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndent()", span="266-266"];
m6_79 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JTokenWriter.cs", label="_writer.Write(Environment.NewLine)", span="268-268"];
m6_80 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JTokenWriter.cs", label="int currentIndentCount = Top * _indentation", span="271-271"];
m6_83 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JTokenWriter.cs", label="_writer.Write(new string(_indentChar, writeCount))", span="278-278"];
m6_81 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JTokenWriter.cs", label="currentIndentCount > 0", span="273-273"];
m6_82 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JTokenWriter.cs", label="int writeCount = Math.Min(currentIndentCount, 10)", span="276-276"];
m6_84 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JTokenWriter.cs", label="currentIndentCount -= writeCount", span="280-280"];
m6_85 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndent()", span="266-266"];
m6_197 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537"];
m6_198 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="539-539"];
m6_199 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Float)", span="540-540"];
m6_200 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537"];
m6_256 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="644-644"];
m6_258 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JTokenWriter.cs", label="WriteNull()", span="648-648"];
m6_259 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.String)", span="652-652"];
m6_260 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value, _quoteChar), JsonToken.String)", span="653-653"];
m6_257 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JTokenWriter.cs", label="value == null", span="646-646"];
m6_261 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="644-644"];
m6_140 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="400-400"];
m6_141 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="402-402"];
m6_142 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JTokenWriter.cs", label="WriteIntegerValue(value)", span="403-403"];
m6_143 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="400-400"];
m6_154 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="431-431"];
m6_156 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JTokenWriter.cs", label="WriteNull()", span="435-435"];
m6_157 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="439-439"];
m6_158 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value.Value, FloatFormatHandling, QuoteChar, true), JsonToken.Float)", span="440-440"];
m6_155 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JTokenWriter.cs", label="value == null", span="433-433"];
m6_159 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="431-431"];
m6_55 [cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", span="1485-1485"];
m6_87 [cluster="string.String(char, int)", file="JTokenWriter.cs", label="Entry string.String(char, int)", span="0-0"];
m6_148 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", span="707-707"];
m6_286 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="EnsureWriteBuffer()", span="709-709"];
m6_288 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="_writer.Write((char)('0' + uvalue))", span="713-713"];
m6_291 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="_writeBuffer[totalLength - ++length] = (char)('0' + (uvalue % 10))", span="722-722"];
m6_294 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="_writer.Write(_writeBuffer, 0, length)", span="726-726"];
m6_287 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="uvalue <= 9", span="711-711"];
m6_289 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="int totalLength = MathUtils.IntLength(uvalue)", span="717-717"];
m6_290 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="int length = 0", span="718-718"];
m6_292 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="uvalue /= 10", span="723-723"];
m6_293 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="uvalue != 0", span="724-724"];
m6_295 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", span="707-707"];
m6_104 [cluster="Unk.ToString", file="JTokenWriter.cs", label="Entry Unk.ToString", span=""];
m6_105 [cluster="Unk.WriteValueInternal", file="JTokenWriter.cs", label="Entry Unk.WriteValueInternal", span=""];
m6_262 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", span="397-397"];
m6_250 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", span="356-356"];
m6_251 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="634-634"];
m6_252 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.String)", span="636-636"];
m6_253 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value, _quoteChar), JsonToken.String)", span="637-637"];
m6_254 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="634-634"];
m6_12 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="133-133"];
m6_13 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JTokenWriter.cs", label="_writer.Flush()", span="135-135"];
m6_14 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.Flush()", span="133-133"];
m6_39 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="190-190"];
m6_42 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="_writer.Write(''}'')", span="195-195"];
m6_44 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="_writer.Write('']'')", span="198-198"];
m6_46 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="_writer.Write('')'')", span="201-201"];
m6_47 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="throw JsonWriterException.Create(this, ''Invalid JsonToken: '' + token, null);", span="204-204"];
m6_41 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="JsonToken.EndObject", span="194-194"];
m6_43 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="JsonToken.EndArray", span="197-197"];
m6_45 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="JsonToken.EndConstructor", span="200-200"];
m6_40 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label=token, span="192-192"];
m6_48 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="190-190"];
m6_22 [cluster="System.IO.TextWriter.Close()", file="JTokenWriter.cs", label="Entry System.IO.TextWriter.Close()", span="0-0"];
m6_176 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="485-485"];
m6_177 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", color=green, community=0, file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", prediction=31, span="487-487"];
m6_178 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", color=green, community=0, file="JTokenWriter.cs", label="WriteIntegerValue(value)", prediction=31, span="488-488"];
m6_179 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="485-485"];
m6_106 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1213-1213"];
m6_230 [cluster="Newtonsoft.Json.Utilities.Base64Encoder.Encode(byte[], int, int)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Utilities.Base64Encoder.Encode(byte[], int, int)", span="47-47"];
m6_50 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="212-212"];
m6_51 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JTokenWriter.cs", label="InternalWritePropertyName(name)", span="214-214"];
m6_52 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JTokenWriter.cs", label="WriteEscapedString(name, _quoteName)", span="216-216"];
m6_53 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JTokenWriter.cs", label="_writer.Write(':')", span="218-218"];
m6_54 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="212-212"];
m6_29 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166"];
m6_30 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JTokenWriter.cs", label="InternalWriteStart(JsonToken.StartArray, JsonContainerType.Array)", span="168-168"];
m6_31 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JTokenWriter.cs", label="_writer.Write(''['')", span="170-170"];
m6_32 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166"];
m6_245 [cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="JTokenWriter.cs", label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0"];
m6_218 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", span="427-427"];
m6_120 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="359-359"];
m6_121 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.String)", span="361-361"];
m6_123 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="364-364"];
m6_124 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JTokenWriter.cs", label="WriteEscapedString(value, true)", span="366-366"];
m6_122 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JTokenWriter.cs", label="value == null", span="363-363"];
m6_125 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="359-359"];
m6_91 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="295-295"];
m6_92 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JTokenWriter.cs", label="_writer.Write(' ')", span="297-297"];
m6_93 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="295-295"];
m6_86 [cluster="System.Math.Min(int, int)", file="JTokenWriter.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m6_0 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m6_3 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="_writer = textWriter", span="121-121"];
m6_4 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="_quoteChar = ''''", span="122-122"];
m6_5 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="_quoteName = true", span="123-123"];
m6_6 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="_indentChar = ' '", span="124-124"];
m6_7 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="_indentation = 2", span="125-125"];
m6_8 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="UpdateCharEscapeFlags()", span="127-127"];
m6_1 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="textWriter == null", span="118-118"];
m6_2 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="throw new ArgumentNullException(''textWriter'');", span="119-119"];
m6_9 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m6_27 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="1495-1495"];
m6_269 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1517-1517"];
m6_111 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="338-338"];
m6_112 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Undefined)", span="340-340"];
m6_113 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JTokenWriter.cs", label="WriteValueInternal(JsonConvert.Undefined, JsonToken.Undefined)", span="341-341"];
m6_114 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="338-338"];
m6_221 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="575-575"];
m6_223 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="WriteNull()", span="579-579"];
m6_224 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Bytes)", span="583-583"];
m6_225 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="_writer.Write(_quoteChar)", span="584-584"];
m6_226 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="Base64Encoder.Encode(value, 0, value.Length)", span="585-585"];
m6_227 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="Base64Encoder.Flush()", span="586-586"];
m6_228 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="_writer.Write(_quoteChar)", span="587-587"];
m6_222 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="value == null", span="577-577"];
m6_229 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="575-575"];
m6_232 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="596-596"];
m6_233 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Date)", span="598-598"];
m6_234 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="string.IsNullOrEmpty(DateFormatString)", span="600-600"];
m6_235 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="EnsureWriteBuffer()", span="602-602"];
m6_237 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="_writeBuffer[pos++] = _quoteChar", span="605-605"];
m6_238 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="pos = DateTimeUtils.WriteDateTimeString(_writeBuffer, pos, (DateFormatHandling == DateFormatHandling.IsoDateFormat) ? value.DateTime : value.UtcDateTime, value.Offset, DateTimeKind.Local, DateFormatHandling)", span="606-606"];
m6_239 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="_writeBuffer[pos++] = _quoteChar", span="607-607"];
m6_240 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="_writer.Write(_writeBuffer, 0, pos)", span="609-609"];
m6_241 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="_writer.Write(_quoteChar)", span="613-613"];
m6_242 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="_writer.Write(value.ToString(DateFormatString, Culture))", span="614-614"];
m6_243 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="_writer.Write(_quoteChar)", span="615-615"];
m6_236 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="int pos = 0", span="604-604"];
m6_244 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="596-596"];
m6_201 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="341-341"];
m6_69 [cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", span="248-248"];
m6_70 [cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JTokenWriter.cs", label="UpdateCharEscapeFlags()", span="250-250"];
m6_71 [cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", span="248-248"];
m6_180 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="496-496"];
m6_181 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", color=green, community=0, file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", prediction=31, span="498-498"];
m6_182 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", color=green, community=0, file="JTokenWriter.cs", label="WriteIntegerValue(value)", prediction=31, span="499-499"];
m6_183 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="496-496"];
m6_217 [cluster="string.IsNullOrEmpty(string)", file="JTokenWriter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_28 [cluster="System.IO.TextWriter.Write(string)", file="JTokenWriter.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m6_57 [cluster="System.IO.TextWriter.Write(char)", file="JTokenWriter.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m6_94 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="300-300"];
m6_95 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="_writer.Write(value)", span="302-302"];
m6_96 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="300-300"];
m6_263 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="662-662"];
m6_264 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JTokenWriter.cs", label="InternalWriteComment()", span="664-664"];
m6_265 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JTokenWriter.cs", label="_writer.Write(''/*'')", span="666-666"];
m6_266 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JTokenWriter.cs", label="_writer.Write(text)", span="667-667"];
m6_267 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JTokenWriter.cs", label="_writer.Write(''*/'')", span="668-668"];
m6_268 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="662-662"];
m6_144 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="411-411"];
m6_145 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JTokenWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="413-413"];
m6_146 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JTokenWriter.cs", label="WriteIntegerValue(value)", span="414-414"];
m6_147 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="411-411"];
m6_129 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", span="682-682"];
m6_275 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JTokenWriter.cs", label="_writeBuffer == null", span="684-684"];
m6_276 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JTokenWriter.cs", label="_writeBuffer = new char[64]", span="685-685"];
m6_277 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", span="682-682"];
m6_216 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76"];
m6_297 [file="JTokenWriter.cs", label="Newtonsoft.Json.JsonTextWriter", span=""];
m7_305 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="900-900"];
m7_306 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="JTokenWriterTest.cs", label="return new CustomEnumerable<T>(newVal, this);", span="902-902"];
m7_307 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="900-900"];
m7_193 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", span="588-588"];
m7_8 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(10)", span="69-69"];
m7_553 [cluster="System.Guid.NewGuid()", file="JTokenWriterTest.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m7_164 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="TypeNameProperty nested = (TypeNameProperty) deserialized.Value", span="521-521"];
m7_165 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''Nested!'', nested.Name)", span="522-522"];
m7_166 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="Assert.AreEqual(null, nested.Value)", span="523-523"];
m7_167 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="493-493"];
m7_168 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="484-484"];
m7_169 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="511-511"];
m7_170 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="527-527"];
m7_171 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JTokenWriterTest.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof (List<int>), FormatterAssemblyStyle.Simple, null)", span="529-529"];
m7_172 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JTokenWriterTest.cs", label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n        {\r\n          Name = ''Name!'',\r\n          Value = new List<int> {1, 2, 3, 4, 5}\r\n        }", span="531-535"];
m7_173 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="537-537"];
m7_174 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="539-551"];
m7_175 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JTokenWriterTest.cs", label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="553-553"];
m7_387 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", span="1835-1835"];
m7_41 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="102-102"];
m7_43 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', json)", span="109-115"];
m7_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="151-151"];
m7_176 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", span="290-290"];
m7_179 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs", label="JValue value = (JValue)writer.Token", span="299-299"];
m7_180 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs", label="DateTime dt = (DateTime)value.Value", span="300-300"];
m7_181 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc), dt)", span="302-302"];
m7_182 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", span="290-290"];
m7_183 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenWriterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m7_184 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", span="428-428"];
m7_177 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs", label="JTokenWriter writer = new JTokenWriter\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="292-295"];
m7_178 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="297-297"];
m7_185 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="527-527"];
m7_266 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="763-763"];
m7_271 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JTokenWriterTest.cs", label="Message deserialized = JsonConvert.DeserializeObject<Message>(json)", span="783-783"];
m7_270 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented)", span="773-773"];
m7_267 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JTokenWriterTest.cs", label="Message message = new Message()", span="765-765"];
m7_272 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JTokenWriterTest.cs", label="SearchDetails searchDetails = (SearchDetails) deserialized.Body", span="785-785"];
m7_269 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JTokenWriterTest.cs", label="message.Body = new SearchDetails\r\n        {\r\n          Query = ''Json.NET'',\r\n          Language = ''en-us''\r\n        }", span="767-771"];
m7_268 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JTokenWriterTest.cs", label="message.Address = ''http://www.google.com''", span="766-766"];
m7_273 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="763-763"];
m7_620 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1776-1776"];
m7_623 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="ReferenceEquals(this, obj)", span="1779-1779"];
m7_626 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="return this.Name.Equals(((IExample)obj).Name);", span="1782-1782"];
m7_621 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="obj == null", span="1778-1778"];
m7_624 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="return true;", span="1779-1779"];
m7_625 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="obj is IExample", span="1780-1780"];
m7_622 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="return false;", span="1778-1778"];
m7_627 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="return false;", span="1786-1786"];
m7_628 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1776-1776"];
m7_566 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1578-1578"];
m7_570 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChildList, Newtonsoft.Json.Tests'''',\r\n    ''''$values'''': [\r\n      ''''string!''''\r\n    ]\r\n  }\r\n}'', json)", span="1600-1607"];
m7_573 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, ((MyChildList)p2.Child).Count)", span="1611-1611"];
m7_574 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''string!'', ((MyChildList)p2.Child)[0])", span="1612-1612"];
m7_568 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Auto,\r\n        DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n        MissingMemberHandling = MissingMemberHandling.Ignore,\r\n        DefaultValueHandling = DefaultValueHandling.Ignore,\r\n        NullValueHandling = NullValueHandling.Ignore,\r\n        Formatting = Formatting.Indented\r\n      }", span="1588-1596"];
m7_569 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(p, settings)", span="1598-1598"];
m7_571 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1609-1609"];
m7_572 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChildList), p2.Child)", span="1610-1610"];
m7_567 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="MyParent p = new MyParent\r\n      {\r\n        Child = new MyChildList\r\n        {\r\n          ''string!''\r\n        }\r\n      }", span="1580-1586"];
m7_575 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1578-1578"];
m7_154 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="452-452"];
m7_0 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="58-58"];
m7_1 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world.'')", span="60-60"];
m7_6 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="67-67"];
m7_2 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="JToken root", span="62-62"];
m7_4 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteStartArray()", span="65-65"];
m7_3 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="63-63"];
m7_5 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue('@')", span="66-66"];
m7_7 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(true)", span="68-68"];
m7_594 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1675-1675"];
m7_595 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="info.AddValue(''c'', Child)", span="1677-1677"];
m7_596 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1675-1675"];
m7_338 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", span="926-926"];
m7_163 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (TypeNameProperty), deserialized.Value)", span="519-519"];
m7_42 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Auto\r\n        })", span="104-107"];
m7_275 [cluster="Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", span="1704-1704"];
m7_276 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="797-797"];
m7_280 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n  ''''First'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 404,\r\n    ''''Url'''': ''''http://www.bing.com''''\r\n  },\r\n  ''''Second'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 400,\r\n    ''''Url'''': ''''http://www.google.com''''\r\n  },\r\n  ''''List'''': {\r\n    ''''$type'''': ''''System.Collections.Generic.List`1[['' + urlStatusTypeName + @'']], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 300,\r\n        ''''Url'''': ''''http://www.yahoo.com''''\r\n      },\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 200,\r\n        ''''Url'''': ''''http://www.askjeeves.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json)", span="820-847"];
m7_284 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="Assert.AreEqual(3, newCollection.Count)", span="858-858"];
m7_285 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''http://www.bing.com'', ((UrlStatus) newCollection[''First'']).Url)", span="859-859"];
m7_287 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="Assert.AreEqual(2, statues.Count)", span="862-862"];
m7_278 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(collection, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n        })", span="812-816"];
m7_281 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="object c = JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n        })", span="849-853"];
m7_279 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="string urlStatusTypeName = ReflectionUtils.GetTypeName(typeof (UrlStatus), FormatterAssemblyStyle.Simple, null)", span="818-818"];
m7_283 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="Dictionary<string, object> newCollection = (Dictionary<string, object>) c", span="857-857"];
m7_286 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="List<UrlStatus> statues = (List<UrlStatus>) newCollection[''List'']", span="861-861"];
m7_277 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="Dictionary<string, object> collection = new Dictionary<string, object>()\r\n        {\r\n          {''First'', new UrlStatus {Status = 404, Url = @''http://www.bing.com''}},\r\n          {''Second'', new UrlStatus {Status = 400, Url = @''http://www.google.com''}},\r\n          {\r\n            ''List'', new List<UrlStatus>\r\n              {\r\n                new UrlStatus {Status = 300, Url = @''http://www.yahoo.com''},\r\n                new UrlStatus {Status = 200, Url = @''http://www.askjeeves.com''}\r\n              }\r\n            }\r\n        }", span="799-810"];
m7_282 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (Dictionary<string, object>), c)", span="855-855"];
m7_288 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="797-797"];
m7_39 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", span="381-381"];
m7_261 [cluster="Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", span="30-30"];
m7_69 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="128-128"];
m7_555 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1543-1543"];
m7_559 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n    ''''p'''': ''''string!''''\r\n  }\r\n}'', json)", span="1565-1570"];
m7_562 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1574-1574"];
m7_557 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Auto,\r\n        DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n        MissingMemberHandling = MissingMemberHandling.Ignore,\r\n        DefaultValueHandling = DefaultValueHandling.Ignore,\r\n        NullValueHandling = NullValueHandling.Ignore,\r\n        Formatting = Formatting.Indented\r\n      }", span="1553-1561"];
m7_558 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(p, settings)", span="1563-1563"];
m7_560 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1572-1572"];
m7_561 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1573-1573"];
m7_556 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="MyParent p = new MyParent\r\n      {\r\n        Child = new MyChild\r\n        {\r\n          MyProperty = ''string!''\r\n        }\r\n      }", span="1545-1551"];
m7_563 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1543-1543"];
m7_34 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(data, (byte[])root[12])", span="98-98"];
m7_348 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", span="1723-1723"];
m7_441 [cluster="object.ToString()", file="JTokenWriterTest.cs", label="Entry object.ToString()", span="0-0"];
m7_370 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175"];
m7_631 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1790-1790"];
m7_632 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JTokenWriterTest.cs", label="Name == null", span="1792-1792"];
m7_634 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JTokenWriterTest.cs", label="return Name.GetHashCode();", span="1795-1795"];
m7_633 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JTokenWriterTest.cs", label="return 0;", span="1793-1793"];
m7_635 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1790-1790"];
m7_21 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(13, root.Children().Count())", span="85-85"];
m7_26 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(10.99, (double)root[4])", span="90-90"];
m7_25 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(10, (int)root[3])", span="89-89"];
m7_27 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(0.99, (double)root[5])", span="91-91"];
m7_23 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', (string)root[1])", span="87-87"];
m7_24 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(true, (bool)root[2])", span="88-88"];
m7_28 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(0.000000000000000001d, (double)root[6])", span="92-92"];
m7_22 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''@'', (string)root[0])", span="86-86"];
m7_29 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(0.000000000000000001m, (decimal)root[7])", span="93-93"];
m7_30 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(null, (string)root[8])", span="94-94"];
m7_31 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''This is a string.'', (string)root[9])", span="95-95"];
m7_212 [cluster="Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", span="1715-1715"];
m7_541 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", span="1807-1807"];
m7_186 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="567-567"];
m7_191 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''Name!'', person.Name)", span="585-585"];
m7_188 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="object p = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          Binder = new CustomSerializationBinder()\r\n        })", span="575-579"];
m7_190 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Person person = (Person) p", span="583-583"];
m7_187 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="569-573"];
m7_189 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (Person), p)", span="581-581"];
m7_192 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="567-567"];
m7_406 [cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="61-61"];
m7_45 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347"];
m7_440 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", span="1845-1845"];
m7_36 [cluster="System.Text.Encoding.GetBytes(string)", file="JTokenWriterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m7_50 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="JTokenWriterTest.cs", label="wrapper.Dictionary = new Dictionary<string, EmployeeReference>\r\n        {\r\n          {''First'', new EmployeeReference()}\r\n        }", span="132-135"];
m7_636 [cluster="string.GetHashCode()", file="JTokenWriterTest.cs", label="Entry string.GetHashCode()", span="0-0"];
m7_211 [cluster="Newtonsoft.Json.Tests.Serialization.Customer.Customer()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Customer.Customer()", span="1710-1710"];
m7_197 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="598-598"];
m7_201 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Customer'''',\r\n    ''''Name'''': ''''Caroline Customer''''\r\n  },\r\n  {\r\n    ''''$type'''': ''''Purchase'''',\r\n    ''''ProductName'''': ''''Elbow Grease'''',\r\n    ''''Price'''': 5.99,\r\n    ''''Quantity'''': 1\r\n  }\r\n]'', json)", span="636-647"];
m7_205 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="657-657"];
m7_208 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''Elbow Grease'', purchase.ProductName)", span="661-661"];
m7_200 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Auto,\r\n          Binder = binder\r\n        })", span="616-620"];
m7_202 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="IList<object> newValues = JsonConvert.DeserializeObject<IList<object>>(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Auto,\r\n          Binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')\r\n        })", span="649-653"];
m7_204 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Customer customer = (Customer) newValues[0]", span="656-656"];
m7_206 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (Purchase), newValues[1])", span="659-659"];
m7_207 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Purchase purchase = (Purchase) newValues[1]", span="660-660"];
m7_199 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="IList<object> values = new List<object>\r\n        {\r\n          new Customer\r\n            {\r\n              Name = ''Caroline Customer''\r\n            },\r\n          new Purchase\r\n            {\r\n              ProductName = ''Elbow Grease'',\r\n              Price = 5.99m,\r\n              Quantity = 1\r\n            }\r\n        }", span="602-614"];
m7_198 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="TypeNameSerializationBinder binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')", span="600-600"];
m7_203 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (Customer), newValues[0])", span="655-655"];
m7_209 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="598-598"];
m7_38 [cluster="string.Contains(string)", file="JTokenWriterTest.cs", label="Entry string.Contains(string)", span="0-0"];
m7_93 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="JObject o = (JObject)jsonWriter.Token", span="154-154"];
m7_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", prediction=41, span="156-156"];
m7_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", prediction=41, span="157-157"];
m7_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(o.Property(''CPU''), jsonWriter.CurrentToken)", prediction=41, span="158-158"];
m7_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(''Intel'')", prediction=41, span="160-160"];
m7_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", prediction=41, span="161-161"];
m7_99 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(o[''CPU''], jsonWriter.CurrentToken)", prediction=41, span="162-162"];
m7_100 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", prediction=41, span="164-164"];
m7_106 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="JArray a = (JArray)jsonWriter.CurrentToken", prediction=41, span="172-172"];
m7_107 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", prediction=41, span="174-174"];
m7_101 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", prediction=41, span="165-165"];
m7_102 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(o.Property(''Drives''), jsonWriter.CurrentToken)", prediction=41, span="166-166"];
m7_103 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="jsonWriter.WriteStartArray()", prediction=41, span="168-168"];
m7_104 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", prediction=41, span="169-169"];
m7_105 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(o[''Drives''], jsonWriter.CurrentToken)", prediction=41, span="170-170"];
m7_108 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="175-175"];
m7_35 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="58-58"];
m7_223 [cluster="string.Format(string, object)", file="JTokenWriterTest.cs", label="Entry string.Format(string, object)", span="0-0"];
m7_421 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", span="1840-1840"];
m7_124 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="174-174"];
m7_514 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m7_109 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="176-176"];
m7_110 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(new BigInteger(123))", prediction=41, span="179-179"];
m7_111 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", prediction=41, span="180-180"];
m7_112 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", prediction=41, span="181-181"];
m7_115 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="186-186"];
m7_113 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(new byte[0])", prediction=41, span="184-184"];
m7_114 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="185-185"];
m7_116 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="jsonWriter.WriteEnd()", span="188-188"];
m7_51 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(wrapper, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Auto\r\n        })", span="137-140"];
m7_616 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JTokenWriterTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m7_148 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs", label="writer.WriteStartArray()", span="237-237"];
m7_153 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", span="233-233"];
m7_152 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs", label="StringAssert.AreEqual(@''[\r\n  fail,\r\n  fail\r\n]'', writer.Token.ToString())", span="245-248"];
m7_149 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs", label="writer.WriteRaw(''fail'')", span="238-238"];
m7_150 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs", label="writer.WriteRaw(''fail'')", span="239-239"];
m7_151 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs", label="writer.WriteEndArray()", span="240-240"];
m7_225 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="689-689"];
m7_244 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="Assert.AreEqual(expected, json)", span="735-735"];
m7_254 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, anotherTestObject.AnotherTestMember.Count)", span="753-753"];
m7_257 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, list.Count)", span="758-758"];
m7_239 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="string json = sw.ToString()", span="709-709"];
m7_243 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="string expected = @''{\r\n  ''''TestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''First One''''\r\n  },\r\n  ''''AnotherTestMember'''': {\r\n    ''''$type'''': '''''' + dictionaryRef + @'''''',\r\n    ''''1'''': [\r\n      {\r\n        ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n        ''''SomeString'''': ''''Second One''''\r\n      }\r\n    ]\r\n  },\r\n  ''''AThirdTestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''Third One''''\r\n  }\r\n}''", span="715-733"];
m7_245 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="StringReader sr = new StringReader(json)", span="737-737"];
m7_250 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="anotherTestObject = deserializingTester.Deserialize<HolderClass>(jsonReader)", span="747-747"];
m7_253 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (Dictionary<int, IList<ContentBaseClass>>), anotherTestObject.AnotherTestMember)", span="752-752"];
m7_255 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="IList<ContentBaseClass> list = anotherTestObject.AnotherTestMember[1]", span="755-755"];
m7_256 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (List<ContentBaseClass>), list)", span="757-757"];
m7_258 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (ContentSubClass), list[0])", span="759-759"];
m7_229 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="testObject.AnotherTestMember.Add(1, new List<ContentBaseClass>())", span="694-694"];
m7_238 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="serializingTester.Serialize(jsonWriter, testObject)", span="706-706"];
m7_234 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="StringWriter sw = new StringWriter()", span="701-701"];
m7_240 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="string contentSubClassRef = ReflectionUtils.GetTypeName(typeof (ContentSubClass), FormatterAssemblyStyle.Simple, null)", span="711-711"];
m7_241 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="string dictionaryRef = ReflectionUtils.GetTypeName(typeof (Dictionary<int, IList<ContentBaseClass>>), FormatterAssemblyStyle.Simple, null)", span="712-712"];
m7_242 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof (List<ContentBaseClass>), FormatterAssemblyStyle.Simple, null)", span="713-713"];
m7_246 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="JsonSerializer deserializingTester = new JsonSerializer()", span="739-739"];
m7_248 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="743-743"];
m7_249 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="deserializingTester.TypeNameHandling = TypeNameHandling.Auto", span="745-745"];
m7_251 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="Assert.IsNotNull(anotherTestObject)", span="750-750"];
m7_252 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (ContentSubClass), anotherTestObject.TestMember)", span="751-751"];
m7_226 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="HolderClass testObject = new HolderClass()", span="691-691"];
m7_228 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="testObject.AnotherTestMember = new Dictionary<int, IList<ContentBaseClass>>()", span="693-693"];
m7_230 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="testObject.AnotherTestMember[1].Add(new ContentSubClass(''Second One''))", span="695-695"];
m7_232 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="JsonSerializer serializingTester = new JsonSerializer()", span="698-698"];
m7_237 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="serializingTester.TypeNameHandling = TypeNameHandling.Auto", span="705-705"];
m7_235 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="702-702"];
m7_233 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="serializingTester.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="699-699"];
m7_247 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="HolderClass anotherTestObject", span="741-741"];
m7_227 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="testObject.TestMember = new ContentSubClass(''First One'')", span="692-692"];
m7_231 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="testObject.AThirdTestMember = new ContentSubClass(''Third One'')", span="696-696"];
m7_236 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="704-704"];
m7_259 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="689-689"];
m7_349 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1003-1003"];
m7_358 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="Assert.AreEqual(e, f, ''Objects should be equal after round trip json serialization'')", span="1024-1024"];
m7_357 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="SerializableWrapper f = serializer.Deserialize<SerializableWrapper>(new JsonTextReader(new StringReader(writer.ToString())))", span="1021-1021"];
m7_350 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="Console.WriteLine(''Type Name Handling: '' + flag.ToString())", span="1005-1005"];
m7_353 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="serializer.TypeNameHandling = flag", span="1010-1010"];
m7_354 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="serializer.Serialize(new JsonTextWriter(writer), e)", span="1013-1013"];
m7_351 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="StringWriter writer = new StringWriter()", span="1006-1006"];
m7_352 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1009-1009"];
m7_356 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="Console.WriteLine()", span="1015-1015"];
m7_355 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="Console.WriteLine(writer.ToString())", span="1014-1014"];
m7_359 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1003-1003"];
m7_422 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1171-1171"];
m7_431 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="Assert.AreEqual(expected, json)", span="1194-1194"];
m7_435 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, ((TestComponentSimple) o2.Object1).MyProperty)", span="1200-1200"];
m7_438 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': 2147483647\r\n}'', o2.ObjectNotHandled.ToString())", span="1203-1205"];
m7_429 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1181-1181"];
m7_430 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="string expected = @''{\r\n  ''''Object1'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Object2'''': 123,\r\n  ''''ObjectNotHandled'''': {\r\n    ''''MyProperty'''': 2147483647\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1182-1193"];
m7_432 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="TypeNameObject o2 = JsonConvert.DeserializeObject<TypeNameObject>(json)", span="1196-1196"];
m7_434 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), o2.Object1)", span="1199-1199"];
m7_436 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (long), o2.Object2)", span="1201-1201"];
m7_437 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (JObject), o2.ObjectNotHandled)", span="1202-1202"];
m7_423 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="TypeNameObject o1 = new TypeNameObject()", span="1173-1173"];
m7_428 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="o1.Integer = int.MaxValue", span="1179-1179"];
m7_433 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="Assert.IsNotNull(o2)", span="1197-1197"];
m7_424 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="o1.Object1 = new TestComponentSimple {MyProperty = 1}", span="1175-1175"];
m7_425 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="o1.Object2 = 123", span="1176-1176"];
m7_426 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="o1.ObjectNotHandled = new TestComponentSimple {MyProperty = int.MaxValue}", span="1177-1177"];
m7_427 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="o1.String = ''String!''", span="1178-1178"];
m7_439 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1171-1171"];
m7_290 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="669-669"];
m7_592 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JTokenWriterTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m7_224 [cluster="System.Type.GetType(string, bool)", file="JTokenWriterTest.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m7_77 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406"];
m7_136 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", span="213-213"];
m7_137 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="420-420"];
m7_138 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="string typeName = typeof (SendHttpRequest).AssemblyQualifiedName", span="422-422"];
m7_139 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="string json = @''{\r\n''''$type'''': '''''' + typeName + @'''''',\r\n''''RequestData'''': {\r\n''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib,Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n''''Id'''': ''''siedemnaście'''',\r\n''''X'''': ''''323''''\r\n},\r\n''''Method'''': ''''GET'''',\r\n''''Url'''': ''''http://www.onet.pl'''',\r\n''''RequestEncoding'''': ''''UTF-8'''',\r\n''''CorrelationId'''': ''''xyz''''\r\n}''", span="424-435"];
m7_140 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="ICorrelatedMessage message = JsonConvert.DeserializeObject<ICorrelatedMessage>(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n        })", span="437-441"];
m7_141 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (SendHttpRequest), message)", span="443-443"];
m7_144 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="Assert.AreEqual(2, request.RequestData.Count)", span="447-447"];
m7_142 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="SendHttpRequest request = (SendHttpRequest) message", span="445-445"];
m7_143 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''xyz'', request.CorrelationId)", span="446-446"];
m7_145 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''siedemnaście'', request.RequestData[''Id''])", span="448-448"];
m7_308 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="905-905"];
m7_309 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="count == 0", span="907-907"];
m7_311 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="yield return value;", span="909-909"];
m7_312 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="var nextInLine = next", span="911-911"];
m7_310 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="yield break;", span="908-908"];
m7_313 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="nextInLine != null", span="912-912"];
m7_314 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="nextInLine.count != 0", span="914-914"];
m7_315 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="yield return nextInLine.value;", span="915-915"];
m7_316 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="nextInLine = nextInLine.next", span="916-916"];
m7_317 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="905-905"];
m7_512 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", span="1800-1800"];
m7_262 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JTokenWriterTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m7_442 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1209-1209"];
m7_446 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    1,\r\n    ''''two'''',\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="1220-1229"];
m7_448 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="Assert.AreEqual(3, c2.Data.Count)", span="1232-1232"];
m7_453 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1238-1238"];
m7_445 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1219-1219"];
m7_447 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1231-1231"];
m7_449 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (long), c2.Data[0])", span="1234-1234"];
m7_452 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="TestComponentSimple c = (TestComponentSimple) c2.Data[2]", span="1237-1237"];
m7_444 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="c1.Data = new List<object>\r\n        {\r\n          1,\r\n          ''two'',\r\n          new TestComponentSimple {MyProperty = 1}\r\n        }", span="1212-1217"];
m7_443 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling()", span="1211-1211"];
m7_450 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (string), c2.Data[1])", span="1235-1235"];
m7_451 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), c2.Data[2])", span="1236-1236"];
m7_454 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1209-1209"];
m7_455 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", span="1828-1828"];
m7_133 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", span="268-268"];
m7_78 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456"];
m7_81 [cluster="BigInteger.cstr", file="JTokenWriterTest.cs", label="Entry BigInteger.cstr", span=""];
m7_80 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422"];
m7_82 [cluster="Unk.WriteValue", file="JTokenWriterTest.cs", label="Entry Unk.WriteValue", span=""];
m7_79 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912"];
m7_83 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1358-1358"];
m7_291 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="867-867"];
m7_295 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + productClassRef + @'''''',\r\n  ''''$values'''': []\r\n}'', json)", span="875-878"];
m7_294 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented, new JsonSerializerSettings {TypeNameHandling = TypeNameHandling.All})", span="873-873"];
m7_292 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JTokenWriterTest.cs", label="string productClassRef = ReflectionUtils.GetTypeName(typeof(CustomEnumerable<Product>), FormatterAssemblyStyle.Simple, null)", span="869-869"];
m7_293 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JTokenWriterTest.cs", label="CustomEnumerable<Product> products = new CustomEnumerable<Product>()", span="871-871"];
m7_296 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="867-867"];
m7_542 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="826-826"];
m7_597 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JTokenWriterTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m7_260 [cluster="Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", span="31-31"];
m7_155 [cluster="Newtonsoft.Json.Tests.TestObjects.Container.Container()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Container.Container()", span="29-29"];
m7_156 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="493-493"];
m7_157 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="string typeNamePropertyRef = ReflectionUtils.GetTypeName(typeof (TypeNameProperty), FormatterAssemblyStyle.Simple, null)", span="495-495"];
m7_158 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n        {\r\n          Name = ''Name!'',\r\n          Value = new TypeNameProperty\r\n            {\r\n              Name = ''Nested!''\r\n            }\r\n        }", span="497-504"];
m7_159 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="506-506"];
m7_160 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + typeNamePropertyRef + @'''''',\r\n    ''''Name'''': ''''Nested!'''',\r\n    ''''Value'''': null\r\n  }\r\n}'', json)", span="508-515"];
m7_161 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="517-517"];
m7_162 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''Name!'', deserialized.Name)", span="518-518"];
m7_20 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), root)", span="84-84"];
m7_340 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="981-981"];
m7_343 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JTokenWriterTest.cs", label="this.TestJsonSerializationRoundTrip(w, TypeNameHandling.All)", span="998-998"];
m7_344 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JTokenWriterTest.cs", label="this.TestJsonSerializationRoundTrip(w, TypeNameHandling.Auto)", span="999-999"];
m7_345 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JTokenWriterTest.cs", label="this.TestJsonSerializationRoundTrip(w, TypeNameHandling.Objects)", span="1000-1000"];
m7_342 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JTokenWriterTest.cs", label="SerializableWrapper w = new SerializableWrapper\r\n        {\r\n          Content = e\r\n        }", span="986-989"];
m7_341 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JTokenWriterTest.cs", label="IExample e = new Example(''Rob'')", span="984-984"];
m7_346 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="981-981"];
m7_44 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="102-102"];
m7_318 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="920-920"];
m7_319 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JTokenWriterTest.cs", label="return GetEnumerator();", span="922-922"];
m7_320 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="920-920"];
m7_47 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", span="451-451"];
m7_52 [cluster="Unk.AreEqual", file="JTokenWriterTest.cs", label="Entry Unk.AreEqual", span=""];
m7_53 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="102-102"];
m7_49 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310"];
m7_48 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430"];
m7_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="JsonWriter jsonWriter = new JTokenWriter()", span="104-104"];
m7_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="106-106"];
m7_56 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WriteStartObject()", span="108-108"];
m7_617 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1769-1769"];
m7_618 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="info.AddValue(''name'', this.Name)", span="1771-1771"];
m7_619 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1769-1769"];
m7_456 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1242-1242"];
m7_459 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1260-1275"];
m7_461 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1278-1278"];
m7_468 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1304-1304"];
m7_474 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, (int) o[''MyProperty''])", span="1311-1311"];
m7_458 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1259-1259"];
m7_460 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1277-1277"];
m7_462 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), c2.Data[0])", span="1280-1280"];
m7_467 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1303-1303"];
m7_469 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), c2.Data[0])", span="1306-1306"];
m7_473 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="JObject o = (JObject) c[0]", span="1310-1310"];
m7_457 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling\r\n        {\r\n          Data = new List<object>\r\n            {\r\n              new TestComponentSimple {MyProperty = 1},\r\n              new List<object>\r\n                {\r\n                  new List<object>\r\n                    {\r\n                      new List<object>()\r\n                    }\r\n                }\r\n            }\r\n        }", span="1244-1257"];
m7_463 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (List<object>), c2.Data[1])", span="1281-1281"];
m7_464 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="List<object> c = (List<object>) c2.Data[1]", span="1282-1282"];
m7_466 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="json = @''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="1285-1301"];
m7_470 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (List<object>), c2.Data[1])", span="1307-1307"];
m7_471 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="c = (List<object>) c2.Data[1]", span="1308-1308"];
m7_472 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (JObject), c[0])", span="1309-1309"];
m7_465 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (JArray), c[0])", span="1283-1283"];
m7_475 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1242-1242"];
m7_16 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteUndefined()", span="77-77"];
m7_147 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs", label="JTokenWriter writer = new JTokenWriter()", span="235-235"];
m7_117 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="189-189"];
m7_146 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="420-420"];
m7_554 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="552-552"];
m7_70 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(new byte[0])", span="131-131"];
m7_75 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="138-138"];
m7_73 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="135-135"];
m7_74 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WriteEndObject()", span="137-137"];
m7_72 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WriteEnd()", span="134-134"];
m7_71 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="132-132"];
m7_76 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="102-102"];
m7_496 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", span="1822-1822"];
m7_407 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1144-1144"];
m7_413 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Second'''': ''''String!'''',\r\n  ''''Third'''': 9223372036854775807\r\n}'', json)", span="1152-1159"];
m7_415 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="Assert.AreEqual(3, l2.Count)", span="1162-1162"];
m7_417 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, ((TestComponentSimple) l2[''First'']).MyProperty)", span="1165-1165"];
m7_412 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1151-1151"];
m7_414 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="TypeNameDictionary<object> l2 = JsonConvert.DeserializeObject<TypeNameDictionary<object>>(json)", span="1161-1161"];
m7_416 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), l2[''First''])", span="1164-1164"];
m7_418 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (string), l2[''Second''])", span="1166-1166"];
m7_408 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="TypeNameDictionary<object> l = new TypeNameDictionary<object>()", span="1146-1146"];
m7_411 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="l.Add(''Third'', long.MaxValue)", span="1149-1149"];
m7_419 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (long), l2[''Third''])", span="1167-1167"];
m7_409 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="l.Add(''First'', new TestComponentSimple {MyProperty = 1})", span="1147-1147"];
m7_410 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="l.Add(''Second'', ''String!'')", span="1148-1148"];
m7_420 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1144-1144"];
m7_363 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1030-1030"];
m7_366 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''':::MESSAGE:::, AssemblyName'''',\r\n  ''''Address'''': ''''jamesnk@testtown.com'''',\r\n  ''''Body'''': {\r\n    ''''$type'''': '''':::VERSION:::, AssemblyName'''',\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  }\r\n}'', json)", span="1051-1063"];
m7_365 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n          Binder = new MetroBinder(),\r\n          ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n        })", span="1038-1049"];
m7_364 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JTokenWriterTest.cs", label="Message message = new Message\r\n        {\r\n          Address = ''jamesnk@testtown.com'',\r\n          Body = new Version(1, 2, 3, 4)\r\n        }", span="1032-1036"];
m7_367 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1030-1030"];
m7_84 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="226-226"];
m7_61 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="115-115"];
m7_321 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="940-940"];
m7_331 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="Assert.AreEqual(output, @''{\r\n  ''''$type'''': '''''' + carClassRef + @'''''',\r\n  ''''Year'''': ''''2000-10-05T01:01:01Z'''',\r\n  ''''Objects'''': {\r\n    ''''$type'''': ''''System.Object[], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n        ''''$value'''': ''''S0FSSVJB''''\r\n      },\r\n      ''''prueba''''\r\n    ]\r\n  }\r\n}'')", span="955-968"];
m7_326 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="JsonSerializerSettings jsonSettings = new JsonSerializerSettings()", span="947-947"];
m7_329 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="string output = JsonConvert.SerializeObject(testerObject, Formatting.Indented, jsonSettings)", span="951-951"];
m7_323 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="testerObject.Year = new DateTime(2000, 10, 5, 1, 1, 1, DateTimeKind.Utc)", span="943-943"];
m7_330 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="string carClassRef = ReflectionUtils.GetTypeName(typeof (Car), FormatterAssemblyStyle.Simple, null)", span="953-953"];
m7_332 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="Car obj = JsonConvert.DeserializeObject<Car>(output, jsonSettings)", span="969-969"];
m7_325 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="testerObject.Objects = new object[] {data, ''prueba''}", span="945-945"];
m7_327 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="jsonSettings.NullValueHandling = NullValueHandling.Ignore", span="948-948"];
m7_328 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="jsonSettings.TypeNameHandling = TypeNameHandling.All", span="949-949"];
m7_322 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="Car testerObject = new Car()", span="942-942"];
m7_324 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="byte[] data = new byte[] {75, 65, 82, 73, 82, 65}", span="944-944"];
m7_334 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="Assert.IsTrue(obj.Objects[0] is byte[])", span="973-973"];
m7_333 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="Assert.IsNotNull(obj)", span="971-971"];
m7_335 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="byte[] d = (byte[]) obj.Objects[0]", span="975-975"];
m7_336 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="CollectionAssert.AreEquivalent(data, d)", span="976-976"];
m7_337 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="940-940"];
m7_125 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="263-263"];
m7_134 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m7_57 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="109-109"];
m7_264 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="779-779"];
m7_19 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="root = jsonWriter.Token", span="81-81"];
m7_89 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=1, file="JTokenWriterTest.cs", label="Assert.AreEqual(null, jsonWriter.CurrentToken)", prediction=41, span="148-148"];
m7_85 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414"];
m7_86 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", span="143-143"];
m7_88 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", prediction=60, span="147-147"];
m7_87 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="145-145"];
m7_90 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="jsonWriter.WriteStartObject()", span="150-150"];
m7_289 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", span="789-789"];
m7_388 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JTokenWriterTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m7_543 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1522-1522"];
m7_551 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="Assert.AreEqual(someValue, deserializedObject[contextKey])", span="1539-1539"];
m7_548 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n        {\r\n          Formatting = Formatting.Indented,\r\n          TypeNameHandling = TypeNameHandling.All\r\n        }", span="1530-1534"];
m7_544 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="string contextKey = ''k1''", span="1524-1524"];
m7_545 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="var someValue = Guid.NewGuid()", span="1525-1525"];
m7_550 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="1537-1537"];
m7_547 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="inputContext.Add(contextKey, someValue)", span="1528-1528"];
m7_549 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="1535-1535"];
m7_546 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="1527-1527"];
m7_552 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1522-1522"];
m7_118 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(a, jsonWriter.CurrentToken)", span="190-190"];
m7_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", span="143-143"];
m7_121 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(o, jsonWriter.CurrentToken)", span="194-194"];
m7_120 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="193-193"];
m7_119 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs", label="jsonWriter.WriteEndObject()", span="192-192"];
m7_123 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="107-107"];
m7_369 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", span="1066-1066"];
m7_513 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", span="1814-1814"];
m7_60 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="114-114"];
m7_361 [cluster="System.Console.WriteLine(string)", file="JTokenWriterTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_37 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85"];
m7_339 [cluster="Unk.AreEquivalent", file="JTokenWriterTest.cs", label="Entry Unk.AreEquivalent", span=""];
m7_46 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", span="248-248"];
m7_265 [cluster="Unk.IsNotNull", file="JTokenWriterTest.cs", label="Entry Unk.IsNotNull", span=""];
m7_263 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JTokenWriterTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m7_126 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", span="199-199"];
m7_127 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs", label="JTokenWriter writer = new JTokenWriter()", span="201-201"];
m7_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs", label="writer.WriteStartArray()", span="203-203"];
m7_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs", label="writer.WriteComment(''fail'')", span="204-204"];
m7_210 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="668-668"];
m7_213 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="JTokenWriterTest.cs", label="TypeFormat = typeFormat", span="670-670"];
m7_214 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="668-668"];
m7_297 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="895-895"];
m7_303 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="JTokenWriterTest.cs", label="count = 0", span="897-897"];
m7_304 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="895-895"];
m7_33 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(null, ((JValue)root[11]).Value)", span="97-97"];
m7_135 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m7_11 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(0.000000000000000001d)", span="72-72"];
m7_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs", label="StringAssert.AreEqual(@''[\r\n  /*fail*/]'', writer.Token.ToString())", span="207-208"];
m7_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs", label="writer.WriteEndArray()", span="205-205"];
m7_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", span="199-199"];
m7_12 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(0.000000000000000001m)", span="73-73"];
m7_14 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="75-75"];
m7_13 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue((string)null)", span="74-74"];
m7_15 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteNull()", span="76-76"];
m7_405 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="9339-9339"];
m7_379 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1086-1086"];
m7_385 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1094-1098"];
m7_384 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1093-1093"];
m7_380 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JTokenWriterTest.cs", label="TypeNameList<int> l = new TypeNameList<int>()", span="1088-1088"];
m7_383 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JTokenWriterTest.cs", label="l.Add(3)", span="1091-1091"];
m7_381 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JTokenWriterTest.cs", label="l.Add(1)", span="1089-1089"];
m7_382 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JTokenWriterTest.cs", label="l.Add(2)", span="1090-1090"];
m7_386 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1086-1086"];
m7_362 [cluster="System.Console.WriteLine()", file="JTokenWriterTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m7_40 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="278-278"];
m7_17 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(data)", span="78-78"];
m7_63 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="118-118"];
m7_67 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="124-124"];
m7_66 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="123-123"];
m7_64 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WriteStartArray()", span="120-120"];
m7_65 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="121-121"];
m7_68 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(new BigInteger(123))", span="127-127"];
m7_515 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1449-1449"];
m7_524 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1470-1483"];
m7_530 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1491-1491"];
m7_533 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1495-1495"];
m7_539 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1517-1517"];
m7_523 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="1469-1469"];
m7_525 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandlingDynamic d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1485-1485"];
m7_529 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="TestComponentSimple c = (TestComponentSimple)data3.one", span="1490-1490"];
m7_531 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="dynamic data4 = data3.two", span="1493-1493"];
m7_532 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="JObject o = (JObject)data4.one", span="1494-1494"];
m7_534 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}''", span="1497-1511"];
m7_538 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="o = (JObject)data4.one", span="1516-1516"];
m7_516 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandlingDynamic d1 = new PropertyItemTypeNameHandlingDynamic()", span="1451-1451"];
m7_522 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="d1.Data = (DynamicDictionary)data", span="1467-1467"];
m7_526 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Assert.IsNotNull(d2)", span="1486-1486"];
m7_527 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Assert.IsNotNull(d2.Data)", span="1487-1487"];
m7_528 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="dynamic data3 = d2.Data", span="1489-1489"];
m7_535 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1513-1513"];
m7_537 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="data4 = data3.two", span="1515-1515"];
m7_517 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="dynamic data = new DynamicDictionary()", span="1453-1453"];
m7_521 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="data.two = data2", span="1465-1465"];
m7_536 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="data3 = d2.Data", span="1514-1514"];
m7_518 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="data.one = new TestComponentSimple\r\n        {\r\n          MyProperty = 1\r\n        }", span="1454-1457"];
m7_520 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="data2.one = new TestComponentSimple\r\n        {\r\n          MyProperty = 2\r\n        }", span="1460-1463"];
m7_519 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="dynamic data2 = new DynamicDictionary()", span="1459-1459"];
m7_540 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1449-1449"];
m7_576 [cluster="Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", span="1688-1688"];
m7_368 [cluster="System.Version.Version(int, int, int, int)", file="JTokenWriterTest.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m7_10 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="jsonWriter.WriteValue(0.99)", span="71-71"];
m7_58 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="111-111"];
m7_565 [cluster="Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", span="1682-1682"];
m7_588 [cluster="Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", span="1655-1655"];
m7_360 [cluster="System.Enum.ToString()", file="JTokenWriterTest.cs", label="Entry System.Enum.ToString()", span="0-0"];
m7_564 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1671-1671"];
m7_593 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1671-1671"];
m7_92 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenWriterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m7_577 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1616-1616"];
m7_582 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''ParentProp'''': {\r\n    ''''c'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n      ''''p'''': ''''string!''''\r\n    }\r\n  }\r\n}'', json)", span="1639-1646"];
m7_586 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1651-1651"];
m7_580 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n        MissingMemberHandling = MissingMemberHandling.Ignore,\r\n        DefaultValueHandling = DefaultValueHandling.Ignore,\r\n        NullValueHandling = NullValueHandling.Ignore,\r\n        Formatting = Formatting.Indented\r\n      }", span="1628-1635"];
m7_581 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(pp, settings)", span="1637-1637"];
m7_583 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="ParentParent pp2 = JsonConvert.DeserializeObject<ParentParent>(json, settings)", span="1648-1648"];
m7_584 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="MyParent p2 = pp2.ParentProp", span="1649-1649"];
m7_585 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1650-1650"];
m7_579 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="pp.ParentProp = new MyParent\r\n      {\r\n        Child = new MyChild\r\n        {\r\n          MyProperty = ''string!''\r\n        }\r\n      }", span="1620-1626"];
m7_578 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="ParentParent pp = new ParentParent()", span="1618-1618"];
m7_587 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1616-1616"];
m7_32 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs", label="Assert.AreEqual(null, ((JValue)root[10]).Value)", span="96-96"];
m7_274 [cluster="Newtonsoft.Json.Tests.Serialization.Message.Message()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Message.Message()", span="1696-1696"];
m7_59 [cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="28-28"];
m7_62 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="691-691"];
m7_476 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1315-1315"];
m7_479 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''one'''': 1\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1339-1352"];
m7_481 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1355-1355"];
m7_488 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1379-1379"];
m7_494 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, (int) o[''MyProperty''])", span="1387-1387"];
m7_478 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1338-1338"];
m7_480 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandlingDictionary c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1354-1354"];
m7_482 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), c2.Data[''one''])", span="1357-1357"];
m7_487 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1378-1378"];
m7_489 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1381-1381"];
m7_493 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="JObject o = (JObject) c[''one'']", span="1386-1386"];
m7_477 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandlingDictionary c1 = new PropertyItemTypeNameHandlingDictionary()\r\n        {\r\n          Data = new Dictionary<string, object>\r\n            {\r\n              {\r\n                ''one'', new TestComponentSimple {MyProperty = 1}\r\n              },\r\n              {\r\n                ''two'', new Dictionary<string, object>\r\n                  {\r\n                    {\r\n                      ''one'', new Dictionary<string, object>\r\n                      {\r\n                        {''one'', 1}\r\n                      }\r\n                    }\r\n                  }\r\n              }\r\n            }\r\n        }", span="1317-1336"];
m7_483 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1358-1358"];
m7_484 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="Dictionary<string, object> c = (Dictionary<string, object>)c2.Data[''two'']", span="1359-1359"];
m7_486 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 1\r\n      }\r\n    }\r\n  }\r\n}''", span="1362-1376"];
m7_490 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1382-1382"];
m7_491 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="c = (Dictionary<string, object>)c2.Data[''two'']", span="1383-1383"];
m7_492 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1384-1384"];
m7_485 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (JObject), c[''one''])", span="1360-1360"];
m7_495 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1315-1315"];
m7_9 [cluster="System.Text.StringBuilder.Append(string)", file="JTokenWriterTest.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m7_18 [cluster="System.Text.StringBuilder.ToString()", file="JTokenWriterTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_497 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1391-1391"];
m7_500 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''Prop3'''': 3,\r\n    ''''Prop4'''': {}\r\n  }\r\n}'', json)", span="1414-1431"];
m7_510 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="Assert.AreEqual(1, (int)j[''MyProperty''])", span="1444-1444"];
m7_499 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1413-1413"];
m7_501 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandlingObject o2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingObject>(json)", span="1433-1433"];
m7_509 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="JObject j = (JObject)o[0]", span="1443-1443"];
m7_498 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="PropertyItemTypeNameHandlingObject o1 = new PropertyItemTypeNameHandlingObject\r\n        {\r\n          Data = new TypeNameHandlingTestObject\r\n            {\r\n              Prop1 = new List<object>\r\n                {\r\n                  new TestComponentSimple\r\n                    {\r\n                      MyProperty = 1\r\n                    }\r\n                },\r\n              Prop2 = new TestComponentSimple\r\n                {\r\n                  MyProperty = 1\r\n                },\r\n              Prop3 = 3,\r\n              Prop4 = new JObject()\r\n            }\r\n        }", span="1393-1411"];
m7_502 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="Assert.IsNotNull(o2)", span="1434-1434"];
m7_503 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="Assert.IsNotNull(o2.Data)", span="1435-1435"];
m7_504 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), o2.Data.Prop1)", span="1437-1437"];
m7_505 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Data.Prop2)", span="1438-1438"];
m7_506 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(long), o2.Data.Prop3)", span="1439-1439"];
m7_507 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.Data.Prop4)", span="1440-1440"];
m7_508 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="List<object> o = (List<object>)o2.Data.Prop1", span="1442-1442"];
m7_511 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1391-1391"];
m7_347 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1759-1759"];
m7_611 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="JTokenWriterTest.cs", label="this.Name = name", span="1761-1761"];
m7_612 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1759-1759"];
m7_630 [cluster="string.Equals(string)", file="JTokenWriterTest.cs", label="Entry string.Equals(string)", span="0-0"];
m7_298 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="888-888"];
m7_299 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JTokenWriterTest.cs", label="this.value = value", span="890-890"];
m7_300 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JTokenWriterTest.cs", label="this.next = next", span="891-891"];
m7_301 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JTokenWriterTest.cs", label="count = this.next.count + 1", span="892-892"];
m7_302 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="888-888"];
m7_389 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1102-1102"];
m7_397 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee, Newtonsoft.Json.Tests'''',\r\n    ''''FirstName'''': null,\r\n    ''''LastName'''': null,\r\n    ''''BirthDate'''': ''''2000-12-12T12:12:12Z'''',\r\n    ''''Department'''': ''''Department!'''',\r\n    ''''JobTitle'''': null\r\n  },\r\n  ''''String!'''',\r\n  9223372036854775807\r\n]'', json)", span="1117-1132"];
m7_399 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="Assert.AreEqual(4, l2.Count)", span="1135-1135"];
m7_393 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="l.Add(new Employee\r\n        {\r\n          BirthDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          Department = ''Department!''\r\n        })", span="1108-1112"];
m7_396 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1116-1116"];
m7_398 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="TypeNameList<object> l2 = JsonConvert.DeserializeObject<TypeNameList<object>>(json)", span="1134-1134"];
m7_400 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), l2[0])", span="1137-1137"];
m7_391 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="TypeNameList<object> l = new TypeNameList<object>()", span="1106-1106"];
m7_392 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="l.Add(c1)", span="1107-1107"];
m7_394 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="l.Add(''String!'')", span="1113-1113"];
m7_395 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="l.Add(long.MaxValue)", span="1114-1114"];
m7_401 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (Employee), l2[1])", span="1138-1138"];
m7_402 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (string), l2[2])", span="1139-1139"];
m7_403 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="CustomAssert.IsInstanceOfType(typeof (long), l2[3])", span="1140-1140"];
m7_390 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="var c1 = new TestComponentSimple()", span="1104-1104"];
m7_404 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1102-1102"];
m7_613 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1764-1764"];
m7_614 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="this.Name = info.GetString(''name'')", span="1766-1766"];
m7_615 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1764-1764"];
m7_589 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1666-1666"];
m7_590 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Child = (ISomeBase)info.GetValue(''c'', typeof(ISomeBase))", span="1668-1668"];
m7_591 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1666-1666"];
m7_219 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="JTokenWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="679-679"];
m7_220 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="JTokenWriterTest.cs", label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="681-681"];
m7_221 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="JTokenWriterTest.cs", label="return Type.GetType(resolvedTypeName, true);", span="683-683"];
m7_222 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="JTokenWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="679-679"];
m7_638 [file="JTokenWriterTest.cs", label=json, span=""];
m7_642 [file="JTokenWriterTest.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", span=""];
m7_640 [file="JTokenWriterTest.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", span=""];
m7_637 [file="JTokenWriterTest.cs", label=sb, span=""];
m7_641 [file="JTokenWriterTest.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", span=""];
m7_645 [file="JTokenWriterTest.cs", label="Newtonsoft.Json.Tests.Serialization.Example", span=""];
m7_643 [file="JTokenWriterTest.cs", label="Newtonsoft.Json.Tests.Serialization.MyParent", span=""];
m8_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JValue.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="149-149"];
m8_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="272-272"];
m8_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="803-803"];
m8_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="808-808"];
m8_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="811-811"];
m8_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(2, reader.Depth)", span="815-815"];
m8_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="819-819"];
m8_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="823-823"];
m8_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="826-826"];
m8_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="804-804"];
m8_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="841-841"];
m8_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(2, reader.Depth)", span="805-805"];
m8_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="806-806"];
m8_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="809-809"];
m8_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(2, reader.Depth)", span="810-810"];
m8_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="813-813"];
m8_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="814-814"];
m8_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="816-816"];
m8_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="818-818"];
m8_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(3, reader.Depth)", span="820-820"];
m8_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="821-821"];
m8_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="824-824"];
m8_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="828-828"];
m8_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="712-712"];
m8_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JValue.cs", label="ExceptionAssert.Throws<ArgumentNullException> (\r\n                () => { new JsonTextReader (null); },\r\n                new string[] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="843-848"];
m8_511 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="844-844"];
m8_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="841-841"];
m8_512 [cluster="lambda expression", file="JValue.cs", label="new JsonTextReader (null)", span="844-844"];
m8_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="829-829"];
m8_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual('''', reader.Path)", span="836-836"];
m8_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(1, reader.Depth)", span="830-830"];
m8_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(0, reader.Depth)", span="835-835"];
m8_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="831-831"];
m8_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="834-834"];
m8_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="833-833"];
m8_513 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="844-844"];
m8_40 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return ValuesEquals(this, other);", span="207-207"];
m8_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="896-896"];
m8_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="898-898"];
m8_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="899-899"];
m8_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1120-1120"];
m8_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1122-1122"];
m8_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'')", span="1124-1124"];
m8_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1120-1120"];
m8_988 [cluster="System.Text.StringBuilder.StringBuilder()", file="JValue.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m8_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="writer.WriteEndArray()", span="880-880"];
m8_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="string json = sw.ToString()", span="882-882"];
m8_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="884-884"];
m8_137 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="TimeSpan ts1 = (TimeSpan)objA", span="395-395"];
m8_138 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="TimeSpan ts2 = (TimeSpan)objB", span="396-396"];
m8_139 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return ts1.CompareTo(ts2);", span="398-398"];
m8_140 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''valueType'', valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="400-400"];
m8_141 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248"];
m8_143 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="404-404"];
m8_144 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m8_145 [cluster="long.CompareTo(long)", file="JValue.cs", label="Entry long.CompareTo(long)", span="0-0"];
m8_146 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m8_147 [cluster="string.CompareOrdinal(string, string)", file="JValue.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m8_148 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m8_149 [cluster="bool.CompareTo(bool)", file="JValue.cs", label="Entry bool.CompareTo(bool)", span="0-0"];
m8_150 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m8_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1562-1562"];
m8_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1564-1568"];
m8_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="StringReader sr = new StringReader(input)", span="1570-1570"];
m8_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1572-1572"];
m8_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="jsonReader.Read()", span="1574-1574"];
m8_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1575-1575"];
m8_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="jsonReader.Read()", span="1577-1577"];
m8_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1578-1578"];
m8_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1579-1579"];
m8_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="jsonReader.Read()", span="1581-1581"];
m8_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1582-1582"];
m8_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1583-1583"];
m8_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="jsonReader.Read()", span="1585-1585"];
m8_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1586-1586"];
m8_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1587-1587"];
m8_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="jsonReader.Read()", span="1589-1589"];
m8_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1590-1590"];
m8_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1562-1562"];
m8_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2103-2103"];
m8_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2105-2105"];
m8_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2107-2107"];
m8_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2109-2109"];
m8_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2110-2110"];
m8_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2112-2112"];
m8_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2113-2113"];
m8_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="2115-2115"];
m8_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2116-2116"];
m8_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2117-2117"];
m8_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2118-2118"];
m8_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2120-2120"];
m8_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2121-2121"];
m8_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2103-2103"];
m8_25 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="304-304"];
m8_1368 [cluster="System.TimeSpan.FromMinutes(double)", file="JValue.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m8_711 [cluster="Unk.IsNull", file="JValue.cs", label="Entry Unk.IsNull", span=""];
m8_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1158-1158"];
m8_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1160-1160"];
m8_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1162-1188"];
m8_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="StringReader sr = new StringReader(newLinesText)", span="1191-1191"];
m8_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1203-1203"];
m8_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1223-1223"];
m8_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="int count = 0", span="1190-1190"];
m8_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1197-1197"];
m8_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="count++", span="1194-1194"];
m8_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="sr.ReadLine() != null", span="1192-1192"];
m8_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1198-1198"];
m8_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1199-1199"];
m8_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1201-1201"];
m8_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1202-1202"];
m8_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1205-1205"];
m8_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1206-1206"];
m8_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1208-1208"];
m8_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1209-1209"];
m8_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1210-1210"];
m8_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1211-1211"];
m8_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1213-1213"];
m8_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1214-1214"];
m8_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(1L, reader.Value)", span="1215-1215"];
m8_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1217-1217"];
m8_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1218-1218"];
m8_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(null, reader.Value)", span="1219-1219"];
m8_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1221-1221"];
m8_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1222-1222"];
m8_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1225-1225"];
m8_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1226-1226"];
m8_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1228-1228"];
m8_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1229-1229"];
m8_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1231-1231"];
m8_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1232-1232"];
m8_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1234-1234"];
m8_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1235-1235"];
m8_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1236-1236"];
m8_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1238-1238"];
m8_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1239-1239"];
m8_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1241-1241"];
m8_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1242-1242"];
m8_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1244-1244"];
m8_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1245-1245"];
m8_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1158-1158"];
m8_701 [cluster="System.Convert.ToBase64String(byte[])", file="JValue.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m8_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2569-2569"];
m8_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JValue.cs", label="string json = ''new Date,()''", span="2571-2571"];
m8_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2572-2572"];
m8_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2574-2574"];
m8_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2569-2569"];
m8_57 [cluster="System.Math.Truncate(decimal)", file="JValue.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m8_58 [cluster="System.Math.Abs(decimal)", file="JValue.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m8_75 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is BigInteger", span="271-271"];
m8_60 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m8_61 [cluster="System.Math.Truncate(double)", file="JValue.cs", label="Entry System.Math.Truncate(double)", span="0-0"];
m8_62 [cluster="System.Math.Abs(double)", file="JValue.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m8_63 [cluster="double.CompareTo(double)", file="JValue.cs", label="Entry double.CompareTo(double)", span="0-0"];
m8_64 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248"];
m8_65 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA == null && objB == null", span="250-250"];
m8_66 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 0;", span="252-252"];
m8_67 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA != null && objB == null", span="254-254"];
m8_68 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 1;", span="256-256"];
m8_69 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA == null && objB != null", span="258-258"];
m8_70 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -1;", span="260-260"];
m8_71 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label=valueType, span="263-263"];
m8_72 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Integer", span="265-265"];
m8_73 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is BigInteger", span="267-267"];
m8_74 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="269-269"];
m8_76 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="273-273"];
m8_77 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="276-276"];
m8_78 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="278-278"];
m8_1418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2176-2176"];
m8_1419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="string json = @''{''''Name'''':1}''", span="2178-2178"];
m8_1420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2180-2180"];
m8_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2182-2182"];
m8_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2183-2183"];
m8_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2185-2185"];
m8_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2186-2186"];
m8_1425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="reader.ReadAsDecimal()", span="2188-2188"];
m8_1426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2189-2189"];
m8_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2190-2190"];
m8_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Assert.AreEqual(1m, reader.Value)", span="2191-2191"];
m8_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2176-2176"];
m8_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="StringReader sr = new StringReader(input)", span="720-720"];
m8_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JValue.cs", label="return s;", span="470-470"];
m8_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="461-461"];
m8_278 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JValue.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m8_295 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="632-632"];
m8_296 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is BigInteger", span="635-635"];
m8_297 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="637-637"];
m8_298 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is double || value is float || value is decimal", span="640-640"];
m8_299 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Float;", span="642-642"];
m8_319 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return JTokenType.String;", span="682-682"];
m8_1401 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JValue.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m8_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JValue.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="691-691"];
m8_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="296-296"];
m8_1369 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JValue.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m8_26 [cluster="Unk.IsTrue", file="JValue.cs", label="Entry Unk.IsTrue", span=""];
m8_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2966-2966"];
m8_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JValue.cs", label="string json = ''[[]]''", span="2968-2968"];
m8_1929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2970-2973"];
m8_1930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2975-2975"];
m8_1931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2977-2977"];
m8_1932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2966-2966"];
m8_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual('''', reader.Path)", span="729-729"];
m8_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JValue.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="699-699"];
m8_996 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="940-940"];
m8_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JValue.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="686-686"];
m8_81 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="286-286"];
m8_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="905-905"];
m8_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="907-907"];
m8_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="908-908"];
m8_1049 [cluster="System.Convert.ToInt32(char)", file="JValue.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m8_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1942-1942"];
m8_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1944-1944"];
m8_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="1946-1946"];
m8_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1942-1942"];
m8_1135 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JValue.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m8_2068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3160-3160"];
m8_2069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3162-3162"];
m8_2070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3163-3163"];
m8_2072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="toggleReaderError.Error = true", span="3167-3167"];
m8_2075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="toggleReaderError.Error = false", span="3172-3172"];
m8_2078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="toggleReaderError.Error = true", span="3177-3177"];
m8_2080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="toggleReaderError.Error = false", span="3181-3181"];
m8_2083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="toggleReaderError.Error = true", span="3186-3186"];
m8_2087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="toggleReaderError.Error = false", span="3192-3192"];
m8_2071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3165-3165"];
m8_2073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3169-3169"];
m8_2074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3170-3170"];
m8_2076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3174-3174"];
m8_2077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3175-3175"];
m8_2079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3179-3179"];
m8_2081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3183-3183"];
m8_2082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3184-3184"];
m8_2084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3188-3188"];
m8_2085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3189-3189"];
m8_2086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3190-3190"];
m8_2088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3160-3160"];
m8_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JValue.cs", label="Assert.AreEqual(s, reader.Value)", span="866-866"];
m8_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="860-860"];
m8_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="870-870"];
m8_527 [cluster="string.String(char, int)", file="JValue.cs", label="Entry string.String(char, int)", span="0-0"];
m8_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="int valueCount = 10000", span="872-872"];
m8_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="874-874"];
m8_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="StringWriter sw = new StringWriter()", span="873-873"];
m8_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="writer.WriteStartArray()", span="875-875"];
m8_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JValue.cs", label="jsonReader.Read()", span="702-702"];
m8_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="67-67"];
m8_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="69-69"];
m8_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="458-458"];
m8_255 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="547-547"];
m8_868 [cluster="int.ToString()", file="JValue.cs", label="Entry int.ToString()", span="0-0"];
m8_1925 [cluster="double.ToString(System.IFormatProvider)", file="JValue.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m8_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1112-1112"];
m8_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1114-1114"];
m8_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1116-1116"];
m8_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1112-1112"];
m8_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1820-1820"];
m8_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1822-1822"];
m8_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1823-1823"];
m8_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1825-1825"];
m8_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1826-1826"];
m8_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="jsonReader.ReadAsInt32()", span="1828-1828"];
m8_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1829-1829"];
m8_1182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1830-1830"];
m8_1183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1831-1831"];
m8_1184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="jsonReader.ReadAsInt32()", span="1833-1833"];
m8_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1834-1834"];
m8_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1835-1835"];
m8_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1836-1836"];
m8_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="jsonReader.ReadAsInt32()", span="1838-1838"];
m8_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1839-1839"];
m8_1190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1840-1840"];
m8_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1841-1841"];
m8_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1843-1843"];
m8_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1844-1844"];
m8_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Assert.IsFalse(jsonReader.Read())", span="1846-1846"];
m8_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1820-1820"];
m8_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2578-2578"];
m8_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2580-2580"];
m8_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2581-2581"];
m8_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2583-2583"];
m8_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2584-2584"];
m8_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2586-2586"];
m8_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2587-2587"];
m8_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2589-2589"];
m8_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2590-2590"];
m8_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2592-2592"];
m8_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2593-2593"];
m8_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2595-2595"];
m8_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2596-2596"];
m8_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2598-2598"];
m8_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2599-2599"];
m8_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2601-2601"];
m8_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2602-2602"];
m8_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2604-2604"];
m8_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2605-2605"];
m8_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2607-2607"];
m8_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2608-2608"];
m8_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="2610-2610"];
m8_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2578-2578"];
m8_2089 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3258-3258"];
m8_2134 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JValue.cs", label="_inner = inner", span="3260-3260"];
m8_2135 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3258-3258"];
m8_1516 [cluster="System.DateTime.DateTime(long)", file="JValue.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m8_79 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is float || objB is float || objA is double || objB is double", span="280-280"];
m8_162 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="292-292"];
m8_163 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="296-296"];
m8_164 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsDecimal()", span="296-296"];
m8_166 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="331-331"];
m8_165 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="296-296"];
m8_167 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="300-300"];
m8_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="979-979"];
m8_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="long i = int.MaxValue", span="981-981"];
m8_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="983-983"];
m8_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="long total = j + i", span="989-989"];
m8_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="reader.Read()", span="984-984"];
m8_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="985-985"];
m8_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="990-994"];
m8_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="int j = 1", span="987-987"];
m8_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="j < 1000", span="987-987"];
m8_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="j++", span="987-987"];
m8_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="979-979"];
m8_2065 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JValue.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m8_301 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Date;", span="646-646"];
m8_302 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is DateTimeOffset", span="649-649"];
m8_303 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Date;", span="651-651"];
m8_304 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is byte[]", span="654-654"];
m8_305 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Bytes;", span="656-656"];
m8_306 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is bool", span="658-658"];
m8_307 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Boolean;", span="660-660"];
m8_308 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Guid", span="662-662"];
m8_309 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Guid;", span="664-664"];
m8_310 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Uri", span="666-666"];
m8_311 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Uri;", span="668-668"];
m8_312 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is TimeSpan", span="670-670"];
m8_313 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.TimeSpan;", span="672-672"];
m8_314 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="675-675"];
m8_315 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="609-609"];
m8_316 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="678-678"];
m8_317 [cluster="object.GetType()", file="JValue.cs", label="Entry object.GetType()", span="0-0"];
m8_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1149-1149"];
m8_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1151-1151"];
m8_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1152-1152"];
m8_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1154-1154"];
m8_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1149-1149"];
m8_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1595-1595"];
m8_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="int length = 20000", span="1597-1597"];
m8_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1598-1598"];
m8_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1600-1600"];
m8_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="reader.Read()", span="1602-1602"];
m8_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1603-1603"];
m8_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="reader.Read()", span="1605-1605"];
m8_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1606-1606"];
m8_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1607-1607"];
m8_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1608-1608"];
m8_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1610-1610"];
m8_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1611-1611"];
m8_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="1613-1613"];
m8_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1614-1614"];
m8_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1595-1595"];
m8_554 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1141-1141"];
m8_2126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3226-3226"];
m8_2127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JValue.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="3228-3238"];
m8_2128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies.['System.Xml.ReaderWriter'].source', line 6, position 21.'')", span="3240-3248"];
m8_2129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3226-3226"];
m8_294 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Enum", span="630-630"];
m8_2160 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="JValue.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m8_0 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m8_1 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="_value = value", span="53-53"];
m8_2 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="_valueType = type", span="54-54"];
m8_3 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m8_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="70-70"];
m8_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="72-72"];
m8_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="73-73"];
m8_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="75-75"];
m8_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="76-76"];
m8_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(''src'', jsonTextReader.Value)", span="77-77"];
m8_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="79-79"];
m8_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, jsonTextReader.TokenType)", span="80-80"];
m8_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(@'''''''', jsonTextReader.Value)", span="81-81"];
m8_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="83-83"];
m8_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="84-84"];
m8_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(''test'', jsonTextReader.Value)", span="85-85"];
m8_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="87-87"];
m8_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="88-88"];
m8_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="90-90"];
m8_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="91-91"];
m8_22 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="55-55"];
m8_2159 [cluster="System.Math.Min(int, int)", file="JValue.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m8_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="914-914"];
m8_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="916-916"];
m8_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="917-917"];
m8_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(1, reader.Depth)", span="733-733"];
m8_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="737-737"];
m8_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''value'', reader.Path)", span="734-734"];
m8_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="736-736"];
m8_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="738-738"];
m8_841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1383-1383"];
m8_842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="JsonTextReader reader = null", span="1385-1385"];
m8_843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1387-1387"];
m8_844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1388-1388"];
m8_845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1390-1390"];
m8_846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1391-1391"];
m8_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1393-1393"];
m8_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1394-1394"];
m8_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1396-1396"];
m8_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1397-1397"];
m8_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1399-1399"];
m8_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1400-1400"];
m8_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1402-1402"];
m8_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1403-1403"];
m8_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1405-1405"];
m8_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1406-1406"];
m8_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1408-1408"];
m8_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1409-1409"];
m8_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1411-1411"];
m8_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1412-1412"];
m8_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1414-1414"];
m8_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1415-1415"];
m8_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1417-1417"];
m8_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1418-1418"];
m8_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1420-1420"];
m8_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1421-1421"];
m8_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1383-1383"];
m8_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2890-2890"];
m8_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2892-2892"];
m8_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2893-2893"];
m8_1875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2894-2894"];
m8_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="2896-2896"];
m8_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2890-2890"];
m8_243 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is int || objA is uint || objA is long || objA is short || objA is ushort || objA is sbyte || objA is byte ||\r\n                         objB is int || objB is uint || objB is long || objB is short || objB is ushort || objB is sbyte || objB is byte", span="528-529"];
m8_244 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="531-531"];
m8_245 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="533-533"];
m8_246 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="534-534"];
m8_247 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="long l1 = Convert.ToInt64(objA, CultureInfo.InvariantCulture)", span="537-537"];
m8_248 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="long l2 = Convert.ToInt64(objB, CultureInfo.InvariantCulture)", span="538-538"];
m8_249 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="540-540"];
m8_250 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="542-542"];
m8_251 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="543-543"];
m8_252 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 + l2", span="544-544"];
m8_253 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="545-545"];
m8_254 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="546-546"];
m8_1154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1790-1790"];
m8_1155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1792-1792"];
m8_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1793-1793"];
m8_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1795-1795"];
m8_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1796-1796"];
m8_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="jsonReader.Read()", span="1798-1798"];
m8_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1799-1799"];
m8_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1800-1800"];
m8_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1801-1801"];
m8_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="jsonReader.Read()", span="1803-1803"];
m8_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1804-1804"];
m8_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1805-1805"];
m8_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1806-1806"];
m8_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="jsonReader.Read()", span="1808-1808"];
m8_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1809-1809"];
m8_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1810-1810"];
m8_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1811-1811"];
m8_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1813-1813"];
m8_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1814-1814"];
m8_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Assert.IsFalse(jsonReader.Read())", span="1816-1816"];
m8_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1790-1790"];
m8_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="910-910"];
m8_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="911-911"];
m8_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="913-913"];
m8_38 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="other == this", span="202-202"];
m8_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1860-1860"];
m8_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1862-1862"];
m8_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JValue.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1864-1864"];
m8_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1865-1865"];
m8_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1860-1860"];
m8_657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1062-1062"];
m8_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1064-1077"];
m8_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1079-1079"];
m8_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="int i = 0", span="1084-1084"];
m8_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1086-1086"];
m8_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1089-1089"];
m8_665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1090-1090"];
m8_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1091-1091"];
m8_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="i < 14", span="1084-1084"];
m8_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="i++", span="1084-1084"];
m8_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1062-1062"];
m8_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1641-1641"];
m8_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1643-1644"];
m8_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1646-1646"];
m8_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1648-1648"];
m8_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1649-1649"];
m8_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1651-1651"];
m8_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1652-1652"];
m8_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1653-1653"];
m8_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1655-1655"];
m8_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1656-1656"];
m8_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1657-1657"];
m8_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1659-1659"];
m8_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1660-1660"];
m8_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1661-1661"];
m8_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1663-1663"];
m8_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1664-1664"];
m8_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1665-1665"];
m8_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1667-1667"];
m8_1068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1668-1668"];
m8_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1669-1669"];
m8_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1671-1671"];
m8_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1672-1672"];
m8_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1673-1673"];
m8_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1675-1675"];
m8_1074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1676-1676"];
m8_1075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1677-1677"];
m8_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1679-1679"];
m8_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1680-1680"];
m8_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1681-1681"];
m8_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1683-1683"];
m8_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1684-1684"];
m8_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1685-1685"];
m8_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1687-1687"];
m8_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1688-1688"];
m8_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1689-1689"];
m8_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1691-1691"];
m8_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1692-1692"];
m8_1087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1693-1693"];
m8_1088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1695-1695"];
m8_1089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1696-1696"];
m8_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1697-1697"];
m8_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1699-1699"];
m8_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1700-1700"];
m8_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1701-1701"];
m8_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1703-1703"];
m8_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1704-1704"];
m8_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1705-1705"];
m8_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1707-1707"];
m8_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1708-1708"];
m8_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1709-1709"];
m8_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1711-1711"];
m8_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1712-1712"];
m8_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1713-1713"];
m8_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1715-1715"];
m8_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1716-1716"];
m8_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1717-1717"];
m8_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1719-1719"];
m8_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1720-1720"];
m8_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1721-1721"];
m8_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="jsonReader.Read()", span="1723-1723"];
m8_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1724-1724"];
m8_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1641-1641"];
m8_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2150-2150"];
m8_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2152-2152"];
m8_1404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2154-2154"];
m8_1405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2155-2155"];
m8_1406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2157-2157"];
m8_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2158-2158"];
m8_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2160-2160"];
m8_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2161-2161"];
m8_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="2163-2163"];
m8_1411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2164-2164"];
m8_1412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2165-2165"];
m8_1413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2167-2167"];
m8_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2170-2170"];
m8_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2171-2171"];
m8_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2168-2168"];
m8_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2150-2150"];
m8_552 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="387-387"];
m8_553 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m8_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JValue.cs", label="Assert.AreEqual(30, jsonReader.LinePosition)", span="695-695"];
m8_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JValue.cs", label="jsonReader.Read()", span="697-697"];
m8_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="reader.Close()", span="480-480"];
m8_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="Assert.IsFalse(ms.CanRead)", span="481-481"];
m8_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="484-484"];
m8_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="reader.Close()", span="487-487"];
m8_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="Assert.IsTrue(ms.CanRead)", span="488-488"];
m8_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="474-474"];
m8_300 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m8_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="ms = new MemoryStream()", span="483-483"];
m8_293 [cluster="System.IO.MemoryStream.MemoryStream()", file="JValue.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m8_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="Assert.IsTrue(ms.CanRead)", span="486-486"];
m8_95 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="194-194"];
m8_96 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.ReadAsInt32()", span="194-194"];
m8_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 42.'')", span="217-217"];
m8_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="228-228"];
m8_80 [cluster="Unk.IsFalse", file="JValue.cs", label="Entry Unk.IsFalse", span=""];
m8_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="182-184"];
m8_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="186-186"];
m8_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="188-188"];
m8_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="189-189"];
m8_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="191-191"];
m8_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="197-197"];
m8_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="199-199"];
m8_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="203-203"];
m8_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="205-210"];
m8_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="214-214"];
m8_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="215-215"];
m8_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 3.'')", span="221-221"];
m8_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="225-225"];
m8_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="226-226"];
m8_113 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.ReadAsInt32()", span="217-217"];
m8_115 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="219-219"];
m8_116 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.ReadAsInt32()", span="219-219"];
m8_123 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="223-223"];
m8_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="234-236"];
m8_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="238-238"];
m8_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="243-243"];
m8_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="jsonTextReader.ReadAsBytes()", span="248-248"];
m8_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label=FormatException, span="250-250"];
m8_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="257-257"];
m8_94 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354"];
m8_97 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="194-194"];
m8_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 6.'')", span="219-219"];
m8_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="203-203"];
m8_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="180-180"];
m8_114 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="217-217"];
m8_121 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="223-223"];
m8_118 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="221-221"];
m8_120 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="221-221"];
m8_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="232-232"];
m8_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="240-240"];
m8_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="244-244"];
m8_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="254-254"];
m8_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="232-232"];
m8_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="180-180"];
m8_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="192-192"];
m8_98 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="340-340"];
m8_112 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="217-217"];
m8_122 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.ReadAsInt32()", span="223-223"];
m8_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="241-241"];
m8_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="255-255"];
m8_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="196-196"];
m8_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="212-212"];
m8_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 5.'')", span="223-223"];
m8_117 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="219-219"];
m8_119 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.ReadAsInt32()", span="221-221"];
m8_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 53.'')", span="194-194"];
m8_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(null, reader.Value)", span="779-779"];
m8_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2481-2481"];
m8_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JValue.cs", label="string json = ''[true ''", span="2483-2483"];
m8_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2484-2484"];
m8_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2486-2486"];
m8_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2487-2487"];
m8_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="2488-2488"];
m8_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2481-2481"];
m8_835 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703"];
m8_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1104-1104"];
m8_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1106-1106"];
m8_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1108-1108"];
m8_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1104-1104"];
m8_212 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="487-487"];
m8_213 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="488-488"];
m8_214 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 * d2", span="489-489"];
m8_215 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="490-490"];
m8_216 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="491-491"];
m8_217 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="492-492"];
m8_218 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 / d2", span="493-493"];
m8_219 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="494-494"];
m8_2143 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="3278-3278"];
m8_2144 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JValue.cs", label="bytes = content", span="3280-3280"];
m8_2146 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JValue.cs", label="this.bytesPerRead = bytesPerRead", span="3282-3282"];
m8_2145 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JValue.cs", label="totalBytesRead = 0", span="3281-3281"];
m8_2147 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="3278-3278"];
m8_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="766-766"];
m8_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="771-771"];
m8_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(1L, reader.Value)", span="773-773"];
m8_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="777-777"];
m8_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="772-772"];
m8_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(3, reader.Depth)", span="774-774"];
m8_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="775-775"];
m8_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="778-778"];
m8_558 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1151-1151"];
m8_559 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="return (long)this;", span="1153-1153"];
m8_560 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1151-1151"];
m8_570 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1171-1171"];
m8_571 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="return (decimal)this;", span="1173-1173"];
m8_572 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1171-1171"];
m8_573 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1176-1176"];
m8_574 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="return (DateTime)this;", span="1178-1178"];
m8_575 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1176-1176"];
m8_576 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1181-1181"];
m8_577 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="return ToObject(conversionType);", span="1183-1183"];
m8_578 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1181-1181"];
m8_579 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1931-1931"];
m8_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Newtonsoft.Json.Linq.JValue", span=""];
m8_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="935-935"];
m8_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="936-936"];
m8_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="937-937"];
m8_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="939-939"];
m8_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="896-896"];
m8_170 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is string || objB is string", span="421-421"];
m8_171 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="operation == ExpressionType.Add || operation == ExpressionType.AddAssign", span="423-423"];
m8_172 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = ((objA != null) ? objA.ToString() : null) + ((objB != null) ? objB.ToString() : null)", span="425-425"];
m8_173 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="426-426"];
m8_174 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is BigInteger || objB is BigInteger", span="431-431"];
m8_175 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="433-433"];
m8_176 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="435-435"];
m8_177 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="436-436"];
m8_178 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="BigInteger i1 = ConvertUtils.ToBigInteger(objA)", span="441-441"];
m8_179 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="BigInteger i2 = ConvertUtils.ToBigInteger(objB)", span="442-442"];
m8_180 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="444-444"];
m8_181 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="446-446"];
m8_182 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="447-447"];
m8_39 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return true;", span="204-204"];
m8_836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1352-1352"];
m8_837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JValue.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1354-1374"];
m8_838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1376-1376"];
m8_839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JValue.cs", label="reader.Read()", span="1377-1377"];
m8_840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1352-1352"];
m8_989 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JValue.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m8_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2510-2510"];
m8_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JValue.cs", label="string json = ''{hi:1, ''", span="2512-2512"];
m8_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2513-2513"];
m8_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2515-2515"];
m8_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2516-2516"];
m8_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2517-2517"];
m8_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="2518-2518"];
m8_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2510-2510"];
m8_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2227-2227"];
m8_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2229-2229"];
m8_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2231-2231"];
m8_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2227-2227"];
m8_318 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3285-3285"];
m8_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="550-550"];
m8_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="550-550"];
m8_325 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="560-565"];
m8_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JValue.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="552-556"];
m8_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'')", span="560-565"];
m8_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="558-558"];
m8_326 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="562-562"];
m8_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JValue.cs", label="Assert.AreEqual(2, jsonReader.LinePosition)", span="705-705"];
m8_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="286-286"];
m8_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1139-1139"];
m8_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1141-1141"];
m8_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1142-1142"];
m8_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JValue.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1144-1144"];
m8_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JValue.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1145-1145"];
m8_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1139-1139"];
m8_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JValue.cs", label="string json = ''0aq2dun13.hod''", span="288-288"];
m8_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(1, reader.Depth)", span="750-750"];
m8_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''array'', reader.Path)", span="751-751"];
m8_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="754-754"];
m8_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="753-753"];
m8_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(1L, reader.Value)", span="755-755"];
m8_346 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="756-756"];
m8_347 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Integer", span="757-757"];
m8_348 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is int", span="758-758"];
m8_349 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((int)_value)", span="760-760"];
m8_350 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is long", span="762-762"];
m8_764 [cluster="System.IO.StringReader.ReadLine()", file="JValue.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m8_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1425-1425"];
m8_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="JsonTextReader reader = null", span="1427-1427"];
m8_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1429-1429"];
m8_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1430-1430"];
m8_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1432-1432"];
m8_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1433-1433"];
m8_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1435-1435"];
m8_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1436-1436"];
m8_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1438-1438"];
m8_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1439-1439"];
m8_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1441-1441"];
m8_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1442-1442"];
m8_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1444-1444"];
m8_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1445-1445"];
m8_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1446-1446"];
m8_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1448-1448"];
m8_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1449-1449"];
m8_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1451-1451"];
m8_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1452-1452"];
m8_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1454-1454"];
m8_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1455-1455"];
m8_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1425-1425"];
m8_359 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is decimal", span="782-782"];
m8_360 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((decimal)_value)", span="784-784"];
m8_361 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is double", span="786-786"];
m8_362 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((double)_value)", span="788-788"];
m8_363 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is float", span="790-790"];
m8_364 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((float)_value)", span="792-792"];
m8_365 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="796-796"];
m8_366 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="798-798"];
m8_367 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.String", span="799-799"];
m8_368 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="800-800"];
m8_369 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="801-801"];
m8_370 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Boolean", span="802-802"];
m8_371 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="803-803"];
m8_372 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="804-804"];
m8_373 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Date", span="805-805"];
m8_374 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is DateTimeOffset", span="807-807"];
m8_375 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((DateTimeOffset)_value)", span="809-809"];
m8_376 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="814-814"];
m8_377 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="816-816"];
m8_378 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Bytes", span="817-817"];
m8_379 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((byte[])_value)", span="818-818"];
m8_380 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="819-819"];
m8_381 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Guid", span="820-820"];
m8_382 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", color=green, community=0, file="JValue.cs", label="writer.WriteValue((_value != null) ? (Guid?)_value : null)", prediction=61, span="821-821"];
m8_383 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", color=green, community=0, file="JValue.cs", label="return;", prediction=61, span="822-822"];
m8_384 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.TimeSpan", span="823-823"];
m8_385 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", color=green, community=0, file="JValue.cs", label="writer.WriteValue((_value != null) ? (TimeSpan?)_value : null)", prediction=61, span="824-824"];
m8_386 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="825-825"];
m8_387 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Uri", span="826-826"];
m8_388 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", color=green, community=0, file="JValue.cs", label="writer.WriteValue((Uri)_value)", prediction=61, span="827-827"];
m8_389 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="828-828"];
m8_390 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="731-731"];
m8_391 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="831-831"];
m8_393 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="544-544"];
m8_394 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m8_395 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1417-1417"];
m8_397 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="874-874"];
m8_398 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="882-882"];
m8_399 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="921-921"];
m8_402 [cluster="Unk.WriteValue", file="JValue.cs", label="Entry Unk.WriteValue", span=""];
m8_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="968-968"];
m8_406 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912"];
m8_407 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="977-977"];
m8_409 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1042-1042"];
m8_410 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1358-1358"];
m8_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2243-2243"];
m8_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2245-2245"];
m8_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2247-2247"];
m8_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2243-2243"];
m8_1226 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="368-368"];
m8_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2235-2235"];
m8_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2237-2237"];
m8_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2239-2239"];
m8_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2235-2235"];
m8_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2273-2273"];
m8_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2275-2275"];
m8_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2277-2277"];
m8_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2278-2278"];
m8_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2280-2280"];
m8_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2281-2281"];
m8_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2283-2283"];
m8_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2284-2284"];
m8_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="decimal? d = reader.ReadAsDecimal()", span="2286-2286"];
m8_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2287-2287"];
m8_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2288-2288"];
m8_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2291-2291"];
m8_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2292-2292"];
m8_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Assert.AreEqual(9.99m, d)", span="2289-2289"];
m8_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2273-2273"];
m8_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2296-2296"];
m8_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2298-2309"];
m8_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2311-2311"];
m8_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="int i = 0", span="2316-2316"];
m8_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="reader.Read()", span="2318-2318"];
m8_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2321-2321"];
m8_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2322-2322"];
m8_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="i < 13", span="2316-2316"];
m8_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="i++", span="2316-2316"];
m8_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2296-2296"];
m8_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2981-2981"];
m8_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="string json = ''[[[[]]],[[]]]''", span="2983-2983"];
m8_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2985-2988"];
m8_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2990-2990"];
m8_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(0, reader.Depth)", span="2991-2991"];
m8_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2993-2993"];
m8_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(1, reader.Depth)", span="2994-2994"];
m8_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2996-2996"];
m8_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(2, reader.Depth)", span="2997-2997"];
m8_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2999-2999"];
m8_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(3, reader.Depth)", span="3000-3000"];
m8_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3002-3002"];
m8_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(3, reader.Depth)", span="3003-3003"];
m8_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3005-3005"];
m8_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(2, reader.Depth)", span="3006-3006"];
m8_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3008-3008"];
m8_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(1, reader.Depth)", span="3009-3009"];
m8_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="3011-3011"];
m8_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(1, reader.Depth)", span="3012-3012"];
m8_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3014-3014"];
m8_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(2, reader.Depth)", span="3015-3015"];
m8_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3017-3017"];
m8_1958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(2, reader.Depth)", span="3018-3018"];
m8_1959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3020-3020"];
m8_1960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(1, reader.Depth)", span="3021-3021"];
m8_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3023-3023"];
m8_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.AreEqual(0, reader.Depth)", span="3024-3024"];
m8_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="3026-3026"];
m8_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2981-2981"];
m8_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="286-286"];
m8_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(json))", span="294-294"];
m8_153 [cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="JValue.cs", label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0"];
m8_157 [cluster="System.Uri.ToString()", file="JValue.cs", label="Entry System.Uri.ToString()", span="0-0"];
m8_154 [cluster="System.ArgumentException.ArgumentException(string)", file="JValue.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m8_158 [cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="JValue.cs", label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0"];
m8_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1914-1914"];
m8_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1916-1916"];
m8_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1918-1918"];
m8_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1914-1914"];
m8_271 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="return new JValue(this);", span="568-568"];
m8_272 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="566-566"];
m8_273 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="576-576"];
m8_274 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="return new JValue(value, JTokenType.Comment);", span="578-578"];
m8_275 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="576-576"];
m8_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2251-2251"];
m8_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2253-2253"];
m8_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2255-2255"];
m8_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2257-2257"];
m8_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2258-2258"];
m8_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2260-2260"];
m8_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2261-2261"];
m8_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="decimal? d = reader.ReadAsDecimal()", span="2263-2263"];
m8_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2264-2264"];
m8_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2265-2265"];
m8_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2268-2268"];
m8_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2269-2269"];
m8_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2266-2266"];
m8_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2251-2251"];
m8_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(2, reader.Depth)", span="780-780"];
m8_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="781-781"];
m8_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="783-783"];
m8_42 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="111-111"];
m8_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="reader.Read()", span="731-731"];
m8_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="732-732"];
m8_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JValue.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="784-784"];
m8_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1499-1499"];
m8_952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="StringBuilder sb = new StringBuilder()", span="1501-1501"];
m8_953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="StringWriter sw = new StringWriter(sb)", span="1502-1502"];
m8_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="string json = sb.ToString()", span="1541-1541"];
m8_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1504-1507"];
m8_955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteStartArray()", span="1509-1509"];
m8_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteValue(true)", span="1510-1510"];
m8_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteStartObject()", span="1512-1512"];
m8_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1513-1513"];
m8_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteValue(99)", span="1514-1514"];
m8_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WritePropertyName(''string'')", span="1515-1515"];
m8_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1516-1516"];
m8_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WritePropertyName(''array'')", span="1517-1517"];
m8_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteStartArray()", span="1519-1519"];
m8_966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteValue(i)", span="1522-1522"];
m8_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteStartObject()", span="1525-1525"];
m8_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1526-1526"];
m8_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1527-1527"];
m8_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteEndObject()", span="1528-1528"];
m8_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteValue(5)", span="1530-1530"];
m8_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteEndArray()", span="1531-1531"];
m8_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteEndObject()", span="1533-1533"];
m8_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1535-1535"];
m8_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteNull()", span="1536-1536"];
m8_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteNull()", span="1537-1537"];
m8_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="jsonWriter.WriteEndArray()", span="1538-1538"];
m8_964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="int i = 0", span="1520-1520"];
m8_965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="i < 5", span="1520-1520"];
m8_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="i++", span="1520-1520"];
m8_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1543-1543"];
m8_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1545-1545"];
m8_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="Assert.AreEqual(json, sb.ToString())", span="1558-1558"];
m8_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1555-1555"];
m8_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="sb = new StringBuilder()", span="1547-1547"];
m8_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="sw = new StringWriter(sb)", span="1548-1548"];
m8_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1550-1553"];
m8_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1499-1499"];
m8_2142 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JValue.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m8_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3030-3030"];
m8_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3032-3032"];
m8_1973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3034-3034"];
m8_1974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3036-3036"];
m8_1975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3038-3038"];
m8_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(false, reader.Value)", span="3039-3039"];
m8_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3041-3041"];
m8_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3042-3042"];
m8_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(true, reader.Value)", span="3043-3043"];
m8_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3045-3045"];
m8_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3046-3046"];
m8_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(true, reader.Value)", span="3047-3047"];
m8_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3049-3049"];
m8_1984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3050-3050"];
m8_1985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(false, reader.Value)", span="3051-3051"];
m8_1986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3053-3053"];
m8_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3054-3054"];
m8_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="3055-3055"];
m8_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3057-3057"];
m8_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3058-3058"];
m8_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3059-3059"];
m8_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3061-3061"];
m8_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3062-3062"];
m8_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(0d, reader.Value)", span="3063-3063"];
m8_1995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3065-3065"];
m8_1996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3066-3066"];
m8_1997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(0d, reader.Value)", span="3067-3067"];
m8_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3069-3069"];
m8_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3070-3070"];
m8_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3071-3071"];
m8_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3073-3073"];
m8_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3074-3074"];
m8_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3075-3075"];
m8_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3077-3077"];
m8_2005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3078-3078"];
m8_2006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3079-3079"];
m8_2007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3081-3081"];
m8_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3082-3082"];
m8_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3083-3083"];
m8_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3085-3085"];
m8_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3030-3030"];
m8_211 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="486-486"];
m8_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2356-2356"];
m8_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="string json = ''new Date\0()''", span="2358-2358"];
m8_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2359-2359"];
m8_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2364-2364"];
m8_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2365-2365"];
m8_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2366-2366"];
m8_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2368-2368"];
m8_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2369-2369"];
m8_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2356-2356"];
m8_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2219-2219"];
m8_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2221-2221"];
m8_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2223-2223"];
m8_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2219-2219"];
m8_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1459-1459"];
m8_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="JsonTextReader reader = null", span="1461-1461"];
m8_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1463-1463"];
m8_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1464-1464"];
m8_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1465-1465"];
m8_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1466-1466"];
m8_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1468-1468"];
m8_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1469-1469"];
m8_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1470-1470"];
m8_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1471-1471"];
m8_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1473-1473"];
m8_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1474-1474"];
m8_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1475-1475"];
m8_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1476-1476"];
m8_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1478-1478"];
m8_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1479-1479"];
m8_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1480-1480"];
m8_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1481-1481"];
m8_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1483-1483"];
m8_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1484-1484"];
m8_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1486-1486"];
m8_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1487-1487"];
m8_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1488-1488"];
m8_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1489-1489"];
m8_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1491-1491"];
m8_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="1492-1492"];
m8_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1494-1494"];
m8_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1495-1495"];
m8_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1459-1459"];
m8_668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1095-1095"];
m8_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1097-1097"];
m8_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1098-1098"];
m8_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JValue.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1100-1100"];
m8_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1095-1095"];
m8_328 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="731-731"];
m8_329 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="converters != null && converters.Length > 0 && _value != null", span="733-733"];
m8_330 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="735-735"];
m8_331 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="matchingConverter != null && matchingConverter.CanWrite", span="736-736"];
m8_332 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="738-738"];
m8_333 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="739-739"];
m8_334 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label=_valueType, span="743-743"];
m8_335 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Comment", span="745-745"];
m8_336 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteComment((_value != null) ? _value.ToString() : null)", span="746-746"];
m8_337 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="747-747"];
m8_338 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Raw", span="748-748"];
m8_339 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteRawValue((_value != null) ? _value.ToString() : null)", span="749-749"];
m8_340 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="750-750"];
m8_341 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Null", span="751-751"];
m8_342 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteNull()", span="752-752"];
m8_998 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="781-781"];
m8_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1618-1618"];
m8_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1620-1620"];
m8_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1622-1622"];
m8_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="reader.Read()", span="1627-1627"];
m8_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1628-1628"];
m8_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="reader.Read()", span="1630-1630"];
m8_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1631-1631"];
m8_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="reader.Read()", span="1633-1633"];
m8_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1634-1634"];
m8_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="reader.Read()", span="1636-1636"];
m8_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1637-1637"];
m8_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1618-1618"];
m8_43 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="222-222"];
m8_44 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="int result = i1.CompareTo(ConvertUtils.ToBigInteger(i2))", span="224-224"];
m8_45 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="result != 0", span="226-226"];
m8_46 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return result;", span="228-228"];
m8_47 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="i2 is decimal", span="233-233"];
m8_48 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="decimal d = (decimal)i2", span="235-235"];
m8_49 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return (0m).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="236-236"];
m8_411 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1326-1326"];
m8_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1342-1342"];
m8_414 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="834-834"];
m8_415 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="836-836"];
m8_416 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="return ((int)_valueType).GetHashCode() ^ valueHashCode;", span="839-839"];
m8_417 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="834-834"];
m8_418 [cluster="object.GetHashCode()", file="JValue.cs", label="Entry object.GetHashCode()", span="0-0"];
m8_427 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="874-874"];
m8_428 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="obj == null", span="876-876"];
m8_429 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return false;", span="878-878"];
m8_430 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="JValue otherValue = obj as JValue", span="881-881"];
m8_431 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="otherValue != null", span="882-882"];
m8_432 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return Equals(otherValue);", span="884-884"];
m8_433 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return base.Equals(obj);", span="887-887"];
m8_434 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="874-874"];
m8_435 [cluster="object.Equals(object)", file="JValue.cs", label="Entry object.Equals(object)", span="0-0"];
m8_441 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="912-912"];
m8_442 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="_value == null", span="914-914"];
m8_443 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="return string.Empty;", span="916-916"];
m8_444 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="return _value.ToString();", span="919-919"];
m8_445 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="912-912"];
m8_446 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="929-929"];
m8_447 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="return ToString(format, CultureInfo.CurrentCulture);", span="931-931"];
m8_448 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="929-929"];
m8_450 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="941-941"];
m8_451 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="return ToString(null, formatProvider);", span="943-943"];
m8_452 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="941-941"];
m8_465 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="985-985"];
m8_466 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="987-987"];
m8_467 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="binder.Type == typeof(JValue) || binder.Type == typeof(JToken)", span="989-989"];
m8_468 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = instance", span="991-991"];
m8_469 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return true;", span="992-992"];
m8_470 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="object value = instance.Value", span="995-995"];
m8_471 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="value == null", span="997-997"];
m8_472 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = null", span="999-999"];
m8_473 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return ReflectionUtils.IsNullable(binder.Type);", span="1000-1000"];
m8_474 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = ConvertUtils.Convert(value, CultureInfo.InvariantCulture, binder.Type)", span="1003-1003"];
m8_475 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return true;", span="1004-1004"];
m8_476 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="987-987"];
m8_477 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m8_478 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="403-403"];
m8_23 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m8_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1128-1128"];
m8_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JValue.cs", label="string helloWorld = ''Hello world!''", span="1130-1130"];
m8_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JValue.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1131-1131"];
m8_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1133-1133"];
m8_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1135-1135"];
m8_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1128-1128"];
m8_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="124-124"];
m8_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2556-2556"];
m8_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JValue.cs", label="string json = ''new Date()''", span="2558-2558"];
m8_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2559-2559"];
m8_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2561-2561"];
m8_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2562-2562"];
m8_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2564-2564"];
m8_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2565-2565"];
m8_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2556-2556"];
m8_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1021-1021"];
m8_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="1023-1023"];
m8_630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1025-1025"];
m8_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="BigInteger total = i + j", span="1031-1031"];
m8_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="reader.Read()", span="1026-1026"];
m8_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1027-1027"];
m8_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="int j = 1", span="1029-1029"];
m8_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="j < 1000", span="1029-1029"];
m8_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="j++", span="1029-1029"];
m8_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1033-1033"];
m8_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="reader.Read()", span="1034-1034"];
m8_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1036-1036"];
m8_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1021-1021"];
m8_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1999-1999"];
m8_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2001-2001"];
m8_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2003-2003"];
m8_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2005-2005"];
m8_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2006-2006"];
m8_1302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2008-2008"];
m8_1303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2009-2009"];
m8_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="2011-2011"];
m8_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2012-2012"];
m8_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2013-2013"];
m8_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2014-2014"];
m8_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2016-2016"];
m8_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2017-2017"];
m8_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1999-1999"];
m8_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1307-1307"];
m8_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1309-1309"];
m8_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="StringReader sr = new StringReader(input)", span="1311-1311"];
m8_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1313-1313"];
m8_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1315-1315"];
m8_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="jsonReader.Read()", span="1317-1317"];
m8_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1318-1318"];
m8_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1319-1319"];
m8_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="jsonReader.Read()", span="1321-1321"];
m8_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1322-1322"];
m8_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1323-1323"];
m8_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="jsonReader.Read()", span="1325-1325"];
m8_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1326-1326"];
m8_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1327-1327"];
m8_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1328-1328"];
m8_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1329-1329"];
m8_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="jsonReader.Read()", span="1331-1331"];
m8_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1332-1332"];
m8_829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1333-1333"];
m8_830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1307-1307"];
m8_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2852-2852"];
m8_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JValue.cs", label="string json = @''0x20''", span="2854-2854"];
m8_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2856-2856"];
m8_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JValue.cs", label="reader.ReadAsDecimal()", span="2858-2858"];
m8_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2859-2859"];
m8_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JValue.cs", label="Assert.AreEqual(32m, reader.Value)", span="2860-2860"];
m8_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2852-2852"];
m8_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="999-999"];
m8_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="long i = int.MinValue", span="1001-1001"];
m8_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1003-1003"];
m8_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="Assert.AreEqual(i, reader.Value)", span="1006-1006"];
m8_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="long total = -j + i", span="1010-1010"];
m8_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="reader.Read()", span="1004-1004"];
m8_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1005-1005"];
m8_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="1011-1015"];
m8_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="int j = 1", span="1008-1008"];
m8_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="j < 1000", span="1008-1008"];
m8_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="j++", span="1008-1008"];
m8_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="999-999"];
m8_2136 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3263-3263"];
m8_2137 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JValue.cs", label=Error, span="3265-3265"];
m8_2139 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JValue.cs", label="return _inner.Read(buffer, index, 1);", span="3268-3268"];
m8_2138 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JValue.cs", label="throw new Exception(''Read error'');", span="3266-3266"];
m8_2140 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3263-3263"];
m8_991 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="884-884"];
m8_160 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="292-292"];
m8_1674 [cluster="Unk.>", file="JValue.cs", label="Entry Unk.>", span=""];
m8_549 [cluster="System.IO.StringWriter.StringWriter()", file="JValue.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m8_550 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m8_551 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="174-174"];
m8_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="i < valueCount", span="876-876"];
m8_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="writer.WriteValue(i)", span="878-878"];
m8_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="i++", span="876-876"];
m8_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1249-1249"];
m8_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1251-1251"];
m8_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1252-1252"];
m8_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1253-1253"];
m8_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1254-1254"];
m8_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1255-1255"];
m8_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1256-1256"];
m8_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1257-1257"];
m8_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.AreEqual(1L, reader.Value)", span="1258-1258"];
m8_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1259-1259"];
m8_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1260-1260"];
m8_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="1261-1261"];
m8_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1249-1249"];
m8_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2522-2522"];
m8_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JValue.cs", label="string json = ''[]''", span="2524-2524"];
m8_1640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2525-2525"];
m8_1641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2527-2527"];
m8_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2528-2528"];
m8_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2530-2530"];
m8_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2531-2531"];
m8_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2522-2522"];
m8_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2501-2501"];
m8_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JValue.cs", label="string json = ''new Date !''", span="2503-2503"];
m8_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2504-2504"];
m8_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2506-2506"];
m8_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2501-2501"];
m8_2148 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3285-3285"];
m8_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JValue.cs", label="CollectionAssert.AreEqual(expected, data)", span="101-101"];
m8_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JValue.cs", label="jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'''))", span="103-103"];
m8_169 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="300-300"];
m8_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="377-377"];
m8_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="379-379"];
m8_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(1L, reader.Value)", span="342-342"];
m8_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="343-343"];
m8_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="347-347"];
m8_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="348-348"];
m8_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="349-349"];
m8_220 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="371-371"];
m8_221 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="371-371"];
m8_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="381-381"];
m8_256 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="JValue.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m8_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="436-436"];
m8_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="448-448"];
m8_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="385-385"];
m8_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="391-391"];
m8_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="397-397"];
m8_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="403-403"];
m8_184 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="322-322"];
m8_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="330-330"];
m8_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="336-336"];
m8_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="341-341"];
m8_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="346-346"];
m8_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="354-354"];
m8_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="375-375"];
m8_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="387-387"];
m8_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="393-393"];
m8_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="398-398"];
m8_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="375-375"];
m8_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="454-454"];
m8_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="427-427"];
m8_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="439-439"];
m8_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="451-451"];
m8_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="456-456"];
m8_183 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="322-322"];
m8_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="328-328"];
m8_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="334-334"];
m8_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="339-339"];
m8_185 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="322-322"];
m8_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="331-331"];
m8_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="337-337"];
m8_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="344-344"];
m8_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="353-353"];
m8_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="326-326"];
m8_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="351-351"];
m8_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="356-356"];
m8_222 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="371-371"];
m8_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="382-382"];
m8_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="388-388"];
m8_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="394-394"];
m8_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="400-400"];
m8_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="430-430"];
m8_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="442-442"];
m8_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="433-433"];
m8_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="445-445"];
m8_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="384-384"];
m8_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="390-390"];
m8_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="396-396"];
m8_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="401-401"];
m8_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="326-326"];
m8_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="333-333"];
m8_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="338-338"];
m8_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="352-352"];
m8_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="357-357"];
m8_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="457-457"];
m8_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JValue.cs", label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="135-137"];
m8_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="943-943"];
m8_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="945-962"];
m8_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="964-964"];
m8_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="int i = 0", span="969-969"];
m8_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="reader.Read()", span="971-971"];
m8_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="reader.Read()", span="974-974"];
m8_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="975-975"];
m8_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="i < 15", span="969-969"];
m8_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="i++", span="969-969"];
m8_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="943-943"];
m8_831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1338-1338"];
m8_832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JValue.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="1340-1346"];
m8_833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JValue.cs", label="object o = JsonConvert.DeserializeObject(input)", span="1348-1348"];
m8_834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1338-1338"];
m8_869 [cluster="long.ToString()", file="JValue.cs", label="Entry long.ToString()", span="0-0"];
m8_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2195-2195"];
m8_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="string json = @''{''''Name'''': 1.1}''", span="2197-2197"];
m8_1432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2199-2199"];
m8_1433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2201-2201"];
m8_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2202-2202"];
m8_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2204-2204"];
m8_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2205-2205"];
m8_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2207-2207"];
m8_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2195-2195"];
m8_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2415-2415"];
m8_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2417-2417"];
m8_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="reader.SupportMultipleContent = true", span="2418-2418"];
m8_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2420-2420"];
m8_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2421-2421"];
m8_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2423-2423"];
m8_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2424-2424"];
m8_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2426-2426"];
m8_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2427-2427"];
m8_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2429-2429"];
m8_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2430-2430"];
m8_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2432-2432"];
m8_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2433-2433"];
m8_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2435-2435"];
m8_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2436-2436"];
m8_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2438-2438"];
m8_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2439-2439"];
m8_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2441-2441"];
m8_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2442-2442"];
m8_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2444-2444"];
m8_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2445-2445"];
m8_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2447-2447"];
m8_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2448-2448"];
m8_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2450-2450"];
m8_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2451-2451"];
m8_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2453-2453"];
m8_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2454-2454"];
m8_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2456-2456"];
m8_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2457-2457"];
m8_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2459-2459"];
m8_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2460-2460"];
m8_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2462-2462"];
m8_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2463-2463"];
m8_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2465-2465"];
m8_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2466-2466"];
m8_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2468-2468"];
m8_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2469-2469"];
m8_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2471-2471"];
m8_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2472-2472"];
m8_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2474-2474"];
m8_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2475-2475"];
m8_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="2477-2477"];
m8_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2415-2415"];
m8_642 [cluster="StringReader.cstr", file="JValue.cs", label="Entry StringReader.cstr", span=""];
m8_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2816-2816"];
m8_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JValue.cs", label="string json = @''//comment''", span="2818-2818"];
m8_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2820-2820"];
m8_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2822-2822"];
m8_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2823-2823"];
m8_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JValue.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2824-2824"];
m8_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="2826-2826"];
m8_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2816-2816"];
m8_607 [cluster="long.ToString(System.IFormatProvider)", file="JValue.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m8_1002 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="874-874"];
m8_1000 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m8_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="427-427"];
m8_2161 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3333-3333"];
m8_2162 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JValue.cs", label="throw new NotSupportedException();", span="3335-3335"];
m8_2163 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3333-3333"];
m8_161 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="292-292"];
m8_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2840-2840"];
m8_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JValue.cs", label="string json = @''010''", span="2842-2842"];
m8_1844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2844-2844"];
m8_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JValue.cs", label="reader.ReadAsDecimal()", span="2846-2846"];
m8_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2847-2847"];
m8_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JValue.cs", label="Assert.AreEqual(8m, reader.Value)", span="2848-2848"];
m8_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2840-2840"];
m8_2164 [cluster="System.NotSupportedException.NotSupportedException()", file="JValue.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m8_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="885-885"];
m8_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="int i = 0", span="886-886"];
m8_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="i < valueCount", span="886-886"];
m8_1924 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m8_995 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819"];
m8_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1729-1729"];
m8_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1731-1733"];
m8_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1735-1735"];
m8_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="reader.Read()", span="1737-1737"];
m8_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1738-1738"];
m8_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="reader.Read()", span="1740-1740"];
m8_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1741-1741"];
m8_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="reader.Read()", span="1743-1743"];
m8_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1744-1744"];
m8_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'')", span="1746-1746"];
m8_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1729-1729"];
m8_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2535-2535"];
m8_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JValue.cs", label="string json = ''{}''", span="2537-2537"];
m8_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2538-2538"];
m8_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2540-2540"];
m8_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2541-2541"];
m8_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2543-2543"];
m8_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2544-2544"];
m8_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2535-2535"];
m8_27 [cluster="Unk.AreEqual", file="JValue.cs", label="Entry Unk.AreEqual", span=""];
m8_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1750-1750"];
m8_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JValue.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1752-1752"];
m8_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1753-1753"];
m8_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JValue.cs", label="byte[] data = reader.ReadAsBytes()", span="1755-1755"];
m8_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JValue.cs", label="Assert.IsNotNull(data)", span="1756-1756"];
m8_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JValue.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1758-1758"];
m8_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JValue.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1759-1759"];
m8_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1750-1750"];
m8_2125 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="545-545"];
m8_993 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m8_793 [cluster="Unk.AreEquivalent", file="JValue.cs", label="Entry Unk.AreEquivalent", span=""];
m8_643 [cluster="Unk.ToString", file="JValue.cs", label="Entry Unk.ToString", span=""];
m8_521 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="obj == null", span="1085-1085"];
m8_522 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return 1;", span="1087-1087"];
m8_523 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return Compare(_valueType, _value, obj._value);", span="1090-1090"];
m8_524 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1083-1083"];
m8_1312 [cluster="System.DateTime.DateTime(int, int, int)", file="JValue.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m8_2165 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3338-3338"];
m8_2166 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JValue.cs", label="throw new NotSupportedException();", span="3340-3340"];
m8_2167 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3338-3338"];
m8_1134 [cluster="Unk.IsNotNull", file="JValue.cs", label="Entry Unk.IsNotNull", span=""];
m8_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1878-1878"];
m8_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1880-1880"];
m8_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '', line 1, position 1.'')", span="1882-1882"];
m8_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1878-1878"];
m8_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="618-618"];
m8_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JValue.cs", label="string json = @'''hi' a''", span="620-620"];
m8_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="622-622"];
m8_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="624-629"];
m8_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="618-618"];
m8_356 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="624-629"];
m8_345 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="597-597"];
m8_343 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="597-597"];
m8_357 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="626-626"];
m8_344 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="597-597"];
m8_358 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="624-629"];
m8_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2548-2548"];
m8_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2550-2550"];
m8_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2552-2552"];
m8_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2548-2548"];
m8_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1265-1265"];
m8_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="string helloWorld = ''Hello world!''", span="1267-1267"];
m8_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1268-1268"];
m8_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1270-1270"];
m8_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1276-1276"];
m8_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1271-1271"];
m8_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1272-1272"];
m8_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1273-1273"];
m8_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1274-1274"];
m8_786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="byte[] data = reader.ReadAsBytes()", span="1275-1275"];
m8_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1277-1277"];
m8_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1278-1278"];
m8_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1279-1279"];
m8_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="1281-1281"];
m8_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1265-1265"];
m8_2108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3199-3199"];
m8_2109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="StringWriter sw = new StringWriter()", span="3201-3201"];
m8_2110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3202-3202"];
m8_2115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="string json = sw.ToString()", span="3209-3209"];
m8_2111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="writer.WriteStartArray()", span="3204-3204"];
m8_2112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="writer.WriteValue(decimal.MaxValue)", span="3205-3205"];
m8_2113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="writer.WriteValue(decimal.MinValue)", span="3206-3206"];
m8_2114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="writer.WriteEndArray()", span="3207-3207"];
m8_2116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="StringReader sr = new StringReader(json)", span="3211-3211"];
m8_2117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3212-3212"];
m8_2118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3214-3214"];
m8_2119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="decimal? max = reader.ReadAsDecimal()", span="3216-3216"];
m8_2121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="decimal? min = reader.ReadAsDecimal()", span="3219-3219"];
m8_2123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3222-3222"];
m8_2120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3217-3217"];
m8_2122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3220-3220"];
m8_2124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3199-3199"];
m8_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JValue.cs", label="int i = 0", span="876-876"];
m8_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="MemoryStream ms = new MemoryStream()", span="476-476"];
m8_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="477-477"];
m8_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JValue.cs", label="Assert.IsTrue(ms.CanRead)", span="479-479"];
m8_1048 [cluster="System.Convert.ToChar(string)", file="JValue.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m8_2130 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="3241-3247"];
m8_168 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m8_327 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JValue.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m8_519 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1053-1053"];
m8_518 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="return Compare(_valueType, _value, otherValue);", span="1062-1062"];
m8_520 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1083-1083"];
m8_609 [cluster="lambda expression", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="992-992"];
m8_608 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="990-994"];
m8_610 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsInt32()", span="993-993"];
m8_611 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="990-994"];
m8_625 [cluster="lambda expression", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1013-1013"];
m8_624 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1011-1015"];
m8_626 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsInt32()", span="1014-1014"];
m8_627 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1011-1015"];
m8_678 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="1108-1108"];
m8_677 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1108-1108"];
m8_679 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1108-1108"];
m8_685 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="1116-1116"];
m8_684 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1116-1116"];
m8_686 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1116-1116"];
m8_692 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsBytes()", span="1124-1124"];
m8_691 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1124-1124"];
m8_693 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1124-1124"];
m8_703 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsBytes()", span="1135-1135"];
m8_702 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1135-1135"];
m8_704 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1135-1135"];
m8_718 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="1154-1154"];
m8_717 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1154-1154"];
m8_719 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1154-1154"];
m8_871 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsInt32()", span="1406-1406"];
m8_870 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1406-1406"];
m8_874 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsInt32()", span="1409-1409"];
m8_873 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1409-1409"];
m8_877 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsInt32()", span="1412-1412"];
m8_876 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1412-1412"];
m8_880 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsInt32()", span="1415-1415"];
m8_879 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1415-1415"];
m8_883 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsInt32()", span="1421-1421"];
m8_882 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1421-1421"];
m8_872 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1406-1406"];
m8_875 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1409-1409"];
m8_878 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1412-1412"];
m8_881 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1415-1415"];
m8_884 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1421-1421"];
m8_908 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsDecimal()", span="1442-1442"];
m8_907 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1442-1442"];
m8_911 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="1446-1446"];
m8_910 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1446-1446"];
m8_914 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsDecimal()", span="1455-1455"];
m8_913 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1455-1455"];
m8_909 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1442-1442"];
m8_912 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1446-1446"];
m8_915 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1455-1455"];
m8_946 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="1484-1484"];
m8_945 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1484-1484"];
m8_949 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="1495-1495"];
m8_948 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1495-1495"];
m8_947 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1484-1484"];
m8_950 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1495-1495"];
m8_1124 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="1746-1746"];
m8_1123 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1746-1746"];
m8_1125 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1746-1746"];
m8_1202 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="1856-1856"];
m8_1201 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1856-1856"];
m8_1203 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1856-1856"];
m8_1219 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsBytes()", span="1882-1882"];
m8_1218 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1882-1882"];
m8_1220 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1882-1882"];
m8_1232 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsDecimal()", span="1901-1901"];
m8_1231 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1901-1901"];
m8_1233 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1901-1901"];
m8_1239 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsBytes()", span="1909-1909"];
m8_1238 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1909-1909"];
m8_1240 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1909-1909"];
m8_1246 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="1918-1918"];
m8_1245 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1918-1918"];
m8_1247 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1918-1918"];
m8_1260 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsBytes()", span="1938-1938"];
m8_1259 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1938-1938"];
m8_1261 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1938-1938"];
m8_1267 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsBytes()", span="1946-1946"];
m8_1266 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="1946-1946"];
m8_1268 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="1946-1946"];
m8_1338 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="2055-2055"];
m8_1337 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2055-2055"];
m8_1339 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2055-2055"];
m8_1440 [cluster="lambda expression", file="JValue.cs", label="reader.ReadAsInt32()", span="2207-2207"];
m8_1439 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2207-2207"];
m8_1441 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2207-2207"];
m8_1447 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2215-2215"];
m8_1446 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2215-2215"];
m8_1448 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2215-2215"];
m8_1454 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2223-2223"];
m8_1453 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2223-2223"];
m8_1455 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2223-2223"];
m8_1461 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2231-2231"];
m8_1460 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2231-2231"];
m8_1462 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2231-2231"];
m8_1468 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2239-2239"];
m8_1467 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2239-2239"];
m8_1469 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2239-2239"];
m8_1475 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2247-2247"];
m8_1474 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2247-2247"];
m8_1476 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2247-2247"];
m8_1620 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2497-2497"];
m8_1619 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2497-2497"];
m8_1621 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2497-2497"];
m8_1628 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2506-2506"];
m8_1627 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2506-2506"];
m8_1629 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2506-2506"];
m8_1659 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2552-2552"];
m8_1658 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2552-2552"];
m8_1660 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2552-2552"];
m8_1676 [cluster="lambda expression", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2574-2574"];
m8_1675 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2574-2574"];
m8_1677 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2574-2574"];
m8_1840 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2836-2836"];
m8_1839 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2836-2836"];
m8_1841 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2836-2836"];
m8_1879 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="2896-2896"];
m8_1878 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2896-2896"];
m8_1880 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2896-2896"];
m8_1934 [cluster="lambda expression", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2977-2977"];
m8_1933 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2977-2977"];
m8_1935 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2977-2977"];
m8_1966 [cluster="lambda expression", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2993-2993"];
m8_1969 [cluster="lambda expression", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3011-3011"];
m8_1965 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="2993-2993"];
m8_1968 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="3011-3011"];
m8_1967 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="2993-2993"];
m8_1970 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="3011-3011"];
m8_2091 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.Read()", span="3169-3169"];
m8_2094 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.Read()", span="3170-3170"];
m8_2097 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.Read()", span="3179-3179"];
m8_2100 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.Read()", span="3188-3188"];
m8_2103 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.Read()", span="3189-3189"];
m8_2106 [cluster="lambda expression", file="JValue.cs", label="jsonTextReader.Read()", span="3190-3190"];
m8_2090 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="3169-3169"];
m8_2093 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="3170-3170"];
m8_2096 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="3179-3179"];
m8_2099 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="3188-3188"];
m8_2102 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="3189-3189"];
m8_2105 [cluster="lambda expression", file="JValue.cs", label="Entry lambda expression", span="3190-3190"];
m8_2092 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="3169-3169"];
m8_2095 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="3170-3170"];
m8_2098 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="3179-3179"];
m8_2101 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="3188-3188"];
m8_2104 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="3189-3189"];
m8_2107 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="3190-3190"];
m8_2131 [cluster="lambda expression", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3243-3243"];
m8_2132 [cluster="lambda expression", file="JValue.cs", label="reader.Read()", span="3244-3244"];
m8_2133 [cluster="lambda expression", file="JValue.cs", label="Exit lambda expression", span="3241-3247"];
m8_2066 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JValue.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m8_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2326-2326"];
m8_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2328-2337"];
m8_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2339-2339"];
m8_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="int i = 0", span="2344-2344"];
m8_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2346-2346"];
m8_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2349-2349"];
m8_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2350-2350"];
m8_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="2352-2352"];
m8_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="i < 26", span="2344-2344"];
m8_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="i++", span="2344-2344"];
m8_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2326-2326"];
m8_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2614-2614"];
m8_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2616-2623"];
m8_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2625-2625"];
m8_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2627-2627"];
m8_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2628-2628"];
m8_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2630-2630"];
m8_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2631-2631"];
m8_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2633-2633"];
m8_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2634-2634"];
m8_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2636-2636"];
m8_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2637-2637"];
m8_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2638-2638"];
m8_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2640-2640"];
m8_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2641-2641"];
m8_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2643-2643"];
m8_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2644-2644"];
m8_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(true, reader.Value)", span="2645-2645"];
m8_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2647-2647"];
m8_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2648-2648"];
m8_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2650-2650"];
m8_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2651-2651"];
m8_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2653-2653"];
m8_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2654-2654"];
m8_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2655-2655"];
m8_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2657-2657"];
m8_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2658-2658"];
m8_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2660-2660"];
m8_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2661-2661"];
m8_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2662-2662"];
m8_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2663-2663"];
m8_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2665-2665"];
m8_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2666-2666"];
m8_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2668-2668"];
m8_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2669-2669"];
m8_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2671-2671"];
m8_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2672-2672"];
m8_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2674-2674"];
m8_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2675-2675"];
m8_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2614-2614"];
m8_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1934-1934"];
m8_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1936-1936"];
m8_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="1938-1938"];
m8_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1934-1934"];
m8_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2900-2900"];
m8_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="double d", span="2902-2902"];
m8_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2904-2904"];
m8_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="2906-2906"];
m8_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="2907-2907"];
m8_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2909-2909"];
m8_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2911-2911"];
m8_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2938-2938"];
m8_1888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2913-2913"];
m8_1889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2915-2915"];
m8_1890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2916-2916"];
m8_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(0d, reader.Value)", span="2917-2917"];
m8_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2919-2919"];
m8_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2920-2920"];
m8_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(0d, reader.Value)", span="2921-2921"];
m8_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2923-2923"];
m8_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2924-2924"];
m8_1897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2925-2925"];
m8_1898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2927-2927"];
m8_1899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2928-2928"];
m8_1900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2929-2929"];
m8_1901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2931-2931"];
m8_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2932-2932"];
m8_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2933-2933"];
m8_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2935-2935"];
m8_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2940-2940"];
m8_1907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.ReadAsDecimal()", span="2942-2942"];
m8_1908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2943-2943"];
m8_1909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(0m, reader.Value)", span="2944-2944"];
m8_1910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.ReadAsDecimal()", span="2946-2946"];
m8_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2947-2947"];
m8_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(0m, reader.Value)", span="2948-2948"];
m8_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.ReadAsDecimal()", span="2950-2950"];
m8_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2951-2951"];
m8_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2952-2952"];
m8_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.ReadAsDecimal()", span="2954-2954"];
m8_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2955-2955"];
m8_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2956-2956"];
m8_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.ReadAsDecimal()", span="2958-2958"];
m8_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2959-2959"];
m8_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2960-2960"];
m8_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="reader.Read()", span="2962-2962"];
m8_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2900-2900"];
m8_2168 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3343-3343"];
m8_2169 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JValue.cs", label="throw new NotSupportedException();", span="3345-3345"];
m8_2170 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3343-3343"];
m8_992 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m8_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JValue.cs", label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="126-128"];
m8_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="124-124"];
m8_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JValue.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="130-130"];
m8_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JValue.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="132-132"];
m8_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="133-133"];
m8_1196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1850-1850"];
m8_1197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1852-1852"];
m8_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JValue.cs", label="reader.Read()", span="1854-1854"];
m8_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="1856-1856"];
m8_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1850-1850"];
m8_24 [cluster="System.IO.StringReader.StringReader(string)", file="JValue.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m8_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2081-2081"];
m8_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2083-2083"];
m8_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2085-2085"];
m8_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2087-2087"];
m8_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2088-2088"];
m8_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2090-2090"];
m8_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2091-2091"];
m8_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="2093-2093"];
m8_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2094-2094"];
m8_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2095-2095"];
m8_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2096-2096"];
m8_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2098-2098"];
m8_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2099-2099"];
m8_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2081-2081"];
m8_543 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1126-1126"];
m8_544 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="return (byte)this;", span="1128-1128"];
m8_546 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1131-1131"];
m8_547 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="return (short)this;", span="1133-1133"];
m8_545 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1126-1126"];
m8_548 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1131-1131"];
m8_1311 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JValue.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m8_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2043-2043"];
m8_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2045-2045"];
m8_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2047-2047"];
m8_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2049-2049"];
m8_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2050-2050"];
m8_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2052-2052"];
m8_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2053-2053"];
m8_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="2055-2055"];
m8_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2043-2043"];
m8_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1897-1897"];
m8_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1899-1899"];
m8_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1901-1901"];
m8_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1897-1897"];
m8_281 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595"];
m8_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="95-95"];
m8_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JValue.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'''))", span="97-97"];
m8_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JValue.cs", label="byte[] data = jsonTextReader.ReadAsBytes()", span="98-98"];
m8_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JValue.cs", label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="99-99"];
m8_34 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m8_35 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="JValue other = node as JValue", span="197-197"];
m8_36 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="other == null", span="198-198"];
m8_37 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return false;", span="200-200"];
m8_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1977-1977"];
m8_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1979-1979"];
m8_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1981-1981"];
m8_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1983-1983"];
m8_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1984-1984"];
m8_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1986-1986"];
m8_1290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1987-1987"];
m8_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1989-1989"];
m8_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1990-1990"];
m8_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="1991-1991"];
m8_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1993-1993"];
m8_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1994-1994"];
m8_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1977-1977"];
m8_1313 [cluster="System.TimeSpan.FromHours(double)", file="JValue.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m8_514 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1053-1053"];
m8_515 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="obj == null", span="1055-1055"];
m8_516 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="return 1;", span="1057-1057"];
m8_517 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="object otherValue = (obj is JValue) ? ((JValue)obj).Value : obj", span="1060-1060"];
m8_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2059-2059"];
m8_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2061-2061"];
m8_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2063-2063"];
m8_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2065-2065"];
m8_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2066-2066"];
m8_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2068-2068"];
m8_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2069-2069"];
m8_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="2071-2071"];
m8_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2072-2072"];
m8_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2073-2073"];
m8_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2074-2074"];
m8_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2076-2076"];
m8_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2077-2077"];
m8_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2059-2059"];
m8_990 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m8_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2492-2492"];
m8_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JValue.cs", label="string json = ''new Dat''", span="2494-2494"];
m8_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2495-2495"];
m8_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2497-2497"];
m8_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2492-2492"];
m8_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3089-3089"];
m8_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3091-3091"];
m8_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3093-3093"];
m8_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3106-3106"];
m8_2034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3119-3119"];
m8_2044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3132-3132"];
m8_2054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3145-3145"];
m8_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3094-3094"];
m8_2016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3096-3096"];
m8_2017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3097-3097"];
m8_2018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3098-3098"];
m8_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3099-3099"];
m8_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3100-3100"];
m8_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3101-3101"];
m8_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3102-3102"];
m8_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3103-3103"];
m8_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3107-3107"];
m8_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3109-3109"];
m8_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3110-3110"];
m8_2028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3111-3111"];
m8_2029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3112-3112"];
m8_2030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3113-3113"];
m8_2031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3114-3114"];
m8_2032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3115-3115"];
m8_2033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3116-3116"];
m8_2035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3120-3120"];
m8_2036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3122-3122"];
m8_2037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3123-3123"];
m8_2038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3124-3124"];
m8_2039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3125-3125"];
m8_2040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3126-3126"];
m8_2041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3127-3127"];
m8_2042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3128-3128"];
m8_2043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3129-3129"];
m8_2045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3133-3133"];
m8_2046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3135-3135"];
m8_2047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="3136-3136"];
m8_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3137-3137"];
m8_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3138-3138"];
m8_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="3139-3139"];
m8_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3140-3140"];
m8_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3141-3141"];
m8_2053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3142-3142"];
m8_2055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3146-3146"];
m8_2056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3148-3148"];
m8_2057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.ReadAsDateTime()", span="3149-3149"];
m8_2058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3150-3150"];
m8_2059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3151-3151"];
m8_2060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="reader.ReadAsDateTime()", span="3152-3152"];
m8_2061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3153-3153"];
m8_2062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3154-3154"];
m8_2063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="3155-3155"];
m8_2064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3089-3089"];
m8_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1887-1887"];
m8_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1889-1889"];
m8_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JValue.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1891-1891"];
m8_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1892-1892"];
m8_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1887-1887"];
m8_2151 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3320-3320"];
m8_2152 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JValue.cs", label="int toReturn = Math.Min(count, bytesPerRead)", span="3322-3322"];
m8_2155 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JValue.cs", label="Array.Copy(bytes, totalBytesRead, buffer, offset, toReturn)", span="3326-3326"];
m8_2153 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JValue.cs", label="toReturn = Math.Min(toReturn, bytes.Length - totalBytesRead)", span="3323-3323"];
m8_2154 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JValue.cs", label="toReturn > 0", span="3324-3324"];
m8_2156 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JValue.cs", label="totalBytesRead += toReturn", span="3329-3329"];
m8_2157 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JValue.cs", label="return toReturn;", span="3330-3330"];
m8_2158 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3320-3320"];
m8_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2864-2864"];
m8_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="string json = @''[0,1,2 , 3]''", span="2866-2866"];
m8_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2868-2868"];
m8_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="reader.Read()", span="2870-2870"];
m8_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2871-2871"];
m8_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="reader.Read()", span="2873-2873"];
m8_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2874-2874"];
m8_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="reader.Read()", span="2876-2876"];
m8_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2877-2877"];
m8_1865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="reader.Read()", span="2879-2879"];
m8_1866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2880-2880"];
m8_1867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="reader.Read()", span="2882-2882"];
m8_1868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2883-2883"];
m8_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="reader.Read()", span="2885-2885"];
m8_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2886-2886"];
m8_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2864-2864"];
m8_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1923-1923"];
m8_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1925-1925"];
m8_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JValue.cs", label="byte[] data = reader.ReadAsBytes()", span="1927-1927"];
m8_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JValue.cs", label="Assert.AreEqual(2, data.Length)", span="1928-1928"];
m8_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JValue.cs", label="Assert.AreEqual(1, data[0])", span="1929-1929"];
m8_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JValue.cs", label="Assert.AreEqual(2, data[1])", span="1930-1930"];
m8_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1923-1923"];
m8_280 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JValue.cs", label="return new JValue(null, JTokenType.Null);", span="597-597"];
m8_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1763-1763"];
m8_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1765-1765"];
m8_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1766-1766"];
m8_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1768-1768"];
m8_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1769-1769"];
m8_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1771-1771"];
m8_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1772-1772"];
m8_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1773-1773"];
m8_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1775-1775"];
m8_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1776-1776"];
m8_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1777-1777"];
m8_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1779-1779"];
m8_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1780-1780"];
m8_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1781-1781"];
m8_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.IsTrue(jsonReader.Read())", span="1783-1783"];
m8_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1784-1784"];
m8_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Assert.IsFalse(jsonReader.Read())", span="1786-1786"];
m8_1153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1763-1763"];
m8_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2373-2373"];
m8_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="string json = ''new Date\n()''", span="2375-2375"];
m8_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2376-2376"];
m8_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2378-2378"];
m8_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2379-2379"];
m8_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2380-2380"];
m8_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2382-2382"];
m8_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2383-2383"];
m8_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2373-2373"];
m8_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1285-1285"];
m8_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="string helloWorld = ''Hello world!''", span="1287-1287"];
m8_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1288-1288"];
m8_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1290-1290"];
m8_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1298-1298"];
m8_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1291-1291"];
m8_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1292-1292"];
m8_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1293-1293"];
m8_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1294-1294"];
m8_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1295-1295"];
m8_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1296-1296"];
m8_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="byte[] data = reader.ReadAsBytes()", span="1297-1297"];
m8_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1299-1299"];
m8_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1300-1300"];
m8_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1301-1301"];
m8_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="1303-1303"];
m8_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1285-1285"];
m8_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1041-1041"];
m8_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="1043-1043"];
m8_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1045-1045"];
m8_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="BigInteger total = i + -j", span="1051-1051"];
m8_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="reader.Read()", span="1046-1046"];
m8_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1047-1047"];
m8_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="int j = 1", span="1049-1049"];
m8_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="j < 1000", span="1049-1049"];
m8_655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="j++", span="1049-1049"];
m8_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1053-1053"];
m8_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="reader.Read()", span="1054-1054"];
m8_654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1056-1056"];
m8_656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1041-1041"];
m8_641 [cluster="BigInteger.cstr", file="JValue.cs", label="Entry BigInteger.cstr", span=""];
m8_1001 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="664-664"];
m8_1209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1869-1869"];
m8_1210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1871-1871"];
m8_1211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JValue.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1873-1873"];
m8_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JValue.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1874-1874"];
m8_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1869-1869"];
m8_997 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m8_694 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m8_2067 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="358-358"];
m8_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2387-2387"];
m8_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2389-2389"];
m8_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2390-2390"];
m8_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2392-2392"];
m8_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2393-2393"];
m8_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2395-2395"];
m8_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2396-2396"];
m8_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2398-2398"];
m8_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2399-2399"];
m8_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2401-2401"];
m8_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2402-2402"];
m8_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2404-2404"];
m8_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2405-2405"];
m8_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2407-2407"];
m8_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2408-2408"];
m8_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2410-2410"];
m8_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2411-2411"];
m8_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2387-2387"];
m8_41 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m8_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2830-2830"];
m8_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JValue.cs", label="string json = @''/''", span="2832-2832"];
m8_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2834-2834"];
m8_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="2836-2836"];
m8_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2830-2830"];
m8_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2679-2679"];
m8_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n@'',//comment after comma'' + StringUtils.CarriageReturnLineFeed + \r\n@''''''ExpiryDate''''://comment''  + StringUtils.LineFeed + \r\n@''new '' + StringUtils.LineFeed +\r\n@''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2681-2699"];
m8_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2701-2701"];
m8_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2703-2703"];
m8_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2704-2704"];
m8_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2705-2705"];
m8_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2706-2706"];
m8_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2708-2708"];
m8_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2709-2709"];
m8_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2710-2710"];
m8_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2712-2712"];
m8_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2713-2713"];
m8_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2714-2714"];
m8_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2716-2716"];
m8_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2717-2717"];
m8_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2718-2718"];
m8_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2719-2719"];
m8_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2721-2721"];
m8_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2722-2722"];
m8_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2723-2723"];
m8_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2725-2725"];
m8_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2726-2726"];
m8_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(true, reader.Value)", span="2727-2727"];
m8_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2728-2728"];
m8_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2730-2730"];
m8_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2731-2731"];
m8_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2732-2732"];
m8_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2733-2733"];
m8_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2735-2735"];
m8_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2736-2736"];
m8_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2737-2737"];
m8_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2738-2738"];
m8_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2740-2740"];
m8_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2741-2741"];
m8_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2742-2742"];
m8_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2743-2743"];
m8_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2745-2745"];
m8_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2746-2746"];
m8_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2747-2747"];
m8_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2749-2749"];
m8_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2750-2750"];
m8_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2751-2751"];
m8_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2752-2752"];
m8_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2754-2754"];
m8_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2755-2755"];
m8_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2757-2757"];
m8_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2758-2758"];
m8_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="2759-2759"];
m8_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2761-2761"];
m8_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2762-2762"];
m8_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2763-2763"];
m8_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2765-2765"];
m8_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2766-2766"];
m8_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2767-2767"];
m8_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2769-2769"];
m8_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2770-2770"];
m8_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2771-2771"];
m8_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2773-2773"];
m8_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2774-2774"];
m8_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2776-2776"];
m8_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2777-2777"];
m8_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2778-2778"];
m8_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2780-2780"];
m8_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2781-2781"];
m8_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2783-2783"];
m8_1805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2784-2784"];
m8_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2786-2786"];
m8_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2787-2787"];
m8_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2789-2789"];
m8_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2790-2790"];
m8_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2792-2792"];
m8_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2793-2793"];
m8_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2795-2795"];
m8_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2796-2796"];
m8_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2798-2798"];
m8_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2799-2799"];
m8_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2801-2801"];
m8_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2802-2802"];
m8_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2804-2804"];
m8_1819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2805-2805"];
m8_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2806-2806"];
m8_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2808-2808"];
m8_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2809-2809"];
m8_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2810-2810"];
m8_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="2812-2812"];
m8_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2679-2679"];
m8_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2125-2125"];
m8_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2127-2127"];
m8_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2129-2129"];
m8_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2130-2130"];
m8_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2132-2132"];
m8_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2133-2133"];
m8_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2135-2135"];
m8_1392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2136-2136"];
m8_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="2138-2138"];
m8_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2139-2139"];
m8_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2140-2140"];
m8_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2142-2142"];
m8_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2145-2145"];
m8_1399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2146-2146"];
m8_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2143-2143"];
m8_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2125-2125"];
m8_279 [cluster="System.Text.Encoding.GetBytes(string)", file="JValue.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m8_1384 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JValue.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m8_2149 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Flush()", span="3305-3305"];
m8_2150 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Flush()", span="3305-3305"];
m8_999 [cluster="System.Text.StringBuilder.ToString()", file="JValue.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1905-1905"];
m8_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1907-1907"];
m8_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1909-1909"];
m8_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1905-1905"];
m8_994 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="828-828"];
m8_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2021-2021"];
m8_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2023-2023"];
m8_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2025-2025"];
m8_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2027-2027"];
m8_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2028-2028"];
m8_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2030-2030"];
m8_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2031-2031"];
m8_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="reader.ReadAsDateTimeOffset()", span="2033-2033"];
m8_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2034-2034"];
m8_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2035-2035"];
m8_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2036-2036"];
m8_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="2038-2038"];
m8_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2039-2039"];
m8_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2021-2021"];
m8_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2211-2211"];
m8_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2213-2213"];
m8_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JValue.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2215-2215"];
m8_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2211-2211"];
m8_1926 [cluster="double.ToString(string)", file="JValue.cs", label="Entry double.ToString(string)", span="0-0"];
m8_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1950-1950"];
m8_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1952-1952"];
m8_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1954-1954"];
m8_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1959-1959"];
m8_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1960-1960"];
m8_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1962-1962"];
m8_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1963-1963"];
m8_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1964-1964"];
m8_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1966-1966"];
m8_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1967-1967"];
m8_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1968-1968"];
m8_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.IsTrue(reader.Read())", span="1970-1970"];
m8_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1971-1971"];
m8_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Assert.IsFalse(reader.Read())", span="1973-1973"];
m8_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1950-1950"];
m8_2171 [file="JValue.cs", label=jsonTextReader, span=""];
m8_2172 [file="JValue.cs", label=jsonTextReader, span=""];
m8_2173 [file="JValue.cs", label=reader, span=""];
m8_2174 [file="JValue.cs", label=reader, span=""];
m8_2175 [file="JValue.cs", label=reader, span=""];
m8_2176 [file="JValue.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m8_2177 [file="JValue.cs", label=reader, span=""];
m8_2178 [file="JValue.cs", label=reader, span=""];
m8_2179 [file="JValue.cs", label=reader, span=""];
m8_2180 [file="JValue.cs", label=reader, span=""];
m8_2181 [file="JValue.cs", label=total, span=""];
m8_2182 [file="JValue.cs", label=total, span=""];
m8_2183 [file="JValue.cs", label=reader, span=""];
m8_2184 [file="JValue.cs", label=reader, span=""];
m8_2185 [file="JValue.cs", label=reader, span=""];
m8_2186 [file="JValue.cs", label=reader, span=""];
m8_2187 [file="JValue.cs", label=reader, span=""];
m8_2188 [file="JValue.cs", label=reader, span=""];
m8_2189 [file="JValue.cs", label=reader, span=""];
m8_2190 [file="JValue.cs", label=reader, span=""];
m8_2191 [file="JValue.cs", label=reader, span=""];
m8_2192 [file="JValue.cs", label=reader, span=""];
m8_2193 [file="JValue.cs", label=reader, span=""];
m8_2194 [file="JValue.cs", label=reader, span=""];
m8_2195 [file="JValue.cs", label=reader, span=""];
m8_2196 [file="JValue.cs", label=reader, span=""];
m8_2197 [file="JValue.cs", label=reader, span=""];
m8_2198 [file="JValue.cs", label=reader, span=""];
m8_2199 [file="JValue.cs", label=reader, span=""];
m8_2200 [file="JValue.cs", label=reader, span=""];
m8_2201 [file="JValue.cs", label=reader, span=""];
m8_2202 [file="JValue.cs", label=reader, span=""];
m8_2203 [file="JValue.cs", label=reader, span=""];
m8_2204 [file="JValue.cs", label=reader, span=""];
m8_2205 [file="JValue.cs", label=reader, span=""];
m8_2206 [file="JValue.cs", label=reader, span=""];
m8_2207 [file="JValue.cs", label=reader, span=""];
m8_2208 [file="JValue.cs", label=reader, span=""];
m8_2209 [file="JValue.cs", label=reader, span=""];
m8_2210 [file="JValue.cs", label=reader, span=""];
m8_2211 [file="JValue.cs", label=reader, span=""];
m8_2212 [file="JValue.cs", label=reader, span=""];
m8_2213 [file="JValue.cs", label=reader, span=""];
m8_2214 [file="JValue.cs", label=jsonTextReader, span=""];
m8_2215 [file="JValue.cs", label=json, span=""];
m8_2216 [file="JValue.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m8_2217 [file="JValue.cs", label="Newtonsoft.Json.Tests.SlowStream", span=""];
m9_327 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="LinqToJsonTest.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m9_225 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82"];
m9_393 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", span="828-828"];
m9_394 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="LinqToJsonTest.cs", label="this.RootSomethingElse = new RootSomethingElse()", span="830-830"];
m9_395 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", span="828-828"];
m9_54 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m9_313 [cluster="Unk.ToDictionary", file="LinqToJsonTest.cs", label="Entry Unk.ToDictionary", span=""];
m9_193 [cluster="Unk.IsNull", file="LinqToJsonTest.cs", label="Entry Unk.IsNull", span=""];
m9_97 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", span="366-366"];
m9_98 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="LinqToJsonTest.cs", label="PersonError person = new PersonError\r\n            {\r\n                Name = ''George Michael Bluth'',\r\n                Age = 16,\r\n                Roles = null,\r\n                Title = ''Mister Manager''\r\n            }", span="368-374"];
m9_99 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="LinqToJsonTest.cs", label="string json = JsonConvert.SerializeObject(person, Formatting.Indented)", span="376-376"];
m9_100 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''George Michael Bluth'''',\r\n  ''''Age'''': 16,\r\n  ''''Title'''': ''''Mister Manager''''\r\n}'', json)", span="378-382"];
m9_101 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", span="366-366"];
m9_117 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="826-826"];
m9_153 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", span="459-459"];
m9_154 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="string json = ''[[\''a\'',\''45\''],[\''b\'',34]]''", span="461-461"];
m9_155 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="List<string> errors = new List<string>()", span="463-463"];
m9_158 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="serializer.Deserialize(new JsonTextReader(new StringReader(json)), typeof(int[,]))", span="472-472"];
m9_156 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="465-465"];
m9_157 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="466-470"];
m9_159 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, errors.Count)", span="474-474"];
m9_160 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''[0][0] - 0 - Could not convert string to integer: a. Path '[0][0]', line 1, position 5.'', errors[0])", span="475-475"];
m9_161 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''[1][0] - 0 - Could not convert string to integer: b. Path '[1][0]', line 1, position 16.'', errors[1])", span="476-476"];
m9_162 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", span="459-459"];
m9_72 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="574-574"];
m9_14 [cluster="Unk.IsTrue", file="LinqToJsonTest.cs", label="Entry Unk.IsTrue", span=""];
m9_31 [cluster="Newtonsoft.Json.Tests.TestObjects.ListErrorObject.ListErrorObject()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ListErrorObject.ListErrorObject()", span="29-29"];
m9_312 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m9_423 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElse()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElse()", span="838-838"];
m9_303 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", span="705-705"];
m9_304 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="LinqToJsonTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="707-707"];
m9_305 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="LinqToJsonTest.cs", label="settings.Error += (obj, args) => { args.ErrorContext.Handled = true; }", span="708-708"];
m9_308 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="LinqToJsonTest.cs", label="string output = JsonConvert.SerializeObject(dictionary, Formatting.None, settings)", span="718-718"];
m9_306 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="LinqToJsonTest.cs", label="var data = new List<ErrorPerson2>()\r\n            {\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hanselman'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hunter'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Guthrie'' },\r\n            }", span="710-715"];
m9_307 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="LinqToJsonTest.cs", label="Dictionary<string, IEnumerable<IErrorPerson2>> dictionary = data.GroupBy(person => person.FirstName).ToDictionary(group => @group.Key, group => @group.Cast<IErrorPerson2>())", span="717-717"];
m9_309 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''{''''Scott'''':[]}'', output)", span="719-719"];
m9_310 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", span="705-705"];
m9_26 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", span="117-117"];
m9_27 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="LinqToJsonTest.cs", label="ListErrorObject[,,] c = new ListErrorObject[,,]\r\n            {\r\n                {\r\n                    {\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value1'',\r\n                            ThrowError = ''Handle this!'',\r\n                            Member2 = ''Member1''\r\n                        },\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value2'',\r\n                            Member2 = ''Member2''\r\n                        },\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value3'',\r\n                            ThrowError = ''Handle that!'',\r\n                            Member2 = ''Member3''\r\n                        }\r\n                    },\r\n                    {\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value1'',\r\n                            ThrowError = ''Handle this!'',\r\n                            Member2 = ''Member1''\r\n                        },\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value2'',\r\n                            Member2 = ''Member2''\r\n                        },\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value3'',\r\n                            ThrowError = ''Handle that!'',\r\n                            Member2 = ''Member3''\r\n                        }\r\n                    }\r\n                }\r\n            }", span="119-161"];
m9_28 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="LinqToJsonTest.cs", label="string json = JsonConvert.SerializeObject(c, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Error = (s, e) =>\r\n                {\r\n                    if (e.CurrentObject.GetType().IsArray)\r\n                    {\r\n                        e.ErrorContext.Handled = true;\r\n                    }\r\n                }\r\n            })", span="163-173"];
m9_29 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''[\r\n  [\r\n    [\r\n      {\r\n        ''''Member'''': ''''Value1'''',\r\n        ''''ThrowError'''': ''''Handle this!'''',\r\n        ''''Member2'''': ''''Member1''''\r\n      },\r\n      {\r\n        ''''Member'''': ''''Value2''''\r\n      },\r\n      {\r\n        ''''Member'''': ''''Value3'''',\r\n        ''''ThrowError'''': ''''Handle that!'''',\r\n        ''''Member2'''': ''''Member3''''\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        ''''Member'''': ''''Value1'''',\r\n        ''''ThrowError'''': ''''Handle this!'''',\r\n        ''''Member2'''': ''''Member1''''\r\n      },\r\n      {\r\n        ''''Member'''': ''''Value2''''\r\n      },\r\n      {\r\n        ''''Member'''': ''''Value3'''',\r\n        ''''ThrowError'''': ''''Handle that!'''',\r\n        ''''Member2'''': ''''Member3''''\r\n      }\r\n    ]\r\n  ]\r\n]'', json)", span="175-208"];
m9_30 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", span="117-117"];
m9_192 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", span="982-982"];
m9_469 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", span="982-982"];
m9_489 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="LinqToJsonTest.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m9_376 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", span="786-786"];
m9_377 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", file="LinqToJsonTest.cs", label="return true;", span="788-788"];
m9_378 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", span="786-786"];
m9_364 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", span="757-757"];
m9_365 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="LinqToJsonTest.cs", label="string json = ''{\''}''", span="759-759"];
m9_366 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="LinqToJsonTest.cs", label="byte[] byteArray = Encoding.UTF8.GetBytes(json)", span="760-760"];
m9_367 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="LinqToJsonTest.cs", label="MemoryStream stream = new MemoryStream(byteArray)", span="761-761"];
m9_368 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="LinqToJsonTest.cs", label="JsonTextReader jReader = new JsonTextReader(new StreamReader(stream))", span="762-762"];
m9_369 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="LinqToJsonTest.cs", label="JsonSerializer s = new JsonSerializer()", span="763-763"];
m9_370 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { ErrorTestObject obj = s.Deserialize<ErrorTestObject>(jReader); }, @''Unterminated string. Expected delimiter: ''''. Path '', line 1, position 3.'')", span="765-765"];
m9_371 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", span="757-757"];
m9_404 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="852-852"];
m9_405 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="throw new NotImplementedException();", span="854-854"];
m9_406 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="852-852"];
m9_133 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="850-850"];
m9_45 [cluster="Newtonsoft.Json.Tests.TestObjects.ListErrorObjectCollection.ListErrorObjectCollection()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ListErrorObjectCollection.ListErrorObjectCollection()", span="31-31"];
m9_379 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="791-791"];
m9_380 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="var innerObject = serializer.Deserialize(reader, typeof(SomethingElse))", span="797-797"];
m9_381 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="return null;", span="799-799"];
m9_382 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label=Exception, span="801-801"];
m9_383 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="throw new Exception(''An error occurred.'', ex);", span="804-804"];
m9_384 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="791-791"];
m9_490 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorTestObject.OnError(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ErrorTestObject.OnError(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", span="1056-1056"];
m9_491 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorTestObject.OnError(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ErrorTestObject.OnError(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", span="1056-1056"];
m9_32 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="429-429"];
m9_348 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", span="743-743"];
m9_349 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="string json = ''{\''}''", span="745-745"];
m9_350 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="byte[] byteArray = Encoding.UTF8.GetBytes(json)", span="746-746"];
m9_351 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="MemoryStream stream = new MemoryStream(byteArray)", span="747-747"];
m9_352 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="JsonTextReader jReader = new JsonTextReader(new StreamReader(stream))", span="748-748"];
m9_353 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="JsonSerializer s = new JsonSerializer()", span="749-749"];
m9_355 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="ErrorPerson2 obj = s.Deserialize<ErrorPerson2>(jReader)", span="751-751"];
m9_354 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="s.Error += (sender, args) => { args.ErrorContext.Handled = true; }", span="750-750"];
m9_356 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="Assert.IsNull(obj)", span="753-753"];
m9_357 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", span="743-743"];
m9_437 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", span="904-904"];
m9_438 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="LinqToJsonTest.cs", label="string result = JsonConvert.SerializeObject(new SomethingElse(), new JsonSerializerSettings\r\n            {\r\n                Error = (o, e) => { e.ErrorContext.Handled = true; }\r\n            })", span="906-909"];
m9_439 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="LinqToJsonTest.cs", label="Assert.AreEqual(string.Empty, result)", span="911-911"];
m9_440 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", span="904-904"];
m9_55 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751"];
m9_102 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonError.PersonError()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonError.PersonError()", span="32-32"];
m9_464 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="775-775"];
m9_470 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", span="986-986"];
m9_471 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="char[] temp = new char[buffer.Length]", span="988-988"];
m9_474 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="charsRead = new StringReader(''['').Read(temp, index, count)", span="992-992"];
m9_477 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="charsRead = new StringReader('','').Read(temp, index, count)", span="999-999"];
m9_479 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="charsRead = new StringReader(element).Read(temp, index, count)", span="1004-1004"];
m9_484 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="Array.Copy(temp, index, buffer, index, charsRead)", span="1014-1014"];
m9_472 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="int charsRead = 0", span="989-989"];
m9_473 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label=_firstRead, span="990-990"];
m9_476 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label=_readComma, span="997-997"];
m9_475 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="_firstRead = false", span="993-993"];
m9_481 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="_position += charsRead", span="1009-1009"];
m9_485 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="return charsRead;", span="1015-1015"];
m9_478 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="_readComma = false", span="1000-1000"];
m9_480 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="_readComma = true", span="1005-1005"];
m9_482 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="_position > 65536", span="1010-1010"];
m9_483 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="throw new Exception(''too far'');", span="1012-1012"];
m9_486 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", span="986-986"];
m9_207 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="797-797"];
m9_400 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="847-847"];
m9_401 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="throw new NotImplementedException();", span="849-849"];
m9_402 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="847-847"];
m9_416 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", span="871-871"];
m9_417 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="var serialiser = JsonSerializer.Create(new JsonSerializerSettings() { })", span="873-873"];
m9_418 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="Something s = new Something\r\n            {\r\n                RootSomethingElse = new RootSomethingElse\r\n                {\r\n                    SomethingElse = new SomethingElse()\r\n                }\r\n            }", span="875-881"];
m9_421 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<Exception>(() => { serialiser.Serialize(writer, r); }, ''An error occurred.'')", span="889-889"];
m9_419 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="RootThing r = new RootThing\r\n            {\r\n                Something = s\r\n            }", span="882-885"];
m9_420 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="var writer = new System.IO.StringWriter()", span="887-887"];
m9_422 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", span="871-871"];
m9_463 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DataModel.DataModel()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DataModel.DataModel()", span="953-953"];
m9_246 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", span="605-605"];
m9_247 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="IList<string> errors = new List<string>()", span="607-607"];
m9_248 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="string input = ''{\''events\'':[{\''code\'':64411},{\''code\'':64411,\''prio''", span="609-609"];
m9_252 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="jsonSerializer.Error += (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                }", span="619-623"];
m9_257 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, errors.Count)", span="632-632"];
m9_258 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''Unterminated string. Expected delimiter: ''''. Path 'events[1].code', line 1, position 45.'', errors[0])", span="633-633"];
m9_259 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''Unexpected end when deserializing array. Path 'events[1].code', line 1, position 45.'', errors[1])", span="634-634"];
m9_260 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events[1].code', line 1, position 45.'', errors[2])", span="635-635"];
m9_249 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="int maxDepth = 256", span="611-611"];
m9_250 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="var jsonTextReader = new JsonTextReader(new StringReader(input)) { MaxDepth = maxDepth }", span="612-612"];
m9_251 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="JsonSerializer jsonSerializer = JsonSerializer.Create(new JsonSerializerSettings\r\n                {\r\n                    MaxDepth = maxDepth,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n                })", span="614-618"];
m9_253 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="LogMessage logMessage = jsonSerializer.Deserialize<LogMessage>(jsonTextReader)", span="625-625"];
m9_254 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Assert.IsNotNull(logMessage.Events)", span="627-627"];
m9_255 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, logMessage.Events.Count)", span="628-628"];
m9_256 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''64411'', logMessage.Events[0].Code)", span="629-629"];
m9_261 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", span="605-605"];
m9_12 [cluster="Unk.Any", file="LinqToJsonTest.cs", label="Entry Unk.Any", span=""];
m9_75 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
m9_198 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", span="524-524"];
m9_199 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="IList<string> errors = new List<string>()", span="526-526"];
m9_200 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="object o = JsonConvert.DeserializeObject(\r\n                ''[0,x]'',\r\n                typeof(int[]),\r\n                new JsonSerializerSettings\r\n                {\r\n                    Error = (sender, arg) =>\r\n                    {\r\n                        errors.Add(arg.ErrorContext.Error.Message);\r\n                        arg.ErrorContext.Handled = true;\r\n                    }\r\n                })", span="528-538"];
m9_202 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, errors.Count)", span="542-542"];
m9_203 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path '[0]', line 1, position 4.'', errors[0])", span="543-543"];
m9_201 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="Assert.IsNotNull(o)", span="540-540"];
m9_204 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, ((int[])o).Length)", span="545-545"];
m9_205 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, ((int[])o)[0])", span="546-546"];
m9_206 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", span="524-524"];
m9_167 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", span="480-480"];
m9_168 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="string json = ''{'A':{'A':{'A':{'A':{'A':{}}}}}}''", span="482-482"];
m9_169 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer() { }", span="483-483"];
m9_172 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="serializer.Deserialize<Nest>(new JsonTextReader(new StringReader(json)) { MaxDepth = 3 })", span="491-491"];
m9_170 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="IList<string> errors = new List<string>()", span="484-484"];
m9_171 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="serializer.Error += (sender, e) =>\r\n            {\r\n                e.ErrorContext.Handled = true;\r\n                errors.Add(e.ErrorContext.Path);\r\n            }", span="485-489"];
m9_173 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, errors.Count)", span="493-493"];
m9_174 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''A.A.A'', errors[0])", span="494-494"];
m9_175 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", span="480-480"];
m9_429 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="999-999"];
m9_73 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m9_122 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", span="419-419"];
m9_123 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="string json = ''{}''", span="421-421"];
m9_124 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="List<string> errors = new List<string>()", span="422-422"];
m9_128 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="serializer.Deserialize(new JsonTextReader(new StringReader(json)), typeof(MyTypeWithRequiredMembers))", span="430-430"];
m9_125 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="423-423"];
m9_127 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="425-429"];
m9_129 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, errors.Count)", span="432-432"];
m9_130 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="Assert.IsTrue(errors[0].StartsWith('' - Required1 - Required property 'Required1' not found in JSON. Path '', line 1, position 2.''))", span="433-433"];
m9_131 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="Assert.IsTrue(errors[1].StartsWith('' - Required2 - Required property 'Required2' not found in JSON. Path '', line 1, position 2.''))", span="434-434"];
m9_126 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="serializer.MetadataPropertyHandling = MetadataPropertyHandling.Default", span="424-424"];
m9_132 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", span="419-419"];
m9_93 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m9_134 [cluster="string.StartsWith(string)", file="LinqToJsonTest.cs", label="Entry string.StartsWith(string)", span="0-0"];
m9_213 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", span="550-550"];
m9_214 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="IList<string> errors = new List<string>()", span="552-552"];
m9_215 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="JTokenReader reader = new JTokenReader(new JArray(0, true))", span="554-554"];
m9_216 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Error = (sender, arg) =>\r\n                {\r\n                    errors.Add(arg.ErrorContext.Error.Message);\r\n                    arg.ErrorContext.Handled = true;\r\n                }\r\n            })", span="556-563"];
m9_219 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, errors.Count)", span="568-568"];
m9_220 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Error reading integer. Unexpected token: Boolean. Path '[1]'.'', errors[0])", span="569-569"];
m9_217 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="object o = serializer.Deserialize(reader, typeof(int[]))", span="564-564"];
m9_218 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="Assert.IsNotNull(o)", span="566-566"];
m9_221 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, ((int[])o).Length)", span="571-571"];
m9_222 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, ((int[])o)[0])", span="572-572"];
m9_223 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", span="550-550"];
m9_397 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", span="842-842"];
m9_398 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", file="LinqToJsonTest.cs", label="return true;", span="844-844"];
m9_399 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", span="842-842"];
m9_33 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
m9_314 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m9_392 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m9_47 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", span="255-255"];
m9_48 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="LinqToJsonTest.cs", label="DateTimeErrorObjectCollection c = JsonConvert.DeserializeObject<DateTimeErrorObjectCollection>(@''[\r\n  ''''2009-09-09T00:00:00Z'''',\r\n  ''''kjhkjhkjhkjh'''',\r\n  [\r\n    1\r\n  ],\r\n  ''''1977-02-20T00:00:00Z'''',\r\n  null,\r\n  ''''2000-12-01T00:00:00Z''''\r\n]'', new IsoDateTimeConverter())", span="257-266"];
m9_49 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, c.Count)", span="268-268"];
m9_50 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(2009, 9, 9, 0, 0, 0, DateTimeKind.Utc), c[0])", span="269-269"];
m9_51 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(1977, 2, 20, 0, 0, 0, DateTimeKind.Utc), c[1])", span="270-270"];
m9_52 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 1, 0, 0, 0, DateTimeKind.Utc), c[2])", span="271-271"];
m9_53 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", span="255-255"];
m9_18 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", span="84-84"];
m9_19 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="LinqToJsonTest.cs", label="ListErrorObjectCollection c = JsonConvert.DeserializeObject<ListErrorObjectCollection>(@''[\r\n  {\r\n    ''''Member'''': ''''Value1'''',\r\n    ''''Member2'''': null\r\n  },\r\n  {\r\n    ''''Member'''': ''''Value2''''\r\n  },\r\n  {\r\n    ''''ThrowError'''': ''''Value'''',\r\n    ''''Object'''': {\r\n      ''''Array'''': [\r\n        1,\r\n        2\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    ''''ThrowError'''': ''''Handle this!'''',\r\n    ''''Member'''': ''''Value3''''\r\n  }\r\n]'')", span="86-107"];
m9_20 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, c.Count)", span="109-109"];
m9_21 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Value1'', c[0].Member)", span="110-110"];
m9_22 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Value2'', c[1].Member)", span="111-111"];
m9_23 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Value3'', c[2].Member)", span="112-112"];
m9_24 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Handle this!'', c[2].ThrowError)", span="113-113"];
m9_25 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", span="84-84"];
m9_116 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m9_80 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_11 [cluster="System.Console.WriteLine(string)", file="LinqToJsonTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m9_84 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", span="333-333"];
m9_85 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="bool eventErrorHandlerCalled = false", span="335-335"];
m9_86 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="DateTimeErrorObjectCollection c = JsonConvert.DeserializeObject<DateTimeErrorObjectCollection>(\r\n                @''[\r\n  ''''2009-09-09T00:00:00Z'''',\r\n  ''''kjhkjhkjhkjh'''',\r\n  [\r\n    1\r\n  ],\r\n  ''''1977-02-20T00:00:00Z'''',\r\n  null,\r\n  ''''2000-12-01T00:00:00Z''''\r\n]'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    Error = (s, a) => eventErrorHandlerCalled = true,\r\n                    Converters =\r\n                    {\r\n                        new IsoDateTimeConverter()\r\n                    }\r\n                })", span="337-355"];
m9_87 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, c.Count)", span="357-357"];
m9_88 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(2009, 9, 9, 0, 0, 0, DateTimeKind.Utc), c[0])", span="358-358"];
m9_89 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(1977, 2, 20, 0, 0, 0, DateTimeKind.Utc), c[1])", span="359-359"];
m9_90 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 1, 0, 0, 0, DateTimeKind.Utc), c[2])", span="360-360"];
m9_91 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(false, eventErrorHandlerCalled)", span="362-362"];
m9_92 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", span="333-333"];
m9_10 [cluster="Unk.AreEqual", file="LinqToJsonTest.cs", label="Entry Unk.AreEqual", span=""];
m9_407 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", span="860-860"];
m9_408 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="var serialiser = JsonSerializer.Create(new JsonSerializerSettings() { })", span="862-862"];
m9_409 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="string foo = ''{ something: { rootSomethingElse { somethingElse: 0 } } }''", span="864-864"];
m9_411 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="ExceptionAssert.Throws<Exception>(() => { serialiser.Deserialize(reader, typeof(Something)); }, ''An error occurred.'')", span="867-867"];
m9_410 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="var reader = new System.IO.StringReader(foo)", span="865-865"];
m9_412 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", span="860-860"];
m9_103 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", span="386-386"];
m9_104 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="List<string> errors = new List<string>()", span="388-388"];
m9_105 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="string json = @''[[''''kjhkjhkjhkjh'''']]''", span="390-390"];
m9_108 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n                {\r\n                    // only log an error once\r\n                    if (args.CurrentObject == args.ErrorContext.OriginalObject)\r\n                    {\r\n                        errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                    }\r\n                }", span="396-403"];
m9_113 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, errors.Count)", span="414-414"];
m9_114 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''[0][0] - 0 - Could not convert string to DateTime: kjhkjhkjhkjh. Path '[0][0]', line 1, position 16.'', errors[0])", span="415-415"];
m9_106 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="Exception e = null", span="392-392"];
m9_109 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="serializer.Deserialize(new StringReader(json), typeof(List<List<DateTime>>))", span="405-405"];
m9_107 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="395-395"];
m9_110 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label=Exception, span="407-407"];
m9_112 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''Could not convert string to DateTime: kjhkjhkjhkjh. Path '[0][0]', line 1, position 16.'', e.Message)", span="412-412"];
m9_111 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="e = ex", span="409-409"];
m9_115 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", span="386-386"];
m9_208 [cluster="Unk.IsNotNull", file="LinqToJsonTest.cs", label="Entry Unk.IsNotNull", span=""];
m9_385 [cluster="System.Exception.Exception(string, System.Exception)", file="LinqToJsonTest.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m9_180 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m9_403 [cluster="System.NotImplementedException.NotImplementedException()", file="LinqToJsonTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m9_34 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328"];
m9_465 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="929-933"];
m9_16 [cluster="lambda expression", file="LinqToJsonTest.cs", label="m == c.Messages[0]", span="80-80"];
m9_15 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="80-80"];
m9_17 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="80-80"];
m9_36 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.CurrentObject.GetType().IsArray", span="168-168"];
m9_37 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.ErrorContext.Handled = true", span="170-170"];
m9_35 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="166-172"];
m9_38 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="166-172"];
m9_77 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="283-283"];
m9_82 [cluster="lambda expression", file="LinqToJsonTest.cs", label="m == errors[0]", span="325-325"];
m9_78 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.ErrorContext.Handled = true", span="284-284"];
m9_81 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="325-325"];
m9_76 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="281-285"];
m9_79 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="281-285"];
m9_83 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="325-325"];
m9_94 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="350-350"];
m9_95 [cluster="lambda expression", file="LinqToJsonTest.cs", label="eventErrorHandlerCalled = true", span="350-350"];
m9_96 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="350-350"];
m9_120 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="401-401"];
m9_119 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.CurrentObject == args.ErrorContext.OriginalObject", span="399-399"];
m9_118 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="396-403"];
m9_121 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="396-403"];
m9_136 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="427-427"];
m9_137 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.ErrorContext.Handled = true", span="428-428"];
m9_135 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="425-429"];
m9_138 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="425-429"];
m9_150 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="447-447"];
m9_151 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.ErrorContext.Handled = true", span="448-448"];
m9_149 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="445-449"];
m9_152 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="445-449"];
m9_164 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="468-468"];
m9_165 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.ErrorContext.Handled = true", span="469-469"];
m9_163 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="466-470"];
m9_166 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="466-470"];
m9_178 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(e.ErrorContext.Path)", span="488-488"];
m9_177 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.ErrorContext.Handled = true", span="487-487"];
m9_176 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="485-489"];
m9_179 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="485-489"];
m9_195 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="510-510"];
m9_196 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.ErrorContext.Handled = true", span="511-511"];
m9_194 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="508-512"];
m9_197 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="508-512"];
m9_210 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(arg.ErrorContext.Error.Message)", span="535-535"];
m9_211 [cluster="lambda expression", file="LinqToJsonTest.cs", label="arg.ErrorContext.Handled = true", span="536-536"];
m9_209 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="533-537"];
m9_212 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="533-537"];
m9_227 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(arg.ErrorContext.Error.Message)", span="560-560"];
m9_228 [cluster="lambda expression", file="LinqToJsonTest.cs", label="arg.ErrorContext.Handled = true", span="561-561"];
m9_226 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="558-562"];
m9_229 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="558-562"];
m9_243 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(arg.ErrorContext.Error.Message)", span="587-587"];
m9_244 [cluster="lambda expression", file="LinqToJsonTest.cs", label="arg.ErrorContext.Handled = true", span="588-588"];
m9_242 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="585-589"];
m9_245 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="585-589"];
m9_263 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="621-621"];
m9_264 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.ErrorContext.Handled = true", span="622-622"];
m9_262 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="619-623"];
m9_265 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="619-623"];
m9_283 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="651-651"];
m9_284 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.ErrorContext.Handled = true", span="652-652"];
m9_282 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="649-653"];
m9_285 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="649-653"];
m9_300 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="685-685"];
m9_301 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.ErrorContext.Handled = true", span="686-686"];
m9_299 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="683-687"];
m9_302 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="683-687"];
m9_316 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.ErrorContext.Handled = true", span="708-708"];
m9_318 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="717-717"];
m9_321 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="717-717"];
m9_324 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="717-717"];
m9_315 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="708-708"];
m9_317 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="708-708"];
m9_319 [cluster="lambda expression", file="LinqToJsonTest.cs", label="person.FirstName", span="717-717"];
m9_320 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="717-717"];
m9_322 [cluster="lambda expression", file="LinqToJsonTest.cs", label="@group.Key", span="717-717"];
m9_323 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="717-717"];
m9_325 [cluster="lambda expression", file="LinqToJsonTest.cs", label="@group.Cast<IErrorPerson2>()", span="717-717"];
m9_326 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="717-717"];
m9_337 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.ErrorContext.Handled = true", span="726-726"];
m9_339 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="736-736"];
m9_342 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="736-736"];
m9_345 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="736-736"];
m9_336 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="726-726"];
m9_338 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="726-726"];
m9_340 [cluster="lambda expression", file="LinqToJsonTest.cs", label="person.FirstName", span="736-736"];
m9_341 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="736-736"];
m9_343 [cluster="lambda expression", file="LinqToJsonTest.cs", label="@group.Key", span="736-736"];
m9_344 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="736-736"];
m9_346 [cluster="lambda expression", file="LinqToJsonTest.cs", label="@group.Cast<IErrorPerson2>()", span="736-736"];
m9_347 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="736-736"];
m9_362 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.ErrorContext.Handled = true", span="750-750"];
m9_361 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="750-750"];
m9_363 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="750-750"];
m9_374 [cluster="lambda expression", file="LinqToJsonTest.cs", label="ErrorTestObject obj = s.Deserialize<ErrorTestObject>(jReader)", span="765-765"];
m9_373 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="765-765"];
m9_375 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="765-765"];
m9_414 [cluster="lambda expression", file="LinqToJsonTest.cs", label="serialiser.Deserialize(reader, typeof(Something))", span="867-867"];
m9_413 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="867-867"];
m9_415 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="867-867"];
m9_427 [cluster="lambda expression", file="LinqToJsonTest.cs", label="serialiser.Serialize(writer, r)", span="889-889"];
m9_426 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="889-889"];
m9_428 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="889-889"];
m9_435 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.ErrorContext.Handled = true", span="897-897"];
m9_434 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="897-897"];
m9_436 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="897-897"];
m9_442 [cluster="lambda expression", file="LinqToJsonTest.cs", label="e.ErrorContext.Handled = true", span="908-908"];
m9_441 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Entry lambda expression", span="908-908"];
m9_443 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="908-908"];
m9_466 [cluster="lambda expression", file="LinqToJsonTest.cs", label="errorMessages.Add(args.ErrorContext.Error.Message)", span="931-931"];
m9_467 [cluster="lambda expression", file="LinqToJsonTest.cs", label="args.ErrorContext.Handled = true", span="932-932"];
m9_468 [cluster="lambda expression", file="LinqToJsonTest.cs", label="Exit lambda expression", span="929-933"];
m9_39 [cluster="object.GetType()", file="LinqToJsonTest.cs", label="Entry object.GetType()", span="0-0"];
m9_487 [cluster="System.IO.StringReader.Read(char[], int, int)", file="LinqToJsonTest.cs", label="Entry System.IO.StringReader.Read(char[], int, int)", span="0-0"];
m9_424 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootThing.RootThing()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootThing.RootThing()", span="768-768"];
m9_266 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", span="639-639"];
m9_267 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="IList<string> errors = new List<string>()", span="641-641"];
m9_268 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="string input = ''{\''events\'':{\''code\'':64411},\''events2\'':{\''code\'':64412,''", span="643-643"];
m9_272 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="jsonSerializer.Error += (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                }", span="649-653"];
m9_278 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, errors.Count)", span="663-663"];
m9_279 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events2.code', line 1, position 49.'', errors[0])", span="664-664"];
m9_280 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events2.code', line 1, position 49.'', errors[1])", span="665-665"];
m9_269 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="int maxDepth = 256", span="645-645"];
m9_270 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="var jsonTextReader = new JsonTextReader(new StringReader(input)) { MaxDepth = maxDepth }", span="646-646"];
m9_271 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="JsonSerializer jsonSerializer = JsonSerializer.Create(new JsonSerializerSettings { MaxDepth = maxDepth, MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="648-648"];
m9_273 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="IDictionary<string, LogEvent> logEvents = jsonSerializer.Deserialize<IDictionary<string, LogEvent>>(jsonTextReader)", span="655-655"];
m9_274 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Assert.IsNotNull(logEvents)", span="657-657"];
m9_275 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, logEvents.Count)", span="658-658"];
m9_276 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''64411'', logEvents[''events''].Code)", span="659-659"];
m9_277 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''64412'', logEvents[''events2''].Code)", span="660-660"];
m9_281 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", span="639-639"];
m9_74 [cluster="System.IO.StringReader.StringReader(string)", file="LinqToJsonTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m9_40 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", span="212-212"];
m9_41 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="LinqToJsonTest.cs", label="ListErrorObjectCollection c = new ListErrorObjectCollection\r\n            {\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value1'',\r\n                    ThrowError = ''Handle this!'',\r\n                    Member2 = ''Member1''\r\n                },\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value2'',\r\n                    Member2 = ''Member2''\r\n                },\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value3'',\r\n                    ThrowError = ''Handle that!'',\r\n                    Member2 = ''Member3''\r\n                }\r\n            }", span="214-233"];
m9_42 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="LinqToJsonTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="235-235"];
m9_43 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="LinqToJsonTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Member'''': ''''Value1'''',\r\n    ''''ThrowError'''': ''''Handle this!'''',\r\n    ''''Member2'''': ''''Member1''''\r\n  },\r\n  {\r\n    ''''Member'''': ''''Value2''''\r\n  },\r\n  {\r\n    ''''Member'''': ''''Value3'''',\r\n    ''''ThrowError'''': ''''Handle that!'''',\r\n    ''''Member2'''': ''''Member3''''\r\n  }\r\n]'', json)", span="237-251"];
m9_44 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", span="212-212"];
m9_224 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52"];
m9_71 [cluster="System.Collections.Generic.List<T>.List()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_13 [cluster="string.Join(string, params string[])", file="LinqToJsonTest.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m9_181 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", span="503-503"];
m9_182 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="IList<string> errors = new List<string>()", span="505-505"];
m9_183 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="507-507"];
m9_184 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="serializer.Error += (sender, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="508-512"];
m9_187 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, errors.Count)", span="517-517"];
m9_188 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''too far'', errors[0])", span="518-518"];
m9_189 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''too far'', errors[1])", span="519-519"];
m9_190 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Infinite loop detected from error handling. Path '[1023]', line 1, position 65536.'', errors[2])", span="520-520"];
m9_185 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="ErrorPerson[] result = serializer.Deserialize<ErrorPerson[]>(new JsonTextReader(new ThrowingReader()))", span="514-514"];
m9_186 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="Assert.IsNull(result)", span="516-516"];
m9_191 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", span="503-503"];
m9_360 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="LinqToJsonTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m9_396 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootSomethingElse.RootSomethingElse()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootSomethingElse.RootSomethingElse()", span="773-773"];
m9_425 [cluster="System.IO.StringWriter.StringWriter()", file="LinqToJsonTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m9_0 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", span="54-54"];
m9_1 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="56-67"];
m9_2 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="var possibleMsgs = new[]\r\n            {\r\n                ''[1] - Error message for member 1 = An item with the same key has already been added.'',\r\n                ''[1] - Error message for member 1 = An element with the same key already exists in the dictionary.'', // mono\r\n                ''[1] - Error message for member 1 = An item with the same key has already been added. Key: Jim'' // netcore\r\n            }", span="69-74"];
m9_3 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="VersionKeyedCollection c = JsonConvert.DeserializeObject<VersionKeyedCollection>(json)", span="75-75"];
m9_7 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="Assert.IsTrue(possibleMsgs.Any(m => m == c.Messages[0]), ''Expected One of: '' + Environment.NewLine + string.Join(Environment.NewLine, possibleMsgs) + Environment.NewLine + ''Was: '' + Environment.NewLine + c.Messages[0])", span="80-80"];
m9_4 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, c.Count)", span="76-76"];
m9_5 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, c.Messages.Count)", span="77-77"];
m9_6 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="Console.WriteLine(c.Messages[0])", span="79-79"];
m9_8 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", span="54-54"];
m9_230 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", span="576-576"];
m9_231 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="IList<string> errors = new List<string>()", span="578-578"];
m9_232 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Dictionary<string, int[]> o = JsonConvert.DeserializeObject<Dictionary<string, int[]>>(\r\n                ''{'badarray':[0,x,2],'goodarray':[0,1,2]}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default,\r\n                    Error = (sender, arg) =>\r\n                    {\r\n                        errors.Add(arg.ErrorContext.Error.Message);\r\n                        arg.ErrorContext.Handled = true;\r\n                    }\r\n                })", span="580-590"];
m9_234 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, errors.Count)", span="594-594"];
m9_235 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path 'badarray[0]', line 1, position 16.'', errors[0])", span="595-595"];
m9_236 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Unexpected character encountered while parsing value: ,. Path 'badarray[1]', line 1, position 17.'', errors[1])", span="596-596"];
m9_233 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Assert.IsNotNull(o)", span="592-592"];
m9_237 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, o.Count)", span="598-598"];
m9_238 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, o[''badarray''].Length)", span="599-599"];
m9_239 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, o[''badarray''][0])", span="600-600"];
m9_240 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, o[''badarray''][1])", span="601-601"];
m9_241 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", span="576-576"];
m9_311 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorPerson2.ErrorPerson2()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ErrorPerson2.ErrorPerson2()", span="969-969"];
m9_57 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", span="275-275"];
m9_58 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="List<string> errors = new List<string>()", span="277-277"];
m9_59 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Error = delegate(object sender, ErrorEventArgs args)\r\n                {\r\n                    errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                    args.ErrorContext.Handled = true;\r\n                },\r\n                Converters = { new IsoDateTimeConverter() }\r\n            })", span="279-287"];
m9_65 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, errors.Count)", span="312-312"];
m9_67 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Assert.IsTrue(possibleErrs.Any(m => m == errors[0]),\r\n                ''Expected One of: '' + string.Join(Environment.NewLine, possibleErrs) + Environment.NewLine + ''But was: '' + errors[0])", span="325-326"];
m9_68 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''[2] - 2 - Unexpected token parsing date. Expected String, got StartArray. Path '[2]', line 4, position 9.'', errors[1])", span="328-328"];
m9_69 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''[4] - 4 - Cannot convert null value to System.DateTime. Path '[4]', line 8, position 12.'', errors[2])", span="329-329"];
m9_60 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="var c = serializer.Deserialize<List<DateTime>>(new JsonTextReader(new StringReader(@''[\r\n        ''''2009-09-09T00:00:00Z'''',\r\n        ''''I am not a date and will error!'''',\r\n        [\r\n          1\r\n        ],\r\n        ''''1977-02-20T00:00:00Z'''',\r\n        null,\r\n        ''''2000-12-01T00:00:00Z''''\r\n      ]'')))", span="288-297"];
m9_61 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(3, c.Count)", span="307-307"];
m9_62 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(2009, 9, 9, 0, 0, 0, DateTimeKind.Utc), c[0])", span="308-308"];
m9_63 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(1977, 2, 20, 0, 0, 0, DateTimeKind.Utc), c[1])", span="309-309"];
m9_64 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 1, 0, 0, 0, DateTimeKind.Utc), c[2])", span="310-310"];
m9_66 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="var possibleErrs = new[]\r\n            {\r\n#if !(NET20 || NET35)\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is an unknown word starting at index 0.'',\r\n                ''[1] - 1 - String was not recognized as a valid DateTime.''\r\n#else\r\n    // handle typo fix in later versions of .NET\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is an unknown word starting at index 0.'',\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is a unknown word starting at index 0.''\r\n#endif\r\n            }", span="313-323"];
m9_70 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", span="275-275"];
m9_46 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m9_9 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m9_444 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", span="915-915"];
m9_445 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="IList<string> errorMessages = new List<string>()", span="917-917"];
m9_446 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{\r\n  ''''string1'''': ''''blah'''',\r\n  ''''int1'''': 2147483648,\r\n  ''''string2'''': ''''also blah'''',\r\n  ''''int2'''': 2147483648,\r\n  ''''string3'''': ''''more blah'''',\r\n  ''''dateTime1'''': ''''200NOTDATE'''',\r\n  ''''string4'''': ''''even more blah''''\r\n}''))", span="919-927"];
m9_448 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="settings.Error = (sender, args) =>\r\n            {\r\n                errorMessages.Add(args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="929-933"];
m9_459 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''JSON integer 2147483648 is too large or small for an Int32. Path 'int1', line 3, position 20.'', errorMessages[0])", span="948-948"];
m9_460 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''JSON integer 2147483648 is too large or small for an Int32. Path 'int2', line 5, position 20.'', errorMessages[1])", span="949-949"];
m9_461 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Could not convert string to DateTime: 200NOTDATE. Path 'dateTime1', line 7, position 27.'', errorMessages[2])", span="950-950"];
m9_447 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="928-928"];
m9_451 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="serializer.Populate(reader, data)", span="937-937"];
m9_449 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(settings)", span="934-934"];
m9_450 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="DataModel data = new DataModel()", span="936-936"];
m9_452 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''blah'', data.String1)", span="939-939"];
m9_453 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, data.Int1)", span="940-940"];
m9_454 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''also blah'', data.String2)", span="941-941"];
m9_455 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, data.Int2)", span="942-942"];
m9_456 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''more blah'', data.String3)", span="943-943"];
m9_457 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(default(DateTime), data.DateTime1)", span="944-944"];
m9_458 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''even more blah'', data.String4)", span="945-945"];
m9_462 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.IntegerToLarge_ReadNextValue()", span="915-915"];
m9_56 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="LinqToJsonTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m9_139 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", span="438-438"];
m9_140 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="string json = ''[\''a\'',\''b\'',\''45\'',34]''", span="440-440"];
m9_141 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="List<string> errors = new List<string>()", span="442-442"];
m9_144 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="serializer.Deserialize(new JsonTextReader(new StringReader(json)), typeof(int[]))", span="451-451"];
m9_142 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="444-444"];
m9_143 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="445-449"];
m9_145 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, errors.Count)", span="453-453"];
m9_146 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''[0] - 0 - Could not convert string to integer: a. Path '[0]', line 1, position 4.'', errors[0])", span="454-454"];
m9_147 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''[1] - 1 - Could not convert string to integer: b. Path '[1]', line 1, position 8.'', errors[1])", span="455-455"];
m9_148 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", span="438-438"];
m9_286 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", span="670-670"];
m9_287 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="IList<string> errors = new List<string>()", span="672-672"];
m9_288 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="string json = @''{\r\n  ''''Explicit'''': true,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Int'''': 1,\r\n  ''''ChildObject'''': {\r\n    ''''Integer'''': 123''", span="674-679"];
m9_289 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="TestDynamicObject newDynamicObject = JsonConvert.DeserializeObject<TestDynamicObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                },\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="681-689"];
m9_295 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, errors.Count)", span="698-698"];
m9_296 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'ChildObject.Integer', line 6, position 18.'', errors[0])", span="699-699"];
m9_297 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'ChildObject.Integer', line 6, position 18.'', errors[1])", span="700-700"];
m9_290 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Assert.AreEqual(true, newDynamicObject.Explicit)", span="690-690"];
m9_291 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="dynamic d = newDynamicObject", span="692-692"];
m9_292 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Assert.AreEqual(99.9, d.Decimal)", span="694-694"];
m9_293 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, d.Int)", span="695-695"];
m9_294 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Assert.AreEqual(123, d.ChildObject.Integer)", span="696-696"];
m9_298 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", span="670-670"];
m9_328 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", span="723-723"];
m9_329 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="LinqToJsonTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="725-725"];
m9_330 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="LinqToJsonTest.cs", label="settings.Error += (obj, args) => { args.ErrorContext.Handled = true; }", span="726-726"];
m9_333 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="LinqToJsonTest.cs", label="string output = JsonConvert.SerializeObject(dictionary, Formatting.None, settings)", span="737-737"];
m9_331 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="LinqToJsonTest.cs", label="var data = new List<ErrorPerson2>\r\n            {\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hanselman'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hunter'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Guthrie'' },\r\n                new ErrorPerson2 { FirstName = ''James'', LastName = ''Newton-King'' },\r\n            }", span="728-734"];
m9_332 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="LinqToJsonTest.cs", label="Dictionary<string, IEnumerable<IErrorPerson2>> dictionary = data.GroupBy(person => person.FirstName).ToDictionary(group => @group.Key, group => @group.Cast<IErrorPerson2>())", span="736-736"];
m9_334 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''{''''Scott'''':[],''''James'''':[]}'', output)", span="739-739"];
m9_335 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", span="723-723"];
m9_359 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="LinqToJsonTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m9_430 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", span="893-893"];
m9_431 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="LinqToJsonTest.cs", label="SomethingElse result = JsonConvert.DeserializeObject<SomethingElse>(''{}'', new JsonSerializerSettings\r\n            {\r\n                Error = (o, e) => { e.ErrorContext.Handled = true; }\r\n            })", span="895-898"];
m9_432 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="LinqToJsonTest.cs", label="Assert.IsNull(result)", span="900-900"];
m9_433 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", span="893-893"];
m9_358 [cluster="System.Text.Encoding.GetBytes(string)", file="LinqToJsonTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m9_386 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="808-808"];
m9_387 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Something s = (Something)value", span="812-812"];
m9_388 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="serializer.Serialize(writer, s.RootSomethingElse)", span="816-816"];
m9_389 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label=Exception, span="818-818"];
m9_390 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="throw new Exception(''An error occurred.'', ex);", span="821-821"];
m9_391 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="808-808"];
m9_372 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="357-357"];
m9_492 [file="LinqToJsonTest.cs", label=c, span=""];
m9_493 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_494 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_495 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_496 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_497 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_498 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_499 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_500 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_501 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_502 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_503 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_504 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_505 [file="LinqToJsonTest.cs", label=errors, span=""];
m9_506 [file="LinqToJsonTest.cs", label=jReader, span=""];
m9_507 [file="LinqToJsonTest.cs", label=s, span=""];
m9_508 [file="LinqToJsonTest.cs", label="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something", span=""];
m9_509 [file="LinqToJsonTest.cs", label=serialiser, span=""];
m9_510 [file="LinqToJsonTest.cs", label=reader, span=""];
m9_511 [file="LinqToJsonTest.cs", label=serialiser, span=""];
m9_512 [file="LinqToJsonTest.cs", label=r, span=""];
m9_513 [file="LinqToJsonTest.cs", label=writer, span=""];
m9_514 [file="LinqToJsonTest.cs", label=errorMessages, span=""];
m9_515 [file="LinqToJsonTest.cs", label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", span=""];
m10_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="647-647"];
m10_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool isReference = ResolveIsReference(contract, member, containerContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="649-649"];
m10_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, containerContract, containerProperty)", span="650-650"];
m10_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteStartObject()", span="655-655"];
m10_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, values)", span="659-659"];
m10_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteTypeProperty(writer, values.GetType())", span="663-663"];
m10_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName, false)", span="665-665"];
m10_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.ItemContract == null", span="668-668"];
m10_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.CollectionItemType ?? typeof (object))", span="669-669"];
m10_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool writeMetadataObject = isReference || includeTypeDetails", span="651-651"];
m10_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=isReference, span="657-657"];
m10_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=includeTypeDetails, span="661-661"];
m10_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=writeMetadataObject, span="653-653"];
m10_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return writeMetadataObject;", span="671-671"];
m10_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="647-647"];
m10_29 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteTypeProperty(writer, contract.CreatedType)", span="94-94"];
m10_78 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_id'''': 2,\r\n  ''''Name'''': ''''Isabell'''',\r\n  ''''Father'''': {\r\n    ''''blah'''': ''''blah!'''',\r\n    ''''$ref'''': null,\r\n    ''''$id'''': null\r\n  }\r\n}'', json)", span="262-270"];
m10_189 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="611-621"];
m10_123 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="347-347"];
m10_124 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="398-398"];
m10_125 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), FormatterAssemblyStyle.Simple, null)", span="400-400"];
m10_128 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="410-422"];
m10_129 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="TypeNameHandlingTests.TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameHandlingTests.TypeNameProperty>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="424-427"];
m10_130 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Name!'', deserialized.Name)", span="428-428"];
m10_131 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="429-429"];
m10_132 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="List<int> nested = (List<int>)deserialized.Value", span="431-431"];
m10_133 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(5, nested.Count)", span="432-432"];
m10_134 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, nested[0])", span="433-433"];
m10_136 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(3, nested[2])", span="435-435"];
m10_137 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(4, nested[3])", span="436-436"];
m10_138 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(5, nested[4])", span="437-437"];
m10_141 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="639-639"];
m10_144 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="460-460"];
m10_148 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="MetadataPropertyDisabledTestClass c2 = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="481-484"];
m10_126 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="TypeNameHandlingTests.TypeNameProperty typeNameProperty = new TypeNameHandlingTests.TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="402-406"];
m10_127 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="408-408"];
m10_139 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="398-398"];
m10_135 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(2, nested[1])", span="434-434"];
m10_150 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Ref!'', c2.Ref)", span="487-487"];
m10_140 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153"];
m10_142 [cluster="System.Collections.Generic.List<T>.List()", file="MetadataPropertyHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_146 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="471-471"];
m10_143 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310"];
m10_145 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="MetadataPropertyDisabledTestClass c1 = new MetadataPropertyDisabledTestClass\r\n            {\r\n                Id = ''Id!'',\r\n                Ref = ''Ref!'',\r\n                Type = ''Type!'',\r\n                Value = ''Value!'',\r\n                Values = ''Values!''\r\n            }", span="462-469"];
m10_147 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''Id!'''',\r\n  ''''$ref'''': ''''Ref!'''',\r\n  ''''$value'''': ''''Value!'''',\r\n  ''''$values'''': ''''Values!'''',\r\n  ''''$type'''': ''''Type!''''\r\n}'', json)", span="473-479"];
m10_149 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Id!'', c2.Id)", span="486-486"];
m10_151 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Type!'', c2.Type)", span="488-488"];
m10_398 [cluster="System.Runtime.Serialization.FormatterConverter.FormatterConverter()", file="MetadataPropertyHandlingTests.cs", label="Entry System.Runtime.Serialization.FormatterConverter.FormatterConverter()", span="0-0"];
m10_175 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="556-556"];
m10_176 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", color=green, community=0, file="MetadataPropertyHandlingTests.cs", label="ItemWithJTokens actual = (ItemWithJTokens)JsonConvert.DeserializeObject(@''{\r\n  ''''Payload1'''': 1,\r\n  ''''Payload2'''': {},\r\n  ''''Payload3'''': [1],\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests+ItemWithJTokens, Newtonsoft.Json.Tests''''\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                    TypeNameHandling = TypeNameHandling.All\r\n                })", prediction=65, span="558-568"];
m10_179 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, actual.Payload3.Parent)", span="572-572"];
m10_181 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", span="576-576"];
m10_182 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", color=green, community=0, file="MetadataPropertyHandlingTests.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': [1]\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", prediction=66, span="578-584"];
m10_177 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", color=green, community=0, file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, actual.Payload1.Parent)", prediction=67, span="570-570"];
m10_178 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", color=green, community=0, file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, actual.Payload2.Parent)", prediction=65, span="571-571"];
m10_180 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="556-556"];
m10_184 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, o.Parent)", span="587-587"];
m10_183 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="JArray o = (JArray)actual.Payload", span="586-586"];
m10_185 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", span="576-576"];
m10_186 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="596-596"];
m10_154 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="460-460"];
m10_446 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="903-903"];
m10_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return;", span="112-112"];
m10_77 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="string json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="260-260"];
m10_190 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="Assert.IsTrue(actual.Payload is JObject)", span="623-623"];
m10_192 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="627-627"];
m10_193 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass''''\r\n}''", span="629-632"];
m10_194 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="MetadataPropertyDisabledTestClass c = new MetadataPropertyDisabledTestClass()", span="634-634"];
m10_191 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="596-596"];
m10_195 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs", label="JsonConvert.PopulateObject(json, c, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="636-639"];
m10_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="200-200"];
m10_399 [cluster="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="0-0"];
m10_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="166-166"];
m10_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="property != null", span="171-171"];
m10_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference = property.IsReference", span="172-172"];
m10_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference == null && containerProperty != null", span="174-174"];
m10_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference = containerProperty.ItemIsReference", span="175-175"];
m10_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference == null && collectionContract != null", span="177-177"];
m10_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool? isReference = null", span="168-168"];
m10_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference = collectionContract.ItemIsReference", span="178-178"];
m10_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="!isReference.Value", span="203-203"];
m10_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonContractType.String", span="143-143"];
m10_122 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual((long)int.MinValue, values[3])", span="394-394"];
m10_281 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="141-141"];
m10_0 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="53-53"];
m10_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="58-58"];
m10_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="MetadataPropertyHandlingTests.cs", label="throw new ArgumentNullException(''jsonWriter'');", span="61-61"];
m10_1 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="53-53"];
m10_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="MetadataPropertyHandlingTests.cs", label="jsonWriter == null", span="60-60"];
m10_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="MetadataPropertyHandlingTests.cs", label="objectType != null", span="63-63"];
m10_74 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="child.Add(''_id'', 2)", span="256-256"];
m10_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerializing(writer, contract, value)", span="364-364"];
m10_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.Add(value)", span="366-366"];
m10_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="368-368"];
m10_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="int initialDepth = writer.Top", span="370-370"];
m10_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="index < contract.Properties.Count", span="372-372"];
m10_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonProperty property = contract.Properties[index]", span="374-374"];
m10_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="380-380"];
m10_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="property.WritePropertyName(writer)", span="383-383"];
m10_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="384-384"];
m10_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="388-388"];
m10_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="HandleError(writer, initialDepth)", span="389-389"];
m10_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndObject()", span="395-395"];
m10_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerialized(writer, contract, value)", span="399-399"];
m10_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="int index = 0", span="372-372"];
m10_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="index++", span="372-372"];
m10_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="object memberValue", span="377-377"];
m10_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonContract memberContract", span="378-378"];
m10_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=Exception, span="386-386"];
m10_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="throw;", span="391-391"];
m10_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="397-397"];
m10_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="362-362"];
m10_120 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="391-391"];
m10_520 [cluster="object.ToString()", file="MetadataPropertyHandlingTests.cs", label="Entry object.ToString()", span="0-0"];
m10_436 [cluster="System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", file="MetadataPropertyHandlingTests.cs", label="Entry System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", span="143-143"];
m10_174 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="534-534"];
m10_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="594-594"];
m10_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="int dimension = indices.Length", span="596-596"];
m10_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="newIndices[i] = indices[i]", span="600-600"];
m10_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="writer.WriteStartArray()", span="603-603"];
m10_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="i < values.GetLength(dimension)", span="605-605"];
m10_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="bool isTopLevel = (newIndices.Length == values.Rank)", span="608-608"];
m10_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="object value = values.GetValue(newIndices)", span="612-612"];
m10_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="616-616"];
m10_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="618-618"];
m10_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="WriteReference(writer, value)", span="620-620"];
m10_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="624-624"];
m10_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="626-626"];
m10_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="IsErrorHandled(values, contract, i, null, writer.ContainerPath, ex)", span="632-632"];
m10_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="HandleError(writer, initialDepth + 1)", span="633-633"];
m10_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, initialDepth + 1, newIndices)", span="640-640"];
m10_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndArray()", span="644-644"];
m10_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="int[] newIndices = new int[dimension + 1]", span="597-597"];
m10_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="i < dimension", span="598-598"];
m10_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="newIndices[dimension] = i", span="607-607"];
m10_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="int i = 0", span="598-598"];
m10_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="i++", span="598-598"];
m10_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="int i = 0", span="605-605"];
m10_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="i++", span="605-605"];
m10_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label=isTopLevel, span="610-610"];
m10_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label=Exception, span="630-630"];
m10_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="throw;", span="635-635"];
m10_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="594-594"];
m10_6 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397"];
m10_7 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732"];
m10_8 [cluster="Unk.AreEqual", file="MetadataPropertyHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m10_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="MetadataPropertyHandlingTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_10 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m10_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="77-77"];
m10_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="107-107"];
m10_36 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="158-158"];
m10_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n        ((member != null) ? member.TypeNameHandling : null)\r\n        ?? ((containerProperty != null) ? containerProperty.ItemTypeNameHandling : null)\r\n        ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n        ?? Serializer._typeNameHandling", span="803-807"];
m10_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="809-809"];
m10_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="member != null", span="815-815"];
m10_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.UnderlyingType != member.PropertyContract.CreatedType", span="817-817"];
m10_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="containerContract != null && containerContract.ItemContract != null", span="820-820"];
m10_455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.UnderlyingType != containerContract.ItemContract.CreatedType", span="822-822"];
m10_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.UnderlyingType != _rootContract.CreatedType", span="827-827"];
m10_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="813-813"];
m10_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return true;", span="810-810"];
m10_460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return false;", span="832-832"];
m10_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return true;", span="818-818"];
m10_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_rootContract != null && _serializeStack.Count == 1", span="825-825"];
m10_456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return true;", span="823-823"];
m10_459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return true;", span="828-828"];
m10_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="801-801"];
m10_517 [cluster="System.IO.StringWriter.ToString()", file="MetadataPropertyHandlingTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m10_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="898-898"];
m10_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="898-898"];
m10_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="object key = entry.Key", span="900-900"];
m10_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="JsonPrimitiveContract primitiveContract = contract as JsonPrimitiveContract", span="904-904"];
m10_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="DateTimeUtils.WriteDateTimeString(sw, (DateTime)key, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="911-911"];
m10_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="DateTimeUtils.WriteDateTimeOffsetString(sw, (DateTimeOffset)key, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="919-919"];
m10_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="string propertyName", span="902-902"];
m10_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="return Convert.ToString(key, CultureInfo.InvariantCulture);", span="926-926"];
m10_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="TryConvertToString(key, key.GetType(), out propertyName)", span="929-929"];
m10_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="return key.ToString();", span="937-937"];
m10_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="primitiveContract != null", span="905-905"];
m10_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTime || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeNullable", span="907-907"];
m10_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeOffset || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeOffsetNullable", span="915-915"];
m10_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="escape = false", span="909-909"];
m10_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="910-910"];
m10_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="return sw.ToString();", span="912-912"];
m10_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="escape = false", span="917-917"];
m10_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="escape = true", span="925-925"];
m10_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="918-918"];
m10_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="return sw.ToString();", span="920-920"];
m10_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="escape = true", span="931-931"];
m10_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="escape = true", span="936-936"];
m10_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="MetadataPropertyHandlingTests.cs", label="return propertyName;", span="932-932"];
m10_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="198-198"];
m10_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonContract valueContract = GetContractSafe(serializationEntry.Value)", span="696-696"];
m10_81 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="278-278"];
m10_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="!JsonTypeReflector.FullyTrusted", span="680-680"];
m10_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, @''Type '{0}' implements ISerializable but cannot be serialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.\r\nTo fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()), null);", span="682-683"];
m10_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerializing(writer, contract, value)", span="686-686"];
m10_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.Add(value)", span="687-687"];
m10_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="689-689"];
m10_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new FormatterConverter())", span="691-691"];
m10_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="value.GetObjectData(serializationInfo, Serializer._context)", span="692-692"];
m10_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="CheckForCircularReference(writer, serializationEntry.Value, null, valueContract, contract, member)", span="698-698"];
m10_391 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WritePropertyName(serializationEntry.Name)", span="700-700"];
m10_392 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="SerializeValue(writer, serializationEntry.Value, valueContract, null, contract, member)", span="701-701"];
m10_393 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndObject()", span="705-705"];
m10_395 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerialized(writer, contract, value)", span="708-708"];
m10_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=serializationInfo, span="694-694"];
m10_394 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="707-707"];
m10_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="678-678"];
m10_167 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''AAECAwQFBgcICQ=='', (string)o[''$value''])", span="529-529"];
m10_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="941-941"];
m10_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="MetadataPropertyHandlingTests.cs", label="ClearErrorContext()", span="943-943"];
m10_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteState == WriteState.Property", span="945-945"];
m10_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteNull()", span="946-946"];
m10_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="MetadataPropertyHandlingTests.cs", label="writer.Top > initialDepth", span="948-948"];
m10_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEnd()", span="950-950"];
m10_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="941-941"];
m10_42 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="CollectionAssert.AreEquivalent(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }, bytes)", span="180-180"];
m10_43 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="146-146"];
m10_46 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540"];
m10_47 [cluster="Unk.AreEquivalent", file="MetadataPropertyHandlingTests.cs", label="Entry Unk.AreEquivalent", span=""];
m10_49 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="186-210"];
m10_51 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(3, circularList.Count)", span="219-219"];
m10_53 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, circularList[1].Count)", span="221-221"];
m10_55 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, circularList[2][0].Count)", span="223-223"];
m10_56 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Assert.IsTrue(ReferenceEquals(circularList, circularList[2][0][0]))", span="224-224"];
m10_58 [cluster="object.ReferenceEquals(object, object)", file="MetadataPropertyHandlingTests.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m10_60 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="228-228"];
m10_62 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="MetadataPropertyHandlingTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                });\r\n            }, ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 55.'')", span="237-244"];
m10_63 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="228-228"];
m10_65 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="239-243"];
m10_67 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="848-848"];
m10_69 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="var reference = new Dictionary<string, object>()", span="250-250"];
m10_45 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="MetadataPropertyHandlingTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m10_48 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="184-184"];
m10_50 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="PreserveReferencesHandlingTests.CircularList circularList = JsonConvert.DeserializeObject<PreserveReferencesHandlingTests.CircularList>(json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="212-217"];
m10_52 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, circularList[0])", span="220-220"];
m10_57 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="184-184"];
m10_61 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="MetadataPropertyHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="230-235"];
m10_64 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="Entry lambda expression", span="237-244"];
m10_66 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="Exit lambda expression", span="237-244"];
m10_68 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="248-248"];
m10_54 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(1, circularList[2].Count)", span="222-222"];
m10_70 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="reference.Add(''blah'', ''blah!'')", span="251-251"];
m10_75 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="child.Add(''Name'', ''Isabell'')", span="257-257"];
m10_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="IWrappedCollection wrappedCollection = values as IWrappedCollection", span="520-520"];
m10_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : values", span="521-521"];
m10_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerializing(writer, contract, underlyingList)", span="523-523"];
m10_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, underlyingList, contract, member, collectionContract, containerProperty)", span="527-527"];
m10_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteStartArray()", span="529-529"];
m10_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="int initialDepth = writer.Top", span="531-531"];
m10_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=values, span="535-535"];
m10_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="539-539"];
m10_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="541-541"];
m10_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteReference(writer, value)", span="543-543"];
m10_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="547-547"];
m10_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="549-549"];
m10_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="IsErrorHandled(underlyingList, contract, index, null, writer.ContainerPath, ex)", span="555-555"];
m10_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="HandleError(writer, initialDepth)", span="556-556"];
m10_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndArray()", span="566-566"];
m10_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndObject()", span="569-569"];
m10_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerialized(writer, contract, underlyingList)", span="573-573"];
m10_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.Add(underlyingList)", span="525-525"];
m10_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=hasWrittenMetadataObject, span="568-568"];
m10_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="int index = 0", span="533-533"];
m10_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=Exception, span="553-553"];
m10_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="throw;", span="558-558"];
m10_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="571-571"];
m10_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="518-518"];
m10_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="402-402"];
m10_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="!property.Ignored && property.Readable && ShouldSerialize(writer, property, value) && IsSpecified(writer, property, value)", span="404-404"];
m10_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="property.PropertyContract == null", span="406-406"];
m10_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="property.PropertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="407-407"];
m10_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="memberValue = property.ValueProvider.GetValue(value)", span="409-409"];
m10_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="memberContract = (property.PropertyContract.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="410-410"];
m10_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="ShouldWriteProperty(memberValue, property)", span="412-412"];
m10_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="ShouldWriteReference(memberValue, property, memberContract, contract, member)", span="414-414"];
m10_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="property.WritePropertyName(writer)", span="416-416"];
m10_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="WriteReference(writer, memberValue)", span="417-417"];
m10_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="!CheckForCircularReference(writer, memberValue, property, memberContract, contract, member)", span="421-421"];
m10_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="JsonObjectContract objectContract = contract as JsonObjectContract", span="426-426"];
m10_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="Required resolvedRequired = property._required ?? ((objectContract != null) ? objectContract.ItemRequired : null) ?? Required.Default", span="427-427"];
m10_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="429-429"];
m10_254 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="memberContract = null", span="436-436"];
m10_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="memberValue == null", span="424-424"];
m10_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="return false;", span="418-418"];
m10_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="return false;", span="422-422"];
m10_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="return true;", span="432-432"];
m10_251 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="resolvedRequired == Required.Always", span="428-428"];
m10_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="memberValue = null", span="437-437"];
m10_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="return false;", span="438-438"];
m10_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="402-402"];
m10_515 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="MetadataPropertyHandlingTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m10_260 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m10_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="349-349"];
m10_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference == null", span="180-180"];
m10_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="186-186"];
m10_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="value == null", span="188-188"];
m10_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return false;", span="189-189"];
m10_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="valueContract.ContractType == JsonContractType.Primitive || valueContract.ContractType == JsonContractType.String", span="190-190"];
m10_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return false;", span="191-191"];
m10_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return isReference;", span="183-183"];
m10_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="166-166"];
m10_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool? isReference = ResolveIsReference(valueContract, property, collectionContract, containerProperty)", span="193-193"];
m10_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference = contract.IsReference", span="181-181"];
m10_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="isReference == null", span="195-195"];
m10_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="valueContract.ContractType == JsonContractType.Array", span="197-197"];
m10_397 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m10_155 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="91-91"];
m10_235 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m10_82 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="279-279"];
m10_73 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="var child = new Dictionary<string, object>()", span="255-255"];
m10_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="ShouldWriteReference(value, null, contract, collectionContract, containerProperty)", span="495-495"];
m10_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteReference(writer, value)", span="497-497"];
m10_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="!CheckForCircularReference(writer, value, null, contract, collectionContract, containerProperty)", span="501-501"];
m10_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.Add(value)", span="504-504"];
m10_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="507-507"];
m10_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="converter.WriteJson(writer, value, GetInternalSerializer())", span="509-509"];
m10_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="512-512"];
m10_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="return;", span="502-502"];
m10_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="506-506"];
m10_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="511-511"];
m10_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="514-514"];
m10_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="493-493"];
m10_38 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="172-175"];
m10_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="MetadataPropertyHandlingTests.cs", label="string typeName = ReflectionUtils.GetTypeName(type, Serializer._typeNameAssemblyFormat, Serializer._binder)", span="469-469"];
m10_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing type name '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, typeName, type)), null)", span="472-472"];
m10_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="MetadataPropertyHandlingTests.cs", label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName, false)", span="474-474"];
m10_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteValue(typeName)", span="475-475"];
m10_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="471-471"];
m10_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="467-467"];
m10_24 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs", label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="132-132"];
m10_25 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Guid, mscorlib]], mscorlib'''',\r\n  ''''k1'''': ''''5dd2dba0-20c0-49f8-a054-1fa3b0a8d774''''\r\n}'', serializedString)", span="134-137"];
m10_26 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs", label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="139-139"];
m10_28 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="118-118"];
m10_30 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MetadataPropertyHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_31 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m10_32 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m10_34 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="146-146"];
m10_27 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(someValue, deserializedObject[contextKey])", span="141-141"];
m10_33 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m10_35 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="148-156"];
m10_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="441-441"];
m10_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteStartObject()", span="443-443"];
m10_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool isReference = ResolveIsReference(contract, member, collectionContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="445-445"];
m10_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, value)", span="448-448"];
m10_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionContract, containerProperty)", span="450-450"];
m10_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="452-452"];
m10_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=isReference, span="446-446"];
m10_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="441-441"];
m10_156 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="24-24"];
m10_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="string reference = GetReference(writer, value)", span="267-267"];
m10_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="269-269"];
m10_157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="265-265"];
m10_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference to Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, value.GetType())), null)", span="270-270"];
m10_188 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(5f, actual.Payload)", span="609-609"];
m10_166 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''System.Byte[], mscorlib'', (string)o[''$type''])", span="528-528"];
m10_169 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", span="507-507"];
m10_172 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="JObject o = (JObject)actual.Payload", span="544-544"];
m10_170 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="534-534"];
m10_171 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {}\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="536-542"];
m10_173 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, o.Parent)", span="545-545"];
m10_152 [cluster="System.Collections.Generic.List<T>.IndexOf(T)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.IndexOf(T)", span="0-0"];
m10_153 [cluster="string.FormatWith(System.IFormatProvider, object)", file="MetadataPropertyHandlingTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m10_121 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''String!'', values[2])", span="393-393"];
m10_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="MetadataPropertyHandlingTests.cs", label="return ((value & flag) == flag);", span="480-480"];
m10_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="478-478"];
m10_71 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="reference.Add(''$ref'', null)", span="252-252"];
m10_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="69-69"];
m10_113 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(4, values.Count)", span="381-381"];
m10_114 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="EmployeeReference e = (EmployeeReference)values[0]", span="383-383"];
m10_116 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Bob'', e.Name)", span="386-386"];
m10_115 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Person p = (Person)values[1]", span="384-384"];
m10_117 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="387-387"];
m10_118 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(null, p.Name)", span="389-389"];
m10_119 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="390-390"];
m10_40 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="178-178"];
m10_187 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto\r\n                })", span="598-607"];
m10_13 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m10_14 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="Entry lambda expression", span="105-113"];
m10_15 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                        MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                    })", span="107-112"];
m10_16 [cluster="lambda expression", file="MetadataPropertyHandlingTests.cs", label="Exit lambda expression", span="105-113"];
m10_528 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="423-423"];
m10_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="346-346"];
m10_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="354-354"];
m10_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="348-348"];
m10_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="456-456"];
m10_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="string reference = GetReference(writer, value)", span="458-458"];
m10_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, type)), null)", span="461-461"];
m10_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName, false)", span="463-463"];
m10_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteValue(reference)", span="464-464"];
m10_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="460-460"];
m10_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="456-456"];
m10_72 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="reference.Add(''$id'', null)", span="253-253"];
m10_39 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="177-177"];
m10_110 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="string personRef = typeof(Person).AssemblyQualifiedName", span="350-350"];
m10_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="MetadataPropertyHandlingTests.cs", label="return ((value & flag) == flag);", span="485-485"];
m10_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="483-483"];
m10_301 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m10_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="967-967"];
m10_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="property.GetIsSpecified == null", span="969-969"];
m10_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="bool isSpecified = property.GetIsSpecified(target)", span="972-972"];
m10_542 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''IsSpecified result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, isSpecified)), null)", span="975-975"];
m10_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="return true;", span="970-970"];
m10_541 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="974-974"];
m10_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="return isSpecified;", span="977-977"];
m10_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="967-967"];
m10_80 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Assert.AreEqual(3, result.Count)", span="277-277"];
m10_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerializing(writer, contract, value)", span="715-715"];
m10_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.Add(value)", span="716-716"];
m10_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="718-718"];
m10_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="int initialDepth = writer.Top", span="720-720"];
m10_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="index < contract.Properties.Count", span="722-722"];
m10_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonProperty property = contract.Properties[index]", span="724-724"];
m10_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="734-734"];
m10_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="property.WritePropertyName(writer)", span="737-737"];
m10_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="738-738"];
m10_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="742-742"];
m10_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="HandleError(writer, initialDepth)", span="743-743"];
m10_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="value.GetDynamicMemberNames()", span="750-750"];
m10_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.TryGetMember(value, memberName, out memberValue)", span="753-753"];
m10_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="CheckForCircularReference(writer, memberValue, null, valueContract, contract, member)", span="762-762"];
m10_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="string resolvedPropertyName = (contract.PropertyNameResolver != null)\r\n                                              ? contract.PropertyNameResolver(memberName)\r\n                                              : memberName", span="764-766"];
m10_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WritePropertyName(resolvedPropertyName)", span="768-768"];
m10_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="SerializeValue(writer, memberValue, valueContract, null, contract, member)", span="769-769"];
m10_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="IsErrorHandled(value, contract, memberName, null, writer.ContainerPath, ex)", span="774-774"];
m10_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="HandleError(writer, initialDepth)", span="775-775"];
m10_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndObject()", span="782-782"];
m10_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerialized(writer, contract, value)", span="785-785"];
m10_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="int index = 0", span="722-722"];
m10_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="index++", span="722-722"];
m10_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="property.HasMemberAttribute", span="727-727"];
m10_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="object memberValue", span="731-731"];
m10_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonContract memberContract", span="732-732"];
m10_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=Exception, span="740-740"];
m10_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="throw;", span="745-745"];
m10_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="object memberValue", span="752-752"];
m10_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonContract valueContract = GetContractSafe(memberValue)", span="757-757"];
m10_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="!ShouldWriteDynamicProperty(memberValue)", span="759-759"];
m10_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=Exception, span="772-772"];
m10_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="throw;", span="777-777"];
m10_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="784-784"];
m10_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="713-713"];
m10_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteStartObject()", span="272-272"];
m10_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName, false)", span="273-273"];
m10_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteValue(reference)", span="274-274"];
m10_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndObject()", span="275-275"];
m10_168 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="809-809"];
m10_165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="265-265"];
m10_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="216-216"];
m10_23 [cluster="object.GetType()", file="MetadataPropertyHandlingTests.cs", label="Entry object.GetType()", span="0-0"];
m10_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="77-77"];
m10_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="MetadataPropertyHandlingTests.cs", label="value == null", span="79-79"];
m10_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="MetadataPropertyHandlingTests.cs", label="return null;", span="80-80"];
m10_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="MetadataPropertyHandlingTests.cs", label="return Serializer._contractResolver.ResolveContract(value.GetType());", span="82-82"];
m10_79 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="272-275"];
m10_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="IWrappedDictionary wrappedDictionary = values as IWrappedDictionary", span="837-837"];
m10_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="838-838"];
m10_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerializing(writer, contract, underlyingDictionary)", span="840-840"];
m10_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteObjectStart(writer, underlyingDictionary, contract, member, collectionContract, containerProperty)", span="843-843"];
m10_467 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.ItemContract == null", span="845-845"];
m10_468 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="846-846"];
m10_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.KeyContract == null", span="848-848"];
m10_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="contract.KeyContract = Serializer._contractResolver.ResolveContract(contract.DictionaryKeyType ?? typeof(object))", span="849-849"];
m10_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="int initialDepth = writer.Top", span="851-851"];
m10_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=values, span="853-853"];
m10_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="string propertyName = GetPropertyName(writer, entry, contract.KeyContract, out escape)", span="856-856"];
m10_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="propertyName = (contract.PropertyNameResolver != null)\r\n                         ? contract.PropertyNameResolver(propertyName)\r\n                         : propertyName", span="858-860"];
m10_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="865-865"];
m10_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="867-867"];
m10_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WritePropertyName(propertyName, escape)", span="869-869"];
m10_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="WriteReference(writer, value)", span="870-870"];
m10_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="874-874"];
m10_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WritePropertyName(propertyName, escape)", span="877-877"];
m10_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="879-879"];
m10_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="IsErrorHandled(underlyingDictionary, contract, propertyName, null, writer.ContainerPath, ex)", span="884-884"];
m10_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="HandleError(writer, initialDepth)", span="885-885"];
m10_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndObject()", span="891-891"];
m10_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerialized(writer, contract, underlyingDictionary)", span="895-895"];
m10_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.Add(underlyingDictionary)", span="841-841"];
m10_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool escape", span="855-855"];
m10_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="object value = entry.Value", span="864-864"];
m10_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=Exception, span="882-882"];
m10_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="throw;", span="887-887"];
m10_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="893-893"];
m10_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="835-835"];
m10_229 [cluster="System.Collections.Generic.List<T>.Add(T)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="109-109"];
m10_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="356-356"];
m10_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="357-357"];
m10_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label="contract.InvokeOnSerialized(value, Serializer._context)", span="359-359"];
m10_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="354-354"];
m10_400 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="405-405"];
m10_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="101-101"];
m10_37 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="355-355"];
m10_41 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m10_328 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m10_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576"];
m10_83 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="385-385"];
m10_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="954-954"];
m10_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="property.ShouldSerialize == null", span="956-956"];
m10_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="bool shouldSerialize = property.ShouldSerialize(target)", span="959-959"];
m10_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''ShouldSerialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldSerialize)), null)", span="962-962"];
m10_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="return true;", span="957-957"];
m10_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="961-961"];
m10_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="return shouldSerialize;", span="964-964"];
m10_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="954-954"];
m10_207 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", span="345-345"];
m10_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerializing(writer, contract, values)", span="578-578"];
m10_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.Add(values)", span="580-580"];
m10_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="582-582"];
m10_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, new int[0])", span="584-584"];
m10_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="writer.WriteEndObject()", span="587-587"];
m10_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="OnSerialized(writer, contract, values)", span="591-591"];
m10_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label=hasWrittenMetadataObject, span="586-586"];
m10_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="589-589"];
m10_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576"];
m10_232 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="276-276"];
m10_366 [cluster="System.Array.GetValue(params int[])", file="MetadataPropertyHandlingTests.cs", label="Entry System.Array.GetValue(params int[])", span="0-0"];
m10_365 [cluster="System.Array.GetLength(int)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m10_536 [cluster="System.Predicate<T>.Invoke(T)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m10_327 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="371-371"];
m10_108 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="347-347"];
m10_107 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m10_109 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="349-349"];
m10_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="488-488"];
m10_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="MetadataPropertyHandlingTests.cs", label="return ((value & flag) == flag);", span="490-490"];
m10_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="488-488"];
m10_519 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="MetadataPropertyHandlingTests.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m10_202 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="334-334"];
m10_437 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85"];
m10_516 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="380-380"];
m10_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="789-789"];
m10_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="MetadataPropertyHandlingTests.cs", label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="791-791"];
m10_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="MetadataPropertyHandlingTests.cs", label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n        (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="794-795"];
m10_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="MetadataPropertyHandlingTests.cs", label="return false;", span="792-792"];
m10_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="MetadataPropertyHandlingTests.cs", label="return false;", span="796-796"];
m10_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="MetadataPropertyHandlingTests.cs", label="return true;", span="798-798"];
m10_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="MetadataPropertyHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="789-789"];
m10_111 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''Name'''': null,\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="352-372"];
m10_518 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="MetadataPropertyHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="512-512"];
m10_112 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs", label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="374-379"];
m10_537 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="MetadataPropertyHandlingTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m10_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label=json, span=""];
m10_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="MetadataPropertyHandlingTests.cs", label=json, span=""];
m10_545 [file="MetadataPropertyHandlingTests.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
m11_382 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="ReflectionUtils.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m11_199 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="412-412"];
m11_200 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(dictionaryType, nameof(dictionaryType))", span="414-414"];
m11_202 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="ImplementsGenericDefinition(dictionaryType, typeof(IDictionary<,>), out genericDictionaryType)", span="417-417"];
m11_204 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="421-421"];
m11_209 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="typeof(IDictionary).IsAssignableFrom(dictionaryType)", span="430-430"];
m11_213 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="437-437"];
m11_201 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="Type genericDictionaryType", span="416-416"];
m11_203 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="genericDictionaryType.IsGenericTypeDefinition()", span="419-419"];
m11_205 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="Type[] dictionaryGenericArguments = genericDictionaryType.GetGenericArguments()", span="424-424"];
m11_206 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="keyType = dictionaryGenericArguments[0]", span="426-426"];
m11_207 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="valueType = dictionaryGenericArguments[1]", span="427-427"];
m11_208 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="return;", span="428-428"];
m11_210 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="keyType = null", span="432-432"];
m11_211 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="valueType = null", span="433-433"];
m11_212 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="return;", span="434-434"];
m11_214 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="412-412"];
m11_81 [cluster="System.Text.StringBuilder.StringBuilder()", file="ReflectionUtils.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m11_339 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m11_197 [cluster="System.Type.GetGenericArguments()", file="ReflectionUtils.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m11_469 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m11_543 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1070-1070"];
m11_544 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="!type.IsValueType()", span="1072-1072"];
m11_546 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="ConvertUtils.GetTypeCode(type)", span="1077-1077"];
m11_574 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="IsNullable(type)", span="1112-1112"];
m11_576 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return Activator.CreateInstance(type);", span="1118-1118"];
m11_545 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return null;", span="1074-1074"];
m11_547 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Boolean", span="1079-1079"];
m11_549 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Char", span="1081-1081"];
m11_557 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Int64", span="1089-1089"];
m11_560 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Single", span="1092-1092"];
m11_562 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Double", span="1094-1094"];
m11_564 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Decimal", span="1096-1096"];
m11_566 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.DateTime", span="1098-1098"];
m11_568 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.BigInteger", span="1101-1101"];
m11_570 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Guid", span="1104-1104"];
m11_572 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1107-1107"];
m11_548 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return false;", span="1080-1080"];
m11_550 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.SByte", span="1082-1082"];
m11_551 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Byte", span="1083-1083"];
m11_552 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Int16", span="1084-1084"];
m11_553 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.UInt16", span="1085-1085"];
m11_554 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.Int32", span="1086-1086"];
m11_555 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.UInt32", span="1087-1087"];
m11_556 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return 0;", span="1088-1088"];
m11_558 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="PrimitiveTypeCode.UInt64", span="1090-1090"];
m11_559 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return 0L;", span="1091-1091"];
m11_561 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return 0f;", span="1093-1093"];
m11_563 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return 0.0;", span="1095-1095"];
m11_565 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return 0m;", span="1097-1097"];
m11_567 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return new DateTime();", span="1099-1099"];
m11_569 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return new BigInteger();", span="1102-1102"];
m11_571 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return new Guid();", span="1105-1105"];
m11_573 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return new DateTimeOffset();", span="1108-1108"];
m11_575 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="return null;", span="1114-1114"];
m11_577 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1070-1070"];
m11_415 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", file="ReflectionUtils.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", span="0-0"];
m11_270 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562"];
m11_271 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="member.MemberType()", span="564-564"];
m11_273 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="FieldInfo fieldInfo = (FieldInfo)member", span="567-567"];
m11_274 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label=nonPublic, span="569-569"];
m11_280 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="PropertyInfo propertyInfo = (PropertyInfo)member", span="579-579"];
m11_283 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label=nonPublic, span="585-585"];
m11_285 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="return (propertyInfo.GetGetMethod(nonPublic) != null);", span="589-589"];
m11_272 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="566-566"];
m11_279 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="578-578"];
m11_286 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="return false;", span="591-591"];
m11_276 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="fieldInfo.IsPublic", span="573-573"];
m11_275 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="return true;", span="571-571"];
m11_277 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="return true;", span="575-575"];
m11_278 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="return false;", span="577-577"];
m11_281 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="!propertyInfo.CanRead", span="581-581"];
m11_282 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="return false;", span="583-583"];
m11_284 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="return true;", span="587-587"];
m11_287 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562"];
m11_39 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153"];
m11_40 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="string fullyQualifiedTypeName", span="155-155"];
m11_41 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="binder != null", span="157-157"];
m11_43 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="binder.BindToName(t, out assemblyName, out typeName)", span="160-160"];
m11_45 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="fullyQualifiedTypeName = t.AssemblyQualifiedName", span="165-165"];
m11_46 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label=assemblyFormat, span="171-171"];
m11_42 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="string assemblyName, typeName", span="159-159"];
m11_44 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="fullyQualifiedTypeName = typeName + (assemblyName == null ? '''' : '', '' + assemblyName)", span="161-161"];
m11_48 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="return RemoveAssemblyDetails(fullyQualifiedTypeName);", span="174-174"];
m11_50 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="return fullyQualifiedTypeName;", span="176-176"];
m11_47 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="FormatterAssemblyStyle.Simple", span="173-173"];
m11_49 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="FormatterAssemblyStyle.Full", span="175-175"];
m11_51 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="throw new ArgumentOutOfRangeException();", span="178-178"];
m11_52 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153"];
m11_480 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m11_90 [cluster="System.Type.IsValueType()", file="ReflectionUtils.cs", label="Entry System.Type.IsValueType()", span="567-567"];
m11_336 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m11_129 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="292-292"];
m11_130 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Type implementingType", span="294-294"];
m11_131 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="return ImplementsGenericDefinition(type, genericInterfaceDefinition, out implementingType);", span="295-295"];
m11_132 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="292-292"];
m11_27 [cluster="System.Reflection.MethodInfo.GetBaseDefinition()", file="ReflectionUtils.cs", label="Entry System.Reflection.MethodInfo.GetBaseDefinition()", span="0-0"];
m11_407 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="ReflectionUtils.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m11_381 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755"];
m11_384 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(attributeProvider, nameof(attributeProvider))", span="757-757"];
m11_385 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="object provider = attributeProvider", span="759-759"];
m11_388 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="object[] a = (attributeType != null) ? t.GetCustomAttributes(attributeType, inherit) : t.GetCustomAttributes(inherit)", span="767-767"];
m11_393 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(a, attributeType) : Attribute.GetCustomAttributes(a);", span="782-782"];
m11_396 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(m, attributeType, inherit) : Attribute.GetCustomAttributes(m, inherit);", span="788-788"];
m11_399 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(m, attributeType, inherit) : Attribute.GetCustomAttributes(m, inherit);", span="795-795"];
m11_402 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(p, attributeType, inherit) : Attribute.GetCustomAttributes(p, inherit);", span="802-802"];
m11_403 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="ICustomAttributeProvider customAttributeProvider = (ICustomAttributeProvider)attributeProvider", span="806-806"];
m11_404 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="object[] result = (attributeType != null) ? customAttributeProvider.GetCustomAttributes(attributeType, inherit) : customAttributeProvider.GetCustomAttributes(inherit)", span="807-807"];
m11_386 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="provider is Type", span="764-764"];
m11_387 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="Type t = (Type)provider", span="766-766"];
m11_391 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="provider is Assembly", span="779-779"];
m11_392 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="Assembly a = (Assembly)provider", span="781-781"];
m11_394 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="provider is MemberInfo", span="785-785"];
m11_395 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="MemberInfo m = (MemberInfo)provider", span="787-787"];
m11_397 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="provider is Module", span="792-792"];
m11_398 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="Module m = (Module)provider", span="794-794"];
m11_400 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="provider is ParameterInfo", span="799-799"];
m11_401 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="ParameterInfo p = (ParameterInfo)provider", span="801-801"];
m11_389 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="Attribute[] attributes = a.Cast<Attribute>().ToArray()", span="768-768"];
m11_390 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="return attributes;", span="776-776"];
m11_405 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="return (Attribute[])result;", span="809-809"];
m11_406 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755"];
m11_578 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m11_468 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m11_14 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m11_53 [cluster="System.Runtime.Serialization.SerializationBinder.BindToName(System.Type, out string, out string)", file="ReflectionUtils.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToName(System.Type, out string, out string)", span="0-0"];
m11_478 [cluster="Unk.Where", file="ReflectionUtils.cs", label="Entry Unk.Where", span=""];
m11_500 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="993-993"];
m11_504 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="(targetType = targetType.BaseType()) != null", span="1000-1000"];
m11_505 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="targetType.GetProperties(bindingAttr)", span="1002-1002"];
m11_508 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name)", span="1010-1010"];
m11_510 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="initialProperties.Add(subTypeProperty)", span="1013-1013"];
m11_511 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="PropertyInfo childProperty = initialProperties[index]", span="1017-1017"];
m11_513 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="initialProperties[index] = subTypeProperty", span="1024-1024"];
m11_515 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType)", span="1032-1033"];
m11_517 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="initialProperties.Add(subTypeProperty)", span="1037-1037"];
m11_518 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name\r\n                                                                       && p.IsVirtual()\r\n                                                                       && p.GetBaseDefinition() != null\r\n                                                                       && p.GetBaseDefinition().DeclaringType.IsAssignableFrom(subTypeProperty.GetBaseDefinition().DeclaringType))", span="1042-1045"];
m11_520 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="initialProperties.Add(subTypeProperty)", span="1049-1049"];
m11_506 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="PropertyInfo subTypeProperty = propertyInfo", span="1004-1004"];
m11_507 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="!IsPublic(subTypeProperty)", span="1006-1006"];
m11_514 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="!subTypeProperty.IsVirtual()", span="1030-1030"];
m11_509 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="index == -1", span="1011-1011"];
m11_512 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="!IsPublic(childProperty)", span="1019-1019"];
m11_516 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="index == -1", span="1035-1035"];
m11_519 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="index == -1", span="1047-1047"];
m11_521 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="993-993"];
m11_257 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="ReflectionUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m11_182 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="386-386"];
m11_183 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="388-388"];
m11_185 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="type.IsArray", span="391-391"];
m11_186 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="return type.GetElementType();", span="393-393"];
m11_187 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="ImplementsGenericDefinition(type, typeof(IEnumerable<>), out genericListType)", span="395-395"];
m11_189 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="399-399"];
m11_191 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="typeof(IEnumerable).IsAssignableFrom(type)", span="404-404"];
m11_193 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="409-409"];
m11_184 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="Type genericListType", span="389-389"];
m11_188 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="genericListType.IsGenericTypeDefinition()", span="397-397"];
m11_190 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="return genericListType.GetGenericArguments()[0];", span="402-402"];
m11_192 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="return null;", span="406-406"];
m11_194 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="386-386"];
m11_84 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
m11_85 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="229-229"];
m11_86 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="t.IsValueType()", span="231-231"];
m11_88 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="return (GetDefaultConstructor(t, nonPublic) != null);", span="236-236"];
m11_87 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="return true;", span="233-233"];
m11_89 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
m11_312 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645"];
m11_313 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="List<MemberInfo> targetMembers = new List<MemberInfo>()", span="647-647"];
m11_314 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="targetMembers.AddRange(GetFields(type, bindingAttr))", span="649-649"];
m11_315 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="targetMembers.AddRange(GetProperties(type, bindingAttr))", span="650-650"];
m11_326 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="!IsOverridenGenericMember(memberInfo, bindingAttr) || memberInfo.Name == ''Item''", span="679-679"];
m11_316 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="List<MemberInfo> distinctMembers = new List<MemberInfo>(targetMembers.Count)", span="656-656"];
m11_317 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="targetMembers.GroupBy(m => m.Name)", span="658-658"];
m11_321 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="distinctMembers.Add(members.First())", span="665-665"];
m11_328 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="distinctMembers.AddRange(resolvedMembers)", span="685-685"];
m11_329 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return distinctMembers;", span="689-689"];
m11_318 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="int count = groupedMember.Count()", span="660-660"];
m11_319 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="IList<MemberInfo> members = groupedMember.ToList()", span="661-661"];
m11_320 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="count == 1", span="663-663"];
m11_323 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label=members, span="670-670"];
m11_322 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="IList<MemberInfo> resolvedMembers = new List<MemberInfo>()", span="669-669"];
m11_324 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="resolvedMembers.Count == 0", span="675-675"];
m11_325 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="resolvedMembers.Add(memberInfo)", span="677-677"];
m11_327 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="resolvedMembers.Add(memberInfo)", span="681-681"];
m11_330 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645"];
m11_196 [cluster="System.Exception.Exception(string)", file="ReflectionUtils.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m11_35 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148"];
m11_36 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs", label="return (v != null) ? v.GetType() : null;", span="150-150"];
m11_37 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148"];
m11_408 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ReflectionUtils.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m11_113 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267"];
m11_114 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="269-269"];
m11_115 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs", label="return (t.IsGenericType() && t.GetGenericTypeDefinition() == typeof(Nullable<>));", span="271-271"];
m11_116 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267"];
m11_337 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m11_501 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="986-986"];
m11_502 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return ((bindingAttr & flag) == flag)\r\n                ? bindingAttr ^ flag\r\n                : bindingAttr;", span="988-990"];
m11_503 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="986-986"];
m11_335 [cluster="System.Collections.Generic.List<T>.List(int)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m11_155 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionUtils.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m11_413 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", file="ReflectionUtils.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", span="0-0"];
m11_256 [cluster="System.ArgumentException.ArgumentException(string, System.Exception)", file="ReflectionUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, System.Exception)", span="0-0"];
m11_417 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", file="ReflectionUtils.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", span="0-0"];
m11_383 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m11_342 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="692-692"];
m11_346 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="memberInfo.MemberType() != MemberTypes.Property", span="694-694"];
m11_348 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="699-699"];
m11_357 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="MemberInfo[] members = genericTypeDefinition.GetMember(propertyInfo.Name, bindingAttr)", span="715-715"];
m11_347 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return false;", span="696-696"];
m11_349 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="!IsVirtual(propertyInfo)", span="700-700"];
m11_351 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Type declaringType = propertyInfo.DeclaringType", span="705-705"];
m11_350 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return false;", span="702-702"];
m11_352 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="!declaringType.IsGenericType()", span="706-706"];
m11_354 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Type genericTypeDefinition = declaringType.GetGenericTypeDefinition()", span="710-710"];
m11_353 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return false;", span="708-708"];
m11_355 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="genericTypeDefinition == null", span="711-711"];
m11_356 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return false;", span="713-713"];
m11_358 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="members.Length == 0", span="716-716"];
m11_360 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Type memberUnderlyingType = GetMemberUnderlyingType(members[0])", span="720-720"];
m11_359 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return false;", span="718-718"];
m11_361 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="!memberUnderlyingType.IsGenericParameter", span="721-721"];
m11_362 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return false;", span="723-723"];
m11_363 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return true;", span="726-726"];
m11_364 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="692-692"];
m11_456 [cluster="Unk.ToArray", file="ReflectionUtils.cs", label="Entry Unk.ToArray", span=""];
m11_119 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274"];
m11_120 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs", label="return (IsNullableType(t))\r\n                ? Nullable.GetUnderlyingType(t)\r\n                : t;", span="276-278"];
m11_121 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274"];
m11_430 [cluster="string.Trim()", file="ReflectionUtils.cs", label="Entry string.Trim()", span="0-0"];
m11_414 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", file="ReflectionUtils.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", span="0-0"];
m11_419 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="858-858"];
m11_420 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs", label="int? assemblyDelimiterIndex = GetAssemblyDelimiterIndex(fullyQualifiedTypeName)", span="860-860"];
m11_422 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs", label="typeName = fullyQualifiedTypeName.Substring(0, assemblyDelimiterIndex.GetValueOrDefault()).Trim()", span="864-864"];
m11_423 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs", label="assemblyName = fullyQualifiedTypeName.Substring(assemblyDelimiterIndex.GetValueOrDefault() + 1, fullyQualifiedTypeName.Length - assemblyDelimiterIndex.GetValueOrDefault() - 1).Trim()", span="865-865"];
m11_424 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs", label="typeName = fullyQualifiedTypeName", span="869-869"];
m11_421 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs", label="assemblyDelimiterIndex != null", span="862-862"];
m11_425 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs", label="assemblyName = null", span="870-870"];
m11_426 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="858-858"];
m11_13 [cluster="Unk.nameof", file="ReflectionUtils.cs", label="Entry Unk.nameof", span=""];
m11_429 [cluster="string.Substring(int, int)", file="ReflectionUtils.cs", label="Entry string.Substring(int, int)", span="0-0"];
m11_459 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m11_117 [cluster="System.Type.IsGenericType()", file="ReflectionUtils.cs", label="Entry System.Type.IsGenericType()", span="153-153"];
m11_268 [cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="ReflectionUtils.cs", label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0"];
m11_237 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="494-494"];
m11_238 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(property, nameof(property))", span="496-496"];
m11_239 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return (property.GetIndexParameters().Length > 0);", span="498-498"];
m11_240 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="494-494"];
m11_418 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", file="ReflectionUtils.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", span="0-0"];
m11_539 [cluster="Unk.Any", file="ReflectionUtils.cs", label="Entry Unk.Any", span=""];
m11_427 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="874-874"];
m11_431 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="int scope = 0", span="878-878"];
m11_433 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="i < fullyQualifiedTypeName.Length", span="879-879"];
m11_434 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="char current = fullyQualifiedTypeName[i]", span="881-881"];
m11_432 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="int i = 0", span="879-879"];
m11_437 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="scope++", span="885-885"];
m11_442 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="return i;", span="893-893"];
m11_443 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="i++", span="879-879"];
m11_444 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="return null;", span="899-899"];
m11_435 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label=current, span="882-882"];
m11_436 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="'['", span="884-884"];
m11_438 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="']'", span="887-887"];
m11_440 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="','", span="890-890"];
m11_439 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="scope--", span="888-888"];
m11_441 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="scope == 0", span="891-891"];
m11_445 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="874-874"];
m11_523 [cluster="System.Reflection.PropertyInfo.IsVirtual()", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.IsVirtual()", span="96-96"];
m11_366 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="729-729"];
m11_367 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="ReflectionUtils.cs", label="return GetAttribute<T>(attributeProvider, true);", span="731-731"];
m11_368 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="729-729"];
m11_229 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ReflectionUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m11_374 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m11_91 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="244-244"];
m11_95 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public", span="246-246"];
m11_96 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label=nonPublic, span="247-247"];
m11_98 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="return t.GetConstructors(bindingFlags).SingleOrDefault(c => !c.GetParameters().Any());", span="252-252"];
m11_97 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="bindingFlags = bindingFlags | BindingFlags.NonPublic", span="249-249"];
m11_99 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="244-244"];
m11_230 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="471-471"];
m11_231 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="473-473"];
m11_232 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="PropertyInfo propertyInfo = member as PropertyInfo", span="475-475"];
m11_233 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="propertyInfo != null", span="477-477"];
m11_234 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return IsIndexedProperty(propertyInfo);", span="479-479"];
m11_235 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return false;", span="483-483"];
m11_236 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="471-471"];
m11_195 [cluster="System.Type.GetElementType()", file="ReflectionUtils.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m11_311 [cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0"];
m11_156 [cluster="string.FormatWith(System.IFormatProvider, object)", file="ReflectionUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m11_522 [cluster="System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", span="200-200"];
m11_479 [cluster="Unk.>", file="ReflectionUtils.cs", label="Entry Unk.>", span=""];
m11_446 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="902-902"];
m11_447 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="BindingFlags bindingAttr = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic", span="904-904"];
m11_448 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="memberInfo.MemberType()", span="906-906"];
m11_450 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="909-909"];
m11_452 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return targetType.GetProperty(propertyInfo.Name, bindingAttr, null, propertyInfo.PropertyType, types, null);", span="913-913"];
m11_453 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return targetType.GetMember(memberInfo.Name, memberInfo.MemberType(), bindingAttr).SingleOrDefault();", span="915-915"];
m11_449 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="908-908"];
m11_451 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Type[] types = propertyInfo.GetIndexParameters().Select(p => p.ParameterType).ToArray()", span="911-911"];
m11_454 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="902-902"];
m11_332 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="919-919"];
m11_463 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="921-921"];
m11_464 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="List<MemberInfo> fieldInfos = new List<MemberInfo>(targetType.GetFields(bindingAttr))", span="923-923"];
m11_465 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="GetChildPrivateFields(fieldInfos, targetType, bindingAttr)", span="927-927"];
m11_466 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return fieldInfos.Cast<FieldInfo>();", span="930-930"];
m11_467 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="919-919"];
m11_455 [cluster="Unk.Select", file="ReflectionUtils.cs", label="Entry Unk.Select", span=""];
m11_92 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239"];
m11_93 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="ReflectionUtils.cs", label="return GetDefaultConstructor(t, false);", span="241-241"];
m11_94 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239"];
m11_579 [cluster="System.DateTime.DateTime()", file="ReflectionUtils.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m11_289 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604"];
m11_290 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="member.MemberType()", span="606-606"];
m11_292 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="FieldInfo fieldInfo = (FieldInfo)member", span="609-609"];
m11_295 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="fieldInfo.IsInitOnly && !canSetReadOnly", span="615-615"];
m11_297 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label=nonPublic, span="619-619"];
m11_303 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="PropertyInfo propertyInfo = (PropertyInfo)member", span="629-629"];
m11_306 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label=nonPublic, span="635-635"];
m11_308 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return (propertyInfo.GetSetMethod(nonPublic) != null);", span="639-639"];
m11_291 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="608-608"];
m11_302 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="628-628"];
m11_309 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return false;", span="641-641"];
m11_293 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="fieldInfo.IsLiteral", span="611-611"];
m11_299 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="fieldInfo.IsPublic", span="623-623"];
m11_294 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return false;", span="613-613"];
m11_296 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return false;", span="617-617"];
m11_298 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return true;", span="621-621"];
m11_300 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return true;", span="625-625"];
m11_301 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return false;", span="627-627"];
m11_304 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="!propertyInfo.CanWrite", span="631-631"];
m11_305 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return false;", span="633-633"];
m11_307 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="return true;", span="637-637"];
m11_310 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604"];
m11_122 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="ReflectionUtils.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m11_477 [cluster="System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", span="986-986"];
m11_410 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", file="ReflectionUtils.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", span="0-0"];
m11_105 [cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionUtils.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m11_153 [cluster="System.Type.IsInterface()", file="ReflectionUtils.cs", label="Entry System.Type.IsInterface()", span="144-144"];
m11_340 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_154 [cluster="System.Type.IsGenericTypeDefinition()", file="ReflectionUtils.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
m11_533 [cluster="System.Reflection.PropertyInfo.GetBaseDefinition()", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetBaseDefinition()", span="115-115"];
m11_16 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m11_170 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="359-359"];
m11_171 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="currentType.IsGenericType()", span="361-361"];
m11_172 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Type currentGenericClassDefinition = currentType.GetGenericTypeDefinition()", span="363-363"];
m11_173 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="genericClassDefinition == currentGenericClassDefinition", span="365-365"];
m11_174 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = currentType", span="367-367"];
m11_176 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="currentType.BaseType() == null", span="372-372"];
m11_179 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return InheritsGenericDefinitionInternal(currentType.BaseType(), genericClassDefinition, out implementingType);", span="378-378"];
m11_175 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return true;", span="368-368"];
m11_177 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = null", span="374-374"];
m11_178 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return false;", span="375-375"];
m11_180 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="359-359"];
m11_162 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="346-346"];
m11_163 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="348-348"];
m11_164 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(genericClassDefinition, nameof(genericClassDefinition))", span="349-349"];
m11_165 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="!genericClassDefinition.IsClass() || !genericClassDefinition.IsGenericTypeDefinition()", span="351-351"];
m11_166 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="throw new ArgumentNullException('''{0}' is not a generic class definition.''.FormatWith(CultureInfo.InvariantCulture, genericClassDefinition));", span="353-353"];
m11_167 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return InheritsGenericDefinitionInternal(type, genericClassDefinition, out implementingType);", span="356-356"];
m11_168 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="346-346"];
m11_241 [cluster="System.Reflection.PropertyInfo.GetIndexParameters()", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetIndexParameters()", span="0-0"];
m11_373 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="742-742"];
m11_375 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs", label="Attribute[] a = GetAttributes(attributeProvider, typeof(T), inherit)", span="744-744"];
m11_376 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs", label="T[] attributes = a as T[]", span="746-746"];
m11_379 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs", label="return a.Cast<T>().ToArray();", span="752-752"];
m11_377 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs", label="attributes != null", span="747-747"];
m11_378 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs", label="return attributes;", span="749-749"];
m11_380 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="742-742"];
m11_107 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m11_108 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="257-257"];
m11_109 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="t.IsValueType()", span="259-259"];
m11_110 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="return IsNullableType(t);", span="261-261"];
m11_111 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="return true;", span="264-264"];
m11_112 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m11_17 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115"];
m11_18 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="117-117"];
m11_19 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="MethodInfo m = propertyInfo.GetGetMethod()", span="119-119"];
m11_22 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="m = propertyInfo.GetSetMethod()", span="125-125"];
m11_20 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="m != null", span="120-120"];
m11_21 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return m.GetBaseDefinition();", span="122-122"];
m11_23 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="m != null", span="126-126"];
m11_24 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return m.GetBaseDefinition();", span="128-128"];
m11_25 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return null;", span="131-131"];
m11_26 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115"];
m11_341 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m11_416 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)", file="ReflectionUtils.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)", span="0-0"];
m11_255 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m11_499 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m11_583 [cluster="System.Activator.CreateInstance(System.Type)", file="ReflectionUtils.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m11_198 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m11_3 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", span="96-96"];
m11_4 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="98-98"];
m11_5 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="MethodInfo m = propertyInfo.GetGetMethod()", span="100-100"];
m11_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="m = propertyInfo.GetSetMethod()", span="106-106"];
m11_6 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="m != null && m.IsVirtual", span="101-101"];
m11_7 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return true;", span="103-103"];
m11_9 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="m != null && m.IsVirtual", span="107-107"];
m11_10 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return true;", span="109-109"];
m11_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return false;", span="112-112"];
m11_12 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", span="96-96"];
m11_133 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298"];
m11_134 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="300-300"];
m11_135 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(genericInterfaceDefinition, nameof(genericInterfaceDefinition))", span="301-301"];
m11_136 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="!genericInterfaceDefinition.IsInterface() || !genericInterfaceDefinition.IsGenericTypeDefinition()", span="303-303"];
m11_137 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="throw new ArgumentNullException('''{0}' is not a generic interface definition.''.FormatWith(CultureInfo.InvariantCulture, genericInterfaceDefinition));", span="305-305"];
m11_138 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="type.IsInterface()", span="308-308"];
m11_139 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="type.IsGenericType()", span="310-310"];
m11_140 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Type interfaceDefinition = type.GetGenericTypeDefinition()", span="312-312"];
m11_141 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="genericInterfaceDefinition == interfaceDefinition", span="314-314"];
m11_142 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = type", span="316-316"];
m11_144 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="type.GetInterfaces()", span="322-322"];
m11_147 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="genericInterfaceDefinition == interfaceDefinition", span="328-328"];
m11_143 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return true;", span="317-317"];
m11_145 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="i.IsGenericType()", span="324-324"];
m11_150 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = null", span="336-336"];
m11_146 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Type interfaceDefinition = i.GetGenericTypeDefinition()", span="326-326"];
m11_148 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = i", span="330-330"];
m11_149 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return true;", span="331-331"];
m11_151 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return false;", span="337-337"];
m11_152 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298"];
m11_158 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340"];
m11_159 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Type implementingType", span="342-342"];
m11_160 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="return InheritsGenericDefinition(type, genericClassDefinition, out implementingType);", span="343-343"];
m11_161 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340"];
m11_540 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="1060-1064"];
m11_102 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="252-252"];
m11_103 [cluster="lambda expression", file="ReflectionUtils.cs", label="!c.GetParameters().Any()", span="252-252"];
m11_104 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="252-252"];
m11_343 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="658-658"];
m11_344 [cluster="lambda expression", file="ReflectionUtils.cs", label="m.Name", span="658-658"];
m11_345 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="658-658"];
m11_460 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="911-911"];
m11_461 [cluster="lambda expression", file="ReflectionUtils.cs", label="p.ParameterType", span="911-911"];
m11_462 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="911-911"];
m11_481 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="947-947"];
m11_482 [cluster="lambda expression", file="ReflectionUtils.cs", label="f.IsPrivate", span="947-947"];
m11_483 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="947-947"];
m11_525 [cluster="lambda expression", file="ReflectionUtils.cs", label="p.Name == subTypeProperty.Name", span="1010-1010"];
m11_528 [cluster="lambda expression", file="ReflectionUtils.cs", label="p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType", span="1032-1033"];
m11_531 [cluster="lambda expression", file="ReflectionUtils.cs", label="p.Name == subTypeProperty.Name\r\n                                                                       && p.IsVirtual()\r\n                                                                       && p.GetBaseDefinition() != null\r\n                                                                       && p.GetBaseDefinition().DeclaringType.IsAssignableFrom(subTypeProperty.GetBaseDefinition().DeclaringType)", span="1042-1045"];
m11_524 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="1010-1010"];
m11_527 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="1032-1033"];
m11_530 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="1042-1045"];
m11_526 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="1010-1010"];
m11_529 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="1032-1033"];
m11_532 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="1042-1045"];
m11_541 [cluster="lambda expression", file="ReflectionUtils.cs", label="info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType", span="1061-1064"];
m11_542 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="1060-1064"];
m11_38 [cluster="object.GetType()", file="ReflectionUtils.cs", label="Entry object.GetType()", span="0-0"];
m11_181 [cluster="System.Type.BaseType()", file="ReflectionUtils.cs", label="Entry System.Type.BaseType()", span="171-171"];
m11_242 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m11_243 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="509-509"];
m11_244 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="510-510"];
m11_245 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="member.MemberType()", span="512-512"];
m11_247 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="return ((FieldInfo)member).GetValue(target);", span="515-515"];
m11_249 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="return ((PropertyInfo)member).GetValue(target, null);", span="519-519"];
m11_251 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="throw new ArgumentException(''MemberInfo '{0}' has index parameters''.FormatWith(CultureInfo.InvariantCulture, member.Name), e);", span="523-523"];
m11_252 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="throw new ArgumentException(''MemberInfo '{0}' is not of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, CultureInfo.InvariantCulture, member.Name), nameof(member));", span="526-526"];
m11_246 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="514-514"];
m11_248 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="516-516"];
m11_250 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label=TargetParameterCountException, span="521-521"];
m11_253 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m11_534 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1057-1057"];
m11_535 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs", label="bool isMethodOverriden = currentType.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance)\r\n                .Any(info =>\r\n                    info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType\r\n                )", span="1059-1065"];
m11_536 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs", label="return isMethodOverriden;", span="1067-1067"];
m11_537 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1057-1057"];
m11_15 [cluster="System.Reflection.PropertyInfo.GetGetMethod()", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod()", span="0-0"];
m11_106 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m11_269 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m11_470 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="934-934"];
m11_471 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="(bindingAttr & BindingFlags.NonPublic) != 0", span="938-938"];
m11_472 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="941-941"];
m11_473 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="(targetType = targetType.BaseType()) != null", span="943-943"];
m11_475 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="initialFields.AddRange(childPrivateFields)", span="949-949"];
m11_474 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="IEnumerable<MemberInfo> childPrivateFields =\r\n                        targetType.GetFields(nonPublicBindingAttr).Where(f => f.IsPrivate).Cast<MemberInfo>()", span="946-947"];
m11_476 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="934-934"];
m11_338 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m11_118 [cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionUtils.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m11_169 [cluster="System.Type.IsClass()", file="ReflectionUtils.cs", label="Entry System.Type.IsClass()", span="198-198"];
m11_0 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87"];
m11_1 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs", label="EmptyTypes = Type.EmptyTypes", span="90-90"];
m11_2 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87"];
m11_333 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m11_228 [cluster="System.Reflection.MemberInfo.MemberType()", file="ReflectionUtils.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m11_581 [cluster="System.Guid.Guid()", file="ReflectionUtils.cs", label="Entry System.Guid.Guid()", span="0-0"];
m11_258 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="536-536"];
m11_259 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="538-538"];
m11_260 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="539-539"];
m11_261 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="member.MemberType()", span="541-541"];
m11_263 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="((FieldInfo)member).SetValue(target, value)", span="544-544"];
m11_265 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="((PropertyInfo)member).SetValue(target, value, null)", span="547-547"];
m11_266 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="throw new ArgumentException(''MemberInfo '{0}' must be of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, member.Name), nameof(member));", span="550-550"];
m11_262 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="543-543"];
m11_264 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="546-546"];
m11_267 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="536-536"];
m11_331 [cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_428 [cluster="System.Nullable<T>.GetValueOrDefault()", file="ReflectionUtils.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m11_288 [cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0"];
m11_54 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="182-182"];
m11_56 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="StringBuilder builder = new StringBuilder()", span="184-184"];
m11_60 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="i < fullyQualifiedTypeName.Length", span="189-189"];
m11_61 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="char current = fullyQualifiedTypeName[i]", span="191-191"];
m11_57 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="bool writingAssemblyName = false", span="187-187"];
m11_66 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="builder.Append(current)", span="197-197"];
m11_70 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="builder.Append(current)", span="202-202"];
m11_74 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="builder.Append(current)", span="208-208"];
m11_77 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="builder.Append(current)", span="218-218"];
m11_79 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="return builder.ToString();", span="224-224"];
m11_58 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="bool skippingAssemblyDetails = false", span="188-188"];
m11_59 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="int i = 0", span="189-189"];
m11_78 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="i++", span="189-189"];
m11_62 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label=current, span="192-192"];
m11_63 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="'['", span="194-194"];
m11_67 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="']'", span="199-199"];
m11_71 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="','", span="204-204"];
m11_76 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="!skippingAssemblyDetails", span="216-216"];
m11_64 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="writingAssemblyName = false", span="195-195"];
m11_65 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="skippingAssemblyDetails = false", span="196-196"];
m11_68 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="writingAssemblyName = false", span="200-200"];
m11_69 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="skippingAssemblyDetails = false", span="201-201"];
m11_72 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="!writingAssemblyName", span="205-205"];
m11_73 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="writingAssemblyName = true", span="207-207"];
m11_75 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="skippingAssemblyDetails = true", span="212-212"];
m11_80 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="182-182"];
m11_82 [cluster="System.Text.StringBuilder.Append(char)", file="ReflectionUtils.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m11_580 [cluster="BigInteger.cstr", file="ReflectionUtils.cs", label="Entry BigInteger.cstr", span=""];
m11_411 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", file="ReflectionUtils.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m11_55 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="ReflectionUtils.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m11_365 [cluster="System.Type.GetMember(string, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Type.GetMember(string, System.Reflection.BindingFlags)", span="0-0"];
m11_538 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m11_254 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="ReflectionUtils.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m11_157 [cluster="System.Type.GetInterfaces()", file="ReflectionUtils.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m11_412 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", span="0-0"];
m11_334 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="955-955"];
m11_484 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="957-957"];
m11_485 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="List<PropertyInfo> propertyInfos = new List<PropertyInfo>(targetType.GetProperties(bindingAttr))", span="959-959"];
m11_486 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="targetType.IsInterface()", span="962-962"];
m11_487 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="targetType.GetInterfaces()", span="964-964"];
m11_488 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="propertyInfos.AddRange(i.GetProperties(bindingAttr))", span="966-966"];
m11_489 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="GetChildPrivateProperties(propertyInfos, targetType, bindingAttr)", span="970-970"];
m11_493 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="member.DeclaringType != targetType", span="976-976"];
m11_491 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="i < propertyInfos.Count", span="973-973"];
m11_492 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="PropertyInfo member = propertyInfos[i]", span="975-975"];
m11_495 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="propertyInfos[i] = declaredMember", span="979-979"];
m11_497 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return propertyInfos;", span="983-983"];
m11_490 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="int i = 0", span="973-973"];
m11_496 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="i++", span="973-973"];
m11_494 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="PropertyInfo declaredMember = (PropertyInfo)GetMemberInfoFromType(member.DeclaringType, member)", span="978-978"];
m11_498 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="955-955"];
m11_458 [cluster="System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="0-0"];
m11_409 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", file="ReflectionUtils.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", span="0-0"];
m11_215 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445"];
m11_216 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="447-447"];
m11_217 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="member.MemberType()", span="449-449"];
m11_219 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((FieldInfo)member).FieldType;", span="452-452"];
m11_221 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((PropertyInfo)member).PropertyType;", span="454-454"];
m11_223 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((EventInfo)member).EventHandlerType;", span="456-456"];
m11_225 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((MethodInfo)member).ReturnType;", span="458-458"];
m11_226 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="throw new ArgumentException(''MemberInfo must be of type FieldInfo, PropertyInfo, EventInfo or MethodInfo'', nameof(member));", span="460-460"];
m11_218 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="451-451"];
m11_220 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="453-453"];
m11_222 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Event", span="455-455"];
m11_224 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Method", span="457-457"];
m11_227 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445"];
m11_28 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134"];
m11_29 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="property.GetGetMethod() != null && property.GetGetMethod().IsPublic", span="136-136"];
m11_31 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="property.GetSetMethod() != null && property.GetSetMethod().IsPublic", span="140-140"];
m11_30 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return true;", span="138-138"];
m11_32 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return true;", span="142-142"];
m11_33 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return false;", span="145-145"];
m11_34 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134"];
m11_83 [cluster="System.Text.StringBuilder.ToString()", file="ReflectionUtils.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m11_457 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])", file="ReflectionUtils.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m11_123 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
m11_124 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="!type.IsGenericType()", span="283-283"];
m11_126 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Type t = type.GetGenericTypeDefinition()", span="288-288"];
m11_127 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="return (t == genericInterfaceDefinition);", span="289-289"];
m11_125 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="return false;", span="285-285"];
m11_128 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
m11_582 [cluster="System.DateTimeOffset.DateTimeOffset()", file="ReflectionUtils.cs", label="Entry System.DateTimeOffset.DateTimeOffset()", span="0-0"];
m11_101 [cluster="Unk.SingleOrDefault", file="ReflectionUtils.cs", label="Entry Unk.SingleOrDefault", span=""];
m11_369 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734"];
m11_370 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs", label="T[] attributes = GetAttributes<T>(attributeProvider, inherit)", span="736-736"];
m11_371 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs", label="return (attributes != null) ? attributes.FirstOrDefault() : null;", span="738-738"];
m11_372 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734"];
m11_584 [file="ReflectionUtils.cs", label=subTypeProperty, span=""];
m11_585 [file="ReflectionUtils.cs", label="System.Type", span=""];
m11_586 [file="ReflectionUtils.cs", label=string, span=""];
d29 -> d31  [color=green, key=1, label="System.Type", style=dashed];
d34 -> d44  [color=green, key=1, label="System.Type", style=dashed];
d34 -> d37  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d40 -> d44  [color=green, key=1, label=parameterType, style=dashed];
d45 -> d46  [color=darkseagreen4, key=1, label=match, style=dashed];
d35 -> d41  [color=green, key=1, label=genericEnumerable, style=dashed];
d42 -> d43  [color=darkseagreen4, key=1, label=match, style=dashed];
d36 -> d43  [color=darkseagreen4, key=1, label=match, style=dashed];
d36 -> d46  [color=darkseagreen4, key=1, label=match, style=dashed];
d16 -> d18  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d16 -> d20  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d16 -> d22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d0 -> d2  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<T>", style=dashed];
d73 -> d77  [color=darkseagreen4, key=1, label=allAdded, style=dashed];
d88 -> d90  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
d88 -> d91  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
d72 -> d75  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
d72 -> d74  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
d89 -> d91  [color=darkseagreen4, key=1, label=i, style=dashed];
d89 -> d93  [color=darkseagreen4, key=1, label=i, style=dashed];
d5 -> d7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
d5 -> d8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
d5 -> d10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
d5 -> d11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
d61 -> d65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
d61 -> d64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
d61 -> d66  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
d61 -> d67  [color=darkseagreen4, key=1, label=TSource, style=dashed];
d76 -> d77  [color=darkseagreen4, key=1, label=allAdded, style=dashed];
d54 -> d57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
d93 -> d93  [color=darkseagreen4, key=1, label=i, style=dashed];
d80 -> d83  [color=darkseagreen4, key=1, label=index, style=dashed];
d80 -> d84  [color=darkseagreen4, key=1, label=index, style=dashed];
d63 -> d67  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEqualityComparer<TSource>", style=dashed];
d79 -> d81  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
d79 -> d82  [color=darkseagreen4, key=1, label="System.Func<T, bool>", style=dashed];
d98 -> d100  [color=darkseagreen4, key=1, label=i, style=dashed];
d98 -> d101  [color=darkseagreen4, key=1, label=i, style=dashed];
d98 -> d102  [color=darkseagreen4, key=1, label=i, style=dashed];
d84 -> d84  [color=darkseagreen4, key=1, label=index, style=dashed];
d97 -> d99  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
d97 -> d100  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
d102 -> d102  [color=darkseagreen4, key=1, label=i, style=dashed];
d119 -> d135  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
d119 -> d121  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
d119 -> d122  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
d119 -> d137  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
d120 -> d135  [color=darkseagreen4, key=1, label=dimension, style=dashed];
d120 -> d131  [color=darkseagreen4, key=1, label=dimension, style=dashed];
d134 -> d138  [color=darkseagreen4, key=1, label=i, style=dashed];
d138 -> d138  [color=darkseagreen4, key=1, label=i, style=dashed];
d130 -> d133  [color=darkseagreen4, key=1, label=i, style=dashed];
d133 -> d133  [color=darkseagreen4, key=1, label=i, style=dashed];
d140 -> d146  [color=darkseagreen4, key=1, label="int[]", style=dashed];
d140 -> d148  [color=darkseagreen4, key=1, label="int[]", style=dashed];
d145 -> d148  [color=darkseagreen4, key=1, label=i, style=dashed];
d145 -> d151  [color=darkseagreen4, key=1, label=i, style=dashed];
d151 -> d151  [color=darkseagreen4, key=1, label=i, style=dashed];
d147 -> d149  [color=darkseagreen4, key=1, label=index, style=dashed];
d107 -> d110  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
d107 -> d111  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
d107 -> d116  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
d108 -> d110  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
d108 -> d112  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
d155 -> d157  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
d124 -> d127  [color=darkseagreen4, key=1, label=dimensionLength, style=dashed];
d154 -> d156  [color=darkseagreen4, key=1, label=int, style=dashed];
d154 -> d159  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
d158 -> d160  [color=darkseagreen4, key=1, label=multidimensionalArray, style=dashed];
d129 -> d137  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
d144 -> d152  [color=darkseagreen4, key=1, label=currentList, style=dashed];
d144 -> d149  [color=darkseagreen4, key=1, label=currentList, style=dashed];
d150 -> d152  [color=darkseagreen4, key=1, label=currentList, style=dashed];
d106 -> d111  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_46 -> m0_51  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_0 -> m0_21  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_10  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_29  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_0 -> m0_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_0 -> m0_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_5 -> m0_20  [color=green, key=1, label=keyType, style=dashed];
m0_5 -> m0_19  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_5 -> m0_23  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_5 -> m0_10  [color=darkseagreen4, key=1, label=enumName, style=dashed];
m0_6 -> m0_20  [color=green, key=1, label=valueType, style=dashed];
m0_6 -> m0_19  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_6 -> m0_23  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_6 -> m0_26  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_11 -> m0_20  [color=green, key=1, label=keyType, style=dashed];
m0_11 -> m0_19  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_11 -> m0_23  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_11 -> m0_15  [color=darkseagreen4, key=1, label=resolvedEnumName, style=dashed];
m0_16 -> m0_20  [color=green, key=1, label=keyType, style=dashed];
m0_16 -> m0_19  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_16 -> m0_23  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m0_16 -> m0_26  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_12 -> m0_20  [color=green, key=1, label=valueType, style=dashed];
m0_12 -> m0_19  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_12 -> m0_23  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_12 -> m0_26  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m0_8 -> m0_10  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_13 -> m0_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label=immutableParameterizedCreator, style=dashed];
m0_22 -> m0_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_22 -> m0_70  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_22 -> m0_73  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_35 -> m0_43  [color=darkseagreen4, key=1, label=isNullable, style=dashed];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_64 -> m0_20  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_64 -> m0_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m0_72 -> m0_78  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_72 -> m0_80  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_72 -> m0_82  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_74 -> m0_80  [color=darkseagreen4, key=1, label=n1, style=dashed];
m0_76 -> m0_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_76 -> m0_78  [color=darkseagreen4, key=1, label=n2, style=dashed];
m0_76 -> m0_80  [color=darkseagreen4, key=1, label=n2, style=dashed];
m0_42 -> m0_47  [color=darkseagreen4, key=1, label=enumText, style=dashed];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_34 -> m0_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_34 -> m0_38  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_34 -> m0_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_34 -> m0_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_34 -> m0_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_34 -> m0_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_34 -> m0_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_34 -> m0_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_36 -> m0_49  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_36 -> m0_51  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_100 -> m0_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m0_100 -> m0_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m0_100 -> m0_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m0_100 -> m0_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m1_326 -> m1_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m1_326 -> m1_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_326 -> m1_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m1_326 -> m1_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_326 -> m1_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_326 -> m1_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m1_367 -> m1_369  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_368 -> m1_374  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m1_369 -> m1_379  [color=darkseagreen4, key=1, label=writeMetadataObject, style=dashed];
m1_307 -> m1_312  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_307 -> m1_315  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_307 -> m1_318  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_307 -> m1_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_308 -> m1_318  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m1_312 -> m1_314  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_315 -> m1_317  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_309 -> m1_317  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_311 -> m1_314  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m1_311 -> m1_315  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m1_310 -> m1_312  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_310 -> m1_313  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_310 -> m1_314  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_310 -> m1_315  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_124 -> m1_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_124 -> m1_129  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_124 -> m1_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_124 -> m1_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_124 -> m1_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m1_124 -> m1_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m1_124 -> m1_134  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_124 -> m1_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_124 -> m1_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_124 -> m1_138  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_124 -> m1_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_124 -> m1_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_124 -> m1_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_129 -> m1_139  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m1_129 -> m1_132  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m1_131 -> m1_139  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m1_133 -> m1_139  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m1_137 -> m1_137  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_138 -> m1_144  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_138 -> m1_148  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_138 -> m1_138  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_138 -> m1_141  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_135 -> m1_137  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_135 -> m1_138  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_127 -> m1_139  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m1_127 -> m1_130  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m1_127 -> m1_132  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m1_127 -> m1_129  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_149 -> m1_156  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_126 -> m1_129  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_151 -> m1_161  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_351 -> m1_355  [color=green, key=1, label=value, style=dashed];
m1_351 -> m1_356  [color=green, key=1, label=value, style=dashed];
m1_352 -> m1_355  [color=green, key=1, label=valueContract, style=dashed];
m1_352 -> m1_356  [color=green, key=1, label=valueContract, style=dashed];
m1_182 -> m1_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_182 -> m1_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_182 -> m1_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_184 -> m1_186  [color=darkseagreen4, key=1, label="out string", style=dashed];
m1_77 -> m1_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_77 -> m1_192  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_77 -> m1_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_195 -> m1_214  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_74 -> m1_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_74 -> m1_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m1_74 -> m1_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m1_74 -> m1_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_74 -> m1_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_217 -> m1_219  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m1_211 -> m1_222  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m1_214 -> m1_217  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_214 -> m1_219  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_214 -> m1_221  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_214 -> m1_218  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_216 -> m1_221  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_216 -> m1_224  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_216 -> m1_225  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_224 -> m1_224  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_212 -> m1_214  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_212 -> m1_224  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_120 -> m1_123  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_120 -> m1_125  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_338 -> m1_355  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_338 -> m1_356  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_338 -> m1_358  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_338 -> m1_359  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_338 -> m1_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_338 -> m1_347  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m1_338 -> m1_349  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m1_338 -> m1_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_438 -> m1_442  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_362 -> m1_362  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_346 -> m1_358  [color=green, key=1, label=i, style=dashed];
m1_346 -> m1_362  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_346 -> m1_348  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_339 -> m1_342  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m1_339 -> m1_347  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m1_339 -> m1_348  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m1_340 -> m1_361  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m1_340 -> m1_349  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m1_340 -> m1_348  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m1_341 -> m1_344  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_344 -> m1_344  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_36 -> m1_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameHandling", style=dashed];
m1_36 -> m1_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_36 -> m1_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_36 -> m1_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_36 -> m1_454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m1_36 -> m1_40  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m1_447 -> m1_450  [color=darkseagreen4, key=1, label=resolvedTypeNameHandling, style=dashed];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", style=dashed];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_24 -> m1_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_492 -> m1_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_492 -> m1_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_509 -> m1_511  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m1_493 -> m1_509  [color=darkseagreen4, key=1, label=key, style=dashed];
m1_493 -> m1_500  [color=darkseagreen4, key=1, label=key, style=dashed];
m1_493 -> m1_505  [color=darkseagreen4, key=1, label=key, style=dashed];
m1_493 -> m1_508  [color=darkseagreen4, key=1, label=key, style=dashed];
m1_493 -> m1_513  [color=darkseagreen4, key=1, label=key, style=dashed];
m1_495 -> m1_497  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m1_495 -> m1_502  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m1_510 -> m1_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m1_512 -> m1_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m1_498 -> m1_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m1_503 -> m1_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m1_507 -> m1_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m1_499 -> m1_501  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_504 -> m1_506  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_391 -> m1_391  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m1_385 -> m1_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m1_385 -> m1_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m1_389 -> m1_389  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m1_389 -> m1_392  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m1_390 -> m1_390  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m1_392 -> m1_392  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m1_81 -> m1_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_81 -> m1_384  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m1_81 -> m1_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_81 -> m1_387  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m1_81 -> m1_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_81 -> m1_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_81 -> m1_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_81 -> m1_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_81 -> m1_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m1_81 -> m1_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_81 -> m1_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_386 -> m1_390  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_258 -> m1_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_259 -> m1_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_268 -> m1_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_268 -> m1_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_268 -> m1_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_269 -> m1_273  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_405 -> m1_418  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_234 -> m1_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_234 -> m1_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_234 -> m1_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_234 -> m1_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_12 -> m1_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_12 -> m1_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_12 -> m1_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_69 -> m1_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_69 -> m1_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_69 -> m1_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m1_53 -> m1_56  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m1_50 -> m1_65  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_68 -> m1_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m1_68 -> m1_383  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_75 -> m1_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m1_75 -> m1_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_303  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m1_75 -> m1_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_310  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m1_75 -> m1_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_75 -> m1_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_306 -> m1_321  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m1_303 -> m1_305  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m1_303 -> m1_306  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m1_303 -> m1_317  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m1_303 -> m1_324  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m1_231 -> m1_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_231 -> m1_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_231 -> m1_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_231 -> m1_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m1_231 -> m1_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_231 -> m1_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_231 -> m1_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_231 -> m1_239  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_231 -> m1_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_231 -> m1_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m1_231 -> m1_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_231 -> m1_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_240 -> m1_242  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_240 -> m1_246  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_254 -> m1_257  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_239 -> m1_241  [color=darkseagreen4, key=1, label="out object", style=dashed];
m1_239 -> m1_242  [color=darkseagreen4, key=1, label="out object", style=dashed];
m1_239 -> m1_244  [color=darkseagreen4, key=1, label="out object", style=dashed];
m1_239 -> m1_246  [color=darkseagreen4, key=1, label="out object", style=dashed];
m1_239 -> m1_248  [color=darkseagreen4, key=1, label="out object", style=dashed];
m1_245 -> m1_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_245 -> m1_253  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_245 -> m1_254  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_250 -> m1_252  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_255 -> m1_257  [color=darkseagreen4, key=1, label="out object", style=dashed];
m1_397 -> m1_399  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m1_73 -> m1_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_73 -> m1_293  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_73 -> m1_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_73 -> m1_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_73 -> m1_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_291 -> m1_304  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_38 -> m1_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_38 -> m1_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_275 -> m1_277  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m1_275 -> m1_279  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m1_278 -> m1_280  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_33 -> m1_40  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m1_230 -> m1_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_230 -> m1_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_230 -> m1_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_166 -> m1_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_166 -> m1_180  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_272 -> m1_277  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_272 -> m1_281  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_272 -> m1_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_282 -> m1_282  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_282 -> m1_284  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_113 -> m1_116  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_187 -> m1_189  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_331 -> m1_333  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m1_540 -> m1_542  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m1_540 -> m1_543  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m1_80 -> m1_402  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m1_80 -> m1_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m1_80 -> m1_419  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m1_80 -> m1_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m1_80 -> m1_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_80 -> m1_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_411 -> m1_413  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m1_422 -> m1_424  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m1_422 -> m1_427  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m1_404 -> m1_416  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m1_404 -> m1_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m1_407 -> m1_411  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_407 -> m1_413  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_407 -> m1_415  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_407 -> m1_417  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m1_418 -> m1_418  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_421 -> m1_423  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m1_421 -> m1_424  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m1_421 -> m1_427  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m1_419 -> m1_429  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m1_419 -> m1_425  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m1_79 -> m1_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_79 -> m1_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_79 -> m1_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_79 -> m1_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_463  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m1_79 -> m1_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_79 -> m1_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_79 -> m1_472  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m1_79 -> m1_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_79 -> m1_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_466 -> m1_468  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_470 -> m1_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_470 -> m1_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_474 -> m1_479  [color=darkseagreen4, key=1, label=escape, style=dashed];
m1_474 -> m1_482  [color=darkseagreen4, key=1, label=escape, style=dashed];
m1_477 -> m1_481  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m1_477 -> m1_483  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m1_463 -> m1_465  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m1_463 -> m1_485  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m1_463 -> m1_490  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m1_471 -> m1_486  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m1_475 -> m1_485  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m1_475 -> m1_479  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m1_475 -> m1_482  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m1_476 -> m1_478  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_476 -> m1_480  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_476 -> m1_481  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_476 -> m1_483  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_462 -> m1_467  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_462 -> m1_468  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_229 -> m1_243  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_197 -> m1_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_205 -> m1_208  [color=darkseagreen4, key=1, label=b, style=dashed];
m1_206 -> m1_208  [color=darkseagreen4, key=1, label=b, style=dashed];
m1_531 -> m1_533  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m1_531 -> m1_534  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m1_157 -> m1_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_157 -> m1_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_157 -> m1_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_157 -> m1_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_157 -> m1_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_158 -> m1_160  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_158 -> m1_163  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_76 -> m1_330  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m1_76 -> m1_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_76 -> m1_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_76 -> m1_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_196 -> m1_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_196 -> m1_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_96 -> m1_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_96 -> m1_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_96 -> m1_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_96 -> m1_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m1_101 -> m1_106  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_97 -> m1_100  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_107 -> m1_118  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_107 -> m1_142  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_98 -> m1_100  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_112 -> m1_116  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_112 -> m1_117  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_83 -> m1_101  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_84 -> m1_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m1_84 -> m1_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m1_91 -> m1_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_85 -> m1_88  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_85 -> m1_90  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_85 -> m1_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_85 -> m1_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_89 -> m1_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_89 -> m1_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_87 -> m1_90  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_87 -> m1_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_87 -> m1_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m1_95 -> m1_100  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_545 -> m1_355  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_356  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_358  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_359  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m1_545 -> m1_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_80 -> m2_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateParseHandling", style=dashed];
m2_80 -> m2_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_80 -> m2_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_117 -> m2_120  [color=darkseagreen4, key=1, label=isoDateFormat, style=dashed];
m2_117 -> m2_124  [color=darkseagreen4, key=1, label=isoDateFormat, style=dashed];
m2_128 -> m2_130  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_70 -> m2_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_70 -> m2_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_109 -> m2_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_109 -> m2_113  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_109 -> m2_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_112 -> m2_114  [color=darkseagreen4, key=1, label=oldDt, style=dashed];
m2_112 -> m2_115  [color=darkseagreen4, key=1, label=oldDt, style=dashed];
m2_113 -> m2_115  [color=darkseagreen4, key=1, label=newDt, style=dashed];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_4 -> m2_11  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_7 -> m2_9  [color=darkseagreen4, key=1, label=minDateText, style=dashed];
m2_21 -> m2_23  [color=darkseagreen4, key=1, label=oldDt, style=dashed];
m2_21 -> m2_24  [color=darkseagreen4, key=1, label=success, style=dashed];
m2_71 -> m2_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_71 -> m2_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_71 -> m2_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_71 -> m2_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_76 -> m2_78  [color=darkseagreen4, key=1, label=newDt, style=dashed];
m2_74 -> m2_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_74 -> m2_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_133 -> m2_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m2_133 -> m2_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests", style=dashed];
m3_103 -> m3_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_103 -> m3_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_106 -> m3_109  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_106 -> m3_110  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_951 -> m3_962  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m3_951 -> m3_964  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m3_951 -> m3_965  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_868  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_870  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_875  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_879  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_881  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_883  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_72 -> m3_885  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_47 -> m3_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_47 -> m3_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_47 -> m3_60  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_47 -> m3_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_47 -> m3_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_47 -> m3_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_50 -> m3_52  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_50 -> m3_53  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_50 -> m3_54  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_50 -> m3_65  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_58 -> m3_63  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m3_59 -> m3_63  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m3_51 -> m3_57  [color=darkseagreen4, key=1, label=converter, style=dashed];
m3_73 -> m3_821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m3_73 -> m3_824  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m3_822 -> m3_825  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_461 -> m3_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_461 -> m3_464  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_461 -> m3_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_36 -> m3_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_71 -> m3_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m3_71 -> m3_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_71 -> m3_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m3_71 -> m3_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_71 -> m3_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_71 -> m3_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_174 -> m3_189  [color=darkseagreen4, key=1, label=converter, style=dashed];
m3_90 -> m3_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_90 -> m3_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_90 -> m3_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m3_252 -> m3_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_717  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m3_252 -> m3_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_720  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_252 -> m3_721  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_725  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_729  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_735  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_736  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m3_252 -> m3_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_751  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_752  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_252 -> m3_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_714 -> m3_721  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_714 -> m3_722  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_714 -> m3_735  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_714 -> m3_744  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_714 -> m3_746  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_714 -> m3_754  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_714 -> m3_755  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_714 -> m3_756  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_718 -> m3_721  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_718 -> m3_722  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_718 -> m3_735  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_718 -> m3_744  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_718 -> m3_746  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_718 -> m3_754  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_718 -> m3_755  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_718 -> m3_756  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_723 -> m3_747  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m3_727 -> m3_729  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_727 -> m3_744  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_727 -> m3_746  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_730 -> m3_732  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_730 -> m3_735  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_739 -> m3_741  [color=darkseagreen4, key=1, label=dynamicMemberConverter, style=dashed];
m3_750 -> m3_753  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_77 -> m3_994  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_77 -> m3_995  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_77 -> m3_996  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_77 -> m3_997  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_642  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_33 -> m3_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_644  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_33 -> m3_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_654  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_662  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_33 -> m3_665  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_33 -> m3_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_641 -> m3_643  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m3_641 -> m3_646  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m3_641 -> m3_647  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m3_641 -> m3_665  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m3_641 -> m3_673  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m3_641 -> m3_674  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m3_641 -> m3_675  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m3_648 -> m3_666  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m3_649 -> m3_653  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m3_650 -> m3_653  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m3_650 -> m3_659  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m3_664 -> m3_667  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m3_651 -> m3_667  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m3_652 -> m3_671  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_652 -> m3_672  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_656 -> m3_672  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_321 -> m3_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_321 -> m3_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_324 -> m3_327  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m3_42 -> m3_45  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_953 -> m3_969  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>", style=dashed];
m3_953 -> m3_977  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_953 -> m3_981  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_953 -> m3_984  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_953 -> m3_986  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_953 -> m3_987  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_973 -> m3_976  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m3_970 -> m3_977  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_970 -> m3_978  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_970 -> m3_980  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_970 -> m3_981  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_970 -> m3_984  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_970 -> m3_986  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_971 -> m3_974  [color=darkseagreen4, key=1, label=presence, style=dashed];
m3_521 -> m3_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_521 -> m3_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_362 -> m3_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_362 -> m3_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m3_362 -> m3_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m3_362 -> m3_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m3_362 -> m3_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m3_362 -> m3_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m3_362 -> m3_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m3_362 -> m3_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_483 -> m3_486  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_488 -> m3_492  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_490 -> m3_492  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_482 -> m3_497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_491 -> m3_497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_494 -> m3_497  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_154 -> m3_371  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_373  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_154 -> m3_374  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_154 -> m3_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_154 -> m3_379  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_380  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_382  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_383  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_384  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_385  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_386  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_154 -> m3_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_154 -> m3_389  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_377 -> m3_381  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m3_152 -> m3_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_204  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_152 -> m3_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_222  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_152 -> m3_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_152 -> m3_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_195 -> m3_195  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_195 -> m3_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_195 -> m3_209  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_195 -> m3_225  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_195 -> m3_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_195 -> m3_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_195 -> m3_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_195 -> m3_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_195 -> m3_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_195 -> m3_231  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_195 -> m3_241  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_195 -> m3_244  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_195 -> m3_245  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_205 -> m3_208  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m3_205 -> m3_209  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m3_206 -> m3_208  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m3_206 -> m3_209  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m3_216 -> m3_218  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_224 -> m3_227  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m3_224 -> m3_229  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m3_224 -> m3_231  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m3_224 -> m3_232  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m3_224 -> m3_233  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m3_224 -> m3_234  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m3_224 -> m3_235  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m3_202 -> m3_209  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m3_220 -> m3_231  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m3_220 -> m3_233  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m3_201 -> m3_207  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m3_573 -> m3_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_573 -> m3_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_399 -> m3_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_399 -> m3_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_399 -> m3_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_399 -> m3_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_399 -> m3_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_399 -> m3_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_399 -> m3_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_404 -> m3_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m3_404 -> m3_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m3_404 -> m3_408  [color=darkseagreen4, key=1, label=gottenCurrentValue, style=dashed];
m3_404 -> m3_412  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m3_404 -> m3_419  [color=darkseagreen4, key=1, label=useExistingValue, style=dashed];
m3_409 -> m3_412  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m3_410 -> m3_413  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_411 -> m3_413  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_515 -> m3_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_515 -> m3_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_153 -> m3_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_153 -> m3_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_153 -> m3_336  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_153 -> m3_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_153 -> m3_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_153 -> m3_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_153 -> m3_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_153 -> m3_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_153 -> m3_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_153 -> m3_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_335 -> m3_345  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m3_335 -> m3_346  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m3_335 -> m3_347  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m3_335 -> m3_349  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m3_335 -> m3_355  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m3_338 -> m3_341  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m3_338 -> m3_343  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m3_338 -> m3_346  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_338 -> m3_347  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_338 -> m3_348  [color=darkseagreen4, key=1, label=createdFromNonDefaultConstructor, style=dashed];
m3_338 -> m3_353  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_338 -> m3_355  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_338 -> m3_356  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_338 -> m3_357  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_423 -> m3_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_423 -> m3_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_250 -> m3_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m3_250 -> m3_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m3_250 -> m3_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m3_250 -> m3_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m3_250 -> m3_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m3_250 -> m3_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_504 -> m3_508  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m3_506 -> m3_508  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m3_501 -> m3_513  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_507 -> m3_513  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_510 -> m3_513  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_249 -> m3_894  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m3_249 -> m3_895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_249 -> m3_896  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m3_249 -> m3_897  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m3_249 -> m3_899  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_249 -> m3_901  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m3_249 -> m3_903  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m3_249 -> m3_905  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_249 -> m3_907  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_893 -> m3_906  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_893 -> m3_909  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_900 -> m3_909  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_902 -> m3_909  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_908 -> m3_910  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_818 -> m3_818  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<System.Reflection.ParameterInfo, object>", style=dashed];
m3_363 -> m3_575  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_363 -> m3_576  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_363 -> m3_577  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_363 -> m3_582  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_363 -> m3_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_363 -> m3_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_363 -> m3_601  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_363 -> m3_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_363 -> m3_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_363 -> m3_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_363 -> m3_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_363 -> m3_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_363 -> m3_623  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_363 -> m3_624  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_363 -> m3_625  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m3_574 -> m3_586  [color=darkseagreen4, key=1, label=rank, style=dashed];
m3_578 -> m3_587  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m3_579 -> m3_587  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m3_579 -> m3_595  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m3_583 -> m3_611  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m3_585 -> m3_602  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m3_600 -> m3_603  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m3_580 -> m3_603  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m3_581 -> m3_586  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m3_581 -> m3_590  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m3_581 -> m3_612  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m3_581 -> m3_615  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m3_581 -> m3_616  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m3_591 -> m3_598  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m3_584 -> m3_621  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_584 -> m3_622  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_592 -> m3_603  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m3_610 -> m3_612  [color=darkseagreen4, key=1, label=newList, style=dashed];
m3_618 -> m3_622  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_74 -> m3_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_132  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_74 -> m3_134  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_74 -> m3_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_142  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_74 -> m3_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_74 -> m3_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_131 -> m3_135  [color=darkseagreen4, key=1, label=s, style=dashed];
m3_131 -> m3_136  [color=darkseagreen4, key=1, label=s, style=dashed];
m3_803 -> m3_830  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_839  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_848  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_849  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_850  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_852  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m3_803 -> m3_854  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_859  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_803 -> m3_860  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_828 -> m3_861  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m3_832 -> m3_839  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_832 -> m3_850  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_832 -> m3_852  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_832 -> m3_854  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_833 -> m3_835  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_833 -> m3_838  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_833 -> m3_840  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_833 -> m3_841  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_837 -> m3_844  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m3_2 -> m3_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_2 -> m3_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_4 -> m3_12  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m3_4 -> m3_25  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m3_18 -> m3_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_18 -> m3_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_5 -> m3_9  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_5 -> m3_20  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_5 -> m3_23  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_5 -> m3_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_15 -> m3_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_15 -> m3_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_41 -> m3_913  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_41 -> m3_914  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_41 -> m3_917  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_923  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_925  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_927  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_41 -> m3_931  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_932  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_933  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_934  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_41 -> m3_935  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_41 -> m3_937  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_41 -> m3_938  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_943  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_944  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_41 -> m3_946  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_41 -> m3_947  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_41 -> m3_948  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_41 -> m3_949  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_912 -> m3_954  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_912 -> m3_957  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_912 -> m3_933  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m3_912 -> m3_947  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m3_915 -> m3_938  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m3_915 -> m3_947  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m3_919 -> m3_923  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_919 -> m3_925  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_919 -> m3_927  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_919 -> m3_932  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_919 -> m3_935  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_919 -> m3_937  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_920 -> m3_928  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_920 -> m3_931  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_920 -> m3_933  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_920 -> m3_934  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_930 -> m3_934  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m3_941 -> m3_945  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_247 -> m3_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_247 -> m3_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_292  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m3_247 -> m3_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_247 -> m3_312  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m3_255 -> m3_312  [color=darkseagreen4, key=1, label="out string", style=dashed];
m3_261 -> m3_276  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m3_261 -> m3_298  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m3_261 -> m3_303  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m3_266 -> m3_268  [color=darkseagreen4, key=1, label=reference, style=dashed];
m3_266 -> m3_273  [color=darkseagreen4, key=1, label=reference, style=dashed];
m3_278 -> m3_283  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m3_278 -> m3_287  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m3_278 -> m3_289  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m3_278 -> m3_291  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m3_300 -> m3_312  [color=darkseagreen4, key=1, label="out string", style=dashed];
m3_256 -> m3_312  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_260 -> m3_310  [color=darkseagreen4, key=1, label=specialProperty, style=dashed];
m3_271 -> m3_273  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_271 -> m3_312  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_285 -> m3_291  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m3_285 -> m3_292  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m3_285 -> m3_293  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m3_294 -> m3_312  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m3_295 -> m3_312  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_307 -> m3_312  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_253 -> m3_680  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_701  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m3_253 -> m3_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_704  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_253 -> m3_705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_253 -> m3_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_678 -> m3_680  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m3_678 -> m3_702  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m3_683 -> m3_692  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m3_683 -> m3_693  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m3_683 -> m3_700  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m3_687 -> m3_689  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_687 -> m3_692  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_687 -> m3_693  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m3_703 -> m3_705  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_703 -> m3_706  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_703 -> m3_707  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_703 -> m3_708  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_696 -> m3_699  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_421 -> m3_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_421 -> m3_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_421 -> m3_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_421 -> m3_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_421 -> m3_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_421 -> m3_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_421 -> m3_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_421 -> m3_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_421 -> m3_454  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m3_426 -> m3_448  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_426 -> m3_454  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_432 -> m3_436  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m3_432 -> m3_444  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m3_432 -> m3_446  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m3_437 -> m3_439  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_437 -> m3_448  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_437 -> m3_454  [color=darkseagreen4, key=1, label="out object", style=dashed];
m3_449 -> m3_454  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_452 -> m3_454  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m3_427 -> m3_442  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_427 -> m3_454  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_450 -> m3_454  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_429 -> m3_454  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_438 -> m3_454  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_441 -> m3_454  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_760 -> m3_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_760 -> m3_774  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_760 -> m3_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_760 -> m3_776  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_760 -> m3_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_765 -> m3_768  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m3_766 -> m3_811  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_766 -> m3_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_773 -> m3_775  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_773 -> m3_776  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_773 -> m3_781  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_773 -> m3_800  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_773 -> m3_801  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m3_767 -> m3_772  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m3_767 -> m3_777  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m3_769 -> m3_817  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_769 -> m3_772  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m3_778 -> m3_781  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_778 -> m3_782  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_779 -> m3_781  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_779 -> m3_782  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_783 -> m3_792  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m3_780 -> m3_780  [color=darkseagreen4, key=1, label=remainingPropertyValue, style=dashed];
m3_788 -> m3_791  [color=darkseagreen4, key=1, label=createdObjectCollectionWrapper, style=dashed];
m3_796 -> m3_799  [color=darkseagreen4, key=1, label=targetDictionary, style=dashed];
m3_799 -> m3_799  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m3_40 -> m3_529  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_40 -> m3_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m3_40 -> m3_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m3_40 -> m3_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_40 -> m3_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_528 -> m3_530  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m3_528 -> m3_531  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m3_528 -> m3_559  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m3_528 -> m3_568  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m3_528 -> m3_569  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m3_528 -> m3_570  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m3_532 -> m3_560  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m3_537 -> m3_551  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m3_537 -> m3_554  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m3_538 -> m3_544  [color=darkseagreen4, key=1, label=keyTypeCode, style=dashed];
m3_538 -> m3_546  [color=darkseagreen4, key=1, label=keyTypeCode, style=dashed];
m3_542 -> m3_544  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m3_542 -> m3_546  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m3_548 -> m3_559  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m3_545 -> m3_559  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m3_547 -> m3_559  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m3_564 -> m3_567  [color=darkseagreen4, key=1, label=finished, style=dashed];
m3_1000 -> m3_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_576  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_665  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_681  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_717  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_721  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_735  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_763  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_776  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_780  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_820  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_823  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_824  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_851  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_852  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_853  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_899  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_901  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_905  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_911  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_914  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_923  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_924  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_927  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_931  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_933  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_934  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_937  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_938  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_946  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_947  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_948  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_980  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_981  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_986  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_987  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m3_1000 -> m3_993  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m4_840 -> m4_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_841 -> m4_843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1870 -> m4_1872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1870 -> m4_1875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1870 -> m4_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_217 -> m4_219  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_220  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_221  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_222  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_223  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_224  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_225  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_226  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_227  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_1166 -> m4_1168  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1169  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1170  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1171  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1172  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1173  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1174  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1175  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1176  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1177  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1178  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1179  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_675 -> m4_679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_676 -> m4_678  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1545 -> m4_1547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_901  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_904  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_905  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_907  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_881 -> m4_892  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m4_881 -> m4_907  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m4_883 -> m4_886  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_886 -> m4_886  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_2425 -> m4_2429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2426 -> m4_2428  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1904 -> m4_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1908  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_137 -> m4_139  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_140  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_141  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_142  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_143  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_144  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_145  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_146  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_147  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_148  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_149  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_150  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_151  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_152  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_1593 -> m4_1595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2363 -> m4_2365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2503 -> m4_2505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2503 -> m4_2508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2505 -> m4_2507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1436 -> m4_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1437 -> m4_1439  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2643 -> m4_2646  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2664  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2647  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2667  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2649  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2650  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2652  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2670  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2654  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2655  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2657  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2673  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2658  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2676  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2659  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2679  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2646 -> m4_2663  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2647 -> m4_2666  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2652 -> m4_2669  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2657 -> m4_2672  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2658 -> m4_2675  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2659 -> m4_2678  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2355 -> m4_2359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2356 -> m4_2358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_833 -> m4_837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_834 -> m4_836  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1337 -> m4_1339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1913 -> m4_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_1995  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2753 -> m4_2758  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2755 -> m4_2758  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2755 -> m4_2755  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2751 -> m4_2755  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2743 -> m4_2759  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m4_2743 -> m4_2780  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m4_2746 -> m4_2748  [color=darkseagreen4, key=1, label=socket, style=dashed];
m4_2742 -> m4_2774  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m4_2742 -> m4_2745  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m4_2744 -> m4_2771  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2740 -> m4_2748  [color=darkseagreen4, key=1, label=port, style=dashed];
m4_697 -> m4_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_703 -> m4_707  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_700 -> m4_704  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_704 -> m4_704  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_1401 -> m4_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1402 -> m4_1404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_381 -> m4_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_873 -> m4_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_873 -> m4_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_875 -> m4_877  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1184 -> m4_1186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2041  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2042  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2045  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2046  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2047  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2048  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2049  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2050  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2051  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2052  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2053  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2054  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2055  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2056  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2057  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2058  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2059  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2060  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2331 -> m4_2335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2332 -> m4_2334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2701 -> m4_2703  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_85 -> m4_87  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_88  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_89  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_90  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_91  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_93  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_94  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_95  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_97  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_98  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_99  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_100  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_101  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_102  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_103  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_104  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_1015 -> m4_1031  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1017 -> m4_1034  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1019 -> m4_1037  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1021 -> m4_1040  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1025 -> m4_1043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1016 -> m4_1030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1018 -> m4_1033  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1020 -> m4_1036  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1022 -> m4_1039  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1026 -> m4_1042  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2447 -> m4_2449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2447 -> m4_2450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2447 -> m4_2453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2450 -> m4_2452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_323 -> m4_325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_323 -> m4_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_323 -> m4_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1316 -> m4_1318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1319  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1320  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1321  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1322  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1323  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1324  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1325  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1326  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1327  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1328  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1329  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1330  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1970 -> m4_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1971 -> m4_1973  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1365 -> m4_1367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_758 -> m4_761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_758 -> m4_763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_758 -> m4_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_758 -> m4_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_759 -> m4_762  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_762 -> m4_762  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1212 -> m4_1214  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1215  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1216  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1217  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1218  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1219  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1220  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1221  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1222  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1223  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1224  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1225  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1226  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1227  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1228  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1229  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1230  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1231  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1232  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1233  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1234  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1235  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1236  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1237  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1238  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1239  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1240  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1241  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1242  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1243  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1244  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1245  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1246  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1247  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1248  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1249  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1250  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1251  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1252  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1253  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1254  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1255  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1256  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1257  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1258  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1259  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1260  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1261  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1262  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1263  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1264  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1265  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1266  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1267  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1268  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1269  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1270  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1577 -> m4_1579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1587 -> m4_1587  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_29 -> m4_31  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_32  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_33  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_41  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_42  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_43  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_45  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_46  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_47  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_48  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_49  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_50  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_59  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_60  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_62  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_63  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_65  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_66  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_68  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_69  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_71  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_72  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_73  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_74  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_75  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_77  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_78  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_80  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_81  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_181  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_182  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_191  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_183  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_194  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_184  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_197  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_185  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_200  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_186  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_187  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_188  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_182 -> m4_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_183 -> m4_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_184 -> m4_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_185 -> m4_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1782 -> m4_1784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1782 -> m4_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_826 -> m4_830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_827 -> m4_829  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_292 -> m4_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_292 -> m4_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_292 -> m4_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_292 -> m4_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_635 -> m4_637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_259 -> m4_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1805 -> m4_1807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1805 -> m4_1808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1805 -> m4_1809  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2393 -> m4_2397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2394 -> m4_2396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1630 -> m4_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1631 -> m4_1633  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_587 -> m4_589  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_866 -> m4_868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_866 -> m4_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1055 -> m4_1068  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1057 -> m4_1059  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1057 -> m4_1071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1064 -> m4_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1056 -> m4_1067  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1059 -> m4_1070  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1065 -> m4_1073  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_440 -> m4_442  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_443  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_444  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_445  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_446  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_447  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_448  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_449  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_450  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_451  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_452  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_453  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_454  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_455  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_456  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_457  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_458  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_459  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_460  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_461  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_462  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_463  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_464  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_465  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_466  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_467  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_468  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_469  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_470  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_471  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_472  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_473  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_474  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_475  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_476  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_477  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_478  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_479  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_480  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_481  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_482  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_483  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_484  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_485  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_486  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_487  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_400 -> m4_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_401 -> m4_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1644 -> m4_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1645 -> m4_1647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1666 -> m4_1668  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1672 -> m4_1675  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_1637 -> m4_1641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1638 -> m4_1640  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1681 -> m4_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1681 -> m4_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1681 -> m4_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1682 -> m4_1685  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1685 -> m4_1685  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2512 -> m4_2514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2515 -> m4_2539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2527 -> m4_2542  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_231 -> m4_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_233 -> m4_242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_235 -> m4_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_232 -> m4_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_234 -> m4_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_236 -> m4_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1415 -> m4_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1416 -> m4_1418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1652 -> m4_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1657 -> m4_1660  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_1141 -> m4_1145  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m4_1139 -> m4_1146  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_1140 -> m4_1145  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m4_1142 -> m4_1146  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_1124 -> m4_1126  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1124 -> m4_1127  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1114 -> m4_1138  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1116  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1117  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1118  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1119  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1120  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1121  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1122  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1123  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1126  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1128  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1129  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1130  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1131  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1132  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1133  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1134  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1135  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1136  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1137  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1127 -> m4_1127  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2369 -> m4_2373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2370 -> m4_2372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2547 -> m4_2549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1703 -> m4_1705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1703 -> m4_1706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1703 -> m4_1707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1703 -> m4_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1623 -> m4_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1624 -> m4_1626  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1078 -> m4_1080  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1078 -> m4_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1082 -> m4_1084  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1082 -> m4_1085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1086 -> m4_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1086 -> m4_1089  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1090 -> m4_1092  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1090 -> m4_1093  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1094 -> m4_1106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1096 -> m4_1098  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1096 -> m4_1099  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1102 -> m4_1109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1095 -> m4_1105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1103 -> m4_1108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_821 -> m4_823  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_419 -> m4_421  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1198 -> m4_1200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2417 -> m4_2421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2418 -> m4_2420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_122 -> m4_124  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_122 -> m4_125  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_122 -> m4_126  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_164  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_165  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_166  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_167  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_174  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_168  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_169  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_170  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_167 -> m4_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_492 -> m4_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1955 -> m4_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1956 -> m4_1958  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_689 -> m4_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_690 -> m4_692  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_858 -> m4_863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_859 -> m4_862  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2433 -> m4_2437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2434 -> m4_2436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1836 -> m4_1838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1836 -> m4_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1836 -> m4_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_729 -> m4_731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_735 -> m4_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_738  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_738 -> m4_738  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_1472 -> m4_1474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_974 -> m4_976  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_977  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_978  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_979  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_980  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_981  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_982  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_984  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_985  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_986  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_987  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_988  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_989  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_2266 -> m4_2268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2266 -> m4_2269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_713 -> m4_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_713 -> m4_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_712 -> m4_716  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_720 -> m4_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_717 -> m4_721  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_721 -> m4_721  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_1962 -> m4_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1963 -> m4_1965  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2837 -> m4_2840  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m4_682 -> m4_686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_683 -> m4_685  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1999 -> m4_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1999 -> m4_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1999 -> m4_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1999 -> m4_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2005  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_926 -> m4_928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_934  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_935  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_936  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1813 -> m4_1815  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1813 -> m4_1816  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1813 -> m4_1817  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1797 -> m4_1801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1798 -> m4_1800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1945 -> m4_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1945 -> m4_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1945 -> m4_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1945 -> m4_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1947 -> m4_1951  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2377 -> m4_2381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2378 -> m4_2380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1879 -> m4_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1882 -> m4_1887  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_666 -> m4_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_666 -> m4_671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_666 -> m4_672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_667 -> m4_670  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_670 -> m4_670  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_848 -> m4_852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_849 -> m4_851  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1605 -> m4_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1605 -> m4_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1605 -> m4_1609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1605 -> m4_1610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1605 -> m4_1613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1610 -> m4_1612  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1388 -> m4_1390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2440 -> m4_2444  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_2243 -> m4_2245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2243 -> m4_2246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2243 -> m4_2247  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_812 -> m4_814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_811 -> m4_816  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_811 -> m4_817  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_2259 -> m4_2261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2259 -> m4_2262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1281 -> m4_1283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1821 -> m4_1823  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1821 -> m4_1824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1821 -> m4_1825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_601 -> m4_603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_600 -> m4_603  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_1375 -> m4_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1376 -> m4_1378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1828 -> m4_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1829 -> m4_1831  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2709 -> m4_2711  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2712  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2713  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2714  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2715  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2716  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2717  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2718  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2719  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2720  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2721  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2722  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2726  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2727  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2728  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2729  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2730  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2731  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2732  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2733  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2734  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2735  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2736  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2737  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_941 -> m4_943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_940 -> m4_947  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m4_303 -> m4_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_798 -> m4_800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_795 -> m4_804  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_795 -> m4_805  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_795 -> m4_802  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_796 -> m4_801  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_796 -> m4_803  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_803 -> m4_803  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2690 -> m4_2696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2683 -> m4_2687  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2683 -> m4_2685  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2683 -> m4_2686  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2 -> m4_4  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_5  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_6  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_7  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_8  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_9  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_10  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_11  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_12  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_13  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_14  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_15  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_16  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_17  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_18  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_19  [color=green, key=1, label=reader, style=dashed];
m4_2777 -> m4_2779  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m4_2775 -> m4_2778  [color=darkseagreen4, key=1, label=serverSocket, style=dashed];
m4_1692 -> m4_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1692 -> m4_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1692 -> m4_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1692 -> m4_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1693 -> m4_1696  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1696 -> m4_1696  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2096 -> m4_2098  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2099  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2100  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2103  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2104  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2107  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2114  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2116  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2118  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2120  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2122  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2126  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2127  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1429 -> m4_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1430 -> m4_1432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2461 -> m4_2463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2457 -> m4_2459  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_1860 -> m4_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1860 -> m4_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1860 -> m4_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1860 -> m4_1864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1862 -> m4_1866  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1935 -> m4_1937  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1935 -> m4_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1935 -> m4_1938  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1935 -> m4_1939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1937 -> m4_1941  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1357 -> m4_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1357 -> m4_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1359 -> m4_1361  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2385 -> m4_2389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2386 -> m4_2388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1529 -> m4_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_431 -> m4_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_432 -> m4_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_617 -> m4_621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_617 -> m4_622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_617 -> m4_624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_617 -> m4_625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_619 -> m4_622  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_619 -> m4_623  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_623 -> m4_623  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_607 -> m4_620  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m4_607 -> m4_612  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m4_609 -> m4_615  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_609 -> m4_613  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_611 -> m4_613  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_611 -> m4_614  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_614 -> m4_614  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1503 -> m4_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1503 -> m4_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1503 -> m4_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1503 -> m4_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1503 -> m4_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1508 -> m4_1510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1394 -> m4_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1395 -> m4_1397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_361 -> m4_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_366 -> m4_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_360 -> m4_362  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_360 -> m4_364  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_365 -> m4_367  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_365 -> m4_369  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_108 -> m4_110  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_112 -> m4_114  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_1459 -> m4_1461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_593 -> m4_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_594 -> m4_596  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1789 -> m4_1793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1790 -> m4_1792  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2588 -> m4_2590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2611  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2066  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2067  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2068  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2069  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2070  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2072  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2073  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2075  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2076  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2077  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2078  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2079  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2080  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2082  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2083  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2084  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2086  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2087  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2089  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2090  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2091  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2092  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1382 -> m4_1384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1423 -> m4_1425  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_1423 -> m4_1426  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_2020 -> m4_2022  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2023  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2032  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2024  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2035  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2025  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2026  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2022 -> m4_2028  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2023 -> m4_2031  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2024 -> m4_2034  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1977 -> m4_1979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1977 -> m4_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1977 -> m4_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1977 -> m4_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1977 -> m4_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1980 -> m4_1984  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1712 -> m4_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1712 -> m4_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1712 -> m4_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1712 -> m4_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1298 -> m4_1300  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1301  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1302  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1303  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1304  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1305  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1306  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1307  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1308  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1309  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1310  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1311  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1312  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_957 -> m4_959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_956 -> m4_965  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m4_745 -> m4_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_751 -> m4_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_748 -> m4_754  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_754 -> m4_754  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_1370 -> m4_1372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2339 -> m4_2343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2340 -> m4_2342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1891 -> m4_1893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1894 -> m4_1899  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2401 -> m4_2405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2402 -> m4_2404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1721 -> m4_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2011  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2012  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2013  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2014  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2012 -> m4_2016  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2251 -> m4_2255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2252 -> m4_2254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2409 -> m4_2413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2410 -> m4_2412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2135 -> m4_2137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2138  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2208  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2209  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2214  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2215  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1570 -> m4_1570  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_130 -> m4_132  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_130 -> m4_133  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_206  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_207  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_208  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_209  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_211  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_212  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_213  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2289 -> m4_2291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1408 -> m4_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1409 -> m4_1411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1489 -> m4_1491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1616 -> m4_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1617 -> m4_1619  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2347 -> m4_2351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2348 -> m4_2350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2221 -> m4_2223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2225  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2874 -> m4_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2874 -> m4_242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2874 -> m4_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2875 -> m4_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2876 -> m4_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2878 -> m4_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2879 -> m4_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2880 -> m4_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2882 -> m4_679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2883 -> m4_686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2884 -> m4_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2896 -> m4_1071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2896 -> m4_1068  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2896 -> m4_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2897 -> m4_1106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2897 -> m4_1109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2898 -> m4_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2899 -> m4_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2909 -> m4_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2910 -> m4_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2911 -> m4_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2912 -> m4_1641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2913 -> m4_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2914 -> m4_1793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2915 -> m4_1801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2916 -> m4_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2918 -> m4_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2920 -> m4_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2931 -> m4_2255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2946 -> m4_2508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2947 -> m4_2540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2947 -> m4_2543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2948 -> m4_2664  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2667  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2670  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2673  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2676  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2679  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2877 -> m4_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2919 -> m4_1900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2928 -> m4_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2929 -> m4_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2932 -> m4_2335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2934 -> m4_2351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2937 -> m4_2381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2943 -> m4_2429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2944 -> m4_2437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2872 -> m4_174  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2873 -> m4_191  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2873 -> m4_194  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2873 -> m4_197  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2873 -> m4_200  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2881 -> m4_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2889 -> m4_830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2890 -> m4_837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2891 -> m4_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2892 -> m4_852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2893 -> m4_863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2894 -> m4_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1031  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1034  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1037  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1040  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2900 -> m4_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2901 -> m4_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2902 -> m4_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2903 -> m4_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2904 -> m4_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2905 -> m4_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2906 -> m4_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2907 -> m4_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2908 -> m4_1613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2917 -> m4_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2921 -> m4_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2922 -> m4_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2923 -> m4_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2924 -> m4_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2925 -> m4_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2926 -> m4_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2927 -> m4_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2930 -> m4_2029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2930 -> m4_2032  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2930 -> m4_2035  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2933 -> m4_2343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2935 -> m4_2359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2936 -> m4_2373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2938 -> m4_2389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2939 -> m4_2397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2940 -> m4_2405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2941 -> m4_2413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2942 -> m4_2421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2945 -> m4_2453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2955 -> m4_2838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m4_2955 -> m4_2840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m4_2953 -> m4_2780  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m4_2951 -> m4_2774  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m5_805 -> m5_809  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_805 -> m5_810  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_808 -> m5_811  [color=darkseagreen4, key=1, label=output, style=dashed];
m5_251 -> m5_263  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_252 -> m5_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_256 -> m5_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_257 -> m5_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3613 -> m5_3616  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3613 -> m5_3619  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3616 -> m5_3618  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3615 -> m5_3619  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_3206 -> m5_3209  [color=darkseagreen4, key=1, label=ng, style=dashed];
m5_3206 -> m5_3213  [color=darkseagreen4, key=1, label=ng, style=dashed];
m5_3207 -> m5_3209  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_3207 -> m5_3210  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_3207 -> m5_3213  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_3207 -> m5_3214  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_3208 -> m5_3213  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_846 -> m5_848  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1776 -> m5_1778  [color=darkseagreen4, key=1, label=r, style=dashed];
m5_1776 -> m5_1779  [color=darkseagreen4, key=1, label=r, style=dashed];
m5_2079 -> m5_2079  [color=darkseagreen4, key=1, label=pair, style=dashed];
m5_2471 -> m5_2473  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_770 -> m5_776  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_770 -> m5_777  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_770 -> m5_778  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_770 -> m5_779  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_770 -> m5_780  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_775 -> m5_777  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m5_775 -> m5_778  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m5_775 -> m5_779  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m5_775 -> m5_780  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m5_775 -> m5_781  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m5_775 -> m5_782  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m5_775 -> m5_783  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m5_775 -> m5_784  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m5_1372 -> m5_1377  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m5_1372 -> m5_1378  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m5_1376 -> m5_1378  [color=darkseagreen4, key=1, label=m2, style=dashed];
m5_1814 -> m5_1816  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_1814 -> m5_1817  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_1814 -> m5_1818  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_3098 -> m5_3101  [color=darkseagreen4, key=1, label=d1, style=dashed];
m5_3098 -> m5_3102  [color=darkseagreen4, key=1, label=d1, style=dashed];
m5_3100 -> m5_3102  [color=darkseagreen4, key=1, label=d2, style=dashed];
m5_1527 -> m5_1536  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1528 -> m5_1530  [color=darkseagreen4, key=1, label=aa, style=dashed];
m5_1528 -> m5_1531  [color=darkseagreen4, key=1, label=aa, style=dashed];
m5_1528 -> m5_1532  [color=darkseagreen4, key=1, label=aa, style=dashed];
m5_1528 -> m5_1533  [color=darkseagreen4, key=1, label=aa, style=dashed];
m5_1528 -> m5_1534  [color=darkseagreen4, key=1, label=aa, style=dashed];
m5_1794 -> m5_1798  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1795 -> m5_1797  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2791 -> m5_2793  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_2791 -> m5_2794  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_3600 -> m5_3602  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_2485 -> m5_2487  [color=darkseagreen4, key=1, label=reference, style=dashed];
m5_2485 -> m5_2488  [color=darkseagreen4, key=1, label=reference, style=dashed];
m5_2485 -> m5_2492  [color=darkseagreen4, key=1, label=reference, style=dashed];
m5_2489 -> m5_2491  [color=darkseagreen4, key=1, label=child, style=dashed];
m5_2489 -> m5_2492  [color=darkseagreen4, key=1, label=child, style=dashed];
m5_2495 -> m5_2497  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_2495 -> m5_2498  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_371 -> m5_373  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2528 -> m5_2530  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_2064 -> m5_2066  [color=darkseagreen4, key=1, label=dic, style=dashed];
m5_2064 -> m5_2067  [color=darkseagreen4, key=1, label=dic, style=dashed];
m5_2064 -> m5_2068  [color=darkseagreen4, key=1, label=dic, style=dashed];
m5_3030 -> m5_3033  [color=darkseagreen4, key=1, label=uri, style=dashed];
m5_3112 -> m5_3115  [color=darkseagreen4, key=1, label=d1, style=dashed];
m5_3112 -> m5_3116  [color=darkseagreen4, key=1, label=d1, style=dashed];
m5_3114 -> m5_3116  [color=darkseagreen4, key=1, label=d2, style=dashed];
m5_4236 -> m5_4238  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3808 -> m5_3810  [color=darkseagreen4, key=1, label=tuple2, style=dashed];
m5_349 -> m5_351  [color=darkseagreen4, key=1, label=otc, style=dashed];
m5_349 -> m5_352  [color=darkseagreen4, key=1, label=otc, style=dashed];
m5_349 -> m5_353  [color=darkseagreen4, key=1, label=otc, style=dashed];
m5_349 -> m5_354  [color=darkseagreen4, key=1, label=otc, style=dashed];
m5_2600 -> m5_2602  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m5_3839 -> m5_3842  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3839 -> m5_3845  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3842 -> m5_3844  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_646 -> m5_649  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_650  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_652  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_655  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_657  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_659  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_662  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_663  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_664  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_666  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_668  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_670  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_672  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_674  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_676  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_678  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_680  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_682  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_684  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_686  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_688  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_690  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_692  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_694  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_696  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_699  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_701  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_704  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_706  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_707  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_709  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_711  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_646 -> m5_713  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m5_647 -> m5_649  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m5_647 -> m5_652  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m5_653 -> m5_717  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_660 -> m5_662  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m5_697 -> m5_699  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m5_702 -> m5_704  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m5_4369 -> m5_4372  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m5_2133 -> m5_2135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_2133 -> m5_2136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_2137 -> m5_2137  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_1490 -> m5_1492  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1490 -> m5_1493  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3487 -> m5_3489  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_3487 -> m5_3490  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_1849 -> m5_1853  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1850 -> m5_1852  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_839 -> m5_841  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_2513 -> m5_2515  [color=darkseagreen4, key=1, label=dic, style=dashed];
m5_2389 -> m5_2396  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m5_2389 -> m5_2397  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m5_2392 -> m5_2394  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_2395 -> m5_2397  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m5_2395 -> m5_2398  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m5_1046 -> m5_1048  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_1404 -> m5_1406  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_1911 -> m5_1913  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3406 -> m5_3408  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_3406 -> m5_3409  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_3412 -> m5_3415  [color=darkseagreen4, key=1, label=a, style=dashed];
m5_3133 -> m5_3135  [color=darkseagreen4, key=1, label=value, style=dashed];
m5_2275 -> m5_2284  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m5_2277 -> m5_2280  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m5_2281 -> m5_2283  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_2281 -> m5_2284  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_2281 -> m5_2285  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_2281 -> m5_2286  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_2281 -> m5_2287  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_1483 -> m5_1485  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_1654 -> m5_1656  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1964 -> m5_1966  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m5_1964 -> m5_1967  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m5_1964 -> m5_1968  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m5_2237 -> m5_2239  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2240  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2241  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2242  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2243  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2244  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2245  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2246  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2247  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2248  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2249  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2250  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2251  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2252  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2253  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2254  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_2237 -> m5_2255  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_1465 -> m5_1468  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m5_1471 -> m5_1474  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m5_90 -> m5_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3793 -> m5_3797  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_3795 -> m5_3797  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_3795 -> m5_3798  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_3795 -> m5_3799  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_3795 -> m5_3800  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_1828 -> m5_1832  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1829 -> m5_1831  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2892 -> m5_2894  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2892 -> m5_2898  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2892 -> m5_2899  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2897 -> m5_2899  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2897 -> m5_2900  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2897 -> m5_2901  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3968 -> m5_3971  [color=darkseagreen4, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m5_3968 -> m5_3975  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_3978 -> m5_3981  [color=darkseagreen4, key=1, label=numArray, style=dashed];
m5_3978 -> m5_3984  [color=darkseagreen4, key=1, label=numArray, style=dashed];
m5_3978 -> m5_3985  [color=darkseagreen4, key=1, label=numArray, style=dashed];
m5_3980 -> m5_3983  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_3983 -> m5_3983  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_2332 -> m5_2334  [color=darkseagreen4, key=1, label=myA, style=dashed];
m5_2332 -> m5_2335  [color=darkseagreen4, key=1, label=myA, style=dashed];
m5_2332 -> m5_2336  [color=darkseagreen4, key=1, label=myA, style=dashed];
m5_2332 -> m5_2337  [color=darkseagreen4, key=1, label=myA, style=dashed];
m5_2332 -> m5_2338  [color=darkseagreen4, key=1, label=myA, style=dashed];
m5_2332 -> m5_2339  [color=darkseagreen4, key=1, label=myA, style=dashed];
m5_2332 -> m5_2340  [color=darkseagreen4, key=1, label=myA, style=dashed];
m5_2341 -> m5_2343  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2344  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2345  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2346  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2347  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2348  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2349  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2350  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2351  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2352  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2353  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2354  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2355  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2356  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2357  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2358  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_2341 -> m5_2359  [color=darkseagreen4, key=1, label=myB, style=dashed];
m5_788 -> m5_790  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1584 -> m5_1586  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1584 -> m5_1587  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1584 -> m5_1588  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1584 -> m5_1589  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1229 -> m5_1231  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_167 -> m5_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_4025 -> m5_4027  [color=darkseagreen4, key=1, label=john, style=dashed];
m5_4025 -> m5_4028  [color=darkseagreen4, key=1, label=john, style=dashed];
m5_4026 -> m5_4028  [color=darkseagreen4, key=1, label=jane, style=dashed];
m5_1174 -> m5_1176  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m5_1174 -> m5_1177  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m5_1174 -> m5_1178  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m5_1174 -> m5_1179  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m5_1174 -> m5_1180  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m5_1174 -> m5_1181  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m5_2506 -> m5_2508  [color=darkseagreen4, key=1, label=cc, style=dashed];
m5_2506 -> m5_2509  [color=darkseagreen4, key=1, label=cc, style=dashed];
m5_3667 -> m5_3669  [color=darkseagreen4, key=1, label=uris, style=dashed];
m5_3672 -> m5_3674  [color=darkseagreen4, key=1, label=i1, style=dashed];
m5_3675 -> m5_3677  [color=darkseagreen4, key=1, label=uri, style=dashed];
m5_156 -> m5_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_213 -> m5_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_214 -> m5_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_215 -> m5_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_216 -> m5_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_217 -> m5_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_218 -> m5_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_219 -> m5_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2969 -> m5_2972  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m5_2404 -> m5_2412  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m5_2408 -> m5_2410  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_2689 -> m5_2691  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_2689 -> m5_2692  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_3286 -> m5_3288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2089 -> m5_2091  [color=darkseagreen4, key=1, label=cISO, style=dashed];
m5_3765 -> m5_3765  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m5_3766 -> m5_3766  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m5_290 -> m5_293  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_1646 -> m5_1648  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1646 -> m5_1649  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1646 -> m5_1650  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_71 -> m5_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3547 -> m5_3552  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_3549 -> m5_3552  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m5_3549 -> m5_3553  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m5_3550 -> m5_3552  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_3229 -> m5_3231  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_408 -> m5_411  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_408 -> m5_412  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_408 -> m5_413  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_410 -> m5_412  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_410 -> m5_413  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_3583 -> m5_3591  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3583 -> m5_3594  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3586 -> m5_3588  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_3591 -> m5_3593  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3590 -> m5_3594  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_3298 -> m5_3300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2024 -> m5_2026  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2024 -> m5_2027  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2024 -> m5_2028  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2024 -> m5_2029  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2024 -> m5_2030  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2024 -> m5_2031  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2024 -> m5_2032  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2024 -> m5_2033  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_460 -> m5_467  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_461 -> m5_463  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_461 -> m5_464  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_461 -> m5_465  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_461 -> m5_466  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_461 -> m5_467  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_468 -> m5_471  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_469 -> m5_471  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_472 -> m5_476  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_473 -> m5_475  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_473 -> m5_476  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1856 -> m5_1860  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1857 -> m5_1859  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_991 -> m5_993  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_991 -> m5_994  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_991 -> m5_995  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_991 -> m5_996  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_991 -> m5_997  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_4068 -> m5_4071  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_4068 -> m5_4073  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_4068 -> m5_4075  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_2630 -> m5_2640  [color=darkseagreen4, key=1, label=expando, style=dashed];
m5_2630 -> m5_2642  [color=darkseagreen4, key=1, label=expando, style=dashed];
m5_2630 -> m5_2646  [color=darkseagreen4, key=1, label=expando, style=dashed];
m5_2630 -> m5_2648  [color=darkseagreen4, key=1, label=expando, style=dashed];
m5_2638 -> m5_2640  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m5_2638 -> m5_2641  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m5_2638 -> m5_2642  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m5_2638 -> m5_2643  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m5_2644 -> m5_2646  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_2644 -> m5_2647  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_2644 -> m5_2648  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_65 -> m5_67  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_67 -> m5_67  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_3629 -> m5_3631  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_4194 -> m5_4200  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_1947 -> m5_1951  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m5_1951 -> m5_1951  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m5_1951 -> m5_1953  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m5_1953 -> m5_1953  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m5_3184 -> m5_3186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3957 -> m5_4489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", style=dashed];
m5_3958 -> m5_4489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", style=dashed];
m5_4212 -> m5_4218  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_1106 -> m5_1110  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1107 -> m5_1109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3527 -> m5_3529  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_3527 -> m5_3530  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_831 -> m5_833  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_2982 -> m5_2986  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2982 -> m5_2987  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2982 -> m5_2988  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2982 -> m5_2989  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2982 -> m5_2990  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2985 -> m5_2987  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2985 -> m5_2988  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2985 -> m5_2989  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2985 -> m5_2990  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_4016 -> m5_4018  [color=darkseagreen4, key=1, label=john, style=dashed];
m5_4016 -> m5_4019  [color=darkseagreen4, key=1, label=john, style=dashed];
m5_4017 -> m5_4019  [color=darkseagreen4, key=1, label=jane, style=dashed];
m5_1835 -> m5_1839  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1836 -> m5_1838  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3732 -> m5_3734  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_4317 -> m5_4321  [color=darkseagreen4, key=1, label=address, style=dashed];
m5_4317 -> m5_4322  [color=darkseagreen4, key=1, label=address, style=dashed];
m5_573 -> m5_576  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_578  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_580  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_582  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_585  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_586  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_587  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_589  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_591  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_593  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_595  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_597  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_599  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_601  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_603  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_605  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_607  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_609  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_611  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_613  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_615  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_617  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_619  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_622  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_623  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_625  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_627  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_630  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_632  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_633  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_635  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_637  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_573 -> m5_639  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_574 -> m5_576  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m5_583 -> m5_585  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m5_620 -> m5_622  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m5_620 -> m5_623  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m5_620 -> m5_643  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m5_620 -> m5_625  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m5_628 -> m5_630  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m5_2710 -> m5_2712  [color=darkseagreen4, key=1, label=meh, style=dashed];
m5_1863 -> m5_1867  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1864 -> m5_1866  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_417 -> m5_420  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_417 -> m5_421  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_417 -> m5_422  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_419 -> m5_421  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_419 -> m5_422  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_3912 -> m5_3914  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_1300 -> m5_1304  [color=darkseagreen4, key=1, label=ts, style=dashed];
m5_722 -> m5_726  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m5_726 -> m5_726  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m5_727 -> m5_727  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m5_3239 -> m5_3241  [color=darkseagreen4, key=1, label=dict, style=dashed];
m5_3696 -> m5_3696  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_3697 -> m5_3697  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_1003 -> m5_1005  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_1003 -> m5_1006  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_1504 -> m5_1506  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3352 -> m5_3357  [color=darkseagreen4, key=1, label=person, style=dashed];
m5_1728 -> m5_1730  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_1728 -> m5_1731  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_1728 -> m5_1732  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_1728 -> m5_1733  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_1728 -> m5_1734  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m5_974 -> m5_977  [color=darkseagreen4, key=1, label=store, style=dashed];
m5_974 -> m5_978  [color=darkseagreen4, key=1, label=store, style=dashed];
m5_975 -> m5_979  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m5_976 -> m5_978  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m5_1234 -> m5_1236  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1234 -> m5_1237  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1234 -> m5_1238  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1240 -> m5_1242  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m5_1240 -> m5_1243  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m5_1240 -> m5_1244  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m5_1240 -> m5_1245  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m5_1240 -> m5_1246  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m5_1240 -> m5_1247  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m5_2295 -> m5_2304  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m5_2297 -> m5_2300  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m5_2301 -> m5_2303  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_2301 -> m5_2304  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_2301 -> m5_2305  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_2301 -> m5_2306  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_2301 -> m5_2307  [color=darkseagreen4, key=1, label=o2, style=dashed];
m5_1381 -> m5_1386  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m5_1381 -> m5_1387  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m5_1385 -> m5_1387  [color=darkseagreen4, key=1, label=m2, style=dashed];
m5_1768 -> m5_1770  [color=darkseagreen4, key=1, label=content, style=dashed];
m5_1768 -> m5_1771  [color=darkseagreen4, key=1, label=content, style=dashed];
m5_1768 -> m5_1772  [color=darkseagreen4, key=1, label=content, style=dashed];
m5_2474 -> m5_2476  [color=darkseagreen4, key=1, label=reference, style=dashed];
m5_2474 -> m5_2480  [color=darkseagreen4, key=1, label=reference, style=dashed];
m5_2477 -> m5_2479  [color=darkseagreen4, key=1, label=child, style=dashed];
m5_2477 -> m5_2480  [color=darkseagreen4, key=1, label=child, style=dashed];
m5_3633 -> m5_3638  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_3635 -> m5_3637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_3635 -> m5_3638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_3747 -> m5_3743  [color=darkseagreen4, key=1, label=obj, style=dashed];
m5_4139 -> m5_4143  [color=darkseagreen4, key=1, label=originalUri, style=dashed];
m5_3833 -> m5_3835  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1917 -> m5_1919  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_365 -> m5_367  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_365 -> m5_368  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_1996 -> m5_1998  [color=darkseagreen4, key=1, label=results, style=dashed];
m5_1997 -> m5_2000  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m5_1997 -> m5_2001  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m5_1997 -> m5_2002  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m5_1997 -> m5_2003  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m5_860 -> m5_863  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m5_860 -> m5_869  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m5_861 -> m5_863  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_861 -> m5_864  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_864 -> m5_864  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_866 -> m5_869  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m5_867 -> m5_871  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_868 -> m5_870  [color=darkseagreen4, key=1, label=streamWriter, style=dashed];
m5_872 -> m5_874  [color=darkseagreen4, key=1, label=stopWatch, style=dashed];
m5_1546 -> m5_1550  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2314 -> m5_2316  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m5_2314 -> m5_2317  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m5_2314 -> m5_2318  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m5_2314 -> m5_2319  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m5_3308 -> m5_3310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3879 -> m5_3881  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3879 -> m5_3882  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3879 -> m5_3883  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3879 -> m5_3884  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_1262 -> m5_1264  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_1262 -> m5_1265  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_1137 -> m5_1140  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m5_1138 -> m5_1140  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_1138 -> m5_1141  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_1143 -> m5_1145  [color=darkseagreen4, key=1, label=expected, style=dashed];
m5_3036 -> m5_3042  [color=darkseagreen4, key=1, label=test, style=dashed];
m5_3037 -> m5_3042  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_3047 -> m5_3049  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m5_3041 -> m5_3043  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_280 -> m5_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3425 -> m5_3436  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3425 -> m5_3429  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3425 -> m5_3430  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3425 -> m5_3431  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3425 -> m5_3432  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3425 -> m5_3433  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3426 -> m5_3436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m5_1367 -> m5_1369  [color=darkseagreen4, key=1, label=m2, style=dashed];
m5_3862 -> m5_3864  [color=darkseagreen4, key=1, label=floats, style=dashed];
m5_3862 -> m5_3865  [color=darkseagreen4, key=1, label=floats, style=dashed];
m5_3866 -> m5_3868  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m5_3866 -> m5_3869  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m5_1842 -> m5_1846  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1843 -> m5_1845  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3340 -> m5_3342  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3340 -> m5_3343  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3340 -> m5_3344  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3345 -> m5_3347  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3345 -> m5_3348  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3345 -> m5_3349  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_376 -> m5_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_376 -> m5_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_378 -> m5_381  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_380 -> m5_382  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_380 -> m5_383  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_4275 -> m5_4277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1343 -> m5_1348  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m5_1343 -> m5_1349  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m5_1347 -> m5_1349  [color=darkseagreen4, key=1, label=m2, style=dashed];
m5_2427 -> m5_2430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_2427 -> m5_2431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_2428 -> m5_2430  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_1821 -> m5_1825  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1822 -> m5_1824  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3441 -> m5_3451  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3441 -> m5_3445  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3441 -> m5_3446  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3441 -> m5_3447  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3441 -> m5_3448  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3442 -> m5_3451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m5_3537 -> m5_3539  [color=darkseagreen4, key=1, label=testObj, style=dashed];
m5_3538 -> m5_3540  [color=darkseagreen4, key=1, label=objDeserialized, style=dashed];
m5_2777 -> m5_2779  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2777 -> m5_2780  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3178 -> m5_3181  [color=darkseagreen4, key=1, label=w, style=dashed];
m5_3952 -> m5_3954  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_1354 -> m5_1359  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m5_1354 -> m5_1360  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m5_1358 -> m5_1360  [color=darkseagreen4, key=1, label=m2, style=dashed];
m5_3264 -> m5_3267  [color=darkseagreen4, key=1, label=dict, style=dashed];
m5_173 -> m5_175  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_916 -> m5_949  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_947 -> m5_949  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_952 -> m5_967  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_952 -> m5_955  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m5_952 -> m5_956  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m5_954 -> m5_970  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_954 -> m5_957  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m5_954 -> m5_958  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m5_957 -> m5_957  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_4203 -> m5_4209  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_3455 -> m5_3466  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3455 -> m5_3459  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3455 -> m5_3460  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3455 -> m5_3461  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3455 -> m5_3462  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_3456 -> m5_3466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m5_1207 -> m5_1209  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1207 -> m5_1210  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1207 -> m5_1211  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1207 -> m5_1212  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1207 -> m5_1213  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1162 -> m5_1164  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_1162 -> m5_1168  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_178 -> m5_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_4034 -> m5_4041  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m5_4034 -> m5_4047  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m5_2007 -> m5_2016  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m5_1410 -> m5_1412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2072 -> m5_2074  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_435 -> m5_438  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_435 -> m5_439  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_435 -> m5_440  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_437 -> m5_439  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_437 -> m5_440  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_84 -> m5_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_489 -> m5_492  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_493  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_495  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_498  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_500  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_502  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_505  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_506  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_507  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_509  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_511  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_513  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_515  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_517  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_519  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_521  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_523  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_525  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_527  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_529  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_531  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_533  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_535  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_537  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_539  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_542  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_544  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_547  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_549  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_550  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_552  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_554  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_489 -> m5_556  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_490 -> m5_492  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m5_490 -> m5_495  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m5_496 -> m5_567  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_503 -> m5_505  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m5_540 -> m5_542  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m5_545 -> m5_547  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m5_2742 -> m5_2746  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_2744 -> m5_2746  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m5_2715 -> m5_4463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m5_2763 -> m5_2765  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_4282 -> m5_4284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1115 -> m5_1118  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m5_1116 -> m5_1118  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m5_141 -> m5_144  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_141 -> m5_145  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_1010 -> m5_1021  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m5_1011 -> m5_1016  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m5_1014 -> m5_1016  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_1713 -> m5_1715  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1713 -> m5_1716  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1713 -> m5_1717  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1713 -> m5_1718  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1713 -> m5_1719  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1713 -> m5_1720  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1713 -> m5_1721  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1713 -> m5_1722  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1713 -> m5_1723  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_4253 -> m5_4255  [color=darkseagreen4, key=1, label=clonedObject, style=dashed];
m5_2443 -> m5_2446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_2443 -> m5_2447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_2444 -> m5_2446  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_4350 -> m5_4353  [color=darkseagreen4, key=1, label=encodingName, style=dashed];
m5_2814 -> m5_2816  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m5_2814 -> m5_2817  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m5_2768 -> m5_2770  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_2768 -> m5_2771  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3292 -> m5_3294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3555 -> m5_3558  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_3556 -> m5_3558  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_1274 -> m5_1276  [color=darkseagreen4, key=1, label=indented, style=dashed];
m5_3191 -> m5_3193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2797 -> m5_2799  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2194 -> m5_2196  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m5_46 -> m5_48  [color=darkseagreen4, key=1, label=enumerableObject, style=dashed];
m5_46 -> m5_49  [color=darkseagreen4, key=1, label=enumerableObject, style=dashed];
m5_2844 -> m5_2847  [color=darkseagreen4, key=1, label=cc, style=dashed];
m5_2845 -> m5_2847  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_4166 -> m5_4172  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_4166 -> m5_4177  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_4174 -> m5_4176  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_4174 -> m5_4177  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_4179 -> m5_4181  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_4179 -> m5_4182  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_4301 -> m5_4305  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m5_4302 -> m5_4304  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1929 -> m5_1931  [color=darkseagreen4, key=1, label=strings, style=dashed];
m5_1929 -> m5_1932  [color=darkseagreen4, key=1, label=strings, style=dashed];
m5_1941 -> m5_1943  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3471 -> m5_3473  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3471 -> m5_3474  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3471 -> m5_3475  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3325 -> m5_3327  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3325 -> m5_3328  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3325 -> m5_3329  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3330 -> m5_3332  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3330 -> m5_3333  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3330 -> m5_3334  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_1311 -> m5_1313  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_132 -> m5_136  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m5_132 -> m5_137  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m5_132 -> m5_138  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m5_132 -> m5_139  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m5_135 -> m5_137  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m5_135 -> m5_138  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m5_135 -> m5_139  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m5_1884 -> m5_1888  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1885 -> m5_1887  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3505 -> m5_3507  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_3505 -> m5_3508  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_1783 -> m5_1785  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_1783 -> m5_1786  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_4146 -> m5_4152  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_4146 -> m5_4157  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_4154 -> m5_4156  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_4154 -> m5_4157  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_4159 -> m5_4161  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_4159 -> m5_4162  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_1449 -> m5_1451  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m5_1449 -> m5_1452  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m5_1449 -> m5_1453  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m5_1449 -> m5_1454  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m5_1449 -> m5_1455  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m5_1449 -> m5_1456  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m5_1923 -> m5_1925  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3815 -> m5_3818  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_191 -> m5_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1870 -> m5_1874  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1871 -> m5_1873  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_797 -> m5_799  [color=darkseagreen4, key=1, label=r2, style=dashed];
m5_1679 -> m5_1681  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m5_1679 -> m5_1682  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m5_1560 -> m5_1563  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m5_1561 -> m5_1564  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m5_1562 -> m5_1565  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m5_1024 -> m5_1030  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m5_1029 -> m5_1031  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m5_1029 -> m5_1032  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m5_1029 -> m5_1033  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m5_1029 -> m5_1034  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m5_150 -> m5_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3376 -> m5_3379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_2591 -> m5_2591  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m5_113 -> m5_115  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_116  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_117  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_118  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_119  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_120  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_121  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_122  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_123  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_124  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_125  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_126  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_127  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_128  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_113 -> m5_129  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_115 -> m5_115  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_116 -> m5_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_117 -> m5_117  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_118 -> m5_118  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_119 -> m5_119  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_120 -> m5_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_121 -> m5_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_122 -> m5_122  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_123 -> m5_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_124 -> m5_124  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_125 -> m5_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_126 -> m5_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_127 -> m5_127  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_128 -> m5_128  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_129 -> m5_129  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_1596 -> m5_1598  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1599 -> m5_1601  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_3105 -> m5_3108  [color=darkseagreen4, key=1, label=d1, style=dashed];
m5_3105 -> m5_3109  [color=darkseagreen4, key=1, label=d1, style=dashed];
m5_3107 -> m5_3109  [color=darkseagreen4, key=1, label=d2, style=dashed];
m5_3825 -> m5_3827  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_819 -> m5_821  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_2616 -> m5_2618  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m5_1439 -> m5_1441  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m5_1439 -> m5_1442  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m5_1319 -> m5_1321  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_1319 -> m5_1322  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_96 -> m5_98  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_99  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_100  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_101  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_102  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_103  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_104  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_105  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_106  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_107  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_108  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_109  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_96 -> m5_110  [color=darkseagreen4, key=1, label=l, style=dashed];
m5_98 -> m5_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_99 -> m5_99  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_100 -> m5_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_101 -> m5_101  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_102 -> m5_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_103 -> m5_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_104 -> m5_104  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_105 -> m5_105  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_106 -> m5_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_107 -> m5_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_108 -> m5_108  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_109 -> m5_109  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_110 -> m5_110  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_453 -> m5_457  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_454 -> m5_456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2570 -> m5_2579  [color=darkseagreen4, key=1, label=classRef, style=dashed];
m5_2571 -> m5_2573  [color=darkseagreen4, key=1, label=s1, style=dashed];
m5_2579 -> m5_2583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2572 -> m5_2579  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_2572 -> m5_2584  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_2574 -> m5_2576  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2574 -> m5_2577  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2574 -> m5_2578  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2100 -> m5_2102  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m5_2100 -> m5_2103  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m5_2100 -> m5_2104  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m5_1285 -> m5_1289  [color=darkseagreen4, key=1, label=guid, style=dashed];
m5_3314 -> m5_3316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3656 -> m5_3661  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_3656 -> m5_3664  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_3658 -> m5_3660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_3658 -> m5_3661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_3658 -> m5_3664  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_3661 -> m5_3663  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1251 -> m5_1254  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1255 -> m5_1257  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1255 -> m5_1258  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_2563 -> m5_2565  [color=darkseagreen4, key=1, label=z, style=dashed];
m5_2563 -> m5_2566  [color=darkseagreen4, key=1, label=z, style=dashed];
m5_1739 -> m5_1741  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_1739 -> m5_1742  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_1739 -> m5_1743  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_337 -> m5_339  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_343 -> m5_345  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3092 -> m5_3094  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1569 -> m5_1577  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1569 -> m5_1578  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1569 -> m5_1579  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_1575 -> m5_1577  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m5_1575 -> m5_1578  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m5_1575 -> m5_1579  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m5_3023 -> m5_3026  [color=darkseagreen4, key=1, label=uri, style=dashed];
m5_1665 -> m5_1667  [color=darkseagreen4, key=1, label=n, style=dashed];
m5_1665 -> m5_1668  [color=darkseagreen4, key=1, label=n, style=dashed];
m5_1665 -> m5_1669  [color=darkseagreen4, key=1, label=n, style=dashed];
m5_1665 -> m5_1670  [color=darkseagreen4, key=1, label=n, style=dashed];
m5_4360 -> m5_4364  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_4361 -> m5_4363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2728 -> m5_2730  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_2732 -> m5_2734  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_3943 -> m5_3945  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_3608 -> m5_3610  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_3513 -> m5_3515  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_3516 -> m5_3518  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_3516 -> m5_3519  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_1 -> m5_11  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_1 -> m5_12  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_1 -> m5_13  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_2 -> m5_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_6 -> m5_8  [color=darkseagreen4, key=1, label=ser, style=dashed];
m5_4289 -> m5_4291  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_3993 -> m5_3996  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_3993 -> m5_3997  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_3993 -> m5_3999  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_3993 -> m5_4007  [color=darkseagreen4, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m5_4000 -> m5_4007  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_4002 -> m5_4006  [color=darkseagreen4, key=1, label=strArray, style=dashed];
m5_3007 -> m5_3010  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3009 -> m5_3011  [color=darkseagreen4, key=1, label=jw, style=dashed];
m5_3126 -> m5_3128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2167 -> m5_2170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_1217 -> m5_1219  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1217 -> m5_1220  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1217 -> m5_1221  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1217 -> m5_1222  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1217 -> m5_1223  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m5_1066 -> m5_1068  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_2538 -> m5_2540  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2538 -> m5_2541  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2538 -> m5_2542  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_853 -> m5_855  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_853 -> m5_856  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_853 -> m5_857  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_1126 -> m5_1132  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m5_1128 -> m5_1131  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m5_1129 -> m5_1131  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m5_1129 -> m5_1132  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m5_1099 -> m5_1101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_446 -> m5_448  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_446 -> m5_449  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_446 -> m5_450  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_4221 -> m5_4227  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_4221 -> m5_4232  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_4229 -> m5_4231  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_4229 -> m5_4232  [color=darkseagreen4, key=1, label=v, style=dashed];
m5_2994 -> m5_2998  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2994 -> m5_2999  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2994 -> m5_3000  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2994 -> m5_3001  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2994 -> m5_3002  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2997 -> m5_2999  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2997 -> m5_3000  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2997 -> m5_3001  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2997 -> m5_3002  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2876 -> m5_2878  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2876 -> m5_2882  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2876 -> m5_2883  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_2881 -> m5_2883  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2881 -> m5_2884  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_2881 -> m5_2885  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_1706 -> m5_1708  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1706 -> m5_1709  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1803 -> m5_1805  [color=darkseagreen4, key=1, label=a, style=dashed];
m5_1803 -> m5_1806  [color=darkseagreen4, key=1, label=a, style=dashed];
m5_1892 -> m5_1896  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1893 -> m5_1895  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2118 -> m5_2124  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_2122 -> m5_2124  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_1973 -> m5_1975  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_4185 -> m5_4191  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_2547 -> m5_2549  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2547 -> m5_2550  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2547 -> m5_2551  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_1746 -> m5_1748  [color=darkseagreen4, key=1, label=uri, style=dashed];
m5_1746 -> m5_1750  [color=darkseagreen4, key=1, label=uri, style=dashed];
m5_2457 -> m5_2459  [color=darkseagreen4, key=1, label=reference, style=dashed];
m5_2457 -> m5_2463  [color=darkseagreen4, key=1, label=reference, style=dashed];
m5_2460 -> m5_2462  [color=darkseagreen4, key=1, label=child, style=dashed];
m5_2460 -> m5_2463  [color=darkseagreen4, key=1, label=child, style=dashed];
m5_2464 -> m5_2468  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_2465 -> m5_2467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3150 -> m5_3152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3887 -> m5_3890  [color=darkseagreen4, key=1, label=s1, style=dashed];
m5_3887 -> m5_3891  [color=darkseagreen4, key=1, label=s1, style=dashed];
m5_3889 -> m5_3892  [color=darkseagreen4, key=1, label=s2, style=dashed];
m5_3873 -> m5_3875  [color=darkseagreen4, key=1, label=expected, style=dashed];
m5_3496 -> m5_3498  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_3496 -> m5_3499  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m5_78 -> m5_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1052 -> m5_1054  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_1185 -> m5_1192  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_2828 -> m5_2830  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m5_3392 -> m5_3399  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_3392 -> m5_3400  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_3392 -> m5_3401  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_3392 -> m5_3402  [color=darkseagreen4, key=1, label=values, style=dashed];
m5_3393 -> m5_3396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_325 -> m5_327  [color=darkseagreen4, key=1, label=c, style=dashed];
m5_330 -> m5_332  [color=darkseagreen4, key=1, label=c2, style=dashed];
m5_3623 -> m5_3625  [color=darkseagreen4, key=1, label=exception, style=dashed];
m5_3623 -> m5_3626  [color=darkseagreen4, key=1, label=exception, style=dashed];
m5_426 -> m5_429  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_426 -> m5_430  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_426 -> m5_431  [color=darkseagreen4, key=1, label=input, style=dashed];
m5_428 -> m5_430  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_428 -> m5_431  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m5_740 -> m5_742  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_740 -> m5_743  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_740 -> m5_744  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_740 -> m5_745  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_740 -> m5_746  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m5_1904 -> m5_1906  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1088 -> m5_1094  [color=darkseagreen4, key=1, label=test, style=dashed];
m5_1088 -> m5_1095  [color=darkseagreen4, key=1, label=test, style=dashed];
m5_1093 -> m5_1095  [color=darkseagreen4, key=1, label=test2, style=dashed];
m5_3163 -> m5_3167  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_3164 -> m5_3166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2952 -> m5_2954  [color=darkseagreen4, key=1, label=r, style=dashed];
m5_2952 -> m5_2955  [color=darkseagreen4, key=1, label=r, style=dashed];
m5_2952 -> m5_2956  [color=darkseagreen4, key=1, label=r, style=dashed];
m5_2952 -> m5_2957  [color=darkseagreen4, key=1, label=r, style=dashed];
m5_4414 -> m5_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", style=dashed];
m5_4415 -> m5_263  [color=darkseagreen4, key=1, label=c1, style=dashed];
m5_4418 -> m5_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", style=dashed];
m5_4421 -> m5_457  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4423 -> m5_643  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m5_4425 -> m5_741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m5_4425 -> m5_742  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m5_4425 -> m5_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m5_4425 -> m5_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m5_4425 -> m5_745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m5_4425 -> m5_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m5_4425 -> m5_752  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m5_4426 -> m5_892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m5_4427 -> m5_3545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m5_4428 -> m5_1110  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4432 -> m5_1694  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m5_4433 -> m5_1798  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4434 -> m5_1825  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4435 -> m5_1832  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4436 -> m5_1839  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4437 -> m5_1846  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4438 -> m5_1853  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4439 -> m5_1860  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4440 -> m5_1867  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4441 -> m5_1874  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4442 -> m5_1888  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4443 -> m5_1896  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4445 -> m5_2036  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m5_4445 -> m5_2039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m5_4445 -> m5_2042  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m5_4447 -> m5_2079  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", style=dashed];
m5_4450 -> m5_2137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4450 -> m5_2186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m5_4451 -> m5_2238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4451 -> m5_2255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m5_4455 -> m5_2468  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4457 -> m5_2518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", style=dashed];
m5_4459 -> m5_2584  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4460 -> m5_2682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", style=dashed];
m5_4464 -> m5_2718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m5_4469 -> m5_2942  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m5_4473 -> m5_3167  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4474 -> m5_3221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter", style=dashed];
m5_4474 -> m5_3222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter", style=dashed];
m5_4475 -> m5_3436  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_4476 -> m5_3451  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_4477 -> m5_3466  [color=darkseagreen4, key=1, label=errors, style=dashed];
m5_4478 -> m5_3594  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4479 -> m5_3594  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_4480 -> m5_3619  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4481 -> m5_3619  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_4482 -> m5_3664  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_4483 -> m5_3664  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_4487 -> m5_3845  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_4490 -> m5_3961  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m5_4490 -> m5_3965  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m5_4490 -> m5_3971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m5_4490 -> m5_4007  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m5_4491 -> m5_4070  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m5_4491 -> m5_4072  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m5_4491 -> m5_4074  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m5_4491 -> m5_4076  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m5_4491 -> m5_4099  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m5_4491 -> m5_4102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m5_4491 -> m5_4105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m5_4494 -> m5_4305  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m5_4495 -> m5_4364  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_4496 -> m5_4376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty", style=dashed];
m6_270 -> m6_272  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_135 -> m6_279  [color=darkseagreen4, key=1, label=long, style=dashed];
m6_135 -> m6_280  [color=darkseagreen4, key=1, label=long, style=dashed];
m6_135 -> m6_282  [color=darkseagreen4, key=1, label=long, style=dashed];
m6_281 -> m6_284  [color=darkseagreen4, key=1, label=uvalue, style=dashed];
m6_204 -> m6_213  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_189 -> m6_191  [color=green, key=1, label=byte, style=dashed];
m6_115 -> m6_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_171 -> m6_173  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_33 -> m6_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_246 -> m6_248  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m6_184 -> m6_186  [color=green, key=1, label=char, style=dashed];
m6_131 -> m6_133  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_193 -> m6_195  [color=green, key=1, label=sbyte, style=dashed];
m6_165 -> m6_169  [color=darkseagreen4, key=1, label="double?", style=dashed];
m6_97 -> m6_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_97 -> m6_101  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_160 -> m6_162  [color=darkseagreen4, key=1, label=double, style=dashed];
m6_56 -> m6_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_58 -> m6_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_58 -> m6_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_58 -> m6_60  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_149 -> m6_151  [color=darkseagreen4, key=1, label=float, style=dashed];
m6_136 -> m6_138  [color=darkseagreen4, key=1, label=uint, style=dashed];
m6_197 -> m6_199  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_256 -> m6_260  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m6_140 -> m6_142  [color=darkseagreen4, key=1, label=long, style=dashed];
m6_154 -> m6_158  [color=darkseagreen4, key=1, label="float?", style=dashed];
m6_148 -> m6_288  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m6_148 -> m6_287  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m6_291 -> m6_294  [color=darkseagreen4, key=1, label=length, style=dashed];
m6_251 -> m6_253  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_39 -> m6_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m6_176 -> m6_178  [color=green, key=1, label=short, style=dashed];
m6_50 -> m6_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_120 -> m6_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_120 -> m6_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_221 -> m6_226  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m6_232 -> m6_242  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m6_242 -> m6_242  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m6_180 -> m6_182  [color=green, key=1, label=ushort, style=dashed];
m6_263 -> m6_266  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_144 -> m6_146  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m6_297 -> m6_177  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_178  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_181  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_182  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_185  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_186  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_190  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_191  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_194  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_195  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m6_297 -> m6_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m7_164 -> m7_166  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_165 -> m7_167  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_165 -> m7_168  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_165 -> m7_169  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_165 -> m7_170  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_165 -> m7_174  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_171 -> m7_174  [color=darkseagreen4, key=1, label=listRef, style=dashed];
m7_175 -> m7_178  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_178 -> m7_181  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_178 -> m7_182  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_178 -> m7_183  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_178 -> m7_184  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_620 -> m7_623  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_620 -> m7_626  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_620 -> m7_625  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_571 -> m7_573  [color=darkseagreen4, key=1, label=p2, style=dashed];
m7_571 -> m7_574  [color=darkseagreen4, key=1, label=p2, style=dashed];
m7_1 -> m7_12  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_1 -> m7_4  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_1 -> m7_6  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_1 -> m7_17  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_1 -> m7_34  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_6 -> m7_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_3 -> m7_5  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_7  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_8  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_9  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_10  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_11  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_12  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_13  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_14  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_15  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_16  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_17  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_3 -> m7_18  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_5 -> m7_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_278 -> m7_280  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_283 -> m7_285  [color=darkseagreen4, key=1, label=newCollection, style=dashed];
m7_560 -> m7_562  [color=darkseagreen4, key=1, label=p2, style=dashed];
m7_25 -> m7_27  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_25 -> m7_28  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_23 -> m7_25  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_22 -> m7_24  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_22 -> m7_29  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_202 -> m7_206  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m7_93 -> m7_96  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_93 -> m7_99  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_93 -> m7_102  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_93 -> m7_105  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_93 -> m7_121  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_94 -> m7_96  [color=green, key=1, label=employeeRef, style=dashed];
m7_97 -> m7_99  [color=green, key=1, label=values, style=dashed];
m7_97 -> m7_100  [color=green, key=1, label=values, style=dashed];
m7_97 -> m7_107  [color=green, key=1, label=values, style=dashed];
m7_99 -> m7_101  [color=green, key=1, label=e, style=dashed];
m7_99 -> m7_102  [color=green, key=1, label=e, style=dashed];
m7_100 -> m7_103  [color=green, key=1, label=p, style=dashed];
m7_100 -> m7_104  [color=green, key=1, label=p, style=dashed];
m7_100 -> m7_105  [color=green, key=1, label=p, style=dashed];
m7_106 -> m7_109  [color=darkseagreen4, key=1, label=a, style=dashed];
m7_106 -> m7_112  [color=darkseagreen4, key=1, label=a, style=dashed];
m7_106 -> m7_115  [color=darkseagreen4, key=1, label=a, style=dashed];
m7_106 -> m7_118  [color=darkseagreen4, key=1, label=a, style=dashed];
m7_110 -> m7_112  [color=green, key=1, label=employeeRef, style=dashed];
m7_110 -> m7_115  [color=green, key=1, label=employeeRef, style=dashed];
m7_111 -> m7_115  [color=green, key=1, label=personRef, style=dashed];
m7_51 -> m7_53  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_149 -> m7_153  [color=darkseagreen4, key=1, label=containerTypeName, style=dashed];
m7_150 -> m7_153  [color=darkseagreen4, key=1, label=productListTypeName, style=dashed];
m7_239 -> m7_244  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_250 -> m7_254  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m7_250 -> m7_252  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m7_250 -> m7_253  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m7_255 -> m7_257  [color=darkseagreen4, key=1, label=list, style=dashed];
m7_255 -> m7_258  [color=darkseagreen4, key=1, label=list, style=dashed];
m7_226 -> m7_229  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m7_226 -> m7_238  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m7_226 -> m7_230  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m7_232 -> m7_238  [color=darkseagreen4, key=1, label=serializingTester, style=dashed];
m7_235 -> m7_238  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_349 -> m7_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m7_349 -> m7_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m7_351 -> m7_354  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_351 -> m7_355  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_352 -> m7_354  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_429 -> m7_431  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_432 -> m7_435  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_432 -> m7_438  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_432 -> m7_434  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_432 -> m7_436  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_432 -> m7_437  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_137 -> m7_141  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_137 -> m7_144  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_141 -> m7_143  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_142 -> m7_144  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_142 -> m7_145  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_312 -> m7_314  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m7_312 -> m7_315  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m7_447 -> m7_449  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_447 -> m7_450  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_447 -> m7_451  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_292 -> m7_295  [color=darkseagreen4, key=1, label=productClassRef, style=dashed];
m7_156 -> m7_160  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_157 -> m7_160  [color=darkseagreen4, key=1, label=typeNamePropertyRef, style=dashed];
m7_161 -> m7_163  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_342 -> m7_344  [color=darkseagreen4, key=1, label=w, style=dashed];
m7_342 -> m7_345  [color=darkseagreen4, key=1, label=w, style=dashed];
m7_53 -> m7_55  [color=darkseagreen4, key=1, label=w2, style=dashed];
m7_54 -> m7_56  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_57  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_58  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_59  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_60  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_61  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_62  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_63  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_64  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_65  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_66  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_67  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_68  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_69  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_70  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_71  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_72  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_73  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_74  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_54 -> m7_75  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_460 -> m7_462  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_460 -> m7_463  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_467 -> m7_469  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_467 -> m7_470  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_147 -> m7_149  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_147 -> m7_150  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_147 -> m7_151  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_147 -> m7_152  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_73 -> m7_75  [color=darkseagreen4, key=1, label=employee, style=dashed];
m7_414 -> m7_417  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_414 -> m7_416  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_414 -> m7_418  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_414 -> m7_419  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_408 -> m7_410  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_408 -> m7_411  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_329 -> m7_331  [color=darkseagreen4, key=1, label=output, style=dashed];
m7_332 -> m7_334  [color=darkseagreen4, key=1, label=obj, style=dashed];
m7_324 -> m7_336  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_19 -> m7_21  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_22  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_23  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_24  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_25  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_26  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_27  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_28  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_29  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_30  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_31  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_32  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_33  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_19 -> m7_34  [color=darkseagreen4, key=1, label=root, style=dashed];
m7_85 -> m7_89  [color=green, key=1, label=employeeRef, style=dashed];
m7_86 -> m7_89  [color=green, key=1, label=personRef, style=dashed];
m7_87 -> m7_89  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_90  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_94  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_95  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_96  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_97  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_98  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_99  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_100  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_101  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_102  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_103  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_104  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_105  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_107  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_108  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_109  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_110  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_111  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_112  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_113  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_114  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_115  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_116  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_117  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_118  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_119  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_120  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_87 -> m7_121  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_544 -> m7_551  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m7_544 -> m7_547  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m7_545 -> m7_551  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m7_545 -> m7_547  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m7_127 -> m7_131  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_127 -> m7_129  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_127 -> m7_130  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_128 -> m7_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_12 -> m7_14  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_380 -> m7_382  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_380 -> m7_383  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_64 -> m7_67  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m7_525 -> m7_527  [color=darkseagreen4, key=1, label=d2, style=dashed];
m7_584 -> m7_586  [color=darkseagreen4, key=1, label=p2, style=dashed];
m7_480 -> m7_482  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_480 -> m7_483  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_487 -> m7_489  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_487 -> m7_490  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_501 -> m7_503  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_501 -> m7_504  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_501 -> m7_505  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_501 -> m7_506  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_501 -> m7_507  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_398 -> m7_400  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_398 -> m7_401  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_398 -> m7_402  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_398 -> m7_403  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_391 -> m7_394  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_391 -> m7_395  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_390 -> m7_392  [color=darkseagreen4, key=1, label=c1, style=dashed];
m7_638 -> m7_131  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_642 -> m7_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m7_642 -> m7_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m7_642 -> m7_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m7_637 -> m7_12  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_641 -> m7_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m7_641 -> m7_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m7_641 -> m7_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m7_641 -> m7_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m7_645 -> m7_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_645 -> m7_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_645 -> m7_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_645 -> m7_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_645 -> m7_634  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_643 -> m7_595  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MyParent", style=dashed];
m8_59 -> m8_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_62  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_63  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_65  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_66  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_68  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_69  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_71  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_72  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_73  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_59 -> m8_74  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_479 -> m8_481  [color=darkseagreen4, key=1, label="System.Dynamic.BinaryOperationBinder", style=dashed];
m8_479 -> m8_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_480 -> m8_483  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_486  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_489  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_492  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_495  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_498  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_508  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_509 -> m8_509  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_509 -> m8_511  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_511 -> m8_513  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_557 -> m8_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_557 -> m8_584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_688 -> m8_692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_689 -> m8_691  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_539 -> m8_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_539 -> m8_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_539 -> m8_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_539 -> m8_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_137 -> m8_139  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m8_139 -> m8_141  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_142  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_143  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_144  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_145  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_146  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_147  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_148  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_149  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_139 -> m8_139  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m8_143 -> m8_163  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_1006 -> m8_1008  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1009  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1010  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1011  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1012  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1013  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1014  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1015  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1016  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1017  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1018  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1006 -> m8_1019  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1372 -> m8_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1372 -> m8_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1372 -> m8_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1372 -> m8_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1372 -> m8_1378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1372 -> m8_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1372 -> m8_1380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1372 -> m8_1381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1372 -> m8_1382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_721 -> m8_732  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m8_721 -> m8_747  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m8_723 -> m8_726  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_727 -> m8_729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_727 -> m8_762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_726 -> m8_726  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_1671 -> m8_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1672 -> m8_1675  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_58 -> m8_75  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_64 -> m8_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_69  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m8_64 -> m8_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_115  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_116  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_123  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_129  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_131  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_132  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_135  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m8_1420 -> m8_1422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1420 -> m8_1423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1420 -> m8_1424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1420 -> m8_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1420 -> m8_1426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1420 -> m8_1427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1420 -> m8_1428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_156 -> m8_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1929 -> m8_1931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1929 -> m8_1934  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1931 -> m8_1933  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1263 -> m8_1267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1264 -> m8_1266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2070 -> m8_2073  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2091  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2074  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2094  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2076  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2077  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2079  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2097  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2081  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2082  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2084  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2100  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2085  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2103  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2086  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2070 -> m8_2106  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2073 -> m8_2090  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2074 -> m8_2093  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2079 -> m8_2096  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2084 -> m8_2099  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2085 -> m8_2102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2086 -> m8_2105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_529 -> m8_534  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m8_529 -> m8_542  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m8_531 -> m8_535  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_531 -> m8_537  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_681 -> m8_685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_682 -> m8_684  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1177 -> m8_1179  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1180  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1181  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1182  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1183  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1184  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1185  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1186  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1187  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1188  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1189  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1190  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1191  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1192  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1193  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1177 -> m8_1194  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1680 -> m8_1682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1680 -> m8_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_162 -> m8_164  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_162 -> m8_166  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_163 -> m8_166  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_598 -> m8_600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_604 -> m8_608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_601 -> m8_605  [color=darkseagreen4, key=1, label=j, style=dashed];
m8_605 -> m8_605  [color=darkseagreen4, key=1, label=j, style=dashed];
m8_303 -> m8_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_316 -> m8_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_316 -> m8_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_713 -> m8_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_713 -> m8_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_715 -> m8_717  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1024 -> m8_1026  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1024 -> m8_1027  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1024 -> m8_1028  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1024 -> m8_1029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1024 -> m8_1030  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1024 -> m8_1031  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1024 -> m8_1032  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1024 -> m8_1033  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1024 -> m8_1034  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2128 -> m8_2130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_5  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_7  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_8  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_9  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_10  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_11  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_12  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_13  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_14  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_15  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_17  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_18  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_19  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_20  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2 -> m8_21  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_422 -> m8_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_855 -> m8_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_856 -> m8_870  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_857 -> m8_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_858 -> m8_873  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_859 -> m8_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_860 -> m8_876  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_861 -> m8_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_862 -> m8_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_865 -> m8_883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_866 -> m8_882  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1873 -> m8_1875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1873 -> m8_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1873 -> m8_1879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1876 -> m8_1878  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_245 -> m8_249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_245 -> m8_250  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_247 -> m8_256  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_247 -> m8_260  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_247 -> m8_264  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_248 -> m8_256  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_248 -> m8_260  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_248 -> m8_264  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_1156 -> m8_1158  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1159  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1160  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1161  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1162  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1163  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1164  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1165  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1166  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1167  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1168  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1169  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1170  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1171  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1172  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1156 -> m8_1173  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1205 -> m8_1207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_659 -> m8_662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_659 -> m8_664  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_659 -> m8_665  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_659 -> m8_666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_660 -> m8_663  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_663 -> m8_663  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_1052 -> m8_1054  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1055  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1056  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1057  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1058  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1059  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1060  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1061  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1062  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1063  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1064  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1065  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1066  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1067  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1068  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1069  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1070  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1071  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1072  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1073  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1074  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1075  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1076  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1077  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1078  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1079  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1080  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1081  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1082  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1083  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1084  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1085  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1086  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1087  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1088  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1089  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1090  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1091  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1092  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1093  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1094  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1095  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1096  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1097  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1098  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1099  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1100  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1101  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1102  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1103  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1104  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1105  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1106  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1107  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1108  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1109  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1052 -> m8_1110  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1404 -> m8_1406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1404 -> m8_1407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1404 -> m8_1408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1404 -> m8_1409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1404 -> m8_1410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1404 -> m8_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1404 -> m8_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1404 -> m8_1415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1404 -> m8_1416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1414 -> m8_1414  [color=darkseagreen4, key=1, label=dt, style=dashed];
m8_285 -> m8_314  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_290  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_285 -> m8_292  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_294  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_296  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_298  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_300  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_302  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_304  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_306  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_308  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_310  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_312  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_287 -> m8_289  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_287 -> m8_291  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_95 -> m8_97  [color=darkseagreen4, key=1, label=b1, style=dashed];
m8_104 -> m8_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_84 -> m8_86  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_84 -> m8_87  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_84 -> m8_88  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_84 -> m8_89  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_84 -> m8_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_84 -> m8_90  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_84 -> m8_91  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_84 -> m8_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_91 -> m8_93  [color=darkseagreen4, key=1, label=s1, style=dashed];
m8_100 -> m8_105  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_106 -> m8_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_106 -> m8_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_115 -> m8_117  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m8_115 -> m8_121  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m8_116 -> m8_119  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m8_116 -> m8_121  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m8_125 -> m8_127  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m8_126 -> m8_128  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_126 -> m8_129  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_126 -> m8_130  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_126 -> m8_131  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_126 -> m8_133  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_126 -> m8_134  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_126 -> m8_135  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_131 -> m8_133  [color=darkseagreen4, key=1, label=uri1, style=dashed];
m8_105 -> m8_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_111 -> m8_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_127 -> m8_127  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m8_101 -> m8_103  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_104  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_113  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_105  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_116  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_106  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_119  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_107  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_122  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_108  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_109  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_101 -> m8_110  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_107 -> m8_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_89 -> m8_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1609 -> m8_1611  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1609 -> m8_1612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_674 -> m8_678  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_675 -> m8_677  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_214 -> m8_216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_214 -> m8_217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_214 -> m8_221  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_218 -> m8_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_449 -> m8_457  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_455 -> m8_457  [color=darkseagreen4, key=1, label=formattable, style=dashed];
m8_580 -> m8_382  [color=green, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_385  [color=green, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_388  [color=green, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_172 -> m8_174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_172 -> m8_175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_172 -> m8_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_172 -> m8_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_172 -> m8_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_172 -> m8_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_178 -> m8_183  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_178 -> m8_191  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_178 -> m8_195  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_179 -> m8_183  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_179 -> m8_191  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_179 -> m8_195  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_181 -> m8_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1632 -> m8_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1632 -> m8_1635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1632 -> m8_1636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1457 -> m8_1461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1458 -> m8_1460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_323 -> m8_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_322 -> m8_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_706 -> m8_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_706 -> m8_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_152 -> m8_157  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_895 -> m8_908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_896 -> m8_907  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_897 -> m8_899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_897 -> m8_911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_899 -> m8_910  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_904 -> m8_914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_905 -> m8_913  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_362 -> m8_364  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_365  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_366  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_367  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_368  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_369  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_370  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_371  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_372  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_373  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_374  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_375  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_376  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_377  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_378  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_379  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_380  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_381  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_382  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_383  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_384  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_385  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_386  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_387  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_388  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_389  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_390  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_391  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_392  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_393  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_394  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_395  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_396  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_397  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_398  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_399  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_400  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_401  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_402  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_403  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_404  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_405  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_406  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_407  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_408  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_362 -> m8_409  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1471 -> m8_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1472 -> m8_1474  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1464 -> m8_1468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1465 -> m8_1467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1493 -> m8_1495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1493 -> m8_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1493 -> m8_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1493 -> m8_1498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1493 -> m8_1500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1493 -> m8_1501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1493 -> m8_1503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1493 -> m8_1504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1499 -> m8_1502  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1508 -> m8_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1508 -> m8_1513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1508 -> m8_1514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1509 -> m8_1512  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_1512 -> m8_1512  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_1938 -> m8_1940  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1941  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1953  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1954  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1955  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1938 -> m8_1963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1941 -> m8_1965  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1953 -> m8_1968  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_155 -> m8_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_153 -> m8_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_157 -> m8_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_154 -> m8_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_158 -> m8_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1242 -> m8_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1243 -> m8_1245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_273 -> m8_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1479 -> m8_1481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1479 -> m8_1482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1479 -> m8_1483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1479 -> m8_1485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1479 -> m8_1486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1479 -> m8_1488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1479 -> m8_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1484 -> m8_1487  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_979 -> m8_986  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_954 -> m8_956  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_957  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_958  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_959  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_960  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_961  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_962  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_963  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_966  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_968  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_969  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_970  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_971  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_972  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_973  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_974  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_975  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_976  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_977  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_954 -> m8_978  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_964 -> m8_966  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_964 -> m8_967  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_967 -> m8_967  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_980 -> m8_985  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m8_981 -> m8_985  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m8_982 -> m8_986  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_1973 -> m8_1975  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1976  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1977  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1978  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1986  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1988  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1989  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_1999  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2008  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2009  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1973 -> m8_2010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1530 -> m8_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1530 -> m8_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1530 -> m8_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1530 -> m8_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1450 -> m8_1454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1451 -> m8_1453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_918 -> m8_920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_918 -> m8_921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_922 -> m8_924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_922 -> m8_925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_926 -> m8_928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_926 -> m8_929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_930 -> m8_932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_930 -> m8_933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_934 -> m8_946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_935 -> m8_945  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_936 -> m8_938  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_936 -> m8_939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_942 -> m8_949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_943 -> m8_948  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_669 -> m8_671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_328 -> m8_382  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_385  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_388  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_330 -> m8_332  [color=darkseagreen4, key=1, label=matchingConverter, style=dashed];
m8_330 -> m8_333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_336  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_337  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_330 -> m8_344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_341 -> m8_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1038 -> m8_1040  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1038 -> m8_1041  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1038 -> m8_1042  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1038 -> m8_1043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1038 -> m8_1044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1038 -> m8_1045  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1038 -> m8_1046  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_43 -> m8_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_43 -> m8_50  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_44 -> m8_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_44 -> m8_47  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_44 -> m8_53  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_414 -> m8_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_414 -> m8_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_427 -> m8_433  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_430 -> m8_432  [color=darkseagreen4, key=1, label=otherValue, style=dashed];
m8_466 -> m8_473  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m8_474 -> m8_476  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_698 -> m8_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_699 -> m8_702  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1663 -> m8_1665  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1663 -> m8_1666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1663 -> m8_1667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_630 -> m8_632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_633 -> m8_639  [color=darkseagreen4, key=1, label=j, style=dashed];
m8_639 -> m8_639  [color=darkseagreen4, key=1, label=j, style=dashed];
m8_636 -> m8_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1299 -> m8_1309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_814 -> m8_816  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_817  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_818  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_819  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_820  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_821  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_822  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_823  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_824  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_825  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_826  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_827  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_828  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_814 -> m8_829  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1851 -> m8_1853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1851 -> m8_1854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_613 -> m8_617  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_614 -> m8_616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_614 -> m8_617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_621 -> m8_624  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_618 -> m8_622  [color=darkseagreen4, key=1, label=j, style=dashed];
m8_622 -> m8_622  [color=darkseagreen4, key=1, label=j, style=dashed];
m8_2136 -> m8_2139  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m8_536 -> m8_536  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_766 -> m8_768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_766 -> m8_769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_766 -> m8_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_766 -> m8_771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_766 -> m8_772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_766 -> m8_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_766 -> m8_774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_766 -> m8_775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_766 -> m8_776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1640 -> m8_1642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1640 -> m8_1643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1640 -> m8_1644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1624 -> m8_1628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1625 -> m8_1627  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_169 -> m8_171  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_169 -> m8_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_180  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_169 -> m8_197  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_198  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_201  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_202  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_203  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_169 -> m8_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_221  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_226  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_169 -> m8_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_244  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_249  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_224 -> m8_229  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_224 -> m8_233  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_224 -> m8_237  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_224 -> m8_241  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_225 -> m8_229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_225 -> m8_240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_201 -> m8_206  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_201 -> m8_210  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_202 -> m8_206  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_202 -> m8_210  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_188 -> m8_190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_208  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_209  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_266 -> m8_268  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_588 -> m8_591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_588 -> m8_593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_588 -> m8_594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_589 -> m8_592  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_592 -> m8_592  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_1432 -> m8_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1432 -> m8_1435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1432 -> m8_1436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1432 -> m8_1437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1432 -> m8_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1437 -> m8_1439  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1565 -> m8_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1565 -> m8_1605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1828 -> m8_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1828 -> m8_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1828 -> m8_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1844 -> m8_1846  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1844 -> m8_1847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_541 -> m8_544  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_541 -> m8_545  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_1114 -> m8_1116  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1114 -> m8_1117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1114 -> m8_1118  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1114 -> m8_1119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1114 -> m8_1120  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1114 -> m8_1121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1114 -> m8_1124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1121 -> m8_1123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1648 -> m8_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1648 -> m8_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1648 -> m8_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_522 -> m8_525  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_523 -> m8_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1215 -> m8_1219  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1216 -> m8_1218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1655 -> m8_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1656 -> m8_1658  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_780 -> m8_787  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m8_781 -> m8_783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_781 -> m8_784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_781 -> m8_785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_781 -> m8_788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_781 -> m8_789  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_781 -> m8_790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_781 -> m8_791  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2110 -> m8_2112  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_2110 -> m8_2113  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_2110 -> m8_2114  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_2117 -> m8_2123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_533 -> m8_535  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_533 -> m8_536  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_282 -> m8_284  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_282 -> m8_286  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_283 -> m8_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_520 -> m8_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_1519 -> m8_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1519 -> m8_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1519 -> m8_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1519 -> m8_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1520 -> m8_1523  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_1523 -> m8_1523  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_1703 -> m8_1705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1703 -> m8_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1256 -> m8_1260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1257 -> m8_1259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1883 -> m8_1885  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1887 -> m8_1889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1901  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1887 -> m8_1904  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1907  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1905 -> m8_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_52 -> m8_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_1197 -> m8_1199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1197 -> m8_1202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1199 -> m8_1201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1356 -> m8_1358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1356 -> m8_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1356 -> m8_1360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1356 -> m8_1361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1356 -> m8_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1356 -> m8_1363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1356 -> m8_1364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1356 -> m8_1365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1356 -> m8_1366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_545 -> m8_545  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_1330 -> m8_1332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1330 -> m8_1333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1330 -> m8_1334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1330 -> m8_1335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1330 -> m8_1338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1335 -> m8_1337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1228 -> m8_1232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1229 -> m8_1231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_30 -> m8_32  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_34 -> m8_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_35 -> m8_38  [color=darkseagreen4, key=1, label=other, style=dashed];
m8_1286 -> m8_1288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1286 -> m8_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1286 -> m8_1290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1286 -> m8_1291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1286 -> m8_1292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1286 -> m8_1293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1286 -> m8_1294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1286 -> m8_1295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_515 -> m8_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_518  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1342 -> m8_1344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1342 -> m8_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1342 -> m8_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1342 -> m8_1347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1342 -> m8_1348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1342 -> m8_1349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1342 -> m8_1350  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1342 -> m8_1351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1342 -> m8_1352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1616 -> m8_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1617 -> m8_1619  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2014 -> m8_2016  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2014 -> m8_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2014 -> m8_2018  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2014 -> m8_2019  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2014 -> m8_2020  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2014 -> m8_2021  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2014 -> m8_2022  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2014 -> m8_2023  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2024 -> m8_2026  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2024 -> m8_2027  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2024 -> m8_2028  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2024 -> m8_2029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2024 -> m8_2030  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2024 -> m8_2031  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2024 -> m8_2032  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2024 -> m8_2033  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2034 -> m8_2036  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2034 -> m8_2037  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2034 -> m8_2038  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2034 -> m8_2039  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2034 -> m8_2040  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2034 -> m8_2041  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2034 -> m8_2042  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2034 -> m8_2043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2044 -> m8_2046  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2044 -> m8_2047  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2044 -> m8_2048  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2044 -> m8_2049  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2044 -> m8_2050  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2044 -> m8_2051  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2044 -> m8_2052  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2044 -> m8_2053  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2054 -> m8_2056  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2054 -> m8_2057  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2054 -> m8_2058  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2054 -> m8_2059  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2054 -> m8_2060  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2054 -> m8_2061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2054 -> m8_2062  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2054 -> m8_2063  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1222 -> m8_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2151 -> m8_2155  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m8_2153 -> m8_2155  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m8_2153 -> m8_2157  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m8_1858 -> m8_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1866  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1858 -> m8_1870  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1250 -> m8_1252  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_1250 -> m8_1253  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_1138 -> m8_1140  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1141  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1142  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1146  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1147  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1148  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1149  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1150  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1151  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1138 -> m8_1152  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_1539 -> m8_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1539 -> m8_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1539 -> m8_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1539 -> m8_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_796 -> m8_805  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m8_797 -> m8_799  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_797 -> m8_800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_797 -> m8_801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_797 -> m8_802  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_797 -> m8_803  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_797 -> m8_806  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_797 -> m8_807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_797 -> m8_808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_797 -> m8_809  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_646 -> m8_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_649 -> m8_655  [color=darkseagreen4, key=1, label=j, style=dashed];
m8_655 -> m8_655  [color=darkseagreen4, key=1, label=j, style=dashed];
m8_652 -> m8_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1210 -> m8_1212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1548 -> m8_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1836 -> m8_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1837 -> m8_1839  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1742 -> m8_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1782  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1789  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1791  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1792  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1797  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1798  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1799  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1802  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1803  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1805  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1806  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1809  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1812  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1813  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1815  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1816  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1817  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1819  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1820  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1821  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1822  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1823  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1742 -> m8_1824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1387 -> m8_1399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1397 -> m8_1397  [color=darkseagreen4, key=1, label=dt, style=dashed];
m8_1235 -> m8_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1236 -> m8_1238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1316 -> m8_1318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1316 -> m8_1319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1316 -> m8_1320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1316 -> m8_1321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1316 -> m8_1322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1316 -> m8_1323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1316 -> m8_1324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1316 -> m8_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1316 -> m8_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1443 -> m8_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1444 -> m8_1446  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1271 -> m8_1273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1271 -> m8_1282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2171 -> m8_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2172 -> m8_113  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2172 -> m8_116  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2172 -> m8_119  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2172 -> m8_122  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2173 -> m8_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2173 -> m8_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2173 -> m8_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2174 -> m8_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2175 -> m8_221  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2176 -> m8_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2176 -> m8_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m8_2177 -> m8_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2178 -> m8_344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2179 -> m8_357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2180 -> m8_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2183 -> m8_678  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2184 -> m8_685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2185 -> m8_692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2186 -> m8_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2187 -> m8_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2188 -> m8_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2188 -> m8_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2188 -> m8_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2188 -> m8_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2188 -> m8_883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2189 -> m8_908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2189 -> m8_911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2189 -> m8_914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2190 -> m8_946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2190 -> m8_949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2191 -> m8_1124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2192 -> m8_1202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2193 -> m8_1219  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2194 -> m8_1232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2195 -> m8_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2196 -> m8_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2197 -> m8_1260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2198 -> m8_1267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2199 -> m8_1338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2200 -> m8_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2201 -> m8_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2202 -> m8_1454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2203 -> m8_1461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2204 -> m8_1468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2205 -> m8_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2206 -> m8_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2207 -> m8_1628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2208 -> m8_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2209 -> m8_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2210 -> m8_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2211 -> m8_1879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2212 -> m8_1934  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2213 -> m8_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2213 -> m8_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2214 -> m8_2091  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2214 -> m8_2094  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2214 -> m8_2097  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2214 -> m8_2100  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2214 -> m8_2103  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2214 -> m8_2106  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m8_2216 -> m8_2137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m8_2216 -> m8_2139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m8_2217 -> m8_2155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m9_154 -> m9_158  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_155 -> m9_164  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_155 -> m9_159  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_155 -> m9_160  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_155 -> m9_161  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_156 -> m9_158  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m9_157 -> m9_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_307 -> m9_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_307 -> m9_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_307 -> m9_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_28 -> m9_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_370 -> m9_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_470 -> m9_484  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m9_471 -> m9_484  [color=darkseagreen4, key=1, label=temp, style=dashed];
m9_474 -> m9_484  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m9_474 -> m9_485  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m9_477 -> m9_484  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m9_477 -> m9_485  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m9_479 -> m9_484  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m9_479 -> m9_485  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m9_417 -> m9_421  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m9_417 -> m9_427  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m9_421 -> m9_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_419 -> m9_421  [color=darkseagreen4, key=1, label=r, style=dashed];
m9_419 -> m9_427  [color=darkseagreen4, key=1, label=r, style=dashed];
m9_420 -> m9_427  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_247 -> m9_263  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_247 -> m9_257  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_247 -> m9_258  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_247 -> m9_259  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_247 -> m9_260  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_252 -> m9_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_253 -> m9_255  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
m9_253 -> m9_256  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
m9_199 -> m9_210  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_199 -> m9_202  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_199 -> m9_203  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_200 -> m9_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_200 -> m9_204  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_200 -> m9_205  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_170 -> m9_178  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_170 -> m9_173  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_170 -> m9_174  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_171 -> m9_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_123 -> m9_128  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_124 -> m9_136  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_124 -> m9_129  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_124 -> m9_130  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_124 -> m9_131  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_125 -> m9_128  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m9_127 -> m9_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_214 -> m9_227  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_214 -> m9_219  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_214 -> m9_220  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_216 -> m9_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_217 -> m9_221  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_217 -> m9_222  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_48 -> m9_50  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_48 -> m9_51  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_48 -> m9_52  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_19 -> m9_21  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_19 -> m9_22  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_19 -> m9_23  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_19 -> m9_24  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_86 -> m9_88  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_86 -> m9_89  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_86 -> m9_90  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_408 -> m9_411  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m9_408 -> m9_414  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m9_411 -> m9_413  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_410 -> m9_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_104 -> m9_120  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_104 -> m9_113  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_104 -> m9_114  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_105 -> m9_109  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_108 -> m9_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_108 -> m9_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_107 -> m9_109  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m9_95 -> m9_91  [color=darkseagreen4, key=1, label=eventErrorHandlerCalled, style=dashed];
m9_118 -> m9_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_176 -> m9_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_267 -> m9_283  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_267 -> m9_278  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_267 -> m9_279  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_267 -> m9_280  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_272 -> m9_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_273 -> m9_275  [color=darkseagreen4, key=1, label=logEvents, style=dashed];
m9_273 -> m9_276  [color=darkseagreen4, key=1, label=logEvents, style=dashed];
m9_273 -> m9_277  [color=darkseagreen4, key=1, label=logEvents, style=dashed];
m9_182 -> m9_195  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_182 -> m9_187  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_182 -> m9_188  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_182 -> m9_189  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_182 -> m9_190  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_184 -> m9_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_2 -> m9_7  [color=darkseagreen4, key=1, label=possibleMsgs, style=dashed];
m9_3 -> m9_5  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_3 -> m9_6  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_3 -> m9_7  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_3 -> m9_16  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_7 -> m9_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_231 -> m9_243  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_231 -> m9_234  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_231 -> m9_235  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_231 -> m9_236  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_232 -> m9_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_232 -> m9_237  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_232 -> m9_238  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_232 -> m9_239  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_232 -> m9_240  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_58 -> m9_77  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_58 -> m9_65  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_58 -> m9_67  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_58 -> m9_82  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_58 -> m9_68  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_58 -> m9_69  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_59 -> m9_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_67 -> m9_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_60 -> m9_62  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_60 -> m9_63  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_60 -> m9_64  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_445 -> m9_466  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m9_445 -> m9_459  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m9_445 -> m9_460  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m9_445 -> m9_461  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m9_446 -> m9_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_448 -> m9_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_449 -> m9_451  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m9_450 -> m9_452  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_450 -> m9_453  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_450 -> m9_454  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_450 -> m9_455  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_450 -> m9_456  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_450 -> m9_457  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_450 -> m9_458  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_140 -> m9_144  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_141 -> m9_150  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_141 -> m9_145  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_141 -> m9_146  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_141 -> m9_147  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_142 -> m9_144  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m9_143 -> m9_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_287 -> m9_300  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_287 -> m9_295  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_287 -> m9_296  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_287 -> m9_297  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_289 -> m9_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m9_291 -> m9_293  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_291 -> m9_294  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_332 -> m9_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_332 -> m9_342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_332 -> m9_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_386 -> m9_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_492 -> m9_16  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_493 -> m9_77  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_493 -> m9_82  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_494 -> m9_120  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_495 -> m9_136  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_496 -> m9_150  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_497 -> m9_164  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_498 -> m9_178  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_499 -> m9_195  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_500 -> m9_210  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_501 -> m9_227  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_502 -> m9_243  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_503 -> m9_263  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_504 -> m9_283  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_505 -> m9_300  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_509 -> m9_414  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m9_510 -> m9_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_511 -> m9_427  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m9_512 -> m9_427  [color=darkseagreen4, key=1, label=r, style=dashed];
m9_513 -> m9_427  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_514 -> m9_466  [color=darkseagreen4, key=1, label=errorMessages, style=dashed];
m9_515 -> m9_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m9_515 -> m9_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m9_515 -> m9_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m10_326 -> m10_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_326 -> m10_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_326 -> m10_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_326 -> m10_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_326 -> m10_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m10_367 -> m10_372  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_368 -> m10_374  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m10_369 -> m10_379  [color=darkseagreen4, key=1, label=writeMetadataObject, style=dashed];
m10_124 -> m10_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_124 -> m10_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_124 -> m10_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_124 -> m10_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_124 -> m10_134  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_124 -> m10_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_124 -> m10_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_124 -> m10_138  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_124 -> m10_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_124 -> m10_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_125 -> m10_128  [color=darkseagreen4, key=1, label=listRef, style=dashed];
m10_129 -> m10_139  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_129 -> m10_131  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m10_131 -> m10_139  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_132 -> m10_135  [color=darkseagreen4, key=1, label=nested, style=dashed];
m10_132 -> m10_136  [color=darkseagreen4, key=1, label=nested, style=dashed];
m10_132 -> m10_137  [color=darkseagreen4, key=1, label=nested, style=dashed];
m10_132 -> m10_138  [color=darkseagreen4, key=1, label=nested, style=dashed];
m10_133 -> m10_139  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_137 -> m10_137  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_138 -> m10_138  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_138 -> m10_141  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_138 -> m10_144  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_148 -> m10_150  [color=darkseagreen4, key=1, label=c2, style=dashed];
m10_148 -> m10_151  [color=darkseagreen4, key=1, label=c2, style=dashed];
m10_148 -> m10_152  [color=darkseagreen4, key=1, label=c2, style=dashed];
m10_148 -> m10_153  [color=darkseagreen4, key=1, label=c2, style=dashed];
m10_127 -> m10_130  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_127 -> m10_139  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m10_135 -> m10_137  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_135 -> m10_138  [color=darkseagreen4, key=1, label=message, style=dashed];
m10_175 -> m10_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_175 -> m10_181  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_176 -> m10_178  [color=green, key=1, label=actual, style=dashed];
m10_176 -> m10_179  [color=green, key=1, label=actual, style=dashed];
m10_184 -> m10_186  [color=darkseagreen4, key=1, label="out string", style=dashed];
m10_77 -> m10_192  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_194 -> m10_196  [color=darkseagreen4, key=1, label=c, style=dashed];
m10_84 -> m10_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_84 -> m10_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_84 -> m10_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_86 -> m10_88  [color=darkseagreen4, key=1, label=employees, style=dashed];
m10_86 -> m10_90  [color=darkseagreen4, key=1, label=employees, style=dashed];
m10_87 -> m10_90  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_87 -> m10_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_87 -> m10_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_89 -> m10_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_89 -> m10_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_85 -> m10_88  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_85 -> m10_90  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_85 -> m10_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_85 -> m10_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_91 -> m10_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_2 -> m10_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_74 -> m10_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_74 -> m10_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_74 -> m10_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m10_74 -> m10_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_74 -> m10_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_74 -> m10_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_74 -> m10_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_74 -> m10_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_74 -> m10_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_74 -> m10_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_211 -> m10_222  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_214 -> m10_217  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_214 -> m10_218  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_214 -> m10_219  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_214 -> m10_221  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_217 -> m10_219  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_212 -> m10_224  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_224 -> m10_224  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_338 -> m10_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_338 -> m10_347  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m10_338 -> m10_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m10_338 -> m10_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_338 -> m10_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_338 -> m10_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_338 -> m10_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_338 -> m10_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_338 -> m10_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_338 -> m10_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_339 -> m10_342  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m10_339 -> m10_347  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m10_351 -> m10_353  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_351 -> m10_354  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_351 -> m10_355  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_351 -> m10_356  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_352 -> m10_355  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_352 -> m10_356  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_340 -> m10_361  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m10_341 -> m10_344  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_344 -> m10_344  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_346 -> m10_358  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_346 -> m10_362  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_362 -> m10_362  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_11 -> m10_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_11 -> m10_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_12 -> m10_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_12 -> m10_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_12 -> m10_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_12 -> m10_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_12 -> m10_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_12 -> m10_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_12 -> m10_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_12 -> m10_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_12 -> m10_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_12 -> m10_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_12 -> m10_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_36 -> m10_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameHandling", style=dashed];
m10_36 -> m10_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_36 -> m10_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_36 -> m10_454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_36 -> m10_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_36 -> m10_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_447 -> m10_450  [color=darkseagreen4, key=1, label=resolvedTypeNameHandling, style=dashed];
m10_492 -> m10_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_492 -> m10_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_493 -> m10_500  [color=darkseagreen4, key=1, label=key, style=dashed];
m10_493 -> m10_505  [color=darkseagreen4, key=1, label=key, style=dashed];
m10_493 -> m10_508  [color=darkseagreen4, key=1, label=key, style=dashed];
m10_493 -> m10_509  [color=darkseagreen4, key=1, label=key, style=dashed];
m10_493 -> m10_513  [color=darkseagreen4, key=1, label=key, style=dashed];
m10_495 -> m10_497  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m10_495 -> m10_502  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m10_509 -> m10_511  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_498 -> m10_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_499 -> m10_501  [color=darkseagreen4, key=1, label=sw, style=dashed];
m10_503 -> m10_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_507 -> m10_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_504 -> m10_506  [color=darkseagreen4, key=1, label=sw, style=dashed];
m10_510 -> m10_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_512 -> m10_514  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_389 -> m10_392  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_81 -> m10_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_81 -> m10_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_81 -> m10_384  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m10_81 -> m10_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_81 -> m10_387  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m10_81 -> m10_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_81 -> m10_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_81 -> m10_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_81 -> m10_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_81 -> m10_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_386 -> m10_388  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m10_390 -> m10_390  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_391 -> m10_391  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_392 -> m10_392  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m10_234 -> m10_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_234 -> m10_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_234 -> m10_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_234 -> m10_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_46 -> m10_46  [color=darkseagreen4, key=1, label=converter, style=dashed];
m10_53 -> m10_55  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m10_53 -> m10_56  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m10_62 -> m10_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_69 -> m10_76  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_69 -> m10_71  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_69 -> m10_72  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_50 -> m10_52  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m10_50 -> m10_53  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m10_50 -> m10_54  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m10_50 -> m10_55  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m10_50 -> m10_56  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m10_75 -> m10_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_310  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m10_75 -> m10_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m10_75 -> m10_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_75 -> m10_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_303 -> m10_305  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m10_303 -> m10_317  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m10_303 -> m10_324  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m10_306 -> m10_321  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m10_308 -> m10_318  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_310 -> m10_312  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_310 -> m10_313  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_310 -> m10_314  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_310 -> m10_315  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_311 -> m10_314  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_311 -> m10_315  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_309 -> m10_317  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_231 -> m10_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_231 -> m10_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_231 -> m10_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m10_231 -> m10_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_231 -> m10_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_231 -> m10_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_231 -> m10_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_239 -> m10_241  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_239 -> m10_242  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_239 -> m10_244  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_239 -> m10_246  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_239 -> m10_248  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_240 -> m10_242  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_240 -> m10_246  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_254 -> m10_257  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_255 -> m10_257  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_96 -> m10_98  [color=darkseagreen4, key=1, label=employees, style=dashed];
m10_96 -> m10_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_96 -> m10_100  [color=darkseagreen4, key=1, label=employees, style=dashed];
m10_96 -> m10_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_96 -> m10_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_94 -> m10_96  [color=darkseagreen4, key=1, label=t1, style=dashed];
m10_101 -> m10_106  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m10_73 -> m10_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_73 -> m10_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_73 -> m10_293  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_73 -> m10_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_73 -> m10_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_73 -> m10_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_73 -> m10_76  [color=darkseagreen4, key=1, label=child, style=dashed];
m10_73 -> m10_75  [color=darkseagreen4, key=1, label=child, style=dashed];
m10_38 -> m10_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_38 -> m10_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_38 -> m10_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_38 -> m10_40  [color=darkseagreen4, key=1, label=actual, style=dashed];
m10_38 -> m10_41  [color=darkseagreen4, key=1, label=actual, style=dashed];
m10_275 -> m10_277  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m10_275 -> m10_279  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m10_24 -> m10_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_24 -> m10_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_24 -> m10_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_24 -> m10_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_24 -> m10_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_24 -> m10_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_230 -> m10_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_230 -> m10_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_230 -> m10_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_158 -> m10_160  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_158 -> m10_163  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_157 -> m10_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_157 -> m10_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_157 -> m10_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_157 -> m10_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_157 -> m10_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_113 -> m10_116  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_114 -> m10_117  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_115 -> m10_118  [color=darkseagreen4, key=1, label=p, style=dashed];
m10_115 -> m10_120  [color=darkseagreen4, key=1, label=p, style=dashed];
m10_196 -> m10_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_196 -> m10_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_197 -> m10_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_197 -> m10_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_268 -> m10_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_268 -> m10_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_268 -> m10_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_269 -> m10_271  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_269 -> m10_273  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_259 -> m10_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_540 -> m10_542  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m10_540 -> m10_543  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m10_80 -> m10_402  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m10_80 -> m10_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m10_80 -> m10_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_419  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m10_80 -> m10_421  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m10_80 -> m10_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_80 -> m10_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_404 -> m10_416  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_404 -> m10_430  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_407 -> m10_411  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_407 -> m10_412  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_407 -> m10_413  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_407 -> m10_415  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_411 -> m10_413  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_419 -> m10_421  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m10_419 -> m10_429  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m10_421 -> m10_423  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_421 -> m10_424  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_421 -> m10_427  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m10_405 -> m10_418  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_418 -> m10_418  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_422 -> m10_424  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_422 -> m10_427  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_162 -> m10_164  [color=darkseagreen4, key=1, label=actual, style=dashed];
m10_162 -> m10_165  [color=darkseagreen4, key=1, label=actual, style=dashed];
m10_165 -> m10_167  [color=darkseagreen4, key=1, label=o, style=dashed];
m10_165 -> m10_168  [color=darkseagreen4, key=1, label=o, style=dashed];
m10_19 -> m10_27  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m10_19 -> m10_22  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m10_20 -> m10_27  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m10_20 -> m10_22  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m10_79 -> m10_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m10_79 -> m10_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m10_79 -> m10_472  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m10_79 -> m10_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m10_79 -> m10_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_79 -> m10_81  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_79 -> m10_82  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_463 -> m10_465  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m10_463 -> m10_466  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m10_463 -> m10_485  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m10_463 -> m10_490  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m10_471 -> m10_486  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m10_474 -> m10_479  [color=darkseagreen4, key=1, label=escape, style=dashed];
m10_474 -> m10_482  [color=darkseagreen4, key=1, label=escape, style=dashed];
m10_475 -> m10_479  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_475 -> m10_482  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_475 -> m10_485  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_477 -> m10_481  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_477 -> m10_483  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m10_476 -> m10_478  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_476 -> m10_480  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_476 -> m10_481  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_476 -> m10_483  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_76 -> m10_330  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m10_76 -> m10_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_76 -> m10_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_76 -> m10_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_258 -> m10_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_531 -> m10_533  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m10_531 -> m10_534  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m10_331 -> m10_333  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m10_438 -> m10_442  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_112 -> m10_121  [color=darkseagreen4, key=1, label=values, style=dashed];
m10_112 -> m10_122  [color=darkseagreen4, key=1, label=values, style=dashed];
m10_545 -> m10_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m10_545 -> m10_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m11_199 -> m11_202  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_199 -> m11_204  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_199 -> m11_209  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_199 -> m11_213  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_206 -> m11_214  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m11_207 -> m11_214  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m11_210 -> m11_214  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m11_211 -> m11_214  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m11_543 -> m11_546  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_543 -> m11_574  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_543 -> m11_576  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_270 -> m11_274  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_270 -> m11_283  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_270 -> m11_285  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_273 -> m11_276  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m11_280 -> m11_285  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m11_39 -> m11_41  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationBinder", style=dashed];
m11_39 -> m11_43  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_39 -> m11_46  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle", style=dashed];
m11_45 -> m11_48  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m11_45 -> m11_50  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m11_44 -> m11_48  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m11_44 -> m11_50  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m11_129 -> m11_131  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_381 -> m11_393  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_381 -> m11_396  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_381 -> m11_399  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_381 -> m11_402  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_385 -> m11_391  [color=darkseagreen4, key=1, label=provider, style=dashed];
m11_385 -> m11_394  [color=darkseagreen4, key=1, label=provider, style=dashed];
m11_385 -> m11_397  [color=darkseagreen4, key=1, label=provider, style=dashed];
m11_385 -> m11_400  [color=darkseagreen4, key=1, label=provider, style=dashed];
m11_500 -> m11_505  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m11_500 -> m11_510  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m11_500 -> m11_517  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m11_500 -> m11_520  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m11_508 -> m11_524  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_515 -> m11_527  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_518 -> m11_530  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_506 -> m11_525  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_506 -> m11_510  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_506 -> m11_514  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_506 -> m11_528  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_506 -> m11_517  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_506 -> m11_531  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_506 -> m11_520  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_182 -> m11_185  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_182 -> m11_186  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_182 -> m11_187  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_182 -> m11_189  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_182 -> m11_191  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_182 -> m11_193  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_187 -> m11_190  [color=darkseagreen4, key=1, label=genericListType, style=dashed];
m11_84 -> m11_86  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_84 -> m11_88  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_312 -> m11_314  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_312 -> m11_315  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_312 -> m11_326  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m11_313 -> m11_315  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m11_313 -> m11_317  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m11_316 -> m11_321  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m11_316 -> m11_328  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m11_316 -> m11_329  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m11_317 -> m11_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_318 -> m11_320  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_319 -> m11_321  [color=darkseagreen4, key=1, label=members, style=dashed];
m11_319 -> m11_323  [color=darkseagreen4, key=1, label=members, style=dashed];
m11_323 -> m11_325  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m11_323 -> m11_326  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m11_323 -> m11_327  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m11_322 -> m11_324  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m11_322 -> m11_325  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m11_322 -> m11_327  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m11_322 -> m11_328  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m11_113 -> m11_115  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_422 -> m11_426  [color=darkseagreen4, key=1, label="out string", style=dashed];
m11_424 -> m11_426  [color=darkseagreen4, key=1, label="out string", style=dashed];
m11_237 -> m11_239  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m11_427 -> m11_433  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_431 -> m11_437  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_432 -> m11_442  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_432 -> m11_443  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_437 -> m11_437  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_437 -> m11_439  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_443 -> m11_443  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_439 -> m11_439  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_439 -> m11_441  [color=darkseagreen4, key=1, label=scope, style=dashed];
m11_91 -> m11_96  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_91 -> m11_98  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_95 -> m11_98  [color=darkseagreen4, key=1, label=bindingFlags, style=dashed];
m11_98 -> m11_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_232 -> m11_234  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m11_446 -> m11_448  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_446 -> m11_452  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_446 -> m11_453  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_447 -> m11_452  [color=darkseagreen4, key=1, label=bindingAttr, style=dashed];
m11_447 -> m11_453  [color=darkseagreen4, key=1, label=bindingAttr, style=dashed];
m11_450 -> m11_452  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m11_451 -> m11_460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_332 -> m11_465  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_464 -> m11_466  [color=darkseagreen4, key=1, label=fieldInfos, style=dashed];
m11_289 -> m11_295  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_289 -> m11_297  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_289 -> m11_306  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_289 -> m11_308  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_292 -> m11_295  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m11_292 -> m11_299  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m11_303 -> m11_308  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m11_170 -> m11_173  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_170 -> m11_176  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_170 -> m11_179  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_162 -> m11_164  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_162 -> m11_165  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_162 -> m11_166  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_162 -> m11_167  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_375 -> m11_379  [color=darkseagreen4, key=1, label=a, style=dashed];
m11_376 -> m11_378  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m11_107 -> m11_109  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_107 -> m11_110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_19 -> m11_21  [color=darkseagreen4, key=1, label=m, style=dashed];
m11_22 -> m11_24  [color=darkseagreen4, key=1, label=m, style=dashed];
m11_133 -> m11_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_133 -> m11_136  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_133 -> m11_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_133 -> m11_138  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_133 -> m11_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_133 -> m11_141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_133 -> m11_144  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_133 -> m11_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_150 -> m11_152  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m11_158 -> m11_160  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_242 -> m11_244  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_242 -> m11_245  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_242 -> m11_247  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_242 -> m11_249  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_242 -> m11_251  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_242 -> m11_252  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_534 -> m11_541  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_535 -> m11_540  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_470 -> m11_475  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>", style=dashed];
m11_472 -> m11_474  [color=darkseagreen4, key=1, label=nonPublicBindingAttr, style=dashed];
m11_474 -> m11_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_258 -> m11_260  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_258 -> m11_261  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_258 -> m11_263  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_258 -> m11_265  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_258 -> m11_266  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_54 -> m11_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_56 -> m11_66  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_56 -> m11_70  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_56 -> m11_74  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_56 -> m11_77  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_56 -> m11_79  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_61 -> m11_66  [color=darkseagreen4, key=1, label=current, style=dashed];
m11_61 -> m11_70  [color=darkseagreen4, key=1, label=current, style=dashed];
m11_61 -> m11_74  [color=darkseagreen4, key=1, label=current, style=dashed];
m11_61 -> m11_77  [color=darkseagreen4, key=1, label=current, style=dashed];
m11_59 -> m11_78  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_78 -> m11_78  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_68 -> m11_72  [color=darkseagreen4, key=1, label=writingAssemblyName, style=dashed];
m11_69 -> m11_76  [color=darkseagreen4, key=1, label=skippingAssemblyDetails, style=dashed];
m11_75 -> m11_76  [color=darkseagreen4, key=1, label=skippingAssemblyDetails, style=dashed];
m11_334 -> m11_486  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_334 -> m11_487  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_334 -> m11_488  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m11_334 -> m11_489  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_334 -> m11_493  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_485 -> m11_488  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m11_485 -> m11_489  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m11_485 -> m11_491  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m11_485 -> m11_497  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m11_490 -> m11_496  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_496 -> m11_496  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_215 -> m11_217  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_215 -> m11_219  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_215 -> m11_221  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_215 -> m11_223  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_215 -> m11_225  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_215 -> m11_226  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m11_28 -> m11_31  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m11_123 -> m11_127  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_584 -> m11_525  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_584 -> m11_528  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_584 -> m11_531  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m11_585 -> m11_541  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_586 -> m11_541  [color=darkseagreen4, key=1, label=string, style=dashed];
}
